var y = Ygritte
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(rule(( -270.22 ))) : "What do we say to the Lord of Death?"
def destroy(Jon){
	Jon -= dog;
	Sansa
}
def TABLE[rule(TABLE[COLS][ROWS] + -1 / betray(0.78,TABLE[0.44 * 26][1]) * -19,TABLE[y][( -betray(Arya,-rule(( -200.907 ),TABLE[89 * TABLE[-36][destroy(TABLE[-Arya][( x * betray(foo(-mislead(( ROWS ))),-x + ( COLS ),( -ROWS )) )],( Arya ))] / COLS][( TABLE[-54][--84 * 280.87] )])) * 640.733 )])][i] {
	( COLS )
}
def destroy(Jon,dog){
	( ( ( COLS ) / 850.257 ) );
	x
}
def bar(y,y){
	TABLE[-1][destroy(-( -ROWS ),ROWS)];
	TABLE[ROWS + -Ygritte][-30] / 0.68
}
def mislead(y,Arya){
	if(-1){

} else {
	destroy(( -0.51 ));
	if(betray(ROWS * COLS,mislead(--89 + COLS / --1,0.11)) * protect(-( protect(TABLE[TABLE[( TABLE[-1][( mislead(( 98 ),COLS) )] ) - --68][( -COLS )]][( ( y ) ) - protect(740.99 - ( Sansa ),y)]) ),y) * -TABLE[TABLE[--94][-0.5] - ( y )][-Hodor - ROWS]){
	if(-11){
	Ygritte
}
} else {

}
};
	-51
}
def TABLE[-rule(( TABLE[--( 52 )][foo()] * 0.39 ))][j] {
	Jon /= protect()
}
var Sansa = Arya
def protect(Jon,dog){
	if(x){
	--0.54;
	ROWS
} else {
	y /= 55 - ( -0.27 );
	Ygritte += TABLE[COLS][-Sansa - foo(-640 / ( -49 ),( TABLE[660.06][Jon] )) * -1 * COLS] * Hodor;
	dog /= -0.53
};
	if(rule()){
	if(COLS){
	-950.95
} else {
	dog /= bar(--77,Sansa)
};
	if(Jon){
	Jon /= x
}
};
	if(( ( ( 0.23 ) ) )){
	y /= ( dog );
	COLS;
	if(TABLE[( ( ( -86 ) ) )][TABLE[-36][TABLE[Arya][( -( COLS ) )]]]){
	if(( ( -( 1 ) ) )){
	y /= 53
} else {
	if(ROWS - foo(-16)){

} else {
	Sansa;
	if(COLS){
	if(x){
	Jon *= Sansa;
	if(--14){
	if(1){

} else {
	Stark + ( -900.073 );
	if(foo(COLS,( --Hodor / y ),mislead(Sansa)) * ROWS / ROWS){
	Stark;
	0.01;
	if(mislead(COLS,Jon,foo(dog,Jon,-( 99 * ( 1 ) )) * Arya)){
	Ygritte /= --0.37;
	y += protect(73,destroy(( x + TABLE[0.24 - ( COLS ) * ROWS][betray(( 0.75 ),( -rule(betray(bar(-foo(),0.12)),-ROWS) ) + -36,ROWS)] - -destroy(Stark - TABLE[dog + -foo() / bar(mislead(protect(Hodor),COLS,-13))][0.91]) - y ),rule()))
}
} else {
	y -= TABLE[( -1 - protect(-Ygritte) )][rule(Hodor)] / protect(COLS,-0.43)
};
	Ygritte -= x
}
} else {
	if(--( 0.75 )){
	--Hodor;
	if(COLS / ( betray(destroy(ROWS,1),mislead(( mislead(Sansa) ),--betray(mislead(x) + ( destroy(-53,y) ),COLS,ROWS))) )){
	if(-35){
	y -= -COLS
} else {
	--( foo() )
}
}
} else {
	mislead(-protect(COLS + ( ( Ygritte / ( 55 ) ) ) + -( --y ) + foo(destroy(foo(-1)) - 0.61 * -0.54,0.55) / Ygritte,-( TABLE[mislead(TABLE[Jon][COLS] + 1)][69] * ( ( ( Stark ) ) ) ),-0.73) * ( -( -Sansa ) ) * ( ( Arya * 0.57 / betray(-Stark,TABLE[Stark][COLS] * COLS * 1) ) + betray(foo(),-0.28) / COLS ),dog + destroy()) * TABLE[bar(( -ROWS )) / ----0.72 + -74 + -protect(1 / ROWS,betray(( betray() ) / -79,( -protect(0.92,destroy()) ),( -980.357 )))][( -Stark )]
}
}
} else {

};
	Sansa *= -75
}
};
	Ygritte -= ( Jon ) + COLS + ( mislead(y) )
};
	if(dog + Jon - ( -Arya )){
	Arya -= ( y );
	if(COLS){

} else {
	Sansa -= ( ( -0.39 ) );
	if(-x * x){
	Jon /= destroy(TABLE[( TABLE[Ygritte][mislead(TABLE[x / 1][COLS],COLS - ( -rule() ) - rule(-COLS / destroy(rule(-20.886 - ROWS,0.99 - -Stark + ( ( mislead() ) ) / -COLS,COLS) / Sansa) + Jon,ROWS),( TABLE[COLS + 0.06][-y] ))] )][betray()])
} else {
	if(-betray(-( 97 ) - TABLE[COLS][ROWS])){

} else {
	if(( -Stark ) + -( 1 ) + -( -0.34 ) * -Stark){
	if(( ( 0.04 ) )){

} else {
	rule(TABLE[( rule(Stark) )][1 / 1 * --Stark + dog],( Sansa ) * bar() + COLS / -0.48,-COLS);
	Arya /= mislead(TABLE[( COLS )][TABLE[rule(--( COLS ) / -Jon)][( -28 ) - -x]],Sansa,mislead(protect(87,-betray(--1,-protect(( TABLE[COLS][-42 / ( COLS )] ) * ROWS + 0.52))) / 1,Jon,destroy()) / 0.62)
};
	if(mislead(-170.05)){
	if(Arya){

} else {
	if(-protect(y,foo(foo()) / ( rule(-11,42,Hodor - protect(ROWS,rule(--540.2 - 0.84),( ( y / rule(Sansa,Arya) ) - -93 * dog ) / -( ( -15 ) )) * y) ),( bar(TABLE[rule(ROWS,5)][( 0.61 )],750.137,( -ROWS ) - rule(COLS)) )) / -Hodor){
	if(--1){
	x * rule(y)
};
	Arya += -940.01
} else {
	x;
	if(Stark){
	if(bar(-28,( 1 ) / ( ROWS ))){
	Sansa;
	if(TABLE[TABLE[Jon][-x + ( TABLE[mislead()][TABLE[mislead(-0.02,--Ygritte)][-dog]] ) + destroy(-89,( 0.18 ),( Ygritte * foo(( -1 ),( -TABLE[-Ygritte + Stark][Ygritte] * ( ( TABLE[( TABLE[---0.45][( Hodor ) + Stark] )][mislead()] ) ) )) ))]][ROWS]){
	if(COLS){

};
	( ROWS )
}
}
} else {
	if(COLS){
	dog *= COLS
}
}
}
};
	( COLS )
} else {
	Stark /= -dog / COLS + destroy(y,870.02) - -1;
	if(1){
	x -= ( protect(-0.04) );
	if(Ygritte){
	if(mislead() / y){
	Sansa += -0.85;
	Jon /= ( mislead(Hodor / ( COLS * -13 ) + ( ( --0.33 ) )) )
}
}
} else {

}
}
} else {
	if(-COLS){
	--COLS - COLS - Hodor / 0.49;
	if(Arya){
	Arya -= -Stark + protect();
	Hodor -= bar(mislead(ROWS));
	if(COLS * ( ( mislead(TABLE[-TABLE[ROWS][Jon]][y],( COLS ) + betray() / foo()) ) ) + Sansa){
	( protect(-Arya * Stark,( TABLE[dog][-80.074] ),TABLE[-0.24][protect(Stark,protect(Ygritte,-( Stark ) / ROWS,foo(x,( -74 ) - ( mislead() ) / TABLE[foo(( Ygritte ),-protect())][foo(COLS,0.52)],TABLE[COLS - mislead(mislead(Sansa,foo()))][betray(betray(TABLE[x][x],( -mislead(-320.58) ),COLS),( COLS ))])))]) );
	Hodor *= -y / -Hodor - Sansa
}
} else {
	Sansa -= -Arya
}
} else {
	protect(0.58)
};
	Ygritte *= Hodor
}
};
	if(-Arya * ROWS){
	( 14 );
	Hodor;
	Jon
} else {
	dog *= ( betray(-1,46) );
	if(-26 + Sansa){

}
}
}
}
}
}
} else {
	ROWS;
	Hodor += -ROWS
}
}
assert dog : "What do we say to the Lord of Death?"
var x = -( COLS )
def betray(Arya){
	( destroy(( 95 * mislead(( -Stark * --foo(( COLS ) + destroy(betray(),ROWS) * -310.95 + 0.32,( Ygritte ) * --dog + Sansa * TABLE[TABLE[y][-0.61 / ( ( protect(-20.8,COLS) ) )]][-0.74] + TABLE[Ygritte][ROWS / -COLS],COLS) )) )) ) - -1;
	if(TABLE[foo(( Sansa ) + ( ( rule(-31 + COLS * ROWS,--19 * --mislead(dog,--( COLS ),-Stark) / rule(( y )),( ( foo(TABLE[ROWS][ROWS],COLS) ) )) ) ),-foo(destroy(bar(),80,69)) - -( x ) / rule(COLS,-TABLE[TABLE[-( dog + ROWS * bar(x,-mislead(-COLS + Ygritte + -1) / ( Stark )) )][-Arya * ( TABLE[Sansa][-10] )]][foo(Hodor,TABLE[betray(ROWS + ROWS * COLS)][-bar(-COLS)] + ( ( destroy(rule(( --( -( ( -TABLE[-1][Jon] * betray(dog,--60 * TABLE[-x * ( bar() )][betray()]) ) ) ) ),betray(( -15 ),( protect(betray(foo(dog),protect(( destroy(Jon,88) ),rule())),rule(( --( -ROWS ) ),mislead(foo(----TABLE[0.46][-Arya] - mislead(Stark * ( bar() + bar(1,-TABLE[TABLE[bar(( --foo() - Sansa ),( COLS ),--0.08)][ROWS]][ROWS],COLS) ),betray(betray(Hodor / TABLE[( -0.66 )][-COLS]),-97 * -0.02)),( ( ( COLS ) ) / rule(foo(( TABLE[foo(TABLE[--x][-mislead()]) * rule(-18,Arya)][-Hodor] ) - destroy(-33 * ( TABLE[0.52][( Hodor )] ),dog),( 0.95 ),-0.08),( TABLE[foo(-Arya / y * 1,-( 0.3 ),bar(-y - rule() - mislead(bar(( ( --( ( ROWS ) ) / 1 - -1 ) )),ROWS)))][ROWS] / -0.52 ) - Stark,Stark) ),-1),dog)),( COLS + -destroy(-( Jon ),TABLE[-dog][--TABLE[TABLE[( COLS )][ROWS]][y] + -Jon / Arya / destroy(bar(COLS))]) )) ))) + ( Ygritte ) * ( -Ygritte ) * -----1 - Arya - -1 * ( x ) - ( x / ( ( 1 + ( ( -betray(-0.57,TABLE[Hodor][( ( ( ( -27 ) ) - 40 / mislead(( ( -bar() ) ),0.48 / ( -Arya ) + ( ROWS )) / Stark ) )] / ( -47 )) ) ) ) * Arya ) )) ) ))],0.92) / Arya - 0.1) - y][( -x / -67 ) * ROWS]){
	Ygritte += -Ygritte
}
}
def foo(dog,x,Jon){
	-y;
	if(-( -foo(-rule(Arya,TABLE[Sansa][ROWS],foo(1,--foo())),Ygritte,0.94) )){
	-mislead();
	if(x){
	if(-COLS){

} else {
	dog /= Hodor;
	if(Arya){

}
}
}
}
}
var x = mislead(-rule()) * -x
def TABLE[rule(mislead(ROWS),( ROWS ),--TABLE[Arya][ROWS / COLS] / ( 0.94 ))][i] {
	if(0.42){
	-Hodor
} else {
	if(ROWS){
	if(-( y )){
	if(dog){
	dog /= COLS
} else {
	--dog;
	ROWS + foo(Stark + 61);
	if(protect(( mislead() ) / TABLE[Hodor][Hodor])){
	if(( 65 )){
	--1 / 97 / 0.39
}
} else {
	if(410.74){
	Jon;
	Jon *= x;
	if(COLS){
	if(( protect(-0.14,-protect(Jon)) )){

} else {
	if(rule(( 0.95 ))){

} else {
	y += betray(protect(Ygritte),protect(( ( ( -0.04 * betray() ) ) ),bar(mislead())));
	Sansa
};
	( ( destroy(destroy(--Ygritte + -0.95),Ygritte,protect()) ) );
	if(0.74){
	if(Ygritte){
	if(0 / Ygritte){
	y;
	Stark /= ( ( protect(0.53) ) )
};
	-destroy()
};
	Stark;
	mislead(Jon,( foo() ))
}
};
	Hodor *= 0.92
}
} else {
	if(-TABLE[TABLE[y - Sansa][rule(( foo(-39 - destroy(TABLE[ROWS][rule(( ROWS ),Ygritte + 35)]),foo() - -130.893) ),---88 * mislead(0.58,--45))]][Arya + Sansa / ( dog ) + 430.3]){
	Stark *= protect();
	dog /= destroy(650.204,( -mislead(ROWS) ) / ROWS);
	if(COLS / bar(-ROWS - destroy(ROWS) + dog) - dog){
	if(( rule(betray(--1,protect(-440.312,rule(bar(foo(),-0.6) / ( ( -rule(-( TABLE[COLS][ROWS] ) * -( Stark ),protect(),COLS) ) ) + Stark / Sansa,betray(-880.498,( -( ---TABLE[-91][--TABLE[TABLE[betray(mislead(-23)) - protect(--17,-0.02) * -41 - rule(-13)][( TABLE[protect(( destroy(-COLS,-660.81,( -1 / TABLE[TABLE[( Arya )][( mislead(0.07,80) )]][Sansa] - y )) + -protect(( ( --8 ) ),-530.0734 + destroy() + TABLE[1][rule(( -Sansa ) - ( x * destroy(TABLE[mislead(mislead(470.7),Hodor) / bar(( -( Sansa ) + 300.743 ),390.2 - bar(dog,bar(( betray(-0.53) ))) + -rule(0.88) - COLS)][ROWS],mislead()) ),28)] + Jon / TABLE[-230.7][( COLS )]) ),mislead())][-rule(destroy(-x,--( -Jon ) * -92 + -Hodor) * ROWS) / ( destroy(-0.02 / -980.77,rule(60.4)) ) * -y] )]][--destroy(COLS) - ( destroy() )] - betray(TABLE[-( -( mislead(x,( ROWS - bar(-42) * protect(TABLE[betray(COLS,dog,56 * -( ( COLS ) ))][-45]) ) - ( 280.8808 )) ) )][COLS],( COLS ))] ) ),-1) + destroy(betray(-( COLS ) / COLS * ( COLS ),TABLE[COLS * ROWS][-0.37],( 1 )),y)))) / Stark) )){
	TABLE[foo(-1,TABLE[TABLE[x][0.9]][( 1 )] / ( ( -0.17 ) ) * ( bar(Jon,mislead(y,bar())) ) - rule())][( betray(( protect() ),-( Jon )) ) + Hodor];
	if(--0.67 / ( -0.4 ) - COLS){
	TABLE[betray(TABLE[( 600.44 ) - ( y ) - 440.111][-0.44])][( -----0.93 / ( --TABLE[( -0.31 )][( 930.005 )] / TABLE[0.06][Hodor] * ( ( -( Hodor ) ) ) - x / -90.74 ) - -0.58 * betray(( ( -( TABLE[( ( ( -1 ) ) ) - COLS][-0.94] * x * --( -290.442 ) + protect(ROWS,y + ( protect(bar(820.3,( protect(Arya,-TABLE[rule(( COLS ),( Stark / Stark * -0.93 ))][760.7125] + destroy(-bar(( ROWS * ( COLS ) ))),ROWS * 0.26 / bar() * TABLE[Jon][-0.49]) - Stark ))) ),rule(-0.64,( Hodor ) + bar(--TABLE[( -x / -( -1 + y ) )][ROWS]) * Sansa,640.39)) + y ) * Arya / Sansa / -46 / -bar(Hodor,foo(Sansa)) ) ),-830.9) * destroy() - y )];
	Sansa *= ( ROWS )
} else {
	y *= -1 + betray(-76);
	y *= Stark;
	if(COLS){
	dog -= -0.66
}
}
};
	betray();
	1
}
} else {
	Jon /= Ygritte;
	( 9 / ( -foo() / ( ROWS ) ) )
};
	if(destroy(--TABLE[-0.9][( ( Sansa + COLS ) )])){
	if(-( protect(( --( ROWS / TABLE[ROWS][ROWS] ) - -0.13 ),bar(COLS,TABLE[Ygritte][foo(-y + TABLE[( foo(destroy(Hodor),destroy(-betray(-1),( y ))) )][mislead(rule(--dog,( -550.8294 ),Hodor),-630.79)],-y,bar(protect(TABLE[-( Stark ) / destroy(ROWS + 0.45,36)][--47],foo(TABLE[( ROWS )][( -1 )],-( -x ) + Arya,foo())),76 + -protect(ROWS,ROWS))) + 26],( --foo(( mislead(-70.74,ROWS) )) ))) )){
	Stark -= -dog
} else {

};
	Ygritte /= COLS;
	if(foo(rule(COLS),Jon,-19)){

}
}
}
}
}
} else {
	dog
}
} else {

}
};
	if(rule(250.74,TABLE[mislead(y,-COLS,TABLE[destroy(Arya + -860.2,36,mislead())][betray(-1)] - Jon)][ROWS],COLS)){
	y += ( x );
	Stark -= -10;
	TABLE[TABLE[Ygritte][-1]][( TABLE[-1 - -17][-1] )]
} else {
	Hodor *= betray(COLS,ROWS,330.1) + Jon + Stark + ( 39 );
	if(ROWS){
	-170.49
} else {
	( protect(( ROWS ),betray(-0.91)) );
	Ygritte += --ROWS
}
};
	Jon += -760.9
}
def foo(x,Ygritte){
	y
}
def foo(Stark){
	if(0.75){
	Hodor += 0.73;
	70
};
	( Stark * -0.55 )
}
assert x : "Nothing burns like the cold."
def rule(Hodor,Hodor){
	Sansa -= destroy(0.48,-1,y)
}
def TABLE[-TABLE[Arya][Arya]][k] {
	if(-0.68 + Arya){
	-TABLE[-dog][mislead(( ROWS ) - --( TABLE[COLS][Sansa] * rule(-x) * rule(Sansa) / ROWS ) - bar(TABLE[Hodor][-0.87],dog / protect(Hodor,ROWS),( COLS )))]
} else {
	if(TABLE[TABLE[-91][( y + ( TABLE[-Jon][protect(TABLE[-( mislead(( foo(protect(foo() / -43) * y - Jon,-y) - protect() * ( -720.51 - 99 ) + -Ygritte * rule(destroy(-Sansa,-x),-COLS) * ( -34 ) ),-0.9 - destroy(ROWS),( -TABLE[rule(1,( y ))][COLS + dog] + ( Ygritte ) )) )][-( ( foo(betray(-49,( ( -29 ) / Hodor + Stark )),mislead(COLS,Ygritte * --92,-( Jon )),990.06) * Jon - COLS ) * dog )],( -68 ))] - 1 ) )]][( -( protect() ) )]){
	0.74;
	mislead(TABLE[-( ROWS ) / betray(-TABLE[mislead(Stark,610.8167 * ( 290.7 - ( -0.59 - protect(( -( -23 ) )) ) ),( Stark ))][81] - ( 79 ),( COLS )) / ROWS][-dog])
} else {
	mislead(( -82 ));
	if(( ROWS )){
	-0.95
} else {

}
}
}
}
def TABLE[COLS][i] {
	Jon -= COLS
}
def mislead(Sansa){
	if(-( ROWS )){
	if(--dog){
	if(ROWS){
	y += -Jon;
	TABLE[( ROWS )][-COLS] + ( Hodor )
} else {
	x += -Stark;
	x /= -COLS;
	TABLE[foo()][COLS] + Stark
};
	if(-COLS){
	Ygritte += Stark;
	x *= 1
} else {
	Arya
}
} else {
	Sansa -= ( -x );
	if(68){
	Stark /= 0.1
} else {
	Arya;
	if(( 0.16 - protect(ROWS,( protect() / Sansa ),--bar(x - bar() * rule(( Sansa ),-mislead(Jon,--73) - dog + rule(( ---0.67 + rule(-81 - ROWS / -0.96,mislead(Arya - -( bar(Hodor) ),mislead(),0.25) + destroy(Arya,foo(TABLE[44 + -71][( -44 )],COLS,x / ( -COLS ))),y) ),mislead(-0.35),0.67)))) )){
	ROWS
} else {
	--COLS;
	Hodor += foo(-83);
	Stark /= ( TABLE[0.28][COLS] )
}
}
};
	x += Arya;
	y -= TABLE[x][( 68 )]
};
	--610.349;
	if(Ygritte){
	if(97){
	y
};
	if(-( --ROWS + TABLE[COLS][Stark] )){
	Jon -= dog
} else {
	COLS;
	if(foo(ROWS)){
	0.79;
	if(ROWS){
	---( ( 96 ) ) - protect(COLS,Stark) + 0.53;
	Stark
} else {
	if(TABLE[ROWS][Arya]){
	Sansa += -( protect(destroy(Sansa,foo(-TABLE[TABLE[-( ROWS * ROWS / -1 )][-0.94]][( Stark )],-rule(( Sansa - mislead(-76) ),-dog))),-TABLE[0.19][( COLS ) * -1]) );
	if(--34){

};
	if(-19){
	dog /= 27
} else {
	if(ROWS){
	-TABLE[betray(-Arya,( -44 )) * COLS / ROWS][rule() - Stark] * mislead(1,( TABLE[-betray()][1] ))
}
}
};
	COLS
}
} else {
	if(-86){
	destroy(destroy(Ygritte,ROWS));
	y *= ( ---96 * ( protect(TABLE[( mislead(( ( TABLE[-Jon * ROWS / -Stark / ( Ygritte ) + destroy(-ROWS + COLS - ( Hodor ),Hodor)][Arya] ) + -4 ),dog,-ROWS) / Jon )][--foo(Ygritte,destroy())],mislead(-( -Arya ),ROWS)) * ROWS ) - Stark / mislead(COLS,Arya) );
	Ygritte *= 0.25
} else {
	Ygritte /= ROWS;
	Arya /= -26;
	Arya += -0.91
};
	Ygritte -= 260.99
}
}
} else {
	Ygritte += 13
}
}
def betray(){

}
assert --( COLS ) / rule() / y : "What do we say to the Lord of Death?"
def TABLE[ROWS][j] {

}
def rule(Arya){
	if(protect(Arya,COLS) - mislead(( Stark ),( betray() ))){

} else {
	Stark -= COLS;
	dog -= rule(( ROWS ),92 + --0.56 + ( -( -( -6 ) ) ))
};
	Ygritte += TABLE[( betray(dog,-( bar() )) )][-COLS];
	if(-TABLE[---6][foo(COLS,betray(-TABLE[( ( Arya - ( --0.15 ) / foo(( -ROWS ),0.09) ) )][-TABLE[Arya][protect(41,Jon)]] + ( bar(bar(--destroy(destroy(COLS - betray(betray(( Ygritte ))) / TABLE[-COLS][0.39],dog - ( ( dog ) - Ygritte / -13 - -TABLE[( ( Hodor ) )][-1] * betray() * ( ( ( -50 * COLS ) ) ) ) * COLS,( protect() )),( -destroy(-1) )) + Ygritte,foo()),-Sansa) )) - COLS)]){
	Sansa
} else {
	if(mislead(450.5)){
	Hodor += COLS;
	if(Jon){
	y;
	if(( -Arya )){
	y -= ROWS;
	Arya += -1
}
} else {
	0.89
};
	( --Arya )
};
	if(protect(-foo(),( ROWS ),y)){
	bar(0.69)
}
}
}
def bar(){
	if(-8){
	if(0.99){
	y /= ---87
};
	if(destroy(( ROWS + TABLE[rule(Stark,Jon)][ROWS] )) - x){
	if(-1){
	if(-860.2){

} else {

};
	if(( -foo(dog + x,1,Sansa) * ( -0.07 / ( 42 ) ) )){
	if(-( destroy() * betray(-betray(-25,Sansa),protect(),dog) )){
	Arya /= y * Hodor;
	if(x){
	y /= --440.5
}
}
} else {
	990.44
}
}
}
};
	Stark *= ROWS;
	Sansa += COLS
}
var y = COLS
var Hodor = -betray() * Stark
def TABLE[-mislead(-x,x,Arya) * 85][k] {
	mislead(( COLS ),-( protect(-Hodor,-0.43 / bar(Arya) / --( ( -mislead(-y) - ( ( -Sansa ) ) / ( ( ( protect(1) ) ) ) ) ),Arya) ) * ----( foo(x,Hodor) ) * betray(( -( ( rule(4,-( 20 ),ROWS) ) ) ) / Sansa,y) * ( Jon ) + Ygritte)
}
assert COLS : "Nothing burns like the cold."
assert -Hodor : "Winter is coming"
def bar(){
	if(33){

}
}
def protect(Sansa){
	if(0.49){
	if(ROWS){
	if(Hodor){
	Ygritte -= foo(TABLE[-1][x],Arya)
} else {
	Sansa -= ROWS;
	Jon /= -COLS
};
	-( y ) + -TABLE[Stark][TABLE[COLS * dog][-( COLS )]]
}
}
}
var Ygritte = ( mislead(-0.62 * -620.144,TABLE[TABLE[( destroy(-COLS,-destroy(-( Stark ) + y)) )][-mislead(--0.77) + ROWS]][Ygritte] + -1) )
assert 0.43 : "One can not simply parse himself"
def TABLE[-dog][i] {
	Stark /= betray(( -1 ),Ygritte);
	if(COLS){
	Ygritte -= Stark;
	if(TABLE[COLS][( -590.178 )]){
	if(( -Arya )){
	x -= protect(COLS + -0.05)
} else {

};
	if(TABLE[-Ygritte][0.36 - -0.1]){
	-24
}
}
} else {

};
	Sansa += -TABLE[--( ( Jon ) )][( ( protect(-foo(destroy(),betray(( ( 0.97 ) ),29),protect(( -0.72 ),( protect() ),( ( TABLE[ROWS][-Jon] ) ))),( Ygritte )) ) )]
}
def TABLE[Ygritte][i] {
	Arya += ROWS;
	TABLE[x][-TABLE[Stark][-COLS] / Arya];
	( -21 / COLS ) - -1
}
var dog = foo(-( Stark ))
def destroy(){
	if(770.4){
	Sansa *= -( Sansa - foo() )
} else {
	Jon /= ( COLS )
};
	if(destroy(Hodor,( Stark ) - TABLE[-0.79][COLS])){
	Jon -= -Sansa;
	Arya += Arya
}
}
def betray(Jon){
	0.2
}
def bar(y,Sansa,Sansa){
	bar(Arya,( ( ROWS ) ));
	Ygritte *= 1
}
var Stark = Stark
def TABLE[destroy(Ygritte / COLS,--ROWS) / TABLE[( ( 73 ) ) + Sansa * ROWS + TABLE[( -14 )][bar(-0.12,rule(Arya))]][-1 + y]][k] {

}
def bar(Sansa){
	Hodor /= ( ROWS )
}
assert -protect(-55 / 0.52,( TABLE[bar()][y] ),Stark) + 0.79 : "One can not simply parse himself"
def TABLE[( -310.383 )][j] {
	rule()
}
assert protect(Arya,mislead(betray(COLS),150.552),( -0.99 )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ( --75 )
var Hodor = destroy(-( -Jon ) - ( ROWS ))
def betray(y,Ygritte){
	if(COLS){
	Arya /= betray()
} else {
	if(COLS){
	if(-ROWS){

};
	Arya *= destroy(-Sansa,Ygritte)
};
	if(COLS){
	TABLE[-86 - -Stark - COLS][-TABLE[TABLE[Stark][-ROWS]][Stark + foo(protect(),-960.1)]]
} else {
	Arya;
	-0.51
};
	if(TABLE[4][54]){
	-Sansa;
	if(COLS){
	Hodor * --COLS;
	if(( Hodor )){
	if(COLS){

}
} else {
	if(-bar(bar(Hodor,ROWS),y,TABLE[-990.08 * ROWS][( Hodor )])){
	if(mislead(ROWS * ( ( TABLE[( destroy() ) / rule(Stark,-0.01,-0.74) + destroy(foo(),-bar(( destroy() ) - ( TABLE[foo(Arya)][850.9051] ),-13) / Arya) - ( --Sansa ) / Sansa / COLS / betray() / x * betray(TABLE[( -Stark )][Hodor]) / Jon][COLS] ) ) + destroy(foo(Ygritte),--1) / y * -Hodor)){
	Jon /= ROWS
};
	if(91){
	if(destroy(y,( -( ( 910.5969 ) * --30 ) + Stark ))){
	if(( -( TABLE[-440.193 * ROWS][-( ROWS ) * 45] ) + Jon )){
	x -= TABLE[-1][-0.07]
}
};
	32
}
};
	COLS
}
} else {
	Ygritte
}
}
};
	Stark;
	if(( ( 1 ) ) + -910.3 * COLS){
	-TABLE[betray(bar(TABLE[-Sansa][Sansa]))][Ygritte];
	dog -= ( -ROWS )
}
}
def destroy(y,y,dog){
	Sansa *= -betray(( rule(-rule(x)) ) / ( ( foo() ) ),Arya) * bar(( 98 ),--rule(Jon + TABLE[ROWS][Arya / -200.41],Jon))
}
var x = Stark
assert ( mislead(-0.62,( 220.15 )) / ( -6 ) ) : "What do we say to the Lord of Death?"
assert foo(mislead(x,-( -foo(540.3748) )) / -dog,-( y / betray() )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Ygritte){

}
def betray(x,Stark){
	Sansa *= 590.268;
	Ygritte /= destroy(COLS)
}
var Hodor = 1
var y = -COLS
assert TABLE[Sansa][( ( Sansa ) )] : "Fear cuts deeper than swords."
def mislead(){
	ROWS;
	( rule(mislead(),-0.36) )
}
def destroy(dog){
	if(Hodor + -950.4){
	Hodor *= Ygritte
} else {
	Ygritte;
	Hodor += -23;
	( 1 )
}
}
def TABLE[Stark][i] {
	dog /= mislead(bar() / Jon,---( -0.83 ) - ( Arya ) * -180.78 * ( 600.1 ))
}
def destroy(Stark){
	--1;
	Arya -= ( Hodor )
}
def TABLE[protect()][j] {

}
assert bar() : "Fear cuts deeper than swords."
var dog = TABLE[-0.43][0.62]
def TABLE[--360.975 * mislead()][i] {

}
def bar(x,y){
	dog /= betray(Stark,--9,TABLE[Hodor][betray(-80)] - ( rule(Stark - --( Arya ) * TABLE[-( ( 0.85 ) )][protect(Jon)] / 150.1667 - ROWS,y) ) + COLS - -42)
}
assert ( -ROWS ) : "Fear cuts deeper than swords."
assert -( ( -0.55 / protect(bar(foo(TABLE[-690.5935][-mislead(( -0.95 - ( -( ( -70 * 62 ) ) ) / TABLE[TABLE[-0.69][ROWS] + ( 300.131 )][-24] * Ygritte * dog ),-COLS)] / ( dog )),( ( -1 ) )),-0.98) ) ) : "Fear cuts deeper than swords."
assert protect(rule(destroy(-72)),-betray(( Hodor * ( ( foo(COLS / Stark * Sansa) ) ) ))) : "What do we say to the Lord of Death?"
assert bar(( bar(1,betray(Arya,ROWS,-Arya)) + Stark )) - bar(( ( -1 ) ),-mislead(-58,-x,Ygritte - --( 380.2438 ) + protect(dog,TABLE[( TABLE[betray(Stark,370.87)][-destroy(dog,TABLE[-0.6][82 + ROWS],Jon)] )][Ygritte]) * 960.944)) : "Fear cuts deeper than swords."
def TABLE[COLS][i] {
	dog *= -ROWS;
	-1;
	if(0.01){
	destroy(-0.88,-89,-( mislead(-Hodor,ROWS) ) + Arya)
}
}
def TABLE[-120.53][j] {
	Sansa *= COLS;
	Stark /= ( -( ( -destroy(( -( mislead(-7,-x) ) )) ) - TABLE[Hodor * destroy(-( -bar(destroy(( -0.78 ),Sansa + -destroy()),0.26) ))][COLS] ) - mislead(Arya,foo(rule(Stark,protect(Hodor,-TABLE[0.92 - 48][240.2554 / -( -bar(Arya / ( ( 10.593 ) )) + Stark )]) / ( --mislead(( Hodor )) ),TABLE[y - ( rule(( betray(( Hodor )) )) )][( -0.98 )]),mislead(( ( 51 / ( TABLE[ROWS][---ROWS] ) ) ))),ROWS / y) );
	Sansa
}
assert Ygritte : "What do we say to the Lord of Death?"
def bar(){

}
assert rule(mislead(-protect(bar()),rule(y,foo(-60,( ROWS )),Arya),( ROWS ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert x : "Winter is coming"
var y = -( x )
def foo(Jon,Jon,Hodor){
	Ygritte -= ( --TABLE[55][-ROWS / -COLS] * 0.64 )
}
def TABLE[protect()][k] {
	40 - ( TABLE[--8][bar(protect(rule(COLS,( x )),60.72) / ROWS - x,mislead(protect()) / 93,0.86 - --Hodor + ROWS + COLS) * -0.21 + ( 7 )] ) * TABLE[TABLE[-980.3239][-0.86]][bar()] - -840.1
}
def mislead(Arya,Hodor){

}
var Jon = ROWS + rule(-1,30.914,COLS)
def foo(Sansa){
	if(-protect()){
	if(ROWS){
	if(ROWS){

};
	Hodor
};
	if(COLS + --Jon){
	Stark -= ( Stark );
	if(destroy(0.82,1)){
	( -82 );
	TABLE[1 / x * 0.08 * ( ROWS )][-foo(destroy(( -0.09 ) + Jon),( Arya ))]
};
	if(bar(-Hodor)){

}
}
}
}
def foo(Jon){
	x *= --0.91 * betray(( dog ));
	if(0.81){
	-94
} else {
	if(-980.435){
	-300.1;
	( protect(0.66,( protect(Arya,TABLE[72][rule() * bar(mislead() * betray(ROWS,COLS,---TABLE[ROWS][ROWS]))]) - ( -ROWS / 970.86 ) )) )
} else {
	destroy(1);
	if(-bar(TABLE[mislead(COLS)][bar()]) + -0.95){
	( -880.29 )
}
};
	Sansa += 0.69 / mislead(COLS - -betray(ROWS - ( -rule(protect()) ),-Hodor - -0.76),0.76)
};
	TABLE[ROWS + ROWS / protect(0.85,-( bar(foo(),ROWS) ))][betray(protect(betray(1,( -66 ))))]
}
def TABLE[( bar(Jon) )][i] {
	if(Hodor){
	if(-Stark){
	-( Ygritte - -87 + --( ( --890.1 ) - --19 ) ) + COLS;
	--0.05
} else {
	if(840.3){
	TABLE[74 - dog][betray(-78)];
	-0.31;
	destroy(TABLE[( -protect() - -bar() )][-80],protect(-1)) * destroy(-790.37 + -COLS,Jon)
} else {
	--63;
	Ygritte -= ( 26 )
}
};
	( TABLE[rule()][dog] ) - ( -1 * Stark / COLS + ROWS * Stark / -65 )
} else {
	if(-Ygritte){
	if(( dog )){
	COLS;
	if(protect(20 + ( -Hodor ),Stark)){

} else {

};
	if(bar(ROWS)){

} else {

}
} else {

};
	Hodor;
	if(TABLE[80][TABLE[-TABLE[y][Sansa / 0.52]][( -6 / -bar() )]]){
	if(ROWS){
	if(TABLE[( ( x ) / -700.866 )][-COLS]){
	Hodor *= -Stark;
	Arya /= -COLS;
	if(bar(Jon)){

}
} else {
	Hodor += COLS + ( ( x ) );
	if(-91 * foo() + ROWS){

} else {
	if(-43){
	betray();
	-790.583
} else {
	x += COLS * rule(ROWS,99)
}
};
	Stark -= ( --2 )
};
	betray(970.85,--60.526 * 82 - Jon,--1);
	protect(mislead()) + protect(ROWS,-0.8)
} else {
	if(-mislead(( x ),-13)){
	Ygritte
};
	y *= mislead(ROWS);
	Hodor -= TABLE[-47][( -0.41 / dog )]
}
} else {
	if(Jon){
	ROWS
} else {
	if(0.32){
	x += ROWS
} else {
	Sansa /= ( ( Arya ) ) + -0.93;
	if(dog){
	x -= --( -( ROWS + -dog - -TABLE[-( COLS )][-protect(0.97 - -73,TABLE[( COLS )][( COLS )] / TABLE[Jon][ROWS],--920.74) * --0.49] ) );
	if(( rule(( ( -( -90.44 ) ) ) - ( -mislead() ) - foo(Arya),ROWS) )){
	if(protect(56,-( ( rule(foo(),Stark,foo(x,( ROWS ) / ROWS * betray(-0.57))) ) )) * 0.54 / -( Stark )){
	Jon -= 63
} else {
	Sansa /= rule(-70);
	-( -ROWS / TABLE[rule() - bar(Hodor)][mislead(Hodor) - foo(dog,---ROWS / 0.44)] + -destroy(80.447,--TABLE[0.69][Sansa] * ( ( foo(Arya,Sansa,-x - ROWS) ) ) + -( y ),ROWS) );
	( COLS )
};
	Arya += COLS
}
} else {
	--COLS + ( 0.5 ) - protect(( TABLE[TABLE[-TABLE[Jon][( -0.28 )]][( bar() )]][Jon] ),( ( ( betray(dog) ) ) )) + betray(dog,-foo(TABLE[TABLE[Stark - Hodor][870.66]][rule(( -( COLS ) + protect(betray(--Hodor,-31)) + ROWS ))],TABLE[bar(mislead())][TABLE[TABLE[COLS * COLS][( -36 + Sansa )]][-betray(betray(-670.539,TABLE[-ROWS + protect(( mislead(-( ( ( Ygritte ) ) )) ))][dog]),destroy(TABLE[ROWS][Ygritte]))]]) * 1) - ROWS + ROWS + ( ---( x ) ) - -Sansa
}
};
	dog *= -0.8
}
}
} else {
	dog *= Arya;
	Sansa -= rule(TABLE[mislead(foo(--protect(89 + bar(),y,betray(protect(-Arya) + Jon,( 52 ) * foo(( -Sansa / -TABLE[( -280.019 )][dog] ),betray(--34 * destroy(COLS,( TABLE[destroy(( x ),-1)][Arya] ),-TABLE[x][TABLE[destroy(dog) * 610.9948][COLS]]) - dog,0) + -0.98),rule(mislead(TABLE[-Jon / foo(-510.9,TABLE[( -36 )][bar(Jon,-destroy())],Sansa)][-95]),-TABLE[-79 + bar(--0.93)][x]) * betray(TABLE[x][( ROWS )],-x * rule(-44,-82,Ygritte)))),rule(-ROWS,--21,0.35)))][Sansa])
}
};
	if(destroy(--240.71,COLS)){
	Arya *= ( 0.86 ) - ( ---Hodor )
}
}
def TABLE[Hodor][j] {

}
def TABLE[COLS][k] {
	0.59;
	if(--1){
	if(( ( -( ( -protect(-rule(0.32),( mislead() )) ) ) ) * -1 * -1 )){
	if(x){
	Ygritte + -( 58 + mislead(destroy(Sansa,rule(Hodor),Hodor) - Jon,mislead(COLS,( x )) / TABLE[TABLE[-y][TABLE[Arya][-570.73]]][foo(-( -310.4 ),-( ROWS ) * Sansa / Sansa)] - protect(1)) ) + foo(destroy(),Hodor)
} else {
	if(0.34){
	COLS
}
}
};
	Ygritte -= ( 0.11 )
}
}
def rule(Arya,dog){
	Jon /= ROWS;
	Hodor += ( --430.976 )
}
assert betray(20,-( Jon ) + -22 * -Arya,-Jon) : "One can not simply parse himself"
var Arya = 1
assert rule() - 1 : "Winter is coming"
def TABLE[Hodor][k] {
	0.19;
	if(-( -0.53 )){

} else {

};
	TABLE[( ( Jon ) )][-mislead(ROWS / -1 + foo(protect(-0.48,-destroy(dog,( y )))),Hodor)]
}
assert ( Arya ) : "Winter is coming"
def TABLE[Jon][k] {
	if(bar(( -0.66 ))){
	if(destroy(2,( -Sansa / y / -( Stark ) ),ROWS)){

};
	if(-( -x )){
	x *= ( foo(TABLE[-ROWS][-23],Hodor,0.38) )
} else {

}
};
	if(-71){
	Stark *= Jon;
	if(TABLE[-Sansa][Jon]){
	ROWS
};
	y
}
}
assert --Hodor : "Winter is coming"
def mislead(Sansa,Arya,Stark){
	if(TABLE[--ROWS][-betray(Sansa,--( -COLS * ( dog ) ) - -( TABLE[COLS][--0.67] )) * -COLS]){

} else {
	dog *= ( -1 ) * foo(Arya,ROWS);
	Arya -= bar(0.77) / -( Sansa - COLS + -13 );
	Jon *= mislead(COLS)
};
	-( Stark )
}
def rule(){
	TABLE[( dog )][17]
}
var y = -destroy(COLS)
var Hodor = Ygritte
assert -0.68 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[rule() / ( mislead() ) * TABLE[COLS][-0.14]][i] {
	destroy(47,-( -0.49 ))
}
assert -18 : "Nothing burns like the cold."
var Ygritte = -74 + -0.91 - Ygritte - ( dog )
def TABLE[x][i] {
	dog += 960.783
}
assert ( mislead(Sansa) + Hodor ) : "What do we say to the Lord of Death?"
var Ygritte = COLS
assert ROWS : "Nothing burns like the cold."
def bar(Ygritte){
	if(ROWS){

}
}
assert TABLE[y][-destroy(-TABLE[COLS][y / ( -destroy() )]) - -mislead(ROWS - mislead(foo(( ( Stark ) ),( ROWS ),( ( Jon ) )),-0.6,( -protect(ROWS,COLS,TABLE[( -Jon )][protect(-TABLE[1][56],--rule(-TABLE[-1 - COLS / ( y )][-1]))]) )),betray(( -mislead(rule(-54 * --72,foo(( 38 ),( -foo(( -0.28 ),( protect(( ROWS ) * Sansa) )) )) * -0.07,betray(protect(TABLE[ROWS + Ygritte + destroy(COLS)][destroy(( 0.48 ),TABLE[( foo(COLS) )][( Jon )]) * 0.03] / -( -TABLE[Jon][destroy(-( rule(( -0.85 ),80.28,-ROWS) ),Hodor,-Arya)] + y ) / -x - --Stark - -ROWS + ( -41 ) * Stark),-0.32 - 66) / rule(COLS,Ygritte) / -betray(Jon,( -TABLE[-y][Stark + TABLE[TABLE[y][destroy(mislead(dog,( TABLE[ROWS][-1] ),ROWS),---ROWS,( COLS / TABLE[-0.92][x + COLS + -( -( 0 + x ) )] ))] + ( Stark )][63]] ),rule(Stark * -bar(-( mislead(-0.92) ) * Arya) / betray())) / mislead(-15,COLS,26)),betray(-0.23)) ) / Sansa,-58,-81),( ( x ) / ROWS ) + COLS)] * -320.78 : "Winter is coming"
def destroy(Sansa,Sansa){
	if(( COLS )){
	if(bar()){
	Jon /= --( x );
	Hodor += -dog / ---ROWS - protect(dog) + --Hodor
} else {
	--Hodor * foo(-TABLE[-COLS][y] / Sansa / -( y ),COLS);
	Sansa -= 0.26
}
} else {
	Arya += --protect(Ygritte)
}
}
var dog = -bar(-COLS)
def mislead(Arya){
	ROWS
}
var dog = -betray(Sansa / COLS)
var Ygritte = ( 0.81 ) / -0.32
assert Sansa : "One can not simply parse himself"
def TABLE[( TABLE[( Hodor )][( Hodor )] )][j] {
	if(-0.66){

} else {
	if(( Ygritte )){
	foo()
};
	rule(Jon);
	Sansa -= -TABLE[Arya][( COLS )]
};
	if(bar()){

}
}
assert destroy(-y * 1) : "Fear cuts deeper than swords."
def TABLE[ROWS * Arya - ROWS * TABLE[-( mislead(-26) * ( COLS ) ) + 32][ROWS]][j] {
	if(TABLE[( --32 )][TABLE[Hodor][-protect(( Arya ) + 620.4901)]]){
	Hodor += COLS
};
	dog -= protect(mislead(-26,( mislead(TABLE[( 83 )][( foo() )]) )),-65 + foo(( mislead(protect(x,Ygritte),Stark) ) / -550.7105 - dog))
}
def TABLE[-( -1 )][i] {

}
def TABLE[ROWS][i] {
	( Sansa );
	( rule(Stark,ROWS,--x) );
	if(-ROWS - --0.03 * bar()){
	Ygritte -= rule(-40,-Hodor,-( --protect(foo(( -0.21 ) - -( ROWS ) + COLS - -x - mislead(( TABLE[Ygritte][Hodor] ),Ygritte,-86),( Stark ))) ));
	if(( destroy(24,Sansa,--0.54) )){
	---y
}
} else {
	if(Jon + 65){
	if(ROWS){
	y += -43;
	Hodor += -52;
	if(-( TABLE[( 59 )][Arya] )){

} else {
	Ygritte -= ( foo(-66,Jon,COLS) )
}
};
	if(ROWS){

} else {
	mislead(( -0.27 ),betray());
	if(( 6 ) + 0.15){
	( TABLE[COLS - ( 77 ) * ROWS][TABLE[TABLE[56][( -0.38 ) / -53]][ROWS]] );
	Sansa -= -0.5
}
};
	if(-1){
	if(dog){
	dog *= Stark
}
}
} else {

}
}
}
def TABLE[Jon][j] {
	if(( mislead(( -betray(-Arya) )) )){
	if(480.869 * -bar(Sansa) * x){
	rule(( COLS ),( TABLE[-95][Ygritte] ));
	if(protect(ROWS,Sansa)){
	Jon /= bar() * destroy()
} else {
	if(ROWS){

} else {
	y -= Sansa;
	Stark *= COLS;
	Hodor /= COLS
}
}
} else {
	if(( ( protect(ROWS,Ygritte) ) + ( COLS ) * -mislead(--COLS - Ygritte + ( 0.99 ) - -COLS,96 + -foo(-0.23 * Arya,dog)) * betray(( bar(( 0.27 )) ),-x / rule(COLS,foo(Sansa,foo(Jon)))) ) + ROWS){

} else {
	COLS
};
	-mislead() + ( -0.28 );
	if(destroy(TABLE[( -mislead(bar(COLS,dog)) )][COLS - rule(COLS,-61,1)])){

} else {
	if(x){

} else {
	if(y){
	Stark /= ( mislead() )
}
};
	-Arya
}
};
	Sansa /= Jon
} else {
	-0.82
};
	COLS
}
def TABLE[betray() - Arya][k] {
	if(0.62 * bar()){
	Sansa /= Hodor - ( -81 );
	if(TABLE[( -betray(ROWS,ROWS / betray(( COLS ),Ygritte)) )][-37 - protect(x,-90.9)]){
	Sansa += Sansa;
	( bar(mislead(--Ygritte + --37,protect(( mislead() ),( -betray(48 - ( COLS ),-rule(),betray(-betray(( destroy(( betray() ) + mislead(43),-COLS + --( x )) ),Arya,-( TABLE[COLS][-56 - 0.26] )),( betray(rule(),( --COLS )) )) * Hodor + foo(bar(96,dog),-( ( 420.773 ) ))) ))),Ygritte) )
};
	ROWS
} else {

}
}
assert -COLS : "What do we say to the Lord of Death?"
def bar(y){
	y += -810.91;
	if(Stark){
	if(Hodor){

} else {

}
};
	if(0.28){
	if(protect(mislead(TABLE[ROWS][30],1,destroy()))){
	if(-1){
	COLS
};
	( -1 * 1 );
	0.56
} else {

};
	if(-COLS){
	protect(mislead(( -76 * 0.6 ) / Hodor) - 1)
}
} else {
	Arya += 0.59
}
}
def foo(){
	-TABLE[-Arya - foo(Jon,( 70 ),y * y + -betray() - COLS) - foo(x,mislead(x,-y) * 0.43,COLS) / Sansa][Ygritte];
	if(Hodor){

}
}
def TABLE[Arya][j] {
	TABLE[foo(ROWS,( 1 ))][ROWS] * bar() - ( --( ROWS ) - Sansa / TABLE[dog][( Stark ) + Sansa] ) + betray()
}
def destroy(Stark,Jon,Jon){
	protect(0.17,--1,destroy(Jon) / ( -foo(( Jon ),1) ));
	Ygritte *= -( ( betray() ) );
	Ygritte /= --1 * ROWS
}
assert bar(foo(260.3,TABLE[-TABLE[TABLE[-( Stark * foo(1,ROWS) ) - ROWS - -0.53 + destroy() - Arya + foo(-0.57,destroy(96)) + 0.07][Sansa - Hodor]][-76] * Hodor][--45],ROWS) + dog,mislead(( -550.4 + --( Sansa - ( x ) ) ))) : "Fear cuts deeper than swords."
assert TABLE[Arya][--1] : "One can not simply parse himself"
def betray(){
	Sansa *= 610.639 * -( destroy() );
	y -= mislead()
}
def TABLE[dog][k] {
	Stark -= COLS
}
assert dog : "What do we say to the Lord of Death?"
def TABLE[( protect(betray(TABLE[x][ROWS]),rule(TABLE[ROWS][betray()],-1,( -mislead(mislead(1,--71),1) ))) ) * Sansa][k] {
	if(COLS){
	if(mislead(Ygritte,Arya,-ROWS)){
	Ygritte += Stark
} else {
	dog += bar();
	-680.73;
	Sansa *= ( -( ( 32 ) ) - ( --1 + -TABLE[ROWS][( -0.83 ) - ROWS] ) ) - Hodor + 840.1702
}
} else {
	if(4){
	( Jon )
}
};
	Jon += foo(( ROWS ),foo())
}
assert ROWS : "One can not simply parse himself"
assert ( 0.87 ) : "Fear cuts deeper than swords."
assert destroy(foo(),COLS) : "Fear cuts deeper than swords."
def protect(x,Sansa,x){
	-rule(74) / -COLS;
	foo(--430.5 + 0.56 / mislead(-Hodor * ( -91 ),-Sansa) * Ygritte / Ygritte)
}
var Stark = COLS
var dog = 810.56 + betray()
assert TABLE[dog][0.21 / -protect(ROWS,---36 - TABLE[y][TABLE[-1][foo()]] - 54 * -COLS)] : "Nothing burns like the cold."
assert --71 : "What do we say to the Lord of Death?"
assert dog : "What do we say to the Lord of Death?"
assert x + ( y ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[x][k] {
	Stark += -25
}
assert Arya : "Fear cuts deeper than swords."
var y = ( ( 0.76 ) )
var Arya = Jon - ROWS
assert -( -foo(Sansa) * -56 ) : "Fear cuts deeper than swords."
def destroy(Stark,dog){
	if(COLS){
	if(( Ygritte ) - ( -88 )){
	dog;
	Arya += 0.98 * -870.87 / ( Jon )
};
	if(-800.2374 + ( 830.76 - -58 )){
	foo(( ROWS ))
};
	if(COLS){
	mislead(-( -440.36 ),betray(830.88,COLS) / COLS);
	if(-Sansa){
	if(Sansa){
	-350.776;
	y *= 890.913;
	if(x){
	COLS;
	( dog ) - TABLE[-( --66 )][( destroy(dog) )]
}
} else {
	-( COLS );
	Stark /= foo(dog)
};
	COLS;
	Hodor += dog / Sansa
}
} else {
	if(( dog )){

} else {
	if(0.18){
	if(TABLE[-betray(-TABLE[27][-ROWS] / dog,TABLE[( Sansa )][TABLE[dog][1000.43]])][( Hodor )]){
	if(( mislead(( -( TABLE[-Sansa / x][( -TABLE[TABLE[-1 / ( ROWS )][Sansa]][980.568] )] ) ) / ( foo(--1,COLS * dog + mislead(dog,dog)) )) + betray(betray()) * --COLS + bar(protect() * protect(0.01,( mislead(870.6,bar(destroy(dog + -80 + -( bar(Ygritte,Jon) ) + TABLE[Jon][betray()] * --0.25 / ( ( -foo(-( mislead(Sansa,-( -destroy(( -( -0.06 ) )) )) ),rule(COLS,1),-74) ) ),( COLS )))) )),Sansa) )){
	if(bar(x)){
	foo(--32)
} else {
	if(-59 + TABLE[---( Stark )][betray(mislead(TABLE[COLS][ROWS]),-40.497) + -( COLS / -x ) * y + Stark - --COLS * -destroy(mislead(foo(1,-90,( betray(TABLE[( 73 ) + destroy(x,0.4)][0.82 - destroy()],-destroy(mislead() - ( ( x ) ) * 30.929 / ( destroy(y * TABLE[Jon][( x / TABLE[( Sansa )][-foo()] )],protect(Ygritte,( ( foo(TABLE[mislead()][TABLE[mislead(( 250.02 ),rule())][bar()]] - y,TABLE[-850.11 * foo(Ygritte,bar(y,destroy()) + -1,mislead(-betray(-protect(bar(TABLE[( TABLE[COLS][Ygritte] )][( TABLE[( TABLE[foo(TABLE[Sansa * bar(protect(--Arya),( protect(-bar(TABLE[COLS][bar()])) ))][0.4],destroy(),650.8) - TABLE[( ROWS )][-8]][dog] )][( -ROWS / foo() )] )] - Hodor),74) / Hodor + rule(TABLE[( -COLS )][91]) + ( mislead(( -1 )) ),Arya,-TABLE[0.29][-27]),bar(Arya),TABLE[( destroy(-0.66) )][60]))][( ROWS )]) - ( rule(50.328) ) ) ))) - 1 ),betray(1 - TABLE[COLS][COLS]),COLS) + -protect(-( -15 ) / protect(--550.518 + ( betray(0.91) ),protect(),bar(( protect(dog) )))),COLS) )),ROWS),-mislead(( destroy(-( 0.15 * destroy(y,200.6679) ),( ( dog ) / Ygritte - ROWS )) * --Sansa - dog ),TABLE[1][-protect(ROWS)],-foo() / -0.36 - ( protect(mislead(-TABLE[COLS][foo(( rule(( foo() / -23 ),-10,betray(x,0.53 / TABLE[--( 0.49 ) * -x][COLS]) + Stark) ),Stark - -mislead(bar(-17,COLS),0.49,Ygritte),x)],rule(protect(-foo(( ( mislead(x,--570.47 + ( TABLE[COLS + protect() / Arya][-350.1] * ( ( protect(COLS,( TABLE[-COLS][Stark] + -0.73 ) - ( -COLS / ---x ) / -1) ) ) )) ) ),( -Stark )),( -1 - ( destroy(( rule(Ygritte,betray(rule(Arya,32),destroy(Sansa),Hodor),rule(1 / -( -( ( Stark ) ) ) / rule(--0.55),rule(-43),-( bar(0.78,( -36 )) ))) ),-43) ) - -0.4 / COLS - x ),( -Jon - y * ( --0.21 ) )),-570.8)),0.81) )),-( mislead(-mislead(),-bar(bar(bar(rule()),( Ygritte ) / -ROWS,ROWS),0.38) - mislead(COLS,-( COLS ) - 75 / ( 900.277 )) * -mislead(protect(( ( TABLE[TABLE[foo(( ---destroy() + -ROWS / ( foo(-0.99,1) ) * 0.92 * TABLE[Hodor][0.09] - -ROWS ))][x]][protect(Arya)] ) )) - TABLE[( TABLE[-170.61][y] )][rule(foo(protect(--Sansa),Hodor,( ( COLS ) )) + ( COLS ),COLS + COLS)] + -1 * y * ( ROWS / ( ( -0.87 ) ) ) * bar(y,mislead(Ygritte)),bar(betray(( x * Arya )),ROWS - x,TABLE[0.33 * protect(-13,TABLE[-1][3 - ( -99 )])][destroy(ROWS,0.96)]),--( dog ))) ))] * Hodor){
	if(protect(TABLE[( mislead(-( COLS ),betray(-( bar() ),( --1 ) + ( -( mislead(foo(),ROWS) ) ) - 1) / -bar(--COLS)) / betray(0.22,1,( TABLE[44 - -39][bar(-86)] * ( ( -( Sansa ) ) ) / ROWS + -foo() / Ygritte )) )][ROWS],( Ygritte ),COLS)){
	Ygritte *= ( 550.932 )
}
} else {
	1 + ( ( ROWS ) )
};
	Jon += TABLE[rule(43,Jon) + Hodor * ROWS][betray()]
};
	if(( TABLE[( TABLE[Stark][destroy(-81,protect())] )][TABLE[mislead(TABLE[-0.76][Sansa],TABLE[Stark][0.93],-rule(91,-1,-50)) * ( -550.397 )][Stark]] ) * Stark){
	bar(COLS,--0.75 * -( --22 ) + COLS) + ( -protect(-( -Ygritte ) + 14,-880.5 / ROWS,Sansa) ) / ( COLS ) / --Arya - ROWS;
	if(--520.81){
	TABLE[dog][--79 + Arya] - 100;
	--81;
	if(2){

} else {
	Hodor -= dog
}
} else {
	Hodor *= ( protect(( -bar(bar(TABLE[-Arya][TABLE[y][-0.21]])) ),-Stark) )
}
} else {
	if(( 1 )){
	Sansa
} else {
	0.14;
	if(TABLE[protect(betray(protect()) + ROWS)][COLS + ( 60.8 * betray(--dog * -( bar(ROWS,-98) )) ) * Ygritte - ( Sansa )]){
	Stark;
	Ygritte -= ( rule() )
}
};
	-mislead(betray(-( Ygritte ) - --TABLE[( --Hodor )][-1] + rule(( Stark ) * -0.72,-COLS),-41,destroy(Hodor,-( -0.82 ),COLS * --destroy(betray(Hodor,rule(bar(26,protect(TABLE[ROWS + Hodor][--31 - foo(ROWS,0.87 * foo(dog,( ( ROWS ) ),---0.49))],-960.74 - -dog * Arya - 0.83 - ROWS),Jon),dog))) + Hodor - 1)))
}
} else {
	x += ( -360.18 )
};
	COLS;
	if(x){

}
};
	( x );
	-betray(foo(Arya,dog)) + protect() / --( TABLE[-Stark][( 0.19 )] ) * -betray(-Stark)
};
	x /= ( ( ( COLS - destroy(TABLE[Arya][protect()],mislead(),-0.59 / COLS) * ( betray(0.5,COLS) ) ) ) * COLS )
}
}
};
	dog += -Hodor;
	ROWS
}
def TABLE[Ygritte][k] {
	dog /= y;
	Stark -= 82;
	if(-0.99){
	if(ROWS){
	( ( -8 ) )
};
	TABLE[( -Arya )][dog];
	( ROWS )
} else {
	if(COLS){
	if(-6){
	( ROWS )
}
} else {
	-1 / Stark;
	COLS;
	if(( -( ( TABLE[destroy(protect(-0.25,ROWS,-71))][1] ) ) - -Jon )){
	-( COLS );
	if(( ROWS + -betray(( TABLE[bar(ROWS)][TABLE[( TABLE[betray(x)][dog] )][( ROWS )]] ) - x) )){
	dog -= ROWS
} else {
	Ygritte *= bar();
	Sansa *= ( COLS )
}
}
}
}
}
var Sansa = ( -510.83 )
var Jon = -73
def TABLE[( -TABLE[( --( betray(COLS,-ROWS - ( 75 / TABLE[--0.21 - 0.99 * TABLE[ROWS][y]][---1] ) + y) ) - -68 )][0.44 + ( foo(protect()) ) / -690.31] )][j] {
	( y )
}
def destroy(Jon){
	( Sansa ) * ( 18 )
}
var Hodor = COLS
def TABLE[protect()][k] {
	if(-TABLE[( x )][COLS] + TABLE[betray()][-1 - --x - destroy(( -1 ))] - bar(bar(),ROWS - 1 * Ygritte)){
	Sansa;
	Arya *= Jon;
	dog += -0.63
} else {
	Jon += ROWS * Stark
}
}
var Hodor = Jon
def rule(x,Hodor,Arya){
	protect(-mislead(( 96 ) - 0.87),-0.12);
	Hodor *= -COLS + -ROWS / -protect(( 72 ),mislead() / protect(mislead(( -ROWS )) * ( ( ROWS ) ),( rule(( 1 ),-370.78,foo(TABLE[destroy(-mislead(),foo(destroy(protect(),ROWS),( ( 510.6133 ) )))][TABLE[destroy(betray(--0.61 / ( ROWS )) + COLS,-mislead())][betray(( ( rule(destroy(),foo() + --0.94 / -( -COLS ) * ( COLS ) / ( betray(x,protect(( ( -ROWS ) ))) )) ) ),foo(( 780.7012 )),-0.09) * destroy(mislead())]])) ),( 2 )))
}
def TABLE[--( ( protect() / betray(COLS) ) )][k] {
	x *= 1
}
assert rule(( y ),ROWS - y,mislead(COLS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	if(( ( protect(foo(x,-protect(TABLE[Hodor][-x] - ( ( 0.06 + betray(-0.33,( -Sansa )) ) ),( ( ( foo(Ygritte,--0.51,--x) ) ) * ( rule(( dog * -1 ),1) + -48 + Sansa ) )),( Hodor )),--COLS) - TABLE[Jon][mislead(-COLS)] ) - Ygritte )){
	Ygritte += COLS
};
	if(0.51){
	if(TABLE[--dog][73]){
	if(Jon){
	if(COLS){
	mislead(0.37);
	if(530.06){
	if(COLS * protect(betray(Sansa,dog),63)){
	destroy();
	y -= mislead(( -0.48 + TABLE[-0.45][( 54 )] + --1 ),dog)
} else {
	Jon /= destroy(22,betray());
	if(x){
	y /= Hodor;
	Sansa /= 20
} else {
	Jon *= -( y )
}
};
	if(Sansa){
	Hodor -= x
}
} else {
	68;
	if(Sansa){

}
};
	if(Stark){
	if(1){
	Ygritte += betray()
}
} else {
	1;
	if(-TABLE[-protect(-670.314) / TABLE[ROWS][Stark]][( TABLE[mislead(---1,Ygritte,( ( TABLE[Sansa][destroy(( -foo(-0.05 / -Jon) ))] ) ))][-82] )] - --foo(--560.6,( ( Sansa ) ) + --0.76 - 98,x)){
	Arya -= Stark
} else {
	y -= ( foo() );
	99 - rule()
}
}
} else {
	--0.08 + -( -1 ) * foo(-( 990.55 / -80.2687 / ( protect(Ygritte) ) ),Hodor)
}
} else {
	if(rule(bar(protect(TABLE[-( ( --ROWS ) )][-75])) * bar() + TABLE[( ( -0.88 ) ) * -Stark][foo(1)] + Stark / ( rule(-ROWS) )) + -TABLE[ROWS][protect(( -( COLS ) ),TABLE[( ROWS )][( -dog - --destroy(-x * protect(),dog) + 48 - betray(-protect(Arya,( betray(TABLE[foo()][Stark]) ) / COLS,foo(( Hodor )))) / 1 )]) / Stark / y]){
	x *= ( 0.64 );
	dog *= betray(dog)
} else {
	Stark *= Ygritte
}
}
} else {

}
} else {
	destroy(( Sansa ),-871,( y ));
	if(x){
	Ygritte /= ( 0.33 ) * -0.69
}
}
}
assert protect(mislead(-( TABLE[COLS - -Arya][-TABLE[bar(( COLS ),( TABLE[TABLE[destroy()][0.46]][mislead(( -1 - 1 ),0.33 - Ygritte / ---( -ROWS - -protect(1,Hodor - rule(bar(protect(betray(( -Arya ),TABLE[Ygritte][ROWS],Stark - mislead(--mislead(( 45 ),-ROWS,( -bar() ) / ROWS / Ygritte),mislead()))),-730.3,-1) * -75 * Arya,mislead()) / 0.11 / COLS,TABLE[TABLE[10][Hodor]][-TABLE[Jon][destroy(( ROWS ),bar(),( Jon ))]]) ) / -( -ROWS ) * --0.95)] * 0.84 ))][betray(Stark)]] ) + ( 20 ),Hodor),TABLE[-foo(--74 * -94 / -28 / -0.39,protect(( bar(COLS / -Hodor + rule(Sansa,-x)) ) / dog),--91) * COLS - ( --Arya )][ROWS]) : "Fear cuts deeper than swords."
def betray(Hodor){
	( -0.66 )
}
def TABLE[( foo(ROWS) )][k] {
	( Ygritte );
	x -= -( ( -TABLE[COLS][-20.1] / ( 0.05 ) ) )
}
def TABLE[rule(COLS)][j] {
	( -0.44 )
}
var Jon = ( 1 )
def destroy(y,Ygritte){
	Arya;
	Hodor += 690.076
}
assert --370 : "What do we say to the Lord of Death?"
var Arya = -0.47
def TABLE[TABLE[TABLE[-( Sansa ) * ( ( Arya ) )][ROWS]][81]][k] {

}
var Stark = -0.01
var Stark = TABLE[betray(COLS,( ROWS ),dog * Jon + y / -ROWS + -betray(150.11,-62) * foo(ROWS,-betray(rule(-COLS - ROWS - 0.2 / -540.442,TABLE[690.204][0.16] - ( Sansa - 1 + -( ( TABLE[380.4266][( mislead() )] ) ) / dog ) * ROWS),-1,TABLE[TABLE[-( 940.25 )][y]][( Ygritte )] * COLS)))][1]
var y = ROWS
var Jon = COLS
var Hodor = TABLE[( -COLS * TABLE[-0.4 * 85 * TABLE[0.34][0.06]][-0.83] )][destroy(-ROWS,54)]
assert ( Ygritte ) : "One can not simply parse himself"
def destroy(Jon){

}
def betray(y,Stark,y){
	if(TABLE[1][-ROWS * ( --rule(( ( --73 ) ),-rule(ROWS,x)) + TABLE[( destroy(-destroy(41,dog + Arya) - ( -rule(( COLS * destroy(betray(-17,( Hodor / -protect(protect(-rule(-ROWS,Hodor,COLS) + dog,( TABLE[0.24][--87 * betray(-72,mislead(ROWS),--1 * TABLE[mislead(( dog ),protect(--( foo(( 0.79 )) ),rule(-5,dog) - TABLE[( ( -1 ) )][-ROWS] / 87),-( COLS ))][foo(betray(mislead(protect(-destroy(),-( rule(destroy(TABLE[0.68][0.98 * rule(protect(protect(ROWS),COLS),0.86,-( --Hodor - destroy(ROWS,destroy(COLS,-x),--protect(rule(TABLE[( bar() ) + -800.4 + bar(COLS)][--11] + protect(TABLE[( -mislead(( -53 ),foo(betray(betray() * -bar(Hodor - -9,betray(-( -destroy() / foo() / -COLS ),( -TABLE[-( rule(bar(Ygritte,1,mislead(COLS,( ( ( TABLE[( Hodor )][--6 + rule(betray(mislead(-1,rule(--ROWS,betray(TABLE[-850.167 - --( 1 ) * bar(-0.76,destroy(),Arya * Hodor) / ( -0.93 )][( 1 )] / 13),foo(Ygritte) * 8),COLS),mislead(-Stark)) + -0.72) * -COLS] ) ) ))) - ( TABLE[-0.65][( -100 ) + foo(-0.18,y)] ),-0.46) )][( --98 ) / ( protect() * ( 0.15 ) )] / mislead(ROWS,foo(COLS)) + ( Stark ) * ( ( TABLE[Jon][TABLE[--0.81][-( 1 )]] ) - 1 ) )) - --0.44),x)) / -mislead(Hodor * ( ( -510.8 ) ),( y ),mislead(bar(--0.89),-COLS)) * ( rule(( -( -COLS - y ) )) + 0.5 )) )][( ( -2 ) )]),-98 * protect()),-( -49 ),Hodor) + mislead(Jon,betray(),Ygritte)) - -protect(destroy(ROWS,ROWS,Hodor),betray(-( -1 - ( -x ) ),ROWS),-0.91) + ( ----betray(Hodor) / ( Stark ) ) - ROWS - -1 - 1 )) * Stark],( 10 ),ROWS)) ),rule(( -0.74 )))) - COLS,bar()))]) / x] ) + COLS)) * ROWS )),foo(-76,( 0.72 ))) / ---protect(ROWS,Arya) )) ) / -280.7271 * Hodor) )][-3] - -bar(-( mislead(y) )) )]){
	0.1;
	Jon -= destroy(Ygritte) - ( -0.45 + -39 ) / y
};
	Stark -= dog
}
assert ( Arya ) - -0.01 : "One can not simply parse himself"
var Ygritte = --0.91
def betray(y,dog){

}
var Hodor = dog
def TABLE[1][i] {
	Arya -= COLS;
	if(foo(ROWS + Stark * Arya,-1,Stark)){
	dog -= x;
	-x * betray(( ROWS ),-dog,Hodor) * TABLE[destroy(mislead(Arya),--76,( 120.39 ))][-rule(( TABLE[ROWS * ( -0.36 )][-Sansa] ),0.17) + ( Arya ) * -( x ) / destroy(protect(Stark,COLS) - ( Ygritte ),COLS)];
	Jon /= TABLE[foo(--COLS,betray(foo() - -mislead(-protect(-1000.58 / Ygritte,-1,Stark)) - --dog / dog - -Stark,( 0.06 ) / mislead()) - COLS,( -Sansa ))][Hodor]
} else {
	y /= betray(rule(0.39,-COLS,TABLE[rule(TABLE[Sansa][-0.84],-0.29,foo(-29,protect(destroy(-COLS,betray(Jon)))))][COLS]),-ROWS)
};
	if(( dog ) / foo()){
	if(( TABLE[x][-65] ) - foo(y,-1,protect(58 - bar(ROWS),Hodor * Sansa))){
	Hodor;
	Sansa /= -0.07;
	if(bar(dog) - ( Jon ) / -ROWS){

} else {
	if(foo(Sansa,-75)){

} else {
	Jon /= y;
	Hodor /= ( ( foo(Sansa) ) ) / 65;
	if(-( -0.25 )){
	if(destroy()){

}
} else {
	if(betray(-rule(( foo(-destroy(dog),x) + COLS ),foo(ROWS,( ( bar() ) ),TABLE[( y )][rule(-98) + destroy(( ( ( ( 1 ) ) ) ))] + ROWS)) - dog / -0.51,x)){
	y -= -Jon * x;
	if(TABLE[ROWS][-0.33]){
	if(COLS){
	if(bar(Ygritte + ( --68 ),Hodor)){
	dog -= 0.05
} else {
	88;
	-ROWS + --( -0.28 ) / -Arya;
	Arya += rule(Stark)
};
	dog
}
}
};
	if(COLS){

};
	mislead(COLS,( COLS ),bar(COLS,-mislead())) * foo(TABLE[-620.6][COLS],y)
}
}
}
} else {
	if(( betray(--Arya) - -0.24 * ( COLS ) + -800.25 )){
	Hodor *= -160.68
} else {
	Sansa
};
	if(Hodor){

} else {
	-1
};
	Sansa -= --( -COLS )
}
}
}
def TABLE[( protect(( -860.9 ),y,0.34) )][k] {
	Hodor -= x
}
def TABLE[-Stark][k] {
	dog + --( ( ( -0.57 ) ) ) / dog + --0.46;
	bar(TABLE[TABLE[-0.96][Arya]][Ygritte] + ( -0.76 ))
}
def TABLE[( --TABLE[( ( foo(( -350.1067 ),-rule(--20.8,-betray(TABLE[bar(--( ( TABLE[betray(x,x,--destroy(TABLE[--1][---0.93],Hodor) + protect(COLS,( COLS ),( ( TABLE[( ROWS )][COLS] ) )))][dog] ) ),89 - Hodor - TABLE[( ( mislead(betray(COLS / betray(360.2,--TABLE[( 0.61 ) - rule(( Stark ),-TABLE[--TABLE[y][protect(betray(-ROWS,( COLS )))]][bar(Arya,-340.397)])][( ( 31 ) )]),Ygritte) - COLS) ) )][-( -0.71 )],rule(260.3) / Ygritte + --( -dog ))][Sansa] - bar(18) - 0.55 + 0.55) - foo(Stark,-30) + destroy(bar(),ROWS) + COLS * ( TABLE[---destroy(foo(-84,--99 + ROWS,( dog )),bar(-54 - ( COLS ),-dog),Ygritte)][( ROWS )] ),dog)) + -30 ) )][bar(50.807,rule(-COLS * -bar() * ( TABLE[bar(-COLS,rule(-0.15),-17)][Hodor] )))] )][i] {
	Jon -= Jon;
	ROWS;
	Arya += betray(1,41,mislead())
}
def foo(x,dog,Hodor){
	Stark /= Arya;
	if(Ygritte){
	( ( -( rule(( -58 ),TABLE[ROWS][COLS]) ) + Sansa ) / -0.43 )
} else {
	rule(betray(protect() + -COLS),( 0.55 ) + destroy(( 34 )),destroy(--770.1) - y);
	if(y){
	rule(Jon);
	if(COLS){
	if(-0.25 + ( 0.13 ) - rule(TABLE[0.41][COLS]) + mislead(( -52 ),-Arya * -9 - TABLE[-79][1] / --1 / TABLE[-( -80 ) * Ygritte][ROWS],TABLE[y][94]) + ( -( -Hodor ) )){
	protect(rule(),-( -TABLE[Stark + -1 * ROWS + foo(( ( rule(---93) * -mislead(-Stark + -( bar(( betray(TABLE[-0.88 / protect(-0.35)][rule(-protect(Hodor,ROWS,Sansa))],COLS,mislead(( TABLE[( Sansa )][-0.39 * -Sansa / ( 790.7 )] ),Stark)) ),-31) )) / ( TABLE[bar(( -( Arya ) )) + -1][rule(( y ))] - -13 ) ) - -TABLE[x][-TABLE[-65][-23 * -52]] ),rule(-foo(-ROWS,( 24 )) - ( -dog ),-65))][Arya] / -770.859 - ( -0.86 ) + Jon / ( betray(y,( -rule(-foo(( -( foo(( 1 - ( x ) ),( COLS + --0.22 ),( -76 )) ) ),790.585),-Sansa) * TABLE[Arya][-0.29] - COLS )) ) ))
} else {

};
	Hodor *= ( --TABLE[-----destroy(foo(foo(-TABLE[( -0.86 )][-y] + foo(mislead(y),( Jon ) / COLS,--18),( Arya ),Hodor),COLS),--ROWS + Hodor + COLS / x * ( -( -Ygritte - COLS ) ) + -69) - -COLS * destroy(destroy(-( -TABLE[ROWS][TABLE[y][( foo(x + ----TABLE[COLS][( ( ROWS ) )]) ) * 1 / -( Hodor - ROWS )]] ))) / ( 11 ) - --1 / COLS - COLS / TABLE[( ROWS )][85 - protect(-( TABLE[-destroy(Stark,( protect(-0.61,COLS,foo(( Sansa ),70.467)) - protect(TABLE[-0.64][COLS] / -betray(( ROWS ),dog)) / 0.84 )) - ( -0.93 ) / destroy(TABLE[bar(( -1 ),-0.4)][COLS])][( ( ROWS ) )] )) * x - ROWS * 1]][12] );
	---bar(---41) + TABLE[ROWS][( -destroy(betray()) * --ROWS * TABLE[-760.122][-destroy(Sansa,bar(x,( ( Ygritte ) )),930.431)] * COLS * -0.33 * -0.57 * COLS / Stark )]
} else {
	Jon /= ( -bar(Arya,TABLE[Stark][--1 - -foo(( ROWS ))],61) )
}
} else {
	if(destroy(Sansa)){

} else {
	if(49){

} else {
	Stark -= Stark;
	( rule(( Stark ),Hodor,rule(COLS)) )
};
	Hodor *= ( destroy() );
	if(-0.12){

} else {
	Arya /= betray(betray(--860.414 + 60.114),11 + -( Sansa ));
	destroy();
	Hodor -= ROWS
}
};
	--0.76
}
}
}
def rule(Sansa,x){
	Arya += foo(betray(( ( 1 ) ) + ROWS,mislead(-25 * destroy(mislead(6),( ( -( ROWS ) * bar(-( betray() )) ) ))),-Arya - -450.58),29,-1);
	Arya /= ( ( -( ( -1 ) ) / -0.86 ) )
}
def TABLE[0.07 / bar(TABLE[-Arya][-0.12],bar(Ygritte) * TABLE[---66][betray(foo())])][j] {

}
var Hodor = betray()
var Arya = 0.3
var Hodor = COLS
def TABLE[3][i] {
	if(-0.14){
	-0.84
};
	if(-TABLE[( ( 92 ) - 0.48 )][x] * -COLS){
	-TABLE[-Hodor / -mislead()][mislead() - foo(-rule(0.77,( -0.63 ),TABLE[1][( 0.63 )] + Sansa - y * Stark * destroy(-( Arya ),Hodor)))] * ROWS;
	-0.53
}
}
def destroy(){
	x *= 1
}
def destroy(Sansa,y,Arya){

}
def betray(dog){
	if(Arya){
	x -= 7;
	mislead(0.24,ROWS);
	if(COLS){
	if(TABLE[( --1 - rule(-COLS,-900.8207) )][63]){

};
	if(protect(12 * -1) - mislead()){
	if(-foo()){

} else {
	Jon -= y
}
} else {
	if(bar(( ---56 - COLS + --( 1 ) / bar() + mislead(( COLS ),-betray(( ( ( protect() ) ) ),Hodor) * -Sansa - ( ( ROWS ) )) ),-0.45,Hodor)){

};
	TABLE[1000.004][Stark] - -49
};
	if(29){
	if(betray()){
	Ygritte *= Jon;
	Stark
}
} else {
	if(1){

} else {
	destroy(-570.6,COLS,-dog);
	y /= 0.1
}
}
} else {
	y -= 70
}
} else {
	ROWS;
	Arya *= y;
	Hodor /= 1
}
}
var Sansa = ( ROWS )
var Stark = Sansa
var x = betray(y,( Sansa )) / --0.26
def rule(Hodor,Arya){
	Jon *= y;
	if(-1){
	Ygritte *= ( ( Ygritte ) - Stark / -0.45 + Ygritte );
	Stark *= -0.88
} else {
	Ygritte *= ( destroy(y,--x + -( -rule(ROWS * ( ROWS ),-( --Jon / ( ROWS + ( bar(Ygritte,mislead(---56),bar(protect(ROWS),Stark + --( ( -( Jon ) ) ) / -1)) ) / --Jon ) + ( ROWS ) ),( TABLE[TABLE[ROWS][--x / ROWS + -0.79 / -( bar(mislead(-TABLE[-( ( Jon ) ) - -0.27][( Arya )]),( -protect(-protect(Arya),dog / -( ROWS )) ) + ( foo(-83) - 180.5 )) / 1 )] / protect(( protect(Jon) ) + Sansa)][Jon] )) ) / betray()) )
}
}
def bar(Stark,dog){
	x
}
def rule(dog,Arya,dog){

}
var Jon = -1 + 0.84
var Hodor = ( ( ( Arya ) - ROWS ) * rule(Ygritte,( 330.09 )) / bar(--0.57 + -1) )
def betray(){
	TABLE[COLS][Ygritte];
	dog *= destroy(y,COLS);
	mislead()
}
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = 420.908 - destroy(destroy()) / -1
var y = ( ( y ) )
def mislead(Jon){
	-protect(-90,dog + 0.24,Sansa);
	Stark *= Arya
}
var Hodor = --( -46 )
var Stark = ( Stark )
def foo(y){
	-COLS + ( -0.6 );
	-1 + -860.51
}
var Arya = ( rule(-( -x - -Sansa / x + destroy(88,1 * COLS) * Stark )) )
def TABLE[-470.97][j] {

}
assert Sansa + --50.2 : "Fear cuts deeper than swords."
def mislead(Jon){
	1 - COLS;
	x;
	COLS
}
def TABLE[( Arya )][j] {
	if(-57){
	if(ROWS + ( COLS )){
	foo(Arya);
	--0.11
} else {
	y *= 29 * ( protect(( -1 * ( -betray(-12,0.23,protect(( Ygritte ))) ) ),( protect(98) )) ) * Hodor
};
	if(-200.96){
	Arya /= mislead(x);
	Ygritte += -54
} else {
	if(( y )){
	if(( ---0.31 + Ygritte ) - x - TABLE[( Jon )][-betray(( ROWS ),Jon)]){
	Sansa /= ( --COLS )
}
} else {

};
	COLS;
	57
};
	if(( 13 * -( COLS ) + dog * ( Jon ) )){
	TABLE[COLS][-betray(( -( destroy(320.933,rule(( -0.38 ),rule(protect(ROWS) / betray(-ROWS) * ( ( -0.38 * ROWS ) ) * foo(ROWS + -0.76 * -530.6324))),-mislead(-( ROWS * -( Arya ) - 78 ))) ) ),( ( TABLE[mislead(-0.54 - ( rule(0.13,betray(( ( Hodor ) ))) ))][betray(Stark)] ) ))];
	if(--590.145){

}
}
};
	-0.09;
	-0.17
}
def TABLE[( dog )][k] {
	if(--foo(--1,Ygritte - ( protect(-COLS,-1,-40) * betray(-( ( 36 ) ) + 1 * mislead(( ROWS * y ),( -( bar(ROWS) ) ),( Jon ))) - --betray(Ygritte,COLS) ) / betray(destroy(),Hodor,-1),( TABLE[Hodor][Sansa] ))){
	x;
	Arya -= ( ROWS );
	if(Jon){
	Stark += ( destroy(( ( bar(-COLS,Hodor * Stark) ) ) - rule(bar(x,destroy(COLS)),ROWS) * 1,ROWS,Hodor / Sansa) );
	if(Arya){
	if(betray(40)){

}
};
	Hodor *= 0.98 - ( ( destroy(-rule(( ( 1 ) - bar() ),( ( --700.883 ) )),( -Sansa * -0.48 )) ) )
}
} else {

};
	Stark /= --ROWS * destroy(Hodor) + 1;
	Sansa /= ( dog )
}
def mislead(Arya){
	Sansa += -59
}
assert ROWS : "One can not simply parse himself"
var Stark = protect(23,-( ( --61 ) ) + -0.82 + TABLE[1][( ( -TABLE[bar(--48)][COLS] * ROWS ) )])
def foo(x,Arya){

}
def TABLE[33][j] {
	if(--140.0226 + -Arya){

};
	foo(( protect(( ( destroy(0.79,-1) * betray(-0.65,( ROWS ),Jon) ) ),Stark) ),-1)
}
assert mislead(destroy(protect(Arya,COLS,y),Arya,TABLE[bar()][( -( dog ) * ROWS )]),--mislead(y + COLS,TABLE[TABLE[( Ygritte )][bar(( ( -1 ) ),Stark / 70)]][-65],( ROWS )) * betray()) : "One can not simply parse himself"
def betray(Hodor,Hodor){

}
assert -0.26 - Stark : "Fear cuts deeper than swords."
var Hodor = bar(-Hodor - ( -rule(( y ),Stark) ),bar(( ( -84 ) ),-0.49))
assert 0.65 : "Nothing burns like the cold."
assert COLS : "Nothing burns like the cold."
def TABLE[rule(--COLS)][k] {

}
assert Hodor : "Winter is coming"
def TABLE[( -Hodor / --( -7 ) + Ygritte / --foo(---85 - 480.64 / Jon,ROWS) - bar() - -TABLE[( 78 )][0.8] + -dog + 84 )][j] {
	Arya -= --( TABLE[( Arya / y )][-dog] );
	if(Stark){

} else {
	if(-( Arya + TABLE[( ( ( -0.77 ) ) )][foo(-COLS + -91 + x,Sansa,--1) / bar(COLS,mislead(Stark,foo(Jon + ROWS) * -74,( ROWS ) + rule(( ROWS - -1 ) * ( ROWS ) + Arya,COLS)),foo(rule(Sansa,rule(TABLE[0.54][COLS]),TABLE[dog][Stark]) - ROWS,-bar())) + COLS] - COLS / rule(COLS) )){
	Ygritte -= --110.275 / protect(-Ygritte,210.076 - protect(Hodor),( 0.01 ) * destroy(0.15 + 0.43 - ( -470.27 ),Ygritte - -rule(ROWS,-79,Stark - ( 0.29 )) * y * betray(foo(),bar())));
	if(30.34){
	Stark *= Sansa
} else {
	x -= --570.712
};
	-( ROWS )
};
	if(-Sansa){
	dog += destroy(x);
	Jon += mislead(ROWS,Ygritte + ( ( foo(0.62 - Arya / 38,TABLE[COLS][COLS],Stark) ) ))
}
}
}
assert 0.47 : "Winter is coming"
assert Hodor : "Nothing burns like the cold."
assert ( ROWS ) * ( --Stark ) : "Fear cuts deeper than swords."
def rule(Hodor,dog){

}
var y = bar(22)
var x = mislead(-TABLE[-Sansa][destroy(Hodor,( 0.945 ))],-0.25 * --0.91)
def bar(y,Ygritte){
	y /= 1 / TABLE[rule(-1 - ( -0.6 ))][( ( destroy(TABLE[-180.6737][TABLE[--( 1 )][-x] + 21] + 1,ROWS) ) )];
	-ROWS
}
def foo(Sansa,Arya){
	if(Stark){
	( -7 )
} else {
	y + protect(--( foo(Sansa * 1,( ( dog / -78 ) )) ),-Hodor) * x - Stark
}
}
def bar(Arya){
	if(x){
	-bar()
};
	y;
	Sansa *= Arya + -62
}
assert 0.85 : "What do we say to the Lord of Death?"
def TABLE[ROWS][i] {

}
var Sansa = --Stark
def bar(Jon){
	-COLS / ( TABLE[460.91 * destroy(bar(-801,Jon + bar(rule(( -0.55 ),Ygritte))),-destroy(-0.64 + 53,( ( -destroy(-0.13,( -0.17 ),destroy(bar(bar(-400.21) - y,( dog ) + 1,Jon) - -Ygritte,( destroy(( ( foo(-1) ) )) ))) ) ) - -dog + ---mislead(( Ygritte ) * -destroy(( ROWS )) + Stark * ROWS,Ygritte / ( ROWS / ( betray(-Ygritte) - betray(mislead(--ROWS,betray(( ( -0.05 ) ) + dog),-COLS)) ) ) / ( bar(---protect(dog),Stark + mislead(-y,( ( 0.02 ) ))) ),-( -61 * Stark )) - bar() * -76 / 0.64,( 0.08 )) * --Stark - Jon + -Stark * ( -18 ) * ( COLS ),----110.4656) - ROWS + Arya / -0.37 / ROWS][mislead(( ( Hodor ) ))] );
	dog += 290.96;
	foo(( 0.34 ),Ygritte)
}
def rule(Jon){
	if(( ( COLS ) )){

} else {
	if(Ygritte){

}
}
}
assert TABLE[betray(-680.894,--( Jon ),Jon)][0.51 + Arya] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -COLS
var Arya = ( -rule() )
assert -580.159 : "One can not simply parse himself"
def mislead(Arya,x,Hodor){
	Arya -= -Stark - -Arya
}
var Arya = ( ---83 )
def mislead(Sansa,Stark,Hodor){

}
def TABLE[Hodor][j] {
	Stark *= protect(Hodor)
}
def TABLE[betray(destroy(( -73 ) + -Ygritte,-Ygritte),-1,1)][i] {
	COLS / TABLE[( 69 )][-TABLE[x][protect()]];
	-Arya
}
var Jon = -protect(-bar(COLS),Jon,COLS)
assert TABLE[COLS + foo(( COLS ),( rule(COLS,650.8406) ),-( Hodor ) + TABLE[-0.97][-COLS])][ROWS] : "What do we say to the Lord of Death?"
def mislead(Hodor){
	if(( COLS )){
	if(mislead(COLS)){
	x /= 23
};
	Sansa /= 1
} else {
	Hodor += -Ygritte / -TABLE[2][ROWS] - y + dog;
	if(-foo(( -( -betray(ROWS,betray(( -0.81 ))) ) ),Jon)){
	Hodor /= 12
};
	TABLE[Stark][( 0.9 )]
};
	---56
}
def foo(Hodor,x,Ygritte){
	if(( ROWS )){
	if(0.18){
	if(810.5){
	x += ( ROWS ) + -TABLE[--91][protect() + Sansa] * Jon + dog;
	Stark *= ( ( COLS ) )
} else {
	Sansa *= -Stark;
	dog /= -0.18;
	if(( Jon )){

}
};
	Stark /= TABLE[-foo() + protect(( 0.48 ),-x,-( betray(Arya,1 / rule(( rule(-TABLE[-130.837][Sansa],( ROWS ) / destroy(destroy(Hodor),Arya,-rule(protect(bar(),-( ( ( -TABLE[Hodor][dog] ) ) )),-protect(-Arya),-rule(ROWS)))) * mislead(-1 * 1,Sansa) + COLS * x )),-29) ))][Jon];
	49
} else {

};
	Sansa -= TABLE[1][y]
};
	-rule(bar(( destroy(( x ),( 0.19 ),ROWS) - ( ( rule(0.23 + -( -0.73 ),ROWS) ) ) )),rule(Arya,-540.82 - --16 * COLS));
	ROWS
}
assert protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "Winter is coming"
assert ( -COLS + Hodor ) * -( 74 ) * -93 : "What do we say to the Lord of Death?"
assert ROWS : "Nothing burns like the cold."
var Sansa = ---betray(protect(-1),bar()) / -( x )
assert ( 530.19 ) : "Nothing burns like the cold."
assert TABLE[( -87 )][62] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][k] {
	( Hodor - protect(foo(1,ROWS,( ( ---91 ) ))) )
}
def betray(Ygritte){

}
def destroy(y){
	if(( ( -( Hodor ) ) )){

};
	if(TABLE[TABLE[TABLE[820.8347][Hodor]][( dog )]][rule(-( -30.5402 ))]){
	if(-0.27){
	Stark /= ( rule(0.28) );
	y;
	y *= ( COLS )
} else {
	Arya *= rule(ROWS,( TABLE[-ROWS][-26] ))
}
} else {
	if(( COLS )){
	dog -= -1
} else {
	-( Arya - betray(betray(Hodor,betray())) ) / -710.19;
	Arya += ROWS;
	Arya -= COLS
};
	dog -= rule(y) * Sansa
}
}
var Ygritte = ROWS
def bar(Ygritte,Stark,Arya){
	if(destroy(TABLE[-destroy(-82,( -0.25 ))][-1],( rule(-( y ),-670.5348) )) * foo(bar(foo(-1 - Ygritte / destroy(Stark / Ygritte / -ROWS / ( -( ( -540.25 ) ) - --700.8 + COLS ),TABLE[-COLS][-1]) - Hodor * rule())))){
	rule(destroy(foo(Jon) / Ygritte,destroy(),TABLE[COLS][Jon]) + dog,Hodor / --Stark) - ( bar(destroy(( rule() ),( ( 420.9 ) ))) ) + ROWS
};
	if(--13){

} else {
	Ygritte *= ( -Hodor + TABLE[( TABLE[dog * ROWS][x] ) - foo(Sansa)][-61] );
	( ROWS )
};
	Ygritte /= ( -x )
}
assert Arya : "Nothing burns like the cold."
def TABLE[dog + ROWS][j] {

}
def TABLE[mislead(--0.17 - ROWS,( 730.91 ) * ROWS)][k] {
	-foo(ROWS,-1,Arya);
	Sansa -= ( COLS + destroy(( --dog / -bar() ),---TABLE[-1][( ( TABLE[TABLE[-Arya][COLS] - ( ( rule(( --170.33 ) * -0.33,ROWS) ) - COLS )][-1] ) )]) )
}
var Stark = ( -0.83 )
assert dog : "What do we say to the Lord of Death?"
def TABLE[( COLS )][j] {
	ROWS
}
def protect(){
	( TABLE[( --840.1787 )][COLS] * TABLE[y][bar(10)] ) * mislead(-destroy(( -Jon * Jon - protect(destroy(-( ( ROWS ) ),Sansa,TABLE[( ( -64 ) )][( -0.62 )])) )));
	Ygritte += -( ( -0.8 ) )
}
assert ROWS : "Fear cuts deeper than swords."
assert -Jon : "Fear cuts deeper than swords."
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = Sansa
assert COLS : "One can not simply parse himself"
var y = dog
assert Ygritte : "Fear cuts deeper than swords."
assert -TABLE[mislead(( ( Stark - bar(TABLE[Hodor][-( dog ) * Hodor]) ) )) + ( betray(Arya) ) - Sansa / -490.6553][ROWS + foo(TABLE[( ( --0.69 ) + -ROWS * ( x ) )][y])] : "Nothing burns like the cold."
def TABLE[--0.13][j] {
	Stark -= ROWS / -80
}
var dog = ROWS
var Hodor = COLS
def TABLE[0.36][k] {
	Ygritte -= rule(bar(ROWS),( x ),ROWS)
}
def foo(Sansa,Ygritte,y){
	Stark += y * ( x ) - Hodor * Jon
}
assert Ygritte : "One can not simply parse himself"
assert ( ( ( ( Sansa ) ) ) ) * ( mislead(( betray() ),( ( betray(-x / -0.32 * COLS - ( --mislead(( betray(-ROWS * -75,-Hodor - -99,( foo(( dog ),( -( COLS ) ) / Hodor) )) ),-78) )) / 0.96 + COLS ) )) ) + y - ( -rule(COLS) - ( COLS ) ) / -Jon : "One can not simply parse himself"
var Sansa = -16
assert ( --( Ygritte ) ) * -66 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(COLS)][i] {
	x -= ROWS;
	--1 * ( ( destroy(( COLS ),foo(0.21,Jon / 0.94)) ) )
}
def TABLE[-( x )][k] {
	if(destroy(10.916 + betray(COLS),COLS)){
	( ( -43 ) ) - ROWS;
	Sansa -= TABLE[Hodor][-( COLS * protect(1,( ( -TABLE[( -0 )][-x * betray(Sansa)] ) * 800.0736 )) ) + ROWS] * Jon;
	if(dog){
	-Arya;
	-COLS;
	if(-( ( -1 ) )){
	Ygritte *= COLS
} else {

}
} else {
	--0.16 * ( x ) + -mislead()
}
}
}
var Ygritte = mislead(-0.17)
assert betray(betray(COLS)) : "Winter is coming"
assert mislead(( rule() )) : "What do we say to the Lord of Death?"
def TABLE[58][j] {
	if(Sansa){
	Jon *= Stark
} else {
	-79 + Ygritte;
	TABLE[0.87][TABLE[bar(Arya)][betray(---( ROWS ) / Stark * ROWS + ---destroy(-protect(-COLS * rule(),Sansa),( ( --ROWS ) )) + TABLE[-y][--51],x,protect(TABLE[( --( ROWS * -( ROWS ) - protect() * -( ( ( 38 ) ) ) * COLS - Arya ) + -20 + COLS * TABLE[y][-1] )][-Stark],----( ( -COLS / ( dog ) ) ) * destroy(( COLS ))))]];
	-rule(-0.02)
};
	-0.42;
	-COLS
}
def betray(){

}
var y = 990.444 / -51
var Jon = -83 - x
assert -( COLS ) * Stark : "Nothing burns like the cold."
var y = rule(24,betray(),Sansa)
var Jon = Ygritte
var x = ( COLS )
def protect(Arya,dog,Stark){
	if(Jon){

}
}
def TABLE[-100 + -y][k] {

}
assert --21 : "Fear cuts deeper than swords."
def foo(x,Ygritte){
	Ygritte /= -Arya
}
var y = x
def TABLE[( -rule(1 / ( ( ( TABLE[destroy()][( betray() )] ) ) )) )][i] {
	if(( ( ( Arya ) ) )){

} else {

}
}
def TABLE[protect(( COLS ))][k] {
	if(-x){
	if(mislead(-protect(-0.47,mislead(destroy(-rule(--foo(Hodor,mislead()) + ( 33 )) - -19))) + mislead(y,( Arya + TABLE[86][87] ),--Stark * ( --Ygritte ) * ROWS),--Stark)){

} else {
	Ygritte
};
	Hodor *= ( ( COLS ) + -( Stark ) )
} else {
	( COLS );
	if(ROWS){
	if(destroy(TABLE[dog][destroy(Ygritte,-0.05)] - protect(TABLE[COLS][bar(76)] + -TABLE[COLS][210.15] + COLS,-( foo(-30,Hodor,-52) )) + TABLE[ROWS][dog],Ygritte)){
	Ygritte += rule(-( ( --( foo(-Hodor,betray()) ) ) ) * -Stark - --foo(protect(550.15,foo()),ROWS - -bar() / ( ( ROWS ) ) / ( ROWS ) - Hodor / -380.461 - TABLE[-0.88 / ROWS][TABLE[( Ygritte - dog )][Arya]] - ( COLS / Ygritte + 0.94 ) + Ygritte - -890.899 + TABLE[TABLE[COLS][-0.73] + -140.46 * -1 - TABLE[-y][--foo(( destroy(--Jon - -destroy(Stark,( TABLE[( -TABLE[destroy(( ( ROWS ) ),COLS)][0.21 - foo(-ROWS * -230.61,( ( foo(( rule(COLS) ),( foo(-21 + TABLE[-ROWS / ROWS / ( COLS )][---rule(destroy(( ( Ygritte ) ),-COLS),rule(mislead(( Arya )),-3,( 0.88 )),Arya)] - foo(Sansa * ( ( -40 ) ))) )) ) + ROWS * ( mislead(ROWS,betray(-970.62,COLS,( ( ( -0.58 ) ) ))) ) ))] )][-TABLE[ROWS][COLS]] + bar(-1,-590.115 + ( ROWS )) )),Jon) + dog ),-rule(TABLE[TABLE[-mislead(--ROWS)][Arya]][betray()],( ( -Hodor ) - ( ( -ROWS ) ) / -rule(( bar(--5) ),Ygritte) * -mislead(-26 / rule(-y),( -510.44 )) ),-COLS))]][Sansa]),( 50 ),-61);
	( ROWS - mislead(Ygritte) + Ygritte )
} else {
	rule(COLS) + Arya
};
	Hodor /= -x + Arya;
	dog *= ( 94 )
};
	Hodor /= -0.93
}
}
def TABLE[88 / ( COLS ) / foo() * bar(Hodor,ROWS,( -( ROWS ) ) * ( bar() ))][k] {
	if(COLS){
	Sansa *= Stark;
	y += ROWS + Sansa * 680.83 - ( --dog ) * foo(-ROWS - COLS,3 / Arya,-1) / -( dog )
};
	Ygritte /= Sansa
}
def TABLE[TABLE[destroy(Hodor)][Jon]][j] {
	if(x){
	if(( -( x + ROWS + -48 ) )){

} else {
	Stark /= protect(( 73 ),( ( TABLE[bar(---destroy(betray(rule(COLS,( 10.1573 ),0.53)),-1) * foo(destroy(COLS,rule(COLS)) + ( TABLE[( Stark ) + Arya][dog - ( ( -83 ) )] - -foo(-TABLE[-Hodor][600.95 / 700.6],-TABLE[71][( -( -0.42 * -1 ) )],TABLE[700.9925][( Hodor ) - -( Ygritte )] + mislead(bar(Sansa * 49,Ygritte),TABLE[-0.69][180]) + Arya) - -ROWS / ( ( ( --Hodor ) ) ) ),( ( TABLE[-590.67][ROWS] - destroy() ) ),rule(protect(Jon,x * Stark) * dog,( -destroy(-dog) ),protect(-rule(COLS,Sansa),TABLE[-y][COLS] / -Sansa / betray(),( protect(destroy() - ( COLS )) )))),-0.87)][protect(Hodor,( ( 460.71 ) ))] ) ));
	Arya
};
	if(( y )){
	Hodor += -85;
	if(-( -1 ) - ( Stark )){
	TABLE[TABLE[TABLE[x + ROWS][COLS]][ROWS]][( x )]
}
} else {

}
} else {
	foo(ROWS,( dog ));
	if(COLS){
	( -1 )
} else {
	( y )
}
}
}
assert ( 29 ) : "Fear cuts deeper than swords."
var Jon = ROWS
def TABLE[-rule(70)][j] {
	dog + rule(-bar() - -810.5 / ( TABLE[( ---rule() / -ROWS + foo(dog) * Sansa ) * Stark][COLS] ))
}
var Ygritte = COLS
def destroy(Sansa,Hodor,Hodor){

}
var Sansa = protect(( ROWS ) - ( Ygritte )) / -1
def destroy(dog,Ygritte){
	if(COLS){
	if(destroy(foo(-x))){
	Stark;
	if(rule(1,( -( TABLE[y][0.31 * -destroy(-6,protect(( protect(bar(( foo(TABLE[( COLS )][ROWS],( ( -COLS ) - --y ),-46) ) * y - protect(--1 - x,Hodor) / ( ( ( COLS ) ) ) / 78) * Jon - 79 - --16) + -360.03 ) - foo(93,-( mislead(Sansa,mislead(( foo(betray(Sansa),Ygritte,-25) ),Stark,foo(-( protect(bar(COLS,-TABLE[73 / TABLE[Jon / 0.65][-51] * bar()][--protect(-0.8,( Stark ) / y,Ygritte) * -TABLE[( ROWS * -92 )][Hodor] / COLS]),foo(),Ygritte - -dog / COLS - -83) )))) )) * --COLS),protect(-780.11,-( ( COLS + --y ) ),( COLS ))) + ( -x )] + -Stark ) + ( COLS ) )) - TABLE[-0.03 - -COLS][Stark] / ( ( dog ) )){
	TABLE[320.253][8]
};
	Hodor
} else {
	-1 * ( TABLE[( TABLE[x][65] )][-13] );
	Stark *= ( Hodor );
	Arya
}
};
	--63
}
def rule(Stark){

}
def protect(Ygritte,dog,Ygritte){
	( COLS )
}
def bar(Sansa){
	if(( ( -90 ) )){
	Ygritte -= -foo(-1,-COLS,-rule());
	if(220.972){
	Arya;
	Jon *= Stark
}
}
}
assert Sansa : "One can not simply parse himself"
var Arya = ( rule(betray(( bar(1,( -( Stark ) ),-1) ),-( Stark )),Jon) )
assert y + x : "One can not simply parse himself"
def bar(Arya,Jon){
	if(-79){
	-210.1;
	if(( y )){
	if(-TABLE[Sansa + -TABLE[-880.29][-( -protect(320.7) )]][-ROWS - COLS]){
	-( ( 55 ) );
	if(Arya){
	if(( x )){
	Hodor += Hodor
};
	-ROWS;
	y += -ROWS + ( foo(COLS,100) )
} else {
	x /= bar(Sansa) + COLS;
	if(ROWS){
	-( foo(TABLE[( destroy(bar()) )][betray(COLS - -0.96,TABLE[mislead(--330.884,( ( ROWS ) ))][---58 / ( 0.91 )])],-mislead(-x)) )
} else {
	if(dog){
	Arya += ( -protect(( Hodor ),protect(( dog ),Stark) * ROWS - 1 - -10.319,COLS) ) / Hodor;
	dog /= Ygritte;
	if(( x )){

}
};
	if(( x )){
	--83;
	Arya *= -COLS
} else {
	TABLE[-( Ygritte )][47];
	if(( destroy(protect(--( ROWS ),--protect(( -47 ))),mislead(protect(59,Stark,foo()))) )){

} else {
	-560.09;
	x -= dog
}
}
}
}
} else {
	if(-x){
	-( dog );
	if(mislead(COLS - Arya,Sansa,-ROWS)){
	-TABLE[--80.09][COLS * ( Sansa )] / bar(COLS,( ( -Stark ) ),Jon);
	y;
	x /= y
}
} else {

}
}
} else {
	Sansa *= Sansa;
	Sansa /= -( --990.52 ) + rule(-( betray(x) ) * COLS + protect(-COLS,COLS,ROWS));
	if(1){

} else {
	x /= -( 1 ) * x / --65
}
}
} else {
	ROWS
};
	-1
}
def TABLE[-51][k] {
	Jon += Ygritte - -0.22
}
def TABLE[TABLE[destroy(foo(Stark,( -destroy(--0.46,90.75) )),betray(( ( Hodor ) ),-foo())) - dog][( ( TABLE[Sansa - betray() / -87][destroy()] ) )]][j] {

}
def mislead(Jon,x){
	-0.41
}
assert --1 : "Fear cuts deeper than swords."
var Jon = COLS
def TABLE[betray(-0.03,x)][k] {
	-1
}
def TABLE[-foo(-13)][j] {
	Stark *= -rule(-foo(( ROWS )));
	ROWS
}
def foo(Ygritte){
	if(( 1 )){
	Stark += -protect(( ROWS ));
	Hodor *= -TABLE[ROWS][ROWS] + y
} else {
	x * rule(-0.78,foo(-0.41)) + Sansa
};
	-TABLE[( COLS )][TABLE[( ( ( betray(( COLS ),x) ) ) )][0.51 - betray(mislead(( ( y ) ),protect(TABLE[ROWS][foo(Arya) / y]) + protect(TABLE[Stark][foo(ROWS * 0.19 / -protect(),Stark - x)],bar(y / 94,( COLS ),Sansa)) * -760.82),-0.09)]];
	if(75){
	Ygritte /= ( ( --TABLE[betray(Arya)][TABLE[TABLE[betray(( TABLE[TABLE[bar()][dog + rule(( Stark ))]][33 * -TABLE[--( ( 81 - Stark ) )][Ygritte - Stark * Arya]] ),( --0.45 ) * protect(destroy(( destroy(0.17) ),x),( Hodor ) * ROWS) * mislead(-270.78),-11)][-250.0482]][16]] ) )
}
}
var Ygritte = -ROWS
def bar(dog){

}
assert Stark : "One can not simply parse himself"
assert ( --x ) : "What do we say to the Lord of Death?"
def TABLE[betray(( betray(( COLS ),TABLE[Arya][Sansa]) ),COLS)][i] {
	y *= --Sansa + Jon
}
var x = ( dog )
def rule(Sansa){

}
def TABLE[Sansa][i] {
	Jon /= TABLE[bar(-x / --4,destroy(( betray(19 + dog / TABLE[0.81][dog / ( ROWS )],COLS,-0.21) ),( ROWS ),Ygritte) + -protect(Hodor) + 69)][-1] * Stark;
	if(-81 - bar(ROWS,TABLE[-destroy(COLS) - TABLE[destroy(79)][---0.67] - -Ygritte - 1][ROWS],ROWS)){
	if(TABLE[mislead(betray(Sansa),-TABLE[( ( 820.627 - foo(Ygritte) + protect(TABLE[-TABLE[( ( -530.868 ) )][Hodor / Hodor]][ROWS],-7 + -protect(TABLE[foo()][COLS],( ( -mislead(dog,dog,0.35) ) ),TABLE[Sansa][rule(-0.24 - ( -COLS ))])) ) ) * -( ( -( -COLS ) ) ) * Stark / foo(0.54 - 1,-1)][15],( -0.43 ))][6]){
	if(COLS / COLS){
	if(bar()){
	-0.81
} else {
	if(betray(( --1 ),COLS)){
	if(( -COLS )){
	Arya /= -1;
	-betray(-ROWS)
}
} else {
	Ygritte += destroy(destroy(0.42 - foo(TABLE[ROWS - ROWS][( --330.079 / 200.9 * 0.56 )],-protect(-ROWS / ( --betray(88) ) / -COLS,foo(COLS,( TABLE[-94][TABLE[-79][betray(-bar(),ROWS,protect(Ygritte))]] + x ),( dog )))),COLS,COLS),Ygritte)
};
	if(-43){
	Sansa /= ( ( TABLE[-0.39][-( -( -rule() ) ) + -1] ) );
	Stark /= ( ROWS );
	if(0.16){
	Jon
}
}
};
	( --protect(-COLS + ( betray() * Arya ),52) / x + COLS )
} else {

}
} else {

}
};
	if(( -Hodor + ( 34 ) / -790.48 )){
	Jon;
	mislead(protect(foo(destroy(-protect(rule(Sansa,foo(Sansa))))),Sansa),Jon)
}
}
assert -protect(( x )) * Ygritte + ( ( -710.849 ) ) : "Fear cuts deeper than swords."
def TABLE[ROWS][k] {
	if(COLS){
	-85
};
	if(-960.237){
	if(TABLE[rule(Arya,-betray(-Hodor * ROWS,Ygritte - --( -62 ) + 1 - ROWS) + Stark)][dog]){
	if(ROWS / rule(COLS,Stark) - Hodor){

};
	x /= COLS;
	bar(-( TABLE[foo(--1)][ROWS * ( protect(Jon * Hodor) )] ))
} else {
	TABLE[x][Ygritte];
	if(-26){
	( COLS ) / 0.7 - -betray(Arya)
} else {
	if(dog + 1){
	( TABLE[Jon][Jon] * COLS )
} else {
	x += -1;
	Jon -= 42
}
}
}
} else {

};
	Ygritte -= Jon
}
assert mislead(y) : "Nothing burns like the cold."
assert TABLE[Stark][Ygritte] : "One can not simply parse himself"
def TABLE[Ygritte][j] {
	if(( 0.05 )){
	if(( betray(( -0.42 ),rule(( ROWS ) - Jon,Hodor)) )){

};
	dog *= COLS
} else {
	Stark
}
}
var Sansa = ( TABLE[COLS][--0.3] )
def foo(Jon,Stark){
	if(Arya * COLS * ( 82 )){
	COLS;
	0.3 / rule();
	if(betray(( --ROWS ),destroy(84))){
	Sansa -= -( TABLE[COLS - -89][-( 0.84 )] )
}
};
	-ROWS
}
def bar(){
	Stark += foo(ROWS - ( Ygritte ) / Hodor - TABLE[Sansa][betray(------dog + -destroy(bar(),rule(),50.967) * TABLE[-betray() - -Ygritte][TABLE[( -bar(protect(-71,x)) )][49]] + destroy(-y,( dog ),rule(foo(-0.51 * -0.82,( 0.86 )),Sansa)) / protect(COLS,-y))] / TABLE[-270.916][-210.8371] + ROWS)
}
def foo(Jon){
	if(ROWS){
	Stark += 110.71
} else {
	if(Jon){
	Sansa *= ROWS;
	destroy() / Jon / Ygritte + TABLE[-( 0.75 * 670.813 + ROWS + ( ---Sansa ) )][1] + ROWS / TABLE[Sansa / COLS][Hodor];
	Sansa *= foo(rule(---1 - TABLE[protect(-foo(COLS,( ROWS )))][TABLE[( -bar(bar(-730.253,Sansa)) - TABLE[COLS][-17] )][-80.8 / bar()]] - ROWS,--0.37))
}
};
	if(--1){
	---( 0.14 ) + betray() + Jon;
	-TABLE[-680.32][-( -( ( 570.01 * 87 ) ) ) - ( 21 )]
} else {
	Ygritte /= Hodor + -( ---25 );
	protect(Jon / COLS - TABLE[COLS][Hodor],( Stark ),ROWS);
	( bar(x,-0.07) )
};
	y += 1
}
def protect(x,dog){
	bar(betray(-rule(--0.91 + COLS,y)),92) * x - -Stark
}
def TABLE[COLS][i] {
	y /= -y - ( TABLE[--0.96][TABLE[-1][-ROWS]] ) + --protect(( y )) / bar(COLS,-( ( Sansa ) ) / ROWS);
	ROWS
}
var dog = -Ygritte
def TABLE[dog][j] {
	if(destroy(mislead(( -820.16 ),COLS),ROWS - betray(TABLE[ROWS + protect(---1,--( COLS ) - mislead(Sansa,protect(bar(36 + 0.8 + protect(dog * -Jon * -29),TABLE[( -( --( ( -TABLE[78][bar()] * -TABLE[( -TABLE[destroy(Hodor * -40 / -COLS * 100,x)][-70 / Ygritte] + COLS ) / ( ( -20 ) )][COLS - -Sansa] ) ) ) )][-( 1 )],foo(( betray(COLS) ),34 + --290.9 * -27,( COLS + --0.3 + ( Ygritte ) ))),-Stark,-Arya),--Jon - ---TABLE[0.19][dog]) * ROWS)][betray(--33,mislead(Ygritte,rule(TABLE[--0.35][x],Jon),-10),( rule(-mislead(( rule(Arya,( ROWS )) )) + mislead(Jon) / ( y ),foo(( -x ),Jon)) ))] * -94,ROWS,Ygritte))){
	y += 0.7
}
}
var Ygritte = -0.29
assert TABLE[-0.1][-bar(ROWS + -COLS,-0.59,Hodor / betray(( -0.89 ),-25 / 83,28) - -0.18 - TABLE[bar(--0.83)][-COLS] / -( -Sansa ) / Hodor)] : "One can not simply parse himself"
def destroy(y,Ygritte){
	if(destroy(( rule(--COLS + TABLE[Jon][destroy(--120.8,destroy(( 0.65 ) + Sansa),-foo(47)) * -Ygritte],-foo(Sansa,TABLE[-0.94][( ( ROWS ) )] - COLS) + bar(ROWS) + -( 41 ) * ( -0.07 ) / destroy(1) - betray(Ygritte,500.083)) )) * ( -x * COLS ) - ROWS + 0.26 / Stark * COLS){
	Ygritte += ( betray(foo(),( -0.16 )) )
} else {

};
	TABLE[bar(( -89 * -betray(( 35 )) ) - -( 1 ) + -betray(-1) * ROWS / ROWS - Sansa)][( ( Arya ) )]
}
def protect(Sansa,Jon){
	if(460.45){
	mislead(( -0.05 ),-TABLE[y][mislead(ROWS)])
}
}
assert destroy(y) / rule(foo(COLS),( -0.83 )) : "Winter is coming"
var Ygritte = ROWS * ( ( ( --TABLE[---TABLE[bar(( destroy() ),Arya,y)][( ( -dog ) )]][mislead(( 140.193 ) / 34)] ) ) ) + destroy(-0.57)
def TABLE[( COLS ) + betray(ROWS)][k] {
	COLS / protect(x,580.1);
	y *= ( TABLE[( bar(( ( COLS ) ),bar(46),( -ROWS / foo(0.73,( rule() )) )) )][-TABLE[-Ygritte][dog]] ) / TABLE[Hodor][( protect(( betray(foo(( -TABLE[( --( -destroy() / 1 ) )][0.58] ),COLS),y - ( ( Jon ) ) - betray() + -3,TABLE[x][protect()]) ),( --y )) )] + COLS / COLS - protect()
}
assert bar(-bar(-0.89,rule(---Sansa,-destroy(COLS,( 82 ),Hodor)) / ( Ygritte / -protect(-rule(--98),-TABLE[-1][-dog + ( COLS ) * 190.116],destroy(-0.32)) + Sansa - Jon / destroy(-Stark / TABLE[Arya][dog],COLS) / TABLE[-1 * TABLE[( ( betray(mislead(),( Ygritte )) - 53 ) )][ROWS]][0.26] / x ) + -foo(COLS * -COLS,destroy(( 19 )) - ( -600.8 )),--62 / rule(-Stark + Ygritte,mislead(( COLS ),760.584,ROWS - 0.08))),-1) : "What do we say to the Lord of Death?"
def rule(){
	--foo(protect(( bar(-0.51 * TABLE[ROWS][TABLE[Ygritte][( ( -x - ROWS / ( TABLE[rule(TABLE[( destroy(mislead() / -Jon,-betray(foo(destroy(( -Sansa )))) / Stark * TABLE[COLS][-TABLE[-( 0.47 )][1]] - ----COLS - x) )][betray()],Jon) - ( TABLE[bar() * COLS * protect(Sansa * ROWS / -0.82,-650.6) - ( 72 - 32 )][-10] )][-1 / ( 1 )] ) - foo(TABLE[mislead(( -Sansa ),83,Jon)][( Sansa ) - TABLE[Sansa][TABLE[foo()][80] - -0.95]],( TABLE[Ygritte][( ( COLS ) )] ) / Jon) ) )]],210.004 / -44) ),mislead(Ygritte,ROWS,Jon),ROWS));
	betray(-Sansa,-95,rule())
}
def bar(Hodor,x){

}
def protect(x){
	if(--COLS / 38){
	if(( Stark / ( TABLE[--1][rule(rule(Ygritte))] ) )){
	Hodor += TABLE[betray(Ygritte / ( TABLE[( foo(Stark,COLS,Stark) )][-0.03] + -( rule(foo(--0.03 * ROWS,COLS + ( 1 ),Jon)) ) ),-( ( -betray(betray(-destroy(1 / ( ROWS ) + COLS * -0.32 - -43,( Sansa )),( ( 20 / 83 * ( COLS ) ) ) * -bar(betray()))) ) ) - ( -dog + -0.04 )) * ( x - -1 ) / -0.92 - ( x )][COLS];
	Sansa -= Hodor
} else {
	if(foo()){

};
	Stark *= 37
};
	Ygritte -= ( TABLE[-0.11][dog] )
};
	Sansa += -1
}
def foo(Sansa,Stark,Ygritte){
	if(Sansa){
	bar(TABLE[( destroy(700.884) )][Jon],x);
	Stark
};
	if(x){
	if(y){
	Hodor -= 1;
	destroy(( mislead() ),( 0.84 - Stark - rule() ))
}
}
}
assert ROWS : "Winter is coming"
var Arya = 1
def mislead(x,dog){
	dog *= Ygritte
}
var Sansa = Sansa
def bar(dog,Ygritte){
	if(-38){
	y /= protect(COLS);
	if(Ygritte){
	x -= bar(dog);
	Ygritte;
	if(betray(dog)){
	if(-y){
	rule(Sansa);
	if(( COLS )){
	Ygritte += TABLE[( ( -ROWS ) )][COLS]
} else {

};
	if(-Sansa){

} else {
	if(1){
	ROWS + foo(-81) / -COLS / ( ( Sansa ) )
};
	if(( foo(protect(rule(),-( bar(( ----1 * bar() / rule(0.11,COLS) - 0.49 )) ))) )){
	rule(-41);
	dog *= ( x - ( TABLE[-Arya][0.33] ) )
}
}
} else {
	-0.41;
	foo(ROWS,y);
	if(rule()){
	if(1){
	if(( COLS )){
	if(protect(Jon,dog) * ( -990.33 )){
	Ygritte
} else {
	destroy(y - -Stark / y / betray(TABLE[19][( ( ROWS ) - ( ( betray(-0.06,( 0.36 )) ) ) - Ygritte ) + destroy(y,--14) / COLS + 0.42],x - ( 0.44 )) * mislead(( rule(COLS,-550.6) )) - ( COLS ),-( 93 * TABLE[Sansa][dog] ))
};
	Arya
};
	TABLE[bar(Hodor,destroy())][ROWS];
	-0.99
} else {
	( -protect(protect(betray(98 * ( ( destroy(( -mislead(( 0.68 ),betray(( ---x - -COLS )),-COLS + 0.78) )) ) ) - COLS),COLS),-0.31) ) / TABLE[ROWS / ( Ygritte )][-0.79];
	if(COLS){
	Ygritte
}
};
	dog -= ( destroy(rule(90,mislead())) / -rule(-TABLE[---Stark][( -0.94 )],y,89) / foo() )
} else {
	if(bar(COLS) + 460.292){
	Hodor += destroy(( -49 ))
} else {
	if(rule()){
	y /= ( mislead(destroy(x),destroy(TABLE[-Stark][( Hodor )],TABLE[( -ROWS )][-dog])) ) - TABLE[Hodor][COLS]
} else {
	Jon *= -Hodor;
	if(-( -foo(x,protect(),mislead()) )){
	Ygritte *= Sansa
}
};
	if(Ygritte){
	Jon += bar(ROWS,Ygritte);
	if(( ( ( ( --bar(Sansa,26 / TABLE[( ( ( -ROWS ) ) )][rule(36 / -Stark)]) / y ) ) ) )){
	Sansa -= -COLS;
	( TABLE[Stark][290.48 / ROWS] )
};
	( 0.83 )
};
	if(ROWS){
	x += foo(TABLE[( x )][mislead()]);
	if(( COLS )){
	if(-TABLE[0.48][-53]){
	rule();
	Sansa -= -x - foo(Arya,-1,rule())
} else {
	if(TABLE[COLS][TABLE[-COLS][( Sansa )]]){
	Jon
};
	-COLS;
	y += --( TABLE[dog][-rule(-( COLS ) / ( -70 ),protect(( Ygritte ),880.7))] ) * ( ( ( y ) ) ) + 19 / rule()
};
	Ygritte *= COLS;
	TABLE[-61 - protect(-120.325 - COLS,destroy(( TABLE[betray(55)][TABLE[COLS + -( mislead(dog,Sansa) - --0.05 ) - COLS / -1 / -( y ) + Jon - Stark + ---ROWS - bar(rule(1,( -750.2 ),-0.57),y) / ROWS / -( bar(-50.765,-COLS,Sansa + -betray(bar(( ( -( -Ygritte - foo(Ygritte) ) ) ) / y),( -0.02 ))) + Arya - COLS + -ROWS ) - -530.5 - ( ( Sansa ) ) * 830.849][( betray(-( betray(( TABLE[Hodor - -1][TABLE[destroy(( TABLE[( Jon )][TABLE[( x )][bar(Ygritte,-0.71)] / 12] ),-260.3)][COLS]] )) ) / ( -0.84 ),( ( destroy(37,foo()) ) ),ROWS - protect(( Arya ))) ) + ROWS]] )) - destroy(mislead(-( Jon ) / protect(COLS,destroy(-35)),betray(( ROWS * mislead(bar(mislead(( bar() ) + 0.89),( ( Sansa ) )) + destroy(TABLE[--0.71 / -Jon - 1][0.05]) * -Jon) ),foo(TABLE[ROWS][Hodor * COLS]),22))))][-( -( -COLS ) / x * -0.77 )]
} else {
	if(bar()){
	( ( Arya ) );
	if(mislead(destroy(( COLS ) * Arya + y)) / 1){

} else {

}
} else {
	Sansa *= TABLE[ROWS][Ygritte];
	TABLE[protect() / COLS - rule(-ROWS,-0.32 + -0.32,x)][dog / Stark - ( TABLE[COLS][( Arya )] ) + Hodor];
	dog += 1
};
	Stark *= TABLE[( ( TABLE[420.28][( ( -0.41 ) ) - betray(( bar() ),rule(destroy(bar(-ROWS,--betray() * y) * mislead(-( ( ROWS ) * Arya )) + ( -y - protect(ROWS) + Arya ),protect()),( -COLS )))] ) )][bar(( ( Ygritte ) ),--0.98) * y / ( -57 )]
}
}
};
	y *= -destroy(foo(x,( 0.63 ),( ( mislead(-bar(ROWS,Stark) * 0.34) ) )),( TABLE[--mislead(( Arya ),TABLE[-Hodor * -TABLE[foo(( 0.42 / -( ( y ) ) )) / ( TABLE[-1][COLS] ) + --ROWS + x][( ( -9 ) )]][Jon],0.35)][( ( ROWS ) )] ) * 1 / betray(Hodor,-bar() - ROWS))
}
}
} else {
	if(-900.878){
	if(dog){
	( -dog )
};
	Jon -= 1
};
	if(protect(dog)){
	if(mislead(390.75)){
	if(foo(-( -0.76 ))){

};
	if(bar(Stark)){

}
} else {
	if(destroy(-94,( ( Ygritte ) + -mislead(Jon,ROWS) ),protect(-bar(destroy(bar(--destroy(y),-12)) + ( protect(1,bar(Arya + COLS,Arya) - -TABLE[Sansa][Arya]) ) * Ygritte / 97) * Arya,-Jon)) * -rule(( -0.93 ),-( 89 )) / ( Jon ) * -1 * bar()){

} else {
	y *= x;
	Jon -= bar(-TABLE[-COLS][( -( COLS ) )] + ( y ),COLS)
};
	if(( mislead(mislead(0.85,betray(COLS,Hodor - rule(( -39 ) - -0.94)))) )){
	if(Arya){

} else {
	if(( mislead(Ygritte) ) / 70){
	if(Arya){
	if(COLS){

} else {
	( -0.89 );
	Arya *= 41;
	Ygritte
}
}
} else {
	if(mislead(-dog)){
	if(Ygritte){

};
	x;
	if(foo(x - --dog,-foo(protect(-( -COLS * ROWS ) / TABLE[( ROWS - foo(bar(TABLE[-0.81 + protect(-0.83,( -35 )) - 62 / destroy(( mislead(Jon - Sansa,Hodor) ))][foo(Jon,-0.67)],( ( ( ( ( Arya ) ) ) ) ),Jon),-TABLE[COLS][betray()],betray(betray())) )][( COLS )],-COLS),TABLE[1][betray(-( COLS ) / ( y ),Jon)],--COLS),Stark)){
	Jon -= 0.91
}
};
	-y
};
	ROWS / ROWS
};
	Arya /= Ygritte - 50
}
}
}
}
}
} else {

};
	if(COLS){
	( ( Jon ) );
	Hodor;
	if(Arya){

}
} else {
	if(-Arya){
	mislead(ROWS - -mislead(( ( ROWS ) ),-290.9 * bar(rule(COLS,Arya,--0.95 + ( 26 )),( ( -Hodor * ROWS / 880.27 ) * --0.51 ))));
	if(( -Stark )){

} else {
	y *= -35
};
	if(ROWS){
	dog *= Hodor
} else {
	-( -1 ) / rule(ROWS,mislead(-1));
	if(59 * betray(( ( ROWS ) / --69 + -630.04 ),-12)){
	if(-( ---1 / foo(COLS,rule(TABLE[0.35][x],310.713,dog) + ( ( rule(Hodor) ) ) - ( -dog - -TABLE[( -( --( -ROWS + COLS ) + -TABLE[ROWS][bar(-0.44,TABLE[x][ROWS],Ygritte)] * ROWS ) )][TABLE[bar(-( COLS / COLS ) * destroy(),( bar(500.4697,0.52,0.83) ),--TABLE[Ygritte][( --1 + ( -x + 57 ) + ( ( 55 ) ) + Arya + TABLE[-TABLE[-0.1][( -0.89 - ( -40.45 + Hodor ) )]][-170.6239] * betray(-1,Hodor - 511) / --530.91 + --0.88 * COLS - 28 )] + COLS)][COLS - -20]] * -64 ) - ( y ),-11 - x) + Arya / betray(-ROWS - -1 / mislead(0.14 * 16 / COLS * ( ---Hodor + betray(-0.26) ),-0.39),ROWS,( -TABLE[-1][rule()] )) - x ) + protect(Stark,( ( -x * -COLS * -( Ygritte ) ) ) * -13)){
	TABLE[mislead(--94)][( --140.07 )];
	if(COLS){
	if(-Hodor){
	if(( ( 52 ) )){
	-( 0.51 )
} else {

}
} else {
	x /= destroy(dog,( Ygritte ));
	if(0.9){
	dog /= Ygritte * -( mislead(-1) );
	if(Jon){
	-mislead()
} else {
	Hodor += -0.55 + ROWS * -( -0.9 - rule(( mislead(-( -y ) / COLS) ),-0.39) + COLS ) * ( Hodor )
}
} else {
	if(Hodor){
	Stark += -770.468
} else {
	if(protect(-ROWS,protect(--Arya,bar(Jon),-0.83 - -1000.185))){
	y *= -( Ygritte ) * ROWS / rule(-51 / -1 / dog - TABLE[COLS][ROWS],Hodor - -ROWS)
}
}
}
};
	dog += -0.5
};
	Stark *= -0.12
};
	Arya *= TABLE[1 + protect()][TABLE[Arya][( --Sansa )]]
} else {
	-betray(-1,Arya * destroy(60.86,-betray()) - ( rule(Arya) ),COLS);
	Ygritte += TABLE[-0.82 * --TABLE[TABLE[-0.35][( 340.74 )]][protect(-1)] * -foo(x) * 93 * TABLE[0 / 1][( ( rule(COLS) ) )]][bar(dog) / COLS - bar(COLS / ROWS - 73,---( TABLE[-Arya][--0.77] ),--18 + COLS / ( TABLE[foo(95)][( 0.35 )] - Sansa ))] + x
}
}
} else {
	y *= 0.3;
	Hodor += x - -0.1
}
}
}
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[( -( dog / TABLE[betray(dog,protect(( -1 )),( -Arya ) * protect(-1))][foo(( ( --foo() ) ),ROWS) + Stark] ) ) - -10 / Sansa + ROWS * betray(Sansa,-34 - Hodor)][k] {
	if(TABLE[bar(Hodor + TABLE[-x][dog],Hodor,71)][( ( foo(850.51,( -390.18 )) ) )]){
	-Hodor;
	if(COLS / COLS + ( x )){

} else {
	TABLE[ROWS][( ---TABLE[Sansa][-ROWS] )];
	if(TABLE[Hodor * Sansa][( ( Jon ) + COLS - --( 49 ) )]){
	13 * 920.6
} else {
	if(--rule(bar(-( Jon ) + ROWS,Sansa),1) * ( x ) / TABLE[TABLE[-Arya - COLS + COLS + ROWS * -( TABLE[-Jon][dog] )][-dog]][0.18]){
	0.34;
	-TABLE[y][-580.94 / ( Sansa )]
}
}
};
	if(( destroy(--0.78,-Jon * -600.915 + ( x + protect(( protect(dog) ),Jon) ),mislead(Sansa * ROWS)) )){
	-Hodor / y
}
};
	COLS - -betray(-foo(ROWS) / Ygritte);
	TABLE[710.646][-TABLE[foo(-990.34,59) - ( ( -( ( -TABLE[rule(ROWS,x,-TABLE[Jon][mislead(-( ( -680.44 ) ),21) / 680.39])][--mislead(( ( 0.01 ) ),( bar(Jon,destroy(( betray(( ( foo(rule(( bar(--550.12 * Arya,-80 * -0.44) ),mislead(960.287))) ) ) * TABLE[---0.49][-TABLE[ROWS][COLS] - -0.63 - Hodor + ( --ROWS ) - -80]) ),y,TABLE[foo(-1 * -2 / ( Hodor ) / 0.45 / -Arya * Arya,Arya * ( rule(COLS) ))][COLS])) )) / foo(-y,-Stark / 0.59) - protect(y)] ) ) ) )][-1]]
}
assert COLS : "Winter is coming"
def mislead(Sansa){
	dog += ( ( destroy(dog - -COLS,( rule(ROWS,-80 - -x) )) ) / dog )
}
assert -91 : "Winter is coming"
def TABLE[-53][i] {
	Sansa *= ( rule(-COLS) );
	( y * ( bar(-destroy(( ( COLS ) + rule(-1 + Ygritte) / foo(COLS) ),-68,--( TABLE[destroy(-TABLE[COLS][-TABLE[COLS][Ygritte]]) / y][-( destroy(foo()) + ( foo(TABLE[mislead(ROWS)][protect(ROWS,( -1 )) - -0.65 / Hodor * ROWS * ROWS],mislead(COLS,destroy(( -( -Sansa ) ),-Ygritte)),ROWS) / TABLE[ROWS][Arya] ) + -rule() ) + COLS] ) * destroy(ROWS,Stark / --rule(( Jon ),Stark) - ( x ),y)),-98) / Ygritte ) )
}
var Sansa = Jon
def TABLE[protect(( destroy(bar(),COLS,-TABLE[COLS][Jon]) ),protect())][j] {
	bar(-destroy(( 1 ),ROWS),0.32 / destroy(protect(Jon),rule(rule(dog),--Stark)));
	if(mislead(( Hodor ),-840.22 - -protect(TABLE[( bar(TABLE[bar(bar(betray(mislead(betray(rule(betray(-1) / Ygritte),--mislead(( -Jon ),TABLE[Stark][COLS]) / -59 / 1),ROWS,betray(rule(--( ( foo() ) ) / ( TABLE[-0.05][Arya] ) * ( destroy(-1,dog) ) + bar()),1,( -78 ))),bar() + ( 46 ) - -ROWS,TABLE[COLS][protect(( TABLE[COLS - mislead(TABLE[20.2886 * TABLE[Hodor][( ( x ) )]][-620.446 - --1],15) + 430.3031][protect()] ),( -COLS ))] - 0.85 * Jon / 0.86)),----Hodor,Hodor) + 1][0.71],Stark) )][ROWS],ROWS,-ROWS))){
	Ygritte /= -Jon - COLS
}
}
var Stark = rule(bar(( ROWS )))
def betray(){
	TABLE[TABLE[TABLE[Hodor][protect()] * ( COLS )][-COLS] + COLS][--( -1 ) - -340.8 + mislead(y,foo(Arya,-COLS))];
	Hodor += Jon
}
assert -0.84 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( -0.9 ) )][k] {
	Stark += 1
}
def TABLE[0.45][j] {
	if(Stark){
	if(Jon){
	ROWS;
	if(destroy(COLS,-0.79) - ( betray(( rule(( -bar() )) * ( 0.98 ) / ( Stark * --96 / Jon ) ),betray(-rule(-34,rule(-0.98,Sansa),protect(( --x ))),ROWS,dog) - ( -betray(1) )) )){
	-71 * ( Arya )
}
} else {
	ROWS;
	if(-( TABLE[-dog + -betray(-dog + -mislead(-mislead(-280.1335,rule()),-0.11),0.14)][-0.85] ) * x){
	Stark += ( COLS / -0.89 );
	-0.22;
	if(ROWS){
	if(-COLS){

};
	if(-1 - -40.4 - destroy(-Sansa,Jon) / -destroy(mislead(rule(),-foo(destroy(-( ( -64 ) ) / 47,( -Arya ))),TABLE[y][-ROWS]),Ygritte / -TABLE[-ROWS - -300.82][-COLS],bar(COLS))){
	Ygritte += -63
} else {
	if(ROWS){
	if(foo(Jon)){
	if(( ( Hodor ) )){
	Hodor -= -y
}
}
} else {
	Arya /= protect(( 28 ));
	-rule(Ygritte) + -betray(0.77);
	if(( -0.39 ) * ( COLS )){
	Jon *= ROWS;
	foo(( ( --91 ) ),-COLS)
}
};
	-x
}
}
} else {

};
	rule(TABLE[COLS][( ( -mislead() * -200.88 * bar(( -1 - Sansa ),( Stark ),( ( destroy(( -180.5599 ),COLS,dog / destroy(Ygritte)) ) )) ) )],( -64 ))
}
} else {
	-0.29
}
}
var Stark = ( protect(COLS) )
def foo(Arya,Stark){
	if(-dog){
	Jon /= ( COLS + -( COLS * Hodor ) * Ygritte * --Sansa + ROWS - protect(( ROWS )) / bar(-bar(1 - -88),0.48,2) / ( mislead(ROWS,( ( --ROWS ) / ( -( rule(620.74 * --y) ) ) ) / ROWS) / -30 ) + ( ( protect(Jon - -rule(-54),-dog) ) ) );
	Stark;
	Ygritte *= ( -0.23 )
};
	Ygritte *= -0.85
}
def rule(Arya,dog){
	if(-0.05){
	-dog + ( -foo(---340.017,TABLE[Hodor][-( -1 )],1) ) - ( dog + ---23 ) / --Jon;
	Sansa *= y
}
}
def TABLE[COLS][j] {
	if(Sansa){
	Jon -= --( -94 );
	if(x){
	ROWS;
	if(-TABLE[destroy(rule(( -0.53 ),--340.26),Stark - --570.99)][Sansa / destroy(Stark)]){
	Jon /= ( ROWS )
};
	if(-230.33){
	if(Stark){
	x *= -630.49
} else {
	ROWS;
	Jon /= 0.3 / protect(Sansa,-destroy(Stark,-580.2))
}
} else {
	dog -= ROWS;
	if(-rule()){
	Stark;
	if(TABLE[TABLE[( COLS )][( ROWS )]][( ROWS )]){
	if(destroy(37)){

} else {

};
	Stark *= betray()
} else {
	Ygritte /= betray(( Sansa * TABLE[x][foo(betray(-1 + bar(-0.35,rule(-Jon * ROWS / COLS,( ( rule(( betray(betray(( foo(( Stark ),-37) ))) )) ) ),rule(COLS)) - y)),-protect() + -( -91 ),destroy(-89))] ))
}
};
	( -23 + y + y )
}
}
};
	if(-rule(( ( COLS ) ),-( x ))){
	x;
	--( ( Hodor ) ) / -0.43
} else {
	dog *= ROWS;
	foo(x + Arya)
};
	TABLE[TABLE[-COLS / ROWS - betray(( 1 ) * y,ROWS,-1)][ROWS / ( ( ( -69 ) ) + destroy(ROWS,Hodor) )]][850.3808]
}
def TABLE[( -1 )][i] {
	if(ROWS * -TABLE[--Ygritte][rule()]){

} else {
	y -= ( 0.22 );
	Sansa += ROWS
}
}
def TABLE[-TABLE[TABLE[-destroy(-ROWS,TABLE[24][( ( y ) - ROWS )])][Ygritte]][-78 / ( ROWS ) * rule(-ROWS,( ( --( TABLE[y][Hodor] ) ) ))]][k] {
	Sansa /= -mislead(Jon,( COLS / betray(TABLE[ROWS][19 - -0.01],rule(destroy(-550.795),--0.38)) )) / ( -1 + ( ( Hodor ) ) );
	ROWS;
	Arya *= foo(( ( 670.9 ) ),COLS)
}
var Hodor = ROWS
var Hodor = rule(--510.356,Ygritte)
def betray(){
	if(Ygritte - TABLE[mislead(mislead(--mislead(( betray(Hodor,COLS) )),73)) * --protect(( COLS )) / -TABLE[Arya][x] / ROWS * Hodor - ( ( -COLS ) + bar(-bar(TABLE[Hodor][-0.91],Jon,protect(ROWS,Hodor,-0.71)),betray(500.8,betray()) * -( -0.4 )) )][-( ( ROWS + x ) ) / ---0.35]){

};
	( x )
}
assert destroy(( Ygritte )) : "Nothing burns like the cold."
assert ( foo(( TABLE[ROWS][Arya] ),rule(-Hodor - -bar(rule(( Sansa )))),Sansa) ) : "Winter is coming"
def protect(Sansa,Hodor){
	if(TABLE[0.51][( bar() )]){

} else {
	protect(betray(ROWS))
};
	-79 - ( ( -Ygritte ) ) * ( 0.98 );
	Jon *= ( ROWS - -protect(destroy(),Sansa) + -Sansa / mislead(mislead(ROWS),0.15,foo(rule(),ROWS * ( ROWS ))) )
}
var y = TABLE[-1 + 290.024][( ( ( -TABLE[Jon][---bar(Arya,( -62 ))] ) ) )]
assert TABLE[foo(0.05,-( protect() ))][-Stark + foo(rule(( -destroy() ),y),-( dog ),-1)] : "Fear cuts deeper than swords."
assert ( mislead(-( -Jon )) ) - mislead(-160.135) : "Fear cuts deeper than swords."
def TABLE[foo(ROWS + Stark,-destroy(Arya) - protect(-0.49 - -( Jon ),COLS),x / ROWS / foo(-90))][i] {
	if(--protect(-63,Sansa)){
	if(-( protect() ) + ( ( rule(Sansa) ) * Sansa )){
	Sansa /= x;
	( ( COLS ) ) * 0.33
}
};
	x /= -93
}
var Sansa = rule(( ( mislead(-dog) ) - foo(Jon,mislead(ROWS - -1),-0.4) ),betray(foo(destroy(COLS,bar(),mislead(( -( ( -72 ) ) / -0.1 ),x,----TABLE[-57][( mislead(Hodor - foo(--ROWS * y,( 1 ),Hodor),( 0.99 ),( Arya )) )] * TABLE[( x )][COLS - Ygritte] * x + Sansa * protect(Hodor - betray(( rule() ),70 * Arya)) + TABLE[-protect(TABLE[destroy(-Ygritte,( Stark ))][0.48],TABLE[95][COLS])][Ygritte])),Ygritte)),0.59)
var x = 0
def TABLE[-destroy()][j] {
	-0.74;
	( -y * ( --44 ) )
}
assert ROWS : "Fear cuts deeper than swords."
assert -( TABLE[Jon][betray(COLS,mislead(ROWS,( -1 )),dog)] ) : "One can not simply parse himself"
assert ROWS : "Fear cuts deeper than swords."
def TABLE[Ygritte * mislead(-Sansa,-89)][j] {
	if(Sansa){

}
}
def TABLE[Hodor][k] {

}
assert ROWS : "What do we say to the Lord of Death?"
var y = Stark
var x = dog
def mislead(Stark,Hodor){
	( ROWS );
	if(COLS / ---56){
	if(dog){
	if(---0.02 / Hodor - ( ROWS ) - -44){
	if(-protect() / ( bar(( bar() ),--betray(TABLE[( ( -----( ( dog ) * 920.974 / --0.12 / -0.11 / -ROWS ) ) )][protect(ROWS)])) / Sansa / mislead() )){
	if(-12){
	x /= 0.68;
	if(betray(( foo(-1) )) + protect()){
	Jon
}
};
	Arya /= TABLE[COLS][0.06]
} else {
	if(Stark){
	TABLE[21][( Jon )];
	if(y){
	if(ROWS / COLS){

} else {
	if(( protect() ) + ( ( COLS * --0.38 ) )){

};
	Ygritte /= -Jon
};
	Hodor *= dog
}
};
	Hodor *= ( Sansa );
	-ROWS
};
	Arya -= betray(55) + COLS;
	Arya += Arya
}
} else {
	Hodor;
	( rule(-0.37) )
};
	x *= -0.78 + -rule(protect(ROWS),rule(dog),78);
	if(-11 / x / ( betray(( TABLE[COLS][( COLS )] ),( COLS )) )){
	if(-0.01){
	if(0.62){
	x -= ( ( --( foo(COLS,( destroy(( -30.2176 ),ROWS * ROWS,( ROWS )) )) ) ) );
	Ygritte /= TABLE[--TABLE[Jon][dog]][-Stark / 0.64]
}
} else {
	y *= Arya
};
	if(destroy()){
	( ( ( Ygritte ) ) );
	if(( x / -0.05 )){
	TABLE[1][-y];
	x /= -630.2456
}
} else {
	if(destroy(-1,Ygritte)){
	y += Hodor / Sansa - ROWS / ( Jon )
};
	y /= COLS
}
}
} else {
	dog *= --46
}
}
assert dog + TABLE[protect(COLS)][( -( 82 ) * x * Jon )] : "What do we say to the Lord of Death?"
assert protect() : "One can not simply parse himself"
def TABLE[( 0.74 )][i] {
	x /= -( TABLE[Sansa][bar(--Jon)] )
}
def betray(x){
	y += destroy(Hodor,Hodor);
	( -Jon );
	( ( TABLE[( foo(Arya) / --x ) - ROWS][dog] ) ) / ( y )
}
def mislead(Sansa,y){

}
def foo(Sansa){
	bar()
}
var Arya = 25 - Ygritte
assert -dog : "One can not simply parse himself"
assert betray(bar(foo(( ROWS ),destroy(),-COLS / rule(-Hodor - ( Sansa ))) / ( Ygritte ),ROWS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = COLS * COLS
def TABLE[TABLE[TABLE[( Jon )][( Hodor )]][dog]][j] {
	if(dog){
	0.01;
	if(Jon){

}
} else {
	( Ygritte ) * destroy(foo(( protect(Sansa) ),COLS,destroy(( TABLE[x][--0.63] + -0.57 / protect(COLS,-COLS,( -0.8 )) ),0.2))) + mislead(( TABLE[ROWS][-70] ) / 51)
}
}
def TABLE[TABLE[--dog][ROWS]][i] {

}
def destroy(Hodor){
	x;
	-bar(( Hodor ),( COLS )) / -0.22 + -0.64
}
var Stark = COLS * ( -foo(COLS) )
var Hodor = ( 0.47 / y )
var Arya = Arya
assert TABLE[Hodor][ROWS - foo(ROWS)] : "Fear cuts deeper than swords."
def destroy(Stark,Jon,Hodor){

}
assert COLS : "Nothing burns like the cold."
assert Sansa : "Fear cuts deeper than swords."
def TABLE[( x ) * protect(Arya,( ( ROWS ) ))][k] {
	bar(Ygritte,ROWS);
	if(betray(--y * ( foo(COLS,-Stark) / -91 ),-0.02)){
	if(-Ygritte){
	x *= Sansa;
	-290.1
}
}
}
assert -rule(COLS,mislead(COLS) + dog,( 380.22 ) + destroy(ROWS)) : "Nothing burns like the cold."
assert ROWS : "One can not simply parse himself"
assert ROWS : "Fear cuts deeper than swords."
def TABLE[( -ROWS )][i] {
	if(COLS){
	ROWS;
	-0.65
};
	Stark += 0.54
}
def TABLE[Sansa][k] {
	Hodor /= ( COLS )
}
assert protect(mislead(),( 920.911 )) : "What do we say to the Lord of Death?"
assert 0.49 : "One can not simply parse himself"
def TABLE[TABLE[( -Sansa )][y]][k] {
	Arya /= -Arya;
	x /= Sansa;
	Hodor /= ( -Hodor * Stark )
}
var Hodor = COLS + 0.48 + ( ( mislead(destroy(foo(),( -protect(-0.47) ))) ) ) - --Stark / TABLE[protect(x,-ROWS,99)][( Jon + --36 / destroy(( protect(80,( -49 ) - -0.09,rule(COLS)) ),mislead() + protect(11) / protect(-TABLE[destroy(-COLS - ( mislead(-60) ),ROWS,-36)][TABLE[protect(( protect(-1,x) ))][( ( COLS ) )]]) / dog,( ROWS )) ) + -ROWS] * 96 * betray(mislead(1) + -TABLE[bar(( COLS / 51 / COLS ),Ygritte)][-76] + Ygritte,rule(COLS) / --( TABLE[( ( -1 ) )][bar(-( TABLE[( ( -1 / TABLE[Ygritte][betray(-0.3,Ygritte) / 45] ) )][-0.81] * x ),Ygritte)] )) * ( ( -( Ygritte ) ) ) / TABLE[ROWS][betray(-5,Ygritte,-COLS)] / Hodor
assert TABLE[foo(( -betray() ),1)][900.6] : "What do we say to the Lord of Death?"
var Jon = COLS
def mislead(Arya,Hodor){
	if(( Arya ) / -0.15 * TABLE[--0.63][rule(COLS)] - destroy()){
	if(-ROWS){
	TABLE[dog + --TABLE[-1][protect(-COLS,-Ygritte,( -Sansa * x ))]][-( ( ( protect(-( -13 ) - ROWS - 4,87 / -Jon) ) * protect(-destroy(y)) ) ) / x]
};
	ROWS
};
	Hodor;
	if(bar(0.86) + rule(COLS,rule(-1,-x),ROWS) * mislead(betray(Hodor,COLS),Ygritte) - -950.8 * y + ROWS){
	COLS + ( --( -250.9 ) + 1 );
	if(-1){
	protect(( ROWS / foo(ROWS,foo(( ROWS ),( protect(mislead(-78),( COLS )) )),-ROWS) + -Ygritte ),590.99);
	if(bar(-28,ROWS)){

} else {
	bar(Ygritte,29,Arya);
	if(( rule(Arya,protect(COLS,-rule(0.82) + protect())) )){
	Arya *= Sansa
}
}
} else {
	Jon += ---0.78
};
	dog += -1 - Stark
} else {
	if(destroy(Ygritte)){
	if(betray(ROWS)){

} else {
	if(24){

};
	Hodor -= -0.88
};
	COLS
} else {

};
	Jon *= ( COLS )
}
}
def protect(Ygritte,Ygritte,Hodor){
	Arya += -( ( foo(0.64,( 840.18 ),---( -mislead() / TABLE[rule()][( bar(y,betray(-rule(dog),x,Sansa),-Ygritte) )] ) + ( -0.99 )) ) * dog );
	dog
}
def TABLE[( COLS )][k] {
	Stark += ( ( COLS ) * ROWS );
	COLS;
	Stark
}
def TABLE[ROWS][k] {
	betray(-0.99,bar(-( x )))
}
def TABLE[0.32][k] {
	if(COLS){
	if(-Hodor * protect(TABLE[( ( ( COLS ) ) )][mislead()] / y,( y )) - 63){
	if(( COLS / ROWS )){
	Jon -= ( bar(y,foo(-Ygritte,Jon)) );
	Stark += 23
};
	Jon += betray(rule());
	( -Ygritte )
} else {
	y += ( ( -foo() + ( ( -mislead(COLS,betray(-betray(Jon),-COLS,destroy(-42,--1,dog)),2) ) ) - -COLS / 970.19 - ROWS ) );
	-0.4
};
	Sansa /= -TABLE[-0.38][Jon]
};
	Ygritte /= COLS / -( betray(protect(( mislead(--ROWS * Jon) ) / TABLE[( -7 )][( -27 ) / 44 - Jon] * -590.064,y) * foo(x,( Ygritte )) * rule(x,Jon,protect(11,-0.76 - dog)),--19 + TABLE[foo(-Stark + -0.88,-mislead(),betray(Hodor,( -0.34 ),mislead(Jon,--destroy(ROWS,Sansa,( rule(COLS) )) + ( COLS * ( 1 ) + rule(ROWS,y,-Jon + dog - y) * -12 ))))][dog]) )
}
var Sansa = ( ROWS )
assert ( ROWS ) : "Nothing burns like the cold."
var dog = protect(-1,( -destroy(ROWS,( x )) ),COLS)
var Jon = Arya
assert betray(Arya) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(y,dog){
	Ygritte += dog;
	betray(( ( ( ( COLS ) ) ) ) / TABLE[( ( ROWS ) )][( 0.2 )] + ( -1 ))
}
var Hodor = rule() / ROWS
assert ROWS : "Fear cuts deeper than swords."
var Sansa = ( -1 / ( TABLE[COLS][betray(( COLS ),Hodor - dog)] ) )
def rule(x,Arya){
	if(-( COLS )){

} else {
	Hodor /= ROWS;
	-Stark;
	dog += rule(( -( 1 ) ),( -( bar(--TABLE[-0.09][( destroy(ROWS,COLS) )] + -( ( ( y / ROWS ) ) )) ) ),( Jon ))
}
}
def betray(dog){
	y -= 0.18;
	if(dog){

} else {
	Jon -= ( -x + ( y ) ) - 0.99
};
	if(betray(ROWS,Stark)){
	if(-0.84){
	if(( -bar(10,TABLE[protect()][-( -protect(Jon) - -mislead(Ygritte) - ( protect(1,( mislead() * 11 ),180.15) ) )],-rule(( -260.1 ),-ROWS * -x)) + -bar(Hodor) )){
	ROWS;
	Hodor;
	if(Stark){

} else {

}
} else {
	Hodor;
	Hodor
};
	if(0.51){

};
	Arya - y
};
	if(dog){
	Sansa /= 70.8737
}
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -Stark + ( -( ( Sansa - bar(foo(( ( 770.4 * Ygritte ) ))) ) ) )
def mislead(y,dog,Hodor){
	Arya *= Ygritte;
	Jon /= 0.94
}
def TABLE[ROWS][k] {

}
def betray(Ygritte,Arya,Stark){
	if(y){
	mislead(COLS,( betray(ROWS,( ( -48 ) )) ),Hodor / --68 + ( Jon ))
} else {
	Stark /= -0.93 + bar(COLS,1)
}
}
assert --( -0.73 * COLS ) : "One can not simply parse himself"
assert -34 : "What do we say to the Lord of Death?"
def protect(){
	Ygritte -= 0.18;
	Stark -= Jon / -1 - ROWS;
	Arya += -75
}
assert -44 : "Nothing burns like the cold."
assert mislead(Stark) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-foo(33 + x / dog + -90,-1)][i] {
	COLS;
	Sansa *= COLS;
	if(-Ygritte){
	y += ROWS
}
}
var dog = ( 15 )
assert -38 : "Fear cuts deeper than swords."
assert 0.4 : "What do we say to the Lord of Death?"
var Arya = Jon / ( -32 )
def TABLE[-94][j] {

}
def TABLE[ROWS][i] {
	Arya *= ( betray(dog,0.02) );
	-530.9
}
def protect(Sansa,x){
	ROWS;
	foo(betray(y),ROWS);
	if(foo(( COLS ) / TABLE[( Stark )][x])){
	protect();
	y *= -dog
}
}
def TABLE[TABLE[73][( Arya ) / TABLE[TABLE[980.8909][foo(( protect(--destroy(TABLE[x][0.43],Sansa) / bar(destroy(COLS,destroy(bar(-36),-80,--destroy(TABLE[Sansa][-betray(-0.57) - 0.7],( bar(-43,ROWS,Ygritte) - --TABLE[Arya][foo(Hodor,COLS) + ( COLS )] )))),92,0.23),Stark) ))]][-74]]][j] {
	if(Hodor){
	-1 / betray(TABLE[( protect(( Stark ),Ygritte) )][-( COLS )],-1);
	-protect(( ( Sansa ) / -TABLE[dog][( ( Stark ) ) - bar(--rule() / ---ROWS + 0.13)] ),TABLE[-1][Stark / COLS])
} else {
	Arya += foo();
	Ygritte /= ROWS;
	Jon /= y * mislead(( ( -TABLE[mislead(-1 / 87)][Ygritte] ) ))
};
	if(Hodor - protect(-rule(-betray(( rule(ROWS) ))) + 29) / protect(( betray(( ( 0.24 ) ),( 0.15 )) ),1)){
	TABLE[-TABLE[-Sansa][-foo(-0.61,83,Hodor)]][protect(TABLE[TABLE[destroy(x - --TABLE[COLS][y] - 1,betray(-59 / rule(( ( TABLE[Stark][( protect(99,-46) )] ) ),Stark,0.94 * ( mislead(-Hodor) ))))][-60]][Sansa * protect(--Stark)],Hodor + COLS,ROWS)];
	if(( ( ( ( COLS ) ) ) )){

} else {
	if(ROWS){
	if(betray(1,Ygritte,mislead(COLS + ( -COLS ),destroy(( -0.12 - Ygritte ),-180.08)) + -51) / -Jon){
	if(-ROWS){

};
	( rule(mislead(ROWS,Ygritte)) )
} else {
	Stark /= ( Hodor );
	if(ROWS){
	foo(protect(( ( ROWS ) ),y));
	Jon /= mislead(( -( 0.4 ) + Ygritte ),ROWS)
}
};
	if(rule(-( -mislead() ) - Jon - dog,( destroy(ROWS) ))){

};
	TABLE[-0.56][-0.33]
};
	x -= destroy(( ( ( ( -0.52 ) ) / Stark * TABLE[COLS][Hodor] ) - ( y ) ) + Hodor + -99,bar(-80,-betray(( foo(ROWS,COLS) )),COLS - Hodor * ( -ROWS )),-680.661)
}
};
	if(mislead()){
	Jon /= COLS;
	Stark -= TABLE[33][( destroy(-0.8 - -22) ) / -Stark]
} else {
	Arya /= TABLE[( TABLE[( ROWS )][( ( 52 ) ) - dog] )][-( ROWS )]
}
}
var Stark = ROWS
def TABLE[rule() + 500.992][k] {
	( dog )
}
assert Stark : "Fear cuts deeper than swords."
assert ( TABLE[-0.98][-mislead(1) / y] / -protect(ROWS) ) : "Winter is coming"
def destroy(Ygritte){
	if(dog){
	x /= -0.58 + foo(-68,1,-930.009);
	betray(rule(-Sansa,Jon),( 30 ),( COLS ))
} else {
	Sansa /= -0.88
}
}
def destroy(Jon,Jon,y){
	if(18){
	if(--0.96){
	0.47
};
	Arya -= Stark
}
}
def TABLE[820.128][i] {
	Ygritte + betray(--0.68,( TABLE[Sansa][-0.48] ))
}
assert Sansa : "Nothing burns like the cold."
def rule(){
	dog -= --( TABLE[0.58][foo()] * -1 ) / Hodor;
	Stark /= ( 60 )
}
var Sansa = ( Jon - -Hodor )
def TABLE[ROWS][k] {

}
var Arya = ( -60.22 )
def foo(Ygritte){
	mislead(COLS) + COLS
}
assert ( Jon ) : "Winter is coming"
assert ROWS / COLS : "What do we say to the Lord of Death?"
def mislead(Stark,Hodor){
	dog += -x;
	-1;
	y -= 1
}
var x = ( betray(COLS * --5,--ROWS,COLS) )
def mislead(dog,x){

}
def rule(Stark,y,Ygritte){

}
assert COLS : "Fear cuts deeper than swords."
var Sansa = ( ( --( -31 ) / ( -ROWS + -0.1 / protect(-16,Hodor) ) - Ygritte ) )
var Hodor = Stark
var x = Sansa / 0.1
assert foo() : "One can not simply parse himself"
def foo(Jon){

}
assert destroy(protect(Jon,-1),( ROWS ),dog) : "Fear cuts deeper than swords."
var y = x
var y = --55 * -COLS * dog
assert foo() : "Fear cuts deeper than swords."
def rule(x){
	-rule();
	Ygritte /= -52
}
assert -Arya : "Nothing burns like the cold."
var Hodor = --410.832
def TABLE[-1][j] {
	Stark /= mislead(-1);
	Arya -= ( COLS );
	if(-Sansa){
	( y );
	( destroy(foo(y),-770.28) )
}
}
def TABLE[( y )][k] {
	8 - destroy();
	if(-( 33 )){
	dog;
	if(-570.72){
	Arya /= TABLE[protect(-Arya / Ygritte)][rule() / -y];
	if(-Stark){

} else {
	if(( betray(( Hodor )) )){

}
}
} else {
	COLS;
	if(( --ROWS + -Sansa )){
	x -= ( -50.79 )
} else {
	Stark /= dog
}
};
	Arya -= -Ygritte
} else {
	-190.784;
	Ygritte -= -ROWS;
	Jon *= betray(( Ygritte ))
}
}
def TABLE[bar(protect(Sansa),-0.33)][k] {
	foo(82 - ROWS)
}
var x = rule(rule(Sansa))
def TABLE[-820.26 + -bar(COLS,-COLS - COLS - foo())][k] {
	( rule(-Stark,ROWS,COLS) ) / 1 + -( 1 - Stark ) / ( Jon / ( ( ( ( Ygritte ) ) ) * -0.92 ) ) / --Ygritte;
	if(( Ygritte )){
	betray();
	Hodor /= ROWS + rule(mislead(mislead()),ROWS)
}
}
assert 0.35 - 52 : "Nothing burns like the cold."
var dog = ROWS
var Arya = TABLE[( ( ( y ) ) )][-( rule() ) + y / ( -40.0439 / betray(Ygritte,destroy(TABLE[( Arya * Stark )][COLS])) )]
var Jon = -59
def TABLE[destroy(( ROWS ),Arya,ROWS) / foo(protect(--( ROWS ),destroy()),-( Jon )) - protect(ROWS,-1,TABLE[bar(-31,bar(bar(( ( ( TABLE[destroy()][( Sansa )] ) ) ),ROWS),--0.36),Stark)][( TABLE[TABLE[dog][-ROWS]][x] - -( ( -88 / ( Ygritte ) ) ) )])][k] {
	if(protect()){
	y *= ( Arya ) - TABLE[( protect(( -TABLE[-ROWS][( betray(ROWS,( -( ROWS ) + dog ),Hodor) )] )) )][( TABLE[TABLE[-TABLE[-( ( -Sansa + -3 ) / -ROWS ) * ( ( Hodor + foo(-91,COLS - Hodor) ) )][( ROWS )]][-0.69 + mislead(-0.86,-1)]][y] )] * ( ---1 * -( 0.77 ) )
}
}
var x = -TABLE[COLS][Arya] + ( ( x ) )
var Stark = ( Hodor - Hodor )
def protect(Arya,Hodor){

}
var Sansa = ( ( -bar(Jon,--280.1697) ) )
def destroy(Jon,Hodor){
	y;
	-( -77 ) * 0.73;
	-0.77
}
def TABLE[COLS][k] {

}
def TABLE[( Stark * ( ROWS ) )][j] {
	if(rule()){
	Sansa -= TABLE[Jon][COLS]
} else {
	if(-Stark){
	0.97 * -x
} else {
	y += -y - -16;
	if(-1){

};
	1
};
	0.41
};
	( y ) - protect(( Ygritte ),( Hodor + foo(-0.64) ));
	Jon -= -betray(foo(protect(ROWS,( -( ( dog ) ) )),protect(dog,( Jon ))) / ( ( Sansa ) ))
}
def TABLE[-87][i] {
	Jon /= TABLE[( bar(COLS,-1,Stark) )][-COLS * ( ( -TABLE[Arya][-12] ) )]
}
def TABLE[dog][j] {
	dog += Ygritte * TABLE[x][protect(( 31 ),( 0.68 + betray(( ( rule(Stark,-0.62) ) )) ))] + -COLS;
	rule(Stark * Jon,-COLS,( -( betray(protect(1,-0.56 - -0.04)) ) ) * rule(( Stark ),( ( -Ygritte + Ygritte - COLS ) ),( y )))
}
var Sansa = COLS
def destroy(Jon){
	if(bar(-dog,0.05)){
	-COLS;
	-( ( mislead(mislead(COLS),TABLE[-Ygritte][( ROWS )]) ) )
} else {
	Hodor -= 0.77 + destroy();
	( -mislead(y,mislead(-0.46 * -( ( -0.63 ) ) * ROWS,-( TABLE[protect(protect(( -( TABLE[( ( 0.35 ) )][protect(( protect(Sansa) ),COLS) * 1] ) - TABLE[mislead(-0.12,TABLE[670.1233][rule(x,-y,99)])][( Arya )] ) - 1 / Arya * mislead() + ( Hodor ) + mislead(),betray(rule()))) - --y - -0.18][x * dog] )),bar(( 1 ),( TABLE[( ( -1 ) + TABLE[( Jon )][destroy(TABLE[Ygritte][( ( TABLE[destroy(-880.63 * 33,TABLE[TABLE[( dog ) + -89][ROWS]][betray(destroy(( ( ROWS ) ) + ROWS + Hodor,COLS),-rule(79))],( --( ( -Jon ) ) ))][( protect(Arya) ) / -Stark + 1] + ( Sansa - -1 ) ) )],foo(--0.21,-1,( -78 )))] )][y + Sansa] ),Ygritte)) )
};
	if(( -30.305 )){
	Arya /= ROWS
};
	if(COLS){
	Hodor += COLS;
	COLS
} else {

}
}
assert -67 + -0.53 * 39 : "Winter is coming"
var dog = -rule()
def protect(dog,Ygritte){
	if(-0.67){
	Stark
} else {
	-Sansa - -foo() + ( -mislead(-28,betray(TABLE[( -destroy(rule(foo(-ROWS),Jon * COLS,TABLE[y][COLS]) + x) ) * -bar()][( dog )])) ) - mislead(betray() + -y);
	-100.18
};
	y *= ( 670.389 * y )
}
assert TABLE[--foo(( TABLE[ROWS][foo(destroy(--45 - TABLE[Stark][protect(( --COLS / --protect(Ygritte,ROWS) * Hodor ))],Sansa))] ),TABLE[( y )][( TABLE[77][ROWS] / y )])][( Ygritte / protect(protect(destroy(91),dog),TABLE[TABLE[TABLE[-Sansa * Sansa][-bar(COLS,protect(( mislead(ROWS * -destroy(-89 - -0.82,x) / bar() + ROWS + 650 + dog - betray(55),( -ROWS )) )))]][bar(( destroy() - rule(Hodor) * ( dog - -550.49 ) ) + Jon,COLS)]][-33] / x + COLS) )] : "What do we say to the Lord of Death?"
def TABLE[-58][j] {
	--TABLE[630.62 + -ROWS][Stark];
	-0.11 * COLS * TABLE[ROWS][--0.56];
	-COLS
}
def destroy(Sansa,dog){
	dog *= 0.59;
	dog
}
def TABLE[( foo(-x,TABLE[-y][bar(Stark,-0.32,COLS)],bar(-41,-15)) )][j] {
	Jon /= ( -( Ygritte ) )
}
assert 23 : "One can not simply parse himself"
def bar(){
	if(--56){
	if(rule(-COLS,( ( -( -4 ) ) - Jon ))){
	x -= Stark
} else {

};
	if(-Stark){
	if(0.3){
	-ROWS
} else {
	if(-foo(betray(betray(( rule(COLS,680.0953,TABLE[Sansa][-bar()]) ))) * Jon)){
	Hodor /= 87;
	COLS
};
	if(TABLE[( -1 )][-TABLE[-Stark][( mislead(-0.35,46) )]]){
	Arya -= ROWS;
	ROWS
} else {
	TABLE[( ( TABLE[( ---57 )][-betray(TABLE[-32][-0.87] / protect(Hodor,-33),-bar(( destroy(Ygritte) + ROWS ),-betray(bar(Jon + TABLE[COLS][bar(-0.9 / ( -TABLE[--ROWS][--TABLE[bar()][-75]] ),( dog ),Hodor)]) / --69 - Jon,( TABLE[TABLE[betray(-43,y)][COLS * -mislead(protect(--0.88),bar(),87 * -COLS * COLS - x)] * -0.73][rule(Ygritte)] ),Hodor)) * -bar(foo(y),betray(87,-TABLE[-COLS][TABLE[( ( 29 + rule(TABLE[betray()][destroy(0.68,( ---( -( rule(Arya * -COLS * destroy(),-( 82 )) ) ) ))] / Ygritte,protect(37)) ) )][--1]]) / dog) * -0.02) - dog] ) )][TABLE[( -TABLE[( ( ( COLS ) ) + ( -( ( Hodor ) ) ) )][y] )][protect(TABLE[bar(( Arya ),TABLE[TABLE[-ROWS][( ROWS )]][-0.92 / TABLE[COLS][( ( ROWS ) )]]) + betray(bar(x)) + -1][x],( bar(-destroy(TABLE[betray()][Sansa] / ROWS / x),0.65,-1) ))]]
}
}
} else {
	Sansa /= betray(0.15,protect(Jon,70))
}
} else {
	x *= -0.891
};
	if(-8 / rule(Stark,ROWS,( ROWS )) * ( ( ROWS ) )){

}
}
var Ygritte = 33
var x = 85
var Jon = COLS
def destroy(Stark){
	Sansa -= destroy(-1,0.56 / -( Ygritte ));
	Ygritte /= bar(1,Stark)
}
def TABLE[--( destroy(( -( ( --750.6 ) + TABLE[-betray(( 19 ) * mislead(30 + betray(1,bar(ROWS,Stark)),( ( ( foo(100.6865) ) ) )))][-Hodor / -Ygritte * COLS] - destroy(Hodor,( TABLE[protect(Stark * -5,mislead(mislead(Jon,( Stark * --y )),-( 28 )) + ( rule() * -COLS / dog ))][( -mislead(ROWS * Jon,-0.66) )] ),( ( -( COLS * Stark - mislead(( 0 ) - --Sansa) ) ) ) / TABLE[--21][( bar(bar(( ( ( x * Ygritte ) ) ) + -betray(),--1)) )]) * 0.52 * rule() - TABLE[COLS][( foo(Jon / mislead(-destroy(TABLE[0.01][rule(( TABLE[Hodor][( Arya )] ) - 0.43,Ygritte,( -rule(rule(-0.53,-1 * destroy(protect(Stark,0.93,-32),( 72 )) / ( TABLE[290.2085][-1 * TABLE[Stark][-ROWS] - dog + COLS] ) * 0.64 - mislead(COLS,ROWS) * Stark - --( -( Ygritte ) )),( Stark ) - ROWS,foo()) )) - foo(-Stark)],betray(dog,x,-14 / --foo(-1,-0.85 + Stark,COLS) / -0.64 * -980.18),betray(-dog)),COLS,( -1 ))) )] ) ),foo(-( Jon ))) )][k] {
	x / bar(( ROWS ));
	if(-480.667){

} else {

};
	Sansa -= ROWS
}
def foo(Stark){
	if(-y){
	Hodor += -COLS
};
	if(( Sansa )){
	Jon -= Stark;
	dog /= betray(-1,Ygritte)
} else {

};
	dog -= y
}
def rule(Arya,Arya,dog){
	--ROWS;
	if(Hodor){

}
}
assert Jon : "What do we say to the Lord of Death?"
def mislead(Hodor){
	0.77;
	if(--protect(-0.19,Hodor)){
	Stark /= Ygritte + Jon;
	dog -= --48 / -protect(3)
}
}
def betray(){
	y *= -( ( ROWS ) ) + ( foo(betray(foo(),-1),foo(ROWS),Sansa) ) * ( ( ( ROWS ) ) ) - ROWS + ( 1 ) / ( ROWS + TABLE[ROWS][dog * ROWS * x] );
	TABLE[( ( -1 ) / ( foo(( -destroy() )) - betray(-COLS * Stark,bar(( -0.57 ) - foo(Ygritte,Stark - Ygritte),47 - -0.58,Arya)) ) )][TABLE[-bar(x - 220.6179)][Ygritte] * 3 * rule(( --rule(28) + TABLE[betray(( ( ROWS ) ))][rule(mislead()) * y] ))]
}
var Jon = betray()
assert bar() : "Winter is coming"
var Arya = ( Jon + ( -destroy(bar(( 940.4 ),-COLS / COLS)) ) )
assert ( ( Ygritte ) ) : "One can not simply parse himself"
def bar(){
	Sansa *= ( 40 );
	Sansa /= ( -Ygritte )
}
assert destroy(Ygritte,-Arya) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Ygritte
assert -0.56 : "One can not simply parse himself"
def destroy(){
	Jon /= protect(( ( betray(protect(betray(y))) * TABLE[TABLE[-0.98][( 0.99 )]][( 61 )] * -( ( -1 ) ) ) ) * protect(x - protect()));
	Jon *= 50
}
def TABLE[Ygritte][i] {

}
def rule(Arya){
	if(--( -1 )){
	Jon *= TABLE[-( -ROWS )][-foo(-ROWS) / TABLE[mislead(-Arya / ( ( ROWS ) ),rule(Sansa) + --0.68 - -Sansa * bar(mislead(),bar(mislead(-( ROWS ) * ( -1 ) / COLS,( TABLE[-Stark][( 53 )] + -4 ))),( -0.6 )) * ( -( betray(( betray(COLS) )) ) ))][0]] - ( Jon );
	Hodor -= Hodor
}
}
def mislead(Stark,dog,y){

}
def TABLE[( --( COLS ) ) / Arya][i] {
	if(( COLS )){
	x += 820.26 - COLS / ( -90 )
} else {
	( Ygritte );
	if(--100 - ROWS){
	if(0.73){

} else {

};
	rule(-( protect(Jon) ) / ( -0.94 ))
} else {
	y -= ROWS;
	if(---( -ROWS ) / dog){
	if(-y + rule(Sansa,rule(Ygritte,bar(Sansa),-0.39),COLS)){
	x *= betray(y * -( -0.09 ) + Stark,x);
	if(-( -mislead(260.5) )){
	if(TABLE[Hodor][Hodor]){
	x += -( COLS ) + dog - ROWS;
	if(Hodor / COLS){
	-( protect(-ROWS - TABLE[( 620.57 )][y] - ( -77 * bar(Stark,-destroy(-64,-0.86)) ),TABLE[--( 0.48 )][TABLE[-0.1][-( foo(( -protect(TABLE[( y )][rule(Sansa,ROWS)]) )) / 0.49 + ( ( ( Hodor - ( 0.19 ) ) ) ) ) - foo(-( y ))]]) ) + Jon;
	-Hodor / -TABLE[-900.89][betray(-0.54)] * betray(--protect(Arya,( Arya ) - ( COLS ))) + Jon / destroy(TABLE[Ygritte][Stark],1) * COLS + Ygritte;
	Hodor += COLS / -37
} else {

}
} else {
	( ( dog ) )
}
};
	y += -66
} else {
	Stark += ( ( -ROWS ) + Jon );
	( ( -1 ) )
}
} else {
	if(( -destroy(--TABLE[-ROWS][-betray(betray(( --( -mislead(Ygritte,protect(TABLE[-45][-Stark],Stark,COLS)) ) )),-0.91)] * --0.41 / ( TABLE[TABLE[foo()][-rule(540.16,betray(Hodor,Sansa))]][COLS + 970.1] ) / ( TABLE[destroy(destroy(( Hodor ),COLS,dog),( ( -0.12 ) )) + TABLE[( TABLE[ROWS][ROWS] )][( betray(TABLE[-0.15][COLS],--Stark,TABLE[ROWS - protect(protect(-TABLE[-0.49][Hodor],( Hodor ),( Jon )) * 58 + betray(protect(COLS),-( TABLE[0.41][-6] ) / -bar(ROWS,COLS) - -TABLE[-mislead(--( -89 ),Arya,rule(y)) * -TABLE[--12][-Ygritte - Ygritte] * ROWS][--0.11] * bar(-750.2,y) * rule(destroy(( --54 ),-TABLE[1][-46],mislead(betray())),bar(0.16,( TABLE[66][-( 0.14 )] ),TABLE[ROWS][Arya])) + protect(TABLE[dog][TABLE[protect(-COLS,x,-COLS * ( -95 / ( x + 93 - 350.35 ) ) * dog * 190.3)][Sansa]],mislead(( ROWS )),COLS),-0.03),-1 * Jon,Ygritte) * -900.3 - -Ygritte][ROWS]) )]][-0.95] ) + COLS) )){
	if(Ygritte){
	Stark /= -( Ygritte );
	if(x){
	ROWS
} else {
	if(---rule(Ygritte - dog) / rule(( betray(protect(COLS)) ),TABLE[COLS - -( ( -230.688 ) )][y] * bar(rule(COLS,39) / ( -20 ),ROWS * -( -bar(mislead(( Stark ) / -1 + ( 0.76 )),-mislead(TABLE[foo(-( ( ROWS + ROWS ) ) / ( protect(0.74) * TABLE[( 97 )][dog] ),ROWS)][Ygritte])) )))){

} else {
	if(ROWS / x){
	Ygritte *= betray(-protect(100,bar(( 29 ),rule(mislead(Ygritte * ROWS)))),-( ( 28 ) ))
} else {
	Hodor /= x
};
	rule(ROWS)
};
	Ygritte += x
}
} else {
	Arya += -1;
	15
};
	dog += rule(Sansa,TABLE[( --10 )][dog]);
	Arya /= COLS
} else {
	Jon /= y;
	Arya /= Hodor - ROWS / bar(ROWS,destroy(-Jon,ROWS),--0.19 + --1)
};
	if(COLS){
	Ygritte -= --foo(mislead(-( x ),rule(Arya)),1,-25) - ROWS + TABLE[72][-Jon + rule(( Hodor * bar(TABLE[TABLE[-78 - protect(0.65,-( TABLE[-150.724][dog] ),-( Arya )) * -0.93][TABLE[TABLE[-( COLS )][TABLE[-y][ROWS]]][51]] * ( foo(( mislead() * -( 60 ) + -0.21 )) )][foo()],( ROWS ),COLS * ( ---foo(COLS,-rule(-( ( --19 ) ) + ROWS,( -COLS ))) + ( Hodor ) )) - COLS ) + 0.7 / COLS)];
	y;
	x += -700.207 - ( --ROWS ) - -1
}
};
	dog += TABLE[destroy()][( COLS )]
}
}
}
def mislead(x,dog){
	-protect() - mislead(TABLE[-86 / foo(( protect(rule(---260.117,260.299)) ),( ROWS ) * betray()) * Hodor][bar(protect(-TABLE[-( ( -68 ) ) + TABLE[0.14][-0.53]][betray(( dog ),( -8 )) - foo(-dog * TABLE[-63][710.4 - TABLE[TABLE[-( ( Arya ) ) * -Sansa][0.85]][-x]] / -0.01 * Jon) + ( --22 ) / 800.102 + Jon] / ROWS,Stark * 21 + protect(--( -foo(COLS) ) / ( Hodor ),x / COLS) + ( ROWS ),ROWS),Stark,Hodor) + betray()]) - ( protect(-300.21) );
	if(--( 16 )){
	Ygritte -= ( ( COLS ) );
	x - ROWS
}
}
assert ( ( x - -( Ygritte ) ) ) * rule(COLS) + -COLS : "What do we say to the Lord of Death?"
assert betray(ROWS,Stark) : "Fear cuts deeper than swords."
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Jon,Arya){
	if(-0.98){
	bar(rule(Stark) / -rule(Stark + ( -1 ),0.29,protect(( protect(Ygritte) ) + --protect(( ( -( TABLE[( dog )][-73] ) * ( Arya * foo(Jon,0.56) ) ) ),( TABLE[Hodor][Hodor] )),26)),---COLS,( Sansa ))
}
}
def TABLE[Arya][i] {
	if(TABLE[-85][betray(( -TABLE[-TABLE[--Arya + betray(-COLS,( 1 ),-0.88)][betray(Ygritte)]][bar() + Stark] ) + ROWS,y * Ygritte)]){
	Stark *= TABLE[Stark][-1];
	4 - Hodor
}
}
def TABLE[bar(dog)][k] {
	x;
	Ygritte /= ---Hodor
}
var Stark = -ROWS + 300.1293
var dog = COLS
var x = ( Jon )
def TABLE[( COLS + foo(Ygritte) )][i] {
	if(TABLE[bar(-Stark)][COLS - -( destroy(44) / -TABLE[-Sansa][840.8] / -Sansa - COLS - Hodor / dog )]){
	if(-40){
	Sansa /= y;
	-0.97
} else {
	if(COLS){

};
	betray()
};
	Jon;
	y += --Stark
} else {
	x;
	x *= -bar();
	if(( -0.49 )){
	if(-( ( ( -( 83 ) ) ) )){
	mislead(( destroy(destroy(-TABLE[( dog )][ROWS],-ROWS,mislead(bar(-Hodor,rule(--0.23,-( ( rule(-0.52,Hodor) ) )),-300.3 - -1) / -Hodor))) ))
} else {
	dog -= ( TABLE[5][---Sansa] / TABLE[( -27 )][TABLE[betray(( -980.94 ) / 0.22,x,COLS * Sansa)][( -betray(-0.2,y) )]] )
}
}
}
}
def rule(dog){
	if(-rule(( ( -28 ) ),COLS - betray(),1) * -0.8){
	if(protect(( -( 0.25 ) + --mislead(-( TABLE[ROWS][Ygritte] / ( -( ( ( 270.89 ) ) ) - ( mislead(x,COLS,dog) ) * -TABLE[y][x] ) )) - -( -1 ) - --0.07 / ( -33 ) * ROWS ))){
	COLS
};
	x
} else {
	x;
	Stark += ( ( --bar(-rule(Hodor,protect(-980.08)),( 0.16 ),ROWS) ) )
};
	Sansa *= COLS
}
assert dog : "One can not simply parse himself"
def mislead(dog){
	Ygritte /= Hodor;
	x /= -29 + ( -( Ygritte ) * ( -Jon + ( destroy(14) ) / -20.799 + destroy() - ( foo(--ROWS / -Stark / Jon * destroy(),betray(COLS,foo()) + -( mislead(Ygritte,( -550.07 )) ) + ( 28 ),--57 + mislead(ROWS,ROWS) + ( -760.4489 ) * Hodor) ) ) + ( ( 0.55 ) ) )
}
var dog = COLS
var Sansa = Hodor
var x = --TABLE[230.1817][y]
def TABLE[mislead(800.132,26,-0.5)][j] {

}
def TABLE[( ( -COLS ) )][k] {
	Sansa /= 0.36
}
def foo(Stark,Stark){
	TABLE[-78 / -rule(( destroy(-64) ),y) / -( ROWS ) * -protect() + ROWS - Arya / -0.64 / rule(destroy(rule(( TABLE[( --98 * ROWS )][Arya] ),--betray(TABLE[( COLS )][( -1 )])),Jon) + ----60.383,-mislead(--50 + ( mislead(-( TABLE[-Arya + -10][Arya] ) - foo() / 76) ),--1 - Hodor))][--1 * TABLE[-1][y + Sansa]]
}
def TABLE[( TABLE[-( -0.03 )][COLS] )][j] {
	( -78 );
	COLS
}
def TABLE[0.78][i] {
	if(( -400.86 )){
	if(( 960.57 ) / TABLE[TABLE[( Hodor )][( ROWS * Sansa )]][Ygritte]){
	Jon += rule(destroy(),-8);
	if(-( ROWS )){
	Arya /= --mislead(51,( 72 ) + -0.25 / ( ( foo(x) ) ))
}
}
} else {
	if(dog){

} else {
	( ( dog ) );
	Jon -= ROWS;
	Jon -= ( destroy() )
};
	-Hodor
};
	Arya;
	if(61){

} else {
	-TABLE[COLS][bar(-foo(Sansa - ( -( -( Arya ) ) + COLS * destroy() ) * betray(----0.43,TABLE[-Arya][ROWS])) + -500.049,x / -( Hodor ) / ( Jon ) - ( ( betray(mislead(Stark,mislead(ROWS,betray(ROWS)),1) - -0.88,( -( rule(TABLE[-Sansa][-0.22]) ) ),Stark) ) ))] * ( mislead(-COLS,x) * -91 );
	-destroy()
}
}
def foo(Arya){
	-1;
	Hodor += -TABLE[ROWS + 90.1562 * COLS * foo(destroy(),foo(-TABLE[( ( destroy(-Arya / bar(),ROWS) ) )][x * foo(( x ),( TABLE[Ygritte][( Hodor + -47 )] ))],( -betray(-91) * ( Stark ) / foo(---( ( COLS ) )) )))][0.13]
}
var y = bar(y)
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-30.72 * 24][j] {
	Arya;
	if(foo()){
	Arya += mislead(TABLE[-1 - Hodor / 0.08][Sansa],( protect(-bar(bar(Arya),ROWS),TABLE[bar(( --TABLE[-COLS + ( protect(( Jon ),dog / mislead() * COLS) )][rule()] ),( Jon ))][COLS] - -( TABLE[betray(-( protect(COLS,0.77) ),0.28,rule(( 77 ),--100.11 + TABLE[-COLS][( Hodor )] + Hodor))][mislead(dog)] ) * -9) ));
	Jon += COLS
}
}
var Stark = --( ROWS )
def betray(){

}
def rule(Ygritte,Hodor){
	dog *= destroy(rule(),-COLS);
	Jon /= -0.74
}
assert Jon : "Fear cuts deeper than swords."
def betray(Hodor,Hodor,dog){
	( -dog )
}
var y = -protect(x,-y,bar(-250.29,Jon * protect(protect(-Stark + TABLE[Jon][1] - dog,( ( ( Jon - ( TABLE[Stark][-COLS] ) ) ) )) / ROWS) * -500.28 + -COLS / mislead(COLS) - foo(betray(( Arya ))),-0.05))
def TABLE[foo(33,-TABLE[( Ygritte )][TABLE[-12][( x ) - Arya]],Sansa)][i] {

}
var Sansa = TABLE[y][( 130.556 )]
var Hodor = 1
var Sansa = TABLE[-0.05][Jon * ( dog * 98 )]
var Ygritte = TABLE[protect(--2) + ( ROWS + ( TABLE[y][( ( -720.4 ) + Arya )] ) - Jon + ( Hodor * ROWS ) ) + Sansa - ( y )][( 470 )]
assert -( Sansa ) : "What do we say to the Lord of Death?"
assert 89 + betray(( -94 ),betray(Stark) / mislead(-x),COLS / ---11 + Hodor - -betray()) / ( Jon ) : "What do we say to the Lord of Death?"
def TABLE[protect(Stark * ( COLS ),97)][i] {
	Ygritte -= -66;
	y -= ( ROWS + ( y ) );
	x += ( ( protect(0.09) ) )
}
def TABLE[Jon][i] {
	x += 59
}
var Stark = Arya
var Jon = ROWS / Stark
var y = ( foo(0.05,-foo(( Jon )),ROWS) )
var Ygritte = Sansa - 17 * -( TABLE[0.15][COLS - COLS] + Ygritte ) + ( ( foo(TABLE[( Sansa )][betray(( y ),-( x ) - -0.77 - Ygritte)],ROWS) ) )
def TABLE[60.412][i] {
	dog -= -( mislead(( y )) )
}
assert destroy(mislead(( ( TABLE[protect(-70,Ygritte)][mislead()] ) ),( ROWS )),dog,bar(-0.95)) : "What do we say to the Lord of Death?"
def bar(y){
	x += --1
}
def bar(Jon,Hodor,Ygritte){
	Ygritte += rule(COLS + COLS) + ROWS;
	Hodor *= Stark
}
var y = -90
def destroy(Sansa,Sansa,y){

}
def bar(Ygritte,y){
	if(-1){
	--x;
	if(x){
	-destroy(-( ( -( COLS ) ) ),8);
	if(( ROWS )){
	Sansa *= ( TABLE[-bar(rule(-210.1,-dog,rule(Sansa / Stark,-550.7)),Arya)][52] )
} else {
	Stark *= -( Hodor ) - -33
}
}
};
	dog *= TABLE[-0.38 + Sansa][0.12]
}
def TABLE[x][j] {
	y *= Arya;
	( betray() + ROWS )
}
def protect(Sansa){
	if(ROWS){
	Sansa -= x;
	Sansa
} else {
	Sansa *= -140.49
};
	if(-98){
	if(Ygritte){

}
}
}
def TABLE[betray(--ROWS)][i] {
	y /= -rule(Hodor)
}
def rule(Jon,y,y){
	Arya;
	-79;
	y *= 0.02
}
def destroy(Hodor,y){

}
var dog = -foo(ROWS,-1)
def TABLE[mislead(foo(Arya))][i] {
	Arya -= 88
}
def betray(){

}
def destroy(Jon,Hodor,y){
	if(( 84 / Stark + bar(bar(),--42,-31) )){
	Hodor;
	if(-protect(rule(( -mislead(Arya,ROWS,dog) ))) * 710.363){

}
}
}
def TABLE[( ( COLS ) )][k] {
	-2 + Arya;
	if(---( -680.327 )){
	( -TABLE[x][0.67] )
};
	if(destroy(( 31 ),1)){
	0.86 + -bar(mislead(y),-ROWS);
	13
}
}
def foo(Stark,Arya){
	Jon += protect(TABLE[TABLE[( -( ROWS ) - 1 + ( COLS ) / Ygritte )][0.1] / ROWS + ROWS][160.867] * destroy(-TABLE[TABLE[y][-0.05 + ( x )]][x],( ( ROWS ) ),--94 / -0.2));
	dog += ROWS;
	if(Hodor){
	if(-61){

} else {
	if(-87){
	-1;
	y *= TABLE[foo(-0.54) - -390.03][Sansa]
}
};
	if(y * ( ( -( Sansa - Jon - bar(ROWS) ) ) )){
	if(rule(bar(TABLE[-COLS / TABLE[-( 750.675 * y ) + protect(TABLE[dog][( destroy(TABLE[COLS][Sansa],0.1) ) + COLS],--1 - Sansa)][87]][-37],320.439)) - -( ( ( -ROWS ) ) - ( -y ) - -ROWS - ( Hodor * bar(-7,COLS,-0.09) ) ) * ROWS){
	Jon
} else {
	if(( Sansa )){
	if(mislead(-1 + ( -14 ))){
	y -= -60 - -betray();
	if(x){
	if(mislead(( ( y - Arya ) ),( ROWS ),( x ))){

} else {
	rule(-Arya)
};
	Ygritte *= x
}
} else {
	Hodor /= ( destroy(betray(TABLE[rule()][-protect(COLS) * ROWS],Ygritte,Hodor)) - Jon );
	COLS
};
	if(y * -99){
	Arya -= betray(Arya + mislead(( COLS ),betray()));
	if(0.58){
	dog /= Sansa;
	Sansa /= ROWS
} else {
	if(-( y ) + ( rule() )){

};
	if(39){
	Ygritte *= COLS
};
	if(Ygritte + ROWS){
	if(-0.34){
	--15;
	if(Arya){
	foo(( ROWS ),-0.47,foo(( foo(Hodor,( Arya )) ),rule(-55,-0.66),( bar(bar(( 65 ),foo(-x - COLS / --0.21) + 360.953),ROWS) ) + foo(Arya)));
	Arya /= 70
}
} else {
	Ygritte /= COLS - -dog / protect();
	if(mislead()){
	x += COLS + destroy(Jon,( Arya ),-270.563);
	bar(Hodor - rule(protect()),--mislead(bar(x,Sansa) + TABLE[48][-x]),-0.4)
}
};
	if(ROWS - -destroy(( ( -( TABLE[--( ( Jon ) ) * ( -0.6 ) + destroy()][-4] ) ) ),COLS * -0.8)){
	Stark += ( -64 )
}
}
}
}
}
}
};
	-53
}
}
assert ( TABLE[dog * ( -28 )][TABLE[( ROWS )][-1]] ) : "One can not simply parse himself"
def TABLE[Sansa][k] {
	Hodor *= -Hodor - x;
	dog *= --COLS + betray(TABLE[protect(( -0.04 - foo(( 0.49 ),COLS) / TABLE[( y )][-COLS] ))][-1])
}
var y = mislead(COLS,( Hodor ))
var Sansa = ( mislead(Hodor) ) - Sansa
def TABLE[-( bar(Sansa,Ygritte) )][j] {

}
var dog = -700.3431
def TABLE[-1][i] {
	Hodor *= -0.65
}
assert 790.688 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	if(-1){
	( y )
};
	Ygritte
}
def TABLE[--86 - dog][k] {

}
def TABLE[-0.09][k] {
	Jon -= -( foo(-ROWS + foo(-TABLE[-Ygritte][Hodor],bar(),-840.1) * Ygritte / ( 550.4 ),-0.7) );
	Ygritte /= bar(-y,( TABLE[Arya][-destroy(mislead(),ROWS + -( mislead(-protect()) ),-mislead(dog) + ( -850.38 ))] ),0.32)
}
var Stark = --betray(-840.548,-( -22 ) * 0.28 - -TABLE[-29 / COLS][1] + Arya,( ---( ROWS / 0.37 + y ) ))
var Sansa = 920.4
var Ygritte = 0.82
def protect(dog,x){
	dog += Arya
}
def betray(Jon){
	x *= -0.37
}
def TABLE[-( -foo(COLS,foo(-ROWS,COLS)) )][i] {
	if(( 0.72 )){
	if(( x )){

} else {
	y - Jon;
	if(-Stark / ( -1 )){
	Sansa /= foo(( -( Jon ) ) * COLS - -1,ROWS);
	-1;
	( betray(--Arya - --0.65) )
} else {

};
	if(-betray(Ygritte)){
	y *= betray(22)
} else {
	--( 760.43 )
}
};
	Stark -= Stark
} else {
	0.47;
	if(--destroy(TABLE[-Stark][-( -ROWS )],( ( ( Arya ) ) * Arya + rule(TABLE[-59 + ( betray(0.99) )][--bar() * 73]) ))){
	protect(Jon,-x);
	( -1 );
	if(-280.807){
	if(( ( foo(COLS,mislead(y / y / ( ( bar(( -51 )) ) )),TABLE[550.634][--( --( TABLE[( betray(Jon,destroy()) )][( 33 + Jon )] ) ) * Jon * ( y - mislead(1,TABLE[-( -ROWS )][-destroy(( ( Arya ) / destroy() ),foo())]) / COLS - --14 - ( ( -( ROWS / --( ( 1 ) ) ) ) ) / betray() ) / ( destroy(( ( -protect() ) ),x) ) / ( dog )] * -( ( Hodor ) )) ) )){
	y -= -0.25
} else {
	if(--destroy(-protect(destroy(--480.5),-TABLE[-0.97][-x]))){

} else {

};
	-0.05
};
	if(TABLE[Sansa][-1]){
	-570.851
}
}
} else {
	Hodor;
	Hodor -= -Ygritte;
	if(ROWS - COLS){
	Sansa -= -0.84 + TABLE[y][890.1051] + -COLS
}
}
};
	if(TABLE[TABLE[Hodor][--790.491]][x + 1]){

}
}
assert COLS * ( -Sansa ) + ( Hodor ) : "What do we say to the Lord of Death?"
var Stark = dog
var Sansa = 30
def betray(){
	if(Sansa){

} else {
	-84 * COLS * ROWS / -COLS;
	bar(dog,rule(-( 66 )),Jon) / ( -0.06 - COLS );
	foo()
};
	-35 / Hodor / TABLE[0.45][bar(y)] / rule(bar());
	dog /= foo(-( mislead(( TABLE[86 / Jon][( 61 )] ),mislead(-dog),foo(--( ( Arya - Ygritte ) ) - ( dog - -( COLS ) / -COLS / ( bar(( COLS ) * x) ) ) - destroy(-16,-2) + -protect() * ROWS - COLS * foo(( foo(protect(TABLE[x][-1],--Hodor,Hodor) * Sansa + ( -foo(y / Stark * ROWS - betray(( betray(foo(92,COLS),( COLS )) ),protect(( -30.9034 )) / ( ( COLS ) ) + -0.17 - COLS / ROWS * ROWS,dog / 0.9 * TABLE[0.76][Ygritte] * 0.43) * ( Hodor )) / TABLE[-( ( protect(0.84) ) )][( ROWS )] )) )) / -1 + -mislead(-42,COLS))) * COLS ) / x)
}
var dog = ROWS
def TABLE[Hodor][j] {
	if(( -94 )){
	if(( TABLE[-0.96][( Hodor )] - mislead(betray(COLS,( COLS ))) )){
	-( COLS ) - x;
	if(betray(-dog,Jon,-33 * rule(-x,72)) - protect(mislead(COLS,66))){
	( ( x ) ) + ( dog );
	if(Ygritte){
	if(COLS){
	x;
	betray(( --dog ),protect(( 32 )))
};
	0.43;
	if(-betray(-720.502,( ( -( Jon ) ) ),-45)){

}
} else {
	if(-( destroy(( x ),-120.39) ) - -TABLE[bar()][COLS]){
	if(-mislead() / ( --Sansa )){
	if(Arya){
	( -TABLE[dog][( betray() )] )
};
	if(ROWS){
	Ygritte += protect(protect(-Arya + mislead(ROWS,mislead(Jon)),TABLE[COLS][Stark]));
	Ygritte += COLS
} else {

}
} else {
	if(( Stark )){
	Jon;
	if(-97){
	protect(( Sansa ),-32,-67) - Stark;
	-75
}
}
};
	if(protect(TABLE[COLS][1],( -0.19 ))){
	if(Stark){

} else {
	-29;
	if(rule(dog) / 11 / --x){

} else {

}
}
}
};
	dog *= bar(-63,( TABLE[-0.59][Hodor] / ROWS ));
	( -0.55 )
}
}
};
	Jon *= 45
};
	Ygritte += x;
	COLS
}
def TABLE[TABLE[TABLE[--13][-0.07]][-58]][j] {
	-Stark
}
def mislead(){

}
var x = --0.67
def betray(){
	Jon += ROWS
}
def betray(){
	y /= ( foo(betray(foo(-Jon))) );
	if(COLS){
	1;
	Ygritte += Hodor / foo(ROWS) * Hodor
} else {
	if(-0.47){

} else {
	y -= -840.91;
	Hodor *= -rule();
	-TABLE[y][( ROWS )]
};
	COLS * ( -0.12 );
	if(betray(COLS,destroy(ROWS,-90.949))){
	if(dog){
	if(-1){
	-protect(y,( --1 / COLS ),-( 4 ) + Stark);
	if(mislead(ROWS,--COLS / Sansa)){
	dog -= TABLE[--0.15][( 0.4 ) / protect(( -26 )) + 1];
	if(TABLE[( ( ( y ) - -0.81 ) )][( -( 73 ) )]){
	Hodor += ROWS
} else {
	Hodor *= rule(( betray(0 + -0.17) ),-92,TABLE[TABLE[Hodor][x]][COLS])
};
	-Arya - ( betray(-( bar() )) )
} else {
	if(betray()){
	Arya *= ( --0.22 )
} else {
	74;
	x /= ( -protect(-630.74 / -300.2,Sansa,destroy(( rule() ))) );
	Arya /= Stark
};
	if(--TABLE[ROWS][( 140.8 )]){
	if(COLS){
	if(dog){
	if(-35){
	if(0.87){
	if(-bar(betray(x,0.35,( -TABLE[mislead(rule(COLS),mislead(ROWS,--92 / TABLE[-y + ( ROWS )][protect()] - ROWS),betray(Sansa))][-( ( -Stark ) )] - -0.85 - 0.69 )),-TABLE[mislead(dog,mislead(mislead(bar(y,Hodor),COLS,COLS)) / ( COLS ))][-ROWS],bar()) - COLS){
	Jon /= 71;
	Stark -= TABLE[ROWS][TABLE[protect(ROWS)][COLS]];
	ROWS * ( COLS + ( ( dog / COLS ) ) )
} else {
	if(( destroy() )){
	if(Arya){
	bar(Hodor,( y ),---840.26)
};
	Arya /= protect(bar(),protect(rule(1 / Sansa - Sansa,Hodor),mislead()))
} else {
	Sansa -= Arya
};
	if(Arya){
	x
} else {
	Hodor -= Sansa;
	rule(--0.51)
}
};
	Jon -= destroy(Jon,--0.08)
} else {
	Ygritte;
	if(Ygritte){
	79;
	if(foo(( ( -ROWS - -ROWS ) ) + Arya,TABLE[ROWS * y][TABLE[-73 + ( foo() )][mislead(( -( bar(-bar(690.175) / -mislead(protect(( y ),0.65),COLS) + ( dog ) + betray(ROWS,( Hodor ),-y),mislead(--75)) ) ),foo(-( ----TABLE[-1][( y + ( COLS ) )] + ROWS ))) + Ygritte]] - Arya)){
	dog * TABLE[( ( -( Stark + bar(( COLS ) - -0.08) + Jon ) ) ) - ( Ygritte )][( --8 / TABLE[--mislead(rule(( ( TABLE[-rule(foo(Ygritte))][-bar(1,( ROWS / ROWS ),-( TABLE[-0.76][mislead()] ))] ) )),COLS)][Hodor / Jon] )];
	if(29){

} else {
	if(Sansa){

}
}
} else {
	--destroy(-Hodor / Jon / x * -Sansa / Sansa / ( ( -TABLE[Jon][--0.88] + bar(190.7,( betray() )) ) )) / foo(destroy(-900.35,0.05),protect(Ygritte,( -69 )))
};
	if(0.69){
	( ( -0.05 ) );
	if(-140.3406){

};
	mislead()
}
}
}
};
	Arya -= -0.89;
	( 75 )
};
	-1;
	if(dog){
	dog;
	TABLE[TABLE[x][ROWS]][-x / ROWS]
}
} else {

};
	-( -40 );
	y += ( Arya / ( ( Stark ) ) )
}
};
	if(( ( -0.71 ) ) * foo(-0.28,( --COLS + -bar(-Stark,Ygritte) - ( -20 ) ),-( ROWS ))){
	Sansa;
	x /= ( -( -1 + protect() ) * Sansa * Hodor * --0.25 )
}
}
};
	Arya -= Jon
} else {
	Jon *= destroy(72);
	if(-( Ygritte ) - foo(--COLS / ( ( COLS ) ),Arya)){

};
	if(ROWS){

} else {
	if(ROWS){

} else {
	0.75
}
}
}
}
}
var Jon = ( 34 ) + COLS
def TABLE[( -COLS )][k] {

}
assert foo(Stark,-47,( ROWS )) : "Nothing burns like the cold."
var dog = ROWS
var Jon = -protect(Hodor,( protect(( -COLS )) / 1 * TABLE[Arya][mislead(Ygritte)] - ROWS - COLS / destroy() / -310.018 + mislead(TABLE[dog][Arya] - Jon,( --0.49 - ( ( -destroy() ) ) )) ))
var Sansa = --99
var Stark = ( ( -( -0.92 - bar(Ygritte,-dog) ) ) ) / dog
assert ( ( Stark ) ) : "One can not simply parse himself"
def betray(Hodor,y){
	if(COLS){
	x *= rule();
	rule();
	Stark
} else {
	ROWS;
	if(destroy()){

}
}
}
var y = Arya
var Stark = dog
var Hodor = ( ROWS )
var y = Ygritte
def betray(Arya,Arya,Stark){

}
def protect(dog){

}
def TABLE[destroy()][i] {
	if(( TABLE[protect(-1)][Hodor] )){
	if(y){
	x *= ROWS
};
	betray(-Hodor,TABLE[betray(ROWS,--38 + -( Jon ) + ( Sansa ) - -COLS / --Arya * TABLE[mislead(foo(bar(-2,( -0.27 )),( TABLE[-79][x / ---52 - mislead() - ROWS - COLS] )))][Stark] + -( ROWS ) + -0.37 + ( mislead(bar(0.42,rule(COLS,( TABLE[Hodor - -ROWS / Jon][--TABLE[TABLE[( Ygritte )][TABLE[y][betray(mislead())] / 1]][-Hodor / -( ( TABLE[( Jon )][Jon] ) )]] ) - Jon,TABLE[( Arya / -0.99 )][Arya])),protect(( 0.18 ),( -0.8 ))) ) * 1 + Hodor / betray(x - -590.671,destroy(rule(Sansa,destroy(bar(( protect() + 0.59 * ROWS )),x,( y )),TABLE[betray(-1,COLS,-( Stark - Arya / ( 0.6 + -bar(-ROWS,Arya) ) - COLS / -( protect(0.88,( TABLE[COLS - -Stark][protect(COLS)] )) ) * betray(ROWS + ROWS,foo(-mislead(-bar(dog,x,TABLE[Stark][-( TABLE[( bar(16) - -( -970.92 ) )][0.62 * -COLS] )]),protect(--( rule(( -29 )) ),-bar(( TABLE[bar()][Hodor] * ( ( protect(Stark / 0.55) ) ) ) - Stark + -930.6 / destroy(),-31,TABLE[--58][-1 / ROWS]) + -1 * 0.27) + ---0.42 * ( -27 ),betray(betray(26,( destroy(bar(--COLS + COLS - dog) - ( ROWS )) ),( 400.526 )),Sansa) * Stark),( rule(-84) ) * COLS,Stark)) ) / --COLS)][TABLE[Arya][bar(ROWS)]])),COLS),-( y * betray(COLS) )) * ( rule(--( ( -COLS ) ) - ROWS - TABLE[12][protect(( -0.68 ))] - ( foo(protect(protect()),-COLS) )) )][rule(foo(( x )) / -0.5,2,betray() * ROWS)] * 0.31 - x)
} else {
	26
};
	Ygritte -= protect(--betray(0.22,protect(( rule(( x - -( Jon * Hodor ) ),-Sansa) ),-1),Jon) + 30.986 * 0.6);
	x /= ( -COLS )
}
def TABLE[-( x )][k] {
	dog += -TABLE[-240.94][mislead(bar(),0.02,betray(Jon,COLS) + COLS) + -0.45 - Stark * ( -( -( betray() ) ) )]
}
def TABLE[ROWS][i] {

}
assert -1 - -0.72 : "Fear cuts deeper than swords."
assert mislead(protect(( ROWS ),0.45 / --x,rule(-37,-( -bar(dog,rule(Arya) * COLS,-Jon) ),Jon)) * -1) : "Winter is coming"
def TABLE[TABLE[betray(-1,-( y ))][-destroy(ROWS,TABLE[( COLS ) * 1 / 0.51][( mislead(-Arya * Stark,-0.65) )],rule())] + ( Hodor )][i] {

}
def betray(Stark){
	x *= COLS;
	-TABLE[-( Ygritte ) * ( ( ( betray(TABLE[( -mislead() )][rule(rule(Stark,ROWS) * ( dog ),( 0.81 ))],destroy(( ( dog / rule() * ROWS ) ),-52)) ) ) )][-0.32];
	COLS
}
assert ( 1 ) : "Fear cuts deeper than swords."
var x = betray(( ( Ygritte ) ),-0.17,( Jon ) + ( protect(-95) ))
def mislead(){
	if(rule() / TABLE[-0.06][( -TABLE[TABLE[( foo(COLS) )][-0.2]][( COLS - TABLE[Arya][bar(-y,dog / betray())] - -1 * -COLS * 0.08 - mislead(83) )] )]){

} else {
	if(Jon){
	if(COLS){
	Arya *= ( -40 / -0.35 );
	-0.54
} else {
	910.0057;
	( -77 );
	Hodor -= ( TABLE[-1][83] )
};
	dog
} else {

};
	( ROWS / ( 1 ) );
	Stark /= -8
};
	betray(ROWS)
}
def betray(Stark,Jon){

}
def TABLE[-( destroy(ROWS,TABLE[dog][ROWS] * Ygritte) )][j] {

}
var Arya = 0.84
def betray(){
	Stark -= ROWS;
	if(mislead(-dog,Ygritte)){

}
}
def bar(Arya){
	if(betray(ROWS,Hodor,( Jon ))){
	y /= protect()
} else {
	if(0.16){
	x -= ( ROWS );
	Jon *= 1
} else {
	x -= ( mislead(betray(),( ( Jon ) ),500.2128) * dog )
};
	if(x){
	if(Ygritte){
	if(( COLS )){
	y += rule(Hodor * -98);
	Hodor;
	if(Arya){
	Ygritte += dog;
	y += x;
	Hodor -= -0.03
} else {

}
}
} else {
	Stark += Jon;
	Stark += protect(( ( protect(COLS) ) / x ))
};
	if(foo(-31)){
	if(Jon / ( ( Hodor * Jon ) ) - rule(-COLS,bar(--11,-9,rule(17,destroy(TABLE[-63][( -1 ) + -x],COLS),destroy())))){
	Stark += betray(Arya / Ygritte);
	Hodor += ( 0.26 )
} else {
	x /= TABLE[-720.1458][TABLE[-35][-12]]
};
	Stark * -mislead()
} else {
	if(ROWS){
	x += rule(protect(( Hodor - -88 ),( ( -25 ) )),Arya,( -45 ));
	( Ygritte );
	Hodor *= Arya
};
	Sansa -= ( rule(0.08) )
}
} else {
	y *= ( bar(-y) );
	Arya += COLS;
	Jon *= ROWS
}
};
	if(-( Ygritte / x ) * 0.53 * -0.49){
	Ygritte -= COLS;
	if(ROWS){
	y /= ROWS
} else {

}
}
}
def destroy(Ygritte,x,Jon){
	Ygritte -= -protect(-50) + COLS / ( -1 );
	270.02
}
def foo(Jon,Stark,Sansa){

}
def TABLE[destroy(Sansa,Sansa)][k] {
	Jon += -( COLS );
	if(destroy(75,-1)){
	if(( dog )){
	if(0.69 * -y / ( COLS )){
	Stark /= 260.86;
	-1
} else {
	dog -= -9 / protect(bar(-Sansa,betray(COLS) + ( TABLE[destroy(( 1 ))][destroy()] )))
}
} else {
	if(-1){

}
};
	Stark /= x
} else {

};
	Sansa *= Sansa
}
var dog = rule(x / bar(),-33,y)
assert -Ygritte : "Fear cuts deeper than swords."
var Arya = ( Ygritte )
assert x : "Fear cuts deeper than swords."
def betray(Hodor,Hodor){
	Hodor += ( destroy(240.8518,protect(-ROWS) * foo(ROWS,--ROWS,39) / bar()) - x * 0.46 + Jon );
	if(-Hodor){
	-( x );
	if(betray(betray(-650.21,290.3,( y ) / bar()))){
	if(Ygritte){
	if(-1){
	300.3093
} else {
	Hodor /= bar(protect(-TABLE[-0.5][y]),Stark) - -500.2173
}
} else {
	y *= bar(( Stark ))
}
}
} else {
	foo(TABLE[betray(( TABLE[destroy(foo(COLS),-0.42,-66)][-960.663] ),y - Jon,( COLS )) / -76][-( mislead(-( ( --TABLE[-78][Ygritte] ) ),bar()) )],Stark)
};
	Stark -= -( ( dog ) )
}
var x = TABLE[ROWS - -TABLE[( ( Sansa ) ) - TABLE[Arya][( -ROWS / betray() - Stark )]][protect(Ygritte)]][-y + -120.01 * betray(( -1 ),mislead(( -400.5118 ),ROWS))]
def bar(Jon){
	-( dog );
	Ygritte /= ( -780.086 );
	TABLE[protect(COLS)][COLS]
}
def TABLE[( -TABLE[Hodor][( -0.85 )] / 0.98 )][j] {
	x;
	if(( 0.53 )){
	if(--betray(82,Ygritte)){
	Hodor;
	ROWS
} else {

}
} else {
	ROWS
}
}
assert ROWS : "Nothing burns like the cold."
def TABLE[-ROWS * x][i] {
	Sansa
}
var Arya = protect()
def TABLE[destroy(---foo(mislead(destroy(-1),destroy(---Ygritte - -( COLS ))),x),--0.19)][i] {
	ROWS - destroy(Sansa,ROWS)
}
def bar(){
	if(Hodor){
	34 - ( protect(0.15) );
	y /= COLS;
	if(betray(1,( ROWS ) / ( --mislead(-200.0185,betray(( mislead(TABLE[-protect(destroy(--TABLE[dog / TABLE[COLS][--90]][( ( COLS ) )] - COLS * -0.38,( -COLS / foo(Ygritte,betray(foo(-TABLE[ROWS][0.38]),Sansa)) * -COLS )),Hodor)][Jon]) ) * -destroy(Hodor,foo(0.06,-400.5)) / Arya,Arya,( 0.18 ))) ))){
	Ygritte *= ( -COLS );
	Jon
}
}
}
assert TABLE[( COLS )][( -Arya )] : "Nothing burns like the cold."
def betray(Stark,Hodor){
	x *= 37;
	if(-0.07){
	if(-75){
	Sansa += TABLE[mislead(x * Arya)][--1 / y]
};
	( -34 )
} else {
	Jon += -0.47;
	Sansa -= rule(TABLE[Sansa][TABLE[( -dog )][( 540.644 )]],Hodor)
}
}
def TABLE[-COLS + foo(rule(Sansa))][i] {
	Jon -= -0.12
}
def protect(Stark){
	foo(Jon,dog);
	dog -= -920.65
}
var Hodor = -83 / -83
def betray(x){
	TABLE[Jon][rule(-betray(Stark))];
	Ygritte *= TABLE[100][-0.96]
}
var Stark = ( --910.302 * -1 )
def bar(Arya,dog){
	Jon /= ( Stark )
}
var Ygritte = destroy(( 0.02 - TABLE[( x )][COLS] ))
var Jon = --destroy(-ROWS)
assert -( ( TABLE[TABLE[0.05][( ( --Ygritte ) ) * 1 + protect(( ( Stark ) ),rule(),0.76)]][-0.57] ) ) + 0.12 : "One can not simply parse himself"
def betray(Ygritte){
	betray(-0.04) - Ygritte
}
assert Hodor * Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -mislead(-Arya) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = destroy(TABLE[( ---( ---betray(mislead(y,bar(( 38 )),dog),-protect(-25,TABLE[51][Hodor / -130.669 + ( x )])) + COLS ) )][Arya])
var Arya = mislead(-Stark - ( Stark ) + Hodor,0.94,-ROWS)
var Ygritte = protect(COLS,( TABLE[--0.59][rule(1,( Hodor ),x)] * bar(-( mislead(--Jon - dog * ( rule(-COLS) ) * destroy(( ( Sansa ) ),dog),( TABLE[-COLS][( -Jon )] ) / 0.67,-( x ) - betray(-3,-foo(-46,bar(0.64)) * mislead(protect(),( 1 )),38)) / Stark + ( COLS ) ),COLS) ),-1) * Hodor
assert Jon : "Nothing burns like the cold."
var x = -COLS
def TABLE[--1][k] {

}
assert COLS : "Fear cuts deeper than swords."
assert -22 : "What do we say to the Lord of Death?"
assert -TABLE[--Stark][TABLE[x][-( ( ROWS ) )]] * Jon : "One can not simply parse himself"
def protect(Jon){
	ROWS;
	if(dog - -47){
	Hodor;
	-1
}
}
def TABLE[( -( --0.21 / -54 ) )][k] {
	if(-18){
	foo(bar(( ( -1000.91 ) ),-770.41 / -mislead(-1)));
	Jon += -TABLE[-2 * -( TABLE[-TABLE[-foo()][( Hodor * destroy(ROWS,-COLS * x,-foo(-( 51 ) - 46,TABLE[1][betray()] * 0.88 * ROWS)) + COLS )]][Arya] - bar(--580.4,x + 4,rule(betray(protect(),( -COLS )),ROWS)) ) - ( Hodor ) / ROWS][39] * ROWS * foo(betray(mislead(COLS,protect(Jon,ROWS,Jon)),COLS),mislead(( ROWS )),COLS)
} else {
	if(( protect(x,520.57) + Arya )){
	if(( Sansa )){
	0.43;
	if(dog){

} else {
	Ygritte /= foo(TABLE[destroy(TABLE[( ( mislead(-( foo(ROWS) * TABLE[-COLS + ( protect(( Jon )) )][-( TABLE[-66 + 0.54][rule(Hodor,-( Jon ) / ( ( destroy(protect(),foo(( rule(betray(-0.06),-68) ),--140.77),foo(( -COLS * Hodor ),TABLE[rule(COLS,( 0.55 ))][betray(-TABLE[-( bar() )][betray(( bar(dog) ),-( ROWS ),Hodor)])])) + Arya ) - ROWS ))] )] ) / Hodor) ) + Jon ) / foo()][93],y / Arya - ( protect() ))][ROWS]) + bar(-( -84 ))
};
	-( foo(-0.35) ) / betray(rule(foo(( ---bar() * Arya + Ygritte + ( -x - ROWS ) ),( TABLE[rule(( x ),betray(-( 4 ),0.66 + dog))][-( -Sansa )] ))) / -90,-62)
}
} else {
	-0.28 * ( mislead() ) * -79;
	x /= TABLE[Ygritte][-8];
	Hodor -= -Ygritte - ( COLS + --foo(destroy(COLS),rule(betray(-790.556,TABLE[ROWS][mislead(COLS)])),TABLE[--dog / -foo(ROWS)][-19]) )
}
}
}
assert 0.4 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Arya,y,y){

}
def mislead(Sansa){

}
var Arya = Ygritte
var Arya = -900.961
def rule(x){
	0.41;
	if(( ( ( Sansa ) ) ) + Sansa){
	Stark *= Stark;
	-( Stark )
} else {

}
}
var Jon = 94
def betray(Sansa){

}
assert ----foo(-Stark) : "Nothing burns like the cold."
assert ( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor,Ygritte){
	if(( betray(COLS,-20 - mislead(Ygritte,-Arya,Stark)) )){
	-Jon;
	( COLS )
} else {
	( Stark );
	if(1){
	if(Stark){
	Arya * destroy(Stark + ( -10 ))
}
} else {

}
};
	Stark /= -95
}
var Hodor = -24
def betray(Jon,Hodor){
	if(( Jon )){
	-0.58 / destroy();
	if(destroy(rule(Jon),-dog)){
	0.39
} else {
	TABLE[-TABLE[( Sansa + Arya )][Sansa]][( -0.87 ) + bar(( COLS ),TABLE[-foo(destroy(COLS,rule()) - bar(ROWS + -440.3393 + -94,rule(-protect(-protect() / Jon) + dog,( ROWS + ( ( COLS ) ) ),TABLE[Ygritte][-( ( -COLS ) * Hodor + protect(690.9,320.219) )]) * --dog),x) - 100 * COLS][-1])];
	if(--1){

} else {
	0.5;
	-0.61
}
}
} else {
	if(( -0.69 + -dog )){
	if(COLS){

}
} else {
	protect(betray(ROWS),protect(1 + Jon / Jon / -0.52),x)
}
}
}
var Sansa = ( mislead(mislead(( mislead() ),COLS / ( 60.415 )),-1 / COLS) )
var Hodor = ( -( 950.4 ) )
assert protect(TABLE[77][ROWS],destroy(Jon / rule(ROWS),dog),-( Sansa )) : "One can not simply parse himself"
def TABLE[--( Hodor )][k] {
	dog /= --0.58 / 1000.8503
}
def rule(){

}
def TABLE[( -260.6 )][k] {
	dog *= -0.28
}
var Hodor = foo(( COLS ),betray(),ROWS)
var y = foo(54,( ( Stark + ( dog ) ) ),ROWS / ( dog ))
def foo(Jon,Sansa){
	bar(-0.25);
	if(bar(-0.82,rule(x,dog + Stark),-destroy(protect(mislead(mislead(protect(ROWS,Jon,Arya) / Ygritte,COLS) + protect(-Jon,-( foo(-COLS) )) + --0.56 * 1,mislead(TABLE[( destroy(TABLE[COLS][TABLE[-protect()][ROWS]]) / ( mislead(2) * rule(--18,( dog + bar(-COLS) )) / Sansa - -Jon ) )][COLS],68)),Hodor) * y,TABLE[( -0.28 )][bar(protect(),1)],x))){
	x *= mislead(TABLE[0.88][TABLE[Hodor][Arya]]);
	if(betray(y,Jon)){
	Jon *= Ygritte;
	Stark
};
	if(-710.1159 * --( ( TABLE[Jon][Hodor] ) / Hodor )){
	-270.995 + 0.16 - foo(ROWS - -650.344 + 56,dog) + COLS / bar(-rule(-0.69)) + protect();
	( TABLE[---1][( Ygritte )] + destroy(Arya) + rule(( --0.55 )) )
}
};
	TABLE[Arya][mislead(mislead(( dog ),( COLS )))] / ( ( COLS ) ) + TABLE[( ( mislead(( COLS + 0.61 - mislead(ROWS) )) ) )][( ( -1 ) )] + 70
}
var dog = COLS / rule(-0.32,TABLE[-protect(Jon,( ( ( -92 - 87 - ( 1 ) ) ) ))][rule()],dog) + Stark
def bar(Arya,dog){
	if(-0.45){
	if(0.74){
	if(foo(bar(---rule(ROWS,-foo(-( -rule() + dog ) - y,TABLE[rule(( ( ( y ) ) ),-bar(( -0.57 )),rule(TABLE[-0.32][dog],( Ygritte * rule(ROWS) + ( --0.82 ) * 76 ),( Sansa )))][-0.06],( --49 ))),rule()),mislead(Ygritte,0.88,bar(Ygritte) / ( COLS * 15 )))){
	if(-destroy(17,-0.54,foo(( Hodor - protect(( Hodor )) ),COLS,COLS) + rule(1,destroy(610.1153,mislead(( ROWS / mislead(x,( ( -betray(Arya) ) )) )),ROWS))) * bar(destroy(Arya - -( betray(protect(-11,-0.39) * x,0.33,ROWS + mislead(( ( -83 ) ))) ) + betray(-44 * 400.62 / 0.08 - Arya - ROWS - 72 + ( ( -( dog ) ) ),99,46) - dog))){
	if(-foo(--Jon,ROWS)){
	if(-( -TABLE[destroy()][destroy(COLS)] )){
	if(bar(( 20.5532 ),-ROWS,1 * rule() * -0.89 / COLS)){
	Stark -= Arya;
	x;
	Arya -= -COLS - Jon * -0.55
} else {

};
	dog -= -64
} else {

};
	if(-1){
	Sansa *= TABLE[96][-61]
} else {
	if(-0.09){
	TABLE[COLS][Stark - -y / ROWS]
};
	dog -= --x
};
	Jon /= -Ygritte
} else {

};
	ROWS
};
	if(protect(bar(Jon))){
	if(--ROWS / ( TABLE[protect()][bar()] ) / destroy(--Hodor,Arya,mislead(-44) / betray()) - -COLS){
	if(Stark){
	ROWS * Hodor;
	mislead(TABLE[( Ygritte + Ygritte )][rule(Hodor)],-0.35);
	( 0.24 )
};
	if(( Jon )){
	Sansa -= Stark;
	if(( TABLE[( ( destroy(74,( 1 )) / destroy(-dog / 62 + foo(87 - mislead(betray(COLS))),betray(( ROWS )),-( -420.6 )) ) )][100] ) * 70 - ROWS + ( ( ( TABLE[dog][0.73] ) ) ) - -( COLS ) * Hodor){
	y /= 44
} else {

};
	if(dog){
	1;
	( --( foo(( bar(TABLE[---66 * ( ( COLS ) )][-Jon + COLS],Ygritte + -50,-foo(ROWS,Ygritte * protect(( Sansa ),betray(-( TABLE[-COLS][TABLE[-y][( ( Stark ) )]] ))),Arya)) )) / 560.86 ) - dog * rule(Ygritte) * ( ROWS ) )
}
} else {
	( destroy(bar(),Ygritte,-bar(33,-Arya) - 0.66) )
};
	dog += -1
};
	TABLE[bar()][Sansa]
} else {

};
	Sansa /= foo(destroy(-0.81 * ( ( -ROWS + ( 0.6 ) ) + x * Sansa ) + -ROWS,0.83),( ROWS ))
} else {
	if(TABLE[foo(-110.78,-COLS - -TABLE[-TABLE[mislead(Sansa + 0.76,ROWS,ROWS)][COLS]][mislead(1) + -2])][( COLS )]){
	if(-mislead(ROWS,( dog )) / COLS){
	--0.41
} else {
	COLS
};
	Stark
};
	Arya += -1;
	-0.24
}
};
	dog *= 73
}
}
var Stark = TABLE[-COLS * --( COLS - foo() )][x]
def TABLE[-( -Hodor )][i] {
	if(Ygritte){
	if(destroy(COLS)){
	( rule(-0.16) )
};
	-0.96
};
	Jon
}
assert TABLE[TABLE[COLS][( TABLE[rule(Stark - 1,y / 17,TABLE[-( protect(COLS,-1,( Jon )) )][Stark] + ROWS)][-Sansa] - ROWS / destroy() )]][protect(Hodor,dog)] : "Nothing burns like the cold."
def betray(dog){
	x *= -50;
	Hodor *= foo(( --39 ),( -Ygritte )) - Hodor;
	TABLE[-( ( COLS ) + COLS )][ROWS]
}
def TABLE[-( Jon - TABLE[-Stark][dog - bar(( 1 ),Jon) * ( betray(Ygritte) )] * -Jon - foo(rule(x / rule(),( ( -0.46 - COLS ) * -1 ),dog),destroy(protect(-85,Hodor,-460.8),1)) / ( mislead(( Ygritte * Hodor / 0.38 ),COLS,dog) / Ygritte ) ) / ROWS][i] {
	Sansa /= -920.083;
	( -0.61 )
}
def bar(Sansa){
	( betray(TABLE[ROWS][-30.764] * ( Ygritte ),-0.4) );
	-Stark
}
def destroy(Arya,Jon){
	if(0.64 - rule(( -betray() ),COLS,ROWS)){
	Hodor /= destroy(Hodor + ( x ) - ROWS);
	ROWS
};
	( ROWS + ROWS )
}
assert -0.94 : "One can not simply parse himself"
def betray(){
	Stark += ( Sansa );
	if(rule(mislead(Arya))){
	Arya -= --1
} else {

}
}
var x = ( mislead(ROWS + x + -1) ) * betray()
def TABLE[( bar() )][j] {
	0.73
}
assert -COLS : "One can not simply parse himself"
def TABLE[Arya][k] {
	dog -= betray(foo()) - ( 1 );
	if(-Sansa){

}
}
var Hodor = Sansa
assert 0.15 : "Fear cuts deeper than swords."
def TABLE[-380.82][j] {
	if(-210.611){
	if(( Jon - COLS )){
	if(protect(( Arya ))){
	dog *= COLS
};
	if(betray(destroy(( x ),rule(-350.571)))){
	if(Stark){
	y /= ( TABLE[Arya][y] ) + -TABLE[rule(mislead(0.19,0.4,-( -1 * dog - 0.48 + -0.67 * TABLE[ROWS][destroy(-400.6,Hodor,97)] )))][Hodor]
};
	Sansa *= -y;
	if(Stark){
	y += 25
}
};
	betray(40.824 / y)
};
	( destroy(bar(-COLS - protect(TABLE[-protect(-x,protect())][( -1 )],-0.98,COLS) / Hodor,ROWS)) );
	if(950.4537){
	if(940.93){
	y += TABLE[( ( rule() * TABLE[--0.34][( rule(-19,Stark) )] ) )][( -Arya ) / Arya];
	if(( COLS + -dog * ---1 )){
	protect(310.483,-rule(( TABLE[-1][COLS] - foo() * 0 * -TABLE[mislead(ROWS)][-0.34 - -Jon] / foo(mislead(Arya),ROWS) / --( ( mislead(foo(1)) ) ) )),-betray(( Jon * -17 ) / ( betray(750.09) )));
	Hodor += 15 / -( mislead(protect(ROWS) + destroy(( -0.57 ) + -( x )),0.63,-0.85) );
	if(bar(mislead(( 71 )))){
	if(77){
	if(TABLE[-92 / Jon / -( ( ( betray(Jon,foo()) ) ) ) / ROWS][mislead(mislead(COLS * -ROWS + ROWS,-16 + ROWS) / ( x ),bar(),destroy(-destroy(-bar(-47) - ( --bar(Sansa) ))))]){
	if(x){
	if(bar(ROWS,1,-destroy(-dog,-1))){
	Arya += --30 + mislead(-COLS) / -620.244
} else {
	dog += ( y );
	if(-mislead(-ROWS)){
	Arya += -ROWS;
	ROWS;
	Arya
} else {

}
}
};
	if(59){
	COLS * Stark
}
} else {
	x
};
	mislead(TABLE[-210.8336][dog])
} else {

};
	if(mislead()){
	if(TABLE[-destroy(TABLE[TABLE[foo(bar(Arya,--( COLS ) + -mislead(ROWS,( y / ( ( ( TABLE[-x][ROWS] ) ) + COLS ) )) / y))][TABLE[0.31 - 0.16][0.95] - protect(ROWS)]][-580.714],-protect(),Stark)][protect(( ( Ygritte ) ) + ( ROWS ))] - dog){
	-0.25
}
}
}
}
} else {
	1
};
	TABLE[-( foo(( y )) )][betray(ROWS)];
	if(( 99 )){
	y -= TABLE[COLS][-0.9 * ( bar(--1,bar(-ROWS)) )];
	-1;
	if(( TABLE[rule(-Jon,Stark,-( COLS ))][bar()] )){
	Hodor += 680.6011;
	-rule(0.5,--0.04 + --35) * TABLE[Ygritte][ROWS] / -foo(COLS) + dog * --( -protect(20) )
} else {

}
} else {

}
} else {
	dog *= TABLE[Stark][Ygritte];
	if(TABLE[Hodor][-protect(Stark,destroy())]){
	bar(-69);
	TABLE[destroy(-190.46 * 0.05) / ROWS][bar(destroy(Ygritte,protect(ROWS,( 370.54 ),-foo(( -77 ),foo(-71 / ( x ),0.1),( ROWS )) + -TABLE[85][mislead(ROWS * destroy(-Sansa / y,-( foo(( mislead(COLS - -Sansa - ROWS,protect(TABLE[40][TABLE[TABLE[-foo(COLS,92)][TABLE[-0.72 / foo()][1 - ( x )]]][( -COLS )]],Jon),protect(-Sansa * --0.92)) ),( Hodor ),protect(--0.07,dog)) ),( Hodor )) + -1)])))]
};
	Ygritte += ( protect(Hodor,82) * foo(bar(COLS,1)) )
}
} else {

}
}
var Stark = betray()
assert 96 : "Nothing burns like the cold."
def betray(Hodor,Sansa,Stark){
	if(dog - Arya){
	mislead();
	ROWS
};
	Sansa += foo(COLS,( TABLE[Hodor][20.2 - ( COLS )] ))
}
def rule(Ygritte){
	if(-( ( -ROWS ) )){
	( Arya );
	if(-10){
	mislead(( Arya ),y)
} else {
	dog /= -780.92;
	Arya += Sansa
}
} else {
	if(betray()){
	Ygritte -= COLS * -COLS / 0.73
} else {
	if(destroy(ROWS,Arya,bar(Ygritte))){
	Hodor *= -COLS;
	if(COLS){
	Sansa /= Jon;
	y
};
	--1
};
	mislead(Jon)
};
	Stark /= --Hodor * Sansa + mislead(( Jon ) + COLS) + bar() + -protect(( -0.08 * -0.6 ));
	betray(( TABLE[COLS][1] ),mislead(1,( protect(( TABLE[COLS][0.78 * TABLE[0.17][TABLE[ROWS][( ( Sansa ) )] + -1]] ),( foo(( TABLE[( dog )][-Jon] ),COLS) / -62 ),dog) )) + 0.66 / mislead(Hodor / TABLE[( --1 )][( ( Arya - protect(ROWS) ) )] / 160.756,COLS * -y,Stark))
};
	if(( ROWS )){
	if(( -45 )){
	if(--COLS){

} else {
	Arya *= -( ( COLS + -protect(Arya + Hodor,-( -79 ) - 73) ) )
};
	( Arya )
}
}
}
assert Hodor : "Winter is coming"
assert Arya : "Fear cuts deeper than swords."
def TABLE[-( ( -Arya ) - 540.3087 )][i] {
	Sansa -= betray(-destroy(Ygritte,560.505,ROWS) / -1);
	if(( ROWS )){
	COLS;
	-ROWS
}
}
def TABLE[-Ygritte][j] {
	if(-990.27){

};
	Arya += -foo(y,Ygritte) + bar(( -Sansa ),-0.24,Stark);
	-ROWS
}
def TABLE[100.952][j] {
	y;
	ROWS
}
def protect(Jon,Sansa,Arya){
	if(-0.49){
	if(betray(Arya)){

} else {
	if(-destroy(--520.01)){
	x /= COLS + -Jon + COLS;
	-61;
	Sansa += Hodor
} else {
	Stark -= ( 0.08 )
}
};
	if(foo(( ROWS ),TABLE[( ( COLS ) ) * 48][-protect(-Hodor,protect(),ROWS) + 0.24 + protect()] / TABLE[-x][-460.53 * -Hodor])){
	if(31){

} else {
	if(Stark){
	if(-0.36 / -0.19){
	Arya += protect(-( -TABLE[20.49][( -Arya / Sansa - y )] ),bar(betray(-60,-( 0.75 ))),foo(-45,y,rule(protect(--0.29,rule(Ygritte,COLS),-protect() - ROWS))));
	x += -10.3243
};
	if(COLS){
	if(ROWS){
	( 55 ) - ( Jon * protect(Jon,foo(),--Stark + ( -( COLS ) )) );
	Jon += ( Jon )
} else {
	Jon /= ( TABLE[-rule(bar(( -ROWS ),Arya + ( x ) * ( TABLE[mislead(-Arya,-66,betray(-0.26))][ROWS] )),-( destroy(Jon,x) ) / 96 - ROWS)][mislead(COLS,betray(rule(( 0.08 ),betray(33) / TABLE[--COLS + -( 0.74 ) * -30][--Sansa - ( --0.27 )]),ROWS,betray(COLS,-1)))] * ROWS )
};
	ROWS
};
	Ygritte /= protect(-1)
} else {
	( -TABLE[-betray(-820.81,-( ---ROWS / foo(--dog,( 22 ),-bar(Stark,( Arya ))) * Ygritte ) + -0.85) + rule(-mislead(ROWS / -40.382,ROWS) - betray(( 1 )),x)][mislead(COLS)] )
};
	x
}
} else {
	if(( Arya )){
	( y )
} else {
	if(mislead(1,( bar(Arya,( -510.4222 )) ) / bar(-760.534,TABLE[Ygritte][y],( ROWS )))){
	if(-1){

} else {
	-ROWS
}
};
	dog -= -mislead();
	if(y){
	COLS
}
};
	y += -Arya - ( 1 )
}
};
	COLS
}
var Stark = mislead(protect(1,-62),-49)
def TABLE[-( --ROWS )][j] {
	Hodor /= protect(( -x * x ) / Stark - -x,-62);
	Hodor -= betray(( mislead(-460.775 * ( Sansa ),Jon) - -1 )) / Stark
}
def TABLE[ROWS + ROWS][k] {
	( mislead(0.31) ) * TABLE[-56][1] / dog + ROWS;
	--( ( bar(-9) ) + -690.1 )
}
assert -TABLE[( mislead() )][ROWS] : "Nothing burns like the cold."
def mislead(){
	mislead(( -0.64 ),Ygritte + Jon,Sansa)
}
assert TABLE[Ygritte][( Stark ) + -mislead(Hodor,( protect() - -( foo(( -63 )) ) )) * protect(dog,rule(-1 - ( betray(--870.9307,TABLE[---destroy(0.84)][COLS / --0.78 + foo(-ROWS + Ygritte - COLS)] + -mislead(COLS,protect(( 82 )),TABLE[0.43][-( ( rule(( -TABLE[Sansa][COLS] ),mislead()) ) ) * COLS]) * -570.5,--1) ) / -630.7304,Ygritte,TABLE[foo()][-0.35]) - Arya)] * COLS : "Winter is coming"
assert -x - -75 : "Winter is coming"
def TABLE[--( -Jon - -betray(( -( ( -( COLS ) ) ) ),-51 / 1) )][k] {

}
var Ygritte = foo(-Arya - 590.46,bar(--1))
def betray(Sansa,Sansa){
	if(bar(( ( --20.8 ) ))){
	betray();
	ROWS
} else {
	if(1){
	if(-ROWS - --1){
	if(COLS){
	ROWS
} else {

};
	ROWS;
	Sansa += ( -12 )
};
	if(( -bar(-COLS,TABLE[y / Sansa][-mislead() / -910.43 * bar(foo(--Stark,Sansa),Sansa) + ( protect(Jon,foo(0.78,-790.6)) ) + bar(-0.36)]) )){
	Jon -= Ygritte;
	( ( COLS ) )
} else {
	if(dog){
	if(bar(-0.03,mislead(-rule()),destroy(ROWS + Sansa,( -ROWS * Hodor + -700.78 ),Stark))){

};
	Stark -= mislead();
	dog /= ROWS
};
	betray(-54) * -Sansa
}
} else {
	if(dog){
	Stark
} else {
	if(--0.42 * TABLE[( --16 )][( -COLS )]){
	if(1){
	Hodor += ( 590.01 );
	if(-dog + foo(--37,420.3111)){
	Hodor;
	if(foo() + ( x )){
	--0 / mislead(rule(ROWS),11,( Stark )) * -31 + -91;
	( -( Sansa ) )
} else {

}
};
	Arya
}
} else {
	if(( ( ROWS ) ) / ( -0.95 / mislead(foo(Ygritte),Arya,TABLE[( -COLS )][( ROWS ) + -0.42] * Ygritte) )){
	ROWS
} else {
	47;
	if(COLS){
	( ( -800.09 ) )
} else {
	Ygritte
};
	31
};
	TABLE[320.973][-( -TABLE[-70][Jon] ) / bar(COLS)]
};
	if(--destroy() * -25){
	if(x){
	if(--Ygritte - ROWS){
	mislead(protect(( rule(-destroy(-( TABLE[Sansa][-destroy(-92,COLS * Sansa,( ( Jon ) )) / --Hodor + foo(420.323 + 12,Ygritte) * -530.19 * Stark] ) - foo(foo(-0.15,rule(Arya,---0.64,0.71)),( --Stark )))) / ( ROWS ) )),foo(Hodor,-( 0.67 )) + ( Stark ))
}
};
	( ( betray(-77,77) ) )
} else {

}
};
	if(( 0.4 )){
	COLS;
	if(Ygritte){
	( mislead(-betray(),ROWS) );
	if(Stark){
	Stark -= Ygritte;
	x -= x
}
}
} else {
	Ygritte += 0.75;
	y /= ( betray(COLS,betray(( -Arya ),ROWS) - foo(),Stark) );
	if(0.12){
	if(dog){
	bar(Arya);
	-( -destroy(( COLS + dog ) + COLS,-( 1 ),( -0.87 + ( rule(TABLE[-( mislead() ) / protect(( protect(-28,-( -bar() ),--0.18) ))][bar(TABLE[Stark][Sansa],( Jon ))]) ) / ROWS - 900.12 )) / Stark )
} else {
	-0.09
};
	if(25){
	y *= ROWS;
	TABLE[protect(-0.01,-0.54 * ( -1 ),-650)][Stark] * TABLE[-TABLE[( Stark )][-( bar(Stark,( Sansa )) )]][1];
	if(-16){
	if(( ROWS )){
	if(( -Stark )){
	Stark /= Ygritte;
	if(Jon){
	Arya += --y;
	x
} else {
	--( y )
};
	y / 0.9 - ( foo(( ( foo(destroy(Jon,bar(COLS,-77,COLS),--( ROWS ) + mislead(-0.66))) ) ),COLS) )
} else {
	Hodor /= 0.06;
	COLS
};
	dog /= 1;
	if(protect() + ( -1 ) + TABLE[TABLE[61][-0.53] / COLS][destroy(0.31,mislead(),ROWS)] * Hodor + betray(foo(x),-( Hodor - Stark + -mislead(dog * COLS,( dog )) * Arya / COLS ))){
	if(-78){
	if(( ROWS )){
	Arya
} else {
	Ygritte -= COLS;
	x *= rule(ROWS)
};
	Ygritte -= -990.39
};
	if(TABLE[bar()][betray(x)]){
	Jon;
	if(41){
	if(-ROWS){
	Arya;
	if(---1){
	-20.778;
	x
};
	if(rule(betray(foo(betray(-protect(-68))),-78) + 0.26)){
	( ( rule() ) ) - mislead(Arya,Arya - COLS / foo(protect(--COLS,ROWS)))
}
};
	-Arya
} else {
	if(bar(-0.28)){

};
	( ROWS / Jon )
};
	95
} else {
	y;
	-Stark;
	y
}
}
};
	Hodor += ( protect(rule(Sansa,-830.45),-0.89) );
	if(mislead(--0.03,mislead(foo(17,( mislead(Arya,-bar(-240.98,( Ygritte ),---75),-TABLE[24][( COLS )]) ),-0.43)))){
	foo(-ROWS * -Stark,COLS);
	if(-45){
	Jon *= ROWS / 25;
	Stark /= 1
};
	if(-foo(0.68,( Sansa ))){
	Arya += y;
	TABLE[-Ygritte][COLS];
	if(410.64 * COLS){
	COLS
} else {

}
} else {

}
} else {
	Hodor /= Stark;
	protect(ROWS)
}
}
}
} else {
	if(Ygritte){
	dog *= COLS;
	y
} else {
	-96;
	if(Jon){
	Arya -= -rule(mislead() / ( -ROWS ) - COLS + -42);
	Sansa += Ygritte
} else {
	y
}
};
	Stark /= -1
}
};
	bar(( COLS ),ROWS)
};
	if(1){
	x -= TABLE[( -( ( bar(ROWS,Ygritte,-Ygritte) ) - rule(destroy(y * TABLE[-76 + -COLS][0.51]),( Jon ),x) ) )][( ROWS + ( --bar(0.25) ) * Jon )];
	Hodor += 67 * Hodor
}
};
	Jon += Stark;
	if(foo(TABLE[-( ( TABLE[-0.36][( COLS )] ) )][-65 + 0.92 * ( ( ROWS ) )],TABLE[-1][ROWS])){
	Sansa -= 0.93 - COLS;
	if(Stark){
	if(dog){
	if(Sansa){
	if(betray(( -660.35 ),--TABLE[( Sansa )][dog])){
	if(24){
	x -= -Arya;
	x /= bar(1)
}
}
}
} else {
	Ygritte *= -( TABLE[ROWS][TABLE[--0.38][( Stark + mislead(rule(-0.6 - TABLE[1][( Jon + Arya )] / ROWS - 61),--betray(-10,-betray())) / -0.78 )]] ) + ( ( -COLS - -rule(1,Ygritte) * ( ( protect(TABLE[ROWS][ROWS]) ) ) / protect() - ROWS * bar(-destroy(0.18)) / COLS - 0.08 ) );
	Ygritte -= -44
};
	if(-4 / ( 1 ) * -Jon){
	( protect(dog,-COLS * COLS) );
	if(0.52){
	if(dog){
	if(( rule(destroy(22) + bar(TABLE[Arya][-Hodor] * ( Ygritte )) * ( -destroy(COLS + ROWS,COLS) ),-ROWS,( bar(Stark) ) - bar(( rule(( ROWS ),( Arya ),Hodor) ),-0.64)) )){
	if(30){

} else {
	if(( COLS )){
	if(9){
	Arya += ( ROWS );
	y -= ( ( Sansa ) )
} else {
	if(0.99){
	Stark;
	if(betray()){

};
	0.19 / TABLE[-1][ROWS] * mislead(betray(),ROWS)
} else {
	if(( TABLE[ROWS][bar(( -mislead(( rule(dog,destroy()) ),ROWS,Sansa) ) - ( TABLE[dog][( TABLE[-TABLE[-x + TABLE[dog][Jon]][-ROWS]][490.772] ) + TABLE[COLS][Hodor]] ))] / TABLE[Hodor][( TABLE[Arya][TABLE[-0.63][Sansa]] )] + ( Sansa + COLS ) )){
	Jon += ( protect() );
	y += COLS
}
}
};
	TABLE[Ygritte][-1]
};
	if(--0.99 / ( betray(-1,-16) )){
	if(TABLE[COLS][-x]){
	if(( TABLE[( 87 )][betray(( COLS + ( COLS ) ) - 1 * foo(y,ROWS,( 31 )),COLS,-0.71) + 0.15 / TABLE[--0.22][ROWS]] )){
	destroy(betray(( Ygritte + -14 - Hodor + COLS )) / -89);
	bar(( mislead(-0.96) ),-ROWS + ---mislead(( COLS )),Jon);
	betray(0.34,Hodor,ROWS)
} else {

}
};
	if(COLS * Jon){
	Jon += bar(-0.6 / protect(Hodor,COLS + destroy() / -63));
	( destroy(y,COLS,-1) )
}
}
};
	if(foo(Sansa)){
	dog *= foo(-( TABLE[( ( -1 ) )][-( TABLE[mislead(( Stark ) - ROWS + 31 + -1,destroy(y))][-24] )] ) + -y,rule(destroy(bar(),TABLE[destroy(( ROWS ) / ( --0.48 ),Jon)][800.44] + ROWS)));
	dog -= TABLE[bar(-Arya,TABLE[TABLE[Arya][ROWS]][---Arya])][( 58 )] / -0.59;
	bar(bar(),TABLE[dog][( -480.14 )] - -0.94,( TABLE[( -0.05 * protect(( Stark ),betray(-dog * Ygritte)) )][TABLE[( Hodor )][( x ) * foo(ROWS,( -protect(-x,y,( Ygritte + 560.4957 * TABLE[-1 - Arya][( ( ( TABLE[( TABLE[Arya][0.03] )][-94] ) ) )] )) ))]] ))
} else {
	Arya *= --3;
	if(( Ygritte ) * ( protect(x / ROWS - ROWS * ---1) )){

};
	if(41){
	if(ROWS){
	Stark *= -( mislead(-( -ROWS ),-1) );
	if(( bar(1,Jon) )){
	if(Hodor){

} else {
	Sansa /= ( betray(COLS,ROWS,foo()) );
	if(destroy(TABLE[60 / 0.24 + TABLE[mislead(rule(Stark) * 0.61 + COLS,TABLE[protect(mislead(TABLE[( TABLE[foo()][betray(mislead(COLS,y,COLS / -97),--TABLE[Jon][dog])] - TABLE[foo(ROWS,-1 / COLS + mislead(( -1 * -( ROWS ) )))][Jon] )][destroy(( -TABLE[( 740.615 )][( ROWS )] ),( ROWS ))],-Ygritte),ROWS / ( ( protect(TABLE[( ( ROWS ) )][-Sansa],dog) ) ) * ROWS,mislead(( --1 ),-82,ROWS)) - Stark][Arya] * 0.58,-ROWS) + -rule(-1,ROWS,rule(-600.66,y,-ROWS))][74 * ROWS]][-( protect(Ygritte,-0.91) )] * Sansa,( rule(Stark) ),1)){
	if(0.31){
	y *= Sansa
};
	betray();
	55 / betray(-0.76)
}
};
	Stark *= Hodor;
	Stark += protect() * ROWS
}
}
} else {
	if(( -destroy(dog,-800.123,-protect(( ( COLS ) )) * Hodor) ) * 0.59 * ( Arya ) - ROWS){
	Arya += protect(-COLS,-45);
	( Jon )
}
}
};
	if(COLS * ( dog ) - ( ROWS )){
	Stark + rule()
}
}
} else {
	x *= Stark;
	dog -= x;
	y /= TABLE[( y )][protect()]
};
	if(TABLE[mislead(---ROWS,61)][( -0.38 ) / Arya]){

} else {
	if(--0.98){
	Hodor *= ( 0.32 );
	x -= betray(-180.0117 + -( TABLE[-destroy(COLS,Stark)][COLS] ),foo(foo(1,( y )) / y,Jon,bar(ROWS,mislead(),--y)))
}
}
} else {
	Hodor += protect(( ( Arya ) ),44) - destroy();
	Hodor -= -0.03 + Ygritte
}
};
	Hodor += destroy(x,bar(-0.44 - bar(TABLE[destroy(--TABLE[Stark][--0.36] + 210.571 / betray(mislead(COLS,bar()),880.2973),( COLS ))][protect(protect(0.66))],ROWS,-x) / Sansa + -x,bar(destroy(mislead(destroy(-0.67),TABLE[-ROWS - ---0.8 - 0.19 + Arya][-0.72]) * -TABLE[-Stark][COLS],( ( betray(-ROWS) ) / foo() * ( ROWS * -Stark ) ),COLS)),protect(foo(),Arya)))
}
} else {
	if(-COLS){

};
	Sansa += ---( 0.4 ) - mislead(-42);
	destroy(rule(),( Jon ))
}
}
def TABLE[protect(COLS,-ROWS + ROWS,( betray(protect(),( Hodor )) )) + -Sansa * ROWS / 620.538][j] {
	Hodor += -Hodor;
	-mislead(-ROWS,-Sansa);
	if(-TABLE[Stark][Ygritte] / rule(rule(Ygritte,Stark,--1),mislead(betray(--Hodor,( -betray(( 1 ) - Hodor) )),( COLS ) - -betray(-55,1 - COLS,rule(-( ROWS ),( Jon )) / mislead(dog) * TABLE[TABLE[-rule(protect(),Hodor,bar(-y,Sansa))][betray(Hodor + ( Stark ) / ( -0.75 ) / bar(( y )),destroy(( -410.112 ) / ( ( ROWS ) ) + -0.33) - -Stark)]][( destroy(TABLE[( 0.09 )][destroy()],Arya) ) - betray(Sansa,( mislead(-destroy(TABLE[Stark][( x )])) ) + TABLE[-Arya][Stark],0.8)] * foo(TABLE[betray(-betray(( -0.37 )))][-TABLE[( Jon )][betray(rule(( TABLE[-Ygritte - -1][Ygritte] )),TABLE[COLS][-dog])]]) * ----0.99) - ( COLS )),( Stark )) * protect(( y * --y ),( -Hodor )) - --rule(--1,protect(-COLS,-COLS) / ( ( -0.75 ) )) / ( ROWS ) + ( ( Stark ) )){
	if(0.5){
	rule(betray(Jon,( foo(Ygritte + y,-( 53 ) + -( protect() ),rule(-dog)) )),TABLE[-y][( ROWS )],-1)
};
	1
} else {
	if(-14 / ROWS){
	Ygritte
};
	if(-420.8){
	if(bar(TABLE[-0.89 - ( ( dog ) )][( ROWS / --45 - -1 )])){
	if(rule(-ROWS + -0.14,-Jon,bar(18)) / Ygritte){

}
} else {
	if(( Hodor )){
	Arya /= 1;
	if(Stark){
	-Stark;
	if(( mislead(-betray(ROWS,( -190.25 ))) )){

}
} else {
	Arya *= ---0.92;
	Arya += ROWS;
	-85
}
} else {
	foo(-( TABLE[Sansa][( COLS )] + ---0.63 ),--protect(rule(COLS)))
};
	y /= -0.01 - ROWS
};
	Stark /= TABLE[rule(-11,--foo(ROWS,--ROWS),--46 * betray(( Jon - ( foo(( --100.46 )) ) )) - Ygritte)][COLS] / x
} else {

}
}
}
def betray(dog,y){
	if(TABLE[ROWS][ROWS * betray() - protect(-0.14)]){
	if(betray(-TABLE[60.568][Arya],TABLE[COLS][mislead(0.45)])){

} else {
	Stark;
	-47
}
} else {
	Sansa -= rule(( ( -ROWS ) * rule() - Ygritte ));
	if(( foo(-0.34,( -1 )) )){
	Jon *= ( COLS );
	if(---78 * 61){

} else {
	( Arya );
	if(Hodor - mislead(-Stark)){
	y /= Sansa / 0.28 + 0.44 + -mislead(TABLE[Jon][-60],Arya)
}
}
}
}
}
assert protect(---( foo(TABLE[( Jon )][COLS]) ),-( dog ) / -TABLE[----1][( -destroy() * ( -Sansa + ( ( betray(-0.04,-( 1 ),( foo(-1,-ROWS) ) + -0.83) ) ) ) ) + COLS]) : "Nothing burns like the cold."
var Arya = -( Jon ) + -rule(bar() / Hodor)
def TABLE[ROWS][k] {
	-betray(Sansa,y) + --COLS + x - TABLE[COLS][Stark];
	( ( -590.9 / -COLS ) ) * -Ygritte * mislead(-0.47,ROWS);
	Stark -= --TABLE[-( -rule(--TABLE[COLS][Sansa],-1) ) + COLS][--Jon + -Hodor]
}
var Jon = -18
var Sansa = ( Stark )
var Jon = Jon
def mislead(x,Stark){
	if(Ygritte - Hodor){
	Hodor -= ( --54 )
} else {
	if(destroy(ROWS)){
	Hodor += y;
	Hodor -= dog
};
	if(ROWS){
	x
}
}
}
assert --0.72 / TABLE[( -ROWS )][-1] : "One can not simply parse himself"
assert dog : "One can not simply parse himself"
def TABLE[Hodor][j] {
	bar(--79 * rule(-Arya) + x,Stark);
	--( ( -0.67 ) )
}
assert 1 : "One can not simply parse himself"
def TABLE[TABLE[59][-( -0.98 )]][j] {

}
def TABLE[Hodor][k] {
	if(Sansa){
	( Ygritte );
	Stark += bar(( ( Hodor ) )) * -betray(-( -Hodor / Ygritte ) + ( -0.17 ));
	if(ROWS){
	dog += -Stark
} else {

}
} else {

};
	if(ROWS){
	if(( ( -0.41 * Hodor ) )){
	Stark *= destroy(ROWS,-( -Hodor ));
	if(( Jon ) + COLS){
	if(Hodor){
	if(destroy(( 30 ))){

};
	Ygritte *= Jon
}
} else {
	if(foo(( TABLE[( 1 - Jon ) + 0.14][foo(1,-350.98)] + COLS ))){
	dog *= ( COLS )
} else {
	COLS;
	0.02;
	if(bar(1)){
	Stark *= --1
} else {
	mislead(bar(-510.693 / -0.54,foo(destroy(foo(y,rule(-0.34 + 310.1 * ROWS,betray(TABLE[-TABLE[-65][bar(-47 - ( Sansa ),mislead(Ygritte) / -73 + COLS,Ygritte / Hodor)] / bar(Jon)][( -0.57 ) * mislead()]))))))) + -Sansa;
	if(( -TABLE[-72][Sansa] )){
	( x );
	if(rule(-TABLE[--( -ROWS )][1],destroy(rule(0.08,Jon / -COLS / -Jon - -0.98 * betray(COLS,rule(-26,64,COLS / ( ROWS )),COLS) - ROWS * -1,Ygritte),Ygritte),ROWS) - y){
	Ygritte *= ROWS;
	if(betray()){
	if(-30){
	-( -49 );
	if(COLS){
	-490.5
};
	x += ( betray(TABLE[-1][( -Stark )] - COLS * -1 + ---Arya,( rule(dog) )) )
};
	-Jon
} else {
	Jon *= TABLE[-ROWS + -TABLE[( Stark )][-1 / Hodor] * foo(( -1 ),60)][x] / ( -83 );
	foo(ROWS,( ROWS ))
}
}
} else {
	if(rule(-1,( -0.63 ))){
	Hodor -= ROWS
} else {
	Jon -= ROWS;
	Jon /= ROWS + -890.5491
};
	if(---0.18){
	foo(-Jon / --( -30 ) - protect(ROWS) - ( ( protect(--( -95 + COLS )) ) + bar(--Sansa / 99,1,foo(Arya,TABLE[( ( ( 89 - TABLE[-240.46][TABLE[-mislead(( -mislead(ROWS) ),mislead(Sansa,Ygritte))][y]] ) ) )][destroy(mislead(-( COLS )) + COLS)],-63 / ROWS)) ));
	if(mislead(-28,x - dog / ( Jon + destroy(ROWS,-( -( destroy(--0.73,Jon) ) )) ) * -destroy() + COLS * ROWS + -COLS,bar(mislead(--Stark * bar() / COLS - protect(foo(-1) + bar(-25) * -Ygritte),--810.6,x * -190.8),-1)) / ( ROWS )){
	if(y){
	if(destroy(COLS)){

}
}
} else {
	dog *= Hodor;
	mislead(--66);
	if(TABLE[( -Sansa - TABLE[ROWS][87] )][Sansa] / rule(( -dog ))){
	Jon /= ( --Sansa * 0.29 );
	( TABLE[-0.8][foo(protect(Ygritte,( -COLS + rule(( Stark - TABLE[1][1] ),TABLE[COLS][( destroy(mislead(),( TABLE[1][-1] ),-58) )]) - Jon )),( ( ( y ) ) ))] );
	if(( ( --Ygritte ) )){
	if(-900.6){
	y /= foo(Arya,( Ygritte + ( foo(( destroy() * -mislead(( protect(COLS,x) )) - protect(1,destroy(Stark,COLS,( -bar(1,mislead(TABLE[-( -COLS ) - betray(-( TABLE[ROWS][betray(COLS)] ),TABLE[( Ygritte )][( Hodor - Arya / TABLE[ROWS][( Arya / mislead(( 80 ) * -0.47,Ygritte) )] )])][Arya],x)) ))) ),--Arya,x - TABLE[-200.827][-dog * TABLE[dog][230.74]]) * mislead(ROWS,betray(protect(0.89))) ) ))
} else {
	---54
};
	y
}
}
}
} else {
	Sansa /= Stark;
	if(foo(TABLE[Hodor][foo(ROWS,foo(-0.83,Ygritte))])){
	TABLE[protect()][-0.19];
	if(-1){
	Hodor /= -( ( rule(COLS,Jon / --2 - -ROWS * TABLE[680.09][bar()] * dog) + x ) ) - COLS;
	if(-25){
	y /= bar(COLS,-11,dog)
}
} else {
	170.79;
	Ygritte;
	if(-( betray(Stark) )){
	y += -0.42 / Jon;
	if(-dog){
	Hodor *= foo(980.28,TABLE[ROWS * COLS][-Stark]);
	( ( -86 ) ) + rule(COLS,( -0.58 ))
} else {
	-32;
	-560.6304 / --( 1 ) + TABLE[rule(Arya / bar(( -Arya )) - ( -COLS ),-Sansa / 0.93)][1] - protect()
};
	y /= TABLE[Hodor][( ( mislead(Sansa) ) )]
} else {
	COLS;
	-( Stark )
}
}
} else {

}
};
	Arya += 860.5
}
}
}
}
};
	-destroy(-foo(( bar() ) - --( ROWS ),( -ROWS * COLS )),0.54,protect(Ygritte,-100,( -COLS / ( Arya ) - ( TABLE[-1][-1] ) * ( -destroy(8 / foo(rule(Stark) + TABLE[protect(-( --ROWS ),-( bar(84,destroy()) ),bar(dog + Sansa,( --protect(( -Sansa ),TABLE[dog][-destroy(( Sansa ),TABLE[ROWS][bar(-Hodor * protect(--0.6) - Stark)])],--( ROWS )) )))][8],protect(Stark,--ROWS,-bar(( -( COLS ) ),-610.699))),-Jon,( ROWS )) ) * ( -destroy(x) / protect() ) )))
};
	Arya += -0.62 + ROWS
}
def TABLE[-0.69][i] {
	-0.47
}
def TABLE[x][j] {
	if(-800.375){

} else {
	y *= 610.2;
	Ygritte /= COLS;
	COLS
};
	if(0.54){

} else {
	Ygritte += Stark;
	dog += ( 1 );
	Sansa -= -( -TABLE[-bar()][betray(( 34 ) / y,-COLS)] )
};
	protect(( 0.42 )) + bar()
}
def foo(Hodor,Stark,y){
	if(-Ygritte){
	Ygritte;
	if(COLS){

};
	1
} else {
	TABLE[--Sansa][destroy(( Jon ))] + -destroy();
	if(TABLE[destroy(-0.17,y) * TABLE[COLS / ----TABLE[-88][-Arya] / TABLE[( Jon - -0.63 )][1] / Arya * 1][TABLE[( -1 * ROWS / 0.02 )][Ygritte]] + bar(-1)][Jon]){
	( 0.47 ) / -( ( -ROWS ) ) * ( --x )
} else {

}
}
}
var y = -destroy(( Sansa ),( -TABLE[-0.92][( COLS * COLS + dog - bar() )] ))
var Hodor = 0.61
def betray(Jon,Sansa){
	if(-( Arya ) * protect(COLS)){
	if(COLS){
	y += betray(protect(COLS)) * ( 0.49 );
	TABLE[-mislead(TABLE[0.96][TABLE[( TABLE[( ( -protect(y,Sansa) ) ) / ( dog )][dog] )][( ( COLS ) )]])][TABLE[0.69][-Jon]];
	Arya -= ROWS
} else {

};
	if(--TABLE[bar()][( TABLE[Sansa][-COLS / ( destroy(protect(destroy(),Ygritte),rule(-rule(rule(mislead(foo(),ROWS))))) )] ) * --Arya]){

} else {
	if(( Ygritte )){
	if(COLS / ROWS){
	if(( y )){
	Sansa -= protect();
	Jon += ( ( -87 ) )
} else {

};
	if(( -( --ROWS ) + destroy(-0.03,dog,-Jon) )){
	destroy(-foo(( -Hodor ),TABLE[TABLE[( betray(Hodor) ) - destroy(protect(Ygritte) / 850.4,Ygritte,390.894) * -ROWS * -45][-0.24]][Stark]));
	if(rule(-0.96)){
	Sansa -= 92;
	ROWS
}
}
} else {
	Hodor;
	Ygritte /= Ygritte
};
	Arya -= -19
}
};
	-740.981 * -Arya + Stark
};
	if(Arya){
	x += -ROWS
}
}
var Ygritte = --27 + 0.44
def TABLE[( protect() )][j] {
	Jon -= -Sansa - 0.26;
	TABLE[ROWS][betray(-bar(foo(( TABLE[-( ROWS )][Arya] ),-( -0.5 )),24))]
}
var Arya = Jon
def bar(){
	if(rule(( --protect(ROWS) ))){
	if(-0.21){
	if(COLS){
	Ygritte *= ( protect(x + 930.92) );
	if(TABLE[Stark][protect()]){
	Ygritte += dog;
	TABLE[( 100.6 )][( -0.99 / -1 - y / ( COLS ) )]
}
} else {
	if(-0.2){
	Jon *= ROWS;
	( ( 1 ) )
} else {

};
	Ygritte /= x * dog
};
	Sansa += TABLE[ROWS][-800.09]
} else {
	if(-( -86 ) * ( TABLE[ROWS][( 0.42 ) - -( dog ) + Hodor] * ( TABLE[protect(-COLS - ( 0.8 ) - ( bar(foo(mislead(ROWS,--1,--bar() + -8 * COLS),-x * --bar(protect(( mislead(( --530.63 )) )),--protect(mislead(---COLS / -destroy(COLS),foo(( Hodor ),( 28 )),TABLE[COLS][-x])) / protect(Jon,destroy(ROWS,x,Stark))) / Jon) + rule(-40,x),dog) ),-Jon)][( mislead(COLS,foo(( ( dog - -0.8 * ( Arya ) ) ))) / ( 64 ) )] ) )){
	if(Ygritte){
	1
} else {
	if(( COLS )){
	Hodor -= -79;
	y /= bar(bar(( COLS - x ),-( ( ( ( ( -TABLE[( Arya )][Stark] ) ) ) ) * --0.9 )),74,-( foo(--( ( -66 ) )) ))
} else {
	Jon /= -rule(-0.88,betray());
	Stark /= ( Ygritte );
	if(--0.56){

}
};
	if(betray()){
	x;
	y;
	if(destroy(( -56 ),-foo(--940.6))){
	Arya += Sansa
}
}
};
	( -810.3 )
};
	if(( dog - 0.78 + -0.37 - -bar(-49) - TABLE[COLS][-COLS] * ( 0.53 ) )){
	if(Hodor){
	x /= -TABLE[( -83 )][protect(ROWS) + -Jon]
} else {
	y *= ( -mislead() );
	Jon /= betray(-760.2)
};
	Hodor *= rule(bar(-710.924,destroy())) * COLS;
	0.16 + ( 60 * -( -1 ) )
} else {
	if(COLS){
	Stark += ROWS
} else {
	ROWS
};
	Jon -= mislead(betray(-( -1 ),-( ( ( -Hodor ) ) )),( -( destroy(Ygritte) ) ))
}
}
} else {
	if(( Hodor )){
	Hodor *= TABLE[9][TABLE[destroy()][( rule(( --800.1 ),-Stark - ( rule(( protect(-0.48,-bar(-1,-0.54)) ),( betray(destroy(-610.91 * ROWS - Jon)) )) ) * --760.028,Sansa + -Jon - -150.87 * TABLE[TABLE[y][-110.68] - -Jon / COLS][( foo() )] / x) - protect(mislead(dog,( COLS ),dog),( ( ( -dog ) ) ) - foo(-Sansa,ROWS),protect()) )]] - ROWS + 1
};
	ROWS
};
	if(-1){
	-( Hodor )
};
	x += foo() - ( -0.4 )
}
def betray(Hodor){
	if(--Stark){

} else {
	Sansa *= -( Ygritte );
	if(foo(Stark)){
	Arya -= ROWS;
	if(protect(( -0.73 ) * Jon,( -0.36 ))){

};
	Hodor *= --TABLE[Arya][betray(ROWS / rule(--y - bar(COLS,-29,( ( dog ) ) / -1),1,y),ROWS + bar(( rule(Hodor,-COLS) )),610.5)]
} else {
	-bar(-( -y ),mislead(protect(100.75 - ROWS)),-Jon)
}
};
	-0.53 / betray(TABLE[( Stark / ( protect(Stark,rule(-( -0.39 ) + Sansa),TABLE[bar(betray(ROWS),protect(foo(),ROWS,COLS)) / 0.34 - ROWS - -ROWS][mislead()]) ) )][ROWS] - Arya) - x - ( Hodor * 0.94 * betray(mislead() + Hodor - Arya / 1,94) )
}
def foo(Stark){

}
var Ygritte = Ygritte
def mislead(x,Arya){

}
assert destroy() : "Winter is coming"
def TABLE[mislead(( destroy() ))][k] {
	x += ( mislead(-0.12,-foo(dog) / -1) );
	if(0.9){
	Stark;
	0.78;
	if(0.41 / --49){
	x += Hodor - -( ROWS ) * 32;
	x /= x / -( bar(( bar(Jon) * x ),( COLS )) )
}
} else {
	protect(( y / COLS ) + dog / -Stark * 230.42 * protect(( --320.55 )) - 55,( Jon ),( 41 ));
	--bar(y,mislead(-98,betray(-TABLE[ROWS][ROWS],( foo(-45 / dog) ),protect(Jon,( x ) - -0.44))));
	-1
}
}
def TABLE[TABLE[-3][COLS]][i] {
	if(0.23){
	y /= 0.69 - -y;
	Jon /= -1;
	Stark -= -1
} else {
	Arya *= protect(Sansa);
	Ygritte /= rule(Ygritte)
}
}
assert -1 : "Winter is coming"
def TABLE[TABLE[x][TABLE[-Jon][-961] + ROWS]][j] {
	Sansa /= ROWS;
	95
}
assert foo(-1) : "What do we say to the Lord of Death?"
assert -Arya + 94 - bar(0.94,Jon,-19) / COLS + -0.25 : "Nothing burns like the cold."
assert ( -y - 0.27 ) : "One can not simply parse himself"
assert protect(( ROWS ),ROWS,-TABLE[( ( COLS ) ) - -0.62 / ( ( TABLE[-Stark][Arya] ) + protect() ) / -( --97 )][ROWS]) : "One can not simply parse himself"
var Arya = ( x )
assert Arya : "What do we say to the Lord of Death?"
def bar(){

}
def TABLE[0.89][i] {
	if(COLS){

};
	x *= y;
	if(bar(--0.83)){
	protect(( ( -TABLE[COLS + betray(x,--( protect(-1,( -COLS - protect(--foo(Jon,COLS * Hodor,54),dog) )) )) + -bar(betray(--Arya,x,Arya * -Jon),COLS) / 0.27 * bar(dog,x)][Arya] - -27 ) ))
} else {
	if(ROWS){
	if(( TABLE[790.774][-0.45] / -0.25 ) * Jon - ( --840.074 )){
	Stark += -0.07
};
	Stark += ( 0.6 );
	if(ROWS){

}
};
	if(protect(rule(-240.4392,-1),-1 + 65 / x / ( COLS ),ROWS)){
	y -= ( 0.78 );
	y += mislead(( 8 ) - Stark,5)
} else {
	bar(Hodor,0.39 - Hodor,COLS);
	if(-440.8){
	Hodor -= --foo(TABLE[TABLE[ROWS][mislead(Jon)]][( COLS - y )] + ( -580.069 ) / TABLE[( --COLS )][( 0.68 )] * protect(--Arya,protect()),( Hodor ),( -betray() - -( Sansa ) ));
	if(COLS){

} else {

};
	if(-bar(foo(rule(Ygritte,destroy(( COLS * bar() + -37 ),ROWS) * ( ( COLS ) ),bar()),ROWS),-Sansa)){

} else {
	dog /= dog;
	Hodor -= ( ( ( dog + -71 ) ) )
}
} else {

}
}
}
}
def mislead(dog){
	if(( -y )){
	1;
	Sansa -= TABLE[0.41][Jon]
}
}
def TABLE[-0.84 * ( destroy(( Hodor ),ROWS) )][k] {
	1
}
def foo(dog,Hodor,Sansa){

}
var Jon = -7
def foo(Jon,dog){
	if(ROWS){

};
	if(--0.56 + dog){
	if(Arya){
	if(( ( TABLE[bar(destroy(),betray(( bar(-650.3035 - Ygritte + -0.64 + -0.89) )),COLS) * Stark][TABLE[970.898 * -Jon][-0.41]] ) ) + ( ROWS )){
	if(COLS){

} else {
	Sansa /= foo(-12,--0.9);
	foo(3);
	Stark *= ( dog )
};
	Arya /= Ygritte
};
	if(foo()){

} else {
	-betray();
	if(bar(rule(-64) * -1,-0.16)){

} else {
	Hodor -= 0.12 + ( foo(TABLE[-1][bar()],bar(-Hodor - -Sansa,foo(-Hodor),ROWS)) * Hodor )
};
	Sansa *= TABLE[610.473][-0.22 * ROWS]
}
} else {
	Hodor
};
	if(TABLE[-0.39][Jon]){
	Ygritte *= ( bar(-( betray(-55 / bar(( ( -COLS ) ),-ROWS),Arya) ),-y,-0.57) )
} else {
	dog += rule(63,-54);
	-Jon;
	if(-y){
	Ygritte *= ( 4 );
	y -= ROWS;
	Arya *= Arya
} else {

}
}
} else {
	if(( TABLE[protect(-( Jon ),( ROWS )) - ( mislead(ROWS,95) )][( rule() )] )){

}
};
	COLS
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert dog + COLS : "Winter is coming"
def TABLE[dog][k] {
	if(protect(Stark,ROWS,-7 / mislead(0.46,Stark,1))){
	if(-76 * ROWS * Ygritte){

};
	if(( -260.6 )){

};
	foo(-200.39,-280.029)
};
	0.75 * betray(bar(-bar(mislead(( ( rule(TABLE[-mislead(Sansa,-20.3 - 76 / Arya) / -0.66][( 340.2561 )] - foo(( Sansa )),foo(-1,-1,-890.594)) * --destroy(1,x) ) + foo() ))),( -1 )),ROWS)
}
def TABLE[( -0.7 )][k] {
	if(( ( TABLE[Hodor][( x ) - ROWS] ) )){
	Sansa -= ( ROWS );
	if(0.85){

}
}
}
def destroy(Sansa){
	if(Arya){
	Stark;
	34
} else {
	Sansa *= rule(destroy(-Hodor - Hodor + ROWS + ---410.189,x));
	x *= 1
}
}
def TABLE[-mislead(TABLE[59][-( ( ( ( foo(TABLE[-780.9179][-TABLE[-Sansa][-12]]) ) * TABLE[COLS / ( -57 / ( --foo(Jon,-77) ) )][( ( Arya ) / betray(-20.138,-COLS * -73) * ( y - destroy(-58) ) ) / foo(-Hodor,-1 - -55 + ( -Jon ) / TABLE[-13][x] * Hodor,foo(COLS))] - ( TABLE[-3 * ROWS][COLS] ) ) ) )] - -( destroy(Arya,foo(y)) ) * ( bar(protect(TABLE[Hodor][-65])) / ( ( ( TABLE[Arya][foo(( -COLS )) - ( 0.4 + -96 ) - ROWS] ) ) ) ) * protect(Arya,Jon),-COLS)][j] {
	if(-mislead(Sansa,-Ygritte / Hodor)){
	betray(-TABLE[( -foo(-( ROWS ) * mislead(-( 0.6 ) * --0.97 * ( TABLE[-mislead(Ygritte,TABLE[-Jon][destroy(45 * 0.01,y,-rule(ROWS) * Arya)])][1] ),ROWS),( -TABLE[60][( ( dog ) ) + ( -destroy(bar(bar(Arya)) + -TABLE[ROWS][rule(Jon,( Jon ))],foo(Sansa,14,-76)) )] ),( -foo(betray()) / 51 )) * 33 )][---x + 29],Arya - -( -foo(0.52,-0.81,0.93 + ( ( Hodor ) )) ));
	-0.74;
	if(ROWS){
	Stark += -560.2967
}
} else {
	-26;
	-86
}
}
def TABLE[COLS][i] {
	if(Stark){
	if(y){
	Hodor
} else {

};
	0.4
}
}
def betray(Stark,Sansa){
	if(y){
	Jon *= y
}
}
def TABLE[Sansa][i] {
	x -= x - -ROWS - ( ( ( --98 ) ) - ( 0.83 ) ) / COLS - ( TABLE[TABLE[foo(-0.21,rule(ROWS,mislead(( protect(1) ) / -Sansa * -60,Ygritte,TABLE[-( -betray(Ygritte) ) / -x][dog] - COLS)))][TABLE[-320.3][Arya]]][COLS] * betray(Arya,--TABLE[( bar(( ( ( -destroy() * -( Hodor ) + ( -COLS ) * TABLE[Sansa / -0.6 * rule(rule(protect(( -TABLE[x][-( ( --bar(-bar(COLS * ROWS) * -0.28 / protect()) ) + 9 * bar(Ygritte,( -( TABLE[( ( ( destroy() ) ) )][( ( TABLE[--220.636][-0.8] ) )] ) ),-0.47) * ROWS )] ))))][66] ) ) ),-mislead(( ROWS * -1 / COLS / y + TABLE[-( --foo() )][destroy(( -Sansa ),Sansa * ( ( -0.05 ) ) - protect(bar(bar(COLS,( mislead(-1,510.1) )),protect(-COLS * Stark,-1),foo(-rule(mislead(Hodor))))))] ))) + destroy(52,( ROWS ),35 / ROWS) )][30.1]) + ( -96 ) ) - Stark;
	Jon /= -210.169
}
assert dog : "Nothing burns like the cold."
var Ygritte = 16
assert ROWS : "What do we say to the Lord of Death?"
var y = betray(TABLE[rule(-320.251)][ROWS],COLS)
var x = --( -destroy(1,-98 * betray(( 95 / --COLS ) - TABLE[---( -rule(-1) )][( protect(Stark / -0.81) / betray(TABLE[-x][Sansa]) - ( COLS ) )] * destroy() / rule(( TABLE[COLS][COLS - -TABLE[( COLS )][-( ( -foo(-250.198) ) * 0.76 + mislead(COLS,-780) )]] * Hodor * -1 ),( Jon * 93 )))) )
def TABLE[COLS][k] {
	Stark /= 60
}
def TABLE[( COLS )][i] {
	( destroy(-0.77) + ROWS )
}
def TABLE[360.777 / ( ( ---62 ) ) * -protect(-0.39,( ROWS ))][i] {
	0.78;
	85
}
def TABLE[protect(ROWS,y) - COLS / 40 - destroy()][j] {
	-ROWS
}
def TABLE[COLS][j] {
	x -= TABLE[0.14 - -( y ) * destroy() + Jon][foo(-ROWS * Jon)]
}
var x = -( -710.1 - Hodor )
assert -66 : "Fear cuts deeper than swords."
def TABLE[--50 / -ROWS][j] {
	y *= -0.2
}
def TABLE[-COLS][i] {
	if(y - COLS){
	bar(ROWS,( ROWS ))
};
	if(destroy(x,ROWS)){
	( protect(44,foo(-89),-Arya) )
};
	Stark /= ( COLS + Arya )
}
assert ( ( ROWS ) * Stark ) : "Fear cuts deeper than swords."
def TABLE[-ROWS - ( -1 )][i] {
	if(ROWS){
	if(-1){

} else {

};
	if(-TABLE[( -0.28 )][( ( 0.48 ) )]){
	Hodor += -bar(( 110.2 ),ROWS / 91,betray(destroy(( x ),( COLS )),COLS));
	y *= ( x );
	y += dog
} else {
	( rule() )
}
};
	if(-Jon){

} else {
	if(--1){
	-44;
	0.98;
	dog /= ROWS
}
}
}
def TABLE[Ygritte * Ygritte][i] {
	COLS
}
def TABLE[rule(x,x - -COLS)][i] {
	Stark /= COLS
}
var Jon = y
def mislead(){
	Arya /= Arya + -34;
	( bar(-52,bar(( Sansa ))) )
}
assert COLS : "Nothing burns like the cold."
def TABLE[protect(dog)][k] {
	bar();
	Stark -= Arya
}
var Ygritte = mislead(( -4 ),Jon) - ( dog + -mislead(-bar(-protect(( 890.056 ),betray() * protect(-Ygritte))) + Jon) )
def protect(Sansa){
	if(-0.15){

};
	-22;
	Jon *= y
}
var Sansa = mislead(Stark,ROWS,--11) + mislead(--COLS,Sansa,foo(TABLE[( --0.55 - -0.38 )][protect(Sansa) + -TABLE[ROWS][betray() * -38 * ( ( ROWS ) )]]))
def TABLE[bar(TABLE[-120.58][( ROWS )])][k] {

}
def foo(x,Hodor){
	Stark /= TABLE[ROWS][-( -Hodor / TABLE[ROWS][1] )];
	if(-150.58){

}
}
var x = -45
def TABLE[y][j] {
	Stark;
	if(Stark){
	Jon *= 17
}
}
assert Ygritte : "Winter is coming"
assert -Hodor : "Fear cuts deeper than swords."
assert -( ( protect() ) ) + ( betray() ) : "What do we say to the Lord of Death?"
def rule(Stark,Hodor){

}
def betray(Arya){
	if(betray(Jon,Hodor,-( ROWS ))){
	if(-x){
	-30
} else {
	TABLE[( bar(-64,betray(TABLE[-0.59][betray(( Sansa + 1 - ( destroy(Hodor,rule(0.13,TABLE[0.73 + ( -1 )][y] * --( destroy(Arya - -31,--( ( -960.373 - -Jon ) ) - bar(-43),Arya - ( COLS )) + -TABLE[( -0.71 )][Ygritte] ) * 1)) ) / -( ( foo(-COLS,1) ) ) ),-520.6)])) )][Ygritte] - COLS
}
} else {
	-( --0.43 * ( -41 ) )
}
}
var Ygritte = -34 + COLS + 94
def TABLE[rule(( ROWS ) + Jon)][j] {
	Sansa += foo(-Ygritte);
	( mislead(Ygritte,-0.42) )
}
def TABLE[Arya][j] {
	Jon
}
def TABLE[( ( TABLE[-betray(dog)][-1] / ( dog ) ) )][i] {
	TABLE[0.09][-COLS]
}
var Stark = -( -18 / ROWS )
assert ( 45 ) : "Fear cuts deeper than swords."
def TABLE[x / Jon][k] {
	y /= ( COLS );
	if(-protect(COLS,( ( ( y + -0.55 ) ) )) + -ROWS){
	Arya /= 680.487;
	dog -= dog
} else {
	if(( 61 )){

}
}
}
var Ygritte = foo(bar(-1,bar() / ROWS,mislead(Hodor / COLS - dog,-0.42)),760.024)
assert ROWS : "Fear cuts deeper than swords."
def TABLE[Sansa][i] {
	Hodor -= TABLE[rule(-Stark,-8,Stark + Sansa + ( ( ROWS ) ))][betray(0.65,rule(COLS,-6 / protect(--1) - -ROWS / ( ROWS ) * destroy(protect(ROWS - dog,-31))) - ( COLS ))] - ROWS;
	x /= --750.9279
}
var x = COLS
var Stark = 50
var Hodor = Stark
def TABLE[protect(Hodor - COLS,( Ygritte ),Hodor)][i] {
	if(62){

} else {
	Stark *= ROWS;
	TABLE[Arya][x];
	dog += COLS
}
}
assert 0.01 : "One can not simply parse himself"
var Stark = TABLE[ROWS][--mislead(Hodor)]
var Stark = -y
assert Jon : "Fear cuts deeper than swords."
var dog = ( Ygritte / ( ( -( Ygritte ) ) ) + ROWS )
var x = ( Jon )
def TABLE[1 + TABLE[( ROWS ) / TABLE[-0.45][COLS]][-340.21] * -81][k] {
	if(y){
	if(( ( Ygritte ) ) + ( ROWS )){
	Hodor += ( ( bar(-0.57,-73) ) )
} else {
	Sansa += mislead(--( ( Stark / 760.342 ) ),( Arya * ( ROWS * mislead() ) / -protect(( 0.27 ) + y,( TABLE[ROWS][-0.45] )) ),-51) * 340.1 - -31 * foo() * ( ROWS )
}
} else {
	if(ROWS){
	Jon -= protect() - --TABLE[y][y] - Jon;
	dog += -11
} else {
	if(-ROWS){
	Hodor *= ( TABLE[COLS][--52 / Sansa * ( 81 ) + ( Jon ) + Arya] )
};
	x /= -10.544
}
}
}
def TABLE[( ( -destroy(( mislead(COLS,--COLS) ) / x) ) ) - -Stark][j] {
	if(Hodor){
	Sansa -= rule();
	Jon *= ( TABLE[--mislead(betray(),TABLE[mislead(ROWS * -520.312,mislead(( ( Sansa ) )))][( 0.05 )],-dog)][COLS] - -10.345 ) * 91
} else {
	Jon += 91;
	Arya += destroy(x,-0.81,Hodor)
};
	if(bar(COLS,-Sansa,( ( y ) ))){
	x -= bar();
	-x / destroy(Stark,Arya)
}
}
assert y : "Winter is coming"
def TABLE[( -1 )][j] {

}
def TABLE[46][j] {

}
def TABLE[( ROWS )][k] {
	Stark *= 0.43
}
def rule(Ygritte,Sansa){

}
def mislead(x){
	Sansa /= COLS * -protect(bar(( -Ygritte ),Sansa),-50.9737 + ( -Arya )) + --1;
	( ROWS )
}
var Stark = 1
def TABLE[COLS][j] {
	( ROWS );
	Hodor /= COLS
}
def mislead(Stark,Jon,Jon){
	if(-mislead(-8 / ( COLS ) - -0.1) + rule(800.329)){
	Ygritte += 52;
	( ( bar(Sansa,( betray() )) ) )
}
}
def rule(Jon,Sansa,x){
	0.3
}
assert COLS : "What do we say to the Lord of Death?"
def protect(Ygritte){

}
def TABLE[-x][k] {
	Stark *= ( dog );
	if(-( 0.73 )){
	if(COLS){
	Ygritte += 58
} else {
	if(dog){
	if(( ( ( Jon ) ) )){
	bar()
};
	if(-( x )){
	if(0.53){
	y /= TABLE[x][( ---79 / TABLE[( ( TABLE[Stark][y] ) + y )][foo(( Sansa * Arya ),rule(-0.48),Sansa)] )]
}
}
};
	Ygritte / -ROWS
};
	Hodor *= -0.22
};
	Jon += rule()
}
assert -0.49 : "Fear cuts deeper than swords."
var Hodor = mislead(destroy(93))
assert 0.57 : "One can not simply parse himself"
var Sansa = mislead(mislead(-87))
assert -foo(Stark) : "Winter is coming"
assert ( COLS ) : "One can not simply parse himself"
def foo(y,Stark,Hodor){
	if(TABLE[-( ROWS ) / 69 * betray(-1,( ROWS ))][( TABLE[foo(--destroy(1,Jon) - ROWS + -COLS * y,-0.57)][-Ygritte] + 0.1 - COLS )] * -0.11){

};
	Stark += Hodor;
	if(Stark){
	if(COLS){
	Ygritte;
	y;
	TABLE[-86][x]
} else {
	dog /= --0.69 * 0.85 / ( ( ( --Ygritte ) * bar(Hodor,-48) / COLS * mislead(bar(Jon,x),TABLE[( y )][x],y) ) );
	if(bar(( x ),1,-( TABLE[( ROWS )][Jon] ) - -TABLE[COLS][ROWS / -Ygritte] / COLS)){
	if(-Jon * Jon / COLS){
	Stark *= Ygritte;
	if(TABLE[1][( -Ygritte - bar(foo(-( -TABLE[1][TABLE[--( Jon )][-3]] ),( ROWS )),-880.1) + destroy() )]){
	Jon + -( -protect(Hodor) ) + 38
} else {
	-1;
	x += -mislead(bar(),bar(( Jon ),790.93))
}
}
}
};
	-0.89 * Stark / -30
} else {
	Arya /= Stark / destroy(89,protect(1),rule(bar(COLS,Hodor,( betray(Jon,y / --protect(----1)) )) - -Ygritte - -COLS / COLS,-1 / ( betray(COLS,( TABLE[( -1 - --( -bar() + foo() ) * -0.55 )][COLS] )) ),dog));
	if(TABLE[betray(COLS,protect()) + -mislead(COLS / Ygritte / ROWS + 1 - -ROWS / ( ROWS ) + rule(--85 / foo(-protect(ROWS * y))) + 1 + foo(( rule(-Sansa) )),protect(( -31 ) * ( betray(( Hodor ) + Arya + 30.79,-protect(TABLE[rule()][ROWS],rule(Hodor) - ( ( -940.3 ) ))) )),TABLE[-betray(890.3084,-COLS - Arya,protect(foo(y,-1)))][0.92])][( 79 )]){
	if(mislead(( -0.7 ))){
	if(-( ( 84 - --0.4 ) )){
	if(ROWS){
	if(( Stark )){
	if(-COLS){
	x /= 0.17
};
	if(mislead()){

};
	-( --520.809 )
};
	if(( x )){
	if(( COLS )){
	Hodor -= -0.64;
	( TABLE[( Arya )][rule(dog,foo(( Hodor )) * 28 * ( --TABLE[foo(Ygritte,( ( 660.81 ) ) / ( ROWS ),TABLE[--0.44][( -betray(( Jon ),rule(( betray(( ( -45 ) ) - ----Arya + dog * -COLS,( -( Hodor / Stark ) / ( TABLE[x][COLS - COLS] ) + y )) ),( x ))) ) + 270.834])][foo()] ) * ( Jon ) * -36 + Jon - --0.41 + -destroy(foo(),--x * -56 / rule(bar(( COLS ) / -Jon)),-( -( foo(COLS) ) / --83 )) + Sansa * -27,foo())] * protect(-TABLE[COLS][1]) )
};
	Stark -= bar(dog,--61,dog);
	if(( betray() )){
	if(( Jon * -1 ) + ( Ygritte ) - -28){
	x /= COLS / ( 0.66 - --dog * -81 )
} else {
	-foo(-ROWS,-950.19 * betray() / 88,betray(--61,protect(( -( ( bar(-TABLE[-0.13 * -x][foo(ROWS,-x)],( Arya ) - -360.78) ) ) ),-( ROWS ) + ( TABLE[-foo(( x ),Ygritte) - x - -2][ROWS] * ( protect(rule(Arya,( 20 * foo(( ( 650.261 ) )) ))) ) + bar(foo(destroy(rule(93,-TABLE[-29][TABLE[bar(-Jon / ( TABLE[-TABLE[destroy(-0.45)][COLS * Ygritte] + destroy() - bar(( COLS )) - 19][bar(-COLS * ( --y * ( ROWS ) ) / -77,--bar(protect(Hodor,640.47 / rule(x - betray(Sansa * TABLE[-( protect(x,Arya,0.77) )][( rule() )],-Ygritte),COLS * ( y ))),( ---( -0.82 ) ),0.86) / ROWS,Sansa)] * dog ) + Sansa,( 90 - -440.225 ))][foo(-protect(TABLE[dog + Hodor][betray(-6 + COLS - ( destroy(COLS,bar()) ))]),rule(13,TABLE[TABLE[-ROWS][-1 + ROWS]][protect(COLS) - mislead(betray(-0.03),TABLE[Ygritte][betray(x - x)],TABLE[protect() + ( ( COLS ) )][TABLE[COLS][COLS]])],( Arya )))]],-x / -0.43),( y )),Jon - protect(-Sansa)),x,ROWS) ) * Ygritte - bar(1 - --TABLE[bar(-( Sansa ),Ygritte)][ROWS] * -0.3 / 0.7 / dog / -COLS,rule(),0.15) + ( -0.86 ))));
	( betray() + TABLE[foo(-( COLS ))][ROWS / Sansa] * -betray(foo(COLS,COLS),Sansa) ) * -Stark + 930.3
}
}
} else {
	if(-Ygritte){
	x -= ( -TABLE[( ROWS )][--bar()] / rule(Stark) + bar(protect(0.89,( -dog ))) );
	-protect(--60.52,TABLE[( TABLE[-( TABLE[33][300.833] )][-1] )][-mislead(-Sansa,-15)]) * ( ( TABLE[( TABLE[-ROWS][0.33] )][mislead(destroy(Sansa)) + -0.04] ) ) * -1
} else {
	y -= 1
};
	ROWS
}
} else {
	if(ROWS){
	if(( ( ROWS ) )){
	if(1){
	if(( ROWS )){
	if(dog){
	Ygritte /= -x
} else {

};
	if(-Jon){
	if(-0.81){
	if(-0.3){
	if(x){

};
	Hodor += foo(---ROWS,Arya)
} else {
	Sansa *= mislead(Ygritte)
}
}
}
};
	Sansa += -61;
	Stark += ( ( dog ) + ROWS )
}
} else {

}
} else {
	if(Sansa + ROWS){
	Hodor *= -TABLE[( -ROWS ) + ROWS][protect(Ygritte) / y];
	bar(( --TABLE[rule(( COLS ),protect(-61,rule() * 0.7,-14) - TABLE[foo(y)][-59 * dog + ( COLS )],bar(Stark) + ROWS)][-1] ));
	Arya += Jon - Sansa
}
}
};
	if(destroy(ROWS + Stark)){

} else {
	x /= ( -36 );
	y += Jon;
	bar()
};
	dog += -90
} else {
	dog /= 0.1;
	if(COLS / -13 / -1 - ROWS / -1){
	destroy();
	-69
}
};
	y *= betray(TABLE[ROWS][protect()],Hodor)
};
	-Stark
};
	x *= ( ( 1 ) )
}
}
assert 1 : "Fear cuts deeper than swords."
def TABLE[-rule(( ( 0.41 ) / 41 ))][i] {
	Sansa -= -TABLE[ROWS / -Jon][-71];
	if(mislead(y,Jon)){
	if(Jon){
	Ygritte -= destroy(-y / protect(bar(--1)));
	if(betray(rule(-ROWS,x),-21,-( ( ( -betray() ) * foo(betray(y,-88 - rule()),50) * ROWS ) ) * -foo(Stark) / -56)){
	if(-1){
	x *= -ROWS;
	COLS;
	Jon -= ROWS
};
	if(Hodor){
	( -( COLS ) + -TABLE[-( Sansa ) - -TABLE[-Sansa][-0.79 - x / --Jon / -0.01] - COLS][TABLE[foo(-0.56,foo(Sansa)) * protect(( TABLE[bar()][ROWS] ),( Sansa ),foo(Stark,protect())) + -0.53][--( 930.457 )]] )
}
} else {
	Hodor *= -70 + ( bar(-1 * ( Sansa ) + ( ( Ygritte ) ),Stark) );
	dog -= dog
}
}
}
}
def TABLE[( -( COLS ) )][k] {
	y -= TABLE[-37][--790.29 / COLS];
	---1 + bar(TABLE[10][destroy(ROWS,dog + COLS)],-rule(Sansa + TABLE[TABLE[mislead()][ROWS]][-Ygritte - ( mislead(TABLE[-ROWS][73]) * 1 )] + Jon,Hodor))
}
var Arya = ROWS + x
def TABLE[( 0.06 )][k] {
	y;
	Ygritte += -0.12
}
assert mislead(TABLE[-Sansa][rule(-1 + protect(COLS,-0.87),0.68,TABLE[( 0.41 )][( Ygritte )] + ROWS * Sansa - TABLE[destroy()][-16]) / TABLE[y][-mislead(-( Ygritte ) * Stark,-COLS)]],-mislead()) : "Winter is coming"
var y = -dog / -22 / COLS * ( 1 )
def betray(Sansa,Ygritte){
	if(ROWS){
	if(y){

} else {
	x /= -protect()
}
} else {
	Stark += x;
	if(Sansa){
	TABLE[-97][1];
	if(protect(30.78,( --1 ))){
	foo(340.162,dog)
} else {
	Arya * protect(Hodor / -( TABLE[bar(-82 * -TABLE[Arya][-34])][Sansa] ))
}
} else {

}
}
}
def TABLE[x - ROWS][i] {
	if(( ( -ROWS + rule(COLS,foo(10)) - -180.26 * ROWS * 1 ) )){
	Sansa -= ROWS
}
}
def TABLE[TABLE[rule(-640.195,-38,--foo(( TABLE[--protect(830.1197,37 * 840 - TABLE[COLS][--protect(460.4045,( -mislead(rule(TABLE[Stark][-Sansa] + ( COLS - 0.58 ),COLS),0.51) )) * COLS] - --0.13 / --( ROWS ) * ( 1 ) - ( ROWS ),-TABLE[COLS][protect(-( 0.5 ))])][ROWS] + -Stark / -370.6 * Ygritte - dog ) * ( 0.66 ) * -ROWS - COLS,Arya))][betray(mislead(0.61,( ROWS ),( Stark )),-Hodor,COLS)]][j] {
	if(x - --ROWS){

}
}
assert ( Ygritte ) - foo(Stark) * ( 10 ) : "Nothing burns like the cold."
def TABLE[TABLE[1][protect(betray(destroy(55),betray(foo(Ygritte,rule(ROWS - Stark * Jon)),COLS)) / ( y ) * -betray(-8) * y - foo(),-COLS - foo(31,dog,bar(-0.08)))]][k] {
	x
}
def TABLE[1 + -TABLE[-950.6831][mislead(COLS)]][j] {
	Hodor -= -0.05;
	if(mislead()){
	x /= x
} else {
	x += ( ROWS )
}
}
assert TABLE[-Ygritte][( 0.16 / Arya - --y + ROWS )] : "Fear cuts deeper than swords."
def bar(){
	Hodor *= betray(ROWS - protect(-protect(1,x) * COLS,ROWS) - Sansa - -400.154);
	Jon += -mislead(( TABLE[( ( ( x / -0.33 ) ) )][protect(---ROWS * 720.2 + ( -Arya - ROWS ) - ( 250.738 ))] ),rule(bar(( TABLE[-TABLE[0.09 / mislead(( ( ( mislead(--0.52) ) ) + COLS ),Arya / 0.89)][-1] / ( ROWS )][mislead(-dog,COLS,TABLE[Arya - COLS][COLS])] )),13))
}
var x = 79
def TABLE[1][k] {

}
def bar(Hodor){
	Jon *= -1;
	Sansa;
	dog
}
var dog = --Arya + Arya
def mislead(Sansa){
	Sansa -= Ygritte;
	( 9 )
}
def TABLE[Ygritte + -bar()][k] {
	Jon += ROWS
}
assert betray(-140.731,( foo(( ( 0.88 ) + TABLE[TABLE[x][-0.52]][rule(-( dog * -COLS ))] )) * bar(y,-0.89,ROWS) * ( ( -( foo(Sansa,( TABLE[0.79 / 24][bar(( -0.72 ),-COLS,Arya)] )) * foo() ) ) ) * mislead(( ( -TABLE[-53 - ( Stark )][-13] + Jon ) ),TABLE[( COLS / bar(protect(-10.67 - Arya + rule(-Arya * -0.57),-1),foo(ROWS,Stark)) )][9]) )) : "Winter is coming"
def TABLE[Ygritte][k] {
	y += -Arya + y;
	COLS
}
assert -Jon : "One can not simply parse himself"
var Sansa = Jon
assert 0.23 / Jon : "Nothing burns like the cold."
var y = ROWS
def TABLE[Sansa][i] {
	if(ROWS){

}
}
def rule(Jon){
	Stark
}
def TABLE[( -y )][i] {
	foo(-0.56) + Arya
}
def foo(x){
	dog -= -foo()
}
def destroy(x,Sansa){

}
def rule(Arya,x){
	-( COLS / -TABLE[-58][-COLS] );
	-COLS + -Jon * Arya;
	--39
}
var Sansa = COLS
def bar(Jon,Arya){

}
var x = -0.29
assert Stark : "Nothing burns like the cold."
var Stark = 1
var y = -0.87 * ( ( 54 ) )
assert TABLE[220.71][-ROWS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( --0.98 )][k] {
	y / betray(TABLE[Sansa][x],COLS)
}
def TABLE[Jon][j] {
	x += TABLE[--0.35 + TABLE[destroy(-1 * Arya)][COLS] * TABLE[Hodor][betray(TABLE[-TABLE[( rule() )][-( Jon )] / ( Jon ) / Arya][Sansa],-( COLS ))]][-( 990.02 )];
	y /= destroy(Ygritte) * -Hodor
}
def TABLE[Ygritte][j] {

}
def TABLE[-980.5201][i] {

}
def TABLE[-( ( dog ) )][j] {
	x + -0.81;
	-0.37
}
def TABLE[Ygritte][j] {
	y /= ( COLS ) + ROWS
}
def protect(x,y){
	y /= mislead()
}
def destroy(Stark){
	Sansa += protect(( -1 ),COLS,Ygritte)
}
assert -0.37 * -mislead(( -1 ),-ROWS) - -TABLE[ROWS][92] : "Fear cuts deeper than swords."
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Hodor){

}
def betray(x,Hodor){
	rule(-1 + ( 0.25 - -36 ) - ( -( -protect(0.42,ROWS,dog) ) / y - Ygritte ))
}
def betray(dog,Hodor){

}
def TABLE[Jon][i] {

}
def TABLE[15][k] {
	if(-Ygritte / protect()){

};
	Arya *= mislead(0.05) + protect(( -19 ),Stark)
}
def TABLE[( -protect(-0.01,-67) )][k] {

}
def foo(){
	if(protect() / ROWS){
	TABLE[62][Ygritte]
}
}
assert -48 : "Winter is coming"
def TABLE[Arya][k] {
	Ygritte /= TABLE[bar(Sansa,ROWS)][( x )];
	Sansa + --99
}
def TABLE[bar()][j] {
	Ygritte -= -y;
	if(-1){
	if(( ( ROWS ) ) - foo()){
	Sansa *= -( -( -TABLE[-0.53][-Arya + Stark + TABLE[Sansa][TABLE[1][ROWS]]] ) + ( ( -0.43 - -63 * bar(( COLS * Arya ),( ( -32 ) ),0.62) ) ) );
	Ygritte /= ( --0.52 )
};
	if(-ROWS){
	COLS
}
} else {
	if(--84){
	COLS;
	Ygritte *= -52;
	protect(TABLE[foo(destroy(-0.44,destroy(-COLS,-Stark / betray(destroy(( ( -bar() - dog ) ) * 160.669,( ( -0.3 ) ))))),-0.09)][COLS]) * dog
}
}
}
def bar(dog,Hodor,dog){

}
var Jon = Jon
def TABLE[( -( ROWS ) )][i] {
	if(rule()){
	-1
}
}
var Ygritte = -880.282 + ROWS + ( foo(y) ) - betray()
def foo(y,Sansa,x){
	if(-52){
	y += y;
	Stark
};
	if(( 0.84 )){
	Jon += destroy()
}
}
var Stark = COLS
def TABLE[COLS][k] {
	Ygritte *= ( TABLE[Sansa][-99] )
}
assert ( x ) / -0.95 * TABLE[( COLS )][Arya * --betray(820.89,--0.81 / destroy())] * ( TABLE[COLS][COLS] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Winter is coming"
var Ygritte = ( -1 )
assert ( ( COLS ) ) : "One can not simply parse himself"
var dog = -41
assert Arya : "Winter is coming"
assert COLS : "Nothing burns like the cold."
def TABLE[-Jon][i] {
	Sansa *= ( TABLE[ROWS][ROWS] * y );
	TABLE[( TABLE[1 / -( TABLE[ROWS][( -destroy(bar(protect(( 22 ),rule(TABLE[1 * -y][Stark],-55,y) * ( -foo(-Stark * ( -1 ) * COLS,COLS - -TABLE[Hodor][( ---( bar() + Jon + --( y ) - Sansa ) * foo(betray(),Stark + TABLE[dog][( --0.43 )]) - TABLE[mislead(Stark,0.14) + -ROWS][Stark] )]) + -destroy(ROWS,ROWS) ),-TABLE[betray(( dog ))][( ( ( foo(36 + 0.06 - -mislead(protect(),( --bar() )) * -78 - 0.66,Jon) ) ) )]),( x )),( -660.25 ),0.66) )] ) + foo(( protect(( ( ( ROWS ) ) ) * --Sansa,0.51,bar(( ( ( -Arya ) ) ),COLS)) ),foo(-Sansa)) - TABLE[TABLE[x][0.8]][0.19] * ( -Jon )][COLS * y] )][ROWS]
}
var Ygritte = Arya * 88 * ( dog - ROWS )
assert bar(-0.77,( 0.45 ),COLS * rule(COLS) / -0.75) : "What do we say to the Lord of Death?"
var x = ( Arya )
assert 93 : "One can not simply parse himself"
var Arya = destroy(( ( y ) ))
def mislead(Stark,Sansa){
	if(TABLE[-ROWS][destroy(-0.5)]){
	Jon *= -1
} else {
	y -= rule(y);
	if(810.4){
	if(COLS + ( foo(destroy(Arya),Hodor) ) / ( ---Sansa )){
	dog += Stark
}
};
	( TABLE[betray() / Jon][( ROWS ) * --TABLE[( Ygritte )][-0.41] + ROWS + 1 - dog] )
}
}
def protect(){
	if(mislead(ROWS,( TABLE[-0.63][mislead()] ))){

}
}
var dog = COLS
var Ygritte = -17
def TABLE[( ( TABLE[rule(( Sansa ),x)][( ----0.11 ) - dog + -rule(ROWS,-( COLS ))] ) )][j] {
	Stark += COLS;
	--0.09
}
def foo(Sansa,dog){
	x += Arya
}
var y = mislead(( ---TABLE[( 57 )][TABLE[( -410.2417 )][-betray()] / ( bar(-( mislead(-0.65,1) ) * mislead(-340.9471)) ) * COLS] ))
def bar(Arya,Stark,dog){
	Jon /= ( x * -Arya + y );
	-ROWS / ( ROWS ) * -COLS
}
def TABLE[-0.99][i] {
	Ygritte /= x;
	Jon += dog
}
def rule(Stark){
	Hodor += -1 / TABLE[---1][Sansa]
}
def betray(Ygritte,Jon,dog){
	Arya -= ( Stark )
}
def foo(y){
	Ygritte -= ( -( betray(-COLS,bar() - Ygritte - -0.19) ) + ROWS );
	Jon -= ROWS
}
def destroy(Jon,Hodor){
	if(COLS){
	Sansa *= protect(330.993,( Stark ));
	foo(( --0.79 - Sansa / ( -27 ) - ( -TABLE[betray(destroy(),Stark)][Hodor] ) ),-( rule() ),Stark + --Stark - Ygritte) - betray(TABLE[TABLE[protect(COLS,-( ( ( ( Hodor ) ) ) ),-0.04)][mislead()]][Jon - -( -dog )],-1 - Hodor + 0.74,Arya);
	if(0.21){
	dog *= 75;
	TABLE[1][TABLE[Ygritte][Arya - 38]]
}
} else {
	Jon *= -0.9;
	if(-TABLE[-1][( TABLE[( TABLE[-TABLE[( destroy(Jon) )][--y]][protect(( 230.39 ),TABLE[COLS + -780.093][COLS],-bar(TABLE[( protect(betray(( -ROWS ),betray(-protect())),protect(dog,( ROWS ))) )][90] + destroy(--0.02),-destroy(protect(-45,270.4,TABLE[-( -ROWS )][TABLE[-Stark][TABLE[ROWS][--84 - y] + destroy(( Sansa ))]] * 1 - ROWS),rule(-0.97) / -( x )),-410.4313))] ) * -( mislead(0.92 * ROWS,( -( TABLE[-Stark][-0.65] ) ),destroy(-1,COLS)) )][-( y ) - Hodor - COLS + bar(ROWS,-0.27) + mislead(9) + 8] * -destroy(-120.7) )] + -0.36 + -Ygritte){
	-0.61
};
	x -= protect(y)
};
	if(( COLS )){
	if(-COLS){
	Stark /= COLS;
	if(-0.57 * Arya){
	Arya /= ( TABLE[TABLE[ROWS][foo(Sansa,bar(--bar(protect(-COLS,-66,Stark - Sansa),--480.52)))] / protect()][-Sansa] );
	-22
}
} else {
	if(-1){
	x += COLS
}
}
} else {
	-Sansa;
	if(-COLS){
	destroy(( COLS ))
}
}
}
def rule(dog,Arya,Sansa){

}
var y = -0.96 - protect()
assert ( ( ROWS ) ) : "Fear cuts deeper than swords."
def TABLE[ROWS][j] {

}
var Arya = -88
assert betray(foo(foo(),COLS),-35,( 0.66 + ( bar(betray(bar(-ROWS,--( --TABLE[( rule(ROWS,COLS * -25) ) - COLS][destroy(ROWS,y) + 45 * ( Hodor )] - protect(Arya) ) - Jon / 0.8,( 98 / TABLE[rule(( Stark ) + -bar(foo(-0.3,-85),1),-7,TABLE[-COLS][0.16]) + --TABLE[ROWS][Arya] - ( protect() ) - 15 * foo(COLS,( foo(-0.48) )) + TABLE[bar(( destroy(( TABLE[-x][COLS] ) - ROWS,Stark) ),ROWS)][( destroy(1,0.27 / destroy(( -Stark ) / ( foo(( ( -( ( 44 ) ) ) + ROWS ),-80.035,Sansa) ) * -COLS,COLS)) )]][ROWS] )))) ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -( 630.191 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(640.61,-65 + -96)][k] {

}
def TABLE[Sansa][k] {
	48 - x * 20.34 / ROWS;
	Jon /= 0.26
}
var Sansa = 1
var Ygritte = Ygritte - -bar(( --1 ))
def TABLE[-mislead() * COLS][i] {
	Sansa += ( -17 );
	if(740.336 + Stark){
	COLS
}
}
var dog = -1
var Stark = ROWS
var Arya = bar(490.4 * Sansa,foo())
def TABLE[21][j] {
	x /= -COLS;
	x *= ( destroy(Sansa,COLS) )
}
def betray(y){
	x -= -( dog ) + Arya - ROWS;
	if(mislead() / dog){
	Jon += destroy(Stark,mislead(--destroy(),-31 / Stark * -TABLE[-( Arya )][rule(-Stark)] / -310.4424,8))
} else {
	y /= 50;
	foo(bar(betray(-1,ROWS,-1),-( Ygritte )),( ( mislead(ROWS) ) ),( -foo() ))
};
	if(TABLE[-0.05][0.49]){
	-0.94 - ( protect(Arya) );
	240.493
} else {
	dog -= ( ( ROWS ) );
	Stark -= TABLE[Jon][-4] / -0.31
}
}
var Hodor = 83
assert 0 : "Fear cuts deeper than swords."
def TABLE[y][k] {
	if(( protect(ROWS,-ROWS) )){
	x *= Arya;
	-92
}
}
var Sansa = bar(-0.85,ROWS,-bar(( protect(-betray(ROWS,dog - -33)) )) - 22)
var Stark = 0.71
assert TABLE[750.27][( ( Stark ) )] : "Nothing burns like the cold."
def TABLE[dog / -69][k] {
	foo()
}
assert ROWS : "What do we say to the Lord of Death?"
def protect(Hodor,Jon){
	if(protect(-0.27,ROWS,-0.52)){
	Hodor /= rule(ROWS,Ygritte)
} else {
	y -= ( --( foo(( ----Arya + betray(protect(bar(rule(),Ygritte,x))) ),protect(( -0.38 ))) ) );
	if(foo(betray(--( -ROWS )),-0.8)){
	mislead(mislead(foo(-0.52)));
	Ygritte /= -rule(ROWS,bar(-( -0.75 ) - -78));
	Jon -= -Ygritte
};
	-67
}
}
def TABLE[y][k] {
	foo(destroy(( ROWS )) * protect(( ROWS ) / 0.16,Hodor));
	-0.68
}
def TABLE[-bar(-protect(COLS,350.507),TABLE[dog][-0.87])][k] {
	( Sansa );
	if(TABLE[COLS][TABLE[Hodor][ROWS]]){
	if(-TABLE[destroy(destroy(dog / -bar(ROWS,TABLE[mislead(betray(-58,bar(TABLE[-protect(ROWS,-62)][ROWS],Ygritte) * foo(destroy(--180.38 / TABLE[COLS][( -TABLE[protect(-rule(-Hodor) / ( ( ( Arya + ( Hodor ) ) ) ),COLS) * ( ( ROWS ) ) / 0.21][TABLE[( -0.06 )][-bar(-39,foo(-2 / x / -Arya,( -820.771 )))] / ( ROWS * 0.51 ) + betray(( COLS ))] )],( -betray(-foo(Jon,( ( ( Ygritte ) ) ))) ))),( ( --0.08 ) )))][-0.29]),dog),-Arya)][-x]){
	( Stark )
} else {
	Sansa /= Arya + ( -0.05 )
};
	1
}
}
def TABLE[rule()][i] {
	if(destroy(92,( 680.9573 ))){
	1
} else {
	Sansa -= ( --Jon )
};
	Jon += Stark
}
def foo(Jon){
	Arya -= bar(protect(( mislead(Jon,--foo(-protect(destroy(( ( ( COLS ) ) ),11),( -0.07 )),-TABLE[Arya][100.784],Stark),TABLE[( COLS )][y]) )))
}
def protect(Sansa,x){
	Sansa;
	if(protect(18,ROWS)){
	0.04;
	ROWS
} else {
	if(COLS){
	dog
};
	bar(destroy(bar(rule(Stark),Jon),--0.31 + dog) * -73,bar(protect(betray(COLS,y) / ( ( -31 ) ),( mislead(( mislead(rule(COLS),--130.6146,ROWS * destroy()) )) ))));
	Jon += ---Sansa * COLS
}
}
def TABLE[( x )][j] {
	y -= -( ROWS );
	Arya += dog
}
var Stark = COLS
var Jon = Hodor
def TABLE[mislead()][k] {
	Ygritte
}
assert betray(( rule(betray(COLS)) ),( -0.2 ),( x )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = --( 0.71 ) + TABLE[6][y] * -140.16
var x = ( -13 )
def betray(Hodor,Jon){
	Hodor -= COLS
}
def rule(Hodor){

}
var x = ROWS
assert -betray(-foo(ROWS) * TABLE[ROWS][-420.02]) + -( Sansa ) : "What do we say to the Lord of Death?"
def TABLE[( Jon )][j] {
	dog += destroy(TABLE[-0.97][( rule(dog,COLS) )],COLS,( betray(Jon,-( ROWS )) ));
	x
}
var Ygritte = -1
def TABLE[-x - TABLE[protect(--mislead(Jon,97),bar(COLS * ( -0.14 )),( ( y / -( protect(TABLE[betray(ROWS)][Stark] * Stark,dog) ) ) ))][-bar(-( 3 ),COLS)]][k] {
	x += -0.86 - -TABLE[bar(dog)][rule(TABLE[protect(protect(-( -0.94 ),-950.1))][-( -COLS )])];
	Hodor -= ( Arya )
}
def betray(Ygritte){

}
assert ( COLS ) : "One can not simply parse himself"
var Hodor = ( COLS )
var Ygritte = -0.22
assert -940.611 : "Fear cuts deeper than swords."
def destroy(){
	Hodor -= -0.76 * -Hodor;
	x *= 59 / Arya;
	Arya *= Arya
}
def TABLE[-TABLE[-dog][destroy(Sansa,Ygritte,x)] - y - ( Hodor + 80 ) + -420.1][k] {
	Sansa += Stark;
	y *= -0.17
}
var Sansa = destroy(-TABLE[ROWS][ROWS] - bar(0.63,rule(),Stark) + -( dog ) + foo(betray(dog) + COLS / -dog) - -0.61 / betray(foo(---50)),dog + --Jon)
def TABLE[COLS][k] {

}
var Jon = 0.41
var x = -ROWS - -ROWS / 200.18
def bar(){
	if(TABLE[-TABLE[-ROWS][-y]][18]){
	if(Arya){
	dog -= dog
};
	( destroy() );
	Jon *= -destroy(-protect(),COLS)
};
	COLS;
	if(COLS){
	y -= x - -Sansa / COLS * destroy(0.13,Hodor)
} else {
	mislead(( -( ROWS ) / -1 / -0.86 ),-74) / ( ( Sansa ) - -0.96 + ( Sansa ) - ( -( mislead(TABLE[--Arya][ROWS],bar(TABLE[COLS][( mislead(-69,-TABLE[x][( foo(ROWS,-0.66) / -42 )] + -( TABLE[-ROWS / dog][( COLS )] )) )],Jon) - ( --520.8849 ) + TABLE[Sansa][ROWS] * Arya + -protect(ROWS,-7) * bar()) ) - TABLE[dog][0.79] - 0.35 + dog * -Arya / ( Hodor / -rule(( -1 + Ygritte )) ) * -34 + dog ) + ( x ) )
}
}
def rule(Sansa,Hodor){
	if(foo(TABLE[---0.11][90])){
	y += 940.225
} else {
	if(( mislead(x,TABLE[bar(Hodor + 0.06) * -10.31][Stark]) )){
	if(-TABLE[( ( COLS ) )][COLS] * 0.26){
	if(-Arya){
	61 / -protect(foo(destroy(-1)) - -Ygritte)
} else {
	x
}
} else {
	if(-( ( --ROWS - 90 ) )){
	if(-destroy(Jon + Jon,-0.89)){
	Sansa += ( protect(-53,rule(-destroy(mislead(TABLE[Arya][mislead(-97 / foo(( -ROWS ),Stark) - Ygritte + -15,ROWS)]) - ( Hodor )),Ygritte),Arya - -Jon) )
} else {
	if(-1){
	( Arya )
} else {
	Jon *= rule(( Ygritte ) * rule(Arya,mislead(-0.08)),-0.54 + ( ( COLS ) )) * rule();
	if(TABLE[rule(( destroy(foo(( foo(mislead(-x,( protect(220.717 / --foo(0.66,---TABLE[-foo(Arya - mislead(( Sansa ) * y,--( ( -Jon ) ),( Arya )),ROWS)][-( -protect(Ygritte,COLS) + -1 )] + -Stark + TABLE[1][Sansa] + ( -1 ))) ),rule(COLS,foo(y,mislead(54)))) / 1,-( ( mislead(dog) ) )) ),-0.33),Hodor * ( -1 )) ))][Stark]){
	Stark / ( TABLE[dog][foo(( ROWS ),COLS)] );
	if(-Ygritte){
	Jon += betray()
} else {
	x
};
	if(Sansa){

}
};
	mislead()
};
	870.2
}
};
	Arya /= ROWS
}
};
	if(Sansa){
	if(Sansa){
	if(-TABLE[-97][TABLE[( Stark )][rule(( --TABLE[Ygritte][foo(ROWS,bar(Sansa),-82 - ( -dog ))] ) / Jon,TABLE[( 1 / -protect() )][Sansa],( ( -1 + ( protect() ) + ( ROWS ) ) ))]] * ( TABLE[-Arya][-1] - y / -0.27 * foo(( ( ROWS ) + Hodor )) / ( -y ) )){
	if(mislead()){
	Sansa += ROWS;
	rule(92)
};
	x /= ROWS
}
} else {
	if(destroy()){
	if(-( rule(TABLE[( destroy(-TABLE[destroy(COLS + betray())][-TABLE[-TABLE[( Ygritte )][66]][-310.449 + betray(COLS) / --y / Stark / Stark]] - y,( bar(-( 0.89 + -48 )) ),y * ROWS) )][-destroy() - TABLE[TABLE[protect() - Arya][-ROWS - COLS] - ( -foo(x / mislead(ROWS + 1,690.2),mislead(( protect(( -Hodor ),betray(mislead(mislead(rule(ROWS,-( TABLE[( -Ygritte )][Ygritte] ) + rule(1) / TABLE[Stark][-22 / betray()]),mislead(betray(),80))),foo(-32,Arya)),-0.65) ),-dog) - Jon - -Hodor - rule(-protect(-63 / Ygritte,COLS),Sansa - betray(( ---( COLS ) ) - TABLE[Hodor][( -0.9 )]))) / -47 )][-11]],foo(-Stark)) ) + COLS){
	if(Hodor){
	y *= betray(( -3 * bar() ),Hodor)
}
} else {
	COLS
}
} else {
	if(( destroy(y,-( ( -Sansa ) )) )){
	dog *= COLS
}
}
};
	if(Jon){
	Jon += ( ( Sansa ) );
	if(-( ROWS )){
	( -790.9 )
} else {
	if(Sansa){
	Ygritte *= Ygritte;
	ROWS - foo(( COLS ),( -0.23 ))
} else {
	y += ( -0.99 );
	if(Sansa){

}
}
};
	-Jon
}
} else {
	if(-610){
	x /= ---0.66 / dog / -( Stark ) / -mislead(( COLS ),( Stark ),--COLS - ( TABLE[-36 / protect(ROWS,-Stark)][Ygritte] )) * -77;
	if(ROWS){
	TABLE[92][460.8] * ROWS + foo(-0.32,--97);
	-ROWS
}
};
	y /= ( 0.68 )
}
};
	Stark
}
def protect(Hodor){
	Sansa;
	if(Ygritte - ( mislead(destroy(mislead(-Sansa + Sansa)),-51) )){
	if(-COLS * ROWS){

} else {
	if(( bar(-COLS,foo(( COLS ))) )){

} else {
	foo(( -( COLS ) ),( 0.98 ));
	-( rule(( Arya )) )
};
	Ygritte *= rule(0.12) + -150.3494;
	if(Arya){
	-destroy(( ---Stark / -0.5 ),-50.2,ROWS);
	if(COLS){
	0.21;
	-69
} else {
	if(dog){

};
	Ygritte -= COLS;
	-45
}
}
}
}
}
assert -Sansa : "Fear cuts deeper than swords."
def TABLE[bar(protect(( foo(2,COLS) ),-( COLS )))][i] {
	-Jon;
	if(rule(-TABLE[TABLE[( mislead(foo(Stark,-0.22 - -destroy(foo(mislead(dog))),---77 - rule(Hodor,( -39 )) / dog)) )][ROWS]][-4] + ( y ))){
	if(Stark){
	Arya += bar(-0.48,Sansa + ROWS);
	0.23
} else {
	Hodor /= ( TABLE[mislead(-destroy(-0.57) / -0.21,protect(-TABLE[----mislead(foo(-99),betray(x,310.6896)) / -Jon - ( COLS + betray(COLS,-1) * ROWS )][Arya],Arya,-mislead(foo(570.19,---0.55,--39),690.6)))][-destroy(( ( --Stark ) ))] - ( Ygritte ) ) / bar(destroy(destroy(Jon)),destroy())
};
	Jon /= -TABLE[Jon + bar(--ROWS,foo(( betray(COLS) ) / bar(1,COLS) + Ygritte,-( ROWS ),bar() - rule(-x))) - -( TABLE[COLS][( TABLE[-( Arya ) * TABLE[( ( protect(TABLE[40.48][-COLS * Jon * -TABLE[-92][COLS]]) ) )][( ( 220.963 ) )]][-( Sansa ) - dog] )] )][0.29]
}
}
var Sansa = -1
def TABLE[Hodor][j] {
	Stark /= TABLE[-0.95][( 671 )]
}
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(y,Ygritte){
	Stark
}
def TABLE[( ROWS )][j] {
	if(-Hodor){
	Ygritte /= x
} else {
	y /= -rule(COLS,betray() - bar(( 1 )) + ( -mislead(( Sansa )) + ( bar(protect(bar(( rule(dog,( ROWS ) * -( ( rule() + betray(Sansa,ROWS * ( Ygritte )) * ROWS ) )) * ( ROWS ) - -dog ) - ROWS - Jon + --0 - -3 + -1) - ( -COLS + -Sansa )),mislead(TABLE[99][( ROWS )],-mislead(rule(Hodor,-0.95) + ( 69 )),y)) ) - betray(( COLS )) * Jon * -COLS - COLS ),( x ))
};
	Ygritte;
	if(( -TABLE[dog - COLS][-y] )){
	COLS;
	1
} else {
	-protect(Jon,( x + Jon / ( -28 - -650.0052 ) ));
	if(dog){
	y /= x;
	dog /= Sansa;
	if(( rule(( TABLE[-16][destroy(-1,( x ))] - y ),( -( rule(ROWS,mislead(rule(-0.91,dog),x * Arya - ( rule(Stark) )),-15 - ( Stark )) ) )) )){
	TABLE[-46][x];
	Sansa *= ROWS;
	TABLE[TABLE[---foo()][ROWS]][39]
}
}
}
}
def TABLE[( rule(-x) )][i] {
	( -mislead() / Ygritte );
	Hodor - -440.5
}
var Jon = ( -( Sansa ) ) - ( -0.92 + ( ROWS ) / Stark )
assert -0.45 : "Nothing burns like the cold."
assert Arya : "Fear cuts deeper than swords."
def TABLE[-betray(COLS)][k] {

}
def TABLE[protect(bar(Jon,-0.69),-74 + TABLE[Sansa][destroy(( ( ( --( -0.69 ) ) ) ),-1) + Sansa * --( ROWS )] + bar(TABLE[-foo(---TABLE[COLS][foo(y,destroy())])][ROWS + rule()]),-77 / -31)][i] {
	Hodor -= 74;
	y += ---84
}
var y = Sansa
var y = ( --dog + Jon )
var Hodor = ROWS
assert -protect(betray(( Sansa ),betray()),Ygritte) - -1 * rule() + 29 + ( --0.16 ) - ROWS : "Fear cuts deeper than swords."
def foo(Stark,Jon){
	TABLE[Hodor][85];
	destroy(Sansa,protect(( mislead() + destroy(foo(betray(-betray() * -( protect() )),0.8 - -0.68,-Stark / foo(COLS,Sansa,Hodor))) ),mislead(( Arya )) + protect(destroy(( COLS )),( protect(( ( -Jon + 10 ) * -( ( destroy(660.4866,x) ) / foo(Arya) ) + Ygritte ),( mislead(-0.33,-52) + Arya ) + mislead(97,( 1 ))) ),TABLE[( -x ) * foo(-63,TABLE[protect(bar(),-0.43,Jon - --0.15 / ( ROWS ))][54]) - ( bar(( Arya * TABLE[ROWS][( mislead(--Jon / --TABLE[x][Ygritte] / -( ( 120.415 ) ),TABLE[Arya][rule(Ygritte,-bar(82,--0.92,-290.1 + ( Stark )) * -11)]) )] )) )][( ( -0.19 ) )])))
}
var y = -TABLE[Jon][protect(( Sansa ),-protect(ROWS,Jon),-( 0.94 * ( ( ( -bar(610.406) ) ) ) / --protect(-50.3 - ( ( --280.92 ) ) * bar(TABLE[-protect(( ( destroy(69) ) ),foo(betray(mislead(destroy(--mislead(( ( TABLE[TABLE[ROWS][ROWS]][dog] ) ),-1,rule(36)),-dog),0.16),Ygritte,-1),ROWS)) + ( ( Arya ) )][ROWS],( ( ( ( destroy(x) / -0.6 ) ) ) )) * COLS,--330.432,730.6232) ))]
assert ROWS : "What do we say to the Lord of Death?"
def rule(){
	Hodor /= --0.64 - --ROWS - ( Ygritte ) - -1 / -ROWS;
	Jon * 56;
	if(-0.74){
	Arya *= -COLS;
	if(( -581 )){
	protect(( -92 ))
}
}
}
def TABLE[97][k] {

}
assert -0.24 : "Nothing burns like the cold."
var Stark = -0.77
def TABLE[-Stark][k] {
	-45;
	if(-rule(( 37 ) / COLS,Ygritte)){
	Stark /= -( mislead(( ROWS ),( ( mislead(destroy(0.66,Hodor),-0.17 + betray(0.82,bar(( ( betray(-( ( COLS ) ),destroy(Ygritte)) ) ),bar(-ROWS))),-660.792 * Sansa) ) )) );
	Hodor -= 0.67;
	( -dog )
}
}
var Stark = TABLE[( --1 ) * mislead(( TABLE[-0.26][-Ygritte * ( COLS )] ))][( ROWS )]
def rule(Jon){
	y -= -betray(mislead(),x);
	Ygritte *= protect(0.54,Hodor + COLS,rule(betray()) + Jon * bar())
}
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){
	y -= 10.427
}
var x = ( Ygritte )
def bar(Ygritte){
	Stark -= ( -destroy() )
}
var Sansa = ( COLS )
var y = ( -( Hodor ) )
def foo(dog){
	if(530.0668){
	-rule(-TABLE[-8][ROWS],betray(-TABLE[rule(COLS,TABLE[-800.9][-0.29])][Stark * -16 * x / ROWS]));
	if(ROWS){
	if(---rule(-protect(-92 - ( destroy(--COLS) / Arya ),foo(( COLS ),rule(-1) * rule(ROWS,betray()) * -( Jon * -0.43 + ( Jon ) * protect(ROWS) ) - TABLE[bar(-0.65)][bar(-0.27)] + 74,TABLE[ROWS][-13]))) / mislead(destroy(TABLE[( ROWS * --( -0.97 ) )][TABLE[TABLE[( -90 )][ROWS / -0.64]][COLS]],Arya / rule(-1)),19)){
	COLS;
	if(-1){
	Jon -= bar(Jon,( TABLE[bar(( Hodor ),TABLE[-74][rule(TABLE[TABLE[destroy(Hodor)][y] - -60][-1])])][COLS] ));
	if(( -39 )){
	Hodor += betray(TABLE[protect(-dog,y + ( ROWS ))][-Ygritte])
} else {
	if(-Jon * betray(destroy(y,-( -1 )) + ( 1 ) - ( mislead(1) ))){
	Ygritte *= -690.07;
	if(( -( destroy(( ROWS )) ) + TABLE[protect(ROWS)][TABLE[foo(COLS,TABLE[TABLE[TABLE[( --0.66 )][Jon]][betray(ROWS)] + -0.91][COLS])][bar()]] / -rule(Hodor,--1,Arya - Ygritte) )){
	( -( -0.68 ) );
	if(betray()){
	Hodor += 0.67;
	dog -= Arya * Ygritte
} else {
	x -= protect();
	dog *= ( --COLS );
	x /= --33 + Jon
};
	Arya /= foo()
} else {
	Ygritte
}
} else {
	Hodor *= COLS;
	if(Jon){
	TABLE[Hodor - 28][( 13 )]
} else {
	bar(-destroy(---0.76,-Arya),COLS - ( -950.67 ) - y * Stark / ( Stark ))
}
};
	-0.58
};
	Sansa
} else {
	Stark /= ROWS;
	Sansa;
	if(TABLE[destroy(--( foo() / -Arya ) - Hodor)][rule(TABLE[( ( -98 - ( -8 ) ) * -Sansa )][( TABLE[( ( betray(--( 1 ) - -0.29 / Hodor) ) )][ROWS - -81] ) / Arya * -77],-( Stark ) - ( -Arya ),-foo(Sansa,Jon + -( -( -0.57 + bar(10.7) ) ) * dog) + -( rule(ROWS,( 230.8534 )) ))]){
	-530.624
} else {

}
}
} else {
	if(( Ygritte )){
	---x / ( protect(-( ( Stark ) ),Ygritte) )
}
}
}
} else {

};
	x *= -0.13;
	( COLS )
}
def mislead(Stark){
	if(-( ( y ) / mislead(Ygritte,x) + COLS )){
	y -= -0.81
} else {
	if(46){
	( 1 );
	if(( Arya )){
	ROWS
}
} else {
	Hodor /= dog
};
	if(rule()){
	if(TABLE[destroy(COLS * -32)][foo(mislead(-30),1 / ( ROWS ) / -0.89)]){
	x -= COLS
}
} else {
	if(--73 - y){
	y -= 6 * ROWS
} else {
	rule(bar(0.73,foo(bar(-0.21,0.21,( TABLE[TABLE[TABLE[( 0.69 )][( -rule(COLS,-destroy(--ROWS,-( TABLE[( ROWS )][dog] ) + -1,rule(( ( ROWS - ROWS ) ) + -foo(ROWS,-TABLE[Stark][destroy()]),betray(Ygritte,x)))) )]][bar(( Hodor ),ROWS,TABLE[( ( Sansa ) ) - --5][( destroy(betray(-0.43),ROWS + -0.88,dog) + x - COLS )] + Stark)] - Stark][Hodor] )))))
}
}
};
	Arya *= -( -ROWS )
}
def TABLE[x][k] {
	if(( destroy(-26 - destroy(( -( Hodor ) ),0.54) / dog * ( -( foo(( protect() ),dog,Jon) ) / 1 - -ROWS * ROWS ) - COLS,( mislead(y - Arya / betray(COLS) * ( Jon ),rule(rule(-COLS,( ( COLS ) )))) )) * -Sansa )){
	Jon /= Sansa
};
	ROWS * --Jon
}
def TABLE[Arya][k] {
	if(destroy(bar(-0.94,Sansa))){
	if(rule(-( 1 ),--1,-COLS)){
	57;
	if(COLS){
	if(-130.32 / ( ( -y / -0.46 + ( -x ) ) )){
	Jon *= 71
};
	if(TABLE[( y )][-1] + COLS){
	-Stark + protect() * -62 / ( rule(--76,rule(protect(ROWS,dog,betray(--0.94)),( -mislead(Sansa) ),-1 - dog),rule(( --0.57 * Hodor ) / ( mislead(ROWS,( TABLE[y / Jon][( ROWS ) / bar(y,ROWS)] )) ),-( foo(TABLE[dog][Jon]) ))) )
} else {
	if(69){

};
	if(TABLE[-27][0.08 * ( COLS * -COLS )]){
	if(ROWS){
	y -= TABLE[--1][bar(1,-destroy(18,TABLE[( COLS )][-ROWS]) * -( 63 ),( ROWS ))]
}
};
	Stark += mislead(1)
};
	bar()
} else {
	Jon /= -Sansa / ( Stark );
	( -ROWS )
};
	TABLE[Sansa][Ygritte * betray(Arya / ---protect(-TABLE[-bar(-440.151,-Sansa) - Jon][--1] - 1 * betray(-rule(ROWS)),-foo(0.74)) * dog - --protect(500.711),( protect(rule(),-0.64) - --0.63 - destroy(( 900.225 ),foo(( ( x ) ),( ( rule(( protect(( -0.88 ),COLS * 0.14) )) ) ),protect(bar(rule(x)),89,-Hodor)) * 0.27,ROWS) ),( --1 ))]
} else {
	if(x){
	if(Sansa){

} else {
	if(Stark * TABLE[-930.308][-1]){

}
};
	if(Sansa){
	-0.32
};
	if(TABLE[bar(-0.28) * Jon][Stark] + betray(-x,Arya) + protect()){
	if(( betray(Hodor,930.5549,COLS) * 0.93 )){
	COLS - --930.5409;
	dog *= ROWS
} else {
	x -= -( ( 59 ) - Hodor );
	Jon += COLS;
	if(( 1 )){
	if(protect(( Sansa ),ROWS)){
	if(-( 1 / Stark - x / -( ROWS - betray(bar() / ( ( ( ( protect(Stark) ) ) ) ) / -( COLS ) + ( COLS )) ) / COLS )){
	mislead(foo(330.57) + -1);
	mislead(( TABLE[-Sansa - -85][--dog + TABLE[( TABLE[--COLS * TABLE[--bar(Hodor)][ROWS - dog]][( -0.38 * Ygritte )] / ROWS )][-0.77] + betray(200.2896 / COLS) - ROWS - bar(( Hodor - -bar(-foo(destroy(COLS / Ygritte)) - --0.46 / foo(betray(-bar(-foo(),------bar(protect() + Hodor) * -protect(protect() * -( ( betray(COLS) ) ),ROWS) - ROWS),0.94,1))) * 76 * 1 / protect(ROWS * TABLE[1 - 25][foo()]) ),x)] ),TABLE[y][-mislead() * COLS - -mislead(( Hodor )) * ( Ygritte ) - -Jon * bar(ROWS,mislead(-destroy(foo(x,foo(( -59 ))),-1 * bar(-7 + ( -82 * ROWS )),y / ( -rule(-( ROWS )) )) * 0.46,--TABLE[-0.2][rule(( --Stark ),78)] * ( -53 ) + ---10),y) + 69],-0.54)
} else {
	if(-Arya - foo(-Ygritte,( TABLE[mislead()][TABLE[( ( 56 ) )][0.47]] ))){

} else {
	Sansa -= -TABLE[-Sansa][--0.89];
	Hodor *= Arya;
	Hodor *= 18
}
};
	y
} else {
	89 / x / rule() * Stark
};
	COLS
} else {
	if(ROWS){

};
	930.202 - 0.67 / -Ygritte
}
};
	dog -= COLS
}
};
	if(( COLS )){

};
	59 - rule()
}
} else {
	( 50 )
}
}
def foo(x,Jon){
	0.22
}
def destroy(){
	if(Sansa){
	Stark
} else {
	Arya -= 84;
	Sansa -= -( -5 ) - ( 97 )
};
	-98 * ( -0.37 * -ROWS ) / -( mislead(-4) ) / ROWS
}
def bar(Sansa){
	destroy(TABLE[-( bar(-0.48) )][Arya],-51,390.883);
	x += TABLE[-74 * -ROWS][Stark]
}
var x = ( Ygritte )
assert -bar(protect(-COLS)) / ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Stark,Hodor,dog){
	if(ROWS){
	if(mislead(--( 910.5 ))){
	Jon *= ( Stark );
	Arya -= ---ROWS + betray(protect(-78),foo(( 0.47 ),0.02)) - COLS - foo(dog,TABLE[( -ROWS )][( ROWS ) * dog]) + COLS * --52 + ( Arya )
} else {

}
}
}
def TABLE[-97][j] {
	( ( dog ) + TABLE[-0.36][-mislead(( x ))] )
}
var y = TABLE[betray(Hodor) + ROWS][0.26] / ( ( bar(1) ) + mislead(betray(-( -Stark ) + ROWS - TABLE[Hodor][Jon + 50],( -COLS / Ygritte - TABLE[-61 * COLS][dog] )),COLS) - ( ( 690.22 ) ) + COLS ) - -rule()
assert COLS : "One can not simply parse himself"
def TABLE[1][j] {
	if(-1){
	-880.594;
	if(--96 / ( 28 )){
	-mislead(450.461) - Ygritte
} else {
	Ygritte -= --1
}
} else {
	-COLS;
	Hodor *= 770.4;
	y -= -Sansa
}
}
assert betray(540.24,Hodor,protect(TABLE[TABLE[( -80.997 )][TABLE[( bar(COLS - mislead(-( 0.52 + ( -480.9 ) / ( Jon ) )),-1,TABLE[destroy(mislead(TABLE[-Ygritte][rule()],betray(dog,ROWS,( ( Sansa ) ) / foo())),-0.43)][0.52]) )][Stark - destroy(rule())]]][Sansa * mislead()] - -67)) : "Winter is coming"
var Jon = Sansa
assert -1 : "Fear cuts deeper than swords."
def betray(){
	Jon -= betray(---bar(-1,-rule(),-TABLE[betray(COLS)][-dog]) * Jon * TABLE[--0.22][protect(( destroy(Jon) ))])
}
def destroy(){
	( ( -1 ) )
}
def TABLE[--0.25][i] {
	if(y){

} else {
	Sansa;
	if(( TABLE[( 70.41 )][ROWS] ) - -1){
	if(Ygritte){
	Ygritte -= TABLE[bar(Arya,Stark)][160.283]
} else {
	( -( foo(-0.63,ROWS) ) );
	if(-170.511){
	Stark *= protect();
	if(( 10.83 )){
	y *= foo(ROWS,-570.38,bar(610.64,-67));
	if(( 130.69 * COLS )){
	x *= -130.5477
}
} else {
	Arya *= -37;
	Sansa += rule(rule(( TABLE[( foo(-0.86,TABLE[Arya][1]) )][bar(x)] ),Hodor * -ROWS),Ygritte)
};
	if(Stark){
	x;
	Jon += ( --TABLE[0.66][destroy()] - -bar(betray(betray(-0.26,160.95),( Hodor / COLS / 27 ) * mislead(TABLE[Ygritte * TABLE[( COLS )][1]][Arya]) / -( -y ))) + betray(Hodor,--COLS) );
	if(-1){
	betray(Jon,0.2,bar(-COLS,rule(( betray(-0.32 / ( 1 )) ),--betray(( ( rule(-4) ) * Arya ) * ( 380.2196 ),( Hodor ) + ROWS / 0.16) * TABLE[( 80 )][TABLE[0.21][1]],mislead(foo(-0.54 + 220.5384) / -ROWS) + COLS)))
}
} else {
	COLS
}
} else {

}
}
} else {
	COLS;
	if(y){
	Arya *= ( ( COLS ) * -67 - -COLS * COLS )
} else {
	( TABLE[COLS][TABLE[( ROWS )][COLS] - ( -0.57 )] )
}
}
}
}
def TABLE[betray(bar(-( betray(1,( bar() ) / -33,( protect(( 29 ),-COLS,( --1 + -0.41 )) ) / -betray(TABLE[y][betray(Arya)],foo(COLS))) ))) / -880.45][k] {

}
def TABLE[780.749 + -3][k] {
	if(-170.5754){
	if(TABLE[Jon][-1]){
	COLS;
	Sansa -= 0
} else {
	( -TABLE[( -490.1185 )][-foo(COLS) + -0.99] );
	x *= mislead(-30.4 / -81 + mislead(Ygritte,-rule(bar(TABLE[-( ROWS )][-bar(5,destroy(1))],( Jon )),-ROWS)) + -0.24 - rule(Arya,mislead(( -0.18 ))));
	Hodor /= ( ( 1 ) )
};
	if(TABLE[mislead(-COLS,Ygritte)][TABLE[COLS][( foo(-ROWS,rule(Arya,( TABLE[( y ) - ( 1 )][protect(0.1,betray(---0.8,protect()) / ROWS,-COLS * ( rule(( ( TABLE[-( destroy(( y ),COLS,ROWS) )][betray()] ) ) / ( ROWS ),( rule() )) ))] ))) ) - ( x )]]){

} else {
	if(foo(( Arya ),mislead(( --foo(-COLS) ) / mislead(protect(( ( betray(( ( foo(rule(COLS,Sansa)) - ( ROWS ) ) )) ) / ( -COLS ) * COLS - Arya + -Hodor - ---( COLS ) - rule(rule(Jon,( x ))) * Ygritte / bar(-0.98) ),betray(( 27 ),-mislead(( ( -43 ) ) + -1,-0.88) + x,foo(-foo(-( ROWS ) / ( dog ),-Stark),--75))))))){
	if(protect()){
	if(-1){
	x -= ( betray() )
} else {
	if(-1){

} else {
	if(TABLE[--foo(1) * -( Arya ) / --64][COLS]){

} else {
	87;
	if(-x){
	Arya
}
}
}
};
	Sansa *= bar()
};
	Arya;
	if(35){
	x /= 0.83;
	-bar(betray(COLS,-0.01),( x ))
} else {
	if(69){
	-ROWS
} else {
	dog -= ROWS;
	if(-bar() * -( TABLE[-mislead()][TABLE[foo(-70,-0.54)][-( ( bar(Arya,rule()) ) + Stark )]] )){

}
};
	if(( 1 )){
	Hodor *= ROWS;
	if(bar(TABLE[60.71][-0.26])){
	if(bar(ROWS,TABLE[( ( -68 / -1 ) )][protect(betray(),-0.95,--1 + mislead(rule(( ( -COLS ) / ( TABLE[-betray()][( betray(-( bar(-750.82,0.19,bar(COLS)) + -1 ) * mislead(),( Stark )) )] ) ) + ( x ) + Hodor)))])){
	if(COLS){
	y += destroy(--( -1 ) * -1000.7 * ( 30 ) + -Stark,ROWS)
};
	betray(-TABLE[----1][-x * Stark * ( 42 ) + ( ( protect(( -0.78 )) ) ) + betray(-( -230.591 ),betray())],ROWS,ROWS / ROWS - bar(betray(ROWS),TABLE[-foo(-rule(( Jon ),protect(-( rule(( bar(-0.54) ),--21) ))) + -TABLE[96 * ( Ygritte )][dog] - ( -13 ) + -foo(),ROWS) - Arya][-( Stark )],bar(( ROWS ) / ----220.5865,TABLE[Arya][-COLS] - -Hodor - x * ( 0.09 ),COLS)) * ROWS)
}
}
} else {
	Ygritte += ( 0.79 )
}
}
};
	Jon -= x
}
} else {
	x *= rule(1,bar(Stark));
	rule(protect(mislead(protect(-44 - --460.42 + y,-0.24),-( Ygritte )),( --21 )),Ygritte)
};
	-1 - ( ( -foo(400.2) ) )
}
def TABLE[--940.578][i] {
	Hodor *= ROWS;
	x += 0.42
}
var Hodor = TABLE[rule(COLS,COLS - ( TABLE[0.25][Sansa] ))][0.66 + rule(Ygritte)]
assert x : "One can not simply parse himself"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon,Stark,Hodor){
	betray() * TABLE[( -Stark )][ROWS]
}
def protect(Stark,x,dog){
	if(( Jon )){

};
	-ROWS;
	-0.98
}
def bar(){
	Stark += protect(Hodor);
	if(ROWS){

} else {
	if(y){
	( -mislead(( ( -Jon ) ),--410.265) )
}
};
	Jon /= Hodor
}
def rule(Ygritte){
	if(( -0.03 )){
	protect(y,--860.1);
	if(1){
	if(( bar() )){
	if(-TABLE[ROWS][TABLE[ROWS][-dog * ROWS]]){
	if(--60.9){

} else {
	if(( -mislead(-Stark) )){
	if(( ( -COLS ) )){
	if(260.75){

} else {
	Ygritte += ( ( TABLE[-0.52][-Jon] ) )
};
	Hodor /= dog
} else {

}
} else {
	Stark -= COLS;
	-COLS / COLS
}
};
	rule(-Ygritte,foo(ROWS)) + -1
} else {
	if(( ROWS )){
	0.87
};
	Jon += mislead(COLS / -22)
};
	if(-TABLE[( Sansa )][( ( ( dog ) ) ) / TABLE[ROWS][-( destroy(-0.87,-( rule(betray(--0.09,0.71)) )) )]]){

} else {
	Arya /= 41;
	x -= Stark
}
} else {
	dog -= -bar(( ( -0.19 ) ),( betray(ROWS) - -72 ))
};
	-Arya * mislead();
	Sansa *= destroy()
}
}
}
var Ygritte = -protect()
var Hodor = ( ( ( -28 * -y ) ) )
assert -mislead(-Hodor) : "Nothing burns like the cold."
def protect(Jon,Hodor,Sansa){
	-0.02;
	-mislead(-y - ( mislead(COLS,-Arya) ) - destroy(TABLE[mislead(( TABLE[( ( -TABLE[( ( protect(-TABLE[Sansa][bar(COLS,-( -TABLE[TABLE[bar(COLS * -0.66) / ROWS][Sansa]][destroy(-0.01)] ))]) ) )][bar()] ) )][Jon] ),( -Arya + destroy(TABLE[Stark][ROWS] / -TABLE[ROWS][1],( Arya )) ))][COLS]) + Jon);
	if(( TABLE[-Jon][COLS] ) + y){
	Ygritte;
	-ROWS;
	if(x - Sansa){
	if(y){
	if(Jon){
	COLS
};
	Jon *= destroy(COLS * -310.8958,Sansa,mislead(destroy(),1));
	if(-0.33){
	-ROWS;
	x += COLS
}
} else {
	foo(--COLS);
	Jon -= Ygritte;
	if(Hodor){
	dog * destroy(rule(y + -680.038),Jon);
	( ROWS - TABLE[COLS / -ROWS / ( ( foo() ) ) * -0.07][-1 / COLS] )
} else {
	79 + -betray(-TABLE[ROWS + -1 / destroy(dog)][( TABLE[--Jon][TABLE[-Arya + ( 99 )][-470.77]] )] * --1,( ( COLS / rule(mislead(y),-0.29) ) / Sansa ),-( ( Ygritte ) )) + bar(ROWS) * protect();
	1
}
};
	x -= -11
} else {
	Hodor /= 0.77;
	if(-14){
	Sansa *= ( ( ( -( ( ( protect(mislead(-( ( ( ( ( -0.24 ) ) ) ) )),85,mislead()) ) ) ) ) ) );
	if(TABLE[x + rule(mislead(-1,COLS),( y ) / ( ( TABLE[dog][( ---Hodor )] ) ),( -1 )) + dog / Ygritte / -18][Arya]){

} else {

}
};
	Hodor /= 69
}
} else {

}
}
def mislead(Ygritte){
	-82
}
def TABLE[-4][j] {
	Jon *= ( ( COLS ) * -( foo() ) )
}
var dog = Stark
var Hodor = Stark
def destroy(Sansa,x){
	ROWS;
	Stark -= ---TABLE[( Ygritte * ( -900.3 ) * rule(protect(TABLE[( TABLE[-0.31][Hodor * -990.013 / mislead(foo(320.7 / y + -Hodor,mislead(-mislead(Hodor))),Stark - -protect(-35 - -( -0.48 ) + TABLE[--26 * -0.12][rule(ROWS,--( Stark ) / -rule(x,--92) * -52 - TABLE[Arya][y],TABLE[-0.88][x - -( x ) / Stark])])) / ( -betray(destroy(rule(COLS,0.76,-1),Jon,( ( ( ( x ) * rule(-0.51 * ( foo(-220.28 * bar(TABLE[-6][-Sansa],( -TABLE[-0.06][-84 / Stark] )),-mislead(-1) - ( betray(( x ) / TABLE[COLS][mislead(( COLS ),( ( Ygritte ) ))],-mislead(Arya - Ygritte,betray(protect(-0.02 - TABLE[foo(destroy(x * -destroy(),TABLE[( ( -dog ) )][-( COLS )]))][ROWS],TABLE[COLS][TABLE[-rule(( ROWS ))][TABLE[ROWS][COLS]]]),( Arya ) * foo(341,51))) - dog) + mislead(( -Hodor + -60.267 ),-0.59) )) ),TABLE[43][---( ROWS ) - TABLE[-0.8][x]]) * COLS ) ) )),( betray() ) * protect(Stark + 73,-0.13)) ) - -COLS / x] ) / TABLE[ROWS][30.7]][TABLE[60][-( y / betray(ROWS,Jon,-Sansa) - rule(-( destroy(betray(-0.4),destroy(TABLE[COLS / --870.995][bar(x,Ygritte,ROWS)],COLS),-betray(ROWS,Sansa)) ),ROWS) )]]),( mislead(dog,x - 16,( TABLE[( TABLE[-( TABLE[betray(COLS,y)][bar(Jon)] )][Stark] )][protect(( bar() ))] )) )) )][Hodor]
}
var y = ---protect(1) + --Ygritte / rule(( -820.56 * -0.99 ))
def betray(Sansa,Stark){
	----0.06 + -Stark
}
def TABLE[-mislead(-ROWS)][j] {
	rule(( ( -51 ) ))
}
assert mislead(-Hodor - protect(-660.1)) : "Fear cuts deeper than swords."
var Hodor = rule(Jon,COLS,y)
def foo(Stark,Arya){
	TABLE[-Sansa][( ( ( TABLE[ROWS][-rule(Sansa,( TABLE[-83 + -5 + x * 72][-ROWS] ))] ) ) ) - ROWS]
}
def TABLE[68][j] {

}
assert 54 : "One can not simply parse himself"
var Jon = -Jon
var Hodor = ( -65 )
var Stark = -73
var y = -Sansa
assert TABLE[Jon - ( -0.67 ) / --rule(x,COLS / -1)][Hodor - -betray(--ROWS + 1,-96)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Stark,y,Ygritte){
	if(-24){
	if(-17){
	if(0.16){
	if(( ---Jon + ( Ygritte ) )){
	Hodor /= -1 + x - foo(( ( -( ( -1 ) ) ) * -COLS ))
} else {
	Stark /= ( TABLE[betray(-59,Arya)][-0.81] )
};
	if(Jon){
	Jon += protect(betray(-Jon,dog),betray(--81,Hodor) * protect(destroy(destroy(TABLE[-rule(1 / Arya)][rule(( protect(-betray(COLS,destroy(( -70 )) + Ygritte + destroy(Arya,-73) * -rule() + destroy(( -0.24 / COLS ),ROWS,1),x + Stark / 1)) ) + protect(COLS) + Stark,rule())],( ( foo(1,87) ) + 49 ),( Jon )) + --0.69,destroy(),ROWS),-( Ygritte )),bar(mislead(destroy(protect(-0.17) - y + COLS,mislead(( -bar(--0.48 - Arya,28) / -( ROWS ) ))),COLS * mislead(Jon * -0.85)),TABLE[( TABLE[--17][-1] )][Sansa]));
	if(-0.46){
	y += 210
}
};
	Ygritte *= destroy()
};
	y
}
}
}
def TABLE[3][k] {
	Sansa += ( 74 )
}
var x = 50
def TABLE[Jon][k] {
	if(TABLE[dog][destroy(Jon,41)] * ( rule(rule(-Stark,( Sansa )),( destroy(68,1) )) )){
	if(( ( --39 ) )){
	if(COLS){

} else {
	( Stark );
	if(TABLE[Arya][COLS]){
	if(ROWS){
	Sansa -= -1;
	if(betray(ROWS)){
	Sansa *= x
}
} else {
	Hodor += ROWS;
	if(TABLE[( -1 ) * COLS / Ygritte][COLS]){
	if(( 0.82 )){
	x + betray(( ( destroy() ) - -rule(TABLE[COLS][-TABLE[x][51]],COLS) ),ROWS) - ( ( --0 ) ) / rule(TABLE[ROWS][-1])
} else {
	if(( COLS )){
	Arya -= y * -foo(y * 0.58,-ROWS);
	Sansa += -bar(( ( Sansa ) ),ROWS,x);
	Sansa -= ( betray(-0.05) )
};
	if(TABLE[betray(y) / ( -0.35 * ( 84 ) - -TABLE[x - -5][TABLE[( destroy(Ygritte,( ( --mislead(-( 0.93 )) ) - Hodor - 730.4 + -Arya )) )][y]] / 0.16 / betray(( Sansa ),( ( 26 ) ) + ( bar(( rule(ROWS,bar(( rule(( dog ),( -0.74 ),destroy(ROWS,-0.89 * -19,ROWS)) ),-mislead(COLS,bar(-bar(Arya,--ROWS) * COLS + Arya) / protect(-500.868 / Jon),-TABLE[( ( dog ) )][-TABLE[0.06][--y] * 360.593] + --790.92 / ROWS) / 590.7)) )) )) )][Sansa]){
	( ( COLS ) );
	if(TABLE[betray(ROWS)][1 / 1]){

} else {

}
};
	dog /= -( --0.48 / -( -mislead(( Hodor + destroy(-930.26 / ( mislead(-93,y) )) ),y) ) )
};
	Jon /= bar(--0.06)
} else {
	Stark -= ROWS;
	TABLE[ROWS][betray(x)]
}
};
	if(---0.11 * Sansa){
	Ygritte += ( mislead(destroy(1,-( betray(destroy(Sansa,Arya,-0.09),-0.68) ))) );
	if(-COLS){
	--Hodor / ( -protect(y) )
}
} else {
	if(( -( mislead(mislead(),0.54) ) / foo(Jon,( ( Arya ) )) )){
	ROWS;
	Jon -= ( dog )
}
}
} else {

};
	y *= TABLE[-0.61][foo(ROWS) + ( ROWS )] + 310.659
};
	-mislead(Jon,( ( ( COLS ) ) )) - ROWS;
	if(( ( ( ( -( ( -TABLE[destroy(Stark,mislead(mislead(66),y) * Arya)][( foo(Sansa,ROWS - ( ( destroy(rule(-80.51,-69) + Jon,protect(),betray(Arya)) / ( -foo(-Jon) ) ) )) )] * TABLE[foo(-31,( ----30.8616 ),( ( -0.31 ) ))][( x )] ) ) ) / -290.4 ) ) )){
	if(-760.9661){

}
}
} else {
	dog -= protect();
	protect(COLS);
	if(-destroy(COLS - Stark - COLS / Ygritte * protect(mislead(1,-520.465,( --( ( x ) ) - 1 )),( TABLE[Sansa][COLS] ),ROWS),COLS)){
	if(bar(18,TABLE[ROWS][TABLE[COLS][( Sansa )]])){

} else {

}
}
};
	y /= destroy(betray(0.84));
	if(-1){

}
} else {
	Sansa *= ( TABLE[-880.56 - -1 - mislead(bar(Stark,( -destroy(97) )))][COLS] )
};
	if(( ( -0.9 / -( ( protect(Hodor) ) - protect(TABLE[betray(bar())][destroy(-1)]) - dog ) * Arya ) ) / Jon){
	Jon += ( Hodor );
	if(betray(-1 + bar(Ygritte,( 0.97 )) + -0.25 / destroy(),-26) - ( COLS ) - -42){
	Arya -= ROWS;
	--62;
	-77
} else {

}
} else {

}
}
var Jon = protect(-mislead(protect(( TABLE[( ( ( TABLE[destroy(( mislead(Sansa,x) ),mislead(y))][COLS] - ( x ) / ROWS ) ) )][Arya] ),betray() - destroy(0.2)),ROWS + ROWS / -250.3318 - COLS) / -( ( ( ( -0.34 ) ) ) ) * 12)
var Arya = ROWS + -82
def foo(Stark,Hodor){
	( 0.49 * -( --0.57 / mislead(500.991,-( betray(34,-0.55,0.45) )) ) - Arya * Stark / ROWS ) * rule() - Sansa;
	Ygritte -= TABLE[dog][1]
}
assert y : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	y += Ygritte;
	if(( Arya )){

}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[TABLE[90][Ygritte / destroy(( -destroy(-20.76,mislead(COLS,-580.75,-1)) ))]][i] {

}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(x,Ygritte,y){
	Ygritte;
	-74
}
def TABLE[8][j] {
	---protect(Stark,-Sansa);
	if(-Stark){
	dog *= -protect() - x;
	Hodor += Jon
}
}
def TABLE[COLS][i] {

}
assert 0.36 : "Fear cuts deeper than swords."
var dog = COLS
def mislead(y){
	if(Jon + ( -COLS )){
	TABLE[-1 - protect(Arya)][--0.74]
};
	-( y )
}
var Ygritte = ( foo() ) * ( ( Ygritte - mislead(-protect(( rule(-dog,470.448,destroy(0.91,dog)) * --710 ))) ) - rule() )
var Arya = betray(( -foo(-91,mislead(980.243,-Ygritte) + 850.368) ),COLS)
def betray(x){
	x *= 0.75
}
var Ygritte = 0.74 + ( -foo() )
def protect(Jon){
	if(ROWS){
	if(betray(COLS,ROWS)){
	ROWS;
	---ROWS
} else {
	Ygritte /= Stark;
	Arya *= COLS
};
	if(Hodor + y){
	( x );
	Stark -= 87
} else {
	bar(---COLS + ( ( rule(( ROWS ),dog,--0.01 + Arya) ) ))
}
} else {
	ROWS
}
}
def TABLE[880.842][i] {
	( -ROWS );
	dog -= Stark
}
def foo(Arya,Ygritte,y){
	if(Ygritte){
	foo();
	if(-Ygritte){
	rule(x,-mislead(Stark,ROWS)) - -0.45;
	-46;
	if(( TABLE[( TABLE[ROWS][1] )][ROWS] + ( rule(--0.6,-90,TABLE[( --ROWS )][mislead(Ygritte,---1 * -Jon + -0.03 * ( Sansa ) + foo(dog),-670.367)]) ) )){
	if(TABLE[-dog][( ( -Hodor ) ) + -67]){
	Jon += Stark;
	if(--Stark * TABLE[--protect(-Hodor - -180.53) + -rule(protect(),betray(x,--( Sansa ) / -71)) * -COLS + foo()][ROWS - -Jon] / mislead(( ROWS ),-Hodor + ( ( bar(y,Stark) ) )) + ( Stark )){
	-TABLE[1][-34] * Stark
} else {

}
};
	( ( Stark ) )
}
} else {

};
	Hodor /= protect(bar(( 0.61 ) + TABLE[rule(-( dog ),-destroy(protect(ROWS,( ( 24 ) ))) / mislead(0.21,-Stark))][-destroy(-TABLE[Hodor][TABLE[ROWS][49]])],--Ygritte - 0.02 - --1 * COLS * --14) - rule(Stark,-1,betray() + protect()) + y,dog)
} else {
	betray(y) + --( TABLE[76][( TABLE[-Sansa][destroy(COLS)] ) + bar(Arya * ROWS,rule(protect(-0.23 - y,mislead(-y / 0.8,Hodor,bar(ROWS,TABLE[0.4][Arya + -ROWS]))) - ROWS * -85 / bar(foo(foo(TABLE[ROWS][Jon]))),ROWS) + 1 + mislead(protect(dog),rule(Ygritte)),-6)] );
	if(foo()){
	-0.35
} else {
	y;
	bar(-betray() / 960.51 + mislead(rule()))
};
	if(( destroy(-foo(-betray(rule(Hodor,betray(( COLS ))))),x) + -( protect(betray(82,Sansa,foo(dog,1) * protect(rule(),mislead(0.37),-12))) / ROWS ) )){
	Stark += destroy()
} else {
	if(( ( -1 ) )){
	if(COLS){

} else {

};
	Stark /= dog * ROWS
} else {

}
}
};
	Jon
}
assert -1 : "Fear cuts deeper than swords."
def TABLE[ROWS][i] {

}
assert 0.28 : "Winter is coming"
var Sansa = ( 25 )
var Stark = Sansa
def TABLE[( betray(ROWS + --Jon / ( --170.03 )) )][j] {
	foo(-0.43 - Sansa,0.99,-0.17)
}
assert rule(y) - -0.03 : "Winter is coming"
var dog = mislead(-COLS,x,COLS)
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Hodor / bar(90) + Arya][k] {

}
def rule(dog,x){
	---58 + COLS / Ygritte + -64 / ---870.5;
	Ygritte /= bar(protect(x,y));
	if(( ( 960.976 ) )){

} else {
	dog -= ( 0.91 + ROWS );
	if(ROWS + 0.9 - -150.085){
	Stark += Arya;
	COLS / Hodor;
	if(-COLS * foo(mislead(-COLS,Arya + rule(),y),foo(betray() - bar(( bar(rule(-TABLE[foo() * COLS * bar(Sansa,-ROWS)][( 520.43 )],--Arya),-1) ),x) / TABLE[dog][( ( protect(TABLE[TABLE[1][y] - -1][--TABLE[( 0.35 )][( ( ROWS ) )] * -0.74 / ( 0.67 ) + 1 / protect(-TABLE[Arya][protect(-rule(-58,COLS,-TABLE[COLS][1]) + Sansa,rule(rule(-ROWS - ROWS,TABLE[x][Ygritte]))) - ( ( -betray(-60) + ( ( 510.698 ) ) ) ) - destroy(( ROWS ),---COLS * ( 1 ))],35)],-0.52) ) )])) + -TABLE[1 - -0.63][-( TABLE[Jon][TABLE[COLS + -( ROWS / Ygritte + protect(Ygritte + -Stark * -( -TABLE[--dog][COLS] * --1 + Hodor ) / ( ( betray(ROWS) ) ) / -destroy(Sansa) - mislead(mislead(TABLE[--( Ygritte * ROWS ) + bar(1,-foo(TABLE[0 / -Hodor][( Hodor )])) - TABLE[( COLS )][( Stark )] + 0.57][COLS * -0.39 / TABLE[--ROWS * protect(3) - ( ( betray(COLS) ) * TABLE[--1][-0.84 - -----( ( -60 ) )] - --Sansa ) + -TABLE[-TABLE[mislead(( --( y ) ))][bar(25)]][20.388] + -( Hodor )][COLS] * mislead(ROWS,-( -82 / destroy(COLS * y,ROWS,( 59 )) ))]),( ( 0.07 ) ) - -Ygritte + Ygritte / ( betray(( ( ( betray(( TABLE[bar(( mislead(-0.86) ))][ROWS] )) + x ) ) )) ),COLS) + ( ( ( ( Sansa ) ) ) ),foo(( COLS ),( ( -( -rule(-0.04,TABLE[COLS][-( 43 )] / -betray(-80,0.59) + protect() / y) ) ) )) + --protect(-22 * COLS + -foo(rule(0.09 + ( betray(dog,protect(-TABLE[( -TABLE[x][bar()] )][Hodor],-foo(-990,ROWS,( Jon )),Sansa)) ),-foo(( -COLS / ( Hodor ) ),-0.93,destroy(-( ROWS ) + Hodor,TABLE[--73][-ROWS]))),Sansa) * ( Jon )),foo(dog)) )][( ( ( Jon ) ) )]] )]){

} else {
	if(foo(bar() - protect(protect(( 0.25 ),Hodor))) * 6){
	Jon *= ROWS;
	( -destroy(protect(( Sansa * -74 ),52),mislead(COLS)) )
} else {
	if(x){

} else {
	dog -= COLS
}
};
	if(mislead()){
	if(-( -90.659 ) + ( Arya )){
	if(dog){

}
} else {
	dog /= -protect(( -61 ));
	-bar()
};
	protect(TABLE[dog][Arya / betray(destroy())],( ( Stark ) ),-ROWS - mislead(-( 0.52 ) + -320.957))
} else {
	Ygritte -= 2;
	if(( -0.76 )){
	( Arya );
	Arya += bar() * TABLE[-1 * -TABLE[y][COLS]][-63] * Jon;
	x /= ( Arya )
} else {

}
}
}
} else {
	-0.19
};
	68
}
}
var y = COLS
var Arya = Hodor - -1 / ( ROWS ) * -0.83 / ( -( 69 ) ) + -0.32
assert COLS : "Fear cuts deeper than swords."
var y = 0.92
def foo(x){
	( ROWS );
	-mislead(( --0.76 ))
}
def TABLE[-foo() - --COLS][k] {
	x + -ROWS - 800.03;
	Arya *= COLS
}
var Sansa = betray(-44 / -dog,foo(foo(-( -( 82 ) ),920.6))) / y
assert ( TABLE[( ( COLS ) )][-destroy()] * TABLE[TABLE[betray(--( ( protect(ROWS,Hodor,foo(-protect(Arya),( betray() * x ) / ( ( ( 0.61 ) ) ),x)) ) ),y)][-531]][-betray(ROWS)] ) : "One can not simply parse himself"
var x = foo()
assert ROWS : "One can not simply parse himself"
def TABLE[Stark][j] {

}
var Jon = -( TABLE[Hodor * 0.13 * dog][( 0.28 )] )
def mislead(){
	Jon -= --y
}
assert TABLE[Stark][Sansa] : "Winter is coming"
var Ygritte = -( 22 )
def foo(){
	y += -96;
	rule(ROWS)
}
def TABLE[( TABLE[( ROWS )][mislead(mislead(),betray(( 1 ),-20.792))] )][k] {
	if(-TABLE[( ( bar(-0.43) ) ) + betray(TABLE[( COLS )][41],( TABLE[( -( 75 ) )][foo(( 0.24 ),ROWS,---0.32)] ))][-Ygritte - COLS - -1 / -0.23 - COLS + -Ygritte * Stark / ( TABLE[-Stark][( rule() )] ) + Ygritte + Ygritte] * -Ygritte * ( destroy(TABLE[-Jon + ( -destroy(ROWS,---( y ) / --210.7) )][TABLE[ROWS][-1]]) ) * -TABLE[rule(-betray(destroy(-Sansa),TABLE[ROWS][COLS],( y )),( -0.82 ) + -0.92)][( TABLE[-( ( 0.82 ) )][( ( -ROWS ) )] )] + -0.12){
	if(ROWS + betray(-( -protect() * TABLE[( ---x + -0.03 )][( ROWS )] ))){
	if(Ygritte){
	Hodor *= rule(mislead(),-( -betray(dog,ROWS) ));
	-1
};
	Sansa *= -64 - -ROWS;
	Sansa *= ( -mislead(200.69,0.74,Hodor + -47) )
} else {
	-TABLE[Jon][-x] + protect();
	Ygritte -= TABLE[--0.5][x - 1]
};
	if(( ( -bar(( -bar(ROWS,-0.77) )) ) ) + rule(-ROWS)){
	foo(( -mislead(( --Jon )) * ( foo(TABLE[Jon][( betray(mislead()) )]) ) / bar() * dog ),y)
} else {

};
	betray(COLS)
}
}
def bar(Arya){
	dog *= TABLE[COLS][Sansa];
	ROWS;
	-( ( y ) )
}
def mislead(){
	Stark *= rule(-TABLE[Ygritte][bar(TABLE[Sansa][ROWS])],( -ROWS ),y)
}
assert ROWS : "Nothing burns like the cold."
assert dog : "What do we say to the Lord of Death?"
def destroy(y,Arya,Hodor){
	Ygritte -= 1;
	mislead(( -340.4 ) - bar(-Stark,--0.85) + --x - -54)
}
assert COLS - -92 : "Fear cuts deeper than swords."
assert Ygritte : "What do we say to the Lord of Death?"
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(dog,y,Sansa){
	Hodor /= -1;
	rule(protect(),destroy(( Arya ),x),y) * -49
}
def TABLE[TABLE[destroy(protect(( y ),ROWS,foo()))][-( dog / foo(protect(TABLE[dog][ROWS + Arya * protect(0.93)]) * ( 20.741 ) + TABLE[COLS - -100 * 0.93][rule(mislead(mislead(--( Jon / rule() ) / TABLE[Arya][COLS / 510.9841 - ROWS]),-0.11,( --foo(y,( TABLE[1][Arya] ) - x) ) + ROWS / -y / -y + x) * -0.59,-0)] / ( foo(( -( ( -TABLE[28][betray()] ) ) ) + ( ROWS ) - rule(COLS,-destroy(Arya) + -76,-0.21 * Arya)) ),67) )]][j] {
	x += ( TABLE[13 * rule(Stark,( ( betray(-( betray(foo(destroy())) )) ) )) + ( Jon )][COLS] ) + 0.88 / COLS;
	y += ( Hodor );
	Ygritte /= destroy(-protect(bar(rule(1,( ( -( y ) ) )),ROWS)),-Ygritte,TABLE[protect()][--0.69 + ( TABLE[betray(bar(x) + ( -y ),( Hodor ),Jon)][( -450.459 )] )] + dog)
}
def mislead(Arya,Sansa,y){
	if(( ( x ) )){
	if(COLS){
	COLS;
	rule(-0.79) * ( ROWS )
} else {
	if(ROWS / TABLE[-protect(-protect(COLS / -1 - Arya),( Stark ))][230.02]){
	if(36){
	y /= ( ( ROWS ) );
	if(x){
	---COLS - -63;
	( ( bar(( destroy(foo(Jon),dog) )) * betray(-1 - ROWS) / ( COLS ) ) )
} else {
	( TABLE[Jon][--80 - Hodor * 1 / ROWS / protect(Sansa,-97) - ( ( TABLE[TABLE[mislead(COLS / Sansa,46,TABLE[-COLS][-73])][69]][betray()] ) )] );
	if(-foo(Jon,rule(COLS),( ( ROWS ) )) / 81){
	if(Stark){
	x *= TABLE[x][Sansa];
	Sansa -= Stark;
	Sansa -= -( ( Stark ) ) / ROWS / mislead(COLS) / destroy(-x + ROWS) - ( ( ROWS ) + ( ( TABLE[rule(TABLE[TABLE[protect(Jon) - TABLE[Hodor * COLS][protect(-destroy(x * ROWS,betray(destroy(Arya),COLS,-0.91),( --Ygritte )))]][mislead(-TABLE[protect()][( COLS )] - ( ( bar(foo(TABLE[ROWS][-0.84],Ygritte + COLS,-( -1 )),-0.26,-1 * --100) ) ))]][( -73 )])][( protect(-protect(betray(( ( -58 ) ),-81,TABLE[-830.28 / rule(( protect() ))][Sansa]))) )] ) ) - foo(Sansa) / x )
} else {
	Sansa += TABLE[betray(TABLE[( protect(-TABLE[( -TABLE[Arya][( bar(mislead()) )] )][foo(-( -destroy(--0.24) + betray(COLS * Hodor) ),foo())],( betray(( ---0.39 ) / TABLE[0.3][dog],protect(COLS,( -4 )) - ( 890.69 ),foo(bar(-0.36,-bar(-COLS,24,protect(( ( ROWS ) + destroy(x * ROWS,COLS,( -50.08 )) - dog ) - rule(mislead(-( -dog * -65 ) - ( -880.94 )),foo(-y / -0.04,mislead(foo(mislead(destroy(18 - 0.33 + 0),1,protect(-TABLE[( --( ( ROWS ) ) )][-COLS] - -14,( -destroy(bar(mislead(y),-1 - ( TABLE[0.69][y / -41] ))) * ( COLS ) ),-0.54) / ( 1 ))) / -foo(),( --ROWS ))),1),ROWS - -Stark + Arya,-390.1607)),-mislead(( TABLE[ROWS][--860.79] ) * -0.33 + 51)))) ) * y,-Sansa) * ( -( Sansa ) ) ) - ---8][( bar(x,rule(),( -COLS )) / protect(protect(-1),ROWS,-( Ygritte ) * -720.8245 + COLS) )],foo(( ( Hodor - 0.32 / y / ( Stark ) ) * ( foo() ) ),( ( TABLE[( dog ) - bar(-1 * Jon / Arya)][x / ( ROWS )] ) + TABLE[ROWS][( ( ( -ROWS - TABLE[( foo(Sansa,-0.61,400.3483) + 48 )][COLS] - bar(--1,-betray()) ) ) )] )) / ( mislead(( ( bar(-( Sansa ),TABLE[Arya + Sansa][-foo(( mislead(( y ),betray(( 0.41 ),0.93) - -foo(--dog - ( 520.13 ) / ---71,-ROWS) - TABLE[( ROWS )][( Hodor )]) ) * 0.11,protect()) / ( -ROWS )],-3) ) )) ) - 44,Ygritte)][( dog )];
	foo(x);
	if(( Hodor )){
	x /= COLS - ( Ygritte ) / ( Sansa - Hodor )
} else {
	if(-destroy()){
	if(ROWS - --rule(( ( bar(foo(COLS - -530.311,Ygritte),rule()) ) ) - betray(TABLE[-Ygritte - ( bar(-ROWS,Ygritte) * Jon ) / ROWS + --1][y]),-0.93,-ROWS) + -93 - ROWS / ( x * -( ROWS ) ) * betray(dog,-Hodor)){
	Stark -= 0.12;
	if(-COLS){
	-dog;
	if(y){
	if(-TABLE[-0.55][rule(ROWS / ( -Ygritte ) + 690.65,-x)]){
	Stark /= ( ROWS );
	if(COLS){
	if(COLS){
	( ( ( bar() ) ) );
	Arya /= rule(mislead(COLS,bar(COLS * COLS)),x);
	if(-1 * ( ( -Hodor ) )){
	if(bar(-TABLE[Ygritte / foo(( ( COLS ) ) * 97,-0.21)][65],( ( Stark ) ),( ( TABLE[-1][COLS] ) ))){
	ROWS;
	if(ROWS){
	( ROWS );
	betray();
	Hodor
} else {
	Sansa += Jon - -Jon * Arya + mislead(-0.73,destroy(-ROWS,bar(9)));
	if(( rule(-( 510.977 / x ),1000.55) )){
	ROWS;
	66;
	y += -1
};
	dog /= Ygritte
}
};
	x += y * rule();
	Ygritte *= Hodor
} else {
	Jon -= COLS;
	if(( TABLE[ROWS][( Jon )] - ( dog / -Sansa + dog - ( COLS ) ) / 16 - 250.846 )){

}
}
} else {
	y *= destroy(foo(-1),protect(rule(1) - ( ( -Arya ) )))
};
	-760.98;
	if(foo(protect(-----y))){

} else {
	if(bar(mislead(-rule(-( ( -0.97 ) ),-( --55 / ( dog ) ),TABLE[-41 - protect()][TABLE[( ROWS )][-100 / -0.37 - TABLE[COLS][ROWS] / -dog * -rule()]]) - bar(-COLS,( x )),( --40 )))){
	dog *= bar(-( betray(destroy(-bar(-13)),foo(protect(( -1 ),-COLS),( TABLE[-Jon][( -rule(70 * ( ( rule(0,COLS) ) )) * COLS )] / ROWS - Ygritte ),Stark)) )) * ( ( TABLE[96][protect(( ( -COLS ) ),Jon,( -1 )) - 1] ) ) * ( 0.46 );
	if(-1){
	Ygritte *= Sansa;
	--( COLS * TABLE[betray(( ( -1 + -Arya + --0.87 + TABLE[0.89 + -COLS][protect(TABLE[protect(--y,mislead(-( ---Arya / -Sansa ),rule(mislead(0.91) + ( --0.92 ) / ROWS)))][42 + foo(-bar(----Hodor),--1)])] ) ) + mislead(-0.33,-Ygritte * ( -99 )) - -0.58)][1] ) * x / mislead(-87)
} else {
	y /= ( --y + ROWS + COLS + betray(-76,0.52,TABLE[--84 + ( Jon )][ROWS]) / -( -foo(Sansa / ( ( -x ) ),-16 / protect(x,( Ygritte ),ROWS),bar(( ( Jon ) ),( -TABLE[--TABLE[1 + -dog][TABLE[mislead()][protect(COLS,Jon)]]][29] - ROWS ))) ) )
}
}
}
} else {
	TABLE[COLS][-550.239]
}
}
}
} else {
	Ygritte += ( ( -mislead(-94 - betray(---14,--63 - -( -70 )),----rule(dog,-1 / ROWS,Jon) / COLS - 0.94 * Arya) / ROWS * Sansa - -Ygritte * dog - -0.31 + protect(dog + foo(( Ygritte ),destroy(mislead(ROWS - -Stark / ( foo(-1) )),ROWS),ROWS) - -1 / destroy(-( Ygritte ),x,-foo() * Ygritte)) / betray(ROWS) * y ) );
	Arya += 920.969
}
} else {
	rule(mislead(-210.877,mislead(ROWS,-22,64)) / ROWS);
	if(( COLS )){
	Arya += y;
	Arya
};
	if(y){
	dog /= ROWS + ROWS;
	-480.56;
	foo(bar(x + 0.67),Stark,Sansa * -foo(270.296)) + -ROWS
}
};
	dog *= -1 - 0.33 - rule(( betray(-( ( --0.63 ) )) ))
} else {

};
	ROWS
}
}
}
}
}
} else {
	if(-( -0.95 + ROWS )){
	Sansa;
	if(dog){
	Arya *= ( COLS )
} else {
	Hodor -= ( -COLS - Jon )
}
} else {
	Sansa += -70
};
	x *= destroy(53 - 0.61 / -foo(-COLS,-rule(( COLS + -ROWS ))) * TABLE[( Stark )][foo(ROWS,TABLE[-protect(( 0.74 ),-0.67 - COLS * ( ( ( -890.275 ) / ( 57 ) ) ),ROWS)][-57]) + TABLE[Ygritte][( -0.11 )]] + ( ( Arya ) / ROWS ) * -4 - COLS)
}
};
	if(protect(990.0905,-TABLE[Arya][-0.18],-0.38)){
	x += ( TABLE[ROWS][x] )
}
} else {

}
}
def TABLE[( ( --1 ) )][k] {
	if(-Hodor * ( -Sansa )){
	--( ROWS ) + -Ygritte - Stark * bar(mislead(--mislead(destroy(--( ( protect(-( 0.18 ),39 * -1) * COLS + 88 ) ) - 0.17 / 22 - -36),--betray(COLS) * 46 + ( -11 ) / destroy(( -0.02 ))) - rule(Stark,1) * y),betray(-betray(),86 + -destroy(y * x + -540.996,Hodor),-560.4))
} else {
	x += ( TABLE[( -( ( TABLE[-85][Stark] ) ) ) / ROWS][betray(Arya)] );
	if(ROWS){
	if(( rule(87) )){

} else {

}
} else {
	-y;
	if(-ROWS){
	if(-betray(1,--470.39)){
	y /= 60.57;
	if(TABLE[-95 - -0.43 * -( Jon )][-ROWS + -( ( -Jon ) ) + 0.13]){
	if(-rule(ROWS,Stark)){
	if(mislead(420.6)){
	dog -= -0.23
} else {

};
	COLS
} else {
	if(Jon){

};
	if(-Arya){
	betray(( rule(foo(96,-COLS,-Arya),-0.16) ))
};
	Arya
}
} else {
	Stark -= Sansa;
	if(bar(Arya)){
	if(TABLE[-dog][COLS]){
	TABLE[-130.988][-COLS];
	ROWS
};
	Ygritte *= 450.972;
	Arya += -bar(-62,TABLE[--0.11][dog / -Jon])
} else {
	if(-56){
	Stark;
	y /= -( bar(-0.77,-0.23) ) - y * 1000.232
} else {
	y /= -31;
	Jon /= ROWS
}
}
}
} else {

};
	if(( ( ROWS ) ) * COLS){
	x += y;
	ROWS
} else {
	if(mislead(-( -COLS + COLS ),rule(Jon,63,-rule(( ( ( -destroy() ) ) )))) + destroy(-ROWS,-24)){
	TABLE[44][ROWS];
	mislead(Hodor);
	Ygritte /= -Stark / -COLS
} else {
	Sansa;
	if(ROWS){
	if(COLS){
	if(( 450.3 )){
	x += mislead(-betray(bar(350.445,TABLE[-foo(TABLE[-580.4147 / Hodor][-40],-21,--0.88) - ROWS][27])),-ROWS,-TABLE[bar()][-Jon]) - foo(TABLE[1][( 210.97 )],1,foo(-ROWS));
	Ygritte += COLS;
	if(TABLE[-( ( ( -rule(Arya,( 860.79 )) ) ) )][destroy() / ( Hodor )]){

}
} else {
	ROWS
};
	if(destroy(( -30 ))){
	y /= dog
} else {
	-bar(-34) + COLS + Arya + ( ( destroy(bar(-0.22,Stark),-y,( -x ) + y) ) + -1 - -11 + ROWS ) / 0.63;
	if(TABLE[TABLE[( ( mislead(betray(280.13) + rule(ROWS)) / ( foo(rule(COLS,Jon) / mislead(-32 - ROWS,-Jon + -Jon - foo(mislead(( ROWS )) / ( 1 ),destroy(42 / 210.4)),( -COLS ))) ) * ( ( ROWS ) ) ) )][-ROWS] + -y][bar()]){
	y /= x;
	mislead(-0.5,foo())
};
	if(COLS){

} else {
	-0.1;
	( 620.3 * x - ROWS );
	if(x){
	--0.92;
	if(-0.71){
	if(-( --COLS )){

};
	1;
	if(dog){
	if(( ( TABLE[-51][ROWS * 0.87] ) )){

}
} else {
	dog += Sansa
}
};
	y += ( mislead(( TABLE[ROWS][foo(( mislead() ),59)] ),ROWS / y) )
}
}
}
} else {
	Stark /= ( ( 270.3 ) )
};
	Arya -= x + Ygritte - ( 63 )
}
};
	-mislead(( ( Stark ) )) + ( -1 );
	y -= -foo(Arya)
}
} else {
	if(betray(x,Arya)){
	--0.27;
	14
} else {
	if(( ( ( ROWS + -Jon ) ) )){
	( -10 ) + ( bar(--Ygritte + foo(( destroy(( -ROWS )) ),destroy(x,-5))) );
	Sansa += bar(--COLS + -ROWS / mislead(-0.66 - ( 20 - 0.09 )) / 0.26)
}
};
	dog -= ( TABLE[63][--0.06] )
}
}
};
	if(-ROWS){
	destroy();
	foo()
}
}
def TABLE[protect(---( foo(-( foo(--ROWS) ) / foo(rule(x)),( TABLE[-( COLS ) / ( ( ( mislead(-920.4144) ) + Jon ) ) / COLS][31 + Stark / -COLS] ) / ( ( --x + Sansa ) ) * ( -250.51 ),COLS) ))][k] {
	mislead() - y * -0.5 + ( ( 0.29 ) );
	Hodor
}
def bar(Arya,Ygritte,Sansa){
	betray()
}
def protect(x){
	if(Stark){
	TABLE[( Ygritte )][betray(Stark,( ( ROWS ) ) / -ROWS)];
	if(( 58 )){
	if(-rule(destroy(TABLE[-rule(-0.2,---340.13 / betray() - ( -ROWS ),x)][Stark - -COLS * ( ( -protect(protect(( -bar(-7) ),x),TABLE[protect(--0.61,( TABLE[foo(Arya,foo(890.4))][350.06] ))][--betray()]) ) )],-protect()))){
	x /= TABLE[x][( foo() )]
};
	1 + TABLE[--( bar(-9 - bar(),Ygritte) ) + rule(foo(),-( -destroy() ),-destroy(( -( ( ROWS / --220.2 ) ) ),( -7 )))][TABLE[( ROWS )][betray(-Sansa)]]
} else {

}
}
}
assert protect() + -TABLE[-1][( -Jon )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--0.6 * -53][j] {

}
var y = ( 0.35 )
assert ROWS : "Fear cuts deeper than swords."
def betray(){
	betray(Sansa)
}
var dog = --760.6
assert -0.21 : "Fear cuts deeper than swords."
def TABLE[( ---0.61 )][j] {
	if(Ygritte){
	Arya += bar(protect(destroy(),( rule() )) * ROWS,-( bar(y,ROWS) ));
	Hodor *= ( rule() / ( dog ) )
};
	Stark += -9
}
def TABLE[-rule(-foo(( destroy() * Jon )) - -91 - betray(-1,foo()))][i] {
	rule(destroy(( destroy(( ROWS )) ) * ( Hodor ) * ROWS,-x),-1,mislead())
}
assert protect() : "Nothing burns like the cold."
assert Sansa : "What do we say to the Lord of Death?"
def TABLE[Arya][i] {
	if(Sansa){
	if(betray(-0.65)){
	dog -= -x;
	if(-33){

}
} else {
	betray(( destroy(protect(-90,1),( ( Stark ) )) ),-78,betray(COLS))
};
	Sansa += TABLE[mislead(0.86,foo(y))][( -rule() ) / Sansa - -86]
} else {
	dog /= --mislead(--TABLE[TABLE[-y + ROWS][0.22]][y] / Stark) + ( ( rule(-45) ) );
	--170.31
}
}
assert -mislead() : "Fear cuts deeper than swords."
def TABLE[( x )][k] {

}
assert ( protect(Ygritte,Hodor) ) : "What do we say to the Lord of Death?"
def betray(Arya){
	Stark *= ( mislead(mislead(--0.47 * ROWS,-50 * rule(COLS))) );
	if(41){
	-35;
	x
}
}
def TABLE[-86 * Stark][i] {

}
def mislead(){
	Stark -= mislead(( -rule(92,6) ) - -820.628)
}
var Sansa = x
assert --81 : "Nothing burns like the cold."
assert ROWS : "Winter is coming"
assert Ygritte : "One can not simply parse himself"
assert ( protect(x + ( -0.06 ),dog) / bar(-destroy(ROWS,--1),Sansa,Stark) * Hodor ) : "What do we say to the Lord of Death?"
assert -0.12 : "One can not simply parse himself"
var dog = COLS
def TABLE[Sansa * ( ROWS )][k] {
	Jon += TABLE[betray(betray(Stark,rule(TABLE[Jon * -( TABLE[y][ROWS] ) / ( mislead(Jon + ( Hodor + ( --ROWS ) ) + bar(Arya + ( Arya ),( --( -TABLE[( TABLE[TABLE[-destroy(( ( COLS ) ),COLS)][TABLE[protect(bar(( -27 ),-0.73))][( bar() )]]][destroy(( -bar() ),Stark,TABLE[ROWS][( TABLE[-Jon][Stark] )])] )][rule(-30,Arya) / dog] ) - ( rule(( COLS ),( -150.58 / -23 ),-bar()) ) * -protect(( rule(ROWS / y - foo(--17 * --( ROWS ),-1) / ( ROWS ),x,COLS) ),Stark) )),rule(--Arya) / ROWS,Stark) + COLS / Sansa )][-mislead(-0.82 - Ygritte,-( y / ( Stark ) ))] + rule(( ( COLS / --TABLE[--79][-( -mislead(rule(( --1 ))) ) / ROWS] ) - 68 ),-dog),--betray() / Ygritte * -0.53)),y)][-0.67]
}
def TABLE[-48][k] {
	---Jon * ( -TABLE[( --0.6 / rule(--destroy(( rule(COLS,ROWS) ) / --20 - foo(TABLE[( foo(( 370.477 )) )][dog] / --65) - -destroy(),-0.38),0.93) + bar(-( 51 ),Stark) + -350.156 )][COLS] );
	if(bar(--COLS - betray(Hodor))){
	Jon *= Arya;
	if(-0.87){

} else {

};
	if(-2){
	( Jon );
	( ROWS );
	Arya += 31
}
} else {
	Arya /= 0.65;
	dog -= betray(protect(-Sansa,-Ygritte,0.12));
	if(-0.11){

} else {
	TABLE[destroy(-COLS * COLS + -x * ROWS,-ROWS + protect(ROWS,ROWS / -1,mislead(( COLS ),mislead(),COLS)) - -foo(( --( protect() ) + Jon + ROWS )))][-30 * Hodor * ( -Sansa / ROWS )] + ROWS;
	-foo(( -840 ),Arya * 45 + rule(rule(),-ROWS,( -bar() * ( -foo(-1,( -ROWS - TABLE[-360.2][( -34 - -Arya )] )) ) )))
}
};
	dog /= destroy(( ( bar(TABLE[bar(ROWS) * COLS][Stark],protect(destroy(-870.86,( -53 )),( destroy(ROWS,27) )),1) ) ))
}
var Arya = TABLE[Sansa][( protect(TABLE[( -mislead(mislead(betray(),destroy(protect() * destroy(( -24 ),( -0.36 ))))) - -rule(bar()) )][Sansa],foo()) + --x )]
var Sansa = foo(Jon + 65)
def mislead(Arya,y,Jon){
	Sansa /= ( 54 );
	Arya -= 94
}
def TABLE[-0.85][i] {
	TABLE[70][ROWS] * ( ( bar(Stark,mislead(-Jon) * ( -ROWS ),( betray() )) * -0.07 ) ) / 0.45;
	if(Ygritte){
	if(--36 + Arya){
	dog -= protect(TABLE[( ( 1 ) )][destroy(TABLE[Hodor][Ygritte - ( ( destroy(Stark,-mislead(-( TABLE[foo(bar(rule(( COLS ),( -bar(-TABLE[-60 - 230.6537][Jon]) / ( mislead() ) + bar(-0.69,bar(( COLS ),foo(( dog / bar(mislead(-130.3872,Stark,0.33),( betray(rule(--rule(( TABLE[rule(--0.2)][-110.6] ),-Hodor),1),dog) )) - ( ( bar(TABLE[-57][protect(--Ygritte + ( Jon ) / --80,TABLE[930.77][-ROWS],900.7)],61,ROWS) ) ) ),( -91 ),ROWS))) ))),-foo(COLS,( -( mislead(bar(COLS,( ( foo(Ygritte,destroy(mislead(),( ROWS + betray(--ROWS,-1) ),destroy())) ) - 0.85 - mislead() ),-1),foo(bar(( --3 )),destroy(),1)) ) ) / Ygritte),( mislead(bar(TABLE[-93][Ygritte],rule(),-ROWS) + ( ( TABLE[ROWS][-54] ) ) / TABLE[COLS][( ROWS ) * TABLE[-42][( x )]]) ))][rule(( destroy(TABLE[ROWS][0.43],TABLE[-23][( betray(TABLE[0.55][TABLE[-( -COLS )][destroy(Sansa,( 1 ))] - ROWS]) ) + ROWS] / ROWS) ))] ),y)) ) )])],mislead())
}
};
	Sansa
}
var y = 32
def foo(){
	x /= ---0.92;
	--x
}
var Stark = COLS
var Jon = COLS / 0.17
def TABLE[rule(( -TABLE[TABLE[ROWS][-0.29]][-foo(Stark,protect(( -TABLE[COLS][ROWS] / Jon - ( 10 ) / rule(-bar()) * TABLE[Hodor][rule(-0.42)] - Hodor )))] ),-0.21 - ( -( bar(-0.02) ) ) - ( ROWS * Ygritte ))][k] {
	( COLS );
	if(Ygritte + destroy(TABLE[( Jon )][-47],Hodor) / Sansa){
	( -foo(COLS) - betray(Ygritte,TABLE[( Ygritte - x + ( Ygritte - -670.4667 ) )][( Hodor )],-x / ( bar() ) / -( Sansa ) - -640.87) );
	( -80 - ROWS )
} else {

}
}
def TABLE[-61 + TABLE[( ( ROWS ) )][mislead(COLS,---ROWS) * -y - Ygritte]][k] {
	--89
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ( Sansa )
var Arya = COLS
var Hodor = protect(Hodor)
def bar(x,dog){

}
var Stark = -destroy()
assert betray(COLS,mislead(---13)) : "Fear cuts deeper than swords."
var Sansa = Ygritte
assert -Hodor * bar(ROWS,( COLS ) / ( destroy(mislead(( 36 ) / --Hodor - COLS + COLS - -TABLE[-1][( bar(( dog ) / Ygritte,mislead() + x) )] + -ROWS,protect(Sansa),( Stark ))) )) : "Fear cuts deeper than swords."
def protect(y){

}
assert -0.06 : "Nothing burns like the cold."
def destroy(){
	Arya -= TABLE[920.922][( dog )];
	if(( TABLE[-0.71][-0.71 - -1 * Hodor * 150.98 + destroy(Stark,( Hodor * -60.62 ),destroy(Ygritte))] )){
	if(dog * ( ( -ROWS ) )){
	Ygritte += COLS;
	bar(-93,--TABLE[--96][x / --COLS],Stark)
}
} else {
	if(Hodor){
	-Stark;
	Ygritte += ( ( ROWS - -protect(( dog )) * COLS ) / Ygritte / ( -dog ) )
}
}
}
var x = -65 + TABLE[TABLE[ROWS][Hodor * bar() / -Sansa * -1]][ROWS]
def TABLE[--ROWS][i] {
	rule(COLS)
}
def TABLE[-dog][k] {
	if(Ygritte){
	destroy(-0.17,protect(-destroy(Hodor,-0.54),-COLS)) + ( ( --1 / --ROWS ) )
} else {
	if(protect(--660.08,-betray(( --Stark ) / foo(ROWS,bar(( ROWS * ( protect() - ( ROWS - ( -x - protect() ) - ( ROWS ) + ( -0.96 ) ) ) )),ROWS)) + TABLE[-0.79][mislead(foo(-protect(( TABLE[0.2][protect(-1)] ),( Jon )),-78 * Stark,ROWS),mislead())],COLS + bar())){
	Ygritte /= ( x )
} else {
	x /= -Arya;
	if(COLS){

};
	foo(-290.46,Ygritte)
};
	x += bar(-0.63) + Jon;
	if(rule(( 0.35 + 68 ) / -Stark,1)){

}
};
	-rule(Ygritte);
	if(1){
	Sansa -= 76;
	if(TABLE[( -destroy(TABLE[--67][Arya / COLS],Arya) )][dog / Arya] * 0.69){

} else {
	Ygritte -= TABLE[( betray(( --mislead(mislead(--1,( COLS * protect(-24,-foo(( y ),ROWS * foo(---0.84,0.41),-Hodor / -1),ROWS - mislead(TABLE[rule(-betray(TABLE[420.731 - 880.39 + -55][Hodor]),Hodor)][COLS]) / Sansa) ),-( ( TABLE[ROWS][0.03] ) ))) )) )][-86] / TABLE[destroy(x)][( Ygritte )]
}
} else {

}
}
def betray(x){
	x -= rule();
	Arya *= --1
}
assert 41 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Hodor){

}
var Stark = ( ( -betray(-1,TABLE[x][mislead(( COLS ),TABLE[( TABLE[ROWS][foo(foo(-COLS,foo(Stark,-1 / ( ( ( Stark ) ) )),destroy(( -740.11 ),bar())),ROWS,( -Sansa ))] * x )][-Jon])],( Hodor / protect(--38 - destroy(Arya) + ( ROWS ) + --20,y) * -320.38 )) / ( ( 1 * --0.09 ) ) ) )
def TABLE[y][k] {
	if(-COLS){
	Stark
};
	Sansa - foo()
}
def TABLE[y][k] {
	x /= y;
	if(-280.698){
	COLS
} else {

}
}
def TABLE[( protect(-Sansa,( destroy(y * 0.55 + ( COLS )) - y )) )][k] {
	betray()
}
assert ( TABLE[betray(10)][-64] ) : "One can not simply parse himself"
def TABLE[ROWS][j] {
	6 - 0.52 - Ygritte
}
var Hodor = ROWS
def TABLE[( destroy() )][i] {
	y += 0.57
}
assert 710.53 : "What do we say to the Lord of Death?"
def foo(x,Stark){

}
var Ygritte = mislead(mislead(0.91 - ( -protect(-TABLE[-0.61 + 39 / rule(destroy(x,COLS))][( ( 380.4 ) ) * TABLE[Arya][COLS]] - -1,0.01) + --0.54 + 1 )),dog)
def TABLE[Hodor][k] {
	if(COLS){
	TABLE[betray(( 1 ) - Sansa)][Arya / TABLE[-( y * 1 )][98]]
};
	if(-ROWS){
	Arya
}
}
def TABLE[( -destroy() ) + TABLE[0.1][( TABLE[betray(-20)][( Hodor )] )] + --90][k] {
	Ygritte /= --( rule(650.79 / Stark,( -COLS - destroy() - TABLE[-y][COLS] )) ) / 95 / ( mislead(( 43 + TABLE[y][TABLE[protect(( -ROWS / COLS + COLS ),( mislead(13,-0.45,betray(-( ( ROWS ) ),betray(( destroy(( rule(rule(protect(ROWS,TABLE[ROWS][1]))) ) / -COLS,Ygritte,mislead(TABLE[--( ( x ) ) / foo(( -0.97 ),bar(bar(----0.73 / foo(--340.9),y),( rule(TABLE[-77][rule()]) )))][TABLE[-520.5][Hodor]])) ),Sansa),95)) ),--950.477)][1]] ) * y,ROWS) );
	Ygritte += COLS
}
def bar(x,dog){

}
def TABLE[COLS][k] {
	Sansa += mislead(-680.8,-ROWS - -51,mislead(-destroy(),bar()));
	mislead();
	dog *= -0.46
}
def TABLE[-101][i] {
	Jon += bar(Arya);
	Jon -= -800.14;
	Ygritte *= 0.6
}
var Jon = rule(destroy(90 / Hodor))
def TABLE[COLS][j] {
	64;
	-( ( COLS - ( protect(x) ) ) )
}
def TABLE[( Jon ) * 490.3333][j] {
	Ygritte += mislead(-( -Stark ) - Ygritte / destroy(Arya,COLS,0.91))
}
def betray(Sansa,Sansa,Ygritte){

}
def TABLE[Sansa][i] {

}
def foo(Ygritte,dog,Jon){
	ROWS * 0.4
}
assert -80 : "Fear cuts deeper than swords."
def destroy(Hodor,Jon){
	if(ROWS / ( betray(COLS,-36 * bar(x,( ( -y ) ))) )){

} else {
	if(ROWS - betray()){
	ROWS;
	if(y){
	Ygritte *= ( 0.23 / Ygritte );
	if(-( ( ( ROWS ) ) + -( -Arya - -0.86 ) - TABLE[( Arya )][rule(-Stark,-rule(( y ),foo(protect(COLS))),protect(rule(TABLE[dog][( TABLE[-1][foo(--0.6)] )] + ( protect() )) - 0.49 - COLS))] ) - 1){
	Hodor;
	x -= y;
	dog /= ----0.93 * ( COLS ) * -( 730.15 ) / 0.01
} else {
	Sansa /= -Jon * ( destroy(TABLE[( -69 )][TABLE[-94][( ROWS )]] - TABLE[x][-890.457],( -( ( betray(destroy(-betray(TABLE[y][ROWS]) + ( COLS ))) ) - Sansa ) ),mislead(betray(betray(mislead(( ( foo() ) ),COLS))),Sansa)) );
	if(-( ( -( bar(-( ( COLS ) ),( 1 )) ) + x ) + foo() )){
	if(( -0.44 )){
	Arya /= TABLE[bar(dog,ROWS,-( foo(-( -COLS / ( ROWS ) ),--TABLE[foo(-( -( COLS ) ),TABLE[-bar(Stark / dog,ROWS,-( -TABLE[x][( destroy() )] ))][-1])][Ygritte / ( -( -( ROWS + -790.223 / -Ygritte + ( ( ( 470.74 ) ) ) ) ) )] + Hodor) ))][dog];
	if(( ( Ygritte ) )){
	if(( ( Jon ) )){

} else {
	COLS
};
	0.18
} else {

};
	if(( 67 )){
	-betray(71 + -Hodor,betray(Hodor,TABLE[( ----0.55 * TABLE[( -1 )][-69] - y )][protect(TABLE[COLS][protect(( -Arya + y ),betray(( COLS ),--( Sansa )))],mislead(Ygritte * Jon * ( -0.44 )),-89)],( -TABLE[TABLE[-71 * 1][( ( COLS ) )] + mislead(( rule(-COLS) + ( --30 ) - 1 ))][-( foo(( --( ( ROWS / -Arya ) ) + Hodor + ROWS * foo(betray(--39,-1),( ( betray(Jon * TABLE[COLS][betray(( TABLE[Jon][COLS] ),-33)]) ) ),( -120.576 )) ),COLS - ( ( 1 ) )) + rule(0.65,-1) / 0.84 ) * foo(Ygritte,( ( ( COLS / y - y ) ) ))] )) - ROWS / 86);
	if(-80){
	bar();
	Sansa
}
} else {
	Ygritte;
	-0.48
}
} else {
	Arya += ( 88 );
	if(bar()){
	-33
}
}
};
	( rule(destroy(ROWS,-Ygritte,--190.5944 + 4),x,( dog )) )
}
}
}
};
	mislead(-y)
}
def foo(x,x){
	Arya -= Jon
}
assert COLS : "Winter is coming"
def betray(Sansa){
	if(TABLE[Ygritte][-1]){
	-57;
	Jon += COLS
} else {
	if(---880.2678){
	dog /= ( ( ( TABLE[betray(-protect(( mislead(6,ROWS) ),( y ),--Arya - ( -0.09 )) / Sansa + 0.01,Stark,-betray(mislead(-foo(protect(),TABLE[-( -( betray(-TABLE[TABLE[( -TABLE[( ( -92 ) )][-Stark * ( 560.04 )] / dog )][ROWS]][( TABLE[destroy(-1,---72,59)][y] )]) ) / dog ) - Sansa][COLS] / ROWS,-Hodor),( ROWS )),x * betray(dog,dog,ROWS),( TABLE[( -( ROWS ) - Sansa / 48 )][y] )))][ROWS] * Jon ) ) );
	x *= dog
};
	if(mislead(Jon * protect(foo(( -x ),-61) + ( foo(-0.62) ) - mislead() * --38),-ROWS)){
	Jon -= 440.57;
	Ygritte
} else {
	if(( -Arya )){
	if(-0.35){

};
	Arya
} else {

}
};
	Stark /= ( foo(-TABLE[-8][0.74]) )
};
	-0.92
}
assert dog : "Fear cuts deeper than swords."
def protect(y){

}
var Jon = ( -( COLS ) + 0.63 )
var Stark = ( --destroy(TABLE[protect(protect(Arya),( ( COLS ) ))][( 1 )],-ROWS * TABLE[rule(( -Arya ) + Stark,y,ROWS)][ROWS]) ) * destroy(COLS,94)
def TABLE[89][j] {
	if(-betray(( bar() ),Arya)){
	if(-ROWS * -TABLE[Jon][bar(-( ( foo(( destroy(0.45) )) ) ) + TABLE[ROWS][( ( -( -0.67 ) - foo(--97 - 490.772,( TABLE[-Stark + TABLE[Hodor][-ROWS]][( Sansa )] ),( betray(protect(-TABLE[1][x]),-58) + y ) - ( ( bar(ROWS,--COLS) ) )) ) )])]){
	Jon -= -0.52
} else {
	Jon -= Jon;
	( Stark )
}
};
	Arya -= -betray(( TABLE[( 0.77 )][rule(-630.7818)] ),TABLE[-TABLE[bar(ROWS)][( COLS )]][( ( -foo(( -betray(--protect(Arya,destroy()) + y / bar(protect(( 52 / COLS + 180.9 / protect(rule(--bar(TABLE[ROWS / 0.73][Jon],( -1 )) / -15,ROWS * -protect(dog) + Hodor - ( 0.83 ) + Sansa)) + ( -1 ) ),mislead(-( mislead(-( TABLE[( --( rule(rule(ROWS,Sansa,Sansa)) ) )][COLS] ),x,TABLE[foo(ROWS,rule(-0.78),-0.53)][Stark] / Hodor) ),ROWS))),--0.12 / ( --ROWS )) ) + ( ( Jon + -0.98 - 480.1 ) ),( --x / ( -( mislead(COLS,-ROWS) ) - bar() ) * -destroy(( -Ygritte ),--0.99,protect(bar())) / Jon )) ) )]) / ( ( -Ygritte ) );
	if(x){
	Stark /= TABLE[57][Hodor];
	if(--( ( ( -240.5549 ) ) )){
	Ygritte -= Ygritte;
	( destroy(Arya,-destroy(-700.866) * ( --dog )) )
} else {
	Jon
}
} else {

}
}
var Hodor = ( dog )
var Sansa = foo(rule(( Hodor ),( ROWS ),( mislead(dog) )),0,rule(dog,mislead(COLS * y,-0.97,Jon)))
assert ( ROWS ) : "Winter is coming"
def foo(dog,y){
	-ROWS
}
def bar(Hodor,Arya){
	-( -TABLE[COLS][COLS] );
	if(TABLE[ROWS][COLS - -Arya * ROWS * mislead(Jon,99)]){
	Stark -= Sansa;
	Ygritte += -TABLE[-ROWS][protect(-0.18,-( ROWS / ( 1 ) * -protect(destroy(0,---300.6455)) * TABLE[0.58][880.138] - -510.48 ) + -( ( -TABLE[TABLE[Ygritte][rule(-( --1 ),-mislead(foo(rule(ROWS),( Arya )),( 1 )) / ( ( -( --Stark - TABLE[( -Hodor * Ygritte ) + ( TABLE[ROWS][-dog] )][foo(protect(ROWS,( -betray(800.5,( ( TABLE[Ygritte][betray()] ) )) ) / protect(protect(Ygritte / -Ygritte,-95)) / foo(--23,( ( ( destroy(TABLE[Arya][-65],-280.007) ) ) ),-bar()) + Sansa * COLS) * --TABLE[ROWS][( ( ( -x ) ) )] / Hodor - ( -0.97 ) * -TABLE[-mislead() / 94][ROWS + ( -0.14 / 360.39 ) - TABLE[Stark][( Jon )]] - bar(Sansa,( ( ( y ) - -840.9 ) / TABLE[( --0.84 )][60] / ( -0.57 ) ),0.16),-betray(---betray(betray(Jon),--0.42),--( Sansa ) - -1,-80))] ) ) ))]][( mislead(( -( TABLE[---COLS][Hodor - Stark] ) ),0.46,( ( ( TABLE[-50.547][y] ) ) )) )] ) ) * ROWS,TABLE[protect(-destroy(ROWS),COLS,destroy(( ROWS ),--TABLE[Ygritte][1]))][( -32 )]) + -bar(-TABLE[COLS][Hodor],ROWS * ( -foo(COLS,TABLE[rule(60.361,ROWS,-0.79)][bar(-x,-1,( TABLE[--78][-( Sansa ) - protect(( -1 ))] ))],-COLS) )) + rule(-16,-49)]
} else {
	( ( TABLE[bar(TABLE[( y )][ROWS],bar(Stark,-TABLE[y][ROWS] * ( -80 ) / -( -COLS )))][Stark * bar(( ROWS ),dog / dog - ( TABLE[bar()][foo(ROWS,590.9)] * -86 ),ROWS) / ( ROWS ) * -49] ) );
	if(Ygritte){
	rule()
} else {

}
}
}
def foo(){
	dog += -TABLE[ROWS][protect() - ROWS] - -destroy(--0.45,TABLE[-0.08][1]);
	Ygritte *= ( COLS ) - ( rule(-( Arya )) )
}
var Sansa = -TABLE[---0.75][mislead(-0.65,( foo(TABLE[Ygritte][1 * COLS] + --( ( Ygritte ) ),rule(mislead(),1,bar(TABLE[580.77][( y ) + ( 15 )],protect(-ROWS)))) ))]
def TABLE[-60.532][k] {

}
def TABLE[0.53][j] {
	-Hodor;
	if(( rule(betray(),( Stark * ( ROWS ) / TABLE[y * destroy(-0.86)][TABLE[protect(ROWS * Ygritte + --ROWS,Ygritte)][TABLE[-92][destroy(( 0.94 ))]]] )) )){
	if(bar(( mislead(TABLE[( -ROWS ) * Ygritte][-0.88],--destroy(),destroy(1) - 39 / TABLE[--x][TABLE[-( rule(-0.51,mislead(-ROWS,-TABLE[1][( -74 )])) )][ROWS * x]]) ) + bar(-ROWS,( -TABLE[-0.93][Arya] ),bar(( foo(-TABLE[( bar(rule() * TABLE[-60][TABLE[rule(y,---( COLS ) + ( ( -1 ) ))][( Hodor )]]) )][COLS] / TABLE[TABLE[Hodor][Hodor + ( 0.73 )] - ( Hodor )][Hodor] / ( -( destroy(bar(83,COLS),0.38) ) )) ),( 1 ),-0.66)),destroy(mislead(ROWS,( ( ( ( Ygritte - -0.52 ) - COLS ) ) ))))){
	if(( ( ( protect(( ROWS ) / TABLE[dog][50.061]) ) ) )){
	Ygritte += destroy()
} else {
	900.233;
	Hodor *= ROWS;
	Ygritte -= x
};
	-Ygritte
} else {
	---TABLE[ROWS][mislead(Sansa,Sansa - TABLE[y][-TABLE[0.01][--betray(94,Ygritte,( COLS )) * ROWS - TABLE[-Ygritte][COLS]] - ( Sansa )]) / -bar(-( ROWS ),--0.44)];
	( -COLS - destroy(mislead(),-mislead(Jon),ROWS + destroy(620.76,destroy())) )
};
	if(--900.71 + -55){
	( betray(y) )
} else {
	Stark /= foo(COLS * Ygritte - -0.17 * bar(-0.44))
}
} else {

}
}
var y = ROWS
assert 0.83 + betray(mislead(Ygritte,2)) - Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(protect(( -0.82 ),x),-1) : "What do we say to the Lord of Death?"
assert -ROWS : "Fear cuts deeper than swords."
def foo(){
	Hodor /= COLS
}
assert 98 / dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.22][k] {
	if(Arya){
	-1;
	( COLS );
	( TABLE[TABLE[ROWS][bar(Arya,ROWS)]][0.44] )
} else {
	if(( --destroy(Jon) )){
	-Hodor;
	Sansa /= Hodor
} else {
	y -= Sansa / ROWS;
	if(-ROWS * foo(-x,-ROWS)){
	dog *= -x;
	( Arya )
};
	if(COLS){
	if(Arya / --foo(( ( -1 ) ) - COLS,-( y ),COLS - -ROWS) * TABLE[dog][Stark]){
	( mislead(( -86 ),foo()) );
	Stark + dog;
	if(-37){

}
};
	dog *= -mislead(57,foo(Hodor)) + COLS
}
};
	Arya /= ( protect(-85 / -Stark,dog,( -0.55 )) )
};
	if(( ( rule() ) ) * ( -( bar(ROWS) ) ) * COLS){
	Ygritte += protect(( Ygritte - -1 ) + ( ( -Sansa ) ),TABLE[28][-430.44] - ( ( Stark ) - x ),ROWS);
	-0.5
} else {
	Jon -= 0.26
}
}
def foo(dog,Hodor,Stark){
	Hodor -= --dog * ( Jon ) / ROWS / -34;
	if(27 + -( -Arya ) + -ROWS - ( ---Stark )){
	-81 * ( ( --11 ) )
} else {
	Sansa /= dog * betray(-0.78);
	y *= ( -330.33 )
}
}
assert -( 0.42 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1][i] {

}
def foo(dog){
	if(TABLE[-680.6965][rule(protect(rule(( mislead(Arya) )),-bar(-protect(),Stark,protect(Sansa))),( TABLE[-( Stark )][-38] ))] / ( rule() )){
	( TABLE[ROWS][ROWS] )
} else {

}
}
var Hodor = 70.9
var Jon = ( bar(( 0.16 )) ) + -0.52 * --ROWS - Hodor
var y = ROWS
def TABLE[TABLE[ROWS][ROWS]][i] {
	if(( mislead(-Jon,TABLE[COLS][( destroy(foo(),-foo() / ( ( ( ( dog ) / Ygritte ) ) / --TABLE[foo(-mislead())][-mislead()] )) )],foo(( ROWS / ---rule(-9,destroy(Sansa,( x ))) - COLS * ( -x ) ),TABLE[( 0.15 * Sansa * mislead(protect(Ygritte / Ygritte)) )][-mislead(ROWS)])) )){

};
	TABLE[protect(( bar() ))][betray(Sansa - bar(destroy(),x),710.728,--25)]
}
def rule(){

}
assert Hodor : "What do we say to the Lord of Death?"
var y = bar(TABLE[-ROWS / ( -15 )][TABLE[foo(-rule(-83 * -Jon,( ROWS / TABLE[1][-TABLE[mislead(-0.41 / 0.16,-78 - -45)][COLS] / -0.18] / ( y ) )) + protect(),foo(( -0.38 )),y)][Stark]],COLS)
var Hodor = ( destroy() ) / -0.98
def TABLE[-y][j] {
	if(x){
	Jon /= TABLE[bar(Jon)][COLS];
	-1 * Stark
}
}
var y = -37
def TABLE[protect(TABLE[TABLE[foo(89 + Jon,betray(rule(--bar(0.19 + foo(-ROWS / TABLE[COLS][( ROWS )],( -ROWS ) / -86)),--dog / Ygritte * ( 1 )),-Stark + Stark) - Ygritte) - -TABLE[( ( TABLE[-TABLE[0.18 * Jon][-( y ) - ROWS]][( rule() ) / Arya] * rule(rule(COLS,-83) - Jon * betray(Ygritte * COLS,--y) * -Arya,TABLE[-47][-630.2]) ) )][8 / COLS]][( Ygritte - Arya / Jon )]][Jon]) + -40 / ( TABLE[TABLE[protect()][rule()]][ROWS] + COLS ) + ( -TABLE[TABLE[( Sansa )][-( COLS + 720.129 )]][-690.6] ) * ( foo(x) )][k] {

}
def destroy(Stark,Arya,x){
	ROWS * TABLE[-0.39][( -420.98 ) + ( ( 0.81 ) ) * TABLE[( bar(Arya - --1,COLS,protect(-1)) ) * 31][foo(-( 0.25 ))]]
}
var Arya = TABLE[Ygritte][--( -rule(Stark) - protect(dog,0.59) ) / protect(( Sansa ) * ROWS + -12) + ROWS]
def TABLE[rule(Jon,( 65 ))][i] {
	betray(( mislead(-Ygritte,0.21) ));
	Ygritte *= ROWS
}
def protect(Ygritte,Jon){
	if(x){
	-( -780.7 );
	if(84){

} else {
	ROWS
}
}
}
assert -( -( ( ( TABLE[ROWS][rule(-0.02 + ( bar() ) / --0.53,0.13 * ( bar(-bar(780.65,bar(( x ),Ygritte,1),Jon),protect(rule(-Jon + --1,bar(( destroy(-1 * ( Hodor - bar(foo(TABLE[COLS + bar() - bar(( TABLE[-0.32 / -COLS][TABLE[( ( 770.793 ) )][Jon]] * -18 * TABLE[COLS][Arya] )) / 500.41][0.56] + ROWS - 48 * ROWS,-1,-0.49)) )) ))) + 14)) ))] ) ) - -( betray() ) ) ) : "Winter is coming"
assert -COLS : "Fear cuts deeper than swords."
assert destroy(dog,foo(--( COLS ) / destroy(-ROWS * ROWS,mislead(mislead(rule(72)))),-39)) : "Nothing burns like the cold."
def TABLE[bar()][i] {
	-TABLE[( ROWS )][ROWS];
	dog
}
assert 30.9 : "Nothing burns like the cold."
def protect(Sansa){

}
assert ( TABLE[-ROWS][Stark] ) : "Fear cuts deeper than swords."
var x = -710.35
var Stark = 81
def mislead(Stark,Stark){

}
def TABLE[-ROWS][i] {
	if(y){
	Sansa += 330.563;
	x /= -20
} else {
	if(-63 * -( COLS )){

} else {

};
	if(0.35){

} else {
	-90
}
}
}
var x = -0.09
var Stark = ( -TABLE[mislead(-0.19) - --COLS / ( bar() )][mislead(Sansa,TABLE[foo(Stark)][y])] / ---COLS * 0.24 / -bar(COLS,TABLE[( 0.33 ) * ( -0.84 ) - protect(-0.46 / 570.1551)][280.3],x) ) - ( bar(( 0.65 ),TABLE[-390.69][protect(( -0.52 ),19)],ROWS) )
def TABLE[Sansa][j] {
	Ygritte += Ygritte;
	Hodor -= --ROWS
}
assert -43 : "What do we say to the Lord of Death?"
def TABLE[-y][j] {
	dog -= TABLE[( -y * ( -1 ) )][y]
}
def rule(){
	Sansa -= ( -ROWS )
}
assert destroy(ROWS) : "Winter is coming"
assert ( 64 ) : "Nothing burns like the cold."
var Stark = -destroy(Ygritte,Arya,COLS)
assert TABLE[ROWS][Stark] * 0.71 : "Fear cuts deeper than swords."
var y = TABLE[-210.622][ROWS]
def destroy(Hodor,Stark){
	-0.71
}
def bar(y,y,dog){
	if(-0.1 / -mislead(COLS,Jon,Jon)){
	-0.09
} else {
	400.558;
	COLS * --15 / TABLE[--COLS][( Hodor )] - TABLE[Hodor][Hodor * Arya];
	Sansa + Ygritte
};
	Jon *= betray();
	if(-TABLE[Stark + 1][( -Arya )]){
	dog *= y
}
}
var Ygritte = protect(( Ygritte - ( 22 ) ))
def TABLE[( ( Arya ) - ROWS ) * bar(-0.31 + ( COLS ),( -0.84 ),( COLS )) / y][j] {

}
assert foo(bar(Arya,TABLE[COLS][0.61 - -COLS],foo(( -destroy(350.32,Arya) ),dog))) : "Winter is coming"
def TABLE[y][k] {

}
def protect(y,x){
	if(16){
	---47;
	if(( COLS )){
	if(( ( -( ROWS ) ) )){
	Ygritte *= ( betray(Ygritte,15 / ROWS) ) + 0.94 - foo(( -0.97 ),Ygritte);
	-COLS
}
} else {
	if(0.38){
	-( y )
};
	if(16){
	if(dog){
	if(-0.84){
	y *= COLS;
	Arya *= TABLE[0.53 + ( -37 )][( Arya )];
	Hodor *= bar(( 0.78 )) * TABLE[-Arya][-98] + ROWS
} else {
	y += Ygritte
}
};
	Ygritte
} else {

}
};
	destroy(280.4895,ROWS)
};
	if(-1){
	if(bar(COLS,ROWS,COLS)){
	Sansa /= ( Stark )
};
	dog /= --dog - -0.02;
	if(-( TABLE[-bar(dog / -Arya - ROWS)][--bar(COLS,y)] - 0.04 )){
	if(-y){
	if(-foo(TABLE[TABLE[Sansa][( -( Arya + 0.27 * TABLE[-0.43][bar(Hodor,COLS)] / 0.24 ) )]][-( -protect(Arya,Hodor,-protect(-( dog ) - x,ROWS,--1 * foo(0.67,( 1 ))) - ( -17 )) )]) + 0.12){
	if(--betray(( --530.39 )) + Sansa){
	0.73;
	if(ROWS){
	if(Sansa){

}
} else {
	rule(0.15 * -ROWS,-Ygritte,Jon)
}
}
} else {
	if(Stark + ROWS){
	Ygritte += ---50.6 / -COLS + ( Stark )
};
	Ygritte /= -ROWS
};
	Ygritte /= -990.3546;
	0.16
} else {
	4;
	if(61){
	protect(( COLS * 1 ),ROWS / ROWS);
	if(( --27 )){
	if(( -17 - -Sansa )){

};
	rule(COLS + mislead(COLS,bar(Stark,-500.215) + ( TABLE[Stark][ROWS] )) * Sansa)
} else {
	if(( 120.4 )){
	COLS;
	betray(( mislead(foo(-0.35),--ROWS,-19) ) * ( 15 / ROWS ),bar(-( mislead() ))) - 0.11 / -foo(560.32 + TABLE[ROWS][betray(( ROWS ))]) - 83
} else {
	-foo(Hodor);
	y -= Sansa
};
	if(-TABLE[Stark][1]){
	Jon;
	Arya /= ( -protect(mislead(0 * y + -12 - COLS),TABLE[( -dog )][dog]) )
} else {

}
}
} else {

}
};
	x += mislead(TABLE[( 72 ) / -( -TABLE[destroy()][( ROWS )] )][rule(( 83 ),-0.48)])
}
} else {
	Jon *= COLS;
	if(betray(TABLE[( ( x * ( betray(y,Arya) ) ) ) + TABLE[-1 - --COLS][betray(--Stark)]][mislead(Jon)],-84)){
	if(( TABLE[( TABLE[Hodor][Stark] - -dog / ( 86 ) + ROWS )][Sansa - dog] + --0.92 )){

}
}
}
}
assert -0.15 : "One can not simply parse himself"
def mislead(Ygritte,Jon){

}
assert TABLE[-40][( COLS ) / betray(-ROWS + Ygritte + protect(ROWS),57)] : "Fear cuts deeper than swords."
var Arya = -TABLE[( -98 )][Sansa]
def protect(dog,y){
	Jon /= ( bar(--( Ygritte )) )
}
assert COLS : "Fear cuts deeper than swords."
def TABLE[( Stark )][i] {

}
var y = -590.2
var Jon = Ygritte
var dog = --( --18 * -1 + betray(-18) * COLS / ( -destroy(TABLE[rule(-TABLE[( ROWS )][( ROWS + Arya )] + ( ( -0.89 ) ))][betray(-( mislead() ),-betray(ROWS,Sansa))],( Arya / dog + 0.77 ) + ( ( TABLE[Ygritte][( foo(-Arya * y,( --65 )) )] ) - protect(rule()) ) / ( rule(ROWS * protect(( ( ( ( COLS ) * foo(mislead(-990.5,Hodor),-Arya) ) ) ),--0.61),Hodor,x) + TABLE[TABLE[-350.8184][TABLE[mislead(-Ygritte)][-TABLE[COLS][( ROWS )]]]][-mislead(-95 + ( COLS ) + -44 - mislead(ROWS,Hodor) * Hodor,COLS,-TABLE[rule(( ROWS ),betray(-7,protect()))][-( -48 )])] ) + Hodor) ) )
def TABLE[protect(840.4,mislead(-0.48))][i] {
	Ygritte /= Sansa
}
def bar(Sansa){
	Jon += Jon;
	if(TABLE[Jon / TABLE[Jon][1]][( COLS )]){

}
}
var Ygritte = -rule(Jon,TABLE[Sansa - TABLE[-y][Jon]][mislead(Hodor)],35)
def TABLE[mislead(ROWS)][k] {
	Ygritte - 1;
	dog /= ROWS
}
def foo(Hodor,y,Sansa){
	dog -= ( x )
}
assert -150.08 : "What do we say to the Lord of Death?"
assert rule(5,-dog + -COLS,ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-betray(---x,protect(ROWS)) * -protect(x,Jon,COLS)][i] {
	if(rule()){
	if(mislead(( y - protect(( bar(Ygritte,dog) ),Hodor) ),ROWS)){
	( betray(-0.34 * Stark) + -mislead(dog,-Hodor) ) / destroy(ROWS) + ( ( ( ( ( ROWS ) / ( -bar(-COLS,foo(--x,TABLE[betray()][-1],440.1) * ( 1 )) ) ) ) ) ) / Jon - rule(COLS,ROWS) * rule(Jon,rule(bar(Stark,-ROWS)))
} else {
	if(COLS){
	Ygritte -= Jon
}
};
	TABLE[( destroy(10.701,-Sansa,24) )][( Arya )]
};
	Sansa /= mislead()
}
assert bar(mislead(),( mislead(COLS) )) : "Nothing burns like the cold."
def betray(){
	Jon -= ( --23 )
}
def TABLE[-0.31][j] {
	if(TABLE[19][-1]){
	if(-1){

} else {
	Arya += Sansa
}
};
	Stark *= ROWS
}
var x = TABLE[TABLE[( Hodor )][( x )] * ROWS][-88] * 56 / Jon
assert TABLE[-( Stark )][0.18] : "One can not simply parse himself"
var Stark = dog
assert foo(mislead()) : "What do we say to the Lord of Death?"
var Arya = 1 + -ROWS
def betray(y,Ygritte,dog){
	if(-34){
	mislead()
} else {
	if(-93){
	ROWS
};
	Jon *= rule(( foo(-Sansa,Arya) ),-x);
	foo(4) / Sansa - TABLE[-0.96 / destroy(Sansa,-( TABLE[ROWS / -1][Stark] ))][( foo(rule(( ( mislead(y,( TABLE[( COLS )][Ygritte] ),bar() / rule(( ( dog ) ))) ) )),-x) )]
}
}
def TABLE[( COLS )][j] {
	-COLS / mislead();
	y;
	y
}
assert x : "Nothing burns like the cold."
assert ROWS : "Winter is coming"
def rule(Stark){
	if(68){

} else {
	Hodor -= foo(-ROWS,foo() * -foo()) / ( COLS * -0.49 )
}
}
def betray(dog,Ygritte){
	Hodor -= x - mislead()
}
assert --310.93 : "Winter is coming"
var dog = Arya - Jon * COLS / Sansa
def mislead(dog){
	if(-0.55){
	Ygritte += 0.78;
	Jon /= --betray(COLS + Sansa) + bar()
} else {
	dog *= x;
	if(( dog )){
	if(TABLE[Ygritte][-0.69]){
	if(ROWS){

} else {
	if(--protect(ROWS,destroy(-( betray() )) / ( 1 ) / ( 50 ),ROWS)){

};
	Ygritte -= -TABLE[TABLE[-82][dog]][y] * ( -39 )
};
	0.27;
	if(( destroy() )){

}
} else {
	Ygritte *= -0.02 / ROWS - Hodor;
	if(TABLE[-COLS][-( -0.65 - betray(--460.76) )]){
	-820.1;
	Jon -= COLS;
	Jon *= ( ( --( ( 450.1551 ) ) ) )
} else {
	if(foo(-x - bar(rule(TABLE[-55][ROWS]),-1) + Stark - --0.3 / TABLE[rule()][-( 240.02 )] - foo(destroy(--destroy(Stark,x,-ROWS / ROWS / 26) / ( -TABLE[mislead() / ( ( --rule(( -17 ),bar() * x) ) )][y] ) * ( foo(ROWS,Arya,( 55 )) )),80) + Hodor,0.51)){
	COLS;
	Hodor *= COLS
} else {
	( COLS )
};
	if(( rule(protect(Hodor,foo(dog),-800.87)) + COLS + COLS )){

} else {
	( -620.53 )
}
};
	ROWS
}
} else {
	destroy(bar(Stark * Stark + ( Hodor ))) + ( Jon + COLS );
	if(protect(-Stark * ( -98 ),TABLE[--y / bar(( x ) - -46)][( bar(COLS,ROWS) * Sansa )])){
	Jon -= 0.35;
	ROWS;
	TABLE[-1][Hodor]
} else {

}
}
}
}
assert y : "Nothing burns like the cold."
def TABLE[betray(0.56)][i] {
	if(Ygritte){
	Ygritte;
	x += 47
};
	-20.5
}
def foo(x){
	Arya;
	-ROWS / -( protect() )
}
def TABLE[-0.4][j] {
	COLS
}
assert destroy(-ROWS,-Ygritte) : "One can not simply parse himself"
def protect(Ygritte,Sansa){
	x;
	Arya /= dog
}
def foo(dog){
	x /= ( 40 )
}
def destroy(Sansa,Stark){
	--foo(( ROWS ) + COLS + foo(),COLS);
	if(( ( 530.17 ) )){
	if(-TABLE[destroy(-25,( 0.49 / -TABLE[--TABLE[Stark][destroy(mislead(ROWS,-52),ROWS)]][1] / -0.9 / COLS ))][mislead(-290.3953) - COLS + -y] / betray(( protect(-6) ),( ( -79 ) )) / protect(-( -y ),ROWS,--Jon / TABLE[protect(COLS,protect(-bar() * -ROWS,-0.44) * 45,( --0.4 ))][ROWS])){
	y /= ( TABLE[-1][( -TABLE[TABLE[( ( --1 + -1 * 1 ) + Arya )][destroy(( foo(ROWS - -( ( Arya - ( Stark ) ) ) / Sansa,( ROWS ) * mislead(( -46 / -Sansa ) - Arya,y)) + -y - -rule(TABLE[COLS][-52 + -7 / bar(TABLE[COLS][betray()],bar(( ( 1 ) ),54)) / ( protect(-TABLE[protect()][( Arya )],ROWS,-66) - dog * Ygritte )]) * x * COLS ),Arya,( -0.94 ))]][foo()] )] + ---80.5266 * y * COLS ) * destroy(Jon);
	if(foo(Ygritte - -0.86)){
	Arya += ( ( ( TABLE[-y][x] ) ) );
	Arya -= rule(0.35,870.128,( ROWS ))
}
};
	bar(-y)
}
}
def rule(){
	y /= TABLE[710.32][ROWS] - -y;
	Stark += -0.62
}
assert ( Sansa ) : "What do we say to the Lord of Death?"
def bar(Hodor,Jon){

}
assert ( Stark / 310.711 ) : "What do we say to the Lord of Death?"
assert COLS : "One can not simply parse himself"
def mislead(){
	-rule(protect(ROWS,-Hodor - ( Stark )),--1,0.75) * rule(-COLS,COLS + --0.17,( bar(-( -Jon ),ROWS) ));
	if(protect(Hodor)){
	if(destroy(-COLS,( bar(TABLE[( TABLE[--destroy(1)][-mislead(foo(0.31),ROWS + ( -86 )) - -betray(COLS,ROWS) - x] )][betray()]) + ( ( ROWS ) ) ))){
	y;
	y -= -230.28
} else {
	Ygritte /= Hodor;
	Hodor /= 1;
	y /= ( y )
}
};
	if(-1){
	dog
} else {
	Sansa /= ROWS;
	Sansa *= -1
}
}
var Sansa = -550.13
def mislead(Jon,Ygritte){
	if(( bar() + -( TABLE[TABLE[dog][-mislead()]][( -Ygritte )] ) ) + -ROWS + Arya){

};
	if(Ygritte){
	Arya *= foo(-bar(( foo(ROWS,1) )),ROWS * -64)
} else {
	if(rule(( ROWS ) / -25,-COLS,46)){
	dog /= -( foo(( Hodor * -0.37 ),91,-0.04) ) / 60;
	if(rule(mislead(Hodor))){
	x *= -94;
	Ygritte -= -22;
	if(( ---0.19 + ROWS )){
	( -ROWS );
	COLS
}
}
} else {
	Hodor *= -ROWS
}
};
	-0.27
}
def foo(Ygritte,Stark){
	y -= COLS * ROWS;
	Jon *= -destroy(x / mislead(( dog )),protect(---Stark * ( -520.885 ),mislead(ROWS,Stark * bar(-betray(-( rule(ROWS,( 0.96 )) )) + Arya,TABLE[Hodor / -1][( dog )]) + ROWS,TABLE[--1][-COLS + -x * ( 0.89 + x )] - COLS - Hodor)),destroy(Sansa,COLS))
}
assert -1 - protect() : "Winter is coming"
var Stark = TABLE[-48][ROWS]
def TABLE[-rule(betray(( TABLE[-Stark * Ygritte - mislead()][ROWS] ),-x))][i] {
	Jon += foo(-COLS,destroy() * Hodor) + Arya / --x * ( -destroy(Hodor) ) / ( ( destroy() ) ) + -ROWS - 0.71 - ROWS + -0.18 * Sansa;
	Sansa *= -( 0.41 )
}
def mislead(Arya,Arya,Hodor){

}
def rule(Hodor,Hodor){
	if(( ( TABLE[( ROWS )][96] ) ) / TABLE[-69][-0.53]){

};
	if(TABLE[ROWS][--1]){
	COLS;
	Stark -= destroy()
}
}
def foo(Jon){
	-Ygritte;
	if(TABLE[( 740.56 )][( ----ROWS / bar() )]){
	rule(( foo() ),( ( TABLE[Hodor][0.47] ) ));
	y += rule(TABLE[-Stark][bar(( foo(TABLE[-ROWS][--870.04],( ( ( dog ) ) )) ),-COLS,TABLE[--1][ROWS])]);
	Stark *= -410.0254
} else {
	( betray(( --88 )) );
	if(ROWS){

}
}
}
def mislead(Arya,x){
	mislead(-dog,( -32 - destroy(ROWS) ));
	Sansa /= -dog
}
assert -0.24 : "One can not simply parse himself"
def rule(Stark,Ygritte){
	if(( ( protect() ) )){

} else {
	Ygritte /= COLS;
	-44
};
	( -( ROWS ) )
}
def TABLE[--0.63][j] {

}
def foo(Sansa,y){

}
assert ----rule(( COLS ),mislead()) : "One can not simply parse himself"
var Arya = COLS + -0.22
def protect(){
	if(-mislead(-890.135,COLS)){

};
	if(rule(Arya)){
	if(ROWS){
	Arya *= -COLS;
	dog += ROWS;
	if(x){
	Sansa *= 430.01;
	-0.68
}
};
	if(39){
	Hodor -= bar(y)
};
	if(Jon){
	if(-44){
	if(1){
	dog /= protect(-TABLE[-COLS / 77][bar(mislead() + 0.33,ROWS,( Ygritte + protect(-0.71) ))],ROWS + COLS - --destroy(-dog * COLS - ( ROWS ) + ( ( ( foo(--1,( -45 )) ) ) - 240.804 ),( ---Ygritte )) - -430.978);
	y /= TABLE[COLS][COLS * Stark]
} else {
	if(1){
	-ROWS;
	-1;
	if(-1){
	Jon -= ( -( TABLE[-9][Ygritte] + -69 * COLS ) / 0.6 );
	if(-0.4){

} else {

}
} else {
	Stark += protect(x,protect(COLS,( Jon + bar(ROWS) )) - x) + TABLE[-0.66][1]
}
} else {
	if(-0.36){
	39;
	-420.96;
	x += ROWS
} else {
	Hodor
}
};
	-mislead(COLS)
}
} else {
	-COLS;
	COLS;
	( ( ( y ) ) )
};
	-( --990.46 )
} else {
	Jon /= mislead();
	if(x){
	Hodor *= COLS;
	Jon += ( protect() );
	if(-0.09){
	0.45;
	if(-0.28 + ( ( -0.45 ) ) + betray(( ROWS ),Sansa / Arya)){

} else {
	Hodor - COLS * ( rule(20) ) / -( rule(-66 + ROWS / Arya) ) / COLS + -Ygritte;
	if(foo(protect(( ( bar() ) ),( ( -0.11 ) )),protect(),( COLS ) + ROWS)){
	x
} else {
	Arya - rule(destroy(-34) / ( -( ( ( TABLE[-0.37][bar(ROWS,ROWS)] * -1 + -( ROWS ) ) ) ) + -1 + ( Sansa ) ),--COLS + 78 + bar(Jon + 97,( protect(bar(-0.14)) ) * -3,( 0.59 )) / 87)
}
};
	Sansa *= COLS / dog
}
} else {
	if(mislead()){
	Hodor -= betray(Hodor);
	( TABLE[COLS / betray(( Stark )) - Sansa / -bar(betray(( y ),( mislead(-0.36,destroy(mislead(),-dog)) )),-1)][-ROWS] )
} else {
	bar();
	( 95 / ( 0.91 ) )
}
}
}
} else {

};
	y *= ( -( protect(--0.13,0.99) / --37 ) - -( ( destroy(0.93,ROWS / dog + x * 1 + bar(-0.62),( 1 )) ) - -0.82 ) )
}
def TABLE[y][j] {
	if(bar(Arya,75)){
	if(ROWS){
	Jon += -( -ROWS + -COLS + ROWS ) - -dog + ( 1 ) - protect(foo(TABLE[Jon][Hodor] - Ygritte / ( ROWS ),bar(( destroy(( -13 )) - 0.76 ) + ROWS + ROWS) / -1),Jon) + foo(( betray(TABLE[( -COLS + ( -TABLE[-Ygritte][ROWS] ) )][ROWS]) + betray() ),betray());
	Jon *= betray(-0.62 / COLS)
} else {
	( ROWS ) * 680.7 * -destroy(COLS,( ( Arya ) ));
	if(COLS){
	-0.58 / ROWS;
	Stark *= TABLE[( ( -Ygritte ) )][dog];
	Hodor -= Ygritte
};
	Jon -= 0.91
}
} else {
	Arya *= --bar(--( ( -0.79 + --1 + COLS ) ),COLS,( -1 ) + ( -710.11 ))
}
}
var Arya = -destroy(( -40.73 ))
def destroy(Sansa,Ygritte){
	TABLE[( -1 / dog )][rule(Stark,destroy(-protect(( --dog ),-730.213,( Sansa ) * 0.36),1) + ( ( -rule(Ygritte,Stark,0.08) ) ))];
	if(bar()){
	protect(0.81,ROWS) + -( -0.25 )
} else {
	TABLE[( 62 )][( Arya )];
	TABLE[destroy() + ( rule(( ROWS - rule() + 540.52 )) )][950.398] * -34
}
}
def destroy(Stark,Jon,Jon){
	bar(300.0012,-( --12 / -730.526 * -betray(-( Hodor ),COLS,( rule(--33 / ( ( Hodor ) / x ) * -betray(rule(( betray(x,ROWS) + TABLE[0.9][destroy(( ( y ) ),y,( TABLE[COLS][0.01] ) - -( ( destroy(protect(17,x,betray(-0.06 * 0.91,TABLE[-1 / 0.2][-( COLS )],( mislead(TABLE[Hodor][( ROWS )],Sansa) )))) - ROWS + bar(-28) ) ))] + -1 ),rule(),COLS),bar()),80 * -1 * Ygritte) ) / ( ROWS )) ),ROWS);
	-Arya
}
var Arya = -COLS
var Ygritte = TABLE[-1][-0.72]
def TABLE[ROWS][i] {
	Jon *= bar(bar(-1,-mislead(Hodor))) + TABLE[Sansa][47];
	Hodor -= ( Stark )
}
def TABLE[x * mislead()][j] {

}
var Jon = ( foo(ROWS) )
assert ROWS : "Winter is coming"
def TABLE[500.33][k] {
	Hodor += -Stark;
	Sansa -= ( bar() );
	if(-TABLE[Stark][ROWS + COLS] / Arya / ROWS){

}
}
def TABLE[TABLE[0.94][bar(-TABLE[0.41][TABLE[ROWS][TABLE[-x][-47]]] - -0.81,( mislead() ) / protect(960.05) - -( rule(Sansa) ) / ( Stark ))]][j] {
	if(-TABLE[0.12][rule(--0.39,0.94,-foo(-990.781) * 0.9 * ( 5 ))] - ( rule(destroy()) / -0.24 )){
	Jon -= 95
}
}
var Sansa = 1
def TABLE[destroy()][j] {
	( ( 590.842 ) )
}
assert COLS : "Nothing burns like the cold."
assert protect() : "One can not simply parse himself"
var Stark = ROWS
def TABLE[betray(-destroy(( COLS ),-0.19))][k] {
	y += Hodor
}
assert Ygritte : "Nothing burns like the cold."
def destroy(x){
	if(Ygritte){
	if(y){
	if(destroy(-0.57,( 0.17 ))){
	if(bar(dog,destroy(( -( ROWS ) ),--0.78,-Hodor),21) - 0.13){
	if(-0.55 - mislead(---1 * -( betray(-( ( ROWS ) ),rule(Hodor)) ) + rule(( -ROWS - TABLE[( TABLE[-TABLE[-1][-0.56] - mislead(COLS,29,COLS)][ROWS] ) + ROWS][COLS] ),destroy(---Stark,-COLS) * 0.32,Jon),dog)){
	Arya *= 1 * rule(Ygritte)
} else {

};
	if(protect(Stark,TABLE[COLS][rule(( mislead(ROWS) ))])){
	( 7 + 54 ) + ( bar(mislead(mislead(( Jon )),1)) + bar(Arya) ) / ROWS
};
	if(x){

}
}
};
	--( -1 ) + ( ( 0.92 ) )
} else {
	-47 + 1;
	Arya += ( -0.17 )
};
	-destroy(( y )) - ( Arya / ( -0.51 * --bar(COLS) + -TABLE[betray(x,rule(( Arya )),y) - foo() + betray(( -( COLS ) ))][x] ) - -Stark )
} else {
	Hodor += -61 / -( COLS ) + ( ROWS ) / ( dog ) + TABLE[( ROWS )][0.75]
}
}
def TABLE[rule(-( protect(COLS) ),-90)][i] {
	if(-24){

};
	Ygritte *= ( -0.8 - mislead() * 1 * -bar(dog,bar()) * 580.2 )
}
def TABLE[TABLE[mislead(protect(destroy(( mislead() ),-ROWS),-80.006,-0.08) / -TABLE[( bar(destroy(-17,TABLE[( Ygritte )][--28] / ROWS)) )][rule(( COLS ) / rule(( TABLE[-bar()][---820.483 / 58] )))])][( -99 )]][k] {
	Arya -= ( Jon / --TABLE[Stark][destroy(-4,COLS,dog)] );
	--70 + bar()
}
var Stark = --( ( ROWS ) )
def betray(){
	Sansa /= foo(mislead(1 - COLS / -0.37 / -1,70,Stark) * -----1) - ( 0.73 - -56 )
}
assert protect(-COLS,mislead(-y,mislead(( ROWS ),betray(Ygritte,( -0.22 ) * y)))) : "Fear cuts deeper than swords."
def destroy(Stark){
	if(590.4){
	x *= protect(bar(protect(93,-( TABLE[--COLS * betray(ROWS,( Arya ))][COLS] )),TABLE[-destroy()][TABLE[COLS + x][Hodor]],3));
	if(protect(destroy(Stark))){
	-COLS;
	if(-betray(-1,0.94) * foo(bar(-y,COLS)) + -1 - COLS){
	x -= ROWS - COLS;
	if(dog - Sansa){
	if(-( ROWS )){
	y += 1;
	if(1){
	Ygritte *= betray(Sansa,-foo(Sansa,bar(( 480.678 ),Jon) - Arya) + dog - 0.96)
};
	-97
};
	Jon -= foo(TABLE[ROWS][bar(-( ( destroy(-0.59,protect(( destroy(protect()) + destroy(( -x / 0.88 ),-COLS) ) / 1,950.28) - dog) ) ))])
} else {
	ROWS
}
}
} else {
	if(-63){

} else {
	x /= -destroy(-3) - Sansa * ( Ygritte + x );
	if(520.0351){
	if(( ROWS * ( -0.34 ) )){
	Sansa -= TABLE[-dog * -COLS / bar(80) * ---0.08 + -1 - -COLS + Hodor / -( -ROWS ) - Arya][-0.65];
	y += ( ( --75 ) )
} else {
	if(ROWS){

} else {
	dog *= ROWS;
	y /= bar()
};
	Stark
};
	y *= destroy(x,( Ygritte ) - -TABLE[( destroy() + -dog * Sansa )][Jon])
} else {
	Sansa += Hodor;
	mislead(y,690.9);
	if(0.59){
	dog -= ( TABLE[Ygritte][destroy(Stark + ROWS,protect(( ( ( COLS ) ) )),--Arya)] )
} else {
	if(--95 + COLS){
	if(ROWS){
	if(0){

} else {

};
	if(( destroy(COLS) ) + x - --0.74){
	if(-TABLE[bar(( COLS ),-( destroy(-( -bar(-0.4) )) ))][-0.13]){
	Ygritte *= ( 0.04 );
	if(ROWS){
	x /= ROWS
}
} else {
	Ygritte *= -COLS
};
	dog += ( y );
	COLS * -77
} else {
	if(---0.1){
	bar(( x )) + betray(TABLE[Stark][Arya * Hodor * ( Ygritte * -0.15 )])
} else {
	Arya *= 96;
	( COLS );
	COLS + COLS - -81
};
	Arya
};
	110.79
} else {
	Arya -= -120.209;
	dog *= ( -TABLE[foo(ROWS,0.48 * -630.578,( mislead(ROWS,Sansa,COLS) ))][COLS] );
	Sansa *= dog
};
	if(--ROWS){
	if(y){
	if(dog){
	Hodor += TABLE[rule(COLS,bar(1))][--1 / Stark];
	if(( Jon )){
	if(34){
	Jon += protect(( rule(TABLE[-840.2151][70.455]) ),-92)
}
} else {

}
};
	if(ROWS){
	Sansa += -rule(TABLE[-Ygritte][y * ROWS],-0.2) * TABLE[foo(betray(),destroy(TABLE[( destroy(-0.81 + -67) )][TABLE[--1][( ( betray(-( 93 ) - destroy() + Arya,970.144,-COLS - dog) ) )]]))][Stark] + TABLE[-( -ROWS )][ROWS];
	-1 - 0.34
}
};
	betray(COLS,COLS * protect(COLS,0.92)) - ( -TABLE[bar(( betray(( ROWS ) / COLS) ),dog)][COLS] )
};
	Jon -= rule(-( ( -TABLE[( Arya ) * 79][86] ) ) - TABLE[COLS + -0.66][-rule(( mislead(TABLE[rule(dog,bar(Hodor,( COLS ),-Sansa))][COLS],dog) ))])
} else {
	if(ROWS){
	-( TABLE[270.8][-Arya] ) + rule(y);
	if(TABLE[-66][-1]){

} else {

}
};
	Jon *= x;
	if(TABLE[( destroy(y) )][0.87]){
	Jon /= -84
}
};
	570.75;
	Jon
}
};
	Jon -= -( TABLE[1 / mislead(y / ROWS)][( rule(foo(x),( dog )) )] )
};
	Sansa -= ROWS + bar(-Jon);
	-( 190.836 ) * -bar(destroy(COLS))
}
} else {
	foo(-bar(destroy(x,ROWS),-( TABLE[-TABLE[-COLS][-17 * Jon] / -COLS][Sansa] ),Hodor) / -70,betray())
};
	( ( -y ) )
}
assert protect(ROWS,-11,( ROWS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][i] {
	Arya;
	if(Hodor){
	if(--32){
	betray()
} else {
	if(COLS){

};
	if(( -180.49 )){
	if(Ygritte){
	-100.7351 - foo(0.21)
} else {
	if(49){
	x *= 1;
	Ygritte
} else {
	if(ROWS){
	if(x * ( ( ( 7 ) ) )){
	Sansa -= ROWS;
	-Hodor
} else {
	if(-0.17){
	if(( mislead() - -Stark - 0.92 )){
	if(-destroy(rule(TABLE[Jon][-foo(-TABLE[COLS][-1 + --1 - dog])],bar(COLS,0.77)),COLS,-0.02 + Sansa)){
	if(29 * 0.49){
	TABLE[( ROWS ) - 0.16][-0.94];
	Ygritte += Hodor
} else {
	if(bar(-30,TABLE[0.52][Jon])){
	Stark /= -( COLS ) - --88 / --1 * ( Hodor )
} else {

}
};
	Sansa -= ( ( 1 ) * 90.7 );
	89 * 1
}
};
	protect(( mislead(( -dog )) ),Sansa)
};
	dog += -COLS
};
	if(mislead(betray(--( -0.91 ) / Stark * y / -30,COLS))){
	Hodor += ROWS;
	Arya + Stark
};
	if(-( TABLE[0.37][COLS] )){
	y
}
} else {
	( Sansa * 2 * 29 )
};
	if(COLS){
	if(( rule(---0.83) )){
	50;
	Sansa -= 0.63;
	if(destroy(mislead(-COLS))){
	Sansa -= -Jon;
	x += ( Jon )
} else {

}
} else {
	Sansa -= rule(87,x,52);
	if(bar(rule(80,-TABLE[TABLE[( TABLE[-0.8][TABLE[ROWS][-dog + ( COLS * Stark )]] - TABLE[x - -0.27][ROWS] )][( TABLE[70.878][-( rule(65,( rule() ),foo()) )] )]][( Sansa ) / Sansa] * -( foo() ),x),COLS)){
	if(TABLE[-85][bar(-1)]){
	if(-44 - 82){
	( TABLE[0.02][-( Jon )] );
	if(betray(-( 0.81 ),foo(betray()),COLS)){
	-TABLE[betray(( mislead(( -x )) ),destroy(-50 + Jon + bar(),TABLE[dog * Jon][-43]) + -ROWS * -1 - ( bar(dog,COLS,0.19) ))][--bar()]
}
};
	x
} else {

}
};
	if(( Stark )){
	if(Arya){
	if(rule(Jon / -1,0.54,mislead(-0.49 + -( -dog )))){
	COLS;
	if(mislead()){
	1
}
};
	Stark -= -25;
	-betray(1,( -( foo() ) ),--32)
};
	if(TABLE[950.804][-58]){

};
	Ygritte -= ROWS
}
}
} else {
	if(COLS){
	if(rule(mislead(-970.06 * x,Jon / -40,Jon) - rule(-Stark,-86 - foo(-( -TABLE[-COLS][foo(Sansa,--ROWS) * ROWS * ( y ) * -TABLE[y][COLS]] ),-0.2)),( foo() ))){

}
} else {
	Jon -= TABLE[-Ygritte][TABLE[--ROWS][destroy(betray(Sansa,bar(-( ( -11 ) ) + -( COLS ),-foo())),Arya)]]
}
};
	Sansa -= ( Sansa + TABLE[( Hodor ) + ( mislead() )][---destroy() * -69] )
};
	if(y){
	if(1){

} else {
	Sansa /= betray(-( dog ),( ----y ))
};
	bar(ROWS,Ygritte,-0.69);
	-y
};
	if(--( -100.069 )){

} else {
	Arya;
	if(Hodor){

}
}
};
	Ygritte += -ROWS / COLS - ---bar(( ( --Jon ) - 140.104 ),rule(mislead(1 / TABLE[ROWS][y]) / Arya,38,-77)) * x * -73 / ( ( --( --25 ) ) ) / -TABLE[-0.3][Sansa]
} else {
	protect(0.55);
	Arya /= foo(TABLE[TABLE[( COLS * TABLE[45][-( destroy(TABLE[protect(Jon,-170.0974)][COLS] - COLS / betray() / Jon) )] )][ROWS]][( Sansa )] * --1 - foo(1 - Hodor + -85),( mislead(COLS,Hodor,-0.86) ))
};
	dog * TABLE[0.36][0]
}
} else {
	Jon *= bar()
};
	Arya -= 0.44
}
def bar(Arya,y){

}
def foo(x){
	if(( -1 )){
	x *= ( Jon );
	-1
};
	Jon += ( ( 32 + rule(Sansa,-Ygritte * --Sansa) ) )
}
assert ---0.43 - -betray(-foo(( ( ROWS ) * destroy(mislead(COLS - -( 0.53 ) * betray(foo(protect(COLS * destroy(Hodor),-640.217,x)),-COLS,( Sansa )) - foo(( 0.32 ),dog,( 0.24 )),Hodor / foo(),TABLE[-85][ROWS])) ),Arya) + y,( TABLE[bar(TABLE[( rule(--0.83 + Stark) )][x],( rule(Ygritte) ))][mislead(mislead(( TABLE[-TABLE[Jon][Ygritte]][COLS] ),-( -( betray(Sansa,0.31,( ( TABLE[ROWS][foo()] + -0.11 ) )) ) )))] ),foo()) : "One can not simply parse himself"
def TABLE[TABLE[2][COLS]][i] {
	if(-10){
	dog *= -Stark
} else {
	x /= ROWS
};
	---91
}
var dog = betray(1,Arya)
def destroy(){
	if(-mislead(Ygritte - --0.87 * ( ( -( ROWS ) ) ) + -COLS,ROWS,Sansa)){

};
	Sansa *= -91
}
var Ygritte = ROWS
def TABLE[COLS + protect(COLS) / ( -( x ) + 980.2596 + -310.41 )][k] {
	if(( TABLE[Hodor][Stark] )){
	if(( COLS )){
	if(( ( 1 ) )){
	Hodor /= mislead(-1 - foo(),1) + 1 * -rule(-0.87,-COLS);
	-Ygritte / --( Jon ) * -COLS - y
} else {
	Stark *= Sansa
}
} else {

};
	40.7;
	mislead(-( -24 ))
} else {
	if(-0.4){

} else {
	-0.43;
	if(-0.35){

} else {

}
}
};
	dog += COLS
}
var Stark = x
assert -COLS : "Fear cuts deeper than swords."
def protect(x){
	Sansa += ( -0.79 )
}
var dog = 0.94
def destroy(dog,Ygritte,Sansa){

}
var Arya = Stark
assert bar(23) : "Fear cuts deeper than swords."
var dog = -1
assert ( x + -72 - -0.29 - ( destroy() + --betray() ) * 1 / 360.99 ) : "Fear cuts deeper than swords."
var Arya = 1
assert -( destroy(COLS,( dog )) ) : "What do we say to the Lord of Death?"
def protect(Jon){
	Stark /= Sansa;
	Ygritte *= COLS
}
def foo(Sansa){
	dog
}
assert -betray() * -TABLE[bar(-rule(),-1,bar(( COLS )))][COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = rule(-53,-betray(( x ),72 + -6,( Stark )) / x)
assert -0.07 : "Nothing burns like the cold."
assert y : "Winter is coming"
assert 53 * ROWS : "Nothing burns like the cold."
def TABLE[---1][k] {
	Ygritte *= ( Ygritte + -0.87 )
}
var Jon = -( -betray(-mislead(rule(( 1 )))) )
var Ygritte = ( x )
def TABLE[-foo(-0.09 * -0.92 * x,( ROWS ))][i] {
	if(COLS){

};
	bar();
	--y - 1
}
def betray(dog,Jon){
	if(-1){

};
	if(mislead(mislead() + -1,y)){
	if(( -( y + -100.3 ) )){
	if(-21){
	TABLE[-rule(TABLE[-0.64][TABLE[TABLE[ROWS][-ROWS]][TABLE[TABLE[destroy(( Sansa ))][-22]][COLS] * ( TABLE[--0.63][TABLE[mislead(destroy(( -Sansa )),( ( protect() ) ),( -1 ) + TABLE[TABLE[( ROWS )][( ( ( -Hodor ) ) )]][-foo(bar(( betray(COLS,( ( ( mislead(( ( protect(Sansa,--dog * betray() / foo(-dog + ( ( Sansa ) ),foo(dog,mislead(0.91,-1,Jon)) / Jon) - dog) ) )) ) ) )) ),960.8),( y )) * Jon - y] / -0.91)][mislead(protect(--88),Ygritte)]] )]],1)][Stark];
	Arya;
	Stark += -1
}
};
	Jon += mislead(-( Arya ) * TABLE[mislead(-860.7819,ROWS)][Jon],Arya)
} else {
	Jon * COLS / TABLE[( -81 )][( COLS )];
	if(Jon){

}
};
	Stark -= Hodor
}
assert 80 : "Winter is coming"
var Hodor = -( -7 - TABLE[( -TABLE[Stark][ROWS] )][protect(Arya,-foo(-TABLE[2][foo(( COLS ))]) - 0.72)] )
var Stark = -1
def destroy(Stark,y){
	Stark -= -5;
	Hodor += destroy(-( COLS ),TABLE[x][-ROWS]);
	--mislead(11)
}
var Jon = rule(ROWS)
def TABLE[-( COLS * ( TABLE[dog][( 0.32 ) + ( 64 / Ygritte / protect(( -ROWS )) * Ygritte ) / y] ) + betray(mislead(Jon),x) )][k] {
	if(COLS){
	dog -= dog
}
}
def TABLE[ROWS * rule(Sansa,x)][j] {
	COLS;
	Stark *= ( dog )
}
def foo(Hodor,y,Sansa){
	Ygritte -= TABLE[-791][TABLE[destroy(87,dog)][( 0.98 )]];
	if(Jon){
	if(y){
	Sansa;
	if(-( -40 )){

} else {
	if(650.2){

};
	dog -= -( ( -( TABLE[x][destroy(( COLS ),-TABLE[--Hodor][Arya]) * -86] ) ) - ( ROWS ) * -( destroy(rule(-Sansa,1,Arya) / TABLE[COLS][-x] + -83 - ( ( ---x ) )) ) );
	bar(--protect(protect(destroy(-0.65,y,rule(740,mislead(-mislead(( 1 ))) + ROWS - -820.329 * TABLE[( Stark )][1 * betray(protect(),destroy() / TABLE[rule(--0.28,x)][--( -ROWS / TABLE[-mislead(Stark)][protect(( Jon ) / TABLE[( ( mislead(y) ) + -( -730.1005 ) / -0.05 )][0.46],protect(-0.36,dog,( -rule(0.78) ))) + Hodor - -( --58 )] )],foo(( -90 ),-betray(ROWS) * 67))]))),Sansa))
}
} else {
	dog *= ( -0.38 )
};
	Sansa /= mislead(protect(mislead(( -( -destroy(--( 0.39 ) * Ygritte,( Hodor + -rule(destroy(( Stark )) + Sansa) )) ) ),destroy(Sansa))))
}
}
def foo(){

}
var x = ( Arya + ---Ygritte / 0.83 * COLS )
var Ygritte = ( --( TABLE[x * destroy()][TABLE[destroy(COLS,ROWS,8 - protect(betray(COLS,-2)) - -0.92)][( -( Stark ) / -54 - ( -77 ) )]] ) )
def rule(x,Arya){
	if(destroy(( -89 ) - -y)){
	Stark;
	ROWS
} else {
	if(y){
	x
};
	TABLE[ROWS][y] * -TABLE[( mislead(Ygritte) )][TABLE[( rule(TABLE[dog][Ygritte] + foo(-rule(0.86,( ( -88 ) ),Jon) / Jon - TABLE[( Jon )][COLS] + ( ( dog ) ))) )][ROWS / -Ygritte] / betray(TABLE[-42][TABLE[--24][COLS]],Hodor - 64)]
};
	Jon *= -( betray(1) );
	( ( destroy(--1) ) )
}
assert TABLE[80][( dog )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[dog][k] {
	dog /= --protect(( COLS ),( -0.86 )) + mislead(TABLE[--y][destroy(-720.4149,-1 + ( ( -( ( ( Hodor ) ) ) + TABLE[TABLE[0.86][-protect(1,-92)]][( TABLE[Arya][----Ygritte] )] * ROWS ) / ( foo(Stark,Sansa) ) ),-90.33)],10)
}
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[Arya][i] {
	if(ROWS){
	Jon -= rule(-ROWS + y)
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[Hodor][k] {
	Arya -= TABLE[mislead(-betray(-18) * 52,-x)][-1];
	-0.99;
	if(Stark / 98){
	if(destroy()){
	if(-( destroy(0.85,COLS,( destroy() )) )){
	Sansa *= destroy();
	( -( Arya ) ) + Arya
} else {

};
	Stark /= -1 / dog
};
	y /= -7
}
}
var y = -74
def rule(Sansa,Hodor){
	( betray(-( ---64 ),1) ) * -COLS
}
var Ygritte = protect()
assert bar(mislead(ROWS - 75) / betray(100.834,-( --34 )),1 / bar(--0.71 - Jon)) : "Nothing burns like the cold."
def destroy(x,Ygritte,dog){
	if(Stark){

}
}
def mislead(){
	-1;
	-1
}
assert TABLE[foo(Arya,-y)][( ( Sansa + 630.97 ) )] : "Nothing burns like the cold."
def destroy(Stark,Hodor){
	Jon *= foo(y,84 + foo(foo(protect())))
}
def TABLE[betray(betray(),COLS,-1)][k] {
	Jon /= Sansa;
	rule(COLS / foo())
}
var Ygritte = Stark
assert ROWS : "Winter is coming"
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = 0.86
var Jon = --0.43
def TABLE[( ( -ROWS ) )][k] {

}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ( -protect(Sansa) )
assert ( Hodor ) / ( Jon + ---97 * ( rule(-mislead(( 0.79 ),Stark)) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Hodor,y){
	dog /= ( -1 )
}
def TABLE[destroy()][j] {
	if(COLS){
	Ygritte += -Jon;
	if(TABLE[0.04][Arya]){
	---0.27 + ( -TABLE[rule(TABLE[--86 + ( foo(1,destroy(0.77,Arya,( destroy(35) )) / COLS,( ( ---( ( 35 ) ) - Jon ) )) )][30.75 / ROWS] + -( -1 ) + x / dog,rule(430.09,Stark),-bar()) - betray(0.41 + ( ( Ygritte ) ),ROWS) * mislead(-ROWS)][-TABLE[( 13 )][mislead(0.6)]] - foo(73,880.12,protect(( foo(-foo(-foo(42 - -1 / --0.56 / TABLE[-850.097][( COLS )] * destroy() * 1 / -94),mislead()) / TABLE[TABLE[protect(destroy(-350.785),ROWS / TABLE[( Arya )][bar(betray(Sansa,( dog )),0.95)])][ROWS]][ROWS],bar(ROWS,-ROWS,COLS)) ))) * y ) / COLS;
	TABLE[betray(Arya,-Jon) + TABLE[TABLE[COLS][betray(-250.452) / ROWS * bar(COLS)]][Sansa]][-0.4 * ( 70 )]
}
};
	if(ROWS){

}
}
var Jon = Jon
var Stark = -dog
var Ygritte = Arya
def foo(dog,x){
	Sansa /= bar(-rule(COLS,ROWS,betray(Sansa + TABLE[-38][( x )],( ROWS + y ))),55);
	-COLS
}
def rule(Stark,Arya){
	if(Ygritte){
	if(-6){
	-Hodor;
	rule(mislead(--16),Ygritte)
} else {

};
	Arya /= 0.3;
	if(TABLE[( COLS / ( ROWS ) / 0.32 )][( ( Arya ) )] - -36 - 980.793 / TABLE[-1][destroy(--40,protect(-( ( destroy(-( Stark + ( foo(0.12,-0.65,ROWS) ) )) ) ),-0.24,Hodor)) + protect(TABLE[( destroy() )][--66 + ( -0.45 * protect(49,y,-( rule(mislead(betray(( ( y ) )),Jon)) )) )])]){
	Ygritte *= ( -0.4 )
}
} else {
	Ygritte *= y
};
	Sansa *= --43 + -96 + foo(--ROWS,-240.43) / protect()
}
def betray(Stark,Hodor,Sansa){
	Stark += betray(-ROWS);
	-0.9
}
def TABLE[Ygritte][j] {
	( --ROWS - -ROWS / ( Jon ) );
	if(betray(COLS,COLS / ( betray(ROWS) ) - -betray(( -0.65 - -COLS ),-16) - betray(x,Arya,Stark),rule())){
	dog += Ygritte;
	mislead(ROWS,x,foo());
	x += destroy(-destroy(),betray(betray()))
} else {
	if(-TABLE[-470.4152][-TABLE[-Sansa][destroy(TABLE[TABLE[( TABLE[--0.91][mislead(-0.96,COLS) * 60] )][( ---COLS / ( Stark ) * Hodor )]][---0.47 * COLS],protect(--Stark) + Jon / ROWS * COLS / -Arya + rule(destroy(( -94 + -0.59 )),( -0.9 ),-dog))]]){
	if(-( -dog )){
	dog += Arya
} else {

}
} else {
	foo()
};
	-18;
	-1
}
}
def destroy(y,Hodor){
	Ygritte += Sansa
}
def TABLE[0.18][j] {
	if(TABLE[ROWS][-0.48]){
	-TABLE[TABLE[rule(-Arya,COLS,-1 * ( Sansa - Stark ))][-230.6165]][( ( TABLE[Hodor][dog] ) )];
	-( -1 - Arya * -0.37 )
};
	x += 1
}
var Sansa = TABLE[-0.31][betray(---mislead(-410.6),Ygritte,x) + rule(protect(37,bar(( y ))),( --ROWS - ( -COLS + Sansa * ROWS ) * COLS ))]
var y = foo(Ygritte + ROWS - protect()) / COLS / rule(( COLS ))
def TABLE[bar(x)][k] {
	Stark /= ROWS;
	if(TABLE[( ( TABLE[-0.71][Sansa - -120.35] ) )][0.91]){
	if(( ROWS )){
	if(protect(( COLS * ROWS ),COLS)){
	COLS;
	Ygritte += 0.57 - 46;
	ROWS
}
} else {

};
	Sansa *= -0.11
}
}
def TABLE[( -TABLE[-( destroy() )][rule(-0.9,-1)] )][k] {
	ROWS;
	49
}
var Sansa = -1
var Sansa = 971
def TABLE[--6][j] {
	( -----620.5341 )
}
var Arya = -( bar(( --1 ),COLS) ) * Arya / rule(-COLS,betray(),y) - ROWS
def TABLE[24][j] {
	Stark -= -57
}
assert foo() : "Nothing burns like the cold."
assert --destroy(TABLE[rule()][--5],protect(Ygritte,x / ( Ygritte ) / ( TABLE[rule(x)][TABLE[--Hodor * -mislead(-0.58 + foo(-0.66,-85)) + 61][ROWS]] ),-COLS),-COLS) : "Nothing burns like the cold."
var Sansa = Sansa
assert ( TABLE[( Ygritte )][rule(TABLE[( 290.83 )][( mislead() )]) / y] ) : "What do we say to the Lord of Death?"
def rule(Sansa){
	dog += ( ( 310.3 * -ROWS ) )
}
def rule(Stark){

}
assert ( --0.67 ) : "Nothing burns like the cold."
def TABLE[betray(-COLS)][i] {
	Hodor *= bar(( foo(rule(Arya - Arya,( -1 ) * ( Ygritte )) + -0.48,TABLE[( ( -1 / COLS + Sansa * dog + -62 * Arya ) )][ROWS] - ( Arya )) ),-38);
	-betray(-COLS,TABLE[COLS * rule(foo(( --mislead() / -12 ),protect(-0.65)),( 1 ),Sansa)][rule()] + Jon / ( 1 ),Arya)
}
var y = --84
def TABLE[protect(-1)][j] {

}
assert 1 : "Nothing burns like the cold."
var x = TABLE[-1 * 0.82 / ( ( -ROWS ) ) + TABLE[TABLE[-x][COLS * betray() + 4]][dog]][Sansa]
def destroy(x,y){
	COLS;
	if(730.83){
	if(ROWS){

};
	if(0.3){
	if(COLS){
	if(Sansa){

} else {
	foo(-530.6);
	0.99
};
	Arya -= -destroy()
};
	Arya -= -( TABLE[-Hodor][COLS] ) - -foo(betray(-Arya,( rule(Stark) ),Arya),-dog,( COLS )) * 49 + ( -( COLS ) - TABLE[-Arya][-Sansa] )
}
};
	Jon /= 0.49 - -1 + ROWS - ( -89 / -destroy(rule(TABLE[destroy(( Sansa ),betray(destroy(),0.28))][-( Ygritte * -1 )]) - COLS) )
}
def bar(Stark,Arya){
	Jon -= mislead(betray(--betray(),-protect(-TABLE[ROWS][x],( -0.2 )),ROWS),-ROWS,( 1 ))
}
var dog = ROWS
var Hodor = x
def destroy(dog){
	y *= -0.06 + ROWS;
	x
}
def bar(Jon){
	if(ROWS){
	if(bar(50.807)){

} else {
	Sansa -= -destroy(240.54,destroy(--Hodor * betray(ROWS,Jon + Hodor,COLS) * protect(-destroy(dog - ( -12 ),1,-ROWS) / -foo(Sansa) + foo(),ROWS),-TABLE[-( 31 )][mislead()])) + -( -1 )
};
	( -COLS - -( --0.11 ) * -ROWS / -Jon )
}
}
def TABLE[--0.5 / COLS * ROWS][k] {
	protect(-( TABLE[-0.03][TABLE[( dog )][( rule(-0.85) )]] ),73);
	Hodor -= -COLS;
	Ygritte /= -0.97
}
def mislead(dog){

}
def foo(){
	TABLE[COLS * TABLE[protect(1)][-28] - y][-x];
	if(-mislead(dog + COLS / -38,( 87 - 25 ))){
	if(( 250.44 * -destroy(12,x) ) - COLS){
	if(TABLE[mislead()][--( ( 120.2 + --0.41 / -1 + ROWS ) )]){
	Jon += Sansa
} else {
	1;
	if(1){
	-( Jon * 0.06 );
	if(Arya){
	COLS;
	Ygritte /= 1
}
}
};
	Sansa += -TABLE[TABLE[( Sansa ) + -73][rule()]][-COLS]
};
	ROWS;
	if(dog){

} else {
	x -= -TABLE[COLS][-0.45] - COLS - ( Stark )
}
};
	if(Ygritte){
	Ygritte *= --0.14
}
}
var x = TABLE[-( Jon )][-1]
def TABLE[--720.33][i] {
	Sansa *= ( 43 );
	if(-1){
	if(-1){
	-ROWS
} else {
	dog += betray(TABLE[( -0.9 )][Ygritte - 97] - Stark * ( 1 ),-0.79);
	y
};
	if(TABLE[rule(( Arya ))][rule(-190.406,( -21 ),( ( betray() ) * rule() )) - Sansa]){
	COLS;
	x += betray(Arya) * bar(TABLE[-1][( ( COLS ) )],( ---ROWS + betray(ROWS) ))
}
} else {
	Stark /= -TABLE[Sansa][-Stark / 0.14] / -1 * y
};
	y *= x
}
def betray(Jon,Arya){
	Ygritte -= --COLS / foo(Jon,x);
	if(betray()){
	Sansa *= -( Hodor ) / -( COLS );
	Jon += ( --ROWS )
} else {
	if(--0.96){

} else {
	y + ROWS + 0.27;
	if(ROWS){
	if(-620.49){
	if(TABLE[COLS][Ygritte]){

} else {
	Jon *= ( ( ( -27 ) ) )
};
	if(( -x / -COLS ) - mislead(mislead(-( ROWS ) + ROWS) * 980.919)){
	Stark;
	Jon *= Hodor;
	( ( ROWS ) * Hodor - -0.81 * x )
} else {
	-TABLE[protect(-betray(ROWS,ROWS),--foo(0.8)) + TABLE[protect(( -0.31 )) * betray() * ROWS][COLS]][Sansa];
	Sansa += y;
	Ygritte += mislead(protect())
}
} else {
	Stark *= --TABLE[0.06][Ygritte];
	x /= ( ( foo(--COLS / mislead(COLS,rule(y,betray(y,x) * -COLS),( Arya ))) ) );
	Stark += 52
}
}
}
}
}
def bar(Hodor,Hodor){
	x *= foo();
	if(Sansa){
	if(( destroy(( TABLE[( TABLE[97][Arya] )][-COLS] ),-Stark) )){
	Hodor += rule(0.96,780.8042)
}
} else {
	if(22 / ( ( -y ) ) * --COLS){
	ROWS;
	if(Hodor){
	Ygritte;
	if(1){
	ROWS
}
}
};
	---y
}
}
var Stark = Jon
def protect(Stark){
	Sansa -= Stark;
	if(22){

} else {
	if(-3){
	-0.7;
	Hodor -= -65
}
}
}
def bar(){
	( y );
	if(x){
	x += foo(Stark,Hodor)
}
}
def TABLE[27][i] {
	mislead(( TABLE[-( -( protect(bar(-0.75 * Ygritte,-Hodor) + ( -COLS )) ) )][Arya] ),( ( ( mislead(-15,-0.22) ) ) ),Arya);
	--y - ----COLS / ( -89 ) / ( dog );
	dog /= Ygritte
}
def destroy(Jon){

}
def foo(Hodor,dog){
	-0.81;
	if(mislead(ROWS)){
	if(-x / ( y ) / ( 0.96 )){
	if(TABLE[1][( Ygritte )]){
	if(( 140.527 )){
	if(TABLE[rule(mislead(( COLS ),( mislead(betray(),rule(Hodor,-91)) * -0.63 / ( -( ROWS ) ) )),0.49)][bar(1,-49)]){
	Ygritte *= TABLE[-destroy(-1 * Stark,ROWS,( ( -protect(Arya,-30.47) + ( ( bar(( rule(0.76 - foo(-Arya),-dog - -Stark + protect(Hodor)) * Hodor )) ) ) ) )) / dog][TABLE[TABLE[( -1 )][Hodor - ( -0.48 ) + -( Jon )]][38] / -56];
	COLS
};
	if(Hodor){

} else {
	-0.59;
	x
}
} else {
	if(betray()){
	Sansa += ROWS;
	( ROWS )
} else {
	Ygritte *= 78
}
}
} else {
	foo(-1)
};
	Ygritte += TABLE[( Ygritte )][protect(Sansa,-TABLE[bar(ROWS / 1,-540.575)][COLS - Sansa] + rule(-dog),( COLS ) + 80)]
};
	COLS;
	y
}
}
assert bar() : "Nothing burns like the cold."
var Jon = ROWS
assert foo(( ---0.33 )) / ( TABLE[COLS][-x * TABLE[1][COLS]] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[1][k] {
	if(foo(rule(( ( 0.8 ) ),y * -Arya),68)){
	if(-0.16){

}
} else {
	if(0.28){
	if(destroy(-1)){
	if(TABLE[--96][Sansa]){

};
	dog *= -1
} else {
	x += Jon
}
}
}
}
var dog = 59
var Jon = -( ( -1 ) ) / ( -1 ) / bar()
assert -550.6 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Stark){
	Ygritte += ROWS * Jon
}
assert -1 : "One can not simply parse himself"
assert -foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = bar(ROWS,-0.24,-59)
var Arya = -2 * foo(-70,( ( -bar() + ROWS ) ),TABLE[( -1 )][( -destroy() + ( 0.79 ) + -COLS / COLS )]) * -ROWS + Jon / ROWS - Arya
var Sansa = -Arya
def TABLE[-Arya][j] {

}
assert dog : "Fear cuts deeper than swords."
assert -bar(COLS) + -98 : "What do we say to the Lord of Death?"
def TABLE[-1][k] {

}
assert ( 70.24 ) : "Fear cuts deeper than swords."
assert 96 : "What do we say to the Lord of Death?"
def TABLE[-47][k] {
	if(( betray(ROWS) ) / -430.957){
	if(Arya){
	Stark /= dog
} else {
	if(--Sansa / ( -0.95 )){
	Stark -= -3
} else {
	rule(-( ( Stark ) + bar(-( -bar() ),ROWS) ),( -49 ),COLS);
	73;
	( ( dog ) )
};
	TABLE[Sansa][ROWS] * y;
	Sansa += dog
}
} else {
	TABLE[Hodor][( x / ( -ROWS ) / 0.27 + 0.86 )] + -( ( --0.08 * ROWS ) - mislead(( Jon ),COLS) );
	if(-14){

}
};
	rule(-Hodor,( -63 ),Sansa)
}
assert ( -Hodor ) : "One can not simply parse himself"
assert COLS / 0.41 : "Fear cuts deeper than swords."
assert TABLE[-Stark][( ( TABLE[destroy(-0.85)][mislead(mislead(( --( rule(protect(),-330.91) ) ) - ( ROWS * -( COLS / -74 / foo() ) ) * Sansa + destroy(bar(bar(rule(ROWS / -dog,( Hodor ))),TABLE[-1][0.5] - -1),rule(0.31,( Jon ))),14 - Stark + ( rule(-640.11,ROWS,-( rule(Sansa,rule(betray(( TABLE[45][-64] )),betray(( TABLE[foo(( 1 ),-30)][-0.48] )),protect(-20))) )) ) * COLS * ROWS) - ( -Ygritte ),---0.01) - Stark] ) ) * betray(( ROWS ) + TABLE[foo(destroy(84),-0.23) * betray(( ( TABLE[Hodor][rule(rule(-67),-0.69 * 640.5811)] ) ))][COLS / Jon])] : "What do we say to the Lord of Death?"
def TABLE[y][k] {
	Sansa *= ----ROWS + ( ROWS ) / Arya / Sansa;
	--TABLE[ROWS][Stark];
	y -= 1 - bar(destroy(TABLE[( -83 )][410.872]),y)
}
assert ROWS : "One can not simply parse himself"
def TABLE[-1][j] {
	Arya += ROWS;
	if(( ( betray(-0.6,protect(bar(betray(( destroy() ),y / ( COLS ) + protect(foo(--Stark,bar(Hodor,destroy(Ygritte),foo(rule(-0.45,Jon) + -15,foo(TABLE[destroy(--TABLE[0.27][-0.06],0.36,Arya) + ( -740.44 * Jon ) - 940.68][-41]),0.24)),( ( -690.86 ) )),COLS,COLS)),Sansa),( 30.7917 ))) ) / foo(COLS) - TABLE[bar(( ( Ygritte ) ) / -( ROWS ) * ( 74 ) * Sansa,Jon)][-Stark] / --1 )){
	dog /= Jon;
	Arya += 0.09
}
}
var dog = ROWS
var Hodor = TABLE[( Stark )][-foo(990.39 / ( 0.42 )) * ( Hodor ) / Hodor]
def TABLE[-0.07][j] {

}
def TABLE[Ygritte][i] {
	( -Arya );
	-( betray() ) * foo(-0.13)
}
def rule(){
	Ygritte;
	dog -= Stark;
	dog -= 51
}
assert --0.18 : "What do we say to the Lord of Death?"
def bar(){

}
var y = -( 0.94 )
var dog = mislead()
def foo(Jon){
	x -= TABLE[( foo() )][31] + ( rule(Jon,Ygritte) );
	TABLE[ROWS][-1 * ( protect(y,Arya) - destroy(TABLE[-TABLE[TABLE[TABLE[COLS][protect()]][-1]][TABLE[TABLE[-59][1]][94]] / Stark][-mislead(-Hodor)] / COLS,0.12 + --ROWS,ROWS / Jon) )]
}
var Ygritte = -Ygritte
assert -0.54 : "Winter is coming"
var Stark = ( ( 0.46 ) )
var Jon = -destroy(y)
def destroy(){
	if(Ygritte){

}
}
def TABLE[bar(ROWS - -0.04)][j] {

}
def TABLE[ROWS][k] {

}
var y = -Arya
var Arya = ( ROWS * ( ---( TABLE[-dog - rule(-rule(ROWS,COLS * 62,( foo(betray(-820.5),0.07) ))) * -ROWS][foo()] ) - mislead(Jon) ) - -0.71 - 1 )
assert -TABLE[TABLE[-x][-0.05]][Hodor] : "One can not simply parse himself"
var x = TABLE[ROWS][( destroy(-0.59,0.35) )]
def foo(x){
	Arya /= betray(( 1 ))
}
def foo(Sansa){
	-Hodor
}
assert -( destroy(( -4 ) * 0.45) ) : "One can not simply parse himself"
assert ROWS : "One can not simply parse himself"
def TABLE[-( dog * --0.89 / -ROWS + --68 ) + 250.299][k] {
	( 31 )
}
def bar(Jon){
	Hodor /= -0.44;
	if(TABLE[COLS][destroy(Hodor - foo(bar(( Stark * rule(Sansa,--15 / COLS,Arya + TABLE[42][--85]) - ( Sansa ) )),( -( COLS ) )),0.7,-0.22)]){
	Sansa *= -( 79 );
	( -rule() )
} else {

}
}
def bar(Sansa,dog){

}
assert bar(protect(47),( --dog )) : "Winter is coming"
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(dog,Stark){

}
var Hodor = ( x )
def rule(y,Stark){
	Jon += ROWS / ( Jon ) + bar(y,ROWS - 54) / bar(mislead(rule(-( -( 6 ) * -750.1 * TABLE[COLS][-0.92] ),y) + -0.97,Jon),( Sansa ))
}
def TABLE[protect(( ROWS ),-x,-250.51)][i] {
	( 470.6234 )
}
var Ygritte = 0.38
var dog = 0.64
def TABLE[mislead(( COLS ),y)][i] {
	( Stark );
	Hodor
}
def bar(Hodor){
	ROWS;
	dog += protect(0.68,( ( -protect(-0.73,--( x )) ) )) * 1 - betray(y,0.2)
}
def bar(x){
	bar(( protect(TABLE[Hodor][foo()],38) + COLS ),-810.2 / -( ( foo(-mislead(( 0.51 - TABLE[( x - --210.395 )][COLS + rule(( bar() ),y,Jon)] ),COLS,( ROWS )),-540.685,( rule(Stark) * ( ( -15 - -0.74 ) ) )) ) / betray(ROWS) ) * ( 0.41 ) / mislead(Stark))
}
def TABLE[-0.56][k] {
	if(protect(y,rule(( --0.01 / ( ROWS ) + ( ---COLS * foo(-Hodor * bar(betray(-( -x ))) + --rule(( rule(490.863,-0.84) )) / ( 92 ),-250.63,( protect(0.65) )) - Hodor ) + -1 / -6 / Arya / -91 - TABLE[-0.11][( -( --Jon ) )] + foo(TABLE[-0.19][COLS],rule(41,( Ygritte )),Jon) ),83) + ROWS)){
	if(( protect(dog) ) * COLS){

} else {
	-foo(Hodor)
}
}
}
def TABLE[Arya][i] {
	if(bar(COLS * ROWS,( Hodor ))){

} else {
	if(TABLE[-bar(Arya,-ROWS)][TABLE[Sansa / -mislead(--COLS,( y ))][COLS]]){

}
}
}
assert 57 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ( betray(Sansa) )
def rule(Ygritte,Hodor){

}
assert Ygritte : "Winter is coming"
def rule(Sansa){

}
def betray(Hodor,x){

}
def TABLE[ROWS][i] {
	1;
	x;
	Arya /= Sansa
}
def rule(Stark){
	Ygritte /= ( COLS );
	if(betray(( -Sansa ),( 68 ) + -0.38 + ( ( bar(COLS) ) ))){

} else {
	if(( ROWS )){
	dog *= ( 0.32 );
	Jon -= betray(betray(Ygritte,0.28))
} else {

};
	if(-0.15){
	Stark *= ROWS;
	Stark
} else {
	-1;
	y /= -0.23;
	ROWS
};
	Ygritte /= -390.882
};
	y
}
def mislead(dog){
	if(-1 - 1){
	if(-0.5 / Ygritte){
	( Arya )
} else {

};
	if(0.75 + Hodor){

} else {
	dog += Arya;
	y *= 41;
	if(-760.677){
	1
} else {
	if(-0.6){
	if(-0.06){
	if(TABLE[-1][protect(-ROWS * mislead())] - foo(TABLE[bar(( Arya ),mislead(-34 * Ygritte))][Hodor],TABLE[-93][mislead(( -( TABLE[mislead()][( -66 + 11 )] ) ))])){
	Jon /= Ygritte;
	if(rule(-0.29,ROWS / -Stark)){

} else {

};
	TABLE[Arya][Jon / ROWS]
};
	if(( ( --700.82 ) )){
	if(destroy()){
	if(Jon){
	x -= ( bar(--0.77,COLS * 0.21,ROWS) / protect(foo(-1,TABLE[foo(TABLE[rule(( betray(-( destroy(-Jon,TABLE[-betray()][( mislead(( ( ROWS ) ),TABLE[-43 - -13][TABLE[( ( bar() ) )][Stark]],( protect(TABLE[-Ygritte][( COLS )]) )) )]) )) ),y)][( 1 )],( 68 ),foo(mislead(),ROWS))][COLS]),-690.9042,destroy(Jon)) * Jon + -Hodor );
	Hodor
};
	Stark *= ---930.18
} else {
	COLS;
	TABLE[46][( ROWS )]
};
	x += dog
} else {
	Arya -= -bar(( -ROWS ));
	dog /= --foo(Arya,protect(ROWS,mislead(( foo(COLS,COLS,ROWS) )))) - destroy() * Arya + -85 * -0.69 + -destroy(-0.22);
	if(Ygritte){
	( -foo(foo(COLS),-destroy()) );
	Ygritte *= COLS;
	--ROWS
}
}
};
	-COLS * 0.42
};
	Hodor *= ROWS
}
}
};
	if(-0.31){
	Sansa /= betray(0.3,Jon);
	1
} else {
	if(Jon){
	if(Stark){
	Stark *= -( foo(ROWS) )
};
	22
} else {
	Sansa *= mislead(protect(bar() + -ROWS,TABLE[( ROWS )][rule(( -foo(-48) ))] * x + 0.18,x),COLS);
	foo(-TABLE[-Sansa][destroy() - ( ROWS * -( rule(( ROWS )) ) / ( -ROWS ) )],bar(COLS,Hodor) + ( 1 ));
	91
};
	if(( -mislead(COLS) - -foo(bar(-( rule(Hodor,rule(TABLE[0.79][ROWS])) ),ROWS,dog),dog) )){
	( destroy(( -1 / ( Hodor ) ),( ( ( -( Arya ) * 1 + ( ( y ) ) ) ) )) );
	-0.21
};
	if(betray(COLS,--55)){
	Hodor -= ( COLS );
	y;
	Ygritte *= bar(foo(-betray(TABLE[ROWS][ROWS - ( 0.75 )]),0.72))
}
}
}
assert bar(Hodor) : "Nothing burns like the cold."
def mislead(Stark){
	Arya += y;
	if(-foo(( 87 )) + -( -0.19 ) - COLS){
	Ygritte += -78;
	Ygritte += -protect()
} else {
	dog -= COLS;
	0.14
};
	if(mislead(COLS)){
	Sansa /= COLS - destroy(destroy() - bar(bar(Ygritte,280.18,( --970.395 / betray(( --0.85 + ( Ygritte ) )) ) + bar(-0.88,-42))),y);
	if(ROWS){

} else {
	Ygritte /= Ygritte
}
} else {
	if(( -1 )){
	if(570.3765){
	COLS
} else {
	if(betray()){
	x /= ( ROWS );
	-82
};
	Stark
}
} else {
	if(-560.47){

}
};
	if(foo(--1)){
	if(COLS){
	if(-93){
	( ROWS )
};
	34;
	dog += ( 230.816 )
};
	dog /= ROWS
};
	-( ( protect(-betray(dog,protect(0.53,( -TABLE[-0.25 * 0.66][-foo()] ))) / COLS / Arya) ) )
}
}
def TABLE[destroy(67 - ( bar(destroy(TABLE[Ygritte][-( mislead() / COLS )],protect(destroy(),destroy(-( ( rule(62) / TABLE[( -1 ) + -Sansa][Stark * -Hodor] ) )),Ygritte)),-930.2) ),foo(),TABLE[y][-( Hodor ) * --15 + x])][i] {
	COLS
}
assert ( Ygritte ) : "What do we say to the Lord of Death?"
assert ( Jon ) : "Fear cuts deeper than swords."
assert -betray(--72,protect(-( -x ),-y / -0.2 + dog - ( 18 ) * ( TABLE[y][( -Sansa )] * 110.49 ),Hodor)) : "Fear cuts deeper than swords."
assert ROWS * -mislead(ROWS) : "Nothing burns like the cold."
def TABLE[foo(0.33)][j] {
	x -= -mislead();
	-1;
	Jon -= -0.8
}
var y = ( ROWS )
def TABLE[COLS][k] {
	ROWS;
	destroy(foo(Arya),dog)
}
assert TABLE[Sansa][-1] : "Winter is coming"
def foo(Arya,Ygritte){
	-Hodor;
	Jon -= ----( ROWS );
	Ygritte
}
def TABLE[Ygritte * Ygritte + betray(( rule(( -( ( -0.31 ) ) * ( protect(-COLS,Stark) ) ) * ( -0.52 ) + TABLE[foo(mislead(Sansa,-ROWS),-( protect(destroy(x,betray(),-TABLE[COLS + -( 63 / Ygritte ) + ( -55 ) + Hodor][destroy(0.27 - -( -( protect(Stark,61,mislead()) ) + Sansa ),-dog + ROWS)])) ))][Arya] - ---COLS / ( Hodor ) - ( x ),-mislead(protect(( ( foo() ) * ROWS )))) ),-28,-( -ROWS ) * dog) - COLS][j] {
	--( ( -( ( -ROWS + -rule(( Ygritte )) / ( ( 1 ) ) ) ) ) + ROWS )
}
var x = ROWS
def TABLE[protect(bar() + 26,y - bar(ROWS) * COLS) - ( COLS )][j] {
	Hodor /= rule(( TABLE[ROWS + ( ( ---3 ) )][-Sansa] ));
	if(-610.74){
	( --0.51 / ( y ) );
	y *= -30
};
	if(betray(TABLE[Hodor][-31 + -0.44],ROWS)){
	if(27){
	Hodor;
	Jon;
	Stark /= ( betray() )
} else {
	0.05;
	if(dog){
	if(-1){
	if(ROWS){
	1;
	Ygritte += 0.58 / bar(-bar(),-19) - x
}
};
	Arya += -44
};
	if(38){

} else {
	if(930.35){
	Ygritte += 700.42;
	Ygritte
}
}
};
	Stark *= --180.93
} else {
	y *= -( Ygritte ) - ( ( ( -TABLE[mislead(1)][( protect(950.975,-1 / ROWS) * TABLE[-39][-76] * ( -COLS ) )] ) ) );
	--58 + ( -TABLE[Arya][destroy(-74,( COLS ),( ROWS ))] )
}
}
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ---ROWS
var x = ( ROWS )
def TABLE[-ROWS][k] {
	Ygritte *= foo(TABLE[Jon][ROWS / ROWS] * TABLE[COLS][dog],TABLE[37][( TABLE[67][dog] )]);
	if(foo(protect(TABLE[-800.8058][x])) - 0.81){
	-0.12 * destroy(( mislead(( bar(COLS,bar(TABLE[--23][-ROWS],0.82)) ),-1) + ( -bar(foo(Hodor),---0.41,-1) ) * ( ( 0.26 ) / destroy(COLS,-ROWS) ) - ( ( 0 ) ) * dog ) * ( ROWS )) * ( Jon ) - --COLS;
	y += -0.52
} else {
	if(-0.31){

};
	if(( Stark )){
	Arya /= Sansa;
	rule()
} else {

};
	Hodor *= protect(rule(betray(-0.11,( -TABLE[-94][y] + TABLE[foo(ROWS - ROWS,-bar(Arya))][COLS * -mislead(Arya,Jon)] )),Jon - Hodor))
}
}
var Jon = ---Hodor
def TABLE[destroy(Ygritte,betray(ROWS))][k] {
	if(( destroy() ) + -0.59){
	Hodor *= x + -y;
	dog *= ROWS
} else {

};
	ROWS
}
assert 190.76 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){

}
var Hodor = Ygritte
assert -44 + 1 : "What do we say to the Lord of Death?"
assert Stark : "What do we say to the Lord of Death?"
var Stark = protect(( foo(betray(-Hodor,---( destroy(-( betray(--1) / TABLE[( destroy() )][ROWS] - -( ( -ROWS ) ) / COLS * dog / 0.75 ),( Ygritte ),-830.7 + -21 - Sansa) ) * -( dog ) + TABLE[61 - ( COLS )][betray(-destroy(( foo(-x,0.76) ),Arya,-Stark - ( TABLE[-protect()][TABLE[rule(-( -( y ) ),TABLE[foo(--Hodor,-TABLE[-( rule(Arya) ) - rule(Ygritte) / Stark / ( --Ygritte ) / -1][COLS]) - TABLE[TABLE[( Ygritte )][( -Sansa )]][foo(ROWS - destroy(Stark,( -0.8 )),COLS)]][bar()])][protect(-ROWS)]] ) - rule(--COLS))) * -destroy(-COLS,foo(0.77,ROWS,dog),betray(-39,rule(90,rule(Arya * -0.5,0.66) / Hodor * Hodor + -400.47 * 320.99 + Sansa + ROWS,foo(Arya)) - TABLE[1][Sansa]) * -Hodor + -49 + 1 + -( ( ( y ) ) + COLS * rule(y) + -1 - protect(TABLE[destroy()][x] / dog,( TABLE[1][( ( ROWS ) )] )) / ROWS ) / ROWS)]),-Jon * COLS) ))
def bar(Stark){
	mislead(-rule(ROWS,Sansa + mislead()),foo(0.43));
	Jon -= ( --( mislead(-Jon,protect(200.6),58 + destroy(-770.4,Stark,-COLS) / x + -Jon) ) )
}
def TABLE[ROWS][k] {
	if(-( ( -foo(1) ) )){
	Stark += -ROWS
} else {
	Stark *= rule(ROWS,y,TABLE[Hodor * Stark][destroy(TABLE[protect(TABLE[-( ( Jon ) )][( rule() )] - -mislead())][( ( rule(COLS,0.63 / protect(Hodor / -TABLE[mislead()][-( bar(rule() + COLS,Arya) )] / ( destroy(-ROWS,protect()) ),COLS)) ) )],bar(protect(-mislead(dog,--TABLE[-0.28][ROWS * COLS]),-59 + betray(rule(( -0.06 )),-34,-0.44)) + protect()))] * ( -1 )) - ( ( foo(TABLE[--ROWS][0.6]) ) ) / 1 * -( ( TABLE[TABLE[y][COLS]][y] ) ) + ( -TABLE[( TABLE[rule(destroy(destroy(( protect(dog,0.08) ),ROWS * Hodor) / -( ( 0.62 ) ),foo(( --( 0.98 - 73 ) )) + betray(( mislead(( --71 ),Arya) ))),Stark)][bar(( Sansa )) / -TABLE[-1 + ( -foo() ) + rule(( 0.28 ),foo(mislead(-Hodor)) * bar(Ygritte / Arya + rule(dog,-23,ROWS)),ROWS) - Sansa][dog] / ( Hodor ) * -ROWS * -TABLE[-TABLE[( Arya )][( ( bar() * ROWS ) )]][( COLS ) - 580.22] * -TABLE[mislead(-( ( ( ( -foo(destroy(dog - -0.86 * ROWS,betray()),-COLS,-39) * Sansa ) ) ) ),Hodor)][-( 0.79 )] + rule()] )][-0.49] + destroy() / ROWS );
	if(-97){
	dog *= -( TABLE[( betray(Arya - -36,y) )][-( ( destroy(foo(COLS,-ROWS + dog / -930.18)) ) ) * Stark / TABLE[Sansa + COLS][TABLE[TABLE[Sansa][ROWS]][foo(-0.08,( ( mislead(ROWS + 50.48,dog) ) )) * Arya]] - rule(Sansa,y)] ) * x;
	if(ROWS){

}
} else {

}
}
}
var x = destroy(95)
var Sansa = 0.5
var Jon = Arya / TABLE[0.69][protect(Stark,1) * dog]
var y = rule()
assert COLS : "Fear cuts deeper than swords."
var Arya = ( -bar(dog,foo(Stark,x,y)) )
assert ( ( betray(( foo(betray(foo(Stark,( 0.44 * Arya - TABLE[( -protect(( mislead(--480.93) ) + 1 / -Ygritte,( mislead(protect(90)) - 74 + Jon )) - Arya )][TABLE[Jon][0.08]] )) * ROWS,( mislead(TABLE[protect(Jon,35)][( -Jon / ( 230.19 ) )]) ))) )) ) ) : "Winter is coming"
var Hodor = Stark
def TABLE[COLS][j] {
	Hodor -= ( ( ROWS ) );
	Ygritte *= -0.3
}
assert ( ( y ) ) : "What do we say to the Lord of Death?"
def TABLE[-45][k] {
	x *= -TABLE[( --0.01 )][1];
	betray(Stark,rule())
}
var y = -Ygritte
var Arya = ( ROWS / foo(TABLE[( TABLE[-( ( Sansa + --1 * 87 ) )][( -0.86 )] )][-1]) )
def destroy(Ygritte){
	Stark * foo();
	Arya += -destroy(ROWS,0.5)
}
def betray(Arya,x){
	( -( 16 + -ROWS / -rule(TABLE[-mislead() * 90.37 / -( ( COLS ) + ROWS )][-rule()] + ROWS + COLS) ) - ( 1 * COLS ) );
	x /= bar(mislead(y,-Stark),Jon)
}
var Sansa = ( y * -Arya - protect(betray(dog,-ROWS) * 60.25,Stark) )
var y = 150.621
def protect(dog){
	Arya;
	y *= betray(( y ))
}
var x = ( ( destroy(ROWS) ) * Ygritte ) - -TABLE[ROWS][( TABLE[( Hodor )][--53] )]
var Hodor = -1 * --0.51 - ROWS
assert dog : "Winter is coming"
assert ( y ) : "What do we say to the Lord of Death?"
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -1
assert dog : "What do we say to the Lord of Death?"
def rule(Sansa,y,Stark){

}
def TABLE[bar()][k] {
	( ROWS );
	if(protect(Stark,COLS)){
	if(( Jon )){
	-( 0.59 )
} else {
	Ygritte += -x;
	if(TABLE[( -protect(protect(),0.83) * -57 )][560.275]){
	if(Jon - ( ( betray(-0.68) ) )){
	if(x){

}
} else {
	protect();
	( ( Sansa ) );
	TABLE[foo(( TABLE[Arya][ROWS] ),-13)][( Hodor )]
};
	x *= TABLE[( x )][65];
	if(-ROWS){
	Jon -= -93 + Stark
}
};
	Sansa *= Ygritte
};
	if(0.16){
	COLS - ( Arya )
}
} else {
	x
}
}
var x = -1 + TABLE[COLS][--protect(protect(rule(( -49 ))))] - ROWS
var Hodor = Arya
def protect(Arya,Jon){
	if(Arya){
	-protect(-0.42 - Stark + 3 + y - ROWS,protect(Arya,bar(( ( --TABLE[Jon][Sansa] ) ),2) - TABLE[TABLE[( ---Sansa / dog )][( ( ( ( ( 1 ) ) ) - TABLE[0.42][( rule(ROWS) )] ) - protect() * foo(COLS / TABLE[( -640.4 / 0.85 + Jon + Sansa )][( -1 )] * betray(-( ( ( protect() ) ) ),ROWS,-( destroy(mislead(---990.966 / 28 + COLS,-bar(-ROWS)),y,ROWS) )),ROWS) + ( ROWS ) - 0.44 / TABLE[Arya][Hodor] ) * ROWS]][-betray(protect(),foo(( TABLE[Hodor + --1][ROWS] )))],destroy(( betray(Sansa - ( 1 ),Jon) / ( ( ( 0.44 ) ) ) ),Arya) * dog)) - x
}
}
def TABLE[-600.91 * dog][k] {
	Arya += TABLE[TABLE[Sansa * destroy(bar(( ( ROWS ) ) / protect(rule(TABLE[--ROWS][( mislead(Stark * ROWS,COLS) )],mislead(( -0.1 )) + -49)) / Arya + TABLE[--ROWS][( TABLE[ROWS][bar(-1,COLS)] )]),0.11)][Sansa]][( -0.25 ) + ROWS];
	if(ROWS - ( COLS )){
	if(-ROWS){
	if(( -( ( -0.36 ) ) ) / TABLE[COLS][-58]){
	if(Stark){
	if(-TABLE[95][-1] * ( protect(Hodor,COLS) )){
	if(---330.5){
	( -rule(-80) / COLS ) - TABLE[-( -0.98 )][( Ygritte )]
} else {
	Arya += ( -x / -ROWS * -70 * COLS / 1 )
};
	Jon += rule(ROWS,Jon) / ( ( bar() ) );
	ROWS
};
	if(Sansa){
	Ygritte /= Ygritte - 0 - TABLE[0.29][47] + -97 - COLS + foo(( betray(1) )) + -TABLE[mislead(-0.91)][foo(protect(78,31 / ROWS),bar(-TABLE[mislead(COLS - -1,8,( TABLE[---Arya / -0.86 - -Arya][( Jon )] * bar(( ( TABLE[ROWS][COLS] ) ),64) + ( TABLE[-0.72][mislead(protect(840.981))] ) ))][Sansa],-( ( destroy() ) ) - ( TABLE[( Stark )][COLS] - TABLE[( Hodor ) - -0.29 * TABLE[-rule(Stark,betray(--ROWS / protect(-0.66,destroy())))][( -0.59 ) + 1]][betray(( Hodor ) * bar(bar(( Sansa )),-1 * ( Arya ),ROWS) * 0.6 * Stark / ROWS,( ( -0.77 ) ))] ),ROWS))] + 45;
	if(COLS){
	-Arya;
	Jon *= rule();
	if(-1){
	TABLE[TABLE[0.06 * TABLE[-( -TABLE[( -0.74 ) - destroy(TABLE[( --560.1 )][bar(y,30.252)],ROWS)][-TABLE[foo(11,destroy(0.25 - protect(destroy() / -( -rule(( -( -0.52 ) ),-Arya) ),mislead(( TABLE[-COLS][( ( -0.81 ) )] ) + COLS)) - ( ( -( Ygritte ) ) ),Jon))][destroy(x,-67 / 800.2617)]] )][-Sansa / -0.26] - ( ( ( ( -33 ) ) ) )][35 - 0.73]][-ROWS];
	x *= mislead(Jon,betray(-ROWS,--73),Ygritte)
} else {
	if(-Hodor){
	if(( ---Sansa )){
	x *= destroy(TABLE[( -86 )][dog],( -COLS ),TABLE[-0.49][x])
} else {

}
} else {
	( x )
}
}
}
} else {
	if(( Arya )){
	TABLE[Jon][-( ( -x ) )];
	if(( ROWS + 60.59 )){
	protect(6,430.5)
} else {
	COLS
}
};
	Ygritte -= 1 - destroy(destroy(Sansa,Ygritte,( COLS )),-betray(Ygritte,Ygritte),( -84 ))
}
} else {
	--COLS - foo(Arya) / ( -45 )
}
};
	dog *= y
} else {
	COLS
};
	Stark += Sansa / y
} else {
	if(-33){
	-( ( TABLE[ROWS][COLS] ) )
};
	if(TABLE[( bar(foo(80.4772,ROWS),COLS) )][ROWS] - mislead(-( TABLE[ROWS][-y - Stark - foo() * Ygritte] ),76 / dog) + 0.3){
	if(( -15 )){
	y += Jon;
	x -= ROWS;
	500.452
} else {
	if(ROWS){
	( ( TABLE[-0.19][( ( x ) )] ) );
	dog /= Hodor
} else {
	y *= ROWS;
	Ygritte
}
};
	Jon += ( ROWS )
}
}
}
var x = -COLS
def TABLE[TABLE[x][( mislead(( destroy(ROWS,betray(foo(-0.54)),ROWS) ),-mislead(COLS,Jon)) )]][k] {
	if(dog){
	if(betray(( COLS ),-1,( 1 ) / -( ( -( -betray(( 96 )) + -bar(0.69,--destroy(Jon,protect(Sansa),( bar(( Stark ),-COLS,ROWS) )) - Ygritte) ) - --0.74 * ROWS ) ))){
	if(Sansa){
	if(COLS + dog){
	0.42;
	TABLE[--1][-destroy(Ygritte,---Stark)] * -1;
	-( y / -790.378 + Stark ) - -( Jon )
}
}
} else {
	Stark /= 180.37;
	if(( Arya )){
	-ROWS * 500.92;
	Hodor -= ROWS
};
	0.46
};
	Sansa *= y
} else {
	Hodor
};
	if(-Sansa){

};
	ROWS
}
assert ( bar(( -280.13 - ( y ) ),ROWS) ) : "What do we say to the Lord of Death?"
def rule(Sansa){
	Jon -= Hodor;
	Arya += Ygritte
}
var Hodor = Sansa * mislead(-( ROWS ) + destroy(-( ( Hodor ) ) - ( Stark )) * ROWS)
def TABLE[ROWS * Ygritte][i] {

}
def bar(Jon){
	0.72;
	if(0.89 / Stark){
	if(1){
	dog += betray(-31,--0.99);
	dog
};
	dog *= ROWS;
	dog += foo(Hodor,mislead(( COLS )),-0.19)
} else {
	if(ROWS){
	destroy(600.7,--TABLE[-470.94][destroy(-Arya,--31)],-TABLE[( -mislead(( Arya * -21 ),( -0.67 ) / betray(1 - ( ( betray() ) ) / ROWS,Jon)) )][-870.811] * ( bar(( destroy(-TABLE[TABLE[( 0.33 )][betray(-0.77) / ( ROWS )]][0.04],-0.15) ),TABLE[x][destroy(bar(Jon,TABLE[0.68][TABLE[COLS][TABLE[mislead(Hodor)][54]]]),-foo(betray(),-Jon,( -TABLE[-0.74][destroy()] )) * Sansa,foo(Sansa,Hodor))]) ));
	Stark;
	Jon /= -1 + -0.14 * -TABLE[TABLE[13 / ( -980.999 )][destroy()]][bar()]
} else {
	Sansa += Ygritte
};
	Stark *= COLS
};
	x -= 76
}
def rule(x){
	-TABLE[Arya][( ( 0.36 ) )] / ( -1 ) / protect(( bar() ),-1 - Ygritte,-0.74 + ----Sansa - ROWS * betray(dog) * ROWS / protect(y) + destroy(betray(),-5));
	if(1){

} else {
	if(protect(COLS,foo(( rule(( -COLS / Hodor ) * destroy(protect(-38)),bar()) / 53 )))){
	Sansa
} else {
	Jon -= -( -0.51 );
	dog += ( COLS )
}
};
	Ygritte
}
assert COLS : "What do we say to the Lord of Death?"
def TABLE[Arya + ( TABLE[foo(0.1,-1) * y][y] )][k] {
	dog *= Stark;
	-foo(ROWS,ROWS,-58) * COLS
}
var Stark = COLS + Jon
def TABLE[--ROWS + TABLE[Hodor][-0.45]][i] {
	if(--( mislead(( Jon / foo(mislead(rule(dog),--dog + ( ( ROWS ) ))) )) ) + Hodor){
	if(( TABLE[ROWS][-( -( foo(y) - 57 ) ) - TABLE[( COLS )][( Hodor )] + COLS] ) * destroy(COLS,foo(Ygritte),-ROWS)){
	Jon *= Ygritte
} else {
	if(foo(y - -0.8)){
	y *= Sansa * ( --Jon * Jon )
} else {

}
};
	( bar(( bar(bar(-930.6195,( -0.37 * -rule(-Arya / dog) * 11 / 70 )) / ( ( -destroy() ) ),dog,-46 - ( -Sansa )) ),x) )
} else {
	-1
};
	Sansa
}
def TABLE[foo(Sansa * --0.08 / bar(-130.15,-13,( ( 730.1502 ) )) + -Ygritte)][i] {
	Jon -= dog;
	-TABLE[-mislead(bar(--COLS,COLS))][( ( ( -73 ) ) )] / ( TABLE[betray()][-79 / ROWS] ) + COLS
}
var Jon = x * -COLS
assert betray(54,( ( ROWS ) * Ygritte )) : "Winter is coming"
assert -Ygritte : "What do we say to the Lord of Death?"
var Hodor = COLS
def TABLE[rule(ROWS) / -foo(x)][i] {
	if(-2){

};
	if(-Hodor){
	( betray(mislead(( ROWS )),-0.56) ) / TABLE[ROWS][( -0.28 )];
	Sansa *= COLS
} else {

}
}
var Hodor = ( --TABLE[Jon - 1][-11] )
def TABLE[-1][i] {

}
def TABLE[-460.636][j] {
	y *= x / ( -( -COLS * 38 / TABLE[23 + Jon - TABLE[Stark][ROWS]][betray(-rule(x))] / -330.813 ) + -1 + -27 + bar(dog) );
	---Arya / --TABLE[Sansa][foo(0.41,--85,-6) / Hodor + ( -( Sansa - 87 ) ) * ROWS] / -rule(bar(TABLE[y][foo(Stark,ROWS + dog,Stark)],betray()),Jon)
}
var Ygritte = ( ( Ygritte ) ) - protect(0.27,-destroy() / -TABLE[-0.49][ROWS],x)
assert -bar(( 34 )) : "Nothing burns like the cold."
assert TABLE[( mislead(Hodor,-0.78) ) * -( -y - ( Hodor ) )][TABLE[( -87 )][-bar(--0.67)] - -79] : "One can not simply parse himself"
def protect(dog){
	if(rule(( rule(( TABLE[foo(( rule(880.345 * destroy(-protect(),mislead()),Arya,( Hodor ) * TABLE[betray(betray(TABLE[Stark][mislead()]) - destroy(COLS,COLS))][-( -380.092 )]) ) / -59,-Ygritte)][41] - y ) - COLS,rule(y * -COLS)) ),destroy(mislead(y,28)))){
	x += ---Ygritte * destroy(protect(COLS / ---betray() * -0.29,-ROWS) / -ROWS + dog,Ygritte);
	Sansa += Stark / -320.4;
	x
} else {
	if(-Ygritte){
	Hodor /= rule(dog,-( 0.74 ))
} else {
	ROWS / ( Hodor / ( 0.79 ) )
};
	Hodor /= Hodor;
	-0.06
}
}
assert betray(COLS,rule(ROWS),rule(Ygritte + 1 * -Arya)) : "Winter is coming"
def TABLE[Stark][i] {

}
def TABLE[dog][k] {
	y
}
def TABLE[foo(TABLE[TABLE[-y][1] / 0.73][--COLS + -COLS * ( 1 )],betray(-0.44),1)][i] {

}
def foo(){
	Hodor -= -( -44 )
}
def TABLE[-destroy(-30,( ROWS ))][j] {
	if(---dog){

}
}
def betray(Arya,dog,Ygritte){
	TABLE[Sansa][1];
	Hodor /= mislead(y) * 740.714 + -0.88;
	x *= Jon
}
assert COLS : "Winter is coming"
def TABLE[x][j] {
	-TABLE[( TABLE[( TABLE[foo(foo(),betray()) / bar(Jon)][( -0.8 )] )][ROWS - ROWS] )][dog]
}
def TABLE[--x + x / ( COLS )][k] {

}
var Stark = -( ( ( --TABLE[-rule(mislead(-1),COLS,( ROWS ))][( foo(betray(Sansa - 89 / rule(),dog,-99)) )] - Sansa / TABLE[( --1 )][--TABLE[----32 + TABLE[foo(( Ygritte ),-11) / Arya + TABLE[( --0.2 )][betray(-1,1,69)] * ( -( mislead(-0.38,11,( -( ( destroy(mislead(1,( COLS )),--dog) ) ) ) * protect(COLS,dog)) ) )][-destroy(Arya,-TABLE[TABLE[( Ygritte )][( 1 )]][1] * -( dog ) * Sansa - 430.757)]][Hodor]] * Ygritte * ( -COLS + --y ) / x * 980.7 - mislead() ) * 1 ) ) * -( -dog / destroy(Sansa / Hodor) - ROWS + Stark + ROWS )
def TABLE[1][k] {
	Sansa /= COLS;
	y /= 76
}
assert 61 : "What do we say to the Lord of Death?"
def protect(dog){
	Jon /= --97;
	( ---27 )
}
assert y : "What do we say to the Lord of Death?"
assert 850.93 : "Nothing burns like the cold."
def TABLE[( Arya )][k] {
	Jon *= -43;
	if(Hodor){
	x += TABLE[TABLE[( ROWS )][-1]][( Hodor )]
};
	Stark *= protect(( ROWS ),COLS,y)
}
def TABLE[-( Ygritte - ( -96 ) )][k] {
	if(( Jon / bar(TABLE[foo(Arya)][TABLE[ROWS][ROWS]] / dog,-64,foo(( ( -120.006 ) - -y * destroy(Jon) ),( foo(-200.337) )) / -( 0.05 )) )){
	if(COLS){
	COLS
};
	Hodor += -COLS;
	Stark += Hodor
};
	if(890.839){
	if(( -91 )){

} else {
	dog /= foo(-96,590.1901);
	y /= dog;
	--Arya / -790.63
}
} else {

}
}
def TABLE[( -( COLS / rule() - rule() ) )][k] {
	Ygritte;
	dog /= x
}
var Arya = -1
assert Hodor : "Winter is coming"
def TABLE[0.8][j] {
	Hodor += -( ( Ygritte / mislead(COLS) ) ) * Ygritte + mislead(( -( TABLE[y][TABLE[( COLS )][Arya]] ) ),Hodor)
}
var Jon = Hodor
def betray(){
	dog -= -betray(1);
	if(COLS){
	Arya += ( ----11 * -0.29 );
	y
} else {
	x *= ROWS;
	if(TABLE[1][-mislead(foo(),dog,( dog ) + Ygritte + ( -Stark ) * ( -foo(x,53) ))]){
	y *= Jon
} else {
	Stark *= destroy()
}
}
}
var Arya = -betray(foo(-14,( destroy() ),-500.91),---Sansa - -COLS + Ygritte + 45 + ROWS,( COLS ))
var dog = ROWS
def TABLE[betray(TABLE[-Sansa][( ROWS )],foo(COLS,( ( dog ) ),( 45 ) - foo(-( -600.55 - -Sansa )) * -dog - foo() / -TABLE[-rule()][rule(-( COLS ) / ( mislead(Arya,TABLE[( y )][betray() * --dog * -( ( ( rule(x,-Jon,( 1 )) * COLS - 82 ) ) )]) ) + rule(rule(Stark,ROWS,-400.078)) + rule(( -ROWS ),ROWS))])) / foo(Stark,rule(-0.53 * TABLE[COLS][-0.98 * bar(Arya,Sansa / ( ( COLS ) )) * -0.79],-85),( destroy(dog,Stark / -foo(rule(ROWS,destroy(21,ROWS,rule(COLS)))) / -COLS) / rule(-bar(COLS) + ( ( -1 ) ),-730.3942) + 0.43 ) * TABLE[TABLE[destroy()][--Jon]][mislead(-1,destroy(mislead(protect(y,14)),ROWS))] / -TABLE[-COLS][40] * 1)][j] {
	if(-( Jon )){
	x /= dog;
	if(( -( Ygritte ) )){
	-betray(ROWS) / -ROWS;
	( TABLE[-( betray(x) ) * ( -870.09 )][-rule(y,-Hodor)] )
};
	( ( --0.99 ) )
} else {
	TABLE[-( -0.07 )][-mislead(ROWS / betray())]
}
}
def foo(Ygritte,Jon,Stark){
	-COLS;
	if(protect(-20,TABLE[-0.89][dog]) * -0.91){
	( -x + -67 )
} else {
	Hodor += foo(( foo() ),-( ( ( -Ygritte / ( protect(ROWS,-90.8) - -Hodor ) ) ) ),TABLE[COLS][x])
}
}
var Arya = Sansa
assert ( ROWS / ( 88 * protect() + COLS ) / 1 + --1 ) : "What do we say to the Lord of Death?"
var dog = COLS
assert ( mislead(Hodor,bar(rule(-ROWS) / ( ROWS ) / x)) ) : "Nothing burns like the cold."
def foo(Hodor){
	-mislead(-12 * -280.606,-34);
	x += TABLE[0.83][-1]
}
assert -0.56 : "Winter is coming"
def TABLE[( Jon )][i] {
	Jon /= ROWS
}
var x = ( foo(rule(),0.86,( foo(mislead(-( ROWS ),-100 / TABLE[1][protect(-y,( Arya )) / TABLE[100.9][x]]) / 0.78) )) )
var Hodor = betray(( -31 * mislead(ROWS,foo(--x) / ( ( ( Ygritte ) + TABLE[TABLE[0.61][-Stark]][TABLE[protect(x / ROWS)][110.822]] ) ) - 0.89,( -1 / ROWS )) ))
def TABLE[COLS][k] {
	if(COLS){

};
	protect(TABLE[foo(--COLS)][TABLE[-990.562][( ( COLS ) ) / Hodor]] + ( -bar(( -ROWS ),COLS) ));
	if(bar(bar(betray(( COLS ),( rule(0.18,dog) )),rule(( mislead(-COLS) ))),x,Ygritte) / 260.7){

} else {
	0.8
}
}
assert -Arya : "Fear cuts deeper than swords."
var y = dog
var y = ( Hodor )
def TABLE[0.13][j] {
	if(mislead()){
	Ygritte += -0.94;
	if(( ROWS )){
	--protect(Arya,Stark,COLS);
	( Arya )
} else {
	y += 79;
	Ygritte;
	betray(destroy(( 870.57 )) + --Stark * --0.63 - betray(67,foo(rule(0.92 - -30.4393) - --Jon * TABLE[Stark][y],ROWS)) * protect(COLS,ROWS / ( TABLE[( -0.17 )][Sansa] )) - COLS + COLS / -0.53,x)
}
};
	( -Arya )
}
assert TABLE[( ROWS ) + -0.51][TABLE[foo(-mislead(ROWS,COLS))][foo(-11,protect(( ( betray(foo() + protect(-0.24,( -58 ),ROWS)) ) )),( TABLE[0.04][Hodor] ))]] - -1 : "What do we say to the Lord of Death?"
def TABLE[-protect(-rule(( ( -dog ) )) * Hodor,TABLE[TABLE[-680.3145 * ( ( 0.64 ) + ROWS )][ROWS]][( ( -180.623 ) )])][k] {
	-90
}
def TABLE[TABLE[-TABLE[1][bar(rule(--150.54))] + TABLE[-1][TABLE[x][destroy(( betray() ))]]][( foo(-34,bar(x) - ( ( -0.48 ) ),-1) )]][i] {
	if(COLS){
	( ROWS );
	Sansa /= -94
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(-1,ROWS,Hodor)][j] {
	if(TABLE[----dog * -( COLS ) + protect(Stark) - mislead(--Jon + ( dog ))][( -bar(10,TABLE[-0.54][-0.4],dog + Arya) )] + Hodor - ( destroy(-TABLE[mislead()][TABLE[0.7][-370.4]]) )){
	x *= -0.11
}
}
var Arya = betray(-COLS,( Ygritte ) + COLS)
assert 1 : "Nothing burns like the cold."
var x = 1
var Ygritte = ( bar(( -( 29 + -( ROWS ) ) )) )
def bar(Stark){
	x += Ygritte;
	if(-( -( ( -Sansa ) ) )){
	Stark -= -20
}
}
def foo(){
	( 880.761 )
}
def TABLE[( ROWS )][k] {

}
assert ( ( ( rule(Sansa,bar(Jon,( Jon / ROWS ))) ) ) ) : "One can not simply parse himself"
def rule(){
	Sansa += Sansa
}
def mislead(){
	if(-foo(-23 * TABLE[( Jon )][betray(-COLS,-80.495,-( ROWS ) / -86)]) / 1 * Jon){
	y -= ( dog )
} else {
	if(Sansa){
	x *= TABLE[--COLS][betray(Hodor * TABLE[ROWS][COLS - ( dog )])];
	( Jon )
} else {

}
}
}
def TABLE[Hodor + COLS][j] {
	if(Hodor - foo(-betray(--COLS / TABLE[TABLE[rule(--1)][COLS] - COLS / x][destroy(TABLE[-( -Sansa - -( -1 ) )][( -( ( dog ) ) )],( ( -TABLE[-0.35][( -1 * ( foo(( COLS ),TABLE[x - ( 0.1 )][47],( 27 )) ) - 220.2137 )] ) ) + -0.34,--1) - Sansa]),mislead())){
	Ygritte /= -mislead();
	Ygritte *= 49
} else {
	y *= destroy(( Sansa ))
}
}
var x = protect() * TABLE[TABLE[( ( betray(( protect(-0.77,dog) )) + ROWS ) )][betray()]][ROWS]
assert betray(1) : "One can not simply parse himself"
var Ygritte = ( TABLE[-Hodor][0.94] )
def mislead(Hodor){
	x /= 0.68
}
def TABLE[1 - foo(ROWS,-bar(ROWS))][i] {
	( foo(ROWS,( -0.85 )) )
}
def bar(y,Sansa,Arya){
	if(( --x + mislead(-64 - ( ( -destroy(( COLS ),x) ) ),protect(( mislead(Ygritte) ) / -( Arya ) * ( -( dog * rule(-23,protect(TABLE[Arya][100.93] / Hodor,ROWS)) ) ) - ( foo(rule(( ( destroy(protect(COLS,Arya * COLS)) ) ),-97 + -dog,1 * 350.152 * -( ( COLS / ( mislead(Hodor,1) ) ) ) * ( ROWS ) + Hodor + 0.8)) ) / ( ( destroy(-1) ) ),Ygritte,ROWS) - foo(-( COLS + ( protect(-( -390.2337 ),-0.27) ) ),-1),Ygritte) / ROWS )){
	if(25){
	-Sansa * -260.31 + protect(-Jon) - mislead(COLS,betray(ROWS,rule(( -0.63 ),Hodor)),COLS);
	if(ROWS){
	y /= bar(-( rule(foo(Stark,-mislead(( 43 ),Sansa) + TABLE[Ygritte][-Stark / -0.75] / ROWS - -63 + ( TABLE[rule(--0.7)][( -0.68 )] )),-1) ))
} else {
	Hodor;
	x *= -protect(820.188)
}
}
}
}
def TABLE[--x - COLS - COLS][i] {

}
def foo(Arya,Ygritte){
	dog
}
assert -rule(Jon,( -0.03 )) : "Nothing burns like the cold."
assert ( -betray(destroy(),COLS / 21,COLS) ) : "One can not simply parse himself"
assert COLS : "Fear cuts deeper than swords."
var dog = betray(-890.19,COLS)
def TABLE[-ROWS][k] {
	mislead(destroy(0.51,bar(TABLE[foo(Jon - ( y ) - ( -0.3 ),mislead()) - -y][Sansa] - mislead(bar(( Ygritte ),COLS))),1));
	y /= x;
	if(ROWS){
	y;
	if(ROWS){
	if(-rule(mislead(-0.56,-1,-Jon / Jon - ( ( -bar(Hodor + foo(),Hodor) / COLS ) ) - ( -1 ))) / -( ( COLS ) ) / ROWS){

} else {
	Jon -= rule(y * bar(Arya,COLS * COLS) - -62,betray(Ygritte),destroy(-( bar(-0.07) ),Ygritte,betray(-( ( mislead(x,COLS) - destroy(-900.19,-foo(( 810.5 ))) ) ),950.86)));
	Stark -= ( ( protect(---0.38,( ( Ygritte ) )) ) ) / -( x ) - ( -bar(ROWS,( mislead() )) )
}
} else {
	-Hodor
}
} else {
	if(ROWS){
	( 27 * TABLE[foo() + 0.02][Arya] );
	Jon += 0.95
};
	Sansa -= TABLE[x][destroy(-bar(-65))];
	if(Sansa - COLS + foo(( -( Stark ) ),Hodor)){
	x /= COLS;
	COLS;
	Ygritte /= -490.538
}
}
}
def TABLE[-dog][k] {

}
def TABLE[bar(COLS - -bar(ROWS + ROWS,-1))][j] {
	-bar(COLS / rule(Arya),0.24);
	if(protect()){
	if(Jon){
	if(dog){

};
	if(-0.61){
	if(rule(foo(-( ( Arya - Stark ) ),( TABLE[480.5][x] ),-0.44))){
	-0.12;
	Hodor -= -380 + -COLS;
	if(( 0.58 )){

}
};
	Jon -= --bar(rule());
	if(Ygritte){
	if(( ( bar(( -( ( ROWS - dog ) ) )) ) + COLS )){
	--1;
	if(foo()){

} else {
	bar();
	( ROWS )
}
};
	Sansa += ROWS
} else {
	Hodor /= -440;
	Stark += protect(x + -ROWS,-bar(),-( ( ( 14 ) ) ));
	if(x){
	Hodor;
	if(( ---COLS )){
	( TABLE[y][TABLE[ROWS][protect(Stark,rule(foo(Stark,TABLE[TABLE[destroy()][protect(betray(rule(foo(( protect(-Ygritte,x * bar(480.3,-betray(ROWS,TABLE[0.29][COLS]),TABLE[1][ROWS / foo(destroy(ROWS / protect(Jon,--Ygritte),Arya * ROWS,( -ROWS )),-0.01)])) + -0.46 ),-foo() * ( 0 )))),( ( TABLE[820.883 * TABLE[-0.21][COLS] * ( -2 ) / -( foo(ROWS,Ygritte) ) * TABLE[( -y )][y]][protect()] ) ),-0.57) / ( -40 ) - Arya]][( COLS )],( ( ( bar(foo() + -46 * -0.13) ) ) - 0.2 ))))]] );
	Arya -= ( foo(Jon,y / rule(TABLE[0.82][protect(0.21)],mislead())) )
} else {
	if(0.47){
	y -= 1;
	Hodor -= 13
} else {
	Jon += ----Sansa;
	Jon -= -60
};
	---0.51 - betray(-dog,mislead(x,-0.77),-1)
}
} else {
	if(-bar(0.62) + Arya){
	( protect(ROWS,-( Jon ),( TABLE[-78][betray()] + -60 )) );
	Jon /= dog
}
}
}
} else {
	( Hodor );
	if(-Arya){
	if(dog){
	( -0.32 );
	Ygritte -= TABLE[COLS][ROWS * --17]
} else {
	if(( TABLE[Sansa][ROWS] ) / -40 * mislead(( ( protect(Sansa) ) ) * ROWS,-1)){
	if(y){
	0.59;
	Jon /= Arya * -COLS * mislead(destroy(--TABLE[( TABLE[COLS - Sansa][dog] )][( -COLS )] + destroy(Jon,rule(COLS,( --84 )),Ygritte)),foo(-Arya,TABLE[-Ygritte][Jon],rule(x,( ( -( mislead(-71,rule()) ) ) )) * ( ROWS / -ROWS )) / destroy(10.063,-12 - ( TABLE[Stark][( ( -49 ) * x )] ),1)) * mislead();
	--57 + foo(-( COLS ),( ROWS ))
};
	Stark *= destroy(-TABLE[y][---( TABLE[( rule(TABLE[Jon][-TABLE[( COLS )][betray(destroy(-( -82 + ( TABLE[-protect(Ygritte,-( Ygritte ),-30)][destroy()] + foo(--93 * Jon / 1,Sansa) ) ) / rule(ROWS)),-0.97 * foo(--10.38 / Jon,( ---0.6 )) + --94)] + Hodor + bar(ROWS,dog,-x)] + y,-rule(-93,protect())) )][( foo(-1,TABLE[mislead(-( foo() ) * --0.42 / x,-mislead(foo(x / ( -( 0.97 ) )),Arya))][Sansa] - -0.79,( 1 )) )] )],betray(4));
	if(--Stark * ( -0.85 ) + betray(Jon,( COLS - -0.12 ) * 9)){
	if(betray(Arya - dog - -91)){
	if(Jon){
	if(x){
	Sansa
} else {
	y;
	if(y){
	if(COLS){
	( ( 1 ) )
} else {
	Ygritte -= rule(-1 * TABLE[( 40 / betray(-( ( COLS ) ),COLS) / ( TABLE[( Sansa - TABLE[-( 0.55 )][mislead(protect(rule(ROWS + ( -x ),ROWS)) / ROWS,40.991,( -0.54 ))] / Jon )][-Hodor] ) )][Sansa] + betray(-1 + Stark,-85 * TABLE[( COLS ) / Arya / -0.79][TABLE[-1][( ROWS )]]) + --1000.44 * foo(-2) - 53);
	Sansa *= ROWS - --rule(x * TABLE[ROWS][Arya],-97) + -ROWS - bar(( ROWS ));
	Jon / 90
}
} else {
	if(1){
	if(Ygritte){
	if(( 0.91 )){
	--0.02
} else {
	( rule(TABLE[0.88][95] / 0.94) * mislead(ROWS * -( --mislead(( ( ( -( 0.23 ) ) ) ),Jon,-71) * -0.48 ) / mislead(x,( betray(-0.09) )),ROWS) );
	Sansa *= foo(Stark)
};
	Hodor -= --0.41
} else {

}
} else {
	-ROWS + Hodor;
	Ygritte += -destroy(foo(COLS,-( y ) - -0.82,( -( 70 ) )))
};
	ROWS
}
}
}
};
	-73
} else {
	( ( bar(Stark,TABLE[foo(Sansa,( ROWS ))][( rule(( ( --Hodor ) )) ) - ( foo(-80.4642) )],-foo(foo(mislead(),bar(),ROWS) / ( Jon ) - Ygritte - ( ROWS ) * -1 * ( COLS ) + TABLE[-0.51][x],1)) * 0.01 ) )
}
}
}
} else {
	-1;
	if(Hodor){
	TABLE[--1][--x / Sansa];
	Hodor += rule(-x,-49 + --betray(0.46));
	x
}
}
};
	if(y){

}
} else {
	Arya -= protect(TABLE[( ROWS )][betray(Jon,y)])
};
	if(--COLS){

} else {
	Arya -= bar(x,ROWS,( rule() ))
}
} else {
	Stark /= TABLE[--ROWS - ( Arya )][( rule() )] / destroy(COLS,TABLE[Stark][( -0.85 / destroy(dog,-y) )]);
	Arya += Hodor
}
}
var x = destroy()
var y = -99 + Stark
var Arya = ( -protect(-68,-0.28) / dog * y )
assert -( COLS ) : "One can not simply parse himself"
def betray(Sansa,y){
	betray();
	Ygritte /= TABLE[protect(( foo(ROWS - Ygritte,( COLS )) ) + bar(),( ( TABLE[TABLE[( x )][COLS]][ROWS] / Jon / destroy() - -bar(y) - x ) ),ROWS)][TABLE[TABLE[-x / betray(( ROWS )) * COLS][Hodor]][17]]
}
def TABLE[Arya][i] {
	Jon += ( -protect(protect()) )
}
def betray(dog){
	Jon;
	ROWS
}
var Arya = y / ( ---TABLE[( TABLE[-62][--COLS] )][ROWS] ) / dog
def foo(){

}
def betray(Ygritte){
	Arya /= mislead(ROWS * -COLS,Jon,destroy() / Stark);
	0.99;
	( ( TABLE[-90.8078][290.72] ) ) - Ygritte
}
def rule(y,Jon){
	-63;
	Stark += -3;
	ROWS
}
var Hodor = -Sansa * ( Jon ) - -0.65
assert betray() : "What do we say to the Lord of Death?"
assert ROWS : "Fear cuts deeper than swords."
def foo(x,Sansa){
	y += -foo();
	Sansa *= ( 58 );
	( --( Hodor + -48 ) + --Arya )
}
assert 750.7227 : "One can not simply parse himself"
def TABLE[-0.3 - ( Ygritte )][i] {
	Arya -= COLS;
	Sansa -= Ygritte;
	if(-Hodor){
	( TABLE[-bar()][mislead(ROWS,( -41 ),-0.73)] );
	if(protect(( -( ( 1 ) ) + -( Stark ) * TABLE[( TABLE[-0.01][( TABLE[TABLE[-TABLE[ROWS][( ( 20 * -0.31 ) )]][destroy(COLS,( Jon / ROWS ))]][( x )] )] )][protect(COLS)] ),( 78 - Jon ),( ROWS ))){
	if(( -0.21 )){
	-Stark - ( ( dog ) );
	Sansa *= x
} else {
	( COLS )
};
	Hodor - ( dog - y - COLS )
};
	0.43
} else {
	if(530.16){

} else {
	0.4;
	y += ( -0.11 )
};
	Hodor -= foo(-Ygritte + protect(46),-mislead(( Stark ),bar(( COLS ) / bar(mislead(Jon,140.48),( Hodor )),( ( -0.65 ) ))))
}
}
assert y : "Nothing burns like the cold."
def TABLE[TABLE[-Arya][Ygritte * Hodor + protect(x * -0.92,Hodor)] - bar(Hodor,-0.03) + TABLE[41][( ---COLS )]][i] {
	Jon /= bar(33);
	ROWS;
	-1
}
def bar(Hodor,Hodor){
	if(( TABLE[ROWS][TABLE[-TABLE[0.46][destroy(ROWS + ( -92 ))]][COLS * ( ( -0.08 * ( 10.3 ) ) )]] )){

}
}
def TABLE[---COLS - -1 - --0.3][i] {

}
assert x : "Fear cuts deeper than swords."
assert ROWS : "What do we say to the Lord of Death?"
def foo(y){
	Ygritte -= COLS
}
def rule(dog,Arya){
	if(---1){
	destroy(dog + Ygritte,Sansa);
	Ygritte *= TABLE[mislead(-mislead(destroy(bar())) / COLS + COLS,ROWS,mislead(( Jon )))][COLS] - betray(74);
	Arya *= COLS
}
}
var x = -( 1 / 160.65 )
def mislead(Jon){
	Arya /= 80 + foo(0.68);
	Jon += 72
}
def mislead(Ygritte,y){
	x *= -28
}
assert protect(COLS,( ( -1 ) )) : "What do we say to the Lord of Death?"
var Ygritte = -400.01
assert rule(-0.8,ROWS,x * TABLE[-COLS + TABLE[bar(Hodor)][rule(destroy(-y,( betray(protect(destroy(),( COLS ),( -1 )),dog,Hodor) )) / 0.94)]][betray(-TABLE[-190.737][410.05] / ( Jon ) * bar() * ROWS,-62)] / ( Jon ) * -0.13) : "Fear cuts deeper than swords."
def TABLE[mislead()][j] {
	if(y){

} else {

};
	TABLE[Sansa][betray(64,COLS)]
}
assert ( destroy(( ( -( TABLE[1][0.88 * ( ( ROWS ) )] ) + -0.29 ) ),( ( bar(-COLS + -0.67) ) )) / destroy() * destroy() ) : "Winter is coming"
def TABLE[--0.87][i] {
	if(Stark / 37){
	x /= ( ( ( destroy(Arya,( --bar(-89,0.4) / -destroy(( -620.399 / betray(y + TABLE[( 1 )][COLS],29) ),betray(Sansa),( ( -86 ) ) * 85 * ( 93 )) )) + --8 ) / protect(ROWS,1,Arya) ) * ( Stark ) )
}
}
def bar(Sansa,dog){

}
var Stark = ROWS - -78
assert 0.27 / COLS : "What do we say to the Lord of Death?"
def mislead(x,Arya){
	Hodor;
	if(( y )){
	( x * 99 );
	if(--0.1 / 0.58){
	if(foo(-59)){
	if(( ( ( ( ( Sansa ) ) ) ) )){
	Stark /= ( Jon )
} else {
	dog -= destroy(--16,0.94);
	if(-1){

}
};
	bar(COLS,Ygritte);
	x *= TABLE[betray(Jon)][Stark] * COLS
}
} else {
	Sansa /= mislead(-Ygritte * --0.04 / Stark,foo());
	Ygritte *= x;
	Stark
}
} else {
	if(( ( ROWS ) )){
	if(TABLE[destroy(Hodor) * mislead(mislead(destroy(rule(x,90,x),destroy(( rule(Ygritte) ),TABLE[( -Ygritte )][bar()],-( betray(-( --0.97 / COLS ),-( Ygritte )) ) * -17 * 0.88),-Hodor),-0.25 * destroy(-( -0.57 ),-10),ROWS),-( 1 ),Ygritte)][TABLE[COLS][mislead(ROWS)] / rule(TABLE[-COLS * ( mislead(-rule(bar(),( Sansa + Ygritte )) - x,COLS,-0.39) )][-62],COLS)] - ( ( ( Sansa ) ) )){
	Jon *= ( ROWS )
} else {
	( Sansa ) + y;
	-betray(-890.4263);
	--0.5
};
	y *= ROWS
};
	if(( Sansa ) - 0.43){
	Arya /= dog * ROWS / ( 1 ) * mislead(Ygritte,72,-0.43) * ( destroy(Jon) );
	Sansa -= -1
}
}
}
def protect(y,dog){

}
def TABLE[COLS][i] {
	Ygritte += --1 + -0.69;
	Hodor *= protect(-Jon,Arya)
}
def bar(Jon){
	dog /= 0.77
}
assert ( TABLE[dog][bar(foo())] ) : "Nothing burns like the cold."
def TABLE[-TABLE[0.97][-790.3444]][j] {
	rule(0.08,-88) + TABLE[COLS][-COLS * -( rule(( protect(TABLE[foo(--( 0.42 ))][( TABLE[betray(Hodor,80)][COLS] )],TABLE[protect()][Arya + x],--0.66 * bar(y,TABLE[-Sansa / -( ( TABLE[dog][x] ) ) + ( rule(( foo(Arya,y,protect(( -0.54 ))) )) )][ROWS]) / Stark + -( Stark )) ),-COLS - destroy(rule(Stark))) - foo(bar()) - 1 / x )]
}
assert -0.46 : "What do we say to the Lord of Death?"
def TABLE[betray(-0.11 - TABLE[-( Stark )][ROWS])][j] {
	if(Hodor){
	if(0.58 * -Ygritte){
	destroy(y,1)
} else {
	1
};
	protect(--betray(-Stark),TABLE[Sansa][COLS],0.33)
} else {
	if(COLS){
	TABLE[-( dog )][Ygritte];
	Ygritte *= ( TABLE[( ( y ) )][----rule(-protect(-( ( -21 ) ))) - dog + ( Stark ) + destroy(betray(betray(-0.99,-65 * -24),ROWS - ( bar(betray(y)) )),bar(-580.7),-520.3063)] ) * Arya
}
}
}
assert 0.35 : "Fear cuts deeper than swords."
assert -TABLE[ROWS / -destroy(( ROWS ))][Arya] : "One can not simply parse himself"
def TABLE[--Hodor - Arya][k] {
	if(Jon){

} else {

}
}
assert 27 : "Winter is coming"
assert Jon : "One can not simply parse himself"
assert ----1 : "Nothing burns like the cold."
var Hodor = dog
assert COLS : "What do we say to the Lord of Death?"
def bar(){
	( ( Hodor ) )
}
var Ygritte = -800.8133
def TABLE[protect(x)][k] {
	x += --90.7002;
	if(-61){

}
}
assert rule(Stark,0.42) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Stark){
	if(-470.36){
	( -TABLE[destroy(50 + betray(rule(ROWS,betray(Arya)),Sansa),( mislead(-100.9) ))][bar(ROWS) + -730.635 + ROWS] );
	Arya
} else {

};
	if(( x )){
	if(Arya - betray(bar(( ( ( COLS ) ) ),( ( protect(( ( COLS ) ) / ROWS,( -rule(rule(COLS,( 0.38 ))) ),Jon * Arya) ) ),Hodor) / Ygritte)){

}
} else {
	if(1){

} else {
	-790.99;
	if(( TABLE[mislead()][( -bar() )] )){

} else {
	Hodor *= foo(destroy(0.91));
	Hodor /= ( -0.79 )
};
	COLS
}
}
}
def rule(Ygritte){
	-ROWS;
	Ygritte *= bar(-TABLE[betray(0.26,( ( ROWS ) - -1 ),ROWS)][COLS],250.868)
}
def TABLE[---0.4 + Jon][i] {
	if(TABLE[--0.03][---Jon]){
	Sansa -= ( protect(( destroy(COLS,-bar(TABLE[bar(Arya,Ygritte,COLS) / -550.82 + -( rule(betray(foo())) )][dog],( ( Jon ) ),TABLE[( ( protect(ROWS,( TABLE[protect(( rule(rule(-( Hodor ),betray(protect(ROWS),TABLE[bar(ROWS)][-23] / 7 * -TABLE[-betray(foo(( foo(-Ygritte,( -95 ),bar(destroy(-protect() * ( rule(Jon,betray(( -Jon ),( -Stark )) * ROWS + -0.38) ),Sansa)) - -20.365) ),COLS))][protect(destroy(COLS,-0.42,( -rule(-0.09,TABLE[( y )][8],dog) / rule(-( dog / -bar(-7) - -0.97 / destroy(betray(--270.251,rule(( ROWS ) - betray(--1 / COLS / TABLE[Stark][COLS],( 4 ),ROWS) - betray()),-1),( bar(dog,-TABLE[--1 / -640.4122][1],( foo(( 320.426 ) - -ROWS,bar(ROWS)) )) )) - -160.7263 + --0.05 - -0.53 )) ) - ( foo(( -dog ) * Arya,protect()) * Sansa + protect(-( 560.5 ),0.44) ))) * --rule()]) - ROWS),( ( foo(-( ( ( ( -72 ) ) ) ),-( 69 ) / 1) ) )) * TABLE[TABLE[( ROWS )][( foo(( -23 )) )]][bar(720.996,bar(rule(-15,Arya,---Hodor - 0.29),bar(COLS / rule(( ( COLS ) )) / ( dog ),--1 + 0.98 * Stark - mislead(-61,y) + COLS / --651,-foo())))] ))][-230.78] ),Hodor * ( rule(bar(COLS),TABLE[ROWS][protect(( protect(-410.8998) ),rule(dog + TABLE[( -ROWS )][Sansa])) * -COLS]) )) ) ) + -58][COLS])) ),( 98 )) );
	if(( rule(Stark) )){
	TABLE[72][destroy(-290.049 * mislead(mislead(-0.21,protect(( protect(COLS,( -destroy(( betray() )) ),( ---98 )) ))),Jon,( dog )),-98)];
	if(COLS){
	if(0.54){
	Arya += Stark;
	if(rule(-y)){

} else {
	if(y){

} else {

};
	if(dog){
	if(( destroy(0.05 / Ygritte,1) )){
	dog -= rule(Arya) + bar(dog);
	if(0.86 - -bar(-( COLS ),ROWS)){
	if(-0.55){
	y *= -0.83;
	y /= ( rule(ROWS) ) + betray(foo(rule(COLS,---73 + ROWS) + ( COLS ),81),( Stark + Arya ));
	Sansa *= TABLE[230.67][-1]
} else {

};
	Arya *= x
} else {
	( ( -0.7 * rule(protect()) / TABLE[foo()][rule(Ygritte,( 38 ) + betray(mislead(bar(COLS)))) - Sansa * ROWS] ) );
	( dog )
}
};
	ROWS
}
}
}
} else {
	Ygritte += -1 + ( betray(TABLE[rule(-1,-TABLE[COLS - --dog][COLS],betray(-1,-betray(( -15 ),-1)) + ( --87 ) + foo(0.49))][Stark] + TABLE[ROWS * ( Hodor ) / -Jon * ---COLS / -rule(Sansa,TABLE[-40][Arya] / 48)][protect(7 * Hodor)],820.2367) )
};
	if(( -1 )){
	y -= dog;
	rule()
} else {
	Stark -= Stark;
	Jon += -( betray(mislead(-protect(rule(dog)) - 30.7725,protect(mislead(),mislead(),ROWS)),TABLE[21][foo(Jon)]) );
	Sansa -= ---ROWS
}
} else {

};
	Jon -= -rule(-0.72,COLS)
} else {
	Sansa /= -( ROWS );
	if(---300.1534){

}
};
	if(-TABLE[-1][mislead(Ygritte,foo(Ygritte,ROWS))]){

}
}
assert Jon : "Nothing burns like the cold."
assert -y / mislead() : "Fear cuts deeper than swords."
def protect(x,Arya){
	Sansa *= ROWS
}
def betray(dog,Arya){
	if(-( Arya )){

} else {
	Arya /= protect(----betray(foo(ROWS,TABLE[Ygritte][COLS],-( mislead() - -betray(( rule(-38) ),dog / ROWS / ( COLS ) + ( y + mislead(--ROWS) - Jon ),TABLE[---0.95][bar(-COLS,-0.12,( mislead() ))]) ) - -1),( destroy(0.44,bar(-TABLE[mislead(ROWS)][-0.57])) )) + COLS - TABLE[( destroy(bar(-1,--bar(ROWS,betray(),-52),--32)) )][( --betray(( y + 21 ),Sansa) * protect() * --TABLE[TABLE[-69][mislead(--82,mislead(dog)) + -protect(bar(1),-1) - --( COLS )]][37] )])
}
}
def betray(Stark){
	Arya /= ( -( 680.43 ) + -1 )
}
def TABLE[dog][k] {
	Hodor += Sansa;
	rule(( Arya - ( mislead(ROWS) - ROWS ) ));
	Ygritte
}
assert ( protect() ) : "Winter is coming"
assert ( -98 * Ygritte ) : "What do we say to the Lord of Death?"
def TABLE[protect(ROWS,Hodor)][i] {
	x;
	if(destroy(y,-( 0.67 ))){
	protect(( Hodor ) / --0.61)
} else {
	bar(x)
};
	if(ROWS){
	x /= betray(-( 27 ),-TABLE[ROWS][( ( 0.48 ) )],Sansa)
}
}
assert COLS / rule(TABLE[--betray() - -94 * -COLS][mislead(-1,52 + 0.02,destroy(( ( 640.98 ) ),rule(-ROWS,bar(TABLE[( 0.1 )][--foo(-Arya / 38 / ---61 * 270.75) + ( ( -betray(destroy(),ROWS) ) ) - x / ( COLS )] / bar(-foo() - -62,-1,bar()),Sansa))))],-x) : "One can not simply parse himself"
def mislead(Stark,x,Arya){
	if(x){
	if(-56){
	Jon += ( -protect() ) / -COLS;
	Hodor /= -34;
	-89
};
	if(79){

} else {

}
};
	if(( ROWS )){
	if(( foo() )){
	if(11){
	Jon;
	Sansa += rule(0.9 * -0.64,-mislead(-x * mislead(ROWS,y),x),940.299 / foo() - -0.83)
}
};
	ROWS
} else {
	if(-0.15){
	----foo()
}
}
}
def destroy(Stark,Jon,y){
	Arya /= -66;
	if(-( -1 )){
	Sansa /= TABLE[0.7][TABLE[1][-destroy()]]
}
}
def mislead(x){
	( --betray(Sansa * Arya) )
}
def TABLE[-( --( --( mislead(1,x) ) ) )][k] {
	dog -= -0.31;
	-0.76 + ( foo(mislead(-( ( ( y ) - -ROWS * -Sansa ) )),destroy()) - COLS );
	Hodor /= ( --4 * Hodor * protect() )
}
def TABLE[-( bar() )][k] {
	if(-51){

};
	x *= Hodor
}
def TABLE[mislead()][k] {
	dog /= dog;
	Jon += ( ( dog ) )
}
def TABLE[Jon][j] {
	TABLE[Arya][ROWS];
	-67
}
assert ( Arya ) - -0.11 : "Winter is coming"
var Hodor = -0.1
assert COLS : "One can not simply parse himself"
assert -0.4 : "Winter is coming"
var Jon = -( -0.3 )
def protect(){
	if(foo(COLS)){
	if(0.53){
	if(( COLS + ROWS )){

} else {
	Stark /= y
};
	protect(y,0.83,-TABLE[ROWS][( dog - rule() )]);
	if(mislead(y) - -400.069 * betray(COLS,--foo(ROWS,71) - Sansa + -bar(-COLS + rule(1),Arya,--ROWS + --ROWS)) + -0.31){
	if(--0.52){
	if(( mislead() )){

};
	if(mislead(rule(-Sansa,( ROWS )),Hodor,--TABLE[Arya][--74 - COLS] / ( COLS ))){
	( --310.88 )
} else {
	Jon += -Arya;
	Sansa *= y
}
} else {
	rule(0.13,destroy(rule(( ( ( destroy(( betray(destroy(),360.13,protect()) ),Stark) * --TABLE[Hodor][( -rule(( 4 ),Sansa) )] + 0.66 / Jon ) ) ))));
	( Sansa )
}
}
};
	COLS
}
}
def TABLE[0.33][i] {
	TABLE[mislead() - -60.13][( ( 73 + ( -0.68 ) ) ) + ( 520.5 ) / 97 + -COLS]
}
def TABLE[destroy(( bar(Arya - ( --( protect() ) )) ))][i] {
	Ygritte /= -86
}
def bar(Stark){
	Hodor -= --130.13;
	TABLE[--( foo(-ROWS - destroy(),--betray(y,COLS + TABLE[11][-Jon - COLS] * 410.601 + 930.885 / betray() * mislead(Sansa + -0.04) + protect(ROWS) * ROWS * -49 + bar(Sansa,( COLS ))) - -0.07 / -46,x) ) * Jon][Hodor]
}
var x = TABLE[--destroy(ROWS)][foo(-ROWS,1)]
def TABLE[y][k] {

}
def mislead(){
	if(protect(dog,-foo(foo(-Jon)))){
	if(-protect(bar(( COLS ),( ( ( mislead(( ( protect(x,Ygritte) ) )) ) - x ) ),Hodor + -78 + mislead(-0.36,( betray(mislead(foo(-0.69,COLS)),COLS) ),bar(ROWS + y,ROWS,-( dog - COLS - ( -( 0.92 - destroy() ) * ( -TABLE[TABLE[( foo() )][( COLS )]][-protect(-x,mislead(Arya,COLS))] + ( Arya ) ) ) ))) * Stark / foo(( ( ( -86 / foo(rule(),1) ) ) )) / ROWS))){
	--( ( -22 / ( Jon ) / -0.06 - ( protect(ROWS,Stark) ) ) );
	Ygritte -= -bar(( mislead(rule()) ),--0.15 - ( TABLE[x][( x )] ) / y) / foo(--0.09,rule(0.7,( bar(Ygritte,TABLE[-76][Sansa / -TABLE[-( -TABLE[betray(-50.3072)][Arya] )][Sansa]] * protect(ROWS) - Arya / -( ( protect(mislead(-1) - rule(--Arya,( destroy() )),betray(ROWS,( y )),destroy(Jon,-46) - mislead(( Sansa ),1)) ) ),( ( -Arya ) ) * protect(rule(-720.77,0.94),-36) * COLS) )))
} else {
	if(-COLS){
	dog -= -( -0.57 )
} else {
	TABLE[COLS][dog];
	Hodor -= TABLE[-y][Sansa];
	--( protect() )
};
	if(mislead(dog)){
	--ROWS / -COLS * COLS - foo(COLS);
	Jon /= x
} else {
	Sansa += COLS
}
};
	y -= ( rule() + -0.71 * COLS );
	-0.58
}
}
assert 35 + 0.91 : "What do we say to the Lord of Death?"
var dog = ROWS
assert ( -130.959 ) : "Nothing burns like the cold."
def TABLE[foo()][k] {
	betray(140.962 * rule(foo(bar(0.27,Sansa),-0.29),bar(),Ygritte),foo(( ROWS / 30 ) / COLS,protect(( ( destroy(( -95 ) * Jon,x,-Jon * ( -ROWS )) * -50 ) ))));
	-56
}
var Jon = ( y )
assert COLS : "Fear cuts deeper than swords."
def TABLE[-----( ROWS * --77 )][k] {
	if(-Sansa){
	Sansa /= dog;
	Sansa *= 79;
	if(ROWS){
	if(0.92){
	Arya /= 1;
	x *= ( rule(Ygritte) );
	-Hodor
}
} else {
	Arya *= COLS
}
};
	Stark += -40.76 + TABLE[( -Hodor )][ROWS];
	-betray(-mislead(( -0.686 ),betray(ROWS,protect(( ( ( 45 ) ) ),dog),( --destroy() )),mislead(( --( -600.7 ) ))),-( Arya ))
}
assert ROWS : "Nothing burns like the cold."
var Ygritte = -destroy(ROWS,( -50.5227 ) - -ROWS)
var Hodor = -220.309
assert COLS : "Winter is coming"
var y = Arya
def foo(Arya){
	dog;
	Arya += TABLE[TABLE[( -( ( ( -protect() ) ) ) * -28 )][bar() * mislead(( Arya )) - COLS]][bar(mislead(TABLE[( foo(bar(y),mislead(ROWS),720.242) )][mislead()]),mislead(TABLE[Jon][( 0.96 )],mislead(Arya,( -bar(-1 / Stark * foo(bar()) * -1 / -0.59) / --0.31 ),ROWS) * --16 + -( mislead(Jon,TABLE[420.47][-100.6]) - betray(ROWS / y,TABLE[rule(--120.5482 + TABLE[-480.8][( y * ( COLS ) )] * ROWS + ROWS)][( Stark ) + -4 - ( --0.65 + ( ( -7 ) ) * 0.89 / -960.4 )]) * ROWS + y )) + y + TABLE[Arya][ROWS]) - -0.19]
}
assert COLS : "Nothing burns like the cold."
def TABLE[Sansa][i] {

}
def TABLE[ROWS][j] {
	Stark += -78;
	destroy(TABLE[( -1 )][destroy(( ( ( ( Arya ) ) ) ),-----Ygritte / ( mislead(-rule(dog)) ),Sansa)],foo(Hodor * dog),( ( ( ( ---rule(-( --protect(protect(),ROWS) ),( rule(-0.91,( -53 - -1 )) / protect(-TABLE[-( -14 )][( ---43 )] / Ygritte) )) ) ) ) ));
	Jon += destroy(rule())
}
def rule(){

}
var Hodor = dog
var dog = TABLE[( COLS ) + -COLS * ( TABLE[ROWS][( ROWS / -690.58 + betray() )] )][-0.18]
var Hodor = rule(0.28)
var x = mislead()
assert -bar(betray(TABLE[x][-COLS],-( mislead() ))) : "Fear cuts deeper than swords."
def TABLE[-0.28][k] {
	if(-42){
	if(-( dog )){

} else {
	if(-dog){
	if(mislead(-59,( --Hodor * ROWS ),( -0.91 )) * 10.193){
	( 0.8 )
};
	if(-54){

}
} else {
	dog *= COLS
};
	x += Jon
}
} else {
	-92;
	if(bar(Ygritte,( 1 * TABLE[ROWS][ROWS] ))){

}
}
}
var Stark = Jon
def TABLE[COLS][j] {
	if(COLS){
	y *= -COLS
}
}
def rule(Sansa){
	( --1 );
	protect(betray(-betray(Jon),Sansa,betray()),TABLE[protect(-rule(Stark,-0.04) - Arya,( 990.53 ))][Arya],mislead(-( dog )))
}
var Sansa = ( ( Jon ) ) / ROWS / -COLS
var Hodor = ROWS
assert ( protect(protect(foo(),bar(-ROWS,( ( betray(-betray(),-0.88 / -Sansa) ) ))),( ( -47 ) ) - ( bar(ROWS,( mislead(-74,TABLE[-( ROWS )][( rule(rule(-Hodor,( COLS ),Stark),-0.81,--COLS) )]) ),mislead(mislead(-COLS,mislead(--( -82 ))) * ( bar(-0.85,x,foo(bar(Hodor,-betray(-COLS / --Jon / 18) - ( betray(( y )) )))) ),Arya) / 0.93 + 1) ) - -7) ) : "One can not simply parse himself"
def TABLE[ROWS + mislead(betray(),-0.21)][j] {
	if(protect(( 0.87 ),0.31)){
	y += -74;
	Sansa + -dog
}
}
def TABLE[betray(bar(COLS,Hodor * y / destroy(protect(Arya,-bar(),COLS)) / rule(ROWS,y) / ROWS,--( -COLS / dog )),Stark) * protect(-TABLE[Jon][ROWS],destroy(( ( x ) ),( ( betray(destroy(( -( ( ( COLS ) ) ) ),Jon,dog * -bar(Arya,TABLE[betray(( rule(( TABLE[0.6][COLS] ) + dog,bar()) ),( -0.11 ) * ROWS,COLS)][0.14] / betray(Arya))),Jon * destroy() / bar(COLS)) ) )) - ( ROWS ))][k] {
	destroy();
	Sansa += ( ( -bar() ) )
}
assert betray(-( ( ( -protect(47,betray(74,--0.12,-89)) + 43 ) ) ),( ( ( ---rule(Sansa,( Stark / -0.14 )) ) ) ),-350.4) : "Winter is coming"
def TABLE[( ( ( 0.95 ) ) )][j] {
	dog;
	if(mislead(-ROWS)){
	Arya += Sansa;
	y += -9
} else {
	Stark;
	if(Stark){
	betray(-TABLE[( -TABLE[rule(foo(Sansa / TABLE[ROWS][--( ( 46 ) )],( -19 ) / Stark,Arya),-85 + y)][-COLS] )][dog]);
	Stark *= bar(Arya - ( betray(protect(TABLE[( ( --Stark * rule(-ROWS,protect(-COLS,( Jon ) / 290.59),COLS) ) )][COLS]),( ( 0.69 + --( foo(( -y - rule(ROWS,COLS,83) ),rule(440.6031,TABLE[ROWS][0.72])) ) ) ) * ( ROWS ) * bar(--33,ROWS)) ) + ( ( COLS ) ),Stark,destroy(x))
}
};
	if(TABLE[-0.08][TABLE[-1][destroy(Arya)]] / ( -0.26 )){
	if(ROWS){
	Ygritte += mislead(rule(ROWS),COLS,-dog);
	-32 + -protect() - betray(( destroy(Arya + COLS,ROWS,( rule(Sansa,y) ) / TABLE[betray(mislead(protect(betray(-TABLE[( -430.814 )][Arya],Stark,270.38) * -TABLE[--520.84 / -770.673 + 0.82 + -66][71]),( ROWS ) / Stark,0.47 + ( 0.21 ) * mislead() + 450.34 / ROWS),betray(COLS,( Arya ))) + protect(Sansa)][( y )]) ),rule(( 1 ),( 34 ) * x)) / destroy(( TABLE[----COLS * ( y )][ROWS] ),COLS,foo(-COLS))
};
	Hodor *= -720
} else {
	( ( Hodor * TABLE[COLS][ROWS] * COLS ) );
	( ( y ) );
	if(( 0.18 )){
	if(mislead()){
	-destroy(0.1,y);
	Jon -= -( Sansa )
} else {
	Sansa *= -Ygritte
}
} else {
	Jon *= -( protect(betray()) ) * -betray(mislead(( -( -mislead(dog) ) + 40.3058 )),21 / ( Stark ));
	Jon += betray(-( ( ( Sansa ) ) ),bar());
	Hodor
}
}
}
def TABLE[betray()][k] {
	if(destroy(-1,Stark + protect(-Jon,20))){
	-38;
	bar(y,COLS);
	foo(rule(-destroy(Stark - y),-0.02),--0.4 + bar(COLS,foo(-Jon,0.99)) / COLS * destroy(mislead(TABLE[foo(y,destroy(69))][( COLS + TABLE[y][bar(-( COLS ))] )],Hodor),dog,( 1 ) - -dog))
};
	if(--Sansa + destroy()){
	x /= mislead(x,x);
	Arya += Stark + rule()
} else {
	COLS;
	960.68
}
}
assert protect(Hodor,ROWS) : "Nothing burns like the cold."
def mislead(x,Sansa,Jon){
	if(( COLS )){

} else {

}
}
def rule(){

}
def foo(){

}
var Sansa = x
def TABLE[( -0.73 )][j] {
	x;
	if(ROWS){
	if(-rule(Arya)){
	-0.63
} else {
	protect(COLS + protect(Arya) / rule(-690.1),y);
	-Ygritte
};
	Hodor -= Ygritte;
	-440.77
}
}
assert -rule(rule(47),COLS,Stark) + 0.93 : "Nothing burns like the cold."
def rule(x,Arya){
	( COLS / 0.77 )
}
def protect(Stark,Stark,Stark){
	ROWS;
	x /= -0.34
}
assert -dog * -99 * COLS / x : "One can not simply parse himself"
def TABLE[-0.38][i] {
	if(96){
	if(TABLE[( ( ( Stark ) ) ) / -Stark - -0.41][-x]){
	-1
};
	( --0.64 )
};
	ROWS;
	Hodor -= COLS - -Sansa * ROWS / -650.111
}
def TABLE[-280.24][j] {

}
def destroy(Jon,y){

}
assert -98 : "Winter is coming"
def protect(Arya,Sansa){
	Ygritte += bar(--0.85 + ( ( -0.2 ) ));
	Ygritte += -Sansa
}
def protect(Jon){
	if(-500.6){
	if(TABLE[ROWS][-ROWS]){
	x /= ( Ygritte );
	if(Stark){
	0.12
}
} else {
	( -dog )
};
	bar(-betray(COLS,90,y) + Stark) * TABLE[COLS + 0.87 + ( y * -( bar(rule(-0.29) / -TABLE[protect(78)][--Stark],( betray() )) ) ) * bar(bar(-( --25 ),-( -ROWS ) / 430.924 / ( Ygritte ),Jon),-7) - Jon * Sansa][( COLS )] - bar(-200.781 + Jon) - TABLE[ROWS * 91 / Ygritte * -bar(--Hodor - Stark)][bar(Arya / -foo(ROWS,rule()),Jon)]
} else {
	y *= ( y );
	x -= --TABLE[-70][---1];
	TABLE[Jon][Stark]
}
}
def TABLE[-( ( -COLS ) ) - ROWS - ( TABLE[( ROWS )][TABLE[( -92 )][betray(-COLS,( TABLE[TABLE[( ROWS ) + betray(1)][dog]][rule(Arya)] )) - ROWS]] )][j] {
	Ygritte += 0.54;
	if(-COLS){
	COLS;
	Arya *= -( betray(Jon,rule(-0.09),TABLE[35][TABLE[Stark][-160.168]]) )
}
}
assert -0.99 : "Nothing burns like the cold."
def foo(dog,x){

}
assert TABLE[y][ROWS] : "What do we say to the Lord of Death?"
assert TABLE[rule(-470.5392)][-COLS] + --Ygritte + TABLE[-( Hodor )][48] : "One can not simply parse himself"
var y = -TABLE[( -240.367 )][--21 / -ROWS] + betray(Arya) * Sansa / -ROWS - Ygritte * ( -110.5237 ) - ( -69 ) / -330.767 + COLS + rule()
assert x : "One can not simply parse himself"
def rule(Sansa){
	( betray(foo(destroy(88,( COLS ))),rule(( y - ( dog ) + dog / ( -1 ) / bar(dog,destroy()) * foo() ),destroy(( x ) * TABLE[COLS - TABLE[bar(TABLE[destroy(( ROWS + TABLE[y][mislead(TABLE[-91][0.53 * x])] + foo() ))][( -0.32 )],---( ROWS ))][y / 0.44]][( -dog ) + TABLE[-betray(( -81 - foo(TABLE[dog][x],( ( -1 ) ) - Jon / TABLE[Jon][TABLE[( COLS ) + TABLE[-( -Hodor ) + TABLE[-0.62][( mislead(( x ),ROWS) - TABLE[bar(( -43 ),TABLE[-protect()][-Ygritte])][--y] )]][Hodor]][Sansa] / COLS]) ),ROWS,-260.424)][Hodor] + -( Ygritte / ( rule(-550.86 * ( betray(rule(Jon,x),x,410.044 / -Ygritte * foo(0.61) / ( -89 / -mislead() )) )) ) )],-betray() / -Stark,dog) + -0.71 - -26 * ( 29 ),COLS)) )
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = foo()
var x = Stark
var y = bar(( Hodor ),Sansa)
def TABLE[bar(destroy(),ROWS)][k] {

}
var Arya = -740.84
assert dog : "Winter is coming"
var y = ( COLS )
assert ( -0.83 ) + -1 : "Nothing burns like the cold."
def TABLE[Hodor * -protect(( -Jon / bar() ),rule(1,betray(y,( -foo(Ygritte) )) + protect() - TABLE[13][TABLE[COLS][18]],foo(bar() / -ROWS,( protect() - ROWS ))) + ( COLS ),ROWS * TABLE[( Arya )][-0.37] - foo(mislead(TABLE[1][--0.32],-x + ( -0.89 ) - ---( ( 0.78 ) ),Sansa),-59)) - ( mislead(-( TABLE[ROWS][-20 - --10 / ( TABLE[Arya][1] )] ) / -69,Hodor,-1) )][j] {
	if(dog){
	Jon *= Sansa;
	if(foo(( ROWS ),bar(-( Stark - bar() ) / rule(-( -( -COLS / ( protect(-dog - dog) ) ) ) + -89,( Stark ),rule(-( ( protect(-Arya,( ROWS )) ) ) - ROWS,-ROWS)),Sansa,Ygritte),bar(-250.7))){
	-( Hodor ) / foo(( bar(560.5,dog) ),320.9531 / Stark);
	if(Sansa / -7 * ( --0.3 + dog + rule(TABLE[-500.427][( ( destroy(-( ( protect(-0.23 - COLS / --bar(betray(25 - foo(-60),COLS)) + COLS + y * ( COLS ) - Jon) ) ),-( -0.17 - 0.14 )) ) )] * betray(COLS) - Ygritte) ) / -80 + TABLE[-( ROWS ) * bar(ROWS,COLS,( 0.8 ))][( -y - 0.73 / TABLE[-y / -Ygritte / destroy(( bar() ),( -betray(TABLE[-foo(84) / -88][ROWS],Jon) - y * ( -ROWS ) * COLS )) - --64][foo()] )]){
	Ygritte -= Stark
} else {
	Ygritte -= --0.44 * -44 / -68 + Ygritte + TABLE[Sansa][( Arya ) * -43] + rule(rule(),Arya,Hodor);
	Ygritte *= COLS + protect(Ygritte);
	y /= x
}
} else {
	destroy(-ROWS * betray(TABLE[ROWS][-1],COLS))
}
} else {

}
}
var dog = 810.3
def mislead(Ygritte,Ygritte){

}
var Hodor = ROWS
assert -bar(dog,-mislead(( ( ( -mislead(TABLE[TABLE[COLS][-27] * ( Sansa )][bar()]) + ROWS ) ) ),-46 / ROWS)) : "Nothing burns like the cold."
assert -COLS : "Winter is coming"
def TABLE[protect(Arya,ROWS,-( ( mislead() ) ))][k] {
	if(TABLE[73][Jon]){
	if(( TABLE[TABLE[( ( -84 ) ) + 4][COLS]][( 0.19 ) / 0.86 * --0.26 / bar()] )){
	dog *= -Hodor;
	if(foo(Arya / --13 - 0.25 - ROWS,93)){
	Ygritte -= COLS;
	if(ROWS){
	-mislead(( TABLE[ROWS][foo()] ),TABLE[( -ROWS )][COLS],ROWS) * ( ( destroy() ) );
	Stark *= COLS
};
	Sansa += ( ( -1 ) )
};
	x -= ROWS
};
	--93
} else {
	dog
};
	-1
}
assert ---0.61 : "What do we say to the Lord of Death?"
def destroy(Arya,y){

}
def TABLE[destroy(mislead())][j] {
	if(--dog * x){

} else {
	if(Hodor){
	x *= ( COLS );
	Hodor *= 1
} else {
	0.61
};
	if(-( -0.24 ) * COLS){
	bar(( ( --COLS ) ));
	Arya += -( ( --490.977 ) ) - 0.23
}
};
	protect(-dog,-TABLE[COLS][mislead(Hodor,-32)] + rule(dog / COLS,destroy(TABLE[foo()][dog * rule(-protect(-4),TABLE[COLS][-840.6 * 43 * Arya],-40) + -( betray(57,-foo()) )]) / TABLE[( bar(( ( COLS / Arya ) )) )][-84],-( -0.27 / y ) * -0.85) * mislead(( TABLE[( ROWS )][ROWS * ( 730.74 ) - foo(( -0.17 * Sansa ),( x ),COLS)] ) + -COLS,--( ---0.24 ) + -( --( --0.68 * ROWS ) )))
}
def TABLE[Jon - ( Stark ) / ( -0.27 / y )][k] {
	Jon += COLS + -86;
	if(TABLE[-95][Arya]){
	-foo(foo(TABLE[-2][destroy(-1,( rule(-25,Stark + TABLE[( TABLE[-0.32][-( ( Jon ) )] )][ROWS],( -70 )) ),foo(protect(destroy(COLS,COLS,( betray(x) )),betray(-mislead(( 540.687 )),( Stark )) * foo(( rule(bar(0.74),protect(COLS),( -dog )) ) + foo(-( ( foo(-50.89) ) ),-Arya,-510.864)),x) / ( mislead(Stark) )))]) + -1)
};
	if(dog){
	-y;
	x += ( -( Arya ) );
	69
}
}
var dog = Arya
def TABLE[( --( bar(TABLE[TABLE[-0][1]][-1] - betray(foo(),( Ygritte )) / COLS,Sansa) ) - TABLE[destroy(-0.03)][( -Stark )] )][i] {
	if(( -( ( ( ROWS ) ) ) )){
	Sansa -= 0.61;
	y *= betray(TABLE[protect(Sansa,Jon)][( -290.267 )],-730.5,mislead(-22,( mislead() / Hodor ))) / -0.37
};
	if(( x )){
	dog;
	if(--6){
	if(( 12 )){
	COLS
}
} else {
	if(Arya){
	ROWS;
	-( ( y ) );
	if(-( -Jon / ( TABLE[Jon + foo(ROWS + Hodor,COLS,-1)][( -COLS - COLS )] ) )){
	if(COLS * -destroy()){
	Ygritte += 0.28;
	-Arya * Jon
};
	( ( -( --( Hodor ) ) ) );
	Sansa -= --1
}
} else {
	if(Hodor){
	Stark += -58 + bar(( Arya ),-0.38 / --42 / ( ( ( ( y ) ) ) ),1)
} else {
	Hodor -= -TABLE[bar(COLS,bar(-290.971,Sansa,y))][Sansa]
}
}
}
} else {
	if(740.313){
	destroy(( ( ROWS + TABLE[TABLE[-COLS][COLS]][-56] / COLS ) / -0.85 + ---dog )) * TABLE[Ygritte][-0.78] + COLS / 1
} else {
	Hodor += destroy(39) * ( protect(COLS) ) - ROWS
}
}
}
assert --Stark : "One can not simply parse himself"
def TABLE[rule(protect(--ROWS,1))][i] {
	if(TABLE[-bar(COLS,--ROWS,-10)][Ygritte]){
	if(COLS){
	dog *= ROWS;
	if(ROWS){
	COLS
} else {
	if(--600.7){
	Jon *= mislead(( ROWS * x )) - x;
	if(foo(-TABLE[x][( bar(--60.945) )],rule(-TABLE[bar()][( ( Ygritte ) )],-0.08))){
	y += Jon + rule(COLS - 1 / -COLS - dog,-betray(99,TABLE[( dog )][rule(-destroy() + 76,-y + COLS)]) / bar(),-1) * foo(( ( betray(( TABLE[foo(----92,x,Jon)][( TABLE[ROWS][Sansa / 0.96] )] )) ) ),ROWS,COLS) + Arya;
	( -foo() * 190.667 )
}
} else {
	if(( ROWS )){
	Sansa;
	rule(( -0.99 ),protect() * -0.81,Arya);
	if(bar(--( ( TABLE[protect(Sansa,-mislead(1,( ( Stark ) / mislead(ROWS,( 0.04 )) * -1 ),-ROWS))][ROWS] ) * -0.72 ) + -1 * TABLE[Arya][COLS] / -betray(mislead(TABLE[( ( mislead(0.77 / y + x - x / betray(Ygritte / ( -bar() )) / Arya / ( ROWS ) * Sansa,-foo(Stark,betray(TABLE[COLS][protect(-26)])) * TABLE[betray(--0.64 - protect(Hodor) / -( -Arya ))][--COLS] - --0.03 * foo()) ) )][--33],-9 - foo(TABLE[0.86 * ( bar(270.665) )][Arya],ROWS,COLS))),( Jon ),-0.86)){
	if(( foo(0.54,-dog,-dog) )){

} else {
	Arya /= mislead(690.958,-1) + Hodor
}
}
} else {

};
	if(-0.18){
	Arya += --TABLE[--60][( Jon )] - -0.92 - Jon
};
	x += Hodor
};
	TABLE[( ---( ( ( ( -( bar(( ( 0.78 + ( protect(37,---( -TABLE[Ygritte][Ygritte] + destroy(Stark / -protect(Jon),-0.68) - -COLS ),ROWS) ) ) )) ) ) ) ) ) )][Jon]
}
} else {
	Ygritte /= ROWS
};
	dog -= destroy(foo(x,COLS / mislead(COLS) + dog,( -( rule() ) )),y)
};
	x += betray()
}
def TABLE[-Hodor * Jon][j] {
	Hodor
}
def mislead(Sansa,Sansa){
	( protect(( Stark )) );
	if(TABLE[--mislead(TABLE[betray(81)][TABLE[Ygritte][-360.84]]) / ( -TABLE[( COLS )][( foo(0.9) ) - --Sansa] + ROWS ) / Sansa][38]){
	Stark *= Ygritte
}
}
def destroy(Arya){
	x -= ( ROWS )
}
assert ( -0.58 ) : "What do we say to the Lord of Death?"
assert ( ROWS ) : "One can not simply parse himself"
def TABLE[-0.3][j] {
	( COLS )
}
def protect(y,Hodor){
	if(bar(foo(rule(-protect(( ( ROWS ) ))),mislead(),( -mislead(ROWS) )))){
	if(Jon){
	Sansa -= TABLE[-COLS][bar(ROWS,-( -0.09 ))]
} else {
	COLS
};
	dog *= betray(-1)
};
	Jon /= -( COLS )
}
def TABLE[( betray() )][i] {
	Sansa /= Arya;
	if(-9){
	if(Ygritte){
	y *= -1;
	dog *= COLS;
	bar()
} else {
	if(TABLE[( ROWS )][0.28]){
	if(--TABLE[89][mislead(dog * Ygritte - Jon,-y - ( protect(protect(-1,Hodor,TABLE[-1][( COLS ) * dog]),mislead(foo(betray(TABLE[Sansa][Arya])) / ROWS),Hodor) ) + mislead(( destroy(mislead(0.03) - -1,-0.61) ) + TABLE[Jon][460.03]),-ROWS)] - destroy(( dog ),-rule(-34 * ( ( -0.23 ) ),Arya,-0.14),TABLE[bar(bar(COLS,--Sansa),ROWS)][rule(-0.55,Stark)]) / -0.28 * ( 0.98 - -Sansa ) / ROWS / Hodor - COLS - ROWS){
	-0.32;
	Ygritte *= -Arya
};
	x *= x;
	dog *= Sansa
};
	0.84
}
};
	y -= ROWS
}
var Stark = COLS
def TABLE[--Hodor][j] {
	if(360.308){
	destroy();
	if(ROWS){

}
};
	Ygritte += -0.58
}
assert COLS : "One can not simply parse himself"
def TABLE[bar(foo(Jon,TABLE[Hodor][Jon]))][k] {
	Stark
}
def TABLE[COLS][k] {
	Ygritte /= ( Stark )
}
def destroy(Stark,Sansa){
	if(( ( ( protect(-Jon,mislead(-ROWS)) ) + destroy(( ( --37 ) )) ) )){
	( COLS );
	destroy(protect(1,-1),-foo(Sansa))
} else {
	if(rule()){
	if(x){
	Ygritte *= COLS / -foo() - -( ( TABLE[Sansa][y] ) ) / 66 * -1 * ( ( Jon ) );
	if(Ygritte){
	y += ( Jon );
	mislead(Arya,y,-( -560.55 - Jon / -dog ))
} else {
	if(56){
	destroy(ROWS)
}
};
	if(( ( ( COLS + -foo(( ( -COLS ) ),( 98 ),( 70.365 + foo(-0.5,-1 + -1) / -0.68 )) * ROWS ) ) )){
	( 1 ) - dog;
	if(-foo(TABLE[--2][ROWS + ROWS] + -( ROWS ) * 0.18 / ( bar() ) * -( dog ) * TABLE[( y + ROWS )][-Jon] * ( ( protect(-( bar(COLS,( bar(mislead(COLS,mislead(1,-TABLE[mislead(-( rule(( Sansa ),Jon) / -( ROWS ) ) / ROWS,-protect(( ( -bar(COLS,betray(( foo(COLS * mislead(COLS / destroy(TABLE[x][14],destroy(Hodor)))) + ( 0.96 * betray(-mislead(-0.89,x,-Jon) / ( Arya )) * ( bar() ) ) ),46 / destroy(-50,-980.434,-0.79),( ( x ) )) / ( mislead(dog,x) ) * Stark) ) )),foo(COLS,( -ROWS - --38 * foo(COLS) + COLS / foo(mislead(ROWS),ROWS) ) - mislead(0.46,( bar(COLS) ))))][-Arya + -34 / --36 - Ygritte + -0.04 - -TABLE[x][dog]])),-510.2) )) ) * -46,-mislead(( ( -1 ) ),TABLE[COLS][Arya / betray(mislead(Sansa,--95),Stark)] + mislead(-0.63,Jon)) * TABLE[dog][dog] * -7 * --destroy(-8,( -96 )),( Stark )) ) ) - TABLE[-0.61][Arya])){
	Stark
}
}
}
} else {
	x -= ( 1 ) + Hodor * COLS;
	Ygritte += foo(1)
};
	Jon -= betray(( Stark ),-610.8) / ( -1 )
}
}
def TABLE[mislead(( TABLE[mislead()][COLS] ),ROWS)][k] {
	if(protect(x,bar(-640.64))){
	Sansa += TABLE[( --TABLE[rule(COLS - -0.13,0.85,COLS)][0] )][Sansa]
} else {

};
	if(71){

}
}
def TABLE[mislead(--1)][i] {
	if(0.68){
	( 23 )
};
	Ygritte /= -0.62
}
assert -63 : "Fear cuts deeper than swords."
def mislead(x){
	-35
}
var dog = 3 * ( ( ( ( -Ygritte - dog + ( foo(-0.17) ) ) ) + Stark ) )
var dog = -Sansa
def protect(dog,x){
	if(-0.68){
	if(-890.833 - bar() - TABLE[( Ygritte )][COLS]){
	Ygritte += Stark;
	Ygritte;
	Jon
};
	if(0.6){
	dog /= ( -0.4 );
	if(-( -( rule(foo(( -1 ),bar()) - x - -( 930.0307 ),ROWS) ) / ( protect(( protect(0.02 + ( ( ( 1 ) - bar(mislead(destroy(rule(( -dog ),-TABLE[( x )][bar(1) * Sansa - Stark * ( -73 ) * y])),COLS),protect(( ( x ) ),foo(ROWS,31) / -34 + ROWS),-( -75 )) / y ) )) )) ) )){
	Sansa += ROWS / ROWS;
	destroy()
} else {
	Ygritte *= Ygritte;
	y += --28;
	-TABLE[59][( -53 - Arya )]
}
}
}
}
def mislead(){
	Jon -= 1;
	dog *= Sansa
}
assert Ygritte + -( ( -foo() ) ) : "One can not simply parse himself"
def TABLE[destroy(-0.12)][j] {
	TABLE[bar(mislead(96,destroy(1,-43 + --mislead(Sansa) * ROWS / -770.8904 + ROWS * -61 * protect(COLS,-Stark) + Hodor * -COLS)),--destroy(-( Hodor ) / -78 / ( -( TABLE[rule(( Arya ),bar(dog))][Sansa - ROWS] ) / COLS ),rule(-1)) + ( COLS ) * 1 + bar(( COLS ),ROWS))][bar(COLS) / ( -foo(protect(Arya,-1),0.49) )] * ( TABLE[( Ygritte )][TABLE[( -17 )][-mislead(-0.64,52,mislead())]] );
	Hodor /= Ygritte
}
var Hodor = ( Stark )
var Arya = TABLE[x][800.28]
assert -betray(Sansa,COLS,( ( y ) )) : "Nothing burns like the cold."
assert -protect(( --protect(-0.32,-1 - ( protect(-( protect(ROWS) / -0.16 + ( TABLE[( -destroy(TABLE[destroy(Ygritte,-betray() * -91,Jon + --Stark - protect())][50]) )][-40.76] ) * -Jon ),y) )) - ( destroy(-0.1) ) + bar() ) - ( --0.04 ),ROWS,TABLE[24][y]) : "Winter is coming"
def foo(Ygritte,Sansa){
	TABLE[( ( Jon ) )][destroy(-dog,---1)];
	-COLS;
	COLS
}
assert COLS : "One can not simply parse himself"
var Hodor = ( betray() )
def betray(Sansa,Stark,dog){

}
assert --23 - ( mislead(9,mislead(ROWS)) + -ROWS ) * -1 - ( protect(ROWS,ROWS) ) - ROWS + TABLE[Ygritte][-1] : "Fear cuts deeper than swords."
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = Ygritte
assert -92 : "One can not simply parse himself"
def betray(dog,y,y){
	--ROWS;
	Ygritte - --mislead(( Sansa ))
}
var Ygritte = Stark
def TABLE[( ROWS )][k] {
	if(-( 7 )){

};
	TABLE[( ( 10 ) / -( ROWS ) * foo(ROWS,0.05) )][--( ( -21 ) ) * -0.63]
}
assert -( ( -83 ) ) : "What do we say to the Lord of Death?"
var dog = -0.91
assert dog : "What do we say to the Lord of Death?"
assert protect(( 390.9 ),-bar(protect(Ygritte,foo(),-ROWS),ROWS) * -77,-( Arya )) : "Fear cuts deeper than swords."
def mislead(Stark,x,x){
	x;
	if(foo(-260.9899) / 0.79 + ( ( TABLE[-( x ) - -9 - -0.76][0.15] / TABLE[protect()][0.19] ) )){
	destroy(-31) + ( foo(66) )
}
}
assert -( protect(COLS) ) : "Fear cuts deeper than swords."
var x = protect(dog,TABLE[ROWS][-51],COLS)
var Stark = ( -Jon )
def TABLE[( ( -62 ) )][j] {
	TABLE[dog][--18];
	dog /= ( 0.16 )
}
assert -betray() : "What do we say to the Lord of Death?"
def rule(){

}
def TABLE[-0.61][j] {
	if(rule(Hodor + rule(TABLE[--90.1387][Arya] * -( Sansa ),-mislead(rule(),ROWS)))){
	( 730.53 );
	-( -Stark * destroy(Stark - ( Hodor ) / --3,( COLS + COLS / ROWS / Sansa ),--0.43 * 37) / COLS - -9 );
	Sansa += ROWS
}
}
assert ( -( ( -0.4 ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -protect(-160.562 * ROWS) * COLS * destroy(1,TABLE[Arya][-54] * --COLS)
var Ygritte = Arya
var dog = foo(mislead(( 0.76 ),ROWS),Sansa,( Stark ))
def mislead(Sansa,Hodor){
	-y
}
def rule(dog){
	if(Ygritte + ( ( ROWS ) )){
	1
}
}
def betray(dog){
	mislead(-0.62);
	if(ROWS / -0.83){
	Sansa += ( COLS );
	y /= foo(foo(TABLE[Arya][100]),destroy(-700.6,-mislead(0.11 * Ygritte,protect(COLS,-880.12),y)))
}
}
def TABLE[COLS][k] {

}
var Sansa = ( COLS )
def TABLE[ROWS][j] {
	Sansa *= ( -850.3559 + -1 )
}
def TABLE[Stark][i] {
	x /= ( dog )
}
var dog = ( x )
def betray(Sansa,Sansa,dog){
	( -protect(TABLE[( 0.39 )][( -890.42 )],ROWS,Stark) - -TABLE[rule(( -13 ),( 0.62 ) - ROWS)][TABLE[protect()][--0.8 - -bar(protect(( 38 - destroy(---protect(),ROWS) ),-670.0484))]] );
	if(mislead(ROWS)){
	rule(84);
	if(COLS){
	if(rule(Hodor)){
	-80.796;
	if(67){

} else {
	-1
}
};
	-y / -60.4
} else {
	--dog;
	if(95){
	if(Sansa + --Sansa + ( 0 ) - TABLE[0.99][-( foo(970.92,bar(COLS,0.9)) )]){

} else {
	Sansa *= ( mislead(0.75,Jon,( -1 ) / --( COLS )) );
	if(TABLE[--1 + COLS][( x )]){

};
	if(-13){
	if(Hodor){
	Sansa *= Ygritte
} else {
	Jon
}
}
}
} else {

}
}
}
}
def destroy(Stark,Arya,x){
	y;
	foo(-( COLS ),( -710.73 ))
}
def foo(Sansa,Arya,y){

}
def TABLE[Ygritte][j] {
	Stark *= ROWS
}
assert 1 / -1 / ( -y / COLS ) + ( bar(--1 + 450.11) ) * Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--0.4][i] {

}
assert Sansa : "Nothing burns like the cold."
def rule(Sansa){
	-8;
	Stark -= TABLE[TABLE[( ( Ygritte ) )][bar(-0.62,-25,TABLE[-35 - TABLE[dog][x] * mislead(--73 - ROWS + protect(-0.24))][( -( -0.72 ) )])]][ROWS] / -( ( ( 810.705 ) * y ) )
}
def TABLE[rule(-( ROWS ) + 0.31,Stark)][j] {

}
def bar(Hodor,Sansa){
	if(( -( -1 ) )){

}
}
assert ( rule(-45,-mislead(rule(Ygritte,x),dog)) - ( TABLE[( TABLE[16 * 1][TABLE[0.39 + foo(x) * ( -( -0.15 ) )][-( -0.09 ) + ROWS]] )][dog] ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Hodor){
	x *= bar();
	-x;
	Hodor /= x / TABLE[-ROWS][COLS]
}
def TABLE[-foo(TABLE[foo(COLS / ( ROWS / ROWS ),destroy(),( betray(COLS,TABLE[ROWS][-mislead(( Stark ) - ( COLS ),-TABLE[Stark + -TABLE[mislead(( 63 ) + betray(mislead(COLS,53) - rule(( -( -0.13 ) + 0.82 ),( 52 ))),ROWS,-13)][-ROWS] * ROWS][( 610.4 )] + 0.72,( -COLS )) / Stark],-Hodor + -COLS) ) / -1)][-betray(betray(( protect(500.8,TABLE[COLS][380.63]) ) * rule(93,( ( -97 / ( mislead() ) ) ) * ( 1 ))) / -y / rule(),ROWS * TABLE[--ROWS][Jon]) * 0.85] + ROWS / ( ( -0.02 ) ))][k] {
	Sansa /= betray(Arya) + -0.58
}
def bar(Hodor){
	--TABLE[-( Stark ) - Sansa][Ygritte / COLS] * ( Jon * ( ( destroy(--18) ) ) ) / dog
}
var x = Hodor
def destroy(Ygritte){
	if(-1){

};
	if(Sansa){
	Jon *= --0.71
}
}
def rule(x){
	betray(Arya);
	Jon -= 0.93;
	if(Hodor){

}
}
def rule(Sansa){
	rule(-destroy() - Hodor);
	Arya -= -Hodor;
	if(-550.9269){
	y -= -( -( protect(-COLS,rule(rule(),Sansa)) ) )
}
}
def destroy(Stark,x,x){
	if(-TABLE[( 0 ) / betray(dog,-ROWS)][destroy(---5)]){
	betray(betray(-22 * ( ROWS )),-65,betray(-ROWS + destroy(( COLS ),-dog),-0.54 / --0.43,-510.37)) - ( ( --( x + ( 1 ) ) ) ) / ( -( ROWS ) )
} else {
	x /= x;
	Jon += ( bar(-ROWS / -COLS * -( destroy(( protect() - mislead(( 1 )) + --520.83 - -400.7422 ),Sansa - 390.94,bar(--COLS - -60.14,Ygritte)) ) / ( COLS ) - ( -75 ),TABLE[Sansa][foo(-ROWS + protect(Ygritte / betray(1 * COLS,Arya),-( 0.45 ) / -( Jon ) + COLS,-96),Stark - COLS,75)],Hodor) );
	Arya += dog
};
	Ygritte *= --1
}
def bar(Arya){
	( -bar(0.2) - rule(0.12) ) / TABLE[bar(( ( -1 ) ))][ROWS] + -0.85;
	if(0.79 - Ygritte * 80){
	94 + 0.02;
	if(( betray(x,mislead()) )){

} else {
	y -= Hodor;
	x;
	--0.18
}
}
}
def TABLE[( COLS + ROWS )][k] {
	dog += ( ROWS );
	rule(--( foo(-100 * ( ( ---betray(( foo(ROWS,COLS + Ygritte) / -0.43 ),-1 / Hodor) ) )) ) * COLS);
	y /= Hodor
}
def betray(Hodor){
	dog *= ROWS
}
def betray(Sansa,x){
	Stark /= destroy(betray(Hodor,30.5),y)
}
assert TABLE[bar(( --dog ),-betray(-TABLE[y][betray()],-0.74 * -50.9975),-x)][Arya] : "What do we say to the Lord of Death?"
var dog = --0.85
def betray(Jon,y){
	-92
}
def protect(y){
	-Arya;
	Sansa *= COLS;
	if(Ygritte){
	-1
}
}
def betray(Jon,Jon){

}
assert Arya : "Fear cuts deeper than swords."
def TABLE[( x ) * ( dog )][i] {
	if(0.94){
	460.955;
	19
};
	ROWS
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 99 : "Nothing burns like the cold."
assert Arya + Jon : "Winter is coming"
def protect(Stark,y){
	if(rule(-80,rule(--dog)) * COLS){

}
}
var Arya = --80.2
var Ygritte = Ygritte
def protect(x,y,Ygritte){

}
def betray(){

}
def rule(x,Stark,Ygritte){
	TABLE[Jon][bar(( ( ( ( -Arya ) - -COLS ) ) )) - ( ROWS )]
}
def destroy(Arya,Jon,Arya){
	-( Ygritte )
}
assert ( -destroy(( -6 )) ) : "Nothing burns like the cold."
def foo(Hodor){
	if(TABLE[Stark][dog]){
	Ygritte;
	Arya /= 0.49
} else {
	if(--( Hodor ) - COLS - foo()){
	dog -= -69;
	Jon *= -destroy(destroy(0.39 + TABLE[( Stark / ROWS + x )][( rule(mislead()) )]),y)
} else {
	rule(COLS,-bar() * 1);
	dog += -Sansa - ( Ygritte );
	if(Ygritte){
	( -980.79 );
	if(dog){
	dog
}
}
}
}
}
def TABLE[790.94][j] {
	820.9827
}
assert ( -( ( foo(COLS + bar(-TABLE[( bar(Stark,COLS) )][ROWS]) / mislead()) + Jon ) ) / Ygritte / Hodor ) : "Winter is coming"
assert mislead(-Arya,( --ROWS + foo() ),foo()) : "What do we say to the Lord of Death?"
var Ygritte = ( ---Ygritte ) + TABLE[-( ( betray(dog,betray(( COLS ),--33)) + protect(( ( -1 ) )) ) )][y]
var Sansa = -( TABLE[foo(Jon,mislead(ROWS,COLS) + protect(1,-910.968,-rule()))][ROWS] / destroy(bar(( -rule(y,--0.86 - -( 0.48 ) / --protect(),y) ))) )
assert -( -29 ) - -destroy(-23) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = 73
def foo(dog,x){
	Ygritte /= protect() / ( TABLE[COLS][--0.98] )
}
def protect(Arya){
	if(dog){
	bar(mislead(( 1 ),-910.687 - betray(-1)) / Sansa);
	if(ROWS){
	dog -= ( --Sansa - -23 ) + -( foo(Ygritte,1) ) / Sansa;
	if(rule(-TABLE[COLS][Sansa],( 410.78 ),TABLE[TABLE[--betray(x,mislead(-TABLE[-bar(mislead(Jon,1,Stark))][y],-50 * -1 * -0.84 / COLS),( -Sansa ))][Jon * betray(COLS)]][x])){
	if(COLS){
	if(730){
	if(( destroy(-Jon,-ROWS * ( Hodor ) / -88 - TABLE[-( COLS )][foo(COLS,dog) + ( betray(( bar(-ROWS) )) )]) )){
	if(0.78){
	-rule(( ( x ) ) * TABLE[-19][TABLE[Hodor][Sansa] * ROWS])
} else {
	if(( Jon )){
	if(Sansa){
	--0.64;
	Ygritte *= ( foo(TABLE[-430.48][-( COLS * 0.3 ) / rule(-0.35,( foo() ) / ROWS / Stark - Hodor - ROWS,-Hodor)]) );
	x += Jon - -x + 1
} else {
	Hodor /= 1;
	x;
	if(-protect(-0.31)){
	if(ROWS){

};
	Stark += y
}
}
};
	0.56;
	0.16
};
	if(( -rule(-rule(TABLE[( ( bar(( Jon ) / ( Arya ),Sansa) ) )][530.339],-0.16,COLS),93) )){
	foo(-( COLS ),ROWS) / COLS;
	if(Hodor){

}
}
};
	Hodor *= y
} else {
	( 66 );
	if(Hodor){
	-( ( Hodor ) ) - ---811 / betray()
};
	--1
}
}
} else {
	if(-76){
	if(-0.04 - TABLE[foo(0.33,-76,0.32)][Jon] - -40){
	( bar(-0.64) ) / ( -( protect(860.165,( dog )) ) )
} else {
	Jon *= ROWS;
	Sansa /= ROWS
}
} else {
	Ygritte -= foo(rule(mislead(protect(Sansa,destroy(-bar(-0.36,--betray(1),Hodor),-( ( --rule(--ROWS + destroy(( TABLE[-0.55][-Jon] ),Jon)) ) + dog )),-TABLE[rule(( Jon ),-1)][( --( -mislead(betray(mislead(-0.45),( COLS ))) / Ygritte + ROWS - -ROWS / ( -COLS / COLS ) ) )]),ROWS),--COLS * -1,( ( mislead(COLS) / Hodor / 97 ) )),270.9538);
	( betray(x) - COLS );
	Stark += -1
}
}
}
} else {
	( 0.58 );
	Ygritte -= -23
};
	if(Hodor + -160.981){

};
	if(-22){
	Sansa += destroy(( bar(( ( Stark ) )) + destroy(COLS,rule(COLS / TABLE[Jon][COLS] / TABLE[-1][betray(ROWS)] / rule() - ROWS,destroy(( ROWS )),-55)) )) / 0.3;
	dog /= TABLE[-Jon][COLS]
} else {
	Stark -= 670.502
}
}
var dog = ( COLS )
def TABLE[COLS][i] {
	ROWS;
	Hodor /= TABLE[COLS][( -0.84 )];
	( ( -40 ) )
}
def TABLE[-31][k] {
	if(Stark){
	( --betray(-mislead(destroy(( ( -0.99 ) ),TABLE[betray(Arya * COLS,foo(---1 / -( -990.23 )))][--1 + 0.98]),-( 43 ) / TABLE[( -0.32 )][0.62] + ( ROWS )),betray(-( bar(Arya) ),TABLE[( ROWS )][ROWS],( TABLE[Arya][ROWS] ))) ) - ( -790.02 + Arya );
	if(destroy(--COLS - protect(-2,Hodor / foo(ROWS) - -Jon + 0.26,0.47),( --53 ) * dog + -( ( --( COLS ) + Sansa ) ) / Stark,( --ROWS / ( mislead(COLS) ) * Sansa ))){
	if(-( ROWS )){
	-0.93
} else {
	bar(betray(foo(-0.22) + -( 1 * Hodor ),bar(TABLE[-15][mislead(-990.35 - destroy(TABLE[-TABLE[-0.49][-0.34]][0.72 * y + ( -COLS )]) - ( -destroy(15 * mislead(dog)) ),--destroy(destroy(COLS),ROWS,mislead(( TABLE[betray(-Jon) / rule(rule(-betray(),( ( bar(Hodor,COLS + 0.68) ) )))][( 0.52 )] ))) + --1 * --COLS - protect(ROWS,500.808) + 40.48)],Hodor,destroy(COLS))),Hodor)
}
}
};
	y
}
var Stark = Ygritte
def TABLE[bar(bar(0.62),ROWS)][j] {
	Ygritte *= 0.18
}
var Ygritte = ( Stark )
assert TABLE[ROWS][bar(y) + -( ( Arya * Hodor ) + ( -( ( ROWS ) ) ) ) + ( ( ( Arya - Arya - -450.34 ) ) ) - -rule(foo(protect(),TABLE[-5][---1 / -0.42] - foo(ROWS,( -x * Stark ),-( foo(-destroy(--0.88,( mislead(dog - ( --0.45 ) * -( -39 )) ),-0.87)) ))),bar()) + Hodor] : "What do we say to the Lord of Death?"
assert ( --84 ) : "Winter is coming"
def TABLE[rule(Ygritte,-y,--ROWS + -1) * ( protect(( -( -1 ) )) ) + -y + bar(( bar(Arya) ),mislead(0.64,rule(20)),betray()) - destroy(ROWS)][i] {
	if(bar(mislead(81,--Jon + -y))){
	if(710.1 / 0.71){
	dog *= 47
} else {
	betray(destroy(Ygritte),( Ygritte ),-440.58);
	Arya -= ( -25 );
	if(( -( ( Ygritte - 34 - COLS * x * --48 - foo(protect(),COLS,-Arya) - ( --0.93 - ( ( ROWS ) ) ) ) ) )){

} else {
	if(Hodor){
	x *= ( -43 ) - --ROWS
} else {
	Arya += -1 - TABLE[TABLE[( COLS )][TABLE[22][Stark]]][-770.4928]
}
}
}
};
	betray(65,1)
}
def betray(dog){
	COLS
}
var Sansa = COLS
def TABLE[-( ROWS ) + -Ygritte][i] {
	Ygritte *= ROWS
}
assert dog - bar() : "What do we say to the Lord of Death?"
def TABLE[TABLE[COLS][-35]][i] {
	x -= -Arya
}
assert TABLE[--Sansa][mislead(( COLS ),y)] : "What do we say to the Lord of Death?"
def destroy(Arya){
	if(ROWS){
	if(( -300 )){
	dog;
	if(COLS){
	x -= dog;
	ROWS * TABLE[bar()][Arya]
}
} else {
	Jon /= betray(( ( Arya ) ),-rule(),-0.18)
};
	destroy(rule(COLS),betray(y,bar(-0.09,0.87,protect(mislead(COLS - -TABLE[Arya][COLS * ( ( mislead(-54) ) )],TABLE[( Jon )][-680.9])))),ROWS)
};
	if(Stark){
	Hodor *= Arya
} else {
	if(rule(ROWS)){
	if(( TABLE[Ygritte][-35] )){
	if(mislead() + -1){
	if(-0.25){
	if(COLS){
	Arya /= COLS;
	Hodor *= 0.76
} else {
	Sansa += ( ROWS )
}
};
	( -93 );
	Stark += TABLE[( ( foo(0.14 / Ygritte,COLS) / -15 ) )][-72]
} else {
	bar(Ygritte)
}
} else {
	if(( ( ( -910.82 ) * TABLE[-80][ROWS - ROWS] ) )){
	Stark *= mislead(( 58 ) - ( ( ROWS ) ))
}
}
}
};
	Stark += COLS
}
assert Jon : "One can not simply parse himself"
assert ( -rule(betray()) / COLS + ( TABLE[dog][rule(( ( --mislead(destroy(-Jon,-1)) ) ),( 1 ))] ) - Stark ) : "Winter is coming"
assert ROWS : "Winter is coming"
def TABLE[Hodor][i] {
	( 0.08 )
}
def mislead(Hodor,Stark){
	dog -= COLS;
	Sansa -= TABLE[( -protect(( 0.49 )) )][-protect(( ROWS ),--( Hodor + foo(TABLE[ROWS][( -39 ) + 0.74],COLS) ))]
}
def rule(Sansa){
	Hodor -= ROWS;
	( ROWS )
}
def TABLE[foo(--( Stark ),36)][k] {
	-protect(ROWS / -TABLE[rule(-( ( destroy(destroy(COLS) / -1 / rule(( Ygritte )),COLS) ) ),Hodor)][-COLS] * -foo(-1 * Jon,Sansa),Jon - -( -0.47 - -ROWS ) * ( TABLE[ROWS][0.42] ))
}
assert ( Arya ) * foo(69,protect(-TABLE[ROWS * dog][rule(( -foo(-88,43) )) / protect(betray(( 0.24 )),TABLE[bar(-1 / protect(( -betray(COLS,-290.627,0.11) - ( dog ) * -1 ),ROWS * y),-ROWS,-13)][protect()])] / -( -Ygritte ),( dog ),( foo(410,-TABLE[1][-COLS] * ( -rule(bar(ROWS,Arya),betray(destroy(),Arya)) ),-14) / -Sansa - -( TABLE[( Ygritte )][-Jon * COLS - -26] ) )),-x) * destroy(( ( foo(-0.74,0.55) ) ),--ROWS * ( -510.4254 )) : "One can not simply parse himself"
var Sansa = Hodor
def betray(Arya){
	if(rule(( destroy(ROWS * bar()) ))){
	if(COLS){
	Hodor /= 1
};
	if(71){
	if(-( ( TABLE[-1][-foo(protect(),25 - 8)] ) ) / --930.278 - Ygritte){

};
	if(55){
	if(-1){
	if(destroy()){
	ROWS;
	72;
	1
} else {

};
	Sansa /= 0.21
} else {
	dog / COLS;
	if(25){
	if(dog){
	ROWS
};
	Hodor *= ( COLS )
}
};
	( 200.182 );
	27
};
	if(x - ROWS){
	if(rule()){

} else {
	Sansa *= bar(( -foo(-1) ) * 0.83);
	COLS - 1;
	if(1){
	COLS;
	bar(foo())
}
};
	if(foo(--45,ROWS)){

};
	dog += ( mislead(-( ( -ROWS ) ) - mislead() - mislead(Hodor,---( rule(Ygritte,rule(--Stark,( dog ),y)) + protect(COLS,TABLE[TABLE[foo(--ROWS + --76,x)][rule(( y ),ROWS)] + Jon][Stark * ROWS / TABLE[x][TABLE[1][y]]]) ),TABLE[bar(protect(Jon / -460.35,COLS)) / -0.67 - Arya + -0.98][430.28]),1) )
}
};
	Jon
}
}
def TABLE[-ROWS / --1][k] {
	if(foo(( ( -betray(97 - ( --1 ),Sansa - Jon / TABLE[foo()][( ( 97 ) )] / -foo(Jon) * -78 / TABLE[( -( --TABLE[( -( Hodor ) )][ROWS] ) )][rule(betray(0.61,-( Arya )))] * ( ( 1 ) ) / ( COLS ) * Arya * ( y ) / Ygritte) ) ))){
	if(TABLE[foo(Stark)][Jon]){
	if(COLS){
	-Jon
};
	dog /= ( Sansa ) * ( Ygritte )
} else {
	-670.1071;
	-( ( x / ( -Stark ) ) - ROWS )
}
};
	Arya *= destroy(-Ygritte,-destroy(-0.04,2,mislead(Sansa,y,( ROWS ))))
}
var y = rule(bar(( -67 ),Sansa),-0.35)
def TABLE[-42][j] {
	dog /= -0.21;
	if(ROWS){
	Hodor -= -0.08;
	x *= COLS;
	if(Hodor){
	Hodor *= -Arya;
	if(Jon){

} else {
	if(TABLE[-Ygritte][Ygritte]){
	if(ROWS){
	y -= Stark
} else {

};
	Sansa -= -1
} else {
	if(--86 - 93 - Hodor){
	y *= COLS;
	if(( ROWS )){

} else {
	if(bar(1) + rule(ROWS)){
	-0.24;
	if(-betray(betray(mislead(TABLE[ROWS + dog][COLS])))){
	Stark /= bar(-0.18,1);
	y += ---99
} else {

};
	Arya /= ROWS
};
	if(( bar(--( betray(-0.85) ) + -COLS) )){

} else {

};
	Hodor -= 0.68
}
};
	rule(( destroy(( Sansa / ROWS ),-0.09) ),ROWS * TABLE[( -ROWS )][dog]);
	if(TABLE[16][Sansa] + -83){
	Arya /= -30.9983
}
}
}
}
}
}
def TABLE[-0.65][k] {
	Ygritte /= -bar(protect(( ROWS ),( 47 )),betray(-destroy(),0.39) / TABLE[Hodor][-970.07]);
	-250.79
}
var Sansa = -Sansa * --Arya + -( x )
def TABLE[COLS][i] {
	-y
}
def bar(dog){
	Hodor += 52
}
def TABLE[-ROWS][j] {
	y -= ( ( -( mislead(-620.7824 / -1) ) - ROWS ) );
	-1
}
var Jon = ( destroy(54,mislead(-protect(mislead()),( 90.213 )),-rule(ROWS - COLS,y)) )
def mislead(Jon){

}
var y = 91
assert Stark : "What do we say to the Lord of Death?"
assert -30.7 : "What do we say to the Lord of Death?"
assert bar(TABLE[( ROWS + protect(-COLS - ( dog ) + Jon * 90) - -46 ) + ( -70 - -( y ) )][( rule(-Arya) / COLS )],( -0.32 )) : "One can not simply parse himself"
def betray(){

}
def bar(Sansa){

}
var Jon = 56
var Hodor = 43
var Stark = -0.37
var Arya = ( protect(( -Jon ),Hodor) )
def TABLE[Sansa][k] {
	if(( -COLS )){
	if(25 * -0.74){
	( 1 );
	if(TABLE[TABLE[-COLS][18] * Jon][( mislead(( COLS ),mislead()) )]){
	( ROWS )
}
};
	Sansa /= Hodor
} else {
	mislead();
	y * ( COLS )
};
	-0.28;
	dog
}
def betray(Arya){

}
def protect(Ygritte){

}
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y){
	if(-( y )){
	-Sansa;
	if(TABLE[-Ygritte / ( 75 )][Jon]){
	if(betray()){
	if(( ( bar() ) )){
	Hodor += -31;
	if(0.68 / -37 + x){
	Sansa += dog + ( ( Hodor ) * Ygritte - 710.3354 / rule(-1 / ( -990.4894 ),destroy(( COLS ),( -27 / -betray(-ROWS) / x * -COLS ),-bar(Hodor,-70,-64))) ) + destroy(y,ROWS);
	1;
	Jon /= Stark
};
	TABLE[( ROWS ) + ( -6 * y )][-( 1 ) * -mislead(-foo(-49,-TABLE[-0.91][foo(y,Stark)],COLS))]
};
	-45;
	-( -73 )
}
}
}
}
var Hodor = betray()
assert -44 : "Fear cuts deeper than swords."
def TABLE[Arya][i] {
	y -= y - Stark;
	if(( dog )){
	x += -COLS;
	( 0.57 ) / TABLE[foo()][ROWS] - -Arya
};
	Ygritte
}
var x = ( destroy(Sansa,( destroy(-( -protect() * bar(dog * COLS,-( -15 ) - -y / ( Jon ) * y * 70) + -1 )) ),( destroy(-( destroy(Jon) ) / -COLS,y,-( 7 )) )) )
def TABLE[COLS][i] {
	if(ROWS){

};
	if(foo(mislead(-dog,-ROWS),destroy(Stark) / destroy(COLS + ( -96 )),-( 98 + protect(690.3861) ))){
	if(-betray(Hodor,Sansa) + COLS){
	Stark += -0.47
}
}
}
def destroy(Jon,y,x){
	ROWS
}
def rule(Ygritte){
	( ( Arya - 37 ) )
}
assert --1 : "Winter is coming"
def TABLE[( -protect(-protect(x) * 0.74,Jon,( ( ( Arya ) ) )) ) * rule(-1)][k] {
	Sansa *= ROWS;
	rule();
	if(--( -5 ) - TABLE[----ROWS * destroy(1,( ---0.75 + 1000.14 ))][-63]){

} else {
	if(Stark){
	y += -0.44;
	COLS;
	dog /= -Sansa
} else {
	--0.95 + 190.13 / -( ( ( betray() - Hodor ) - 660.9 ) );
	Sansa /= -53 + ( -COLS );
	-Arya
};
	Sansa += ( betray(27 - ROWS - betray(),( --44 ),COLS) )
}
}
def bar(Hodor,Jon){
	Sansa += protect(foo(foo(dog),ROWS,mislead(bar(COLS,-0.54,-26))))
}
def protect(){

}
assert ( Arya ) : "Fear cuts deeper than swords."
def betray(){
	if(( bar(0.34,foo()) - -TABLE[ROWS][( 1 / -58 )] - TABLE[y][protect(mislead(33))] )){
	if(Sansa / x){
	Arya *= rule(Hodor * Arya,-0.42);
	mislead();
	if(( ( ( TABLE[y][1] + -410.4 ) ) )){
	x;
	Ygritte * bar(COLS,destroy(-0.39)) * ROWS * rule(-0.14,( ROWS ),( 0.89 )) - ROWS;
	dog -= -90
}
} else {
	if(dog){
	dog /= rule();
	x /= COLS;
	if(protect(-Hodor)){
	if(ROWS + Ygritte - ROWS * COLS + 63){
	if(bar(( destroy(protect(Ygritte,( ( ( -1 ) ) )),TABLE[1][ROWS]) ))){
	if(-0.9){
	if(TABLE[Ygritte][( ---0.28 + ( -46 ) )]){
	Jon -= Hodor
};
	if(bar(COLS,y)){
	if(COLS){
	-Hodor;
	Stark *= -ROWS;
	Hodor /= -22 + protect(-27 * TABLE[( -1 )][TABLE[destroy(bar())][-ROWS] + bar(Arya,-1000.544)])
} else {

};
	y -= ROWS
}
}
} else {

}
} else {
	if(TABLE[mislead()][ROWS]){
	Hodor -= protect(Sansa);
	destroy(( -1 ),destroy(-( -bar(TABLE[0.61][( ROWS )],--Ygritte,TABLE[COLS - ( ( -ROWS ) )][-0.5]) + ( -dog ) / rule() ),COLS))
}
}
}
};
	Hodor += --Jon
};
	if(91){
	if(ROWS){
	Jon - COLS;
	if(-destroy(y + ( -0.15 ),dog,-0.11) / -y){
	ROWS
} else {

};
	Hodor
}
}
}
}
def TABLE[Ygritte][i] {
	if(0.57){

}
}
assert 1 : "One can not simply parse himself"
def TABLE[-1][k] {
	if(Hodor){

} else {
	if(( -TABLE[rule()][490.79] - ( dog ) )){

}
};
	if(bar(rule(( TABLE[protect()][bar(destroy(COLS),foo())] ),COLS),TABLE[COLS][protect()])){
	y -= ( -COLS ) - -1
} else {
	if(-COLS){
	if(destroy(protect(--ROWS + ROWS,-TABLE[ROWS][40.6]),-0.73)){
	if(TABLE[Ygritte][0.19 + Ygritte]){
	TABLE[-y * ( x ) / mislead() / -ROWS][260.607];
	dog -= 610.48
} else {
	-( destroy(-0.3) / dog );
	dog *= y
};
	Stark -= ROWS
};
	( mislead(-0.35,-40.612,TABLE[destroy(73,foo(COLS,-dog - y - Jon,-0.11)) - -ROWS - -rule(-foo(TABLE[Stark / x][ROWS],( ---Hodor + TABLE[mislead()][-COLS] ),( 0.13 - ( --0.44 * -( x - -betray(COLS,-1) * foo(-protect(TABLE[( rule() )][( -bar(betray(),mislead(( -y / 10 )) - bar(( Stark ),x)) )])) + -97 ) - Sansa * 0.84 + ( -x ) ) ))) / Jon - ROWS + 0.71 / -70.2 + ( -betray(64 + -x,TABLE[Stark][( ( ( COLS ) ) ) * betray(bar(( -bar(Hodor,820.68) ),( y ) + -x,COLS),dog)]) ) - dog][COLS]) )
} else {
	TABLE[0.42][bar(42)];
	rule(49,Arya)
}
}
}
def bar(Hodor,Ygritte){
	if(COLS){
	Ygritte += Jon;
	Arya += ( ( -24 - 80.852 - protect(protect(betray(COLS,COLS) - Arya / TABLE[rule()][ROWS] * 50 * x),dog * ( dog )) + mislead(mislead(COLS)) ) )
} else {
	( ( 640.9647 ) - ( ( 0.1 ) ) ) / -protect(-0.92);
	y *= -bar(1,-Stark);
	x + mislead(Ygritte,Sansa)
};
	mislead(TABLE[TABLE[bar(--600.55)][( mislead(-1,300.11) + --mislead(COLS,TABLE[0.89][( ( y ) / ( -bar() ) - protect() * 30 )]) )]][-0.82],-320.85);
	if(( mislead() / -TABLE[rule(x)][( -COLS - --mislead() )] * ( ( Stark ) * -x ) / betray(( Stark )) )){

}
}
def bar(){
	Ygritte += -( betray(TABLE[( ( Ygritte ) )][-( Jon + -rule(bar(ROWS) + COLS / --COLS - ( -590.8 ) + ROWS,Hodor,x) )]) );
	x
}
def TABLE[-980.15][k] {
	y *= -Stark;
	Ygritte += Sansa - -COLS
}
var y = Hodor
def protect(Ygritte){

}
def TABLE[y][k] {
	x -= TABLE[foo(Ygritte + foo(( ( -Hodor ) ),TABLE[-( -ROWS + Stark )][10.8793]))][rule(-betray(( --y - COLS )),COLS)]
}
var Jon = Sansa
assert mislead() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ---54 + mislead(rule(Stark,( betray(--680.682 * destroy(Hodor)) ),x),--( -Arya - TABLE[Jon][rule(mislead(COLS,COLS))] - TABLE[Arya][-( -1 ) / Hodor + ( 51 )] )) * protect(rule(dog)) / dog
def foo(){
	COLS
}
def bar(x,Ygritte,Jon){
	TABLE[destroy(betray(( -rule(Hodor,TABLE[( Jon )][TABLE[-Stark][-x]]) - mislead() ),( Stark )))][TABLE[protect(-rule(),COLS)][mislead(( -0.99 ))]] * -COLS
}
def TABLE[x][i] {
	Jon += -dog - ( -1 )
}
def TABLE[COLS * COLS][i] {
	Stark *= COLS
}
def protect(Arya,x,Stark){
	if(TABLE[-( -( ROWS ) ) - ( ROWS )][TABLE[Sansa][foo(protect(bar(bar(-protect(-ROWS - -32,--1,( foo(y,-1) )) / ROWS),y),0.53))] / 35 - ( 36 )]){
	( -Arya );
	if(-310.9){
	Stark += TABLE[-Sansa * -Ygritte / ( TABLE[( Hodor )][Arya] )][Sansa]
} else {

};
	Stark + ROWS
}
}
assert Ygritte : "Nothing burns like the cold."
var Ygritte = -460.059
assert -bar(bar(foo() * 73 + -destroy(Hodor,foo(Ygritte,betray(TABLE[mislead()][bar(-Stark,TABLE[destroy(x * destroy(COLS) + -ROWS,-290.6446)][-( rule() ) + foo(y - ROWS,--47)])]) + foo(ROWS,-720.316) * Ygritte,-65)) / Stark + COLS / COLS + Hodor,Arya),Stark,Jon) : "Nothing burns like the cold."
assert -37 : "One can not simply parse himself"
assert mislead(-81) : "Fear cuts deeper than swords."
def TABLE[Arya][j] {
	( --0.81 );
	if(mislead(betray(-( ( -mislead(dog) + protect(Hodor,Ygritte - COLS) - TABLE[dog / -Jon / ( COLS )][-betray(--COLS - foo(--foo(rule(( TABLE[-x][Sansa / -53 - ( -64 )] )),( mislead() ) - COLS - --92 * ROWS),bar(( Hodor ),protect(-Arya,ROWS)) - -12) / TABLE[protect(TABLE[COLS][( 720.5744 )]) - betray(TABLE[TABLE[x][Sansa - ROWS]][( TABLE[betray(--0.42 + -860.23 + Jon)][--Ygritte] )] / -( TABLE[COLS][Jon] * protect(-950.4) ))][10 * COLS],Ygritte + betray(-betray(bar(rule(-( destroy() ) + Stark,-0.72,ROWS * rule(-0.3) * -Ygritte * ROWS),( COLS - dog ) / --0.23 - --mislead(foo() * COLS),-90)),( ROWS ),( protect() )) + ( -48 - -56 ) / TABLE[mislead(--TABLE[Arya][rule(-( 0.29 )) + --1 + Jon],mislead(-42,TABLE[( ROWS ) - ( -( Arya ) ) / y * Ygritte][bar(rule(COLS),dog) / ( ROWS ) * foo(( -0.75 )) / y] - -0.43,mislead() * ( -860.47 )),( Stark ))][-betray(-destroy(-( betray(ROWS) )),COLS)])] + -Jon * ROWS + ( --11 ) ) ),Stark),-52)){
	rule(Sansa,COLS);
	if(-1){

} else {
	Stark *= ( Hodor );
	if(TABLE[Ygritte - ( protect(( TABLE[( -dog )][-11] / ( -67 ) ) * --47,TABLE[Arya + ( mislead(-0.37) ) - Stark][-destroy(x,-0.1,bar(-1))]) ) + destroy(( ( Sansa ) ),Jon)][Sansa]){
	TABLE[destroy()][( Ygritte )];
	if(ROWS){
	betray(-0.66,mislead(( 92 ),protect(COLS)))
};
	if(--0.29){
	if(-bar(130.7611 * ( 1 ),protect(foo(mislead(COLS,( COLS )),betray(( Sansa ),TABLE[-44 + ROWS][-540.95 / 8 * mislead()]))))){
	if(ROWS){
	if(Hodor){
	Hodor += dog
};
	if(rule(-dog,bar(ROWS,( ( 560.01 ) )))){
	if(-0.42){
	if(Sansa){
	-( protect(destroy(-Hodor)) ) + --y;
	( COLS / -0.96 );
	foo(TABLE[0.52][TABLE[dog][36 + ROWS]])
} else {
	Stark
}
}
} else {
	( ( -foo(( betray(Ygritte,( -( -( 0.65 ) ) ),-0.67) )) ) ) / 0.41;
	Sansa *= -COLS / 76
}
} else {
	if(ROWS){
	if(57){
	1
};
	( --0.35 );
	Hodor -= Arya
} else {
	if(-1){
	if(--0.74){
	COLS
} else {
	if(Arya){
	Hodor /= ( protect(ROWS,destroy(-0.21 * Stark)) );
	x += -80
};
	ROWS;
	( ( -0.05 ) )
}
} else {
	Ygritte += ( ( ( ( Ygritte ) ) ) )
};
	if(-1){
	if(0.77){

}
}
};
	420.579 + bar(Arya * Hodor * ( TABLE[( Hodor )][( -COLS ) * --foo(( -( ROWS - Arya ) )) - 1] ))
}
} else {
	y;
	COLS
}
} else {

}
}
}
} else {
	if(-bar(betray(ROWS,y,-83),TABLE[( TABLE[ROWS + COLS + Hodor][-20] - ( TABLE[ROWS - ( TABLE[-Ygritte][1] ) + protect(Sansa,Stark) * y][( y )] ) )][-destroy(-1 / COLS,--mislead(x,0.21 - ( -0.81 )) / COLS) - betray()]) - Jon){
	Ygritte /= -Stark;
	if(bar(-1 * dog,COLS) - mislead(destroy(( -1 )))){
	Arya *= Hodor + ( ( COLS - destroy(Jon) ) ) - 0.26;
	if(-0.96){
	-7 + Arya
} else {
	dog *= Arya
}
} else {

}
} else {
	dog
};
	Ygritte *= ROWS;
	if(destroy(( ( TABLE[( -0.56 )][Stark] ) ),dog,-( mislead(-1,x) ))){
	Hodor *= rule(COLS);
	if(--x){
	-81;
	if(ROWS){
	x /= ( ( rule(protect(0.23,Arya,Stark - foo(COLS,-98)) - Hodor,-0.28) ) )
} else {
	2;
	-1
}
} else {
	if(ROWS){
	Sansa -= -76
} else {
	Ygritte += ( -0.96 / rule() / 64 )
}
}
}
};
	Arya += -protect(0.84,( 0 ),( COLS ))
}
var Ygritte = ( Hodor )
def mislead(Jon,Ygritte){
	Arya += TABLE[-1][( -betray(49,destroy(-0.4)) )];
	if(TABLE[--y * --0.07 / mislead(protect(( bar(Arya - Stark) ),-COLS),bar(-( COLS ))) - ROWS / ROWS][ROWS]){
	if(TABLE[foo(-( -0.42 ) - y,Hodor)][TABLE[-ROWS / bar(32) + -1][y]]){
	Ygritte *= ( 0.69 )
};
	Hodor * ( -1 )
}
}
def destroy(Jon){
	Jon -= -Stark;
	Ygritte
}
def rule(x,Sansa){
	if(( -Hodor - -Jon / Ygritte * x )){
	if(( ROWS - ( dog ) )){
	Sansa;
	if(bar(-Hodor / 46 - ( 1 ) / ( -( ROWS ) ))){
	if(10){
	Stark /= -830.02
}
} else {
	x *= destroy(destroy(-0.18),mislead(COLS));
	if(betray(-COLS)){
	dog += -( -TABLE[1][destroy(-0.99,( -destroy() / mislead() - TABLE[x][x] ),( -( -( destroy(Hodor,TABLE[ROWS][x]) ) / COLS ) ))] )
}
}
} else {
	x;
	Sansa -= COLS;
	if(-78){
	y /= -1
}
}
} else {
	x += x;
	bar(protect(1,TABLE[Jon][COLS],-39),( destroy(rule(foo(( COLS )))) ))
}
}
def destroy(Arya){
	ROWS;
	if(dog){
	y /= -COLS
}
}
assert ROWS * ( -( --670.4 / ( ---1 ) + ( ( Ygritte * -( 570.2 ) ) ) ) ) : "Fear cuts deeper than swords."
def TABLE[COLS][j] {

}
var dog = COLS + 79
def TABLE[-Jon + Ygritte * -1][i] {
	if(-410.396){
	Jon /= Ygritte;
	if(( y )){
	ROWS
} else {

};
	( Stark ) + ( ( ( bar() ) ) + --1 )
};
	dog += Arya
}
def TABLE[rule()][k] {
	ROWS;
	-1;
	Arya *= -1
}
assert ( mislead(TABLE[Arya][rule(-0.11 / ( ( ROWS ) ) * ( dog ))]) ) : "Winter is coming"
def betray(Stark,dog,Hodor){
	if(COLS){

} else {
	ROWS
}
}
var dog = Sansa / COLS * 1 * ( rule(betray(destroy(85,TABLE[TABLE[mislead()][Hodor]][COLS]))) )
def bar(y,x){
	Sansa -= ( --( foo(-36,( -COLS ) + mislead(y) + mislead(-0.63 + y,COLS)) ) )
}
var x = -( 910.721 ) + ( -Jon ) - -950.94 - COLS
def TABLE[-1][k] {
	Arya;
	Arya;
	x /= Ygritte
}
def TABLE[-ROWS][j] {
	if(Hodor){
	( mislead(( -0.34 ),-28) + -1 );
	if(-900.906){
	if(( ( -COLS ) )){
	dog *= betray(0.24,-0.15)
} else {

};
	Stark += dog;
	-0.4
} else {
	( 1 )
}
};
	Sansa -= -x + ( ---230.15 );
	if(mislead(-mislead(),-Sansa)){
	TABLE[-0.93 + 860.4738 + -850.984][-53]
}
}
assert ( ( Ygritte ) ) / -0.46 : "One can not simply parse himself"
assert -71 : "One can not simply parse himself"
var Sansa = --0.85 - ROWS
assert x : "What do we say to the Lord of Death?"
def foo(dog){
	if(ROWS){
	if(protect(-1,-TABLE[Jon][0.3],Sansa) * -0.78 - --rule(-Hodor / COLS) * ROWS){
	Arya -= ( protect(( mislead(530.599) ),( Jon ),ROWS) )
};
	54
} else {
	if(( Stark / Arya / -72 )){
	( protect(Sansa / 0.96,( ( -rule(( ( ( destroy(-TABLE[protect(COLS,-95,TABLE[TABLE[Ygritte][TABLE[betray()][-( -0.09 )]] * ( ROWS / TABLE[( TABLE[ROWS][( --Arya )] )][84] / dog )][0.91])][( x )],( Jon ) / -10.727,--( ROWS )) ) ) ) - TABLE[-10][TABLE[TABLE[( ( rule(-0.32,-mislead()) ) )][-( COLS ) * -0.67 / rule(-950.83)]][protect(-77,Jon,-0.28)]],TABLE[( Sansa ) * -( TABLE[ROWS][mislead() - Sansa] )][betray(-1)]) ) ),-destroy(betray(-ROWS)) * COLS * -x) )
}
};
	( -( -( -dog ) ) )
}
assert COLS : "Nothing burns like the cold."
assert foo(-TABLE[rule()][ROWS]) : "Fear cuts deeper than swords."
var Jon = mislead(TABLE[ROWS][-ROWS],( dog )) + --0.88 * TABLE[Jon][Arya]
assert 0.14 + ( x ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = Sansa
def betray(Ygritte,dog){
	Arya -= ( betray(TABLE[COLS][( ( x ) ) - TABLE[-foo(-Ygritte)][COLS * --250.773 - ( -1 / 0.71 )]],COLS,TABLE[( -0.07 )][COLS]) );
	if(Hodor){

}
}
assert -( ( TABLE[( Hodor ) / foo()][x] - -1 ) - bar(betray(Jon),COLS) ) : "What do we say to the Lord of Death?"
var Hodor = ROWS
def mislead(x){
	Stark *= -COLS + rule(Sansa,-0.49) + rule(protect(rule(Stark,ROWS),x),y)
}
def foo(Jon){

}
def TABLE[( rule(destroy(COLS * TABLE[11][dog]),( -63 )) + -( y ) + -0.8 ) * -590.7541 - dog][i] {

}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--( y )][j] {
	if(bar(ROWS)){
	Ygritte *= --790.233;
	( ( Sansa - TABLE[mislead(Sansa,--Sansa)][-0.7] + ( 81 ) ) - -COLS + 23 );
	Jon /= 1
};
	x *= protect(Jon)
}
def TABLE[-TABLE[( -25 )][-1]][j] {

}
def TABLE[bar()][j] {
	TABLE[170.02][( -220.9216 )]
}
assert ROWS : "Nothing burns like the cold."
var dog = -mislead(bar())
def TABLE[-66][k] {
	Jon /= ( ROWS );
	if(-0.83){
	Ygritte += COLS
}
}
def TABLE[TABLE[( Sansa )][betray(Stark,( --0.12 ))]][i] {
	Stark -= ( bar(( -0.33 ),Sansa) );
	if(-dog){
	if(-79){
	if(destroy(y)){

};
	if(mislead(( -33 / betray() - -Hodor ))){
	--( foo(TABLE[( betray() ) + -0.7][dog],protect(-34,-140.8284,Arya)) )
}
}
}
}
assert COLS + dog : "Nothing burns like the cold."
def TABLE[ROWS][j] {

}
def TABLE[dog][k] {

}
assert -1 * ( ROWS ) : "Winter is coming"
var Ygritte = ROWS
var Hodor = ( protect(TABLE[-mislead(( rule(rule(),-490.93 * Ygritte,y) ))][-( ( ROWS ) )] - -bar(TABLE[-Stark][-bar(protect(destroy(-0.82,( ( -foo(COLS,mislead(10),TABLE[COLS][rule(COLS,TABLE[Stark - Arya][COLS])]) - -51 ) )),COLS),( y ),Stark)],--Jon,( ( dog ) * -( 33 ) )) / Jon - ( COLS ),( COLS - ( bar(( ( ( ( 1 ) ) ) )) ) )) ) + 510.7151
def mislead(Stark){
	Jon *= Arya
}
def bar(dog){
	y -= -Jon
}
def TABLE[( dog )][j] {
	if(-y){
	bar(--( bar(( foo(Sansa,destroy(-79),COLS - -31) ),730.2) ))
} else {
	TABLE[-100.0247][( x )];
	if(dog){
	Sansa += Arya;
	Ygritte += Arya + -bar(52)
}
};
	-77;
	if(( -0.99 )){
	if(TABLE[COLS][Jon] / 0.63){

};
	-mislead(COLS,foo(Ygritte));
	Hodor *= 90
} else {
	x
}
}
var Arya = -destroy() - ( -1 )
var x = TABLE[( foo(TABLE[TABLE[-Ygritte + Jon][-betray(ROWS,Stark + 82) - ( protect(destroy(-( 1 ),900.7828)) )]][( ( ( bar(0.58 - -880.7,COLS) ) + ( -56 ) ) )],destroy(( bar(( ( ( COLS ) ) )) ) - ( 92 )) / TABLE[-TABLE[81][foo(---( rule(-81,--1) ) * Sansa,mislead(0.26,( -0.49 - ( 1 ) )))]][foo(-dog,-COLS) + Ygritte - -22]) )][( -mislead(COLS,-5) )]
var dog = ( ( foo(x) ) )
var Jon = -0.29
assert Jon : "One can not simply parse himself"
def TABLE[( TABLE[( COLS )][y] ) / COLS + protect(( -ROWS ))][i] {

}
var Stark = -20
var Arya = TABLE[COLS][( destroy(( ( ( -( -9 ) ) ) ),-bar(-( 10 - Arya ) + bar(protect(-rule(),bar(foo(-280.7),bar(rule(COLS),-TABLE[destroy(betray() * TABLE[-65][( COLS )] / --0.37,Sansa)][Sansa]) * -0.65)),TABLE[TABLE[COLS][-Sansa]][Arya / ( Ygritte )]) / -foo(-75)),-1 - y) ) / destroy(( protect(COLS) ))]
assert -protect(421) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert mislead(Arya) : "What do we say to the Lord of Death?"
assert rule(--ROWS / protect(-0.27) * -( -( -0.53 ) ) - ( TABLE[Hodor][Jon] ) / TABLE[dog / x][Jon] * -ROWS * Ygritte - ( TABLE[( ( -0.01 ) + Hodor + mislead(( rule(7) )) )][-COLS - betray(-( ( 1 ) ))] ) - protect(ROWS),1) - -Sansa * -Arya : "What do we say to the Lord of Death?"
assert Ygritte : "What do we say to the Lord of Death?"
def TABLE[Hodor][k] {
	if(( destroy(8,betray(-destroy(ROWS) - ROWS)) )){
	if(-1){
	y -= ROWS;
	if(-( Stark )){
	y += 1
}
}
} else {
	if(foo(Sansa)){
	99
} else {

}
}
}
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[COLS / -( foo(-protect(( foo() ),COLS,Ygritte)) )][rule(( ( ( -COLS ) ) ),-( -83 ),-Hodor)]][j] {

}
def bar(Jon,x){

}
assert ( -Ygritte + -0.52 ) : "What do we say to the Lord of Death?"
var Ygritte = ( TABLE[foo()][mislead() / -1 - -COLS] ) + -destroy(( ( bar(0.78,destroy(Jon,dog,destroy(-( -1 ) * ( ROWS ),Jon))) ) + 0.51 / -0.58 / TABLE[-( --1 )][COLS] )) / -( -1 )
def mislead(Ygritte,Ygritte,y){
	if(protect(---( ROWS ))){
	( 910.4 );
	if(--( COLS ) - 81 * -dog){
	Jon;
	y += dog;
	mislead(COLS,-380.7575,dog)
}
} else {
	Sansa / y;
	560.4946;
	if(Stark){
	dog -= y
}
};
	Stark *= 1
}
def TABLE[Jon][k] {
	Hodor -= betray(66,-destroy(rule(COLS),-betray(TABLE[ROWS][--x],Sansa),( betray(TABLE[betray() / ( --1 ) * COLS / -0.98][rule()]) )) * Ygritte * x * ( bar(ROWS,25) ) + 18 + betray(x + Sansa));
	( 0.6 )
}
var Hodor = 520.61 / bar(mislead())
var Sansa = ROWS - protect(mislead(bar(( -1 ))),( TABLE[Ygritte][TABLE[0.39][( rule() ) - 180.55]] )) - Arya
def TABLE[betray(mislead(rule()),( -bar(-foo(Arya * -COLS) * y - ROWS / ( foo(-10,( -rule(( Hodor ),-x,( TABLE[Ygritte][-Arya] )) / -9 )) ) * -0.79,0.94) )) - dog][i] {
	( --1 );
	if(-Stark - betray(--COLS) - Stark){

} else {
	Stark /= ( -0.05 );
	protect(--mislead(COLS,-rule(Hodor),( COLS ) + betray()),-0.5,( ---Arya ))
};
	if(-0.31){
	if(COLS){
	( -31 )
}
}
}
def TABLE[-56][k] {
	TABLE[1][ROWS]
}
var Sansa = -TABLE[500.7032][betray(x)]
def TABLE[TABLE[-destroy(( -foo(-dog * ( 49 )) ),ROWS)][Stark]][k] {
	if(-mislead()){
	y /= ( TABLE[0.65][betray() + -1] );
	x += TABLE[( TABLE[-73][TABLE[( COLS + Sansa )][-21]] + ( x ) )][( -TABLE[( ( ( ROWS ) ) * 1 )][foo(-0.27 + COLS,ROWS)] )]
} else {
	if(rule(TABLE[-Sansa][0.21],( mislead(( -Hodor + 400.52 / Ygritte / -76 - ( COLS ) ),-protect(-1,dog + TABLE[bar(ROWS + TABLE[betray(ROWS,-43 * Stark,Arya)][-COLS * ( --( ( -0.93 ) ) ) / COLS * ( ( ( ( 1 ) ) ) / ( mislead(-Stark,bar(Jon,--10.383)) ) )])][y],TABLE[Hodor][( ROWS + ( ( Sansa ) ) * ( ROWS ) ) + 0.78 / x]) / protect() / Jon,-360.84) )) / -1){

} else {
	Sansa;
	-TABLE[protect(-830.303)][-0.58]
};
	if(destroy(1)){

} else {
	-protect() * ( TABLE[( --ROWS )][Stark] - COLS );
	if(Sansa){
	Hodor -= Stark;
	-( -Hodor );
	Arya *= Arya
} else {
	TABLE[COLS * TABLE[-( dog ) / 0.34][ROWS]][( TABLE[-0.62][Arya] )];
	x += 0.13
};
	Jon += -Hodor
};
	Jon -= ( -850.914 )
};
	Jon /= 41
}
def foo(Stark,Hodor){
	if(y){

} else {
	x *= -( ( ( ( TABLE[( -Hodor )][foo(---97 * -520.122)] ) ) * ( foo(y) ) ) - ( COLS ) )
};
	if(y){

}
}
assert -0.45 : "Winter is coming"
def TABLE[0.08][j] {
	if(mislead(--TABLE[bar()][Sansa + COLS],65 / ( bar(Arya,bar() - ROWS - ROWS,Ygritte - x) ) + ( COLS ) / 98,( Stark ) * -( dog ))){

} else {
	dog *= ( ( ( ( TABLE[-71][41] ) ) ) )
}
}
assert destroy(-5,--rule()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--destroy()][i] {
	Jon *= destroy(-Arya,COLS,-COLS);
	if(--( --bar(Ygritte * 0.58) / COLS ) * betray(destroy(( betray(Stark,TABLE[7 / ROWS * COLS - mislead(-TABLE[-55][mislead(mislead(9))],x,ROWS) + betray(destroy())][( -Ygritte )]) )),Stark)){
	destroy();
	dog += destroy(-ROWS);
	Hodor *= ( 0.88 )
} else {
	if(y){
	TABLE[y][--38 + Ygritte]
} else {

};
	foo(0.41,rule(bar(betray(-Hodor + -COLS - protect(--bar(( mislead() ))),( 52 )),-280.661),Sansa))
}
}
assert 1 : "Fear cuts deeper than swords."
var x = ROWS
assert betray(Sansa / 63 * COLS + destroy(-Hodor) - -Jon,( ( bar(betray(),-dog) / ( -0.84 / betray(Sansa) * 0.38 ) / mislead(-ROWS * TABLE[bar()][mislead()] / protect() * bar(-0.62,( Ygritte )),( ( Sansa ) / -580.2 ) + rule()) ) ),-Stark + -0.25) : "One can not simply parse himself"
var Ygritte = Arya
assert Hodor : "Nothing burns like the cold."
def mislead(Hodor){
	if(-COLS){
	0.13;
	if(-rule(( bar(-1,-0.53 / ( -0.05 ),-ROWS / --( ( ( ( 0.98 ) ) - TABLE[370.44][destroy()] ) * foo(bar(-dog),880.9912) ) / x) ),destroy(140.2588,38))){
	foo(-( ---70 * destroy(( -24 - ( Stark ) + mislead(-56,80) )) * -130 * 0.28 - ( dog ) ),y - ( mislead(( betray() / x ),---90 - -0.49 + rule(bar(y,foo(ROWS) / --Jon * TABLE[x][COLS] / foo(( ( x ) ) * ( -x ) * ( 76 ),( -0.09 ) * protect(Arya,betray(COLS) / -32 + destroy(TABLE[Ygritte][mislead(Ygritte) / mislead(Hodor)],( Sansa ))) + TABLE[betray() * y][-( -x )],COLS)),760.3) + foo(dog,TABLE[ROWS][-630.3])) ) / ( -48 ))
} else {
	dog -= Jon;
	if(Jon){
	protect(73,x,protect(protect(COLS)));
	betray(bar(),( Hodor ));
	Stark *= ( ( mislead(-0.86,Hodor) ) )
}
};
	dog /= mislead(Ygritte)
};
	Hodor *= TABLE[-( ( rule(( ( 1 ) ),dog) ) ) - 59][430.88]
}
def destroy(Jon,y,y){

}
def destroy(Stark){
	Ygritte /= 0.04
}
def bar(Hodor,y){
	--ROWS;
	if(12){
	( 88 )
} else {
	x += -dog;
	Hodor /= rule(-67)
}
}
def foo(Hodor,Sansa){
	Arya;
	( ROWS );
	( dog )
}
assert 740.072 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ROWS
def TABLE[rule(bar(-0.22,destroy(62,bar(-17,0.67),ROWS)))][j] {
	bar(COLS,dog);
	Sansa
}
var x = -y
def TABLE[( -mislead(( 74 ),-58) )][k] {
	if(0){
	Sansa /= ---( -rule(destroy(-0.12),( y ) / 1) / COLS ) / Arya;
	if(--1){
	if(destroy(Ygritte)){
	TABLE[-880.45 * ( COLS ) + 98][Ygritte]
}
} else {

};
	if(Jon){
	if(y){
	if(( 0.09 )){
	if(-Hodor / -COLS * ROWS){
	COLS;
	-COLS
}
} else {
	y /= -1;
	-0.49
}
} else {
	Jon -= ( Arya )
};
	-foo(Jon,foo(x / mislead(y / destroy(ROWS,Stark) + destroy(-1,ROWS - -ROWS - ROWS - foo(-0.48) + ( betray(ROWS,foo(--94,COLS)) )),Hodor),Sansa) - mislead(mislead()) * rule(destroy(),-rule(--10,Sansa)) * 90) * ( Sansa )
}
} else {

}
}
def mislead(x){
	if(betray(dog)){
	rule(( 710.2253 ));
	mislead(( 1 ))
} else {

};
	Stark -= -58;
	Arya += ( 0.85 * bar(x,y) / Hodor )
}
def protect(Ygritte){

}
var Arya = bar(foo(5,-5,mislead(rule() / dog)))
def protect(Stark){
	if(Stark){
	-0.67;
	if(destroy(--( ROWS / 0.89 ),69 / ( -( 0.35 ) ))){
	if(Sansa){
	if(Arya){
	if(( TABLE[betray(--1,foo(),foo(( Sansa ),( Stark )))][291] ) * 93 * Stark){
	( mislead(170.59,-480.483) )
} else {
	mislead(-COLS,betray(dog * -610.5,COLS) + -betray(( Hodor ),rule(84 * destroy(0.08,88,0.72)),--( --foo() )),1)
};
	if(( foo(Jon) )){
	-( Arya ) * -TABLE[dog][destroy(Hodor,ROWS) + 1] + -bar(-0.22);
	if(( -ROWS )){
	if(COLS + -( x )){
	Stark *= ( -TABLE[0.85][y] );
	Sansa /= 1;
	Sansa += protect(--TABLE[-( foo(-920.552) )][foo(Arya)] - -TABLE[0.24][bar(foo(-65 - protect(-1,mislead(bar(-( Arya )),ROWS,TABLE[destroy(Hodor)][ROWS] + ( ( COLS ) ))) - ( protect(-88,--protect(Stark)) ),TABLE[-20][( -86 * dog )],rule(bar(-1,( y )))),betray())],destroy(( protect(rule(),( -mislead(mislead(-66 / ( ROWS ),( ( -ROWS ) ),betray(bar(Sansa))),TABLE[-COLS + -8][( rule(( Stark )) )] + TABLE[TABLE[TABLE[ROWS][-betray()]][TABLE[24][( Hodor ) + Ygritte + 0.64]]][foo()]) )) )))
}
} else {
	Hodor /= --1
}
}
} else {

};
	if(( ROWS * -67 + dog )){
	TABLE[Arya][Stark] / ( -0.87 )
};
	foo()
} else {

}
} else {
	if(-12){
	if(TABLE[( foo(-( -44 ),--Jon) )][-mislead(-protect(y / ROWS,-Sansa - bar(COLS + bar(),( destroy(TABLE[( 0.71 )][-0.91]) ))),x,Hodor)]){
	if(Arya){

} else {
	betray(Ygritte)
}
};
	TABLE[foo(67,0.13)][-0.77]
} else {
	if(( y )){
	Jon -= -( 14 );
	( ( 30.604 ) );
	if(( Ygritte )){
	if(ROWS){
	Hodor
} else {
	if(Jon){
	Stark *= destroy(-mislead(COLS,-dog + Arya,Ygritte),( COLS ))
}
};
	if(betray(bar(protect(destroy(-1,destroy(-y * ( 910.872 ) + COLS)),( -rule(betray(-protect(( betray(TABLE[( -100 )][protect(-ROWS)],Stark) ),mislead(-Sansa,( COLS ),-( Arya ))) - betray(Sansa) / Hodor,98,dog * bar(( ( Arya + 47 ) )))) )),Hodor),-mislead(-0.81 + mislead(rule(),x),-0.2),-83)){
	if(( ( ( dog ) * COLS ) )){
	if(( Sansa )){
	if(-mislead() + Ygritte * Arya){
	dog /= --Jon * -bar(rule(0.31,( destroy(TABLE[( TABLE[TABLE[-91][( COLS )]][dog] )][34]) ),mislead(-x)) / ( --( Hodor ) + Hodor + -1 / ROWS ),ROWS - betray(-0.24,-COLS) + TABLE[( betray(TABLE[( -( -TABLE[foo(--mislead(COLS,COLS,Hodor)) - mislead(Hodor,foo(mislead(ROWS),mislead(( rule(destroy(460.18,( ROWS + -ROWS ),--65),Arya / x) ) / ROWS)),ROWS)][ROWS] ) )][ROWS * ROWS],( 440.79 )) + -31 ) - rule(foo(-rule(-89,-rule(-0.94)),-350.52))][rule(-10) + ( Stark / TABLE[87][x] )])
}
} else {
	betray(( -0.22 ) / ( bar(Arya,-0.14) ) + 50 - ( dog ),0.94);
	mislead()
};
	if(( x ) * COLS + 7 - -0.84){
	ROWS;
	dog *= foo()
} else {
	if(foo(Stark,COLS)){
	dog += -ROWS / x;
	ROWS
} else {

}
}
};
	dog *= ( 0.82 )
}
} else {
	-ROWS;
	--1 * ( -0.43 ) + ( -( TABLE[( destroy(bar(betray(COLS,( --Jon )) + rule(-0.18),-60,( -60.83 )) - ROWS) )][-0.51] ) ) + -9
}
}
};
	if(---0.91){
	Hodor -= -( ( ( -( bar(Stark,68) ) - Stark - ROWS ) ) )
} else {
	( Stark );
	Ygritte -= 0.89
};
	Arya += ( x )
};
	Jon *= Stark
};
	Ygritte /= -mislead(59 + 410.4799,-Hodor,COLS)
}
assert -TABLE[ROWS][0.13] - ( Ygritte ) : "One can not simply parse himself"
assert --ROWS * Sansa : "One can not simply parse himself"
def protect(){

}
def rule(){

}
var y = Arya
def betray(Arya){
	if(( Stark )){
	if(-80){
	if(1){
	-( foo(-protect(ROWS,( COLS - -TABLE[Stark][COLS * ( ROWS )] + -1 * Sansa ),( ( -0.53 ) )) + y) )
};
	dog *= ( -56 )
} else {
	50;
	dog *= COLS;
	( Hodor - --0.13 )
};
	( betray(destroy(COLS,Ygritte,-0.04) * Stark - dog - betray(ROWS * -13 + -0.05,Ygritte)) )
} else {
	COLS
}
}
var dog = ROWS * 89 * COLS - ( COLS )
var dog = COLS
var x = 0.9
assert -foo(Hodor) : "Nothing burns like the cold."
def TABLE[( Sansa )][i] {
	Hodor /= -( -1 ) + x;
	( -450.39 );
	-y
}
def betray(Sansa,Arya){
	( destroy(COLS,0.45,( -destroy(67,-91) - COLS * Jon * foo() )) )
}
def protect(Ygritte,dog){
	( Stark + ---0.08 * -0.76 );
	if(-( -Stark )){
	if(betray(Ygritte,( x ),( COLS / y ))){
	Stark += ROWS;
	if(-COLS + rule()){

}
} else {
	x /= 34 + -( COLS );
	-Sansa + ROWS
}
} else {

}
}
assert ( -54 ) : "Winter is coming"
def TABLE[Jon][j] {
	y *= ( ( -foo(-1,( COLS )) ) )
}
def TABLE[destroy()][i] {
	bar(ROWS)
}
def rule(){

}
def TABLE[protect(-0.14,foo(destroy(rule(COLS),TABLE[-0.8][-protect(( Jon ),betray(y))]),-910.46,Ygritte))][i] {

}
assert COLS : "Nothing burns like the cold."
def TABLE[-destroy(destroy())][k] {
	dog *= ( Hodor )
}
def TABLE[bar()][k] {
	if(-( ROWS )){
	Stark *= rule(-( bar(protect(Sansa)) ));
	dog;
	--58
} else {
	if(( -( bar(ROWS) ) )){
	x /= rule(-( -betray(TABLE[-0.02 + 440.436][( ROWS )],-0.84,Ygritte) ) - ( 1 ) + ( Jon ),-0.31,COLS);
	if(-30.9){
	foo(--ROWS,foo(700.21,Ygritte) * COLS - -y + -0.92 * -( foo(-( COLS ) - y,-41,Hodor) ) - x / COLS - -( -40 / Hodor / -( 53 ) ));
	if(Arya + ( 0.1 )){
	if(-( Sansa )){
	foo(-1,ROWS);
	if(ROWS){
	if(-TABLE[bar(( -mislead(Jon) ) - rule(( betray(ROWS,( -mislead(( destroy(( -x ) - Arya) ),bar(--ROWS / -( foo(foo(TABLE[1][-33] - ( ROWS ) + ( COLS ) / 2 - -610.411),( ROWS ) * x,betray(0.6,Arya,0.91)) ) / ROWS * x * -( -1 ) + protect(),-98)) ) - 1 + -destroy(-1,COLS) * ( bar(COLS,( 58 ),COLS) )) )))][protect(protect(),mislead(x))]){
	y *= Stark;
	Arya / -ROWS;
	if(COLS){
	if(dog){

};
	Arya *= Stark
} else {
	Arya *= destroy(--54 * bar(Jon) - Jon) + TABLE[Jon - bar(-Jon,----x)][( y )] * -( ( -36 ) )
}
} else {
	( -protect(( -450.93 )) )
}
}
};
	x /= COLS;
	if(foo()){
	Ygritte *= Stark;
	Arya /= 420.58
} else {
	-0.71;
	if(27){

} else {
	if(COLS){
	dog -= bar();
	dog -= ( ROWS )
} else {
	if(Jon){
	if(-betray()){
	--dog;
	COLS
} else {
	if(x){
	x -= dog;
	Sansa;
	if(COLS){
	Arya *= COLS
}
} else {
	Sansa *= Jon
}
}
} else {
	if(protect(rule(Hodor),( TABLE[-y][rule()] )) / ( -Sansa ) + destroy(TABLE[---( -bar(( ROWS ),TABLE[-( 55 - x )][( Stark )] / y,Arya) ) / ROWS][TABLE[( COLS )][-destroy(TABLE[( dog )][COLS / -COLS - COLS],0.56 * -550.39)]],-0.73 + ( ( Arya + -12 ) * 18 - ROWS ))){
	Hodor -= -0.93
};
	if(-protect(TABLE[ROWS][-TABLE[COLS + destroy(-TABLE[rule(( destroy() ),Arya)][COLS]) / -730.19 + ROWS + ROWS][ROWS]] * -16,foo()) + ( Hodor ) + foo(betray(COLS,x) - ROWS) - 1){
	Sansa *= COLS;
	if(protect(Arya,-1 + ( ( COLS ) ),TABLE[y][-0.36])){
	ROWS;
	dog /= Jon;
	( ROWS ) + TABLE[ROWS][Ygritte]
};
	y /= 0.91
}
}
};
	if(-rule(-1,0.09)){
	-0.93
} else {

};
	Jon /= mislead(( ( TABLE[-( y )][( -TABLE[0.74][-0.56] + ( destroy() ) )] ) ),Stark,Sansa)
};
	Ygritte /= -ROWS / ROWS - --( y )
}
}
} else {
	x -= betray(ROWS - rule(31,ROWS + Ygritte / -ROWS - -0.69))
}
};
	if(TABLE[-ROWS][foo(--33 - -rule() + foo(Ygritte,0.23,( Sansa ) - Ygritte) + Ygritte)]){
	foo(( 82 ),protect(( -1 )));
	-ROWS
} else {
	if(Jon){
	if(protect()){
	--45
};
	if(( TABLE[-( betray(-70,destroy(Jon)) ) - Jon][-( 22 ) - TABLE[-85][destroy(710.71) / -52]] )){
	Sansa *= 0.16;
	Arya /= 940.16
};
	if(-( -TABLE[TABLE[480.4319][-( ROWS ) + betray(protect(ROWS),betray(-90,ROWS))]][Hodor] )){
	if(( --1 )){
	if(( Ygritte )){

} else {
	if(Sansa){

} else {
	if(390.3){
	if(58){
	Hodor /= ( --580.46 );
	-( -1 )
} else {
	Arya += ( Sansa );
	Hodor -= --0.16
}
} else {

};
	54 - betray(betray(betray(y,ROWS) * Jon) * protect(( mislead() ),-410.73 + dog,dog),-betray(68,COLS),( COLS ))
};
	if(mislead(( Arya ),COLS,( rule(( y ) / 1,Sansa,destroy(TABLE[53][--Sansa * --Jon],1)) ))){
	if(Stark){

} else {
	rule(( -y ),protect(--COLS)) * -100.6;
	if(--( ( Arya ) )){
	COLS;
	Sansa *= TABLE[Hodor][foo()]
} else {
	x += Hodor / -0.72;
	91
}
};
	if(( mislead(( foo(-0.64) ),-0.51) )){
	Arya -= ( mislead(foo(-( 500.9 ) + betray())) * y );
	( ( ( -540.9 ) ) )
}
};
	if(ROWS / Arya){
	Ygritte
} else {
	dog -= TABLE[--TABLE[TABLE[-y * Ygritte - Ygritte / Ygritte][0.97]][0.23 / mislead()]][COLS]
}
}
} else {

};
	Stark - ( -710.8 )
} else {
	Ygritte -= ( -1 );
	dog /= ( protect(-( ( ( ROWS ) ) ),( Jon )) )
}
}
}
}
}
var Jon = ROWS
assert ( ROWS ) : "Fear cuts deeper than swords."
assert TABLE[mislead(( -ROWS ))][( y )] * ( ( -Arya ) ) : "What do we say to the Lord of Death?"
def betray(){
	-1
}
assert -43 - Sansa * COLS - protect(Hodor,22) / bar(( -TABLE[Sansa][TABLE[rule()][---810.02]] ),COLS,( -( dog ) )) - COLS : "Nothing burns like the cold."
def TABLE[-y][j] {
	Sansa += -0.6
}
var Hodor = x
def bar(Stark){
	Arya /= COLS
}
def foo(Sansa,Ygritte,Jon){

}
def bar(dog,Jon,Stark){
	if(-1){
	dog - -COLS;
	Ygritte *= ( TABLE[( -Stark )][COLS] / 55 / -60.0141 + TABLE[Hodor * -rule(-Sansa,destroy() * -0.27 / ( -x ) / ROWS)][-81] + -880.29 + ROWS )
} else {
	if(( -330.7 )){
	-440.5938;
	Ygritte *= --640.428;
	Jon *= ( bar() )
} else {
	Stark /= -0.4;
	( rule(dog,rule(( ( Ygritte ) ),rule(rule(-foo())) * 1 - -foo(protect(ROWS) / -ROWS,-15 - -87),Jon)) )
};
	Sansa /= ( foo(x * -320.1988) )
};
	if(( destroy() )){
	( 40.27 )
} else {
	if(( COLS )){
	if(Arya){
	if(-900.507){

} else {
	TABLE[rule(-40 * ----( ROWS ) * mislead(),-73)][TABLE[----540.78][mislead(bar(COLS,( destroy(y - TABLE[1][( 7 )] / -46 / betray() - ROWS,-72,TABLE[-Ygritte][-61]) ) + -TABLE[betray(COLS + ( ( ROWS ) ),-Jon)][foo()] + Sansa))]]
};
	( ( COLS ) * Jon - destroy(( ROWS ),0.93) )
};
	if(protect(protect(Hodor))){

} else {
	if(Hodor){
	bar(-y + --0.15,---TABLE[Ygritte * -protect(-rule()) + Stark - ( x )][-rule() / ROWS - Sansa / rule(betray())] / -0.21 - ( y ) * -190.151);
	( -( TABLE[TABLE[Arya][( ( -98 / Sansa ) )]][-COLS] ) )
} else {
	x += Ygritte;
	COLS
};
	rule()
}
} else {
	Ygritte -= -880.1152
};
	rule(1,( --COLS / y / Hodor + 93 ),protect(( betray(TABLE[( ( -rule(COLS,-0.85,0.6) - Ygritte + Jon ) )][foo(foo(),( Stark ),-COLS) / ( -COLS ) - COLS * 0.56 - y / destroy(Stark) / -0.06],dog) ),( TABLE[87][-bar(-( TABLE[Ygritte][( ----foo(-TABLE[TABLE[COLS][-bar(--550.2,Jon * -0.78) / ( ( -0.03 ) )]][Jon],COLS) + --660.04 )] ))] ),( -ROWS / Ygritte * mislead(-( ---TABLE[13][-protect(TABLE[rule() - ROWS][--( dog * COLS ) * ---0.81 * destroy(( ( -( -( ( 41 ) ) - -betray(1) + betray(-980.39) ) / 650.41 ) / -COLS * y ),-350.5)],y) + betray(COLS,( --0.53 + Hodor ))] * protect(-41) ),protect(mislead(-y,rule(-( ROWS ),-( ( 0.15 * Hodor ) ) + Sansa)),ROWS)) )));
	if(( destroy() )){
	Sansa += COLS * Hodor
} else {
	if(( 1 )){
	COLS
}
}
};
	-87
}
def betray(){
	if(TABLE[( dog )][destroy(-TABLE[betray(-betray(( destroy(---( y * ( -( --0.83 + ROWS ) ) ) * Hodor + Arya,-1) ) + TABLE[COLS / COLS][bar()],TABLE[Sansa][protect(destroy(destroy(ROWS,Jon),0.46,bar() / destroy() / COLS))] / ---840.76 / -73))][( -COLS ) - TABLE[foo() + Ygritte][ROWS]],y,( TABLE[mislead(( -Ygritte - ( -COLS ) ),-0.86)][destroy()] ))] / -TABLE[( TABLE[-COLS + foo(-( -dog ),-( -COLS ) + bar())][y / -130.45 + ROWS / ( foo(540.1 / COLS) )] )][( ---0.32 + ( destroy(TABLE[COLS][1],56 / ROWS) ) )]){
	-( ( 60.515 * ROWS / bar(( 9 )) ) );
	if(protect(ROWS) - TABLE[-TABLE[-TABLE[TABLE[rule(-0.75,0.25 / 1 - ( ( ( bar(rule(-6,-( destroy(-1) )),-120.2666) ) ) ) + COLS / TABLE[( -protect(( ( -COLS ) )) )][TABLE[( --ROWS )][Jon]])][--Arya]][mislead(rule(),1,-destroy(ROWS,ROWS))] * TABLE[Jon][( ( --protect(( -1 )) ) ) + TABLE[betray(---( -Sansa ),7 / y,ROWS)][mislead(Jon)]] - destroy(---33)][-0.11 - Hodor * -rule(-530.459) - rule(destroy(betray(),0.81) / TABLE[1][-0.42] - Hodor,Jon) / -0.58] - -0.24][destroy(-0.26,-60)]){
	( COLS );
	( Arya )
};
	Sansa -= ROWS
} else {
	Jon += dog
};
	-50
}
var dog = -1
var Hodor = x
var dog = 51
var Ygritte = --( Jon )
def destroy(Ygritte,Arya){
	if(( ( ( COLS + Sansa ) ) )){
	y /= -rule() - foo(-( -66 ),-41)
}
}
var Ygritte = COLS
var y = 0.7 / COLS
var y = -TABLE[( -( -1 + protect(destroy(Arya,0.61)) ) ) - ( COLS )][COLS]
def foo(Jon,Arya){

}
var Arya = bar(( dog ))
def bar(Arya,Arya){
	Ygritte -= ( bar(Ygritte,bar(-0.33)) ) - TABLE[y][foo(-96 + ( ( dog ) ))] * 0.47
}
def betray(Stark,y){
	destroy(COLS);
	if(COLS){
	Ygritte *= Stark
} else {
	0.76;
	910.537
}
}
def TABLE[0.61][i] {
	ROWS
}
def TABLE[ROWS][i] {
	if(foo(-0.93,( TABLE[-TABLE[-( 0.35 )][1]][( Arya )] ),( ( COLS ) )) + foo(rule(0.41)) - dog){
	if(( -0.7 + ( -( ---( -TABLE[TABLE[-20.4977][ROWS]][x] + betray() ) * Stark ) ) + 0.01 ) * 93){
	if(rule(x)){
	-( -0.11 )
} else {

}
} else {
	-foo()
}
} else {

};
	-40
}
var Ygritte = destroy(COLS)
assert 210.968 : "One can not simply parse himself"
def destroy(Jon){
	TABLE[TABLE[Hodor][COLS]][Jon];
	Hodor -= ( protect(Arya) );
	if(( ( ( ( TABLE[-rule(bar(( -x / Jon ) + y),ROWS)][ROWS * Ygritte] ) ) ) ) / --0.2){

} else {
	if(dog){
	ROWS
} else {

}
}
}
def TABLE[( ROWS - --COLS - ( -32 / -TABLE[( -0.24 )][-4] / -TABLE[foo(destroy(( ROWS ),( ROWS ),mislead(destroy(-( ROWS ))) / ROWS - TABLE[y][-( ROWS )]) + -0.06 - 0.85) - -( ( ( ( betray(COLS) ) ) ) )][-0.67] + --( ( -50.081 ) ) / -18 / ( ---ROWS - --( -0.16 * ( ROWS ) ) + -Arya / -370.05 ) ) )][j] {
	if(5){
	Hodor -= -590.7218 / ROWS * Arya;
	if(rule(( ( ( ( COLS ) ) ) ),( -COLS ))){
	-destroy(1,bar(),TABLE[ROWS][mislead(COLS,dog,-x)]);
	if(foo(Hodor)){
	mislead(ROWS / TABLE[( ROWS )][Hodor] + COLS,x);
	Arya *= ( ( ROWS ) );
	-( -mislead() )
}
}
};
	Jon -= Ygritte
}
def TABLE[betray(-ROWS,foo(--bar(rule(destroy(0.41),rule(x),( --y )),betray(destroy(0.35,COLS,( -betray(destroy(),( bar(rule()) )) )))),TABLE[940.944][TABLE[-65][destroy(Jon)]]))][k] {
	-42
}
var x = TABLE[-1][mislead(Stark,-protect())]
def TABLE[( -( ( ( -Stark ) ) ) )][i] {
	if(TABLE[( -TABLE[( protect() )][Ygritte] )][-( --0.44 )]){
	Jon -= 30;
	if(14){
	Ygritte /= ( 44 ) + ( 450 );
	if(( 860.68 ) - -bar()){
	ROWS + -( ( foo() ) ) - Stark
} else {
	Ygritte /= foo(--Arya,--( foo(Arya + destroy() / ( Jon + -0.99 ) - 1 / destroy(bar(mislead(Ygritte),Sansa) / ( betray(COLS) ) - protect(foo(),Ygritte)),COLS) ) + -750.8)
}
}
} else {
	mislead(COLS,bar());
	250.336
}
}
def foo(Arya,Hodor,Hodor){
	dog += ROWS
}
def betray(){

}
var y = ROWS
def TABLE[-TABLE[bar(-TABLE[y][-0.42],mislead(-0.69,ROWS),-1)][( 0.17 )] / ( ( Jon ) )][i] {
	if(---( -ROWS + COLS )){
	if(( -56 )){
	dog
};
	Stark /= -bar(-38,( ROWS ))
};
	if(COLS){

}
}
var Stark = ( -( ( -y ) / 410.67 ) )
def TABLE[ROWS][j] {
	Jon -= Ygritte
}
def TABLE[TABLE[foo()][TABLE[rule(ROWS) * 48][Jon]]][i] {
	Hodor -= -99 / ROWS;
	if(-( TABLE[COLS + TABLE[Stark][( COLS )]][COLS] )){
	-1
} else {
	if(x - ( -COLS )){
	Ygritte *= COLS;
	foo(0.45)
} else {
	y += -41;
	x
};
	( -( COLS ) ) * -35;
	if(TABLE[COLS][Ygritte]){

} else {
	Hodor /= ( TABLE[COLS][( ( 1 ) ) + --86] );
	Arya;
	if(-93){
	if(--340.61 + y / ROWS / ROWS){
	Sansa -= --( COLS / Hodor - destroy(( -80 )) ) - COLS
} else {
	Ygritte += 1 + Stark;
	y += ( -Hodor )
}
}
}
}
}
def TABLE[TABLE[destroy(mislead(COLS),Jon - -96 - 25,990.904 - COLS)][TABLE[mislead()][rule()] / ( Arya )]][j] {
	if(--bar()){
	Jon *= Sansa;
	COLS
} else {
	Arya -= -0.16
}
}
def TABLE[ROWS][i] {

}
def TABLE[-( -( ( ( ( ( Jon ) ) ) ) ) )][i] {

}
var dog = Stark
def TABLE[protect(ROWS,ROWS)][i] {
	ROWS;
	if(ROWS){
	if(-ROWS){

} else {
	if(( 0.64 )){
	-20
} else {
	if(( COLS )){
	dog += ( rule(( destroy(700.2,protect(mislead(betray(bar(-bar(protect(Hodor,y + -0.79),51),dog * 0.49,-1)),-1),0.47)) ),--41 + dog,ROWS) )
} else {
	y /= COLS;
	Hodor += Ygritte / ( rule(-Jon,dog) )
};
	Arya
};
	if(Ygritte - Ygritte){
	dog *= ROWS;
	x -= -5;
	if(( ( ( TABLE[ROWS][( -foo(foo(( Hodor ),Stark,( mislead() )),Ygritte) )] * TABLE[protect(( betray(rule(Sansa) + ( ( ( -0.22 + 33 * Arya ) ) ) - --320.009 * -1 - ( protect(( foo(Hodor + mislead(-TABLE[14][( -foo(270.484,COLS,betray()) )] - rule(Ygritte),-100.397) + Ygritte * ROWS * -ROWS) ),( ( COLS ) )) ),mislead()) ),betray(-0.2))][( ROWS )] ) ) )){

}
}
};
	y -= COLS
} else {

}
}
def TABLE[Arya][i] {
	if(protect(x)){
	dog -= -COLS
};
	Stark -= ( -COLS )
}
def destroy(Jon,dog){
	Stark -= ( Jon * ( -betray() / -( ( ( -ROWS - -TABLE[ROWS][dog] ) ) / -1 ) * TABLE[( -0.52 )][Jon] * -33 - -96 ) );
	dog *= mislead(dog)
}
def TABLE[TABLE[-rule(Hodor,-rule(-y,( -0.51 ) * rule(Ygritte,x)))][-1]][j] {

}
assert ROWS + rule(-betray(mislead(TABLE[( Sansa )][( mislead(bar(x),bar(-x,Stark) / ( dog / 90.767 )) )],-Arya),-90.71),--43 + ROWS) * ROWS / ( 1 ) / ( bar(dog) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya,Hodor){
	Sansa -= Arya
}
def rule(){
	if(ROWS){

} else {
	Arya *= COLS;
	Ygritte += 400.8
}
}
def TABLE[betray(1)][j] {
	if(TABLE[COLS][-destroy(1)]){
	if(TABLE[ROWS][betray(x)]){
	if(ROWS){
	y;
	Sansa -= dog
} else {
	if(--( mislead() )){
	if(COLS){
	Stark *= COLS;
	if(ROWS){
	-( -( COLS ) );
	1
} else {
	Sansa += Hodor * Hodor;
	( 0.15 );
	Stark -= y
}
} else {
	if(x){
	Hodor /= -74 / ( mislead(foo(-COLS * TABLE[-0.09][-49]),( 0 ),x) );
	0.67
}
}
}
}
}
} else {
	Hodor -= -( mislead(protect(( x ),TABLE[1][( TABLE[-49][Sansa] )])) );
	if(betray(betray(betray(-53,Sansa,bar(destroy(----ROWS + Jon))) / TABLE[-TABLE[--TABLE[-14 / -rule(-0.53,83) * -19 - protect() - rule()][Jon]][Arya]][( -destroy() )],ROWS))){
	x *= TABLE[bar(Arya,92)][( TABLE[-79 + destroy(foo(-TABLE[-mislead(900.75,-( ( 0.77 ) ))][TABLE[betray(foo(0.52,-x,rule(( 1 ),-mislead(1))),Hodor)][-protect(Stark)] / COLS],-1) + -1,COLS)][destroy(Hodor,0.4,TABLE[TABLE[-destroy(-bar(Jon - TABLE[ROWS][( Stark )]),( Ygritte * 0.58 / 0.55 + y / ( betray(Hodor,mislead()) ) ),-0.57 - -0.53) - ROWS][Stark]][COLS])] )];
	if(Sansa * dog){
	x *= rule();
	( Arya + 50.65 + TABLE[x][Ygritte] - rule(( -foo(( ( --8 ) )) + ROWS - foo(protect(1 * foo(COLS,foo(-foo(( TABLE[protect(foo(-1 - ROWS,-0.35),-destroy(Hodor) + --73 - Arya)][---0.03] ) + 1) / protect(protect(foo(( TABLE[bar(Jon)][rule()] ),TABLE[COLS][27]),ROWS) - TABLE[( ROWS )][830.902],Hodor,ROWS) - y + rule() + ---20,rule() - 84)),( -0.84 ))) / Stark * -0.27 ) / ( -bar(-destroy(( Jon ) - Ygritte + protect(ROWS))) ) + betray()) )
};
	if(-bar(Jon,-ROWS)){
	Sansa / ( -970.5096 );
	Stark -= ( betray(TABLE[1][foo(37)],bar(y * foo(-50 * mislead(( -1 ),-( Jon )) + TABLE[TABLE[-( ( Arya ) + bar(0.72,rule(-ROWS,-0.22)) )][0.18]][( TABLE[-( destroy() ) + -rule(COLS)][-0.71] )] - TABLE[-0.88][rule(ROWS,1)]) / Sansa,TABLE[-1][protect(Sansa,0.67)])) ) * ( ( 99 ) );
	if(ROWS){
	if(destroy(betray(TABLE[COLS][x]),ROWS)){
	x += --Stark
} else {
	dog /= COLS
};
	protect(( y * TABLE[-720.7696][betray(destroy(( 310.37 )),( y ) + ROWS - COLS,Stark)] ),COLS,93);
	if(-1){
	Ygritte -= COLS
} else {
	x += COLS / ( ( x ) + -( -( -protect(destroy(Hodor,-0.95),---destroy(-----750.632,dog - -COLS)) ) ) / --0.55 ) * Arya + Arya;
	-63 / Ygritte
}
}
} else {
	( ( -TABLE[bar()][ROWS] ) )
}
}
}
}
var y = Hodor / ROWS
def betray(Hodor,Hodor){
	if(-destroy(-11,--TABLE[( foo() )][( ( -ROWS ) )],( -310.926 )) - Ygritte + x - -foo()){
	if(bar(( Arya ),protect())){

}
};
	if(Hodor){
	if(COLS){
	y /= ( -44 );
	Sansa /= destroy(( -0.98 * ( ( -dog ) ) / -ROWS + COLS + mislead() * ROWS )) + ( COLS * Jon )
}
} else {
	y += -0.73
}
}
def destroy(){
	if(ROWS){
	TABLE[-ROWS / ( protect(-860.3901) ) + Hodor][Sansa]
} else {
	if(TABLE[-Sansa + --49][-rule(( protect(betray(-0.33,Arya + -10) - rule(( ( betray() - rule(-COLS,( ROWS + destroy(y,-0.93,COLS) * Hodor )) ) ),( 15 )),betray(-1)) / 70.9289 ),Sansa,( 1 )) * ( rule(-rule(-TABLE[0.38][-73],0.72) - rule(-COLS,-Sansa / destroy(Arya,--87)),( COLS ),COLS) )]){

}
};
	Stark -= foo(TABLE[-1][-0.93])
}
def TABLE[-foo(protect(Sansa) * Sansa + -Stark) - ( ( -17 ) ) - protect(dog,ROWS,-( betray(COLS,--destroy(),bar(( destroy() ),-( 0.37 ),---83 - ROWS) + -48) ) + ( Ygritte ))][k] {
	mislead(-( -protect(0.23,( -COLS )) ),16,foo(mislead(x,0.84 * ROWS * COLS) - 31 - COLS,-41,( 0.89 )));
	if(-680.01 + foo(dog,COLS,---( TABLE[COLS][mislead(-ROWS)] ))){
	if(dog){
	if(( -( betray(ROWS / COLS,69 - ( COLS )) ) )){
	x += destroy();
	if(ROWS){
	Sansa += mislead(( TABLE[TABLE[1][destroy(( ( ROWS ) ),COLS,20.32)]][-500.5662] ),ROWS);
	if(TABLE[bar(bar(protect(Hodor,COLS * --680.449 * -Ygritte + TABLE[Sansa][TABLE[( -rule(8 + betray(( -0.24 ),--( ( -670.6496 ) * -54 ))) / --x )][-40]],TABLE[-76][-0.58])))][-y]){
	y /= rule(( mislead(--y * ( -0.53 )) ),TABLE[( Jon - COLS )][TABLE[COLS][ROWS]] + ROWS,Ygritte + -Hodor)
} else {

};
	260.165
} else {
	if(( --30 )){
	x *= -140.252
}
}
} else {
	if(( -destroy(( -( destroy(0.19,TABLE[( TABLE[ROWS - rule(ROWS)][Ygritte] - bar(y,0.25) )][betray()] - 890.4) ) * ( x ) ) / -( 0.61 ) / dog + ( ( Arya ) ) / 30) + Arya + Arya )){
	y *= -41;
	Jon
};
	if(foo(bar(destroy(-Jon * Sansa,TABLE[-65 - ROWS][-65],mislead(-TABLE[COLS][( ( 0.56 ) )]))))){
	x += TABLE[-y / -53 - COLS][52 + -( Jon )];
	Sansa
};
	Hodor += ( 36 )
};
	protect(x,0.66 / ( ROWS ),84)
}
} else {
	( -39 );
	COLS
}
}
assert 36 : "What do we say to the Lord of Death?"
def protect(){
	Arya;
	Jon -= ( -( protect(-59) ) )
}
def TABLE[foo()][k] {

}
def TABLE[-0.21][k] {
	-0.13 * ----61;
	Stark -= COLS;
	Hodor /= TABLE[TABLE[( 400.1558 )][Hodor]][dog]
}
assert bar(TABLE[-rule(TABLE[-TABLE[( -( -( COLS ) / 20 - ROWS ) )][x] / betray() * 850.03][betray(ROWS,y,protect(-Ygritte - rule() + TABLE[0.48][Sansa]))])][Jon],70) : "What do we say to the Lord of Death?"
assert ( Stark ) : "What do we say to the Lord of Death?"
assert ( ROWS ) : "One can not simply parse himself"
assert --COLS : "One can not simply parse himself"
def TABLE[dog][i] {
	ROWS - -57 + ( destroy(--1,destroy(-x)) )
}
var dog = -64
def TABLE[--0.34][k] {
	--45 - 0.64;
	y *= ( ( TABLE[TABLE[---0.13 - -COLS][TABLE[( -1 + -protect(Hodor) )][ROWS] - 47 + COLS * ( TABLE[protect(0.91)][TABLE[x][( destroy() )]] ) - Arya]][( ROWS )] - ( ROWS ) * ( ( ( -Jon ) ) ) * 0.51 ) * -0.07 );
	if(x){
	if(( ROWS )){
	-protect(COLS + Stark,0.52) - dog / ( bar(-( -y ) + ROWS + Stark,ROWS) ) + TABLE[protect(rule(protect(( rule(--1,( ( -68 ) )) ),rule(-610.23,dog),betray(-0.39,TABLE[-ROWS][( betray(-( -0.64 )) )]) * Sansa),-betray(-ROWS,( -betray(( Sansa ) * -18,( ROWS )) + Sansa )))) / dog][-0.68] - Ygritte - --400.4923 / destroy(--63 - protect(foo(-73,( COLS )),-93 - -70 - ROWS) - --( -88 ) - ( 0.626 ),Jon);
	dog /= ( -870.643 )
};
	Jon += -( foo(ROWS) )
}
}
var dog = -TABLE[( ROWS )][--950.9 + -destroy(( ( ( -0.39 ) ) )) / x]
var Stark = 80.0061
assert protect(( -( -ROWS + ( ROWS ) + Hodor + ROWS / protect(COLS / 10.0784 + Sansa,Hodor,-480.69 * --66) ) ) / foo(Ygritte,( TABLE[-0.55][bar(( ( bar(( COLS ),-Arya / betray(destroy(1,-0.03,COLS),-0.22) - -ROWS + 86) ) ),Sansa,ROWS)] ),( Stark ))) : "What do we say to the Lord of Death?"
def TABLE[( -1 - ( -44 ) + ( ( 0.01 ) ) )][i] {
	x /= Sansa + COLS * ( --( -0.5 ) ) + TABLE[Sansa][0.21]
}
def betray(){
	Hodor *= COLS;
	x -= -28;
	Ygritte += foo(rule(-( ROWS )))
}
var Hodor = COLS
assert Ygritte : "One can not simply parse himself"
def destroy(x,Stark,y){
	( 1 );
	x /= ROWS;
	if(( Jon )){
	( bar(rule(-foo(destroy(y,( COLS ),ROWS),rule(--10.093,rule(Sansa,TABLE[-Arya * Sansa][-0.62],Hodor)),ROWS / ( destroy(-Arya) ) / betray())),ROWS) );
	Stark += TABLE[( ( ( -Sansa ) ) )][ROWS - -Jon]
} else {
	Stark *= Hodor;
	if(-protect(betray(destroy(ROWS)))){

}
}
}
def mislead(Sansa,Sansa){
	bar(Arya,TABLE[( ( -75 ) - betray(Hodor * ( -protect(Jon + TABLE[Stark][bar(( 1 ))],rule(ROWS,ROWS,bar(-x + 0.25,COLS))) ) / bar(betray()) + protect(-1,rule(),Ygritte)) )][-( TABLE[-TABLE[-destroy(dog,COLS)][0.61]][TABLE[-0.86 - protect(-370.282)][( -ROWS - ROWS )]] )])
}
var x = -180.641
def rule(Sansa,Arya){
	( 0.59 );
	Arya /= mislead(0.03 + Jon,-Jon + ( ROWS ))
}
assert bar(ROWS + -Arya) : "Nothing burns like the cold."
def TABLE[( ( Sansa ) )][j] {

}
def destroy(){
	COLS;
	if(-( ROWS ) - TABLE[39][( 0.01 )]){
	if(-( ROWS )){
	if(( 3 ) + ( COLS )){
	Hodor -= Ygritte
} else {
	( bar() );
	Hodor *= protect(-COLS)
}
};
	-TABLE[( bar(x) ) / y + bar()][x]
}
}
def TABLE[( dog )][k] {
	0.62
}
var Sansa = TABLE[88][ROWS]
def TABLE[COLS][j] {
	if(COLS * 450.899){
	Jon;
	Sansa -= y;
	Ygritte += -y
};
	( destroy(ROWS) )
}
def TABLE[0.65][j] {
	if(TABLE[COLS + ( destroy(-30) )][Jon / COLS]){
	if(( protect(-1,dog) )){
	if(COLS){
	( -1 );
	if(TABLE[( foo(Hodor,TABLE[( ( destroy(TABLE[COLS][Hodor],Stark * dog,destroy(x,( Jon + COLS ))) ) )][0.68]) )][protect(-y - ROWS,-29)] - COLS - rule(980.05 / foo(protect(Arya + --65 / protect(-COLS,ROWS,COLS),foo(x,-0.5 + mislead(Stark))),( ( TABLE[1][dog] ) )) - -1,( -Hodor ),COLS - -70.4085) - ----1 / COLS){

}
};
	if(-Sansa){

}
} else {
	Sansa += Hodor
};
	ROWS;
	if(Stark){
	if(( mislead(ROWS - ( COLS )) ) + -45){
	Sansa /= ROWS + ( foo(mislead(-TABLE[-0.98 * -COLS][-0.85 / COLS],Stark),( Sansa )) );
	if(dog){
	if(foo()){

} else {

};
	protect(TABLE[ROWS][rule(foo(TABLE[-450.7142][protect(Stark - destroy(( betray(bar(rule(-0.4),-( x ) / --dog - -1 + -0.84 + 0.74 - -76 / dog + dog / -0.74,( 130.8 )),( 0.25 ),-68) ),Ygritte + TABLE[-bar(TABLE[( ( destroy(( x ),--TABLE[-0.64 - bar(ROWS)][( Hodor )]) ) )][( ( 12 ) - ROWS * dog )])][COLS]),-COLS / 970.1)]),( Sansa / x ),( -COLS ))]);
	if(( -y )){
	( 0.15 );
	--0.68
}
}
};
	y *= rule(Arya - dog + --COLS / ( Jon ))
}
} else {
	Stark += Stark;
	( -COLS )
}
}
assert Ygritte : "What do we say to the Lord of Death?"
def TABLE[destroy(Stark,-36 + Hodor - protect(( Sansa ),dog)) / -TABLE[TABLE[( Hodor )][( destroy(y) )]][ROWS * -1 * mislead(--( ( dog ) + ROWS ) - Jon - -Stark,( ( ( -Stark ) ) / ( ( Hodor ) ) ))] - 27][k] {
	Sansa *= y;
	-0.34
}
def TABLE[protect(Arya,rule(TABLE[TABLE[76][COLS]][0.95],foo())) + --670.68][i] {
	TABLE[( -ROWS )][Arya * -0.94 / 1 + -0.89];
	x += foo(-1)
}
def bar(y,Stark,Arya){
	if(y){
	Sansa += -ROWS;
	if(( 220.7 )){
	( 0.79 );
	( Ygritte )
}
};
	betray(ROWS)
}
assert --Jon : "Nothing burns like the cold."
assert bar(--ROWS + ( COLS ),-0.06) : "Nothing burns like the cold."
def TABLE[-0.87][k] {
	foo(-Arya,betray())
}
def mislead(){
	if(COLS - TABLE[ROWS][( ---24 )]){
	Hodor -= Ygritte;
	destroy(betray(-Jon,COLS / ( ( protect(-rule(rule(bar(-( -0.28 ) / Hodor / ROWS,Hodor),-Ygritte,( -betray(COLS) + Hodor )),y)) + dog ) ) * Ygritte / -x + dog))
} else {
	if(Ygritte){
	Ygritte /= mislead(Hodor + Sansa,( ( 0 ) ))
};
	Arya
};
	if(-21){
	1;
	if(destroy(( protect(COLS,( Sansa ),foo()) ),ROWS)){
	if(Jon){

} else {
	Sansa /= ---75 - -23;
	ROWS
}
} else {
	if(-TABLE[( rule(-0.15) )][( Jon )]){

};
	destroy(COLS) * TABLE[betray(490.9 + Sansa) / -Hodor][( 61 * Stark )]
}
} else {
	y;
	x += destroy(-0.82)
}
}
def destroy(y,Stark){

}
def betray(Sansa,Arya){
	dog += ( -1 * mislead(-( -1 ),COLS + dog,-protect(Sansa)) - 1 ) + dog - foo(0.09,foo(Sansa,TABLE[( y )][-COLS],-mislead(Arya)) * ( 83 ),( -bar() ));
	Sansa -= destroy(( protect(1,ROWS,--0.26 - dog) ),-protect(COLS + --0.69 / ( COLS ))) / -bar(( ( -71 - ( -( -destroy(( 48 ),1) ) - -COLS ) ) ),ROWS / ( ( 1 ) ) / ( mislead(mislead(COLS,TABLE[( x )][-COLS + y + -1]) / 13,0.14) ))
}
def TABLE[destroy(Ygritte)][j] {
	ROWS / ROWS
}
var y = ( ( ( x ) * destroy(COLS,TABLE[mislead(bar(--Ygritte / -660.2915) + Arya / protect(0.76,foo(--740.7,Stark),dog) - betray(( destroy() )))][ROWS]) ) )
var dog = ( --destroy() ) * COLS
def TABLE[TABLE[-betray()][--85 * ( ( Arya ) )]][i] {
	dog *= Arya;
	y += --protect(( TABLE[rule(mislead(Sansa))][mislead(Hodor,dog)] - -ROWS ),( ( ( COLS ) ) ),Stark * TABLE[Arya][--ROWS]) + ROWS / Arya
}
assert ( ( -mislead() ) ) : "Nothing burns like the cold."
def TABLE[Sansa / dog][k] {

}
assert Hodor : "What do we say to the Lord of Death?"
var Jon = ( ROWS / -0.26 )
var x = ( COLS ) * Sansa * -Arya
def TABLE[( 56 )][k] {
	--110.4058;
	92
}
var Ygritte = TABLE[-0.26][dog / Arya]
assert -0.87 * 7 / ( ( -TABLE[mislead(bar(protect(Hodor)))][( dog - protect(Arya) )] ) ) : "Winter is coming"
def TABLE[-COLS][k] {

}
def TABLE[( -860.901 )][j] {

}
assert ( 58 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(-( ( -0.96 ) )) : "One can not simply parse himself"
var Sansa = protect(COLS,Sansa)
def TABLE[---45][j] {
	( betray() ) + 1 * -ROWS * Ygritte;
	-77 - TABLE[17 / COLS + -ROWS / COLS * ( -COLS - betray() )][Arya]
}
def mislead(Hodor){
	if(82){

} else {
	( x );
	dog
};
	Sansa += betray(x,-TABLE[-( y )][ROWS] * ( dog ),bar(-0.31,-protect(ROWS,-1,x)))
}
def protect(dog,Sansa){
	destroy(( ( -( ---19 ) ) ),-32);
	if(0.43){
	if(y){
	32 - -0.08;
	Sansa -= -( 520.8 );
	-0.8
};
	Arya -= --33;
	x -= ( foo(86) )
} else {
	Jon -= bar();
	TABLE[-rule(foo(rule(( TABLE[--0.02][Hodor] ),-770.6684)),TABLE[Jon][Hodor])][--Ygritte - 890.19 * --bar(foo(ROWS - -( ---92 + protect(( 0.69 + -( -84 ) ),( destroy(( ROWS )) )) ),Stark))]
};
	if(protect(-0.76)){
	x /= -1
}
}
def TABLE[-protect(COLS,ROWS,-0.011)][j] {

}
assert Ygritte : "Fear cuts deeper than swords."
def destroy(){
	if(COLS){
	y -= mislead(Arya / COLS,( ( mislead() ) ),rule(rule(),( ( TABLE[-foo(--1,Ygritte,destroy(-0.82,-COLS + betray(bar(( ROWS ),-64),rule(y,-0.33))))][-0.82] ) )));
	ROWS
} else {
	if(230.879){
	Hodor += mislead(protect(rule(Jon)))
} else {
	-( 500.457 )
}
};
	if(Stark){
	if(mislead(rule(),x)){
	bar(0.98,( ( bar(0.55,protect(betray(bar(-1,mislead(protect(( COLS - -Hodor + protect(foo(ROWS),-66) ))),( COLS )),TABLE[( ( --1 ) ) * -Sansa * -0.13][( protect(ROWS * -51 / -28) )],rule()),COLS,-( Hodor ))) ) ))
}
} else {
	if(-bar(Stark)){
	if(-Hodor){
	Stark -= TABLE[bar(COLS)][COLS];
	if(-0.43){
	( destroy(-8 - dog) );
	Sansa /= -20;
	if(( -360.644 )){
	if(-y){
	-Hodor
};
	Ygritte += -87 + --Stark * -bar(1) + ( TABLE[dog][protect(betray(),TABLE[bar(bar(TABLE[dog][rule(ROWS,( ( -80 ) ) / ROWS * -0.32,Arya)],85 / ( ( y ) ) * Arya))][TABLE[-y][foo(Sansa,TABLE[ROWS][( y )]) - --betray(Sansa,rule(protect(Hodor),1),dog)] + Ygritte])] );
	Jon += COLS
}
} else {
	y *= rule(---( y ));
	if(ROWS){
	y;
	dog -= Ygritte
};
	Arya /= ( -( ( x ) ) )
}
} else {
	if(destroy()){
	COLS
} else {
	if(( Arya + rule(ROWS) )){
	if(-( -x / -bar() )){
	Sansa *= 1
} else {
	-65;
	if(-Sansa){
	( ROWS )
}
};
	Arya -= bar(TABLE[-1][rule(Ygritte)],destroy(-( -32 )))
}
};
	if(-( 65 ) - ( bar(-0.34 - --mislead(( dog ))) )){
	Stark *= ( ( ( 99 ) ) ) * -471;
	if(protect(-74,TABLE[Jon][( -350.37 ) * -betray(Hodor,mislead(rule(-( y ))))])){
	if(betray(-1)){

} else {

};
	if(-dog / ROWS - Sansa / ( foo(bar(Sansa,( ROWS ),--Stark),ROWS) ) * destroy()){
	if(ROWS){
	if(57){
	( COLS )
};
	x /= ( ( destroy(mislead(( Hodor ) * --1 - ROWS - TABLE[( betray(19) )][rule(0.47,destroy(ROWS,--950.5892))] - ROWS) / -0.89) ) )
} else {
	if(( Jon )){
	Ygritte += COLS;
	Stark *= -( y );
	if(ROWS){
	if(( Stark ) / Hodor){
	x += rule(( Arya * COLS ),( Arya ));
	( -mislead() );
	Jon += foo(destroy(-TABLE[COLS][-Sansa]),protect(79,( ( betray(( ( Jon * rule(Arya,foo() - ( rule() )) ) ),-0.41) ) )) * ( --foo(-( --protect(Arya,TABLE[TABLE[( ROWS ) / x][protect()]][ROWS * x]) ),( --foo(-76,-13 - -90 - y / COLS + COLS) )) - -rule() / --rule() * -0.73 ) * TABLE[COLS * ( COLS + ( ---( Jon ) ) + Hodor )][Hodor] + -190 - --y / ( 74 )) + Jon - ROWS
}
} else {
	1
}
} else {
	dog -= 66;
	if(destroy(-1) * x + ( ( Ygritte ) )){
	TABLE[dog][x * 1 * foo(mislead(ROWS),-Arya)]
} else {

}
}
}
}
}
}
};
	Ygritte /= foo(Arya)
} else {
	if(-( destroy(y,( mislead(TABLE[-Hodor][( ROWS - -96 )]) )) )){
	Arya *= 0.26
} else {
	Ygritte *= ( -Arya )
}
};
	if(( ROWS * dog )){
	if(--protect(( 0.56 ),ROWS)){
	if(-ROWS){
	TABLE[( betray(( 0.45 ),ROWS,Hodor) )][( ( ( TABLE[ROWS + ROWS * ( ROWS )][betray(bar(mislead() * dog * COLS),ROWS) - y + -1 / x - COLS + -rule(( ( -0.13 ) ),-690.4,-ROWS)] / ( -0.51 ) ) ) )] * -3;
	if(COLS){
	( dog );
	--0.19;
	if(0.6){
	y -= rule(ROWS);
	Hodor *= ( 1 )
}
} else {
	if(( 1 / -1 )){
	y -= ( -( Jon ) );
	x
}
}
} else {
	if(bar(COLS - rule(-( dog / 1 / -Hodor ),( Jon )) * y)){
	if(COLS){
	Ygritte /= Hodor;
	COLS
}
} else {
	dog += foo(63,Hodor);
	Arya /= ( TABLE[rule(mislead(-x))][-0.83] );
	if(Arya){
	if(-530.922 + -0.22){
	if(Ygritte){
	if(destroy(-ROWS * 0.64,-14,( betray(TABLE[-Ygritte][foo(-1) + TABLE[x][Sansa] + -Jon]) * betray(Jon) ))){
	Hodor += Hodor;
	Stark += betray(Ygritte);
	-y - COLS
};
	if(TABLE[1][y] / destroy(-COLS,50.7,x)){
	betray();
	1
}
} else {

};
	Stark
};
	Sansa += dog - 64 - x + destroy(97) - ROWS
}
}
}
} else {
	---( 37 / ---83 );
	foo(y) / 800.69
};
	if(COLS){
	if(betray(( ( -Jon ) ),-0.3,x)){
	dog += -ROWS
} else {
	COLS
};
	if(ROWS){
	dog /= ( -( ( 1 ) ) )
} else {
	Sansa - Ygritte
}
} else {
	Hodor;
	Hodor *= 1;
	if(TABLE[-78][( ROWS )]){
	if(-92){
	---3 - -1;
	if(COLS){

} else {
	if(Ygritte){
	-0.17
}
}
} else {
	ROWS
};
	( ROWS * -( -dog ) - TABLE[-Jon / betray(( ( 0.6 * rule(TABLE[destroy()][betray(protect(( protect(-1) + betray(1,foo(Jon,-0.31),-0.22 + ROWS) )))],TABLE[betray(x)][( bar(( protect() ) / mislead(Jon - -COLS,y)) )]) ) ))][betray(ROWS)] ) - 600.6436
}
}
};
	if(-870.7394){
	if(( -dog )){
	dog /= Sansa;
	-TABLE[( -COLS * ( -1 ) / 40 )][1]
} else {
	y
};
	Ygritte;
	if(y){
	Stark;
	foo(mislead(( y ),Sansa,COLS - -( -betray(( destroy() ),destroy(--( ( -ROWS ) ),-dog - -COLS)) )));
	Arya += --ROWS
} else {
	x *= ROWS + 0.22
}
} else {
	Ygritte *= 76;
	x += 1;
	Jon -= protect(-1,-1 + 27 - ( ( ROWS ) ))
}
}
}
assert Stark : "Fear cuts deeper than swords."
def rule(Stark,Hodor){
	if(7){
	if(( Sansa )){
	--66
}
};
	Jon *= protect(bar(ROWS),( -0.51 ))
}
def TABLE[-240.64][j] {
	betray(-0.21 + Stark,( rule() ));
	Arya /= 0.69
}
def destroy(){
	Arya -= Ygritte;
	-0.87
}
var Hodor = mislead(betray(( --foo(-0.51,mislead(Hodor,foo(-Jon) + ROWS)) ),mislead(Ygritte)))
def betray(dog,Hodor){
	y -= TABLE[( x + ( bar(rule(Sansa)) ) - -( -TABLE[COLS][COLS + -rule(-( -15 / -ROWS ))] ) )][COLS + -Arya] / -56
}
assert ( COLS ) : "What do we say to the Lord of Death?"
def bar(Hodor,y){
	if(( -17 ) * -1){
	TABLE[x + ( ( --COLS / TABLE[Jon][COLS] * foo(dog,-Ygritte) / ( -81 * Ygritte ) ) )][y];
	x *= foo(0.41 / Sansa)
}
}
var x = protect(0.6)
assert Sansa : "Winter is coming"
assert x : "Nothing burns like the cold."
def TABLE[Arya][k] {
	Sansa /= mislead(COLS,( TABLE[Sansa][COLS] ));
	TABLE[destroy()][bar(--1,rule())];
	x -= COLS
}
var Hodor = ROWS
var Sansa = TABLE[-820.4 + dog][0.04] - ( ( -Stark ) )
def TABLE[x][j] {
	Sansa *= TABLE[ROWS - TABLE[0.31][rule()]][foo(-rule(-0.35,x))]
}
def bar(){
	x += ( ( TABLE[destroy(Hodor + ( ( foo(TABLE[Arya][( 50 )]) ) ))][bar(Hodor,bar(bar()),COLS)] + rule(Sansa,ROWS) ) )
}
var y = bar(COLS,Ygritte)
assert -51 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -78 : "One can not simply parse himself"
assert -betray(Hodor,0.86) : "What do we say to the Lord of Death?"
def TABLE[bar(--80 / x,Arya)][j] {
	-( -460.5 );
	Stark += Hodor - ( 0.67 )
}
assert Hodor : "Fear cuts deeper than swords."
def betray(){
	-0.56;
	x += Ygritte
}
def TABLE[( -49 * ( y ) )][i] {

}
assert -bar(y,--0.34 * protect(-50,COLS,23) + -protect(destroy(-43,-0.49),( -foo(1,protect(Jon + -TABLE[Hodor][( -destroy() )],-TABLE[Sansa][-( 96 )] * TABLE[COLS][Arya])) )) / -0.9 - ( protect(TABLE[-1][ROWS] + foo(Sansa,ROWS,COLS) / betray(-dog,foo(-0.41,-160.651,Stark) / 630.877)) + ---0.94 )) / ( foo(destroy(-destroy(280,--( Arya ),COLS),mislead(destroy(----0.58,( ( Stark ) )),( destroy(y,COLS) ),( destroy(( TABLE[( protect(( x )) )][-0.67] ),bar() / ( TABLE[-( ( -protect(y,x) * COLS / -TABLE[( -COLS )][0.41] ) )][betray(( dog ),betray(-( foo() ) - 60))] ) * -COLS,( 60.358 )) - -0.95 )))) ) : "Nothing burns like the cold."
assert mislead(Stark) : "Nothing burns like the cold."
def TABLE[rule()][j] {
	if(TABLE[foo(( ( ROWS ) ),COLS,-COLS)][ROWS]){
	Sansa *= -1;
	Arya += -1
} else {

};
	( --0.68 )
}
var Arya = -0.32
def mislead(Arya,Stark,dog){
	Hodor /= mislead(Ygritte,bar(-0.61,mislead(protect(( ( COLS ) ) + -( y + ( bar(x) ) * Sansa + -Sansa ),-0.63,Hodor - ROWS),57 + -( COLS ))) - 0.34);
	Hodor *= ( -90 ) / -bar(( COLS ),betray(73,protect(Stark * -85,dog))) - 270.24
}
assert -protect(destroy(ROWS,( rule(36) )) - 0.9 - --0.44 - destroy(-0.64,( --( ( y ) ) + rule(Stark) * COLS - TABLE[Stark][Sansa] ) - ( -35 ) / Sansa,-46)) : "Nothing burns like the cold."
assert -1 : "Nothing burns like the cold."
def foo(x,y){
	if(Ygritte - ( ( protect(-COLS,0.28,-93) ) )){
	COLS
}
}
def destroy(Hodor,Arya){
	Ygritte += ( -0.34 );
	y /= 0.73
}
var Jon = -( TABLE[--betray() + Ygritte][-64] )
assert betray(Sansa * -( COLS / COLS )) : "What do we say to the Lord of Death?"
def TABLE[( TABLE[( ROWS )][Arya] )][k] {
	ROWS;
	COLS
}
var Arya = 46
var x = ( COLS )
assert ( ( 900.51 ) ) : "Fear cuts deeper than swords."
assert protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[( -0.09 )][0.21 - rule() * ROWS]][i] {
	if(ROWS){
	dog += COLS;
	0.56
};
	Arya *= ROWS
}
def TABLE[ROWS][k] {
	Stark /= -28;
	if(-1){
	Arya /= ( destroy(destroy(-940,TABLE[360.4874][Stark * bar(mislead(COLS,mislead(betray(ROWS,COLS,( destroy(TABLE[( ( protect(( bar(-990.58,ROWS / ROWS) )) ) / ROWS )][-rule(mislead(ROWS),betray(( 1 - ( -COLS ) ),( Arya )))]) ))),-( Jon )))],ROWS * Jon),Ygritte + ( rule(COLS,-0.25) )) )
};
	Ygritte -= bar(1,( 0 ))
}
def foo(x,x,Ygritte){

}
var Hodor = -bar(-0.35)
var Sansa = ROWS
assert 0.03 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(){

}
def betray(Ygritte){
	COLS;
	if(-41 * mislead(Sansa)){
	if(-ROWS){
	y;
	dog += -0.68
}
} else {
	rule(destroy(( ROWS ),( TABLE[0.14 - -Arya][-ROWS] / TABLE[0.63][foo(betray(1))] ) - destroy()),Sansa);
	if(Ygritte){

}
}
}
def TABLE[Sansa][k] {
	ROWS;
	( mislead(( x * rule(0) - -51 )) )
}
var Hodor = dog
def foo(){
	( ROWS );
	Ygritte *= 1
}
def TABLE[ROWS][j] {
	0.74;
	Sansa -= dog;
	Hodor -= ( ROWS )
}
assert betray(1,-dog) : "What do we say to the Lord of Death?"
var Arya = Jon
assert Stark : "Winter is coming"
assert -bar(-Sansa) / -70.465 - -4 * y : "Fear cuts deeper than swords."
def protect(){
	Stark *= -rule(-dog,mislead(Stark),destroy(betray(Stark) + Hodor) + betray(( destroy() ) + COLS));
	mislead(Arya);
	dog -= 72
}
def TABLE[bar(TABLE[Hodor][Jon])][k] {

}
assert -0.8 : "Fear cuts deeper than swords."
def TABLE[0.69 - -0.91 * -9][k] {
	Jon -= ( -( dog ) ) + COLS;
	if(TABLE[--560.9 * ( ( -x ) / ROWS )][-76]){
	y -= Hodor
};
	( COLS )
}
def TABLE[destroy(COLS)][k] {
	COLS
}
def bar(Ygritte,Stark){
	Arya /= 27 + Ygritte;
	y += TABLE[--( betray(TABLE[x / -mislead() - Stark][protect()]) ) + rule(Arya)][foo(( -1 ),Hodor)] / Arya;
	if(--COLS + -56 * 0.82){

} else {
	ROWS / Stark
}
}
var Jon = ( mislead() )
def destroy(y,Jon){
	Sansa /= x
}
assert Sansa : "Nothing burns like the cold."
assert ( ROWS ) : "What do we say to the Lord of Death?"
def bar(){

}
def TABLE[Hodor][k] {
	-0.88
}
def foo(Hodor){
	TABLE[-Arya][--0.07]
}
var Ygritte = 39
def betray(Sansa,Hodor){
	Stark += ROWS;
	destroy(450.6976,protect(-51))
}
var dog = --0.94 / dog / TABLE[-( ( y ) )][Arya] * rule(bar()) + TABLE[-x * Ygritte][TABLE[protect()][rule(TABLE[51][( -0.09 )],ROWS)]]
def rule(Ygritte,x){

}
def bar(Stark,Stark){
	Jon -= COLS;
	rule(( ( y ) ),100,Jon)
}
var x = -0.04
def mislead(y,y){
	if(40){
	780.238
} else {
	if(Hodor){
	if(-TABLE[protect(-x,-5)][Sansa]){
	Stark += Ygritte;
	Ygritte -= 930.3292
} else {
	Hodor /= ( Hodor )
};
	mislead(COLS);
	ROWS
}
}
}
var Arya = -1
assert TABLE[Hodor][( rule(1) )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = COLS / -1
def TABLE[rule(Jon)][i] {

}
def destroy(){
	rule(Ygritte,foo(bar(--Ygritte * protect(( -0.1 ),( ( Ygritte ) ),( 24 ))),( -destroy(x,protect(0.56 - foo(( foo(betray(TABLE[Hodor][( --Arya )],( ( rule(320.452 - 1) ) ))) ),y) - 1)) - -( y ) ) * rule(COLS,foo(-43)),Ygritte),-20);
	-( rule() ) * TABLE[( 0.2 )][-( TABLE[betray(ROWS,( Stark ))][Jon] )]
}
def TABLE[-x][j] {
	-1
}
def rule(Sansa){
	ROWS - ( ( -47 ) )
}
def TABLE[Arya][j] {
	ROWS;
	if(Ygritte / protect(TABLE[TABLE[foo(betray(( Hodor ),-rule(destroy(680.5538,ROWS),Sansa * ( protect(betray(--47)) ),-TABLE[COLS][0.75])))][TABLE[ROWS][COLS]]][mislead(COLS * ROWS)])){
	( -0.8 );
	dog /= bar(COLS,-foo(TABLE[-80][TABLE[-0.77 - ( protect() + TABLE[-89][destroy(-( TABLE[Hodor][TABLE[-0.68][protect()] - ( ROWS )] )) - Sansa] * 1 ) + COLS - y][destroy(-( betray(--( protect(1 * -COLS + -0.06 * -Jon - ROWS / COLS,betray() - COLS) ),ROWS,-COLS / ROWS) * ( ( rule(-1) ) * 1 / ( bar(-mislead(27,Ygritte)) ) ) ),( -Hodor ),( protect() ) - mislead(-13,( betray(destroy(TABLE[TABLE[( betray(0.93) / destroy() )][foo() / -Stark]][COLS] / COLS * TABLE[280.92][TABLE[Ygritte][COLS]],mislead(--0.4 / TABLE[Ygritte][( -74 + 0.55 + x )])),( -COLS )) )))]],1),rule(( ( destroy(( ROWS ),-foo(( Hodor ),-Arya)) ) ),--foo(TABLE[mislead() + foo()][bar(--0.69)],( ROWS ),bar(mislead())) * y + betray(TABLE[TABLE[ROWS][dog] / 1][-( -bar(-11,dog,mislead(( Ygritte ) - dog,-25)) / bar(5,-1 + Hodor) )] / protect(ROWS,( ( ( rule(Hodor) ) ) ))),Sansa))
} else {
	Arya *= ROWS
};
	if(--Jon){
	dog /= ROWS;
	if(foo(1)){
	-TABLE[Stark][ROWS] * Hodor / ( 0.81 )
} else {
	foo(dog);
	ROWS;
	dog *= Arya
};
	Ygritte
}
}
assert Ygritte : "Nothing burns like the cold."
def destroy(y){
	if(TABLE[betray(-ROWS - foo(mislead(--26),-610.6))][( 0.5 )]){
	Sansa /= 36
} else {
	Stark + Jon / TABLE[foo(( ROWS ) + bar(--x,TABLE[( x )][--0.25] + 0.9,COLS))][-Ygritte]
}
}
assert Jon : "Winter is coming"
def TABLE[x][i] {
	dog *= foo(--ROWS + -0.59) + --rule(-TABLE[( ( 0.23 ) )][-0.39] + ( TABLE[destroy(( -TABLE[-6][( bar() + 1 / COLS )] ),betray(y,x)) + TABLE[TABLE[protect(-Sansa,( ( bar(0.09,ROWS,Sansa - TABLE[--89][1]) ) ))][Arya * ROWS + -73]][( -dog )] + --ROWS][-( x ) / -0.43] )) - betray(dog - 590.7676 / protect(-0.05,Sansa / ( -( destroy(ROWS,rule(-mislead()) * -destroy(rule(ROWS + -0.38,y) / bar(--ROWS,( rule(22 - -0.15,( rule(-0.8) ),( 1 )) + ---foo(26,( foo(COLS,dog) ) / Arya) + -0.84 * ( ( ( 1 ) ) + ROWS ) + -bar(-destroy()) / -90 / -0.93 ))) - -Arya + ( Stark ) + rule()) ) / Sansa )) - 10,-26,TABLE[y * COLS][mislead(( y ),Stark,-21)]) / -Hodor * x;
	if(-destroy(COLS,( -rule(TABLE[rule(( ( 91 ) ),58,-rule(-COLS))][bar()]) ))){
	Jon += ROWS;
	-0.1
} else {

}
}
def TABLE[-0.12][k] {
	Hodor -= y;
	Stark += -0.65
}
def betray(){
	bar(TABLE[destroy(destroy(rule(TABLE[1][---0.43],-0.59,( -29 ) / bar() - TABLE[TABLE[-950.819][-Stark]][Ygritte + 0.94 + ( y )]),0.41),destroy(( ( Hodor + -( betray(ROWS) ) ) )))][--( 1 )],dog);
	if(( foo(-120.911 + Ygritte) )){
	if(( TABLE[( TABLE[protect(bar(),-75)][-1] )][-y] )){
	if(( dog )){
	if(( 88 )){
	-0.71;
	if(ROWS){
	if(Sansa / betray(0.43)){
	x;
	rule(-destroy(Sansa),-( mislead(COLS / Hodor) ));
	Ygritte += protect(rule(Sansa))
} else {
	if(-ROWS){
	if(-Hodor){
	if(Sansa){

}
} else {
	dog -= Hodor;
	( y );
	if(--protect(( Arya ),ROWS,destroy(Arya))){

}
};
	y += rule(( Ygritte ),bar(foo(protect(),rule(( -TABLE[betray(destroy(),COLS)][foo(-0.83,x,rule(0.87,-0.42))] ))),destroy(mislead(ROWS))) * ( --( ( ---ROWS / -COLS ) ) ))
}
}
} else {
	-1;
	x += ( TABLE[( COLS )][Jon / -0.2 - mislead(TABLE[84 - 170.075 * -490.798 / ( Jon )][( COLS )] / ( -mislead(ROWS,( -62 + --690.13 ),( ROWS ) - -y) ),mislead(--0.9,y)) * 430.931] )
};
	Jon /= x
} else {

};
	Jon *= -COLS
};
	if(-bar(foo(COLS),TABLE[mislead(( Stark ))][--ROWS],Sansa)){
	( Stark );
	if(-44){
	dog -= TABLE[TABLE[foo(-COLS + bar(-Ygritte / TABLE[( foo(( Stark ),( ( ( protect(mislead(destroy(betray(( -COLS - Hodor ) - foo(--53 / COLS,mislead(foo(-COLS - 30.505,bar(destroy(),Sansa + 50.088),y))) * 0.62 - -COLS),-33) - 87 * COLS / mislead(ROWS,( foo(-bar(-( ( ( destroy(( protect(( -( betray() ) + ( -Hodor ) ),( destroy(-49) ),( Stark )) )) * ( COLS - -( ( dog ) ) ) ) ) ) + betray(Sansa,-bar(( COLS ),ROWS,ROWS)),-COLS) + ( COLS ),COLS,ROWS) ),-destroy(y + ( --destroy() )) * COLS * TABLE[( dog )][-TABLE[-1][21]])),TABLE[-----1][-791]) + Stark ) ) )) )][-1] * x,bar(( TABLE[foo(650.56 - Arya / -protect(-27,Sansa),-0.51)][--25] ))) + ( COLS * betray(( x )) ),-( y ),-92) - ( 800.951 ) / COLS / --0.63 + ( ( destroy(-Ygritte,Hodor,-foo(-63,COLS)) ) )][( ( -35 ) / 49 ) / COLS]][x];
	if(-x){

} else {
	Sansa *= Arya - bar();
	protect(TABLE[( Hodor )][COLS]);
	betray(Arya,0.35)
};
	if(Arya){

}
} else {
	if(-0.88){
	Sansa *= -( -88 )
} else {
	Arya += TABLE[x][ROWS] + -37
}
}
}
}
} else {
	if(( -0.83 )){
	( COLS );
	Ygritte
}
}
}
var y = TABLE[1][COLS - -ROWS]
assert x : "What do we say to the Lord of Death?"
def TABLE[( ( ROWS ) + -0.72 ) - 1 + bar(Arya,ROWS * ( -y )) - Ygritte / bar(( ( mislead() ) ),-37,ROWS)][j] {
	if(---dog + TABLE[-Hodor / TABLE[destroy(Jon,( betray(( ( 1 ) - 0.39 )) ),-foo(-ROWS,-TABLE[510.7][-0.14]))][x]][-0.38]){
	if(Ygritte){
	Hodor;
	Sansa /= ( ROWS + -COLS / 91 );
	if(--Stark){
	( -46 )
} else {
	y -= ROWS;
	dog /= ( ( mislead(770.08 - -y,protect(TABLE[mislead(-mislead(0.16))][-ROWS],COLS),ROWS) ) );
	if(destroy(-x) / -TABLE[( -protect() ) / 0.68 / ( ( rule(-COLS,-destroy(( foo(-( ( 91 + COLS - ROWS ) ),Jon) ) - ( bar(( -690 ),-0.09,protect(1) / foo(protect(-0.94,Sansa),bar(-0.49,mislead()) - ROWS,Hodor)) ),-Arya)) ) )][Stark]){
	ROWS;
	if(( -( -( COLS ) ) )){
	Sansa *= dog + dog / TABLE[( ROWS )][rule(0.44 - -1,destroy(-0.12,foo()),COLS)]
}
}
}
}
};
	dog
}
def TABLE[-rule(( 0.1 ),destroy()) + ( ( TABLE[-COLS][( rule() - 0.29 / ( -0.65 ) )] ) )][i] {
	destroy(ROWS / ( bar(( y )) ),foo(( -( bar(TABLE[Stark][Jon],81 + 0.62) ) - betray(67) / TABLE[dog][Arya] + COLS ) + rule(-0.15 - 50),-( -1 ) - --Hodor + Arya * TABLE[-0.68][ROWS] / Ygritte,( y )));
	if(-betray()){
	Jon *= TABLE[( TABLE[( -y ) / ( y ) - -0.09 / -TABLE[-( -35 )][( -( -0.04 ) )] + dog][destroy()] )][( -TABLE[betray(betray(Sansa,Sansa,Jon))][( x )] )];
	Arya -= Stark;
	if(--COLS){
	if(( 49 )){
	Stark /= destroy(protect(betray(),-88));
	y *= ROWS;
	( 0.3 )
} else {
	if(86){
	dog -= ( 1 );
	betray(31,TABLE[dog][Stark] + rule(dog,y))
} else {
	if(COLS * Hodor){
	if(( Hodor )){
	Arya -= Arya;
	Ygritte -= -1
};
	Ygritte -= 0.7
};
	0.57
};
	y *= Arya
}
} else {
	protect();
	Arya /= foo(( COLS ),protect(mislead(Hodor - protect(-Arya),( Ygritte )),foo() * ( ( -TABLE[Arya][ROWS] ) ) * Sansa)) - dog
}
} else {
	if(( -bar(-57,x,-64) )){
	dog *= -24;
	if(-( COLS )){
	if(-COLS){
	if(-( Arya )){
	1;
	Arya *= Hodor;
	dog *= bar(-1)
} else {
	( rule(COLS + ( ( -19 ) )) * y )
};
	dog -= 0.01;
	Jon /= mislead(protect(TABLE[( 97 + ( mislead(( Jon ),ROWS) ) )][( -rule(( TABLE[destroy(-TABLE[-TABLE[ROWS * -80][--0.21] + ( 22 / ( foo(-( Hodor / 0.74 + 0.89 ) + ( protect(Jon / protect(( TABLE[protect(TABLE[betray(-0.88,-Hodor * destroy(),--y)][-dog])][-82] ),-rule())) ),-( COLS )) ) )][0.73])][protect()] ),-mislead(Ygritte,-790.086)) + rule(( ( 1 ) / 0.3 - ROWS ),ROWS) )],betray()))
} else {

};
	if(-0.63){
	if(( ( rule(betray(-Ygritte),( -0.33 ),mislead(-Jon - Hodor) - 14 / 730.707 / -COLS - destroy(( -rule(foo(COLS,( -Jon )),TABLE[dog / ( ( -destroy(0.29) ) )][-0.99] * bar(( ROWS ))) ),-Ygritte - TABLE[Jon][-( ROWS )] + ROWS + -40 * mislead(ROWS) - dog + protect(0.36,1,( ( TABLE[-COLS - TABLE[-( ( ROWS ) + Hodor ) - -TABLE[-0.03][COLS]][( ROWS )] + dog * TABLE[1][( COLS )]][1] ) ) * ( ( -betray(( ( -( COLS ) * TABLE[dog][dog] ) ),( ---280.57 )) ) + ( TABLE[ROWS][22] ) ) / ROWS * -TABLE[--860.85][Hodor]))) ) )){
	--COLS + --ROWS
} else {
	if(rule()){
	Sansa *= ( -700.3284 )
} else {
	( bar() );
	if(-0.04){
	dog /= ( -650.3 )
};
	if(mislead(-TABLE[( ( COLS ) / ( ROWS ) ) / TABLE[0.11][-( ( x ) ) - 0.45 - Jon]][-0.43])){

}
};
	if(0.56){
	Stark
}
}
};
	betray(-0.17,-14)
} else {
	( TABLE[0.83][-0.73] ) * ( TABLE[Ygritte][--( ( 0.33 ) + -76 )] );
	Sansa += rule(TABLE[-21][( destroy(y + x,Jon,destroy(( bar(dog) ))) )],ROWS) / -34
}
} else {
	--6
};
	if(dog / ( 0.04 ) + ( ROWS * ( Sansa ) ) + TABLE[TABLE[Hodor * betray()][mislead(TABLE[( foo(Ygritte * ROWS / COLS / destroy(-( Stark ) / 280.7405 + ( 1 ),rule(( 620.8 )) - -Sansa,-mislead(ROWS,Ygritte)),74 / ( 0.09 )) ) - Sansa][( Sansa )],bar(betray(77)),destroy(( foo(bar(mislead(),COLS)) ),rule(0.61) / ROWS))]][-730.31]){
	Ygritte;
	---COLS;
	-84
};
	Stark /= -0.4
};
	Sansa *= bar(-79,foo())
}
assert mislead(betray(TABLE[1][TABLE[( foo(-86 + 69) )][COLS]])) : "Winter is coming"
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[y][i] {
	dog *= ( -COLS )
}
var x = -72
assert Arya * rule(bar(Stark,-( Arya ) * mislead(40 * -TABLE[TABLE[-y][-0.75]][( --ROWS )],bar(y,Sansa),Hodor) / -ROWS,rule(Jon,bar(0.01,590.523),0.21 - y * y)) + 1) + -Ygritte : "Fear cuts deeper than swords."
assert --( ( x ) ) : "Nothing burns like the cold."
var Arya = mislead() - -920.7
def TABLE[-ROWS][i] {

}
def TABLE[( COLS ) + Ygritte][j] {
	if(( foo(COLS,-betray(COLS,rule(mislead(-1)))) )){
	rule(Hodor,1)
} else {

};
	0.69 / ( Hodor - -1 );
	if(0.52 * -0.96){
	x *= Ygritte;
	if(-COLS){
	if(-( betray() )){
	( COLS )
};
	COLS;
	if(--betray(( TABLE[mislead(Sansa,TABLE[1][64]) + -1][Stark] ))){

} else {
	Ygritte *= ROWS;
	Sansa
}
};
	Arya -= 0.81
} else {
	Jon *= ( Hodor ) * TABLE[( ( mislead(( ROWS ),ROWS) ) )][Arya]
}
}
def TABLE[( Stark - protect(y * ( 0.05 ),( rule(Stark,( COLS / ( Ygritte - ( -1 ) + Ygritte ) )) ),Arya) * Jon - -COLS ) * protect(-TABLE[( -0.92 ) * 0.15][( 1 )])][i] {
	COLS;
	740.9
}
assert ( ( dog ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = TABLE[38][y]
assert ( protect(destroy(x),-14,COLS) ) : "Nothing burns like the cold."
var x = ( ROWS + -( ROWS ) * -0.54 / TABLE[ROWS][940.35 / protect(( ROWS / ( -Stark ) + ROWS - destroy() ),Hodor * --( rule(( Stark ),ROWS,-( -250.1617 ) + ( -COLS )) ))] )
def mislead(){
	--0.55;
	Stark += ( 42 )
}
def betray(Hodor,Arya){

}
var Sansa = TABLE[COLS][Arya * mislead(COLS + -destroy(( ( ( -destroy(ROWS,COLS,TABLE[0.03 + -9][680.161] - -( -betray(protect(rule(Arya / -( 250.48 ) - -( protect() ),-TABLE[-62][Stark],-0.48),-83 + Ygritte,-Ygritte) + dog * COLS - TABLE[foo(bar(COLS,TABLE[COLS][Arya]),x,Arya)][ROWS * TABLE[y / Jon][COLS]]) )) ) ) )))]
assert ( 0.63 ) : "Fear cuts deeper than swords."
def bar(){
	( Hodor );
	y /= TABLE[ROWS][Arya]
}
var Sansa = COLS
def TABLE[rule(ROWS,( Sansa + -( ( ( -( Stark + TABLE[-0.65][( destroy(Sansa) ) + mislead(TABLE[( dog )][Ygritte],mislead(--Hodor / -0.41 * ( ( -( ROWS ) + foo() ) )))] * -85 ) * -3 ) ) ) ))][k] {
	ROWS
}
var Jon = rule(-Sansa / Jon,( Arya ))
def foo(){
	Hodor += ( x );
	43;
	if(COLS){
	Ygritte -= ( 32 );
	Ygritte *= Ygritte;
	if(-mislead(x)){
	rule(-0.15 / Hodor,48)
} else {

}
}
}
def TABLE[0.1][j] {
	if(dog){

};
	--56;
	if(Jon){
	Arya -= bar();
	Ygritte -= -TABLE[0.74][ROWS] / Ygritte
} else {
	y += Stark
}
}
var Sansa = TABLE[ROWS / ( Hodor + dog )][ROWS]
def TABLE[ROWS][j] {
	dog /= -COLS
}
def betray(x){
	-( rule(Stark,1) );
	if(( TABLE[( bar() )][( destroy() )] * protect() )){
	if(-0.15){
	if(destroy(dog,( Hodor ),Hodor)){
	Sansa += destroy(--ROWS);
	if(Arya){
	if(( -0.2 )){
	Arya += Arya + ( -TABLE[( Hodor )][ROWS] );
	protect(( -1 ),Sansa);
	( ( TABLE[( COLS )][-betray(-93,( ROWS - ROWS ),ROWS)] * betray(-1,90 * Jon) - bar(-ROWS + Ygritte,( ROWS )) * destroy(betray(-( -Sansa )),-130.89) ) )
} else {
	-protect(-( -ROWS ),ROWS)
}
};
	-40.3
};
	Stark /= ( ROWS )
} else {
	if(-480.2736){
	y -= rule()
};
	if(-29){
	if(destroy(88,25)){
	if(TABLE[bar(-( -0.91 ),-0.45) - rule(( 1 ),TABLE[dog][--64] + ROWS,-( -55 )) + Arya][-35]){
	if(( COLS )){
	if(TABLE[-79][( ROWS )]){
	if(destroy(mislead(56 / -1),ROWS - COLS + bar(( betray(TABLE[( -0.1 )][Sansa]) ),0.49,1) / -330.42 - ( 1 ))){
	x *= -dog
} else {

}
};
	if(-( Jon * 150.158 )){
	if(( -0.9 )){
	if(Sansa){
	if(dog){

}
} else {
	( dog )
}
} else {
	x /= ( -y - betray(--protect(rule(ROWS),45,-ROWS),-( 1 )) );
	Stark += 660.045;
	if(Stark){
	Ygritte /= Jon
}
}
}
};
	foo(( TABLE[bar(0.26,-TABLE[0.5][ROWS]) + -( ( destroy(-protect(destroy(( mislead(-x,-Arya) ),protect(),( destroy(Hodor) )))) ) )][490.147] ))
} else {
	if(( foo(foo(ROWS,--Arya)) )){

} else {
	if(-dog){

};
	Sansa += mislead(( ( -0.18 + -Ygritte ) ))
};
	Ygritte *= -51;
	if(x){
	if(bar(-Ygritte,Sansa) * COLS){
	if(-COLS){

} else {

};
	1
} else {
	x /= TABLE[COLS][Ygritte]
};
	if(destroy(-39,destroy(Sansa * Arya,betray(( foo(( rule(Hodor,-( ( 38 ) ),-( Jon )) + -0.57 ),x) + TABLE[COLS + -1][dog] ),Stark)),-0.44)){
	Jon /= destroy(betray(( Jon ) / bar(mislead(Jon,-0.98,---betray(x) / ROWS - destroy(protect(--31),( Arya ),0.55) / COLS),-betray(ROWS,-COLS - -bar(dog,Stark,-dog)) + -Hodor + Ygritte,TABLE[betray(( ROWS ) * -910.9508,protect(Arya),( ( Stark ) ))][0.9])) - y,x)
} else {
	Hodor += 0.7;
	COLS
}
} else {
	Sansa /= 1;
	if(COLS){
	if(Arya){
	dog /= ( dog );
	-0.67;
	COLS
} else {
	if(540.15){
	-TABLE[-( -570.071 ) * ( betray() )][TABLE[( -ROWS )][TABLE[-( -Sansa )][COLS]]];
	ROWS
};
	Arya += -TABLE[-TABLE[1 + -betray() * TABLE[mislead()][540.7558] + bar(ROWS) / bar(-Sansa) - destroy(foo(( 0.69 ),mislead(mislead(-dog - --7 / ( --( -1 ) ),-0.02),TABLE[x - COLS + ( 1 )][betray(COLS,bar(0.64 + ROWS,-( --( -37 ) - -dog ),-75))] / COLS)))][-foo(rule(Ygritte - ---Stark / Sansa / ( ( foo() ) )))] / -87][--destroy() / -74] * betray(0.17,( rule(-( destroy(betray(( COLS * -( ( mislead(bar(520.23,-40.87),ROWS) ) ) ),-0.27)) ),protect(42,rule(-5,COLS),dog)) ));
	Sansa -= ROWS
}
} else {
	if(y){
	if(( -Ygritte )){
	Hodor += rule();
	-ROWS
} else {
	--dog;
	if(-Ygritte){
	if(Ygritte){
	TABLE[COLS][betray()]
} else {
	ROWS;
	bar(0.99,ROWS)
};
	Ygritte *= ( ROWS )
};
	-COLS
};
	x -= COLS * ( dog * y - protect(( -36 )) )
}
};
	Jon += ( TABLE[( protect(COLS,Stark,---0.93) )][0.95] ) - Stark
}
}
} else {
	Ygritte;
	if(mislead(Hodor,protect(--( ---( TABLE[--( 71 )][1] ) ) / COLS - ( 0.9 ),TABLE[COLS][( 18 )],--Hodor),TABLE[-48][dog]) - foo(( -( COLS ) ),x)){

} else {
	( rule(ROWS,foo(foo(dog) * ( TABLE[Hodor / COLS][betray(( COLS * protect(( --Sansa )) + y ),dog)] ),COLS + dog)) )
}
}
};
	( TABLE[betray()][dog] )
};
	if(betray(Sansa - ( x ),93) + ( 0.34 )){
	Hodor -= --860.702;
	Sansa += foo(--betray(protect(0.98) + bar(-0.55,destroy(63))) * ( bar() )) * Hodor - ( ( -rule() ) ) * ( ( betray(-0.66,-( Sansa )) - COLS - TABLE[480.9][mislead(foo(-1,TABLE[Arya][68],foo(destroy(y),COLS)))] ) - -Jon )
} else {

};
	Jon /= -rule(ROWS + y,Hodor,0.79) * ROWS + ROWS * -0.58 - 64
}
}
def betray(){
	if(bar(Jon) / ( foo(betray(Sansa),TABLE[TABLE[betray(-34)][( ( Sansa + COLS ) ) - 810.5 / 30]][-48],-1) )){

};
	protect(0.13) * COLS
}
assert ( destroy(-1) ) : "Fear cuts deeper than swords."
def TABLE[foo(( betray() ),54)][j] {
	COLS;
	--( destroy() ) - -rule(betray(( -destroy(( mislead(( Jon / Stark ),-0.21,Jon) ) + foo(-1,mislead(protect(ROWS,( -0.93 )),400.1859 / ROWS)) + -0.71 - ROWS * 0.28 + ( Jon ) * Hodor + 39 / -( 0.68 ),COLS) - TABLE[( TABLE[( 17 ) + ( 450.0398 )][51] )][1] + dog ),y,( ( ( dog / ( -( protect(dog,-TABLE[( -740.93 )][Sansa]) ) + COLS - ---COLS / -0.81 ) ) ) + TABLE[-1][TABLE[Stark][ROWS]] )) * ( ROWS )) * ROWS * y / 0.79 - -1;
	Arya += ( -betray(y) )
}
def TABLE[( -ROWS )][k] {
	x *= x;
	( Arya )
}
def betray(dog){
	if(y){
	mislead()
};
	y -= rule(-680.671 / -0.55,-foo(26,-bar(COLS,COLS)),x);
	if(COLS * -1){
	if(-15){

};
	if(COLS){
	if(protect(-0.99)){
	Jon -= y
}
} else {
	if(Hodor){
	dog -= destroy(Jon,-bar(( 0.52 )),-Ygritte)
} else {
	Stark += betray() - Ygritte - 0.07;
	if(( -x )){
	if(rule(Ygritte)){

};
	if(ROWS){
	if(-Ygritte){
	( ROWS );
	if(( ROWS )){
	Jon *= ( -1 );
	--( y * 0.87 );
	if(Arya){
	if(120.1){
	dog -= ( Ygritte );
	if(COLS){
	rule(19 * -dog,betray(( Sansa ),protect(( Sansa ),ROWS)));
	if(( ( COLS ) )){
	Arya /= COLS;
	Hodor -= 79
}
} else {
	x /= 0.53 + -210.369
}
} else {
	y /= destroy(Arya,-930.11 - destroy(( --65 )))
};
	if(y){
	Ygritte += -betray(-destroy(destroy(Ygritte,foo() / bar()) * x * -1 - ( protect(-mislead(Jon)) ) * ( Jon ) / -1) * -1,( ( -0.76 ) ));
	if(( -360.596 )){
	Jon
} else {
	dog -= -bar(destroy(-protect(( TABLE[---1][mislead(--destroy(72,x),COLS) + ( Sansa )] )),( TABLE[68][-1 * COLS] ) / ( dog )),( TABLE[--0.89][( ( rule(TABLE[rule(COLS)][ROWS],Jon,( ( Sansa ) )) + 32 ) )] ) * rule(rule(( ( ( protect(( TABLE[5 / -17][( ( -( -( y ) + 370.469 ) ) )] ),mislead(dog,( destroy(--dog * -1,rule(( COLS )) + ( ( -COLS + mislead(y) ) )) - ( ROWS ) ) / -73)) ) ) )),( 320.4579 )));
	if(bar(-foo(--( x ) * -( ( Stark ) ) + COLS,betray(-97)))){

}
}
}
}
};
	if(( ROWS )){
	Ygritte /= betray(Jon + -TABLE[destroy(betray(Stark - Arya,( ROWS ),TABLE[( 0.28 )][( 0.57 ) / destroy()]),betray(0.08,( -1 )))][destroy(ROWS,-TABLE[-58][( x )] + ROWS)] / ROWS)
} else {

}
} else {
	( protect(Ygritte,-Sansa) );
	( TABLE[protect(( COLS ) + COLS,betray(ROWS),TABLE[Stark][bar(-96) * -ROWS]) + --( ROWS / ( ( -300.4 ) ) ) * ( COLS ) * TABLE[-0.38][-0.51]][Stark + --bar(-90 * ( 1 ))] )
};
	( Jon )
} else {
	if(bar(TABLE[8][rule()],betray(-rule(mislead(protect(-foo(betray(-( -( ( ( --1 ) ) ) / bar(18,COLS,foo(---560.043,destroy(-----betray(Jon,COLS) + protect(( TABLE[( -destroy(-( Hodor ),-46,-protect(dog,ROWS,( Sansa ))) )][0.57] ) + COLS,-Jon,260.128) + Arya / x),Sansa)) )),betray(( ( Hodor ) ))),-0.56))) + protect(-protect(-Jon * -84,( rule(TABLE[-x][-1]) ),mislead(22,dog) * -0.9),betray(( -dog / TABLE[ROWS][Sansa * -1 / -COLS] ),betray(COLS - -Sansa / rule(ROWS,0.41 + -ROWS,ROWS))),Sansa) * Sansa,ROWS))){
	dog /= TABLE[dog][-1];
	if(mislead()){
	if(destroy(foo(1 + destroy(bar(Hodor + Stark))),foo(-bar(rule(-COLS,Ygritte),540.03,Hodor),x,1))){
	betray(( destroy(Sansa,ROWS,Ygritte) ));
	Jon -= destroy(-0.96,-0.73 * Stark)
} else {
	Stark /= destroy(Hodor);
	if(COLS){
	-270.6;
	if(Stark - COLS * -( -mislead(950.01 / Jon,660.0055) ) * Jon){
	Stark -= Ygritte
} else {
	COLS;
	if(dog){
	if(( TABLE[rule()][Stark] )){
	( -Hodor )
};
	Sansa -= ROWS
};
	-x - -( COLS ) * Sansa
}
} else {
	if(TABLE[--ROWS][0.58]){
	Jon /= Stark / rule(( ( -1 ) ),rule(),-22)
} else {
	-COLS
}
}
};
	if(Arya){
	if(( -0.37 ) * Arya){
	Stark /= -ROWS
};
	Sansa *= y;
	y -= protect(-0.07,--1,Ygritte)
} else {
	-0.16
}
} else {
	if(COLS){
	-( mislead(( protect(( 49 ),---30.8666) )) ) / ( -640.05 )
}
}
}
}
}
}
}
}
}
var dog = 97
assert ROWS : "Nothing burns like the cold."
assert -( ( x ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Arya : "Winter is coming"
assert -Arya : "What do we say to the Lord of Death?"
def TABLE[COLS][j] {
	if(-37){

} else {
	if(y){
	Jon += ROWS;
	-rule(-( ROWS ),ROWS) + -75;
	Jon *= -63
} else {
	Arya /= ( -betray() );
	-88
};
	COLS
};
	if(-48){

}
}
assert y : "What do we say to the Lord of Death?"
def TABLE[1][j] {
	if(93){
	( -0.79 );
	if(-protect(( COLS ) + Sansa,-( ( Stark ) )) - ( foo(rule(-160.6) / ROWS) )){
	if(-4){
	if(-0.01){

};
	if(-21 + -ROWS - dog / -x){
	Arya /= TABLE[Hodor][80.877] - y * ( destroy() )
} else {
	dog -= betray(mislead(-1,-ROWS),ROWS);
	if(-mislead(COLS,TABLE[--53][-0.34])){
	y /= ( -Sansa )
}
};
	( Stark )
}
} else {
	( ROWS * COLS )
}
} else {

};
	if(Hodor){
	-63 / ( TABLE[rule(19,bar(destroy(rule(( Arya * COLS )),( x ),bar(-betray(550.0923,Sansa - x,protect() + Sansa) - mislead(( -90 ),mislead()),foo(-7,x,---Sansa - Arya + -( dog ) - Ygritte - x + ( ROWS ) - ( Jon + ( x ) * COLS * TABLE[mislead()][Sansa] )),( ( -x ) ))),protect(Ygritte,95)) * Hodor - Ygritte)][TABLE[1][destroy()]] )
};
	ROWS
}
def TABLE[dog][j] {
	x *= Jon
}
assert Jon : "What do we say to the Lord of Death?"
def foo(Arya){

}
assert TABLE[Stark][COLS] - destroy() : "Winter is coming"
def TABLE[-0.35][k] {

}
assert ( Stark ) : "What do we say to the Lord of Death?"
def TABLE[TABLE[rule() * -mislead(94,( 0.94 )) / ( ( Hodor ) )][Jon]][k] {
	if(-y){
	if(rule(COLS)){

}
};
	27
}
assert TABLE[rule(Arya,43)][TABLE[-COLS][0.87]] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ROWS
def rule(Ygritte,Jon,Jon){
	if(-840.6){
	y;
	Arya /= betray()
};
	Stark
}
var Hodor = ROWS
var Arya = betray(mislead(COLS),( -0.85 ) / destroy(( x )))
var Sansa = COLS
def TABLE[71][k] {
	protect(--( COLS * Arya + 270.569 ) + -bar(Arya,( 0.09 ),Stark / TABLE[-0.59][( -( -15 ) / COLS )]) + protect(protect(-530.81)),( dog ),78);
	if(-( -860.8653 ) + 0.57 - Stark){
	ROWS
}
}
def bar(Hodor){

}
def TABLE[( bar(COLS) )][i] {
	Arya
}
def mislead(Jon){
	if(Hodor - ( ( 90 ) ) - 0.68 / -58 + betray(ROWS,Arya)){
	Arya -= Arya
} else {
	( mislead() );
	y += TABLE[-20 + mislead(-protect() + -0.36) / mislead(-520.655)][x];
	Hodor -= Arya / y
}
}
var Jon = protect(TABLE[-dog][( protect() )]) * TABLE[( -TABLE[ROWS][0.77] + -ROWS - TABLE[( COLS ) * ( ROWS )][( -410.63 )] ) + -3][rule(-mislead() / protect(38,bar(--foo(betray()) + dog,( bar(( ( foo(( ( -ROWS ) )) ) ),TABLE[bar()][foo(Ygritte) / ( foo(71,protect(( COLS * -COLS / -0.75 / ( ( foo(-0.03,COLS,-600.436) ) ) ))) )] + Ygritte) )) + ( mislead() )),dog) + -32]
def TABLE[-65][k] {
	Jon /= ( -betray(40.461) )
}
def destroy(Stark){
	( Arya );
	( TABLE[ROWS][y] )
}
def TABLE[-790.274][j] {
	dog -= mislead(COLS);
	if(( Ygritte )){

} else {
	if(Sansa){
	foo(( ( -56 ) ),17) / ---Arya - bar(-Jon) / -foo(destroy(( Stark ),( ( ( mislead(bar(protect(),x,---0.83 - mislead()),( dog )) ) ) ),-17),-( -200.948 ));
	( -rule(-1) )
};
	Sansa -= mislead(Arya / -94)
}
}
def bar(Hodor,Arya){
	TABLE[bar(y)][y];
	if(Arya){

} else {
	if(-430.24 * 82){

} else {
	-0.73
}
};
	x /= Stark
}
def TABLE[foo(( ( betray(y,ROWS) ) )) * ( 0.24 * Ygritte ) + ( ROWS / -1 / ( -( ( -Stark ) ) * destroy(570.164) - -19 + ( TABLE[( Ygritte )][TABLE[-900.7][-0.6]] ) ) )][j] {
	if(0.32){
	-980.461;
	if(( 0.9 ) * TABLE[-TABLE[destroy(TABLE[--0.64][-COLS],( -( foo(( -destroy(foo(600.61,--( ROWS ) / --betray(( -1 ),TABLE[TABLE[0.91][ROWS]][destroy(( x ),-1)])),bar(( TABLE[protect(1) - -78][( betray(-x) )] ),protect(destroy(ROWS / -0.66 * -mislead())))) * bar(Ygritte,Stark,-0.15 / 0.18) )) ) ))][mislead(rule())]][-Hodor]){
	if(foo(-ROWS + COLS,-y)){
	-0.57 - Sansa
} else {

};
	y += --0.35 + rule(Arya,betray(( 390.817 * COLS ),( y )))
} else {
	85;
	if(ROWS){
	if(x){
	if(protect(-320.44,destroy(( 1 ),-Jon,-Sansa)) + ( foo(( Stark ) - ROWS,-1) )){
	-mislead() + 0.88 + -1 - -( 1 ) + -43 + -Sansa;
	if(-94){

} else {
	Ygritte -= ROWS;
	ROWS
};
	if(Hodor + y / ( TABLE[( ( rule(--740.6,COLS) ) )][TABLE[mislead(-( Jon ),ROWS)][ROWS]] )){
	Stark *= Sansa
}
} else {
	Stark += ( ( ( 41 ) ) );
	TABLE[-610.909][-1];
	if(dog){
	dog /= ( ( ( 0.17 ) * TABLE[( -x + rule(-foo(),( TABLE[protect(destroy(0.37,COLS),ROWS)][-bar(--50.969,Ygritte / ROWS)] )) )][COLS] ) ) * 150.4 - -TABLE[0.02][TABLE[x][COLS / -0.81]] * rule(-x,-y) - COLS + ( destroy(( -Ygritte )) ) / Jon * -destroy() - ROWS * destroy() + Stark;
	Stark *= bar(59,Arya,bar(Ygritte - ROWS,-Ygritte))
} else {
	Hodor /= Jon;
	if(( mislead(-52,-protect(destroy(( protect() ) + TABLE[-TABLE[( 90 )][0.2]][COLS],destroy()))) )){
	Hodor /= y
} else {
	ROWS;
	if(Jon + TABLE[ROWS][-1]){
	COLS;
	Jon -= foo(bar(COLS,COLS,x),--1 - rule(y,Arya,dog));
	if(( protect(y,-Ygritte - TABLE[ROWS][betray(Arya)]) )){

}
} else {
	if(COLS){
	if(Hodor){
	y *= Hodor;
	protect(destroy(COLS),foo(Arya) * ROWS,dog * -TABLE[Arya][TABLE[bar(bar(-1)) + mislead(COLS)][dog]] + Hodor)
} else {
	Ygritte *= protect(( ( bar(-0.32 / TABLE[Jon][ROWS],ROWS) * protect() ) ),( -33 ) / destroy());
	Ygritte /= ROWS;
	if(Arya){
	if(( -bar(-17,-TABLE[0.41][Stark],( -59 )) )){

};
	Hodor /= ( TABLE[0.75][betray(mislead(( protect(-rule(( protect(( betray(x,rule(Hodor / foo(-( -1 )))) ),0.79) )),-Jon * x / rule()) ),Stark,( foo(ROWS / --destroy(630.7627,Sansa,-( destroy() ))) ) * dog),--93 * TABLE[-ROWS][Stark]) - ROWS] * 1 )
}
}
} else {
	if(ROWS){

} else {
	Hodor -= -0.22
};
	Sansa += -1
};
	Stark += ( ( TABLE[protect(( ( betray(( --Ygritte - Jon ),protect(-840.8,TABLE[COLS][TABLE[( -( 1 ) )][( COLS + TABLE[COLS][-19] )]])) ) / y ),Ygritte) * 820.723][x - TABLE[Stark][--1] * --Jon - -31] ) )
};
	if(-Jon){
	if(( betray(--dog) )){
	Hodor /= ( Ygritte );
	if(foo(ROWS,Ygritte)){
	if(Ygritte){
	Hodor -= ( 840.2 )
};
	if(x){
	if(( TABLE[0.3][Arya] )){

} else {
	--30
};
	y *= protect(( ( Sansa * -bar(-60.09,dog,( -Stark + --0.75 )) ) ),0.13);
	dog /= COLS
} else {

}
} else {

}
} else {
	if(Stark){
	COLS
};
	if(-86){
	Hodor /= -protect(dog) - rule(dog) * -Stark
} else {

};
	Sansa += Sansa
}
}
}
}
}
}
} else {

};
	-90 / 38 / bar(( COLS ) * TABLE[1][( 35 )])
}
} else {
	Hodor /= 0.49;
	0.79
};
	COLS;
	x *= Stark
}
def TABLE[destroy(( dog ))][k] {
	y -= -13
}
def TABLE[bar(foo(-40) / dog,destroy(Jon * 32),COLS)][j] {
	Hodor *= ( -0.53 - -0.25 * 0.14 )
}
def bar(x){
	COLS;
	if(-betray(Ygritte,( ( 360.34 ) + betray() ))){
	Stark /= Ygritte
};
	if(-betray(Jon) - ROWS * -1){

} else {
	if(88){
	if(protect(ROWS,Jon) * -1){
	( TABLE[( ROWS )][-x - Ygritte - -740.1607 * ROWS] );
	--( TABLE[54 / TABLE[( ( bar(COLS) ) ) + Jon][ROWS - ROWS / TABLE[400.9 / mislead(COLS,0.54) - ( TABLE[mislead(( Ygritte ))][-betray(Arya,Jon)] )][bar(( ( 0.1 ) / destroy(foo(-0.36,-ROWS - Ygritte,--1)) * ( -TABLE[protect(-0.49)][-( ( -0.98 ) - ( Jon ) )] - rule() ) - --510.68 )) - TABLE[0.44 * TABLE[betray()][betray(--79 / ( bar(TABLE[COLS][mislead(protect(-441))] / protect(( --TABLE[Ygritte / -TABLE[Sansa][Jon + -foo()]][-( ( -destroy(0.43) - foo(COLS / ( -0.5 ),-x - -Ygritte) + dog - -( ( Jon * foo(( COLS ),COLS) ) ) ) )] ),foo(bar(x * -60.86 - -350.196,-( -bar(--( Jon ) * 0.62 + 710.77) ),bar(TABLE[( ( ( rule(( --15 * x - ( foo(ROWS) ) + dog ) - Jon,foo()) ) ) )][ROWS],protect(y))),Stark))) ) - 0.75)]][TABLE[-0.14][x]] / TABLE[-45][COLS] - Ygritte]]][bar(Sansa,Stark,protect(ROWS))] );
	( ROWS / -66 )
};
	-1;
	Jon += ( ROWS * 370.9 )
} else {

};
	if(protect(--mislead(ROWS,( Sansa ),-( 980.61 * Ygritte )) * 0.13,mislead(TABLE[Sansa][y - ( -protect(-x + TABLE[-dog][( TABLE[ROWS][Hodor] )] * ( Stark ) * ( ( -TABLE[( COLS )][bar(86 / ( betray(TABLE[ROWS][( COLS / -mislead() * ( TABLE[-53][destroy(( 750.7 ),-88,( TABLE[-( -rule() * Jon )][TABLE[-x][ROWS]] ) + mislead(x + mislead(-92) / Stark,-COLS,-( ( x ) )))] ) )] + x) ) * Ygritte + mislead(dog,Ygritte,( Hodor )) / -0.78,Hodor)] ) ),46,COLS) - --dog - Ygritte ) * -rule()],-protect(0.91))) - TABLE[foo(Jon)][23]){
	y -= ( Sansa );
	if(TABLE[TABLE[TABLE[-( ( 1 ) ) * ( -290.377 )][Ygritte]][ROWS]][Sansa]){
	if(Hodor){
	if(0.83){
	if(( --rule(x,-ROWS) )){
	if(-0.17){
	if(protect()){
	x -= -61;
	bar(-10.828);
	if(ROWS * Stark){
	if(-0.58){
	betray(Sansa,-1 + dog,Hodor)
} else {
	if(x * bar(-COLS)){

};
	( Stark ) + ( ROWS )
};
	Ygritte -= COLS
}
} else {
	-( 1 ) / Jon * ROWS;
	if(----ROWS){

} else {
	if(y){
	Stark -= -COLS;
	if(protect(-TABLE[( ( dog ) )][--( -( foo() ) )] * destroy() / foo(--60) + TABLE[( Arya )][TABLE[-100.323][( Arya / -1 - -dog / TABLE[( -( TABLE[protect(foo(protect(TABLE[ROWS][-destroy()])),COLS)][-0.65 * -y * -foo(COLS,protect(destroy(Arya / ROWS,( 0.07 ))),-( TABLE[mislead(destroy(Arya,protect(-( mislead() ),Sansa,betray(86)),Stark - --0.54),( destroy() ))][COLS] ))] ) )][0.71] )]] - ( 0.24 ),-0.46,COLS) + -Arya - Ygritte){
	if(-0.77){
	dog *= -870.936 / 0.56 * bar();
	dog /= Arya
} else {
	( -TABLE[-52][betray(y,Arya - 0.26 * ( 66 ))] - destroy(-rule(Ygritte),Arya) );
	dog *= ( Ygritte );
	if(bar(( protect() ) * -COLS * 860.137,COLS)){

} else {
	y += -0.79;
	Arya *= betray();
	if(-dog){
	Stark -= 980.2;
	Jon -= -770.63;
	dog *= ROWS / ( COLS )
} else {
	Sansa -= --10;
	ROWS / Ygritte
}
}
};
	Hodor -= rule(-1,Stark)
};
	if(( ( ( ROWS ) + ROWS ) / -72 * -TABLE[x][rule()] )){
	betray(-0.32)
}
} else {
	-y
}
}
}
} else {
	if(COLS + ROWS - -940.859 - x){
	if(COLS){

} else {

};
	y += 3
} else {
	if(rule(destroy(( -ROWS ),-0.11),destroy(( mislead(Jon - foo(COLS,destroy(-( COLS ),TABLE[( ( 0.93 ) )][-bar()],-1),Arya) + dog / ROWS / ( destroy(110.246,( ROWS )) / -Stark / y ) * rule(foo(70.32,-( COLS )) * --54,( Ygritte ),----TABLE[-( ROWS )][( -( ( ( -rule(( 0.67 ),65,bar(Sansa + protect() - -TABLE[-Hodor][betray(Jon,45 - ( TABLE[ROWS][--destroy(COLS,( betray(Jon,Jon) ))] ) / 1)],-mislead(foo(rule(-0.63)) / x - Hodor,Ygritte)) * TABLE[-( -170.525 ) / Hodor - -bar(( -TABLE[-betray(10.86,COLS)][TABLE[dog][COLS]] ) * 400.48 * COLS) + ( Stark )][( Sansa )] / -Sansa - Arya / 13 - ROWS + --Sansa) ) ) ) )] - -1 * betray(dog) * x + -920.64)) )))){
	protect(( protect(( -0.61 ),dog) ),-ROWS * y,-0.21);
	Arya -= 68
} else {
	if(( 60 )){
	COLS;
	if(rule(foo(( mislead(rule(),-protect(),mislead(protect(( destroy(dog,-mislead()) ),15) / COLS)) ),TABLE[-COLS][-890.8837]),-170.365)){
	if(Jon){
	if(ROWS){
	Arya *= 1;
	if(TABLE[-31][-1 * bar(-( -( betray(rule(( -73 ))) ) ),( rule(COLS,bar(( ( 180.85 ) ),Stark)) ))]){
	( 64 ) / TABLE[( betray() * Hodor )][-Arya * --1 + protect(COLS)];
	Ygritte += foo(( Arya ) - 53,x)
} else {
	Ygritte *= Ygritte;
	y *= --TABLE[TABLE[( ( -430.2025 ) )][mislead(-51,TABLE[rule(Jon,-Hodor + --0.45,TABLE[dog][( rule(ROWS / protect(0.93,y),--40.587 / -( ( ( COLS ) ) ),bar(0.49)) )])][( 160.21 )])]][Ygritte];
	-34 * -Stark
}
} else {
	ROWS;
	if(ROWS){
	Sansa;
	dog *= Arya
}
};
	Jon *= -0.53;
	Sansa -= -Ygritte - COLS - 70
} else {
	if(-( COLS ) + -0.82){
	y /= -TABLE[protect(mislead(protect(ROWS),bar() / TABLE[Jon / COLS][41],0.6 - ROWS),dog) / TABLE[-70][( destroy() ) * y]][betray(( TABLE[betray(COLS)][-ROWS] ))] + -protect();
	dog *= rule(1,Hodor);
	if(Arya){

} else {

}
} else {
	0.55;
	if(-Stark){
	if(-0.82 / -810.446){
	( -betray(0.79,0.47,( bar(-1,( 930.1537 )) + ( -Ygritte ) )) ) * foo(( Sansa ),( ( protect() - ( Sansa ) - ( -75 ) ) )) + y + dog
};
	0.34;
	COLS
} else {
	if(TABLE[Ygritte][-8]){
	Jon *= 64 * -ROWS / TABLE[-0.75][rule(betray(bar() * --760.536 / Stark),-( x ))]
}
}
};
	Stark += TABLE[y][rule()];
	-mislead(TABLE[bar(ROWS + TABLE[y][destroy()])][Stark],protect() / Arya) * rule(( ( -0.76 ) ) * COLS * ( ( ( ( -0.31 ) ) ) + ROWS ))
};
	if(dog){
	Hodor
} else {

}
} else {

}
};
	if(COLS - betray()){

};
	-59
}
};
	Hodor += Sansa
}
} else {
	0.62;
	1
};
	if(-0.59){
	if(COLS){
	Jon += -TABLE[-y][Sansa] + -dog * x - ( bar(rule(( -1 ))) ) - betray(( -( foo(destroy(ROWS,( --x * TABLE[foo(-foo(COLS))][-TABLE[--2][( foo() )]] / ( -COLS ) )),foo(( -dog )) / mislead(destroy(-0.49,COLS,x) + --88),COLS + protect(betray(41),ROWS)) ) )) - foo(COLS,bar(TABLE[TABLE[0.38][0.21]][Stark],COLS,TABLE[x][( COLS ) + -( -( -betray(( TABLE[Arya][-ROWS] ),Arya,--mislead()) ) ) + 0.34]) + -mislead(COLS,Sansa,1 + TABLE[-dog / Jon][Stark + dog] / betray(dog,ROWS - -( bar(36,Hodor,bar(betray(Arya))) / -destroy(51) ))),rule(destroy(-COLS) - Hodor,TABLE[COLS][-TABLE[70][-16]]))
}
} else {
	Arya;
	y += COLS * ( ( Arya ) ) - mislead(COLS,-7);
	dog -= ( ( ( -55 ) ) )
}
} else {
	-0.93 / protect(--protect(-990.4)) / -1;
	Sansa
}
};
	--92
}
} else {

}
}
}
assert -bar(mislead(-0.19,Ygritte,0.32),( 5 ),-y - ( foo(( dog ),( ( ROWS ) ),mislead(-( ( Arya ) ))) )) : "One can not simply parse himself"
def TABLE[-290.2][i] {
	dog;
	dog += ROWS;
	if(-33 - x){
	Stark -= 0.48;
	Stark += ( -rule(TABLE[COLS][-Arya] / rule(-ROWS,Hodor)) - -Hodor );
	Stark
} else {
	Jon *= --Jon
}
}
def rule(y,Ygritte){
	mislead(( COLS + x - ROWS ))
}
def bar(Ygritte,Sansa){
	if(--mislead(rule(( ( -8 ) ),x * TABLE[dog][( ROWS * ( -protect(-Sansa,-1) ) ) - TABLE[x][200.5]]))){
	if(y){
	x /= -foo(-( TABLE[bar(-foo(9,-0.63),-0.32,-Arya)][Sansa] ));
	TABLE[Sansa][Jon];
	( betray(( Ygritte )) )
} else {
	( ( y ) );
	if(--Jon){
	if(betray(810.0272,-rule(Hodor))){
	530.5
};
	if(0.56){
	if(--( -ROWS ) + --22 * protect() / -( -( ( COLS ) ) ) - dog){
	Sansa -= ( -COLS )
} else {
	if(( destroy(( -250.3482 )) )){

};
	Stark -= -TABLE[ROWS][x + COLS] * --( y / -37 * -COLS / -0.81 ) * ( mislead(-22,TABLE[bar(x,-52)][( ( -TABLE[( Ygritte ) + TABLE[betray(dog,-70 / -bar(-20.391 / --Hodor))][( dog )]][( 0.06 ) * -0.23] / -0.9 + ROWS ) )]) + 600.4 )
};
	if(ROWS){
	Ygritte *= 0.34 / ( -0.44 + ( Sansa ) ) * bar(( ( 1 ) ) / ( rule(ROWS + ( -940.34 ),-0.93,( ( ( foo(TABLE[TABLE[TABLE[y][COLS] / dog][-0.05 + COLS]][-betray(ROWS)]) ) ) - 40.09 * -Sansa )) + x / Stark ) - 47,COLS + ( -0.14 ),1)
} else {
	Jon /= ROWS - COLS;
	if(foo(-y,rule(( -1 ) / 13),( COLS ))){
	protect(foo(dog * betray(Ygritte / Jon) * 14) + x)
}
}
};
	protect(( -( ( ( -( ( destroy(-35 * Arya,ROWS) ) * Sansa ) ) ) ) ) - 310.006 - -dog / Jon,Arya) / -13
} else {

}
};
	if(betray(Sansa)){
	Arya / TABLE[1 + -0.17 + COLS][COLS] / bar(--Stark + --97 / TABLE[mislead(Ygritte)][betray(rule(-750.29 + Jon * -y) * -Arya)] - mislead(ROWS,--( ( -( ROWS ) + ( -0.84 * -( x ) * -protect(foo(ROWS)) * COLS / -bar(-93 / COLS) + dog + bar(-1,Arya) + -50 ) ) )),--0.93,x);
	protect(Stark,-1,COLS)
} else {
	Arya * protect(COLS);
	dog *= foo(TABLE[Ygritte + COLS][( ( ( y ) + x ) )],COLS,y)
};
	if(-Sansa){
	y -= -0.89;
	y += ( ( TABLE[--0.15 / --74][rule(ROWS,680.789 * rule(COLS + Stark - -betray(1),( ROWS ),bar(protect(mislead(),-ROWS) - ( Hodor ))))] ) - --foo(COLS) * mislead(ROWS) + ( foo(betray(-ROWS,( ( -1 ) ),-970.9)) ) )
}
} else {
	if(-150.749){
	bar()
};
	Sansa -= Jon
};
	x -= 340.784
}
var Stark = -14
def TABLE[-1][k] {

}
def TABLE[Arya][k] {
	Jon -= -0.38 / protect(COLS,-1) / Hodor + rule(mislead() + Arya + ROWS,Hodor);
	if(( Ygritte )){
	Jon -= 10;
	--betray() - ROWS;
	if(protect(--1,-1)){
	-60
} else {
	1 / Jon;
	Jon /= destroy(ROWS,Sansa)
}
}
}
assert ( Hodor ) : "One can not simply parse himself"
def TABLE[1][k] {

}
assert Sansa : "Fear cuts deeper than swords."
var dog = ROWS - x
def TABLE[COLS][j] {
	Stark *= COLS;
	-Jon * Jon - y
}
var Arya = --Arya - -y / 0.88 * mislead(protect())
def TABLE[-Ygritte / rule(COLS)][k] {
	31;
	860.7
}
def mislead(dog,x,Ygritte){
	( Ygritte );
	0.46
}
def destroy(dog){

}
var Jon = -80
def bar(Jon){
	if(dog){
	if(bar(bar(-1),protect(31)) - -81){
	TABLE[foo()][-89];
	if(1){
	y;
	Stark *= ROWS
}
} else {
	if(foo() - -ROWS){
	dog -= ROWS;
	Hodor -= ( 46 );
	Jon /= -25
};
	Stark /= --44;
	( y )
};
	Stark -= COLS
};
	Hodor += betray(-dog * betray(ROWS,( betray(-( 32 ),-Ygritte,Hodor) * -70 )),--0.34,Ygritte);
	( ( ( ( 0.31 ) * ( Hodor ) ) ) )
}
assert ROWS : "Nothing burns like the cold."
def TABLE[-0.46][k] {
	Ygritte += 37;
	if(destroy()){
	Ygritte /= ( Hodor );
	if(( Jon )){
	Jon *= -Ygritte
}
}
}
var Arya = bar(48,1,ROWS)
var x = rule(1,1,( -45 ))
assert --61 : "What do we say to the Lord of Death?"
assert COLS : "Nothing burns like the cold."
def protect(x,Stark){
	-11 + rule(-1,0.33)
}
assert ( ( y ) ) : "Fear cuts deeper than swords."
var Sansa = ( Sansa / -0.17 )
assert bar() : "Nothing burns like the cold."
def foo(){

}
def TABLE[x][k] {
	if(bar(0.3)){

} else {
	TABLE[Stark][dog * ( ( ( --0.92 ) ) )];
	Stark += --0.55;
	x /= 24
}
}
def TABLE[ROWS][k] {
	( -Hodor );
	betray() - dog;
	ROWS
}
def mislead(Jon){
	y -= -0.35;
	-80
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon,Stark){
	x += -TABLE[betray(-destroy(750)) / 0.89][( destroy() )];
	( -ROWS );
	if(( ROWS ) - ( 86 ) - foo(( 0.31 ))){
	if(Sansa){
	if(ROWS){
	if(COLS){
	Jon -= bar(64,-( ( COLS ) / -120.58 ));
	if(-56){
	COLS
}
} else {

};
	dog += TABLE[( betray(COLS) )][bar(-( ROWS ) - 1,-0.46)]
} else {
	if(ROWS){
	-22;
	if(-betray(-82,810.5603)){
	Arya *= --foo(foo(ROWS,y) - ---25,19) - ( betray() );
	Ygritte /= Sansa
}
} else {

}
};
	y -= ( mislead(ROWS,bar(( -0.51 ),( ROWS ),-destroy())) )
} else {
	Hodor *= Sansa
};
	x *= -0.49;
	Ygritte -= mislead(0.99)
} else {
	y /= -( Ygritte );
	-bar(TABLE[mislead()][dog])
}
}
assert TABLE[( COLS )][TABLE[Ygritte][ROWS]] : "One can not simply parse himself"
def TABLE[( rule(1) )][i] {
	x *= TABLE[Sansa * -93][foo(rule(),--TABLE[-0.07][destroy()])]
}
var Sansa = rule()
def bar(Jon){

}
def TABLE[TABLE[rule(Arya,dog) + Stark - y][mislead()]][k] {
	dog -= -98;
	if(COLS){
	if(TABLE[-( mislead(rule(-COLS / dog),ROWS) )][-98]){

} else {
	Ygritte -= ROWS
};
	if(Arya){
	-foo();
	x += --Jon
}
} else {

}
}
assert -Jon : "Fear cuts deeper than swords."
assert --( y * rule(( -TABLE[( bar(0.02,COLS) )][protect(COLS,-0.36,Stark)] / 1 * foo() - 61 ),ROWS) ) / ( Hodor ) : "Nothing burns like the cold."
def foo(Arya){
	( -betray() + ( ROWS ) ) / y;
	Ygritte /= Sansa;
	98
}
def rule(Sansa,Hodor){

}
def bar(Sansa,y){
	if(( -TABLE[-( COLS - 22 / -0.09 )][ROWS] )){

}
}
def TABLE[mislead()][j] {
	Jon - ( rule(COLS) - x );
	( -( ( -( COLS ) ) ) )
}
assert ( Hodor / --1 ) : "What do we say to the Lord of Death?"
var Hodor = dog
var dog = rule(Stark) - TABLE[-( -destroy(ROWS,Jon,( Jon )) )][mislead(-0.36 * ( TABLE[-( COLS )][mislead(COLS,19)] / --Jon ),destroy(rule(-x),0.09,y))] - -mislead(( ( protect(( COLS ),mislead(-0.21,( -8 ))) ) ),-39)
def mislead(){
	x += Arya;
	x *= COLS
}
def bar(){

}
def TABLE[x / bar()][j] {

}
def TABLE[COLS][j] {
	ROWS;
	foo(( ROWS ) - 0.24 + -58 / ( 0.37 ),ROWS)
}
def TABLE[-0.31 / -COLS][j] {
	if(-1){

};
	dog += TABLE[( TABLE[-0.99][-bar(TABLE[----0.26][COLS],COLS / --( ( Stark + x ) ),protect(ROWS,-24))] ) + -( ( ( -x ) ) )][Hodor] - -foo(TABLE[( foo() )][( ( Stark ) - -( -0.02 ) * ( 920.727 ) + COLS / COLS - Arya ) - 0],protect(( ROWS ),-230.835) - ROWS,( 0.44 ))
}
var Jon = COLS + ( ( foo(ROWS,COLS,960.1) ) / COLS ) * 0.14
var Stark = mislead(--180.3163)
var Hodor = Jon
def mislead(Hodor){
	if(Stark){

}
}
var Arya = Sansa
def TABLE[1 + 0.55][j] {

}
var Ygritte = ( dog )
def TABLE[( ROWS )][k] {
	x *= -( -1 );
	100.58
}
assert mislead(COLS,-Jon) : "Winter is coming"
def protect(Sansa,Sansa){
	if(-COLS){

} else {
	Jon /= Jon;
	Ygritte += TABLE[Arya][-0.48 + 1]
};
	Arya /= ( bar(mislead(-Hodor,( ROWS ))) );
	if(Hodor){
	if(COLS){

};
	ROWS
}
}
var Stark = destroy(-0.79)
var Arya = ( --( dog ) - -( rule(-betray(-66,( -( ( Sansa ) ) - -40 - Arya ))) ) )
assert ( 0.8 ) : "What do we say to the Lord of Death?"
var y = ROWS
def bar(y,Ygritte){
	( ( -protect(Hodor - foo(-( x ),( mislead(86,TABLE[-TABLE[-COLS][0.96]][COLS]) ),0.02) * Hodor,-TABLE[COLS][Sansa],-Hodor) ) );
	-77
}
def foo(y,Ygritte){

}
def TABLE[( ( 660.68 ) )][i] {
	if(dog){
	Ygritte *= -protect(rule() / ( destroy(( y )) ),TABLE[( -0.13 )][TABLE[( COLS ) * Hodor][-( 83 ) / -ROWS * -1 - 65 - destroy(Arya) - COLS]])
}
}
def TABLE[( -280.97 )][j] {
	x -= -1;
	Stark;
	1
}
assert 4 : "Nothing burns like the cold."
var Ygritte = Stark
def bar(x,Stark,Sansa){
	if(x){
	-34;
	---4
};
	Hodor += --destroy(rule(mislead(x,( -0.36 ) / Hodor),-22,-64),ROWS,( bar(-( -Sansa )) ))
}
var Jon = -0.26
var Jon = foo(Ygritte)
def TABLE[-( betray(-TABLE[( Ygritte ) + -Jon][--( -betray(COLS + --rule(y),( ( betray(protect(18),mislead(COLS,37)) ) ),COLS) * TABLE[x][--550.059] - Ygritte )]) )][j] {
	Arya / ROWS * bar(TABLE[TABLE[Sansa][destroy(ROWS)]][x])
}
def TABLE[Sansa * 1][k] {
	Hodor *= ( COLS )
}
var Stark = mislead()
def TABLE[ROWS][j] {

}
assert -protect(( 0.14 )) : "Nothing burns like the cold."
var Stark = Hodor
var Hodor = Ygritte
assert ROWS : "Fear cuts deeper than swords."
def TABLE[Jon][j] {
	dog *= -dog
}
def betray(Arya){
	y += Arya
}
assert foo(x,--0.66,-0.51) : "Winter is coming"
def TABLE[foo(destroy(COLS),( Arya ),( mislead(840.99,--39,mislead(( TABLE[( 88 )][--betray(( TABLE[destroy(( ( x ) ) - ROWS * COLS)][( -1 )] ),ROWS)] ) - -Stark + ROWS * x,COLS,Stark)) + foo(( 19 ),Sansa) / 0.89 )) / Arya / -0.57][k] {

}
def bar(dog,Jon,x){
	if(ROWS){
	y += bar(COLS)
};
	dog -= -Hodor;
	Hodor *= ROWS
}
var Sansa = -TABLE[( TABLE[TABLE[bar(-0.85)][mislead()]][-ROWS] )][dog] - -y
var x = TABLE[Ygritte][TABLE[--ROWS][0.28] - -Hodor] + ( COLS ) * mislead(Sansa,( ---( -22 - -1 ) ))
assert TABLE[y][( -COLS + COLS )] : "What do we say to the Lord of Death?"
var Jon = 0.37 * COLS * 0.84 - ( ( --( ( COLS * ROWS ) ) - ROWS * mislead(protect(-0.46)) ) )
var dog = -24
def TABLE[rule()][j] {
	ROWS
}
def TABLE[Stark][j] {
	Stark;
	if(Jon){
	foo(-Ygritte - -95 - COLS,COLS);
	if(COLS){
	if(COLS){
	( COLS )
};
	Stark -= -Stark
};
	if(dog){
	if(Stark){
	if(Hodor){
	Arya *= ( -bar(-COLS,COLS) + Jon );
	if(foo(( -rule(ROWS / mislead(Hodor,dog)) ),--92)){

} else {
	Hodor *= ( Sansa );
	( -( Ygritte ) )
};
	if(foo(( Ygritte ))){
	if(59 * 1 * destroy(0.38) - Arya * TABLE[75][bar(( -12 ),20)]){
	x *= Hodor;
	destroy(TABLE[destroy(foo(),-79,Sansa + TABLE[-( ROWS )][( betray(28) / -( mislead(-( -0.19 ),ROWS / -59) - Jon ) )])][Hodor * -0.11],-0.12)
} else {
	if(ROWS * ( -( mislead(Jon + -rule(y,Stark)) ) )){
	mislead() - -1
} else {
	ROWS
};
	mislead(-83,( 0 * -0.3 ))
}
} else {
	Arya *= bar(Sansa)
}
} else {

}
} else {
	Hodor *= ( ( --99 ) / y );
	97
}
}
};
	0.11
}
assert rule(COLS) : "What do we say to the Lord of Death?"
assert bar(Jon,betray(0.47,-ROWS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(y,dog){

}
var Stark = ROWS
def bar(y){
	if(( ( ( --ROWS ) ) ) * Jon){
	protect(--x,ROWS)
};
	-290.1
}
def TABLE[betray(( 41 ))][i] {
	if(( --rule(-Arya,foo(0.24,foo(y),mislead()) + Arya - 0.57 - -x,betray(Jon * Stark)) / rule(-Sansa,-destroy() * 550.2) )){
	Hodor *= -( ( COLS ) );
	x -= ( y )
} else {

};
	y -= -Arya
}
var Hodor = ( TABLE[y][-( ROWS )] )
def destroy(x,x,Jon){
	dog /= -ROWS / ( Hodor * x + TABLE[-dog][-Hodor] );
	Arya /= 0.85;
	if(COLS){
	Jon /= -1;
	91;
	( ( -mislead() ) ) - mislead(( ROWS ),betray(x,rule(TABLE[destroy(COLS)][-( mislead(y,-ROWS - ( destroy() ) - -COLS) )]) + ( -0.73 )))
}
}
def destroy(Stark,y){
	Arya *= 0.7
}
def foo(Arya,Ygritte){

}
var Ygritte = ---94 / ( Ygritte ) + ( ( ROWS * rule(Stark,foo(( ( ( protect() ) + ( protect() ) ) * -( Jon ) )),-foo(1)) / betray(COLS,betray(destroy(49,-0.1),Stark)) ) )
assert -mislead() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar(-0.68,1 + destroy(( dog )) / -rule(-destroy(),COLS,Jon) + ( ( -bar(1,betray(-28)) ) - ( ( -18 ) ) * 0.86 ))][k] {
	( Jon / -( 0.57 ) )
}
def TABLE[( TABLE[( ----Stark )][-Hodor * -1] )][k] {
	if(Stark){
	if(mislead(Jon) - x){

};
	protect(-Arya)
} else {

};
	if(destroy(ROWS,Stark - Hodor * ROWS)){

}
}
def destroy(){
	COLS;
	betray(y);
	y /= --Hodor - Jon
}
def mislead(Jon,Sansa,x){
	if(1){
	Stark -= x;
	---( -COLS )
};
	( betray() )
}
assert -foo(Ygritte,destroy(ROWS,rule(destroy(60,-1,-Stark)))) : "Winter is coming"
def TABLE[foo(bar(destroy(rule(-Stark),betray(x)),rule(( dog + ( Hodor ) ),COLS)))][k] {
	-2;
	if(ROWS){
	dog += ( Hodor );
	-( -( TABLE[Hodor][-0.39] ) + foo(Hodor,-81,Hodor + Sansa) / ( 210.18 ) - foo(( bar(Arya,bar(0.03)) )) - ROWS * TABLE[( destroy(-46) )][x] )
};
	Hodor -= 0.09
}
def TABLE[1][i] {
	( COLS ) + ( -99 )
}
def protect(){

}
assert Stark : "Winter is coming"
var x = ( dog - ( bar(bar(( -( 0.83 ) ),( -( ( -Hodor ) ) ),ROWS - protect(foo(x * -betray(( ROWS )),( ( dog ) / bar(0.52,Hodor) )))) + ( ( ROWS ) / COLS ),ROWS) ) )
assert COLS : "Fear cuts deeper than swords."
var Arya = Arya
def rule(Stark,Sansa){
	-ROWS
}
def foo(Stark,Jon){
	if(COLS){
	if(( Sansa ) + dog){
	dog += ( protect(-destroy(12,-81) - ( Sansa ),COLS,rule(mislead(-( -( Sansa ) ) + -betray(-29,-COLS + destroy()),( bar(( -COLS ),COLS,-380.619) )),COLS) - Ygritte + ( mislead(TABLE[ROWS][--160.72 - -0.57]) )) )
} else {
	if(betray()){

} else {
	Ygritte * mislead(840.2,bar(620.338,COLS,COLS),( protect() * bar(rule(destroy())) ));
	-90.9
};
	mislead(( ROWS ),foo(TABLE[-( -( -TABLE[-dog / destroy(ROWS,TABLE[( ( COLS ) )][Arya])][mislead(TABLE[dog][( foo(Stark,-COLS,1) )],betray(-0.52,( dog ),-x),--x)] ) )][( ( ( TABLE[mislead(-0.83)][-Arya] ) ) )],ROWS,Jon));
	if(( 420.08 )){
	( 530.291 / --ROWS + 1 / dog );
	-0.52
} else {
	Stark += x
}
};
	Stark - -y + -TABLE[Arya * mislead() - ( Hodor )][( ( ( COLS - TABLE[( -COLS * mislead(TABLE[0.43][26] * -destroy(-0.18,( -1 )) + Jon,destroy(ROWS),foo(protect(),( Arya * -TABLE[Ygritte][protect(( ROWS ),--COLS)] ) * -rule(x))) - -Stark + -640.93 )][-----destroy(x)] ) ) )] - COLS
};
	Sansa;
	if(TABLE[( -ROWS + ( -destroy(destroy(bar(),Ygritte,-1),-dog * mislead(rule(COLS - COLS / -60) / ROWS,-COLS)) ) ) * mislead(( TABLE[-94 + -600.214][( rule(TABLE[-( -93 )][-93],TABLE[rule(y,770.26)][-( Jon )]) ) + --rule(TABLE[-( 0.88 ) - rule(-( mislead(100.414) ),foo(mislead(mislead(),COLS))) - ( ( -( destroy(Stark,COLS) ) / COLS ) )][x / ROWS],-85 - rule(-( destroy(( -0.01 )) )))] )) - -0.22][Ygritte]){

}
}
def protect(dog){
	destroy(-TABLE[ROWS][betray(-98,--330.769)],COLS,( ( -1 ) ));
	Hodor *= ( x / y + COLS );
	betray(( --1 ),-ROWS)
}
def TABLE[Arya][j] {
	if(-COLS){
	Ygritte -= 0.72 / 950.795
} else {

}
}
assert COLS : "Nothing burns like the cold."
def TABLE[( ( ( rule() ) + bar(betray(foo(Ygritte,y,( ROWS ))),-( foo(COLS) ) * COLS / ( COLS ),dog) ) )][j] {
	Jon *= COLS;
	-0.57 + protect(----Ygritte / -820.573,-910.7);
	if(-( -600.3 )){
	if(-foo(ROWS,1)){

};
	if(Jon){
	Stark *= dog;
	if(--TABLE[Sansa][x]){
	if(Arya + -mislead(foo(1,0.69)) - Ygritte){
	if(70.6){
	if(-TABLE[COLS][-0.94]){
	Stark += -betray(95,-COLS) * -Hodor
} else {
	if(1){
	if(bar()){

};
	x += -10
} else {
	if(TABLE[rule()][mislead(TABLE[Stark][64])]){
	Hodor -= --0.18 / rule();
	if(-mislead(Sansa,-60)){
	Ygritte /= 100
} else {
	if(x){

} else {
	if(y * -1 - COLS){
	if(-41){
	Arya += destroy(x,TABLE[320.8293][-Sansa * COLS] * y) / ( 0.57 );
	if(--0.5 + --0.78){
	Ygritte -= -TABLE[-1][bar(Ygritte,( foo(-bar(mislead(TABLE[-Sansa][ROWS],-ROWS))) + TABLE[COLS][( ( bar(-TABLE[-dog][TABLE[betray(0.27,52)][-88]]) ) / 11 )] ),COLS) / 1];
	if(-( Ygritte )){
	if(TABLE[betray()][rule(-1 - TABLE[COLS / x][-1],Stark)] / ( 14 ) - -( TABLE[Jon][( COLS )] )){
	y
} else {
	--720.4836;
	if(-( ( ( -5 ) ) )){

} else {
	-Hodor / foo(COLS)
}
}
}
}
} else {
	COLS / -( ( Hodor ) )
};
	y *= rule(Ygritte);
	y /= betray(y,Jon / ( 0.35 ))
} else {
	Sansa *= ( ( ( ( -( -destroy(COLS) ) + 41 ) ) ) );
	Ygritte *= Jon
}
};
	if(( foo(290.471) )){
	foo(( betray(9,---( protect() ),( x )) )) + ROWS
} else {
	Stark /= destroy(( betray(mislead(ROWS,foo(),x),mislead(--COLS),( -94 )) * TABLE[-37][-( protect(( mislead(( Jon ),x) )) / Hodor )] ),-( Jon ),Sansa) - ( dog );
	if(mislead()){

};
	0.3
}
}
} else {
	TABLE[-bar(( foo() ),( TABLE[betray()][-TABLE[-TABLE[( ---mislead(Sansa) - 80.7 )][( Arya )]][COLS]] )) + -( Arya ) - ( ROWS ) * rule(( Arya ))][COLS]
}
};
	if(protect(( COLS / -mislead() ),1)){
	dog /= destroy(Stark);
	( bar(1,-mislead(-( TABLE[COLS][TABLE[bar(protect(betray(0.15,-0.61,-( ROWS ) * ROWS - ( Stark / -0.28 ))),-1)][-Jon]] ) - ROWS) + Sansa) )
} else {
	if(--69 * TABLE[x][Ygritte]){
	if(51){

}
};
	-y;
	if(-( Jon / dog )){
	( 810.2 )
} else {
	-( COLS )
}
};
	mislead()
}
};
	( ( foo() ) )
} else {
	dog += TABLE[58][( ( ( Jon ) ) )];
	if(-betray(( ( x ) ))){
	Sansa += ROWS
} else {

}
}
} else {
	if(destroy(-( ( -1 - ( protect(-18) ) ) ) / -990.1279,( TABLE[y][-1] ),( 10.6654 ))){
	( COLS );
	COLS;
	( COLS )
} else {
	Arya *= foo(-600.909,( ( Ygritte ) ));
	Stark += dog
};
	Hodor += -Arya;
	Ygritte -= TABLE[destroy(-rule(0.91) + -Ygritte)][rule()]
}
}
} else {
	Hodor *= ---71 / ( -760.237 ) + protect(protect(),betray(bar(-88),-1,dog) / Ygritte);
	Stark *= x;
	if(( ( ROWS ) )){
	Stark;
	-1
}
}
}
var Hodor = -bar(foo(( Arya )),y)
def destroy(){
	if(( protect(-88 * foo(TABLE[-( COLS ) * -COLS - ( betray(-COLS / 0.34,( -Stark ),-( 0.36 )) )][-0.5] - COLS,bar(),-mislead(mislead(Hodor),-34)),Arya) )){
	COLS
};
	if(( -bar(destroy(bar(( bar(foo(mislead(destroy(),TABLE[0.53][-COLS] / COLS),( -Hodor )),--TABLE[TABLE[( -TABLE[-protect(protect())][-91] )][TABLE[-480.99 - x / ( Stark ) / -Hodor][protect(Hodor - 1,destroy() - -ROWS * x)]]][-dog + ( COLS )] + -62,COLS) ))),destroy(-bar(TABLE[x][0.25]),mislead(),y)) )){
	if(-dog){
	mislead(-0.71,bar()) * protect(260.564,betray(( 490.2 ),( rule(-protect(),-mislead(-ROWS)) - -0.22 )),COLS);
	COLS + COLS
};
	y *= TABLE[( 1 )][1 + 1]
}
}
def destroy(Jon){
	0.54 * 0.69 - -( --93 );
	destroy(rule(),Jon) - destroy(-70)
}
def TABLE[( Jon / ROWS / dog + rule(Arya,TABLE[dog][36]) / -480.6113 * destroy(( Jon )) / -0.19 - -0.95 )][i] {
	dog;
	if(COLS){

}
}
assert ( 690.7 ) : "Winter is coming"
def TABLE[-destroy() - COLS][i] {
	( protect(831) ) - ROWS
}
assert ( ( ( COLS ) ) ) - Arya / 0.87 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( Arya )][j] {
	if(Ygritte){
	dog -= -76;
	if(0.05){

};
	y *= ( 0.36 )
} else {
	if(TABLE[480.72][--Sansa]){
	if(Sansa){
	if(-( -( COLS ) / bar(-300.962,13) - -mislead(--85,-Stark) - ROWS / Sansa )){
	dog /= TABLE[dog][Stark]
}
} else {
	if(destroy(Stark)){

} else {
	dog /= ROWS;
	x *= protect(protect(ROWS,( -0.27 )),x) + COLS - destroy(-foo(37) + COLS,( Jon ) * COLS + 84)
}
}
}
}
}
def rule(Sansa){

}
def TABLE[-( -ROWS )][j] {
	TABLE[150.809][foo(( -mislead(-( --0.24 )) ),0.22)]
}
assert -0.08 : "Fear cuts deeper than swords."
assert -x / COLS : "One can not simply parse himself"
assert TABLE[-0.4][ROWS] + ( Stark ) : "Nothing burns like the cold."
var Sansa = ( ( Sansa ) + ROWS )
def TABLE[ROWS][k] {
	mislead() + y * foo(-1,-61) + ( 98 )
}
def mislead(Stark){
	if(( Stark )){
	( -protect(-0.13,( ( -1 ) )) )
}
}
var Hodor = ( ( -38 ) )
assert -0.21 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Stark,Jon){
	if(ROWS){
	Stark -= ( Arya - -Jon );
	Arya *= -ROWS / protect(0.88);
	COLS
};
	if(-0.82){
	if(Stark){

} else {
	Sansa /= mislead(betray(foo(-( -y ))),TABLE[destroy(-destroy(-Arya / --90 - ( ( --destroy() + betray() * -TABLE[( Sansa )][( y )] ) ),-1 * destroy(Hodor,( protect() ))),0.62,-0.22) * Stark][-36]) + Jon;
	if(destroy()){
	if(-1){
	Hodor + ( -400.4 ) + -0.33;
	Hodor *= -2
};
	y /= Ygritte
};
	if(-( --1 * 25 + ( Ygritte ) ) / y){
	if(dog){
	y += x
} else {
	if(ROWS){
	destroy();
	ROWS
};
	Ygritte /= mislead(ROWS,( ( -rule(Ygritte,-0.14,COLS) ) ))
};
	TABLE[y][-COLS]
}
}
} else {
	Hodor /= y / -betray() / 0.48;
	if(( ( foo(betray(foo(Sansa,-COLS + -18 - ( COLS ))),mislead(Jon,-92 / Sansa,foo(dog,3)) / ( -1 ) - TABLE[ROWS][dog]) ) )){
	Arya *= ROWS;
	destroy() - -0.84 + ( ( betray(-( foo(foo(ROWS,-Stark)) ),destroy(mislead()),--62 / ( Stark )) ) ) / TABLE[ROWS / --530.267][Sansa] / COLS;
	if(--protect() / destroy(1 / 0.92,-dog - -mislead(bar(TABLE[-0.53 * -betray(-6,destroy(betray(mislead() * Sansa),-0.58 * 970.383)) * -71][ROWS]),bar(-Jon),Stark)) - 53){
	if(-rule(destroy(( ( bar(( mislead() ),rule(),91) ) ),dog / mislead(-0.58,-( ROWS * mislead(( TABLE[----( bar(-45,-0.71,-1 / -Arya * y - ( ---COLS + -78 / 45 / 1 )) )][60.4745] ),y) )) + ( -Jon )) * ( y ))){
	if(( -0.99 )){
	destroy(0.53,COLS)
}
} else {
	Arya += ( TABLE[COLS][-Stark] )
};
	if(( COLS ) - 0.19){
	if(-0.39){
	Arya *= Arya;
	if(0.78){

} else {
	Arya += x;
	y *= Jon
};
	if(TABLE[0.4][Jon]){
	Arya *= ( 870.0088 );
	if(ROWS){
	Jon /= ( ( ( Ygritte ) ) )
}
}
};
	if(Arya){
	if(( ( -betray(mislead(),bar()) * 0.92 ) )){
	rule(( -1 ) * -0.5,TABLE[-protect(-COLS,Ygritte)][( mislead(betray(Ygritte,-y * -5),bar(Ygritte,COLS - ( rule(--7,( TABLE[dog][bar()] ),-Ygritte) / y ) / TABLE[rule(bar(( ( mislead(( TABLE[dog][-0.33] ),-TABLE[-Arya][y * betray(-0.46,Stark,-1)],TABLE[dog][-( ( rule(Ygritte / Sansa,-0.79 * -foo(( TABLE[-mislead() / betray(TABLE[Hodor][( ( rule(0.7,( Jon ),-( foo(0.04,-0.93) * ( COLS ) )) ) ) * -2],Jon,foo(( rule(-COLS * Arya) ),-( -TABLE[( ( ( Sansa ) ) )][Arya] ) / -( -Stark ) / x + COLS)) * 16][Stark] ),70)) ) * -0.02 * foo(TABLE[( y )][Jon],( bar(-920.901) * foo(0.55 * -TABLE[( foo() )][rule(Hodor,destroy(dog,foo(ROWS,bar(1,-1) * ( mislead(( mislead(TABLE[COLS / TABLE[( destroy() ) / Ygritte][COLS] * ROWS][Arya],0.43) ),TABLE[Arya][-x],COLS) ),TABLE[Stark][ROWS]),-71),ROWS)] + ( bar(-76,( -( mislead(mislead(Stark,Hodor),( rule(1) ),( Hodor ) + ( foo(Sansa + 260.683,bar(-foo(1,-Arya,1))) * ( -0.88 + ( -foo(bar(84,( bar(bar(-Arya,( Jon ))) ))) ) ) )) ) ),COLS) )) ) - ( --( COLS ) )) )]) ) * --82 ),( ( Stark ) )) - -destroy(),betray(-( ( COLS ) )),-Stark * -TABLE[bar(bar(( mislead(COLS) )),( TABLE[Jon][Arya] ))][COLS] - 1 * ( Stark ) + Stark)][COLS],protect(COLS + COLS))) - ( ( COLS * bar(TABLE[( x )][TABLE[dog][TABLE[--2][( -( foo() ) * Jon )]]] + bar(ROWS),-TABLE[rule(( COLS ),---1 - mislead(( rule(destroy(TABLE[-( ( bar(bar()) ) )][( TABLE[( ROWS )][( ( -dog - 540.9719 ) )] )] / 0.14),-bar(( -( y ) ),destroy(y,rule(( -TABLE[-protect(59,1)][Hodor] ),TABLE[betray(TABLE[( betray(COLS,ROWS) / ROWS )][( 1 )],Stark) / ( y )][Hodor]),-mislead(( -0.93 ))) + -( ROWS ))) )))][Hodor / Hodor] / dog * dog * 34) ) ) )])
};
	-0.83
} else {
	Stark /= Hodor;
	-( bar(--mislead(-y,( protect(betray()) ),80)) )
}
} else {

};
	Hodor /= ( ( dog ) )
} else {

}
} else {
	dog -= Hodor / -COLS;
	foo(mislead(Arya + x,destroy()),y,dog);
	y /= COLS
}
};
	if(ROWS){

} else {
	Hodor += ( ( -380.592 + ROWS * -y + ( -COLS - ( x ) / ( -15 ) ) ) );
	y *= 170.737;
	( COLS )
}
}
assert -( COLS ) : "Fear cuts deeper than swords."
def TABLE[99][j] {
	Ygritte -= COLS * ( Jon )
}
var Arya = -9 - -rule(COLS) + -bar()
var Ygritte = TABLE[TABLE[--0.88 - mislead(-24,protect(( ROWS ) + -destroy(destroy())))][-destroy(betray(COLS,0.81,dog),Arya)]][Arya]
var Sansa = --mislead() / foo(x,( Stark ))
def bar(Ygritte,Stark,Arya){
	if(mislead(TABLE[foo(---0.06,-860.19) - COLS - -ROWS][( foo(y) ) - bar(0.6,-0.53,1)],betray(Stark,dog))){
	if(ROWS){
	TABLE[--( -0.79 - 85 ) * ( ROWS ) / ROWS][1];
	110.3
} else {
	Ygritte -= -650.265 / -33 + -rule(betray(2),-0.63,x);
	dog += Hodor
};
	x
}
}
def mislead(x){
	( dog );
	dog /= ROWS;
	( TABLE[ROWS][-1] * TABLE[protect(( COLS ) - ROWS) * Arya][foo(-dog) / Ygritte] )
}
var y = dog + ( --betray(TABLE[Arya][-protect()]) + -910.0967 )
var dog = ---45
def TABLE[1][i] {
	Stark
}
assert Arya : "Winter is coming"
def foo(y){
	Arya
}
assert -0.3 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){
	dog;
	dog += ( TABLE[-( protect(COLS) * -Arya * -TABLE[( Jon )][Jon / ( ( -520.91 ) )] ) + -Sansa * mislead(( -13 ),bar(-( bar() ) * foo(( Ygritte ),Jon) / -0.36))][bar(foo())] ) * ROWS - Ygritte
}
def TABLE[( ROWS )][k] {
	if(destroy(TABLE[-( ( -710.8484 ) )][0.49],Jon,x / dog)){
	if(-bar(Sansa,y)){
	590.1907;
	mislead(Jon)
}
};
	( -1 + -60 - Hodor / ( ---1 ) + Jon )
}
assert Ygritte : "One can not simply parse himself"
assert -0.01 - -betray(-1) / mislead(-74 + 27,Hodor,-foo()) : "One can not simply parse himself"
def rule(){
	if(-COLS){
	COLS
};
	if(-betray(COLS,COLS)){

} else {
	x -= ROWS;
	Arya += COLS
};
	if(ROWS){
	-77
} else {
	if(Sansa){
	if(( -( ROWS ) )){
	Stark *= mislead(-1,-1 - COLS) - Jon
} else {
	rule();
	Stark += --0.95
}
} else {
	90 + ROWS - rule(ROWS - -31,0.07);
	if(-1){
	betray(Sansa,---0.58)
} else {
	if(( protect(16,mislead(betray(Jon),destroy(-0.56,y) + mislead(Hodor,betray(bar(1,( -66 ),dog),-1),mislead(rule(( Jon ),ROWS,destroy(foo(COLS))),foo(protect(destroy(ROWS,ROWS)) + -63 - dog)))),Arya) )){
	if(betray(-Ygritte,dog)){

} else {
	x -= --0.2;
	-( bar(betray(Stark),betray(( 1 ),Sansa),16) )
};
	if(Hodor){
	Sansa *= protect(betray(COLS,Stark,( ( -bar(-( ROWS ) + -900.4675) * foo(( foo(Stark,mislead(TABLE[dog][-0.09],( --57 * -0.32 / bar() * -0.24 * COLS ) + ( ROWS ),-29)) + COLS + -( Arya ) ),Sansa,-TABLE[foo()][bar()]) * protect(ROWS) ) )));
	Stark /= ROWS
};
	Ygritte += y
};
	if(COLS){
	if(Hodor){
	if(mislead(bar(foo(betray(foo(92,TABLE[-690.22 * ROWS][-51 / -0.95 / ( -betray(foo(-rule(48)),protect()) )],Arya),-0.18),-bar())),0.5)){
	Jon -= ( ( ( ( 1 ) / Arya ) ) )
};
	if(COLS){
	if(bar()){

};
	if(betray()){
	rule();
	Hodor *= Ygritte
} else {
	dog -= bar(( ROWS ));
	protect(protect(-1),( TABLE[( ( TABLE[( 45 )][-0.63] * destroy(protect(),Jon) ) + Arya )][TABLE[destroy(Ygritte,( ( -0 ) ),Ygritte * ( Arya / -93 ) * TABLE[-( ( -( x ) ) )][( 130.508 )] * -360.07)][TABLE[0.3 * -62][foo(Sansa)]] / Ygritte] ) + mislead(--COLS,-mislead(---51,-1,-0.95) * COLS - ROWS))
}
} else {
	y *= ( ( destroy(foo(( TABLE[-23][foo(COLS - -Ygritte,Hodor)] ))) ) );
	dog /= destroy(-bar(),--ROWS / TABLE[Sansa][-0.3 + 1] / --bar(-44) * rule(( 18 )))
}
} else {
	Arya += ( -ROWS / TABLE[COLS][rule(( 79 ) + ( ROWS ) * ( ( mislead() ) ) + ( -destroy(TABLE[-0.8][-COLS + Ygritte],betray(-destroy(-2) + ROWS,--TABLE[( -890.2 )][Stark] / 0.36),-Sansa) ))] );
	if(betray()){

} else {

}
}
}
}
};
	Jon -= Sansa
}
}
assert 910.173 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( bar(COLS,-y) )][i] {
	COLS;
	dog;
	if(( -1 )){

}
}
var Ygritte = ( COLS )
def TABLE[-protect(( ( -18 ) ),Jon + protect(y - COLS,TABLE[rule(( foo() ),95) * x * ( -40 ) * 0.51][-ROWS],-COLS),TABLE[-70][( ( --0.4 ) + bar(TABLE[( dog )][-Ygritte]) )]) * destroy(0.64)][i] {
	( y / -1 * foo(( 0.37 ),Hodor) / x );
	Jon *= ( ( Jon ) )
}
assert y : "Fear cuts deeper than swords."
def TABLE[-destroy(bar(COLS * ( destroy(-0.69,0.25) ) / ( ( ( rule(COLS) ) ) )),dog)][k] {
	Jon *= TABLE[( -protect() )][( 350.3 ) + ( TABLE[-( ( ( mislead(-( ( ROWS ) ),Stark) ) ) ) / -x * --88 - -rule(( 0.54 ),-rule(COLS)) - mislead()][--80 * -790.448] )];
	if(betray(0.87 - mislead(COLS + -COLS,1,( -79 )),Arya)){
	if(-0.2 + ROWS){
	-betray(-81 / ( -0.68 ) / -TABLE[( bar(-1) )][Jon / -ROWS * y + -18 / -COLS]) / COLS
};
	if(1){

}
}
}
assert ( COLS ) : "One can not simply parse himself"
var Hodor = -4
def TABLE[Arya][k] {
	if(-0.36){

};
	if(-120.33){

};
	-Sansa
}
def mislead(Stark,Ygritte){
	dog += -Sansa
}
var Ygritte = 890.1959
var Stark = protect(( -betray(x,Sansa / dog,x) ),( ( -( ( x ) ) / ROWS - -0.76 ) ))
def protect(Ygritte,y){
	( ( ( dog ) ) );
	ROWS
}
def destroy(){

}
assert COLS : "Nothing burns like the cold."
def TABLE[dog][j] {
	( ( Hodor ) );
	( --Jon )
}
var x = ( foo(--50,-( ROWS )) )
assert ( ( ( ( ROWS ) ) ) ) - COLS : "Fear cuts deeper than swords."
def TABLE[protect(0.22)][i] {
	rule(96 / 23,TABLE[-( -91 / protect(( Arya ),x,TABLE[-0.55][( Jon + Sansa )]) ) - y][bar(( ROWS ),--mislead(( 88 ),-foo(700.74,TABLE[COLS][ROWS],x)) * -74 - COLS) / x] / 1,betray(betray() * ( Sansa ),Jon,betray(dog)) / rule(foo() * Hodor,( ( foo(-79) ) )))
}
var y = -COLS / ( mislead(25,bar(( 0.67 ),ROWS,TABLE[dog][28] + Hodor)) + -mislead(( y / TABLE[( TABLE[-Sansa + 78][-1] ) / Hodor][betray(TABLE[Hodor][( COLS * protect(-TABLE[12][dog],-74 + 15 - ( 0 )) - Jon )],-33)] )) ) * protect(( ( 35 ) ),67)
var Ygritte = -0.78
def rule(Jon,Ygritte){
	if(y){
	( -1 )
} else {
	-58;
	Stark
};
	ROWS * ROWS;
	if(TABLE[( -( --1 ) + --0.61 ) * ( dog )][betray(-y)] * Sansa){
	Jon -= Hodor;
	-Sansa
} else {
	if(-Sansa){
	if(ROWS){
	dog += COLS;
	Hodor -= -( --COLS ) * x / betray(-bar() + -74) - --( Jon )
};
	if(( bar(-( -Sansa )) )){
	foo(ROWS,( bar() ));
	COLS / TABLE[betray()][-ROWS];
	Ygritte -= COLS
} else {
	dog /= -( ( ( protect(bar(TABLE[-( ( -( Stark ) ) )][83],----680.2314 - destroy() / -( ( -destroy(ROWS) ) ) * -betray(( -( -( rule(-23,Ygritte) ) ) * ( 5 ) * ROWS ),COLS + ( ROWS )) + COLS * -31,630.8),COLS,y) * Stark ) ) )
};
	x += 670.61
} else {
	dog /= Jon;
	Hodor /= --mislead(( TABLE[Jon / y][10] ),protect());
	Arya *= foo(betray(-150.6))
};
	if(y){
	if(12){
	Stark += Hodor
} else {
	mislead(ROWS,-55);
	Stark /= ( -0.46 )
};
	-1;
	ROWS
}
}
}
def rule(Stark,Sansa){
	if(-( -1000.26 )){
	if(Sansa){
	Hodor;
	78
} else {
	Hodor /= ( 40 )
};
	-betray(-betray(ROWS),Hodor + 19)
} else {

};
	0.96
}
assert ( ( 0.82 ) ) : "What do we say to the Lord of Death?"
assert y : "Fear cuts deeper than swords."
var Jon = Jon
def TABLE[Arya][k] {
	ROWS;
	if(x){

};
	COLS
}
var x = -mislead(Stark)
var y = foo(rule(Ygritte,( protect(( -Stark ) - ( ( -0.59 + dog * -protect() ) ) - foo(foo(0.29,-0.78),0.47 * Ygritte)) ),( Hodor / -22 * Stark )),protect(-Sansa / -150.42,foo(( Jon ),-410.972,11)))
var y = Sansa
var Jon = bar(( x ),-0.07) - -0.09 / dog
var Sansa = --Hodor
var Jon = -betray()
var Sansa = -0.29
def TABLE[0.24][k] {
	if(0.17){
	1;
	rule(-1);
	dog *= Arya
} else {
	x *= foo(bar(),COLS * betray() / ( ( -( ( ROWS ) ) ) ));
	if(33){
	Arya -= Sansa
} else {
	if(-Stark){
	x += 0.38
} else {
	if(Hodor){
	Ygritte -= 86;
	dog -= Ygritte - 1
}
}
}
}
}
var Jon = Hodor
var y = bar() / ( mislead() )
assert -( ( protect() ) - ---0.16 - ( 13 ) ) : "Winter is coming"
assert 0.08 : "Fear cuts deeper than swords."
var Stark = Hodor
def TABLE[bar(( 87 * ( protect(ROWS) ) ))][i] {
	--Ygritte
}
def rule(y,y,Arya){
	if(( TABLE[ROWS][-ROWS] )){
	if(TABLE[420.51][COLS]){
	( -( -67 ) );
	x *= -foo(rule(bar(( bar() ),-foo(ROWS,( x ) - -0.45 * bar(( -37 - foo(Ygritte / Hodor) )) - x / -( TABLE[Sansa + ( ( TABLE[foo(-230.8647,-bar(Arya) / ( -COLS ) / y,-rule(( bar(COLS) )))][-destroy(ROWS) / Ygritte] ) ) * TABLE[protect(Jon,Arya + Ygritte * 1) / TABLE[y][Ygritte]][ROWS] / 450.62 * protect(TABLE[COLS][x])][-58] ),-660.1))),Ygritte,0.52)
} else {
	x /= TABLE[( -Jon * rule(ROWS,betray(-0.16)) )][-protect(-rule(-980.862,870.005,COLS),1)]
}
} else {
	if(-700.22){
	bar(-1,( betray(Sansa,ROWS) )) / rule(mislead(ROWS,( ROWS * -dog )),61);
	-45
};
	( rule(TABLE[-93][COLS],foo(-1 * --Arya * -TABLE[rule()][rule(-dog,betray(Stark,Jon,-0.85))],Arya),-( Jon )) )
};
	( ( mislead() ) ) * -490.011;
	-0.83 * TABLE[-ROWS][-mislead(foo(COLS))]
}
def TABLE[Hodor][j] {
	Jon /= -0.83;
	Sansa -= Jon;
	Ygritte /= betray()
}
def rule(Ygritte,Hodor,Hodor){

}
def betray(Stark,Ygritte){
	if(980.31){
	if(destroy()){

} else {
	82;
	dog += ( 0.71 )
}
};
	Ygritte -= Jon / -rule(0.35,bar(-Stark - 0.25)) * -56;
	--0.41
}
def TABLE[TABLE[--dog + destroy(-mislead(Jon,( --0.17 * COLS )),foo())][mislead(-79 - Jon,-0)]][j] {
	Jon /= -1;
	Ygritte -= TABLE[-COLS][( ( TABLE[protect(rule(-COLS,--ROWS,COLS)) - bar()][-COLS] ) )];
	if(betray(( rule(rule(-ROWS + Hodor,17,( 760.69 )),mislead(1 / y + COLS - 37 - protect(ROWS),y)) ),Arya)){
	ROWS;
	y;
	if(-( Arya )){
	COLS;
	if(13){
	if(( 99 )){
	if(Jon){
	bar(protect(TABLE[betray(( ( COLS ) ))][-0.25],foo(),COLS / -COLS));
	ROWS - y * destroy(TABLE[TABLE[protect(( ( Arya ) - ( -1 ) ),Hodor,TABLE[-TABLE[38][( dog )]][TABLE[TABLE[-Sansa][( COLS - ( COLS / ROWS ) )]][dog] / ROWS])][destroy()]][0.96],-0.99 * -0.64)
}
};
	if(mislead(COLS,ROWS,0.41 + Arya)){
	if(COLS){

} else {
	Arya -= -( ( Arya * COLS ) )
}
}
}
} else {
	if(0.58){
	if(( TABLE[protect(( 730.5 ),ROWS)][betray(-800.2,-74 - -( ( Jon + -COLS ) ) + --80) - 0.04] )){
	if(-0.08){
	rule(( --( ( 10 ) ) ) * ( dog ),Jon,COLS)
} else {
	if(( -ROWS )){
	y -= COLS
}
};
	-Ygritte
}
} else {
	if(x){
	if(( ( ROWS ) / 0.94 )){
	Ygritte *= betray(COLS,--bar(( ROWS ),protect(( destroy(foo(dog,55),0.29,foo(-0.74,mislead(mislead(-700.939,5),( Ygritte )))) ) + -ROWS,bar(),( TABLE[-74][-COLS] )) - betray(mislead(740.32 * foo(ROWS,mislead()),mislead(-ROWS + --TABLE[rule(Hodor,-COLS)][x]),Hodor) * TABLE[--44][-40] / TABLE[Stark][x],69 * -1)) * Arya * ----0.06 + Hodor * -62);
	if(( dog ) / Ygritte){
	if(0.1 + ROWS / ( bar(TABLE[-1][-0.43],Stark) )){
	if(-0.1){
	if(-0.18){

}
} else {
	-TABLE[TABLE[( ( 0.92 ) )][( -390.3463 )]][COLS] / ( ( -51 - 44 ) )
}
};
	ROWS;
	if(-Jon){
	y *= Ygritte
}
}
} else {
	Arya /= ( Hodor );
	x
}
} else {
	Sansa /= Arya
}
};
	dog += ( ( -destroy(TABLE[1][-0.64],ROWS) ) ) / Sansa
}
}
}
var Jon = --1
var dog = -TABLE[bar(bar(foo(dog / bar(62,-0.47))))][protect(95,--48 / 490.32)]
var Hodor = x
def betray(Hodor){
	if(dog){
	1
} else {
	if(destroy(Hodor,y - Ygritte)){
	if(( -1 )){

} else {
	if(bar(TABLE[0.34][( ---1 )],ROWS)){
	if(( -1 ) + TABLE[-( ROWS ) / TABLE[Arya][( ( Ygritte ) )]][ROWS]){
	Sansa += ( -0.28 )
};
	Hodor /= ( Arya )
};
	COLS
};
	if(( 1 )){
	Hodor /= protect(Jon)
} else {

}
} else {
	x *= foo(TABLE[Ygritte][( bar(TABLE[-destroy(Ygritte,( TABLE[mislead(y,--0.41) / ROWS][TABLE[( COLS ) + -0.73][dog]] + ( destroy() ) ) - -0.96 * Arya)][Hodor]) / destroy(-20 / -0.33) ) - ( Hodor )])
}
}
}
def foo(y,Stark){
	y -= TABLE[81][-protect(ROWS,( -46 - ( TABLE[-95][-y - x / -47] ) ))]
}
assert --destroy() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = Ygritte
def TABLE[( dog )][i] {
	if(COLS){
	Hodor /= -1;
	if(-( destroy(-mislead(33) + --520.8568 * -foo(Stark) - ( TABLE[-COLS][-28] ) - Stark - -51 / foo(-1,----bar(),dog) - -destroy() - TABLE[( Hodor - ( ( ( Ygritte ) ) ) )][protect(-0.3 - ( --x - ROWS / ROWS + 1 - TABLE[1][--Sansa - ( -0.65 - -Sansa / ( COLS ) * protect(ROWS,-0.89 - ( TABLE[--( -680.52 )][COLS] ) + ( Stark + -( rule() ) )) * -590.814 * -( dog ) )] ),-COLS,0.13)],dog) )){
	Sansa *= -y;
	if(y){
	dog /= Jon;
	Jon /= ROWS
}
}
};
	TABLE[-42][---76]
}
def TABLE[-mislead(-300.1107 + -TABLE[--foo(Stark,-30 / -Jon)][-foo(( ( dog ) ),-780.817 - ( ROWS - -860.81 ),( protect(bar(( betray(-21) ) / ( Ygritte ),COLS),destroy(-ROWS,-20)) )) * 3] / x)][k] {
	if(mislead()){
	if(--1){
	y /= dog;
	if(COLS / Sansa - ROWS){
	1;
	mislead(betray(-0.33),-0.86 * Ygritte)
}
};
	-Sansa
} else {
	if(x){
	-ROWS;
	y *= x;
	TABLE[-TABLE[98 - protect(--( 1 ))][( Ygritte )]][mislead(( -( COLS ) ),Jon)] * ( ( 890.943 ) )
} else {
	x *= --destroy(-COLS,( x / betray(17) ))
}
}
}
var dog = ROWS
assert --rule() / TABLE[( 870.307 ) + y][rule()] : "One can not simply parse himself"
def TABLE[Arya][k] {
	if(TABLE[mislead(-96,bar() / ( -rule(( ROWS ) - bar(Hodor,0.4),y,x) + Ygritte ))][x + Hodor + 820.83 + x / betray(-destroy(Sansa,( COLS ),betray(-ROWS / 56)) + -( -COLS ),y,dog - COLS) - COLS]){
	Hodor += ( COLS )
} else {
	Ygritte += ( ---44 );
	if(x){

}
}
}
var Sansa = 0.61
assert protect() : "One can not simply parse himself"
def mislead(x){
	Arya -= destroy(bar(-( betray() ),TABLE[mislead(-bar(),-36,-dog)][rule(0.01,( ( -( COLS * ---0.39 ) ) ) * rule(0.3))]),betray());
	dog += -ROWS
}
assert -0.71 : "Fear cuts deeper than swords."
def foo(y,Arya,y){
	-( TABLE[( -( COLS ) )][destroy()] );
	x *= ROWS;
	( Arya - -protect() )
}
var x = --920.5
def TABLE[x][i] {

}
def TABLE[( ( Ygritte ) )][i] {

}
def TABLE[rule(( -1 ),770.299)][k] {
	TABLE[( ( protect(24) ) )][destroy(Arya - TABLE[ROWS][TABLE[y][dog]],( TABLE[-89][-260.7] ),-93)] * COLS
}
var Jon = ( COLS )
assert --( COLS ) : "What do we say to the Lord of Death?"
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-y][k] {

}
def foo(Jon,Ygritte){
	-10 + Arya + destroy(-61) + y;
	Hodor /= betray(COLS,-COLS);
	if(( Arya ) - bar(x)){

} else {
	Sansa *= --COLS;
	bar(bar(-Stark,-mislead(bar())))
}
}
assert x : "One can not simply parse himself"
def betray(Hodor){
	foo()
}
assert -COLS : "One can not simply parse himself"
def destroy(Sansa,Jon){
	if(betray(ROWS) / TABLE[-20.85][-COLS] * ( TABLE[mislead()][-ROWS] )){
	Hodor /= COLS
};
	Sansa -= Arya - -26
}
var dog = -TABLE[ROWS][destroy(-y + Jon,( protect(Sansa) ) - -TABLE[Arya][COLS],x)] + -57
def mislead(Stark,Sansa){
	dog *= betray(ROWS,destroy(Ygritte,TABLE[( bar(-0.91,TABLE[0.09][Stark],-1) )][COLS - protect(( x )) / ( x )]));
	( -Hodor * Hodor * ROWS );
	-Ygritte / Sansa
}
assert betray(mislead(( destroy(-ROWS) ),--0.9),830.13) : "What do we say to the Lord of Death?"
def TABLE[-83][k] {
	( -1 )
}
assert ---betray(Arya,-0.68) : "What do we say to the Lord of Death?"
assert -0.08 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = ( -( Jon ) * 58 )
def TABLE[rule(Ygritte,--x)][i] {

}
def TABLE[COLS - -0.34][k] {
	x += Jon
}
def TABLE[-1][j] {
	( rule(COLS,100.4976) );
	Ygritte - Stark * ( COLS / 37 )
}
var Stark = y + Sansa
def TABLE[rule(( TABLE[bar(destroy(TABLE[( COLS )][foo(Ygritte,( dog ),21)]))][COLS] ))][j] {
	dog *= 350.359
}
def TABLE[( ( destroy(Hodor,-1) ) - COLS )][k] {
	-3;
	y -= Stark;
	0.44
}
var Stark = -0.76 / betray()
def TABLE[-0.39][j] {
	Jon;
	-1 - ( betray(( ( --1 ) ),( x ) - destroy(( 56 ))) ) + -dog;
	Arya *= ( -79 )
}
assert COLS + ( Jon ) : "One can not simply parse himself"
var y = ( TABLE[---1 / destroy() + rule() * Ygritte][Stark / 1] ) / -bar(ROWS / Ygritte,-92,( ROWS / ( 640.29 ) )) - -x
def TABLE[-Sansa + -TABLE[( -50 )][dog]][j] {
	x += ROWS;
	-( COLS ) / protect(y,protect())
}
def betray(Sansa,x,Arya){
	if(destroy(TABLE[-Sansa][1],0.67)){
	Stark;
	1
} else {
	Jon /= ( ( ( -610.72 ) / ( ( ( -destroy(destroy(--0.19) * ( ( Stark ) )) / Arya ) ) ) - -mislead(( 31 )) ) )
}
}
def TABLE[-COLS * Arya][k] {
	if(--ROWS){
	if(( rule(92,mislead(--TABLE[Arya][( TABLE[84][protect(Sansa)] + -protect(640.434,0.69) + 0.26 / 0.22 + -0.79 * ( ( -2 ) ) * ROWS - -160.101 )])) ) / ( ( y * TABLE[-COLS + --( -0.19 ) / 0.45][( TABLE[bar(destroy(bar(protect(protect(( x ),y),ROWS,Jon * ROWS) * Jon / -ROWS - 0.86 - ( foo(foo(COLS)) )),y))][COLS] )] ) )){
	-( -0.64 );
	( Ygritte );
	160.069
};
	TABLE[170.3501][Jon - --240.5]
};
	ROWS / -0.68 / Jon;
	if(foo()){
	-destroy(Stark,destroy(TABLE[( ( bar() ) * Arya )][-( COLS )],Hodor,Arya),Hodor) - ROWS;
	x -= ROWS
} else {
	Sansa -= ( ( rule(-( ROWS ),x) ) );
	dog *= rule(-430.2077,mislead(COLS) / -0.3,rule(-73)) * -COLS
}
}
def TABLE[y][k] {
	-180.4135;
	Ygritte += -( COLS - mislead(0.27 / -94) )
}
assert 57 : "Winter is coming"
assert COLS : "Fear cuts deeper than swords."
def rule(){
	if(( ROWS ) + ( ( -COLS ) + -( rule(( ( Hodor ) ),-TABLE[-TABLE[( ROWS ) * Jon][Stark]][x]) ) / ROWS + dog )){
	if(Ygritte){
	Ygritte /= y;
	-foo()
} else {

};
	Jon -= -foo() + 860.7525 * foo() / -1
} else {
	-x - -( -1 );
	ROWS;
	Stark
};
	-0.93;
	-1
}
assert ( y ) : "Fear cuts deeper than swords."
var y = -( -destroy(foo(Stark,y)) )
def destroy(y){
	if(( Arya / foo(COLS,---foo(( Ygritte ),-TABLE[protect(protect(Stark,Jon),-ROWS - -x)][-( COLS )] / mislead(ROWS,x),-foo(-betray(( dog ))))) / foo(Sansa,x) )){
	if(-30.44 - Sansa - -0.26){
	Sansa /= ----1;
	if(-1){
	95;
	if(TABLE[0.93][( 1 )]){

};
	dog
}
} else {
	--( COLS )
};
	( ROWS )
}
}
def TABLE[---73 + ROWS][i] {
	if(-97){
	if(rule(( destroy(destroy()) ),( TABLE[TABLE[( ROWS ) + ----Hodor][--610.758 * Stark]][destroy(bar(bar(TABLE[-16][Sansa],destroy(Ygritte,rule(bar(--( destroy(1,Sansa,( rule(-Arya,-ROWS + -16) )) ),ROWS,rule(betray(Hodor + COLS / bar(-33)),--520.64,530.2679)),-mislead(COLS,Hodor,Arya),-0.73),--70 - Hodor)),( ( mislead() ) ) / -( ( TABLE[1][--100] ) ) + COLS + TABLE[protect(Arya,TABLE[--( bar(Jon / 0.69 - ( -0.48 / ( -0.39 ) ) / 0.22) )][mislead(-0.99)])][Stark + COLS / ( rule() ) * COLS] * ( rule(TABLE[Jon][rule()],0.97) / betray(protect(Arya,--bar(ROWS,( ( 0.55 ) )) - ROWS,Arya),ROWS - Sansa / COLS) )),66)] ),( ROWS ))){
	x -= TABLE[y][-COLS - dog];
	Hodor *= -TABLE[mislead(-720.35,foo(( ( ( ( 110.455 ) / --160.36 - -foo(ROWS) ) + -0.9 ) ),--90,COLS))][dog]
} else {

}
} else {
	( foo(COLS,-1) ) * --COLS;
	dog -= -COLS
};
	if(betray(Hodor)){
	if(protect() / -Stark - TABLE[foo(( -53 ))][bar(-1)] + COLS * -0.93 * -ROWS - COLS - 0.13 + -1 - Stark){
	Hodor *= y;
	Jon += --COLS / betray(270.205,COLS)
}
} else {
	TABLE[Ygritte][( mislead(betray(protect(-COLS,-TABLE[TABLE[Hodor][-( -730.66 )]][y]),92 / protect(Ygritte,Jon),-mislead(( bar(-dog,bar(-740.13),COLS) ) * 32)),bar(Sansa,destroy(( --0.73 / ( -80 ) - dog ) - -rule(-Ygritte - 0.66,( ROWS + TABLE[-0.2][x] )) + ( Hodor ) + ( -dog ),-betray(x,-1,( ( bar(Ygritte - -1 * TABLE[dog][ROWS] - Sansa * 0.32) ) )),-20.5986),dog) - TABLE[COLS][0.63 * ROWS]) )]
};
	-protect(ROWS,rule(-betray(),COLS)) * -1
}
assert TABLE[-foo(COLS,-71 / -x + ( ROWS ) - ( -Jon ) + 79 + bar(--0.52 * y - ( bar(-ROWS * -1 - ROWS - ( ( COLS ) )) ),Ygritte / y,betray(96)) - COLS)][-32] : "One can not simply parse himself"
def TABLE[TABLE[rule(-TABLE[Hodor][87],dog) - mislead(y,-Stark)][TABLE[-destroy(betray(),-y)][Stark]]][k] {
	if(( 3 )){
	1
} else {
	x -= 0.49;
	y *= Arya
};
	( rule(rule(ROWS),TABLE[-0.55 * ( destroy(foo(-12)) ) * ( TABLE[rule(( --( destroy(COLS - protect(COLS),--betray(70,--rule(Jon,dog,( foo(COLS) + Jon )) - ( rule(-0.96) ))) ) + ( protect(ROWS) ) ),-x)][TABLE[( -ROWS )][ROWS]] - x )][betray()],( ( rule(--0.83) ) )) )
}
def TABLE[1][k] {
	y += -( bar(dog) ) / COLS
}
assert COLS : "Nothing burns like the cold."
def TABLE[foo(( bar() ))][j] {

}
def protect(Ygritte,x){
	-TABLE[ROWS][410.66]
}
def bar(){
	if(foo(79,COLS,-0.52) + -Ygritte){
	Sansa -= Ygritte
};
	protect();
	y /= Stark
}
assert -dog : "Winter is coming"
def TABLE[ROWS][j] {
	x *= destroy(bar(destroy(-0.24,-bar(COLS,-( -Arya - -Stark / ( protect(--0.52,bar(-1,22,rule(( dog ) + ROWS,x))) ) )),TABLE[Sansa][destroy(0.68,( ( -( COLS ) ) + ( ROWS ) ),ROWS - ( ( ( -ROWS * -( Ygritte ) ) ) )) * -180.1 * --( ( -TABLE[-( 1 - TABLE[TABLE[y][-58 / Hodor]][destroy(99)] / ( foo(TABLE[Sansa][ROWS - -40 + -0.05],0.52) / -( bar(x,-28,ROWS) * ROWS ) ) )][Stark] - ( ( --49 * bar(( -940.2 )) + dog ) ) ) )] / destroy()),foo(--0.91)))
}
assert --0.27 - mislead(x,foo(-170.315 / rule(-1),-960.08) / Hodor,Ygritte) : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	if(-85){
	if(-bar(protect(( ( destroy() ) ),x,destroy(TABLE[foo(Hodor)][COLS] / -80.694,1))) - -TABLE[dog][rule()] / protect(-x,( Jon ) / bar(-970.4)) * dog){

}
} else {
	bar(bar(COLS) * ( ( ROWS ) ) - bar(-COLS,bar(foo(( destroy(---foo(--TABLE[y + ROWS][COLS]) / 120.17) ) / -protect(-Sansa,Jon) + rule(x,Hodor,rule(25,93,Stark)) * Ygritte,( ( -COLS ) / 1 )),protect(0.68)),( Jon )) + x - bar(COLS)) + -Ygritte;
	Jon += Hodor
};
	Arya *= Stark
}
var x = Sansa
var Jon = ( rule(0.27) )
assert COLS + ( Arya * betray(Arya) ) + -17 : "Nothing burns like the cold."
def protect(Stark,Ygritte){

}
def mislead(Sansa){
	Stark -= ( TABLE[-TABLE[-830.3567][mislead(COLS,Jon * -rule(Jon))] * -COLS][dog] );
	Ygritte *= Stark
}
def TABLE[( 300.33 / -0.31 )][k] {
	Hodor -= Jon
}
def betray(){
	if(-Stark){
	if(bar(( destroy(ROWS) * ( 1 ) * TABLE[Ygritte][TABLE[-41][--TABLE[TABLE[-( protect() )][bar(-79,--betray(rule(betray(),-ROWS)))]][770.207 / TABLE[Arya][( ROWS )]]]] )) / Jon){
	if(TABLE[( destroy(x) )][-0.08]){
	if(-rule(( 1 ) - TABLE[TABLE[-28][930.1]][x] + COLS,COLS,76 * 560.38) * Hodor){
	Arya -= ( x );
	Hodor *= y
} else {
	y *= TABLE[rule()][-1];
	Stark *= Arya
};
	( COLS );
	x += x
}
};
	y *= -ROWS - --( rule(COLS) );
	if(protect(COLS * TABLE[--dog][-0.37] - Sansa)){
	Hodor += COLS;
	-0.07;
	( x )
} else {
	Jon *= ( Arya );
	dog -= -( ( Arya ) - ROWS )
}
} else {
	y;
	dog -= -Stark;
	if(( Stark )){
	10
} else {
	Ygritte -= --x;
	dog /= ROWS
}
};
	Ygritte / TABLE[1][-( -1 ) + ( COLS - ( 30 ) )];
	dog *= COLS
}
assert TABLE[-foo(Ygritte,ROWS,bar(COLS) - foo(83,Arya))][x] * Sansa / ( --0.12 / Stark + Arya + Arya / ( -961 ) / -530.2035 ) : "One can not simply parse himself"
var Arya = -0.6
assert betray(( COLS * ( -rule(----betray(TABLE[bar(( COLS ),ROWS,foo(1 + protect(( protect(0 - protect(( ( ROWS ) ),ROWS,0.35),dog,--y) ),( --TABLE[ROWS][( 34 )] * ( protect() * -72 ) )) / ( bar() ) * destroy(TABLE[0.11][ROWS],( -rule() - 310.3412 + Hodor )) - ( y ) + ROWS,99))][-12],mislead(ROWS,( -1 )),mislead(-Hodor,betray(9,( ( 0.08 ) ),( COLS )))),Ygritte - foo(( ( betray(bar(protect(-19,mislead(-96),-0.75),0.26)) * 0.29 ) ))) ) ),foo(rule() + COLS,Sansa)) : "Nothing burns like the cold."
def TABLE[-bar(protect(1) + Hodor)][i] {
	ROWS;
	470.635
}
assert TABLE[COLS][--TABLE[TABLE[-TABLE[mislead(mislead(--0.45,foo(-( y ),( protect() )) + ( Hodor )))][TABLE[( COLS )][61]]][1]][Jon]] : "Nothing burns like the cold."
def TABLE[COLS][i] {

}
def TABLE[COLS][j] {
	y -= TABLE[y][-betray(ROWS)];
	Jon
}
def protect(Arya,Stark){
	( ( -47 ) )
}
def TABLE[y * 0.11][k] {
	-COLS;
	Jon *= --dog;
	Arya += COLS
}
var Jon = 0.58
assert TABLE[Stark][-49] * ( -Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-1][i] {
	40 - ( x );
	ROWS;
	y *= -350.6431 * -( -x )
}
def rule(Ygritte,Hodor){

}
def TABLE[y + 60 * -0.62][j] {
	-64 - --( -( --16 ) );
	if(( ( ( Hodor ) ) )){
	if(1){

};
	ROWS
};
	Arya
}
assert --( -mislead() + bar(Ygritte * COLS,foo(53,ROWS,( y ) * mislead(COLS,-630.33 / --30.2462 * -TABLE[( Hodor )][foo(COLS) - -0.4 * COLS],-foo(-COLS - foo())))) ) : "Winter is coming"
def destroy(){
	if(( ( ( Sansa + bar(Stark) ) ) )){
	dog += Sansa;
	TABLE[bar(Jon)][--60.3423];
	Sansa -= ( ( ( ( -( TABLE[Arya][-x] ) ) ) ) )
} else {
	y /= x;
	Hodor -= mislead(betray(( -( ( rule(Ygritte,-betray(-0.43 / ( ( destroy() ) ) + protect(-( dog * -Hodor / ( x ) ),Ygritte) - ( ( -Ygritte ) ))) ) ) - y / ROWS ),-Hodor),( ( ( ( Stark - protect(protect(-ROWS,destroy(( -0.6 ),-COLS / destroy(Stark,( mislead(( TABLE[Stark][1] ),bar() - TABLE[--Hodor + ( -( Sansa + TABLE[( ROWS )][0.05] * -bar(68) - COLS / -31 ) )][-1]) )),-( COLS )))) ) ) ) ));
	if(( Ygritte )){
	if(destroy(TABLE[protect()][--TABLE[-TABLE[1][( dog )]][ROWS] - COLS])){
	if(-0.16){
	x /= Hodor;
	if(Jon){
	if(Sansa){
	Hodor -= foo(( y ),COLS,Jon + Jon / -0.68 - COLS);
	Sansa += foo()
};
	if(-betray() / ( COLS ) * protect(( ( ( 55 ) ) - -------0.13 / --68 ),TABLE[( ( -0.78 ) )][bar(83,-Stark / ( betray(betray(betray()),COLS) ))])){
	Stark -= ( COLS )
}
}
};
	if(( Hodor )){
	if(Sansa){
	destroy(mislead(( TABLE[betray(-29,protect(rule(Ygritte),destroy(( -TABLE[x][--750.425] ))))][--87] ),--COLS) / -COLS,dog)
} else {

};
	Sansa += ROWS
};
	if(1){
	Ygritte *= ( ROWS )
} else {

}
} else {

};
	Sansa
} else {

}
};
	y
}
assert rule(( rule(mislead(betray(-Stark,mislead(0.68,ROWS) - ( -750.85 ) * Jon),-( -0.65 - ROWS ),-Arya) - bar(x,-COLS)) )) : "Winter is coming"
def betray(){

}
assert -foo() : "Winter is coming"
def TABLE[foo(Ygritte)][j] {
	( Sansa ) / 570.7015
}
def bar(dog){
	if(bar(destroy(x,75),betray(1,( Stark ))) + destroy(-0.12,ROWS)){
	-( ( foo(TABLE[-( Jon )][-COLS - -( protect(Hodor,61) )],1) ) );
	if(( ROWS ) + 76 / 0.04){
	13;
	if(rule(--0.8 + protect(0.81 - 60 - TABLE[TABLE[COLS][-650.831]][Hodor] + -bar(COLS,destroy(( TABLE[-COLS + Sansa - mislead()][Arya] ),protect(( COLS ),-Ygritte))),-620.562) - ROWS - --1 / ( ( -TABLE[TABLE[0.22][--Stark]][rule(bar(ROWS,( -Jon - -0.6 / 0.86 - ROWS ) / COLS,y),( -10.348 ),-1 * -0.67 - ROWS)] ) ) - rule(-Arya,-0.68))){
	if(TABLE[( -0.25 )][-44]){
	if(-380.94){

} else {
	x += TABLE[bar(23)][ROWS] * ---54;
	Arya *= y - ( Arya * ( Sansa ) );
	betray(foo(ROWS)) + ( -61 )
}
} else {
	COLS;
	if(( -21 )){
	if(-470.32){
	y -= Ygritte;
	if(-COLS * mislead(foo(-ROWS))){
	Arya *= ---26 * --( foo() ) * -0.39;
	if(-1){
	if(1){
	Hodor += -0.19;
	COLS;
	Arya -= y
};
	x *= ( y - -( -1 ) - rule(( 1 ) / dog) - COLS )
} else {

}
} else {
	rule(-COLS * Hodor);
	Jon /= ( -Stark )
}
};
	ROWS
};
	Jon -= 0.88
}
};
	if(( ROWS )){
	foo(ROWS,Jon);
	Sansa -= Sansa / dog;
	dog -= bar(ROWS * --TABLE[-33][( rule(-0.3,( -ROWS - ROWS )) )],( Ygritte ) / Jon - -y,( ROWS + destroy() * Ygritte ))
}
}
};
	COLS;
	( --( ( ( protect(TABLE[COLS + dog][-1]) ) ) ) )
}
var x = ( foo(rule(-0.15,Sansa),-0.06,rule(890.7156,-0.08)) )
def TABLE[protect()][i] {
	if(-22){
	-Arya;
	if(560.2059){

} else {
	if(---100){
	Ygritte /= ( COLS )
} else {
	Sansa *= betray();
	if(betray(( Hodor ),0.71)){
	COLS;
	if(COLS){
	if(-70.782){
	y += ROWS;
	if(x){

} else {
	830.3;
	( -bar(-( rule(Stark,-89,( --640.16 )) ),-1) * TABLE[betray(-ROWS + ---0.64,Hodor)][bar(mislead(---40,protect()) * destroy(-COLS,-0.81),bar(),destroy()) + ROWS] );
	TABLE[( ( ( ( 43 ) ) ) )][Jon]
}
};
	( Hodor * protect() - -COLS ) - -47
}
}
}
};
	Hodor *= -TABLE[-ROWS][0.78]
} else {
	if(-foo(destroy(Hodor,mislead(( mislead(( foo(protect(Sansa,betray(ROWS)),y) ),ROWS) + ( -870.273 - ( 1 ) ) ),-0.35),( mislead(-rule(ROWS) - -ROWS / ( 83 )) )),( 0.04 / -0.4 + mislead() ))){
	Hodor
} else {

}
};
	-TABLE[TABLE[Hodor][COLS]][1] + -x - -0.17
}
assert TABLE[-COLS][foo(-78)] : "Fear cuts deeper than swords."
def TABLE[( -( -( -0.78 ) / ( ( Ygritte ) ) ) )][k] {
	x *= x
}
def protect(Sansa){
	if(foo(( foo() ),-0.51,TABLE[( ROWS )][-( ROWS ) * -100.96 / ( -( ROWS ) * 24 )])){
	if(x - -( -bar(( -TABLE[10.8][-Jon] )) * -( x ) )){
	bar(-( -1 ));
	dog /= COLS
} else {
	if(ROWS){

} else {
	TABLE[1000.93][-( Stark )] / -( ROWS )
};
	Jon *= -( ROWS )
}
};
	bar(-Sansa);
	rule(rule(ROWS,( y )))
}
assert Jon : "Winter is coming"
assert ( rule(rule(Ygritte,rule(Stark,Hodor)),( dog )) ) : "One can not simply parse himself"
def mislead(Hodor){
	Arya -= TABLE[--betray(-( ( --bar(Sansa) + 12 ) ))][y];
	if(Arya){

} else {
	if(-ROWS){
	x += protect(0.56)
}
}
}
def protect(){

}
var dog = ROWS + ( TABLE[( -Ygritte )][Hodor / 43 + ( COLS )] )
assert TABLE[TABLE[bar()][( 0.05 )]][-Stark] : "Winter is coming"
def TABLE[-TABLE[-foo(--foo())][Jon]][k] {
	( -rule(( Sansa ) * -0.47) )
}
def TABLE[-Arya / 0.46 - COLS][j] {
	Jon *= betray()
}
def TABLE[( destroy() + Stark )][k] {
	if(0.31){
	Sansa *= -6;
	if(protect(-( TABLE[32][0.9] ),TABLE[destroy(Arya,-betray(--( --0.33 ) + destroy(( ( TABLE[( 47 - COLS )][-Ygritte] * foo(( rule(ROWS - ROWS,destroy(),TABLE[( Sansa ) / destroy(Hodor,betray(-dog))][0.71]) ),foo(rule(ROWS))) ) ),ROWS,Jon),1 * ( bar(85) ) / Jon,( ( betray(COLS / -( mislead(( -Ygritte / 1 ),betray(betray(),Arya),foo(-37,--0.65)) ),ROWS,-( -870.359 )) ) )))][Jon],-Sansa * -rule(Ygritte,foo(-( betray() ) * dog / TABLE[( COLS )][Sansa],( -y )),( TABLE[mislead(-( ( -Sansa / destroy(-TABLE[COLS][-0.27],COLS,ROWS) ) ),-0.32,TABLE[Jon][( protect(-TABLE[-0.9][( TABLE[-1 * -Jon][( ROWS )] ) / 390.4305 - protect() + Sansa] * 58 * Ygritte,TABLE[Hodor][dog]) )])][15] )) - -68)){
	Hodor -= ( ( -1 ) );
	x -= bar(-0.66,mislead(-COLS)) * -COLS;
	Sansa * -protect(Jon,( ROWS )) * -1
} else {
	Ygritte *= COLS;
	dog += destroy(-ROWS / TABLE[-18 - TABLE[Sansa][-Arya] * -84 - ( -68 )][( destroy(rule(rule(COLS,-780.45),-TABLE[Stark][-bar(( -( ( x ) + ( 55 ) ) ),( TABLE[-bar(ROWS - -Ygritte,Sansa - COLS)][-1 * rule(mislead(( ( Stark / -( Stark ) ) ),Arya) + -32,TABLE[betray(dog) + ( -foo(TABLE[betray(ROWS,betray()) - ( dog )][COLS + Arya]) / Stark )][( foo(Arya,rule(1,-1),( -COLS * TABLE[( ( protect(y) ) )][COLS] )) )],-0.1) / TABLE[( Hodor )][ROWS]] ))],( 91 ))) ) - dog] + -930.184,Stark)
}
};
	Jon += mislead(ROWS / y);
	if(-190.69){
	bar(-0.86 * protect(),57,TABLE[TABLE[-y + ( COLS )][( x )]][TABLE[68 + ROWS / betray()][0.69]]) * Arya + Arya / ROWS;
	if(-bar(dog)){
	Hodor *= Jon * -rule(0.09);
	if(Jon){
	Ygritte += betray(foo(y + x,Stark),( -70 - ( x ) + ROWS + 63 )) * ( ( 85 ) ) * ( --0.13 + -Arya - Hodor ) * rule();
	ROWS
} else {
	TABLE[dog][destroy(mislead(COLS,( bar(-COLS,0.83 * 260.8,COLS) )),bar(mislead(foo(( -TABLE[( COLS )][-TABLE[0.4][ROWS]] + ROWS + Ygritte * Jon / ( -( -Stark ) ) ),( COLS ) / COLS),-490.401 + -0.84) / ( Jon ),Jon,-0.37))];
	Arya /= Arya / Arya;
	Hodor += Stark
};
	if(-840.739){
	Jon -= mislead(-0.55)
}
} else {
	if(83 + TABLE[Jon][ROWS / betray(85,Jon,bar(bar(),( betray(COLS) ),( 0.12 ))) * ( -24 * ( -mislead(foo(-ROWS,( betray(COLS + ( Jon ) + protect(ROWS),( mislead(-53) ) * COLS) ),y)) ) )]){

};
	if(foo(TABLE[Stark][100] / protect(destroy(mislead(COLS,( -( ( -Arya ) ) )),0.96),foo(1),mislead(--0.3)),-Ygritte)){
	x -= betray(betray(-690.694) - -x,TABLE[-ROWS][bar(0.48,foo(-0.65))])
} else {
	TABLE[-81][ROWS];
	ROWS
}
}
}
}
def destroy(dog){
	x += Ygritte;
	x *= ROWS;
	destroy(-bar(-1,--42),( ( protect(Sansa,( 630.98 )) ) ),Arya)
}
def foo(dog,dog){
	if(880.343){
	y /= ( -50 ) * ( COLS );
	protect(( betray(( 50 ),dog / 1 / -26) ),ROWS + -0.39,protect(( -0.77 ),TABLE[-rule(( -betray(( -42 ),( TABLE[-0.2][protect(x)] ),betray(-Arya,640.556,Arya) * -( -y / --910.517 )) ) * destroy(-88),( ( destroy(betray(0.31,ROWS),0.57) ) ))][-ROWS]))
};
	-21
}
var Sansa = ( -( -TABLE[920.5][COLS] ) )
assert -( ( Jon ) ) : "Nothing burns like the cold."
def destroy(){
	50.1319;
	destroy()
}
def destroy(y){
	COLS
}
var Stark = y
assert COLS : "Nothing burns like the cold."
def betray(Stark,y,Arya){
	( mislead(( ROWS ) * ( 0.52 ) - ( -0.01 )) )
}
assert Jon : "Fear cuts deeper than swords."
def TABLE[( ( foo(COLS) + ( foo(y - TABLE[( TABLE[-ROWS][( Stark * -750.055 )] )][--0.91 - 0.37],( foo(dog,COLS) / mislead(rule(-( y ) * 76),--COLS * COLS) * -destroy(-0.52,x,-62) - 920.1426 * ( -COLS ) )) ) / --bar(bar(-rule(Ygritte)) / ( Ygritte ),( TABLE[x][--90] )) ) )][k] {

}
def TABLE[bar(-89)][k] {
	if(--TABLE[Stark][Hodor]){
	if(-Hodor){

};
	-0.47
} else {
	if(( betray(y - ( -800.6745 ) * mislead(-1)) )){
	y -= TABLE[-( Jon )][-Stark]
} else {
	Jon += protect();
	TABLE[-ROWS][( -95 )]
};
	y += TABLE[86][--y] - COLS
}
}
def TABLE[-64][j] {
	96;
	if(( bar(-y,-700.849,TABLE[-20.8519][-( ( TABLE[destroy(-destroy(COLS,0.62,( foo(Jon,dog * Sansa) )),y)][ROWS] ) ) / y - -destroy()]) )){
	ROWS;
	if(--2 - -31){
	if(TABLE[betray(betray(protect() - dog))][TABLE[( COLS )][-94]] - ( COLS / 0.11 - ( dog ) + x ) / -ROWS - protect()){

};
	if(bar(0.06,Sansa)){
	Hodor *= COLS + ( ROWS );
	if(protect(-0.22)){
	if(betray(-1 + -Jon,betray(mislead(( ( -1 ) ),680.138))) / -Arya * Jon){
	if(ROWS){
	if(Arya){
	mislead(ROWS,-78) - 1;
	destroy(-0.92) + betray(--dog,foo(630.641,destroy(-x,bar(-61),--0.38 * -( Arya ))))
}
} else {
	Stark += -ROWS;
	x += destroy()
};
	620.228
};
	if(-destroy(-52 - Stark / -( ( ROWS ) )) + ( rule(TABLE[Ygritte][betray()] + betray(ROWS),( ( -0.65 ) ),210.247) )){
	y *= ( -TABLE[-Ygritte][( ( TABLE[-Sansa][( Hodor )] ) )] - bar(1,Hodor,( -destroy(TABLE[foo(( ROWS ))][TABLE[Hodor][rule(-( -Sansa ),COLS) / TABLE[( -( -0.87 ) )][ROWS] * -71] / TABLE[rule(-TABLE[( -73 )][-protect(protect(( 39 ),-280.6),y * 1,-Sansa)] - -Sansa)][( ROWS ) * -41]],( ( Arya ) )) )) / rule(-y + -0.89 / TABLE[-( mislead(--( -440.808 - -0.87 ),mislead(x,ROWS)) ) + -Ygritte + ( ( 0.74 ) )][COLS],-0.63 + -ROWS) );
	Arya /= ROWS
} else {
	dog /= ( y );
	bar(( COLS ))
};
	if(0.52){
	if(( Jon ) + betray(--Jon,ROWS,0.79) / mislead()){
	if(y){
	Stark /= --0.07 * -( mislead(betray(( -( -1 ) ),--COLS,Jon)) );
	Arya -= ROWS
};
	y
} else {

}
} else {
	if(( bar(rule(x,rule(x,-60),-destroy(-83,-y))) ) + 1){
	if(COLS){
	0.08;
	-56
} else {
	( bar() );
	-11 / Sansa * -0.99 / Arya;
	if(( TABLE[-0.05][Stark] )){
	Ygritte *= ( betray(-rule(-( -60 )) - ROWS,Hodor) )
} else {
	if(( -40 )){
	COLS;
	if(mislead(-( ROWS / 92 ))){
	Ygritte
}
} else {

}
}
}
}
}
} else {
	betray(Hodor,-ROWS) + 29;
	dog
}
}
};
	( Stark )
} else {
	Hodor += COLS;
	if(( dog )){
	if(Arya){

} else {
	if(x){
	Ygritte *= ---20;
	1;
	if(--ROWS){
	x *= ( Ygritte * destroy(bar(ROWS),Ygritte) );
	if(x){

};
	x /= 1 - Ygritte
}
}
}
} else {

}
};
	( destroy(0.55) )
}
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.29 : "Winter is coming"
def TABLE[mislead(-( -Arya / y / COLS + dog ),Sansa / ----120.21)][i] {

}
var Stark = ( Jon )
def TABLE[-ROWS + ( -dog )][k] {
	if(( ---49 * -0.85 )){
	Jon /= COLS + foo(dog);
	if(--84 + Sansa){
	if(( ( ( 31 * -0.34 ) ) )){
	( --( -bar(mislead(Jon,mislead(--1 - 88 - ( TABLE[TABLE[( dog )][-bar()]][COLS] ) - -destroy(-68,Ygritte),-1 + ROWS / ROWS / --COLS),-TABLE[200.5239][1])) ) / -1 - y );
	if(( dog / -50 )){
	Ygritte;
	Sansa -= TABLE[( destroy(( foo(y) ) - ( y ),-1,destroy()) )][--x]
} else {
	if(dog){
	-destroy(0.33);
	if(COLS){
	if(-( -ROWS )){

} else {
	Hodor /= mislead(foo(( ( -COLS ) )),TABLE[Stark][TABLE[Stark][-protect(( 60 ),bar(( ( y ) )))]],( ( ( TABLE[bar(mislead(-TABLE[( --TABLE[Stark][( COLS ) - ( TABLE[COLS * destroy(( COLS ),( rule(protect(destroy(destroy(-1),( COLS ))),destroy(rule())) )) * ( 61 )][Hodor] ) - -73] + -( protect(-( TABLE[-dog][destroy(TABLE[-ROWS][-( TABLE[TABLE[protect(-bar(( ROWS ) / -0.96),-850.6,-83)][ROWS]][( Stark )] )],ROWS,TABLE[y / bar() + -62][--COLS])] )) ) / foo(( ( -TABLE[-0.73][-15] ) ),dog) )][Arya],14,ROWS) * ( ( -77 ) )) * -0.58][( Stark )] ) ) + 1 ))
};
	if(COLS){
	if(-580.46){
	Stark *= 0.8;
	x /= ( mislead(COLS,protect(Arya)) )
} else {
	Ygritte *= ( rule(-( Hodor )) );
	x -= Hodor;
	Sansa += TABLE[( ( ROWS ) / bar(y,Jon) + -87 )][( --1 + rule(Arya,mislead(--destroy(),( betray(43 / ( Stark - x - foo(-Jon + 0.55 * ( Stark - rule(-ROWS * ( Jon ) + ( betray(destroy(),( rule(COLS,( COLS )) ),TABLE[-980.5][TABLE[destroy()][-Stark] + Ygritte + ( dog )] - -0.76) ) / destroy() / 750.6,Hodor + --34,Sansa) * TABLE[( ( -foo(-0.79,0) - Arya + Hodor / Arya ) )][dog] / TABLE[mislead()][x] ),( -390.37 ) - -protect(( protect() ),ROWS)) ),COLS) ))) )]
}
} else {
	Sansa /= Hodor;
	x -= Jon
}
}
} else {

}
}
} else {
	if(--49){
	if(mislead(64,COLS / Jon) + -Hodor){
	x -= foo(Stark,( ( -dog ) ));
	dog += ( -15 )
} else {
	if(ROWS){
	Jon *= Jon;
	Arya /= --bar(-( -ROWS - foo() + ( -70.3253 ) + 250.443 ),TABLE[ROWS][--( -210.192 * Ygritte )],TABLE[( destroy() ) * ( -betray() ) / -400.808][Hodor] / 0.28)
}
};
	dog /= x
} else {
	bar(foo(Jon,COLS) * ( 1 ),Hodor)
}
};
	Arya /= -0.65 * foo(Stark,0.45) / TABLE[dog][TABLE[TABLE[dog][destroy(( -( COLS ) * betray(( COLS ),TABLE[ROWS][COLS] * destroy(( Sansa / -840.24 ),1)) * ROWS ))]][TABLE[-protect(protect(mislead(( Hodor ),COLS,-ROWS) - bar(-foo(-Hodor,-270.89,-1) / ( Jon ) * ( protect(( ROWS ),TABLE[-( COLS ) / ( 34 )][-ROWS] / ( protect(Jon) ) * -ROWS) ) - -0.8) * COLS),TABLE[( ( TABLE[Sansa][TABLE[-0.76][x]] / rule() ) )][0.63 * -ROWS]) + Hodor * -1 / -480.62][( Hodor ) - TABLE[36][( y )]]]]
}
};
	Ygritte;
	Hodor
}
def destroy(x){
	Arya -= TABLE[-TABLE[bar()][x]][( --( -980.35 ) - 0.81 + ( Jon ) / -protect(protect(betray(( -0.98 ),betray(foo(foo(foo(-dog),ROWS) * COLS),( -94 ))),ROWS,Hodor - 88 / ( protect(mislead(Sansa,x,rule(y)),-0.71 - -( --1 )) / ( ( ROWS / Jon ) ) ) + --( protect(TABLE[( 8 ) * ( destroy() )][--x] + TABLE[Arya][( ( Arya ) / --foo(-790,Stark) )],-foo(rule(( ( -ROWS ) ))),-ROWS) - 23 + 0.59 ))) * COLS - ( -COLS + -ROWS ) )]
}
var Ygritte = destroy(-ROWS * dog)
var Sansa = ( --mislead() + -COLS * ( ( betray(-betray(--COLS,( TABLE[Jon][Stark] ) * --COLS / 1 / TABLE[--TABLE[foo()][x * Hodor] - --TABLE[destroy(foo())][( -0.84 )]][( -( Sansa ) - Hodor / -Arya * ROWS * Jon + -Ygritte - ( -230.26 / -1 ) * ( ( rule(betray()) ) ) )] - --250.9864 / -( 0.45 ) + -0.76) * TABLE[bar(Ygritte) + -1 / ( Stark )][-5]) ) - TABLE[Hodor][5] ) )
def rule(y){
	if(81){
	dog -= destroy(--betray(-( bar(( -( dog ) ),( -( ( foo() ) ) )) ) / ( ( x ) ),( destroy(Ygritte) ),COLS / --0.49) - dog)
} else {
	if(protect(( COLS )) - Ygritte){
	Ygritte;
	dog *= destroy(destroy(ROWS,y),-Arya)
}
};
	dog *= -foo(77,protect(( ( rule(TABLE[Arya][foo(bar(-mislead(rule(( -( x ) ) + -TABLE[Stark][foo(Hodor) + destroy(-( --ROWS )) / ( 0.18 ) + Arya] + --( bar(--betray(),destroy(TABLE[Jon][-ROWS / destroy()])) )))))],COLS) ) ) * destroy(mislead(-39) / Hodor),x));
	Stark -= -840.89
}
def TABLE[ROWS][j] {
	if(-ROWS){

} else {
	rule(ROWS);
	Jon += y
}
}
def protect(Hodor,dog,Ygritte){
	if(TABLE[--15][Stark]){
	dog += -mislead(rule(),-TABLE[Ygritte][Jon]) - --betray(0.48 / destroy(COLS)) + ( ---foo(-400.047,dog,Sansa) * dog - y / -0.35 )
}
}
var y = destroy(COLS,-33)
def mislead(dog,dog){
	if(Stark){
	if(82){
	if(0.08){
	if(mislead(Jon,rule())){
	if(0.08){
	( Hodor )
}
}
};
	if(bar(rule(-0.8,Hodor),y,mislead(mislead(( -destroy(---( Stark ),-1) + mislead(( mislead(-mislead(x,destroy(x))) )) )) + COLS,--ROWS)) / --y * COLS){
	if(-( TABLE[destroy(ROWS - ( -590.31 ),ROWS)][( ROWS ) * y / -( -50 )] ) + ROWS){
	betray()
} else {

};
	protect(-Arya,( 460.4057 ))
}
}
}
}
def rule(Jon,Ygritte){
	-( -destroy(( Stark - -0.5 ),( x ) + mislead(( COLS / ( 0.86 ) - ( TABLE[0.15][( -( 1 - bar(( Ygritte ),Arya,Hodor) ) )] / COLS ) - protect() )) * TABLE[foo(-betray(-9,-67,y),( ( Ygritte ) ))][ROWS]) );
	if(Arya){
	if(Sansa){
	if(-destroy(dog)){
	( Stark );
	if(TABLE[80][-( ( -910.51 ) ) / 80 * 1 * -33]){
	Jon += TABLE[--0.99][destroy(y)];
	-( -Ygritte + ---( x ) + ROWS / Hodor * ( ROWS ) + -y );
	dog += ROWS
}
};
	dog -= Hodor / Arya - -TABLE[foo(ROWS)][rule(-0.93,protect(Ygritte / COLS) / ( COLS / mislead(Stark,-protect(mislead(---24 / Sansa))) ))] + ---( COLS ) * 0.38 / foo(betray(Sansa,-COLS)) + 5;
	if(Sansa){
	0.98 - mislead(--( ( 11 ) ),x)
}
} else {

}
}
}
def protect(Hodor){

}
var Ygritte = -220.583
assert ( ( bar(protect(( 51 / Stark + ( Arya ) ),-0.31,TABLE[TABLE[-Stark][( mislead(Jon) )]][0.01])) ) - -89 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-bar() * ( COLS )][k] {

}
assert -Arya : "What do we say to the Lord of Death?"
assert rule(destroy(),rule(( mislead(betray(bar(TABLE[x][-Hodor] * ( ( ( ROWS ) ) + 0.51 )) + foo(y))) ),( COLS ) - -destroy(ROWS))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-830.605][j] {
	Ygritte /= rule(-COLS)
}
def foo(y,x,Hodor){
	if(( TABLE[-( Stark )][( ( rule() ) )] ) + 0.93){
	Ygritte *= ( 1 )
} else {
	-1;
	if(bar(Sansa,ROWS)){
	-COLS * -0.48 + destroy();
	--( Sansa ) / -50
} else {
	rule(ROWS,dog,protect(x,--( 0.8 )));
	y -= ROWS
};
	if(33 * TABLE[-430.19][betray(rule(-0.67,1),rule())]){
	if(-0.76){
	x -= ( -0.62 ) / -31 + -0.21;
	Sansa -= rule(-protect(-mislead(( COLS + ( ( betray(ROWS,-foo(Hodor - TABLE[850.201 * 40.2][Jon]) - dog,TABLE[0.5 + mislead(( mislead() ),--destroy(TABLE[-( ( Sansa ) )][TABLE[Arya][-1 - -( Sansa ) - ( mislead() * ( -0.83 ) )]],( betray(COLS,ROWS,-bar(-( ( -Arya - COLS ) ),-Stark,-ROWS)) )))][Arya]) + Ygritte ) - ( 0.62 ) * 1 + protect(-( ROWS )) ) ),protect(-y,Arya,TABLE[Jon][x]),( TABLE[( bar() * -COLS + ( Stark ) )][( TABLE[( -Jon ) * -430.609 + -97][-bar(-0.97,--( -1 ),COLS)] )] )) * ( Ygritte / -( ( Arya ) - --1 - Sansa - TABLE[ROWS][28 - destroy(( ( -Arya ) ),9 * -750.65)] ) / bar() * TABLE[COLS][( mislead() / COLS )] * rule(( COLS ),y,-betray() / ( ROWS ) + ( bar() )) ) - COLS),180.9)
} else {
	if(-0.61){
	y
};
	Sansa *= betray(-0.04) + Hodor;
	x / dog
};
	Ygritte += foo(Jon) * mislead(( ROWS - protect(( -0.03 ),-0.83) ),mislead(y));
	Jon
} else {
	if(-0.72){
	Stark += --( -foo(( mislead() )) + rule(( COLS )) ) / Hodor;
	x
} else {

};
	if(( ( foo(-1) - rule(-ROWS,-1 * ROWS + foo(TABLE[( Jon )][( ROWS + -( betray() ) )] - ( y ),y)) - --1 ) )){
	if(-ROWS){

} else {
	-22;
	if(ROWS){
	-( Sansa );
	TABLE[80.17][-Stark];
	if(rule(Jon)){
	1
} else {
	Stark += TABLE[( bar(Arya) )][0.16];
	if(TABLE[--( -ROWS * -83 ) * destroy(( Arya ))][rule()]){
	-1
} else {
	if(TABLE[x][Hodor]){

}
}
}
} else {
	-240.365;
	dog *= 0.74;
	mislead()
};
	y *= x
}
}
}
}
}
var Sansa = rule(Stark,dog,--( -0.15 ))
def TABLE[foo(x,-89,( -Sansa )) + -y][i] {
	if(-0.71){
	if(( Stark * -0.06 )){
	destroy(bar(Stark * rule(-860.565),780.132 + TABLE[destroy(mislead(Stark),( ( COLS ) ))][-TABLE[betray(mislead(-TABLE[Ygritte][bar(-0.95 - rule(( 0.53 ),Ygritte),-y)]),Ygritte)][( COLS )]],betray(mislead(-COLS),( --( rule(( y )) ) ))) * -54) * bar(x / -COLS,Sansa);
	( TABLE[-rule(Jon) / TABLE[betray(-( ( ( ROWS * x ) ) + mislead(( 1 ),32,rule(-destroy(TABLE[Sansa][ROWS]),( -Jon ),-ROWS)) ),( -Sansa ) + ( -6 ) - Sansa / rule(-foo(1)))][foo(( 77 ),TABLE[-49][protect(Ygritte - ROWS + Arya)])]][COLS] );
	if(( Sansa )){
	if(( bar(mislead(TABLE[Stark][rule(protect(mislead(-0.39,-dog),19,dog),ROWS)]),( ( foo(-Sansa,TABLE[Hodor / --92 / bar(-ROWS)][-0.2]) ) )) )){
	-rule(x,ROWS - ROWS);
	Stark -= -Stark / ( ( -destroy(destroy(bar(( mislead(-mislead(),-330.76) ),( Jon )),y)) / -rule(x) / 30 - ( x ) ) ) + COLS
}
} else {
	--0.15;
	Sansa *= COLS;
	-( COLS ) * rule(Ygritte,( ( ( --x - Jon / bar(TABLE[( ROWS ) / destroy()][-5],COLS / foo(COLS,--bar())) - -Hodor ) ) * -18 + foo(ROWS,protect(-0.72,( ( -( Stark ) + ( -( Sansa ) ) ) / -98 + ROWS / betray(-protect(0.72,-ROWS) * Sansa) ),( -1 ))) ),-dog * ( ( ( dog ) ) + -( betray(( --( -rule(Arya) ) + rule(dog,0.22) * dog - bar(-bar(-( -30.476 ),protect(protect(bar(TABLE[TABLE[TABLE[Jon][-Ygritte]][TABLE[( ROWS ) - y][( bar(x,-Jon - destroy(),0.4) )]] / ROWS][( ( ( x ) ) / TABLE[TABLE[x][( -0.43 )]][ROWS] )],TABLE[protect()][TABLE[foo(0.99)][0.05]] / -TABLE[-80.173][26])),Sansa,TABLE[Ygritte * -COLS * Sansa][rule(COLS) / 320.5]),( -41 ) / -y - y) + betray(( TABLE[( ROWS )][( Arya )] )),protect(),-500.9) )) ) ))
}
} else {
	x += bar(destroy(Jon,0.89),( destroy(Arya,y,dog) ))
}
} else {
	Ygritte
};
	y /= destroy(protect(( -1 * --Jon / -1 / -0.94 )))
}
assert ( dog ) : "Fear cuts deeper than swords."
var Stark = betray(-( -( ( COLS / --270.643 ) ) ),ROWS,-bar(-1,ROWS))
var Jon = Ygritte
var Hodor = ( -290.293 )
def TABLE[Jon][i] {
	Sansa *= Ygritte;
	if(ROWS + -TABLE[TABLE[1 - ( ( COLS ) )][ROWS]][COLS]){

}
}
assert TABLE[-Arya][--1] : "What do we say to the Lord of Death?"
def bar(Stark,Sansa){
	x *= ( betray(( ( ( protect(36 + TABLE[0.59 + ( 910.83 )][Hodor] / -92 * 0.93,bar(-( 0.07 ))) ) ) ),-0.99,mislead(-protect(destroy(betray(bar(COLS,--1)))))) );
	if(mislead(rule(mislead(1 * ( x - ( Jon ) - COLS / protect(( -1 ),-( COLS )) ),COLS,COLS),Ygritte),protect(foo()),( --0.28 - -rule(( --0.33 / -y ),destroy(1,dog),Jon) ) * y)){
	Hodor *= -ROWS
}
}
assert COLS : "Fear cuts deeper than swords."
def protect(x){
	ROWS;
	if(( ROWS * protect(ROWS,--( 1 ) * Ygritte) )){
	Sansa /= -protect()
} else {

}
}
var Jon = TABLE[COLS][-930.81]
var Jon = ( protect(protect() + rule() + -20 / x) )
assert -( TABLE[-1][-( ( Jon ) - Stark )] / -1 ) * ( -Ygritte * -ROWS + -( betray() - -0.16 ) / 460.1928 / y * Ygritte - ( mislead(mislead() / ( -destroy(COLS) + destroy(-1) - 0.49 * -( dog + protect() * ( bar(0.41 + ( Sansa ) * ( destroy(ROWS - 531,-destroy(betray(TABLE[( ( TABLE[rule(--( ( protect(0.88) ) ) + ROWS)][betray(--0.6,( 0.14 ) + 48 / ( x ))] ) )][protect(-0.01,ROWS)]) + ( ( ( ( ( Hodor ) ) ) / mislead(--x,COLS) ) ),-bar(( COLS ),( ( ( Sansa ) + 34 ) ),-bar(-7,COLS))) - destroy()) )) ) ) / COLS )) ) ) / destroy(-27,Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Sansa){
	Stark /= -0.87;
	if(( TABLE[Arya][foo(mislead(44,Stark),-( -TABLE[-( ROWS )][1] ),580.35)] )){
	if(-foo(( ( y ) / x ),-1,( bar(mislead(( bar(protect(foo(Hodor) + rule(( ROWS ),Hodor) - destroy(( Hodor )) + 17,COLS,COLS),0.92) ))) ))){

};
	betray();
	betray(( ( foo() ) )) * ROWS
} else {
	if(-0.41){
	Sansa += --77
} else {

};
	Jon *= COLS
}
}
var Ygritte = -ROWS
def TABLE[rule(Stark)][k] {
	-rule(-0.47,betray(rule(ROWS / ROWS,-0.23),TABLE[ROWS][30.1]),foo(protect(COLS * ( 0.13 ),0.91),-( COLS ),0.17));
	Arya;
	y += -76
}
def TABLE[-24][k] {
	destroy(-1)
}
var Arya = ( dog ) / ( COLS )
def TABLE[( protect() )][k] {
	y;
	Hodor += --22
}
var Arya = 0.17
def TABLE[( ( -86 ) )][j] {

}
assert Ygritte : "One can not simply parse himself"
var dog = Hodor
def TABLE[-( -( Jon ) )][k] {
	if(Arya){

} else {
	COLS - ( Hodor ) + -0.91;
	dog
}
}
def rule(Hodor,dog,x){

}
var Arya = rule(-1,--Arya)
def protect(){
	if(-15){
	foo(( ROWS ));
	x -= -COLS
} else {
	x -= ( -Arya );
	if(( TABLE[-rule(-rule(mislead(COLS),TABLE[ROWS][( -( TABLE[-COLS][( ( -COLS ) )] ) )],mislead(betray(-89),-betray(-COLS / 2,--560.7))) - Sansa,rule())][-bar(COLS - -0.63)] ) + Jon){
	if(bar()){
	-foo(770.8073,rule()) / -betray(( Sansa ),( ROWS )) * foo(-COLS,protect(-Arya));
	y += ( ROWS )
}
};
	-Jon
};
	Hodor -= Jon
}
var x = -21
def TABLE[-COLS][j] {
	( rule(COLS,-0.7) )
}
assert y : "One can not simply parse himself"
def foo(Arya){
	if(Sansa){

} else {
	y /= bar(53)
}
}
assert ( ( mislead(-0.02,ROWS) ) ) * bar(COLS) : "One can not simply parse himself"
def destroy(Stark){
	Ygritte *= -1
}
def mislead(){
	if(--foo(Hodor,( 0.27 )) * --90){
	if(ROWS){
	x /= -0.58;
	if(ROWS){

}
}
};
	if(-( 0.66 ) - ( mislead(TABLE[--37][betray(COLS,TABLE[1][-6])],bar(x,0.88 / ( betray(Arya,( ( -TABLE[foo(( -0.13 - TABLE[-0.97][dog] ))][( -dog )] * ( -rule(-foo(-( foo(protect(destroy(( 12 )) / ( -rule() ),foo(860.33,COLS))) ),ROWS),ROWS,-310.3) ) ) + ( -mislead(rule(-COLS / -( betray(( -1 ) * 32,foo(1 - betray(ROWS),0.54)) ) - foo() / ( Hodor ) * ROWS,-700.415)) / -( 1 ) * -ROWS + -0.43 / -COLS - foo(foo(( -COLS + 0.96 ),bar(ROWS,protect(Stark,-foo(betray() / -( ( -betray(TABLE[0.53][-Sansa],-1) + mislead(TABLE[mislead(ROWS * -28,0.63)][ROWS],COLS) ) ),y),TABLE[16][880.72])))) ) )) ) / -x - 370.107 * rule(mislead(betray()),rule(Jon,dog),( ( betray(COLS) - destroy(--betray(( ( foo(dog,-0.91) ) - -1 ),( -Arya ) / protect(TABLE[rule(( 1 )) - --ROWS + -Arya][ROWS - betray(-x,--800.8)],-Ygritte))) ) )) + Jon,TABLE[( TABLE[Hodor][COLS / ( TABLE[TABLE[betray(COLS)][bar() - betray()]][-betray(( -0.79 ),-0.01,( ( destroy(( ROWS ),--Ygritte) ) ))] )] ) * ROWS * 1][dog])) * Hodor - ( protect(destroy(ROWS),( Hodor ),-0.68) ) )){
	if(-1 * Stark){
	if(foo(99,--1 - Jon / mislead(( rule(TABLE[destroy()][protect(COLS,Stark)]) ),( ROWS )),( -0.1 ))){

} else {
	if(-710.096){
	y *= TABLE[Jon][( -0.13 )];
	-protect(Sansa) + -0.69;
	if(( ( ( protect() ) + -TABLE[foo(dog,0.47,ROWS)][0.78] ) )){

}
};
	if(--( -0.01 )){

};
	Ygritte /= Sansa
}
};
	TABLE[bar()][Hodor]
} else {
	Jon += -1;
	if(ROWS){
	if(ROWS){

} else {
	340;
	-49;
	if(( ( TABLE[( 1 )][--Hodor - --0.39 + 57 / -1 - ( y )] ) + TABLE[( 1 )][-Stark] - dog )){
	if(( rule(mislead(-Ygritte)) ) / ( Sansa * ( Arya ) / 1 - betray(Ygritte) )){
	Hodor *= -1
}
} else {
	if(( destroy(foo(( ( bar(COLS,TABLE[foo(-0.89,Jon)][-rule(-0.23)],mislead()) ) ) * -( protect() ),foo(COLS,Hodor)),0.21) )){
	dog - -0.47 * 5;
	if(COLS){
	x -= -35
}
};
	Arya -= ( foo(( protect(rule(ROWS,bar())) ),( ( ---0.57 + 0.36 ) ) / TABLE[COLS - ROWS * COLS][rule(rule(),x)],( x )) )
}
};
	if(rule(betray(destroy(-3),ROWS) + ( rule() ) - -0.66)){

};
	if(( ( -0.44 ) )){
	Arya
}
} else {
	if(protect(COLS,ROWS) + ( ROWS ) - ( -0.68 ) * ( Hodor )){
	if(-38){
	if(destroy(-TABLE[destroy() + -0.57 + Hodor - COLS / bar()][Stark] / -0.98) / Sansa){
	-ROWS * COLS
} else {

};
	y -= ( Hodor * Arya );
	if(26){
	bar(destroy());
	if(dog - -Sansa){
	Hodor += -2;
	-65;
	x -= ( Ygritte )
} else {

};
	y -= Hodor
} else {
	Ygritte /= -Ygritte - y + dog * ( TABLE[Jon][-( 12 )] );
	Jon *= -0.26 * Arya / mislead();
	0.53 + -ROWS - ROWS * Arya - COLS
}
} else {
	if(( ( Stark ) )){
	x += COLS;
	if(( -y )){
	if(59){

}
} else {
	Jon -= ( COLS );
	Stark /= ( Sansa )
}
}
}
};
	dog -= ( TABLE[( 1 )][-500.471] + betray() * TABLE[( -Arya * ( destroy() ) - bar(-Ygritte,8) * Hodor - Jon )][-dog] + destroy(-1) )
}
}
}
assert ROWS : "Winter is coming"
var x = COLS
def destroy(Jon){
	if(destroy()){
	destroy()
};
	if(( ( -Hodor ) )){

}
}
def bar(Hodor){
	Arya -= ( ROWS ) * -( -1 )
}
def rule(Hodor,Stark){
	Arya /= protect(-810.624,Ygritte)
}
def betray(Hodor,Sansa){

}
var y = rule(Hodor + -0.23,---860.883 - ( ( -640.9 ) ))
def rule(Sansa){
	x *= TABLE[TABLE[( -TABLE[Ygritte + 1][( COLS )] )][-450.315]][47]
}
def mislead(dog){
	Arya /= 1
}
def rule(){
	rule(-1,-370.8,COLS)
}
var Sansa = -y
def bar(Hodor){
	-betray(COLS - ROWS) / protect();
	( ---0.6 / -1 ) / rule();
	bar(Arya,-0.55,COLS)
}
var Ygritte = --0.92 * ( ( x ) ) + -0.91
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.25][j] {
	if(rule(rule(-1,Sansa,protect()),( mislead(COLS) ),TABLE[Jon][( ROWS ) / Sansa])){
	Arya *= 0.17;
	52
};
	bar(-( ( ( Arya ) ) ),foo())
}
def destroy(Jon,Ygritte,Arya){
	if(47){

} else {
	( --y * rule() )
};
	( ROWS )
}
var Sansa = betray(-( Hodor ),TABLE[-Ygritte - -Sansa + 1 - -( destroy(-dog) ) * -0.64 - -y][COLS] * ( dog ),destroy())
def foo(){
	Sansa += TABLE[1][-Ygritte] / -Stark / ( ( TABLE[( --Ygritte ) - rule(-49 * bar(x,1) + 79,0.9)][-COLS - ( ROWS + -0.28 ) / foo(bar(Jon,( y )),Hodor / ( -920.97 ))] + --ROWS ) )
}
def TABLE[Arya][i] {
	y /= ( TABLE[destroy(Hodor,betray(TABLE[-( bar(Arya,( -TABLE[-1][-10.58] + ( 0.56 ) / Ygritte - destroy(COLS) / -dog * 10 ) * Arya) / ROWS )][bar(mislead(ROWS),TABLE[Hodor][mislead()])]))][TABLE[-protect(-ROWS,destroy(dog,ROWS))][betray(-TABLE[( 940.523 ) * destroy(0.55,( Jon ))][-ROWS * mislead(x,( ( ROWS ) ) - -Jon - COLS)] / ( Jon ) - -1)]] );
	Sansa -= Sansa
}
def TABLE[( COLS )][i] {
	if(mislead(betray(( ROWS ),rule(bar(Jon,TABLE[Stark][-1],Stark),( COLS * ( 1 ) + rule() ))) / ( y ),betray(-( ( Ygritte ) )))){
	ROWS
} else {
	Jon += ( bar(Jon) );
	if(TABLE[TABLE[-1][-bar(x,x)]][( protect() )]){
	if(-0.57){
	if(( betray(-COLS,TABLE[95][-protect()]) )){
	Ygritte *= betray()
} else {
	if(( COLS )){
	x += ( destroy(Jon,0.21) );
	if(ROWS){
	if(0.57 + ( -foo(foo(-95,-0.1,( ( -( ( dog ) ) ) ) / COLS + TABLE[foo(destroy(mislead(dog,foo(( -1 ) + ROWS - COLS,29,COLS)) - ( TABLE[rule(---Jon + ( ( destroy(-COLS,( -1 )) ) ))][-0.95] ),Sansa),1)][dog] / -0.04),0.45) ) - Jon){
	x /= ( ( -( COLS / COLS - ( ( ( rule(Stark) ) - 11 ) ) ) + -0.43 ) );
	Jon /= Stark
} else {
	ROWS + -rule(TABLE[mislead(( 0.07 ))][-COLS]) / ( bar(Sansa + -Stark,( ( -TABLE[protect(betray(( ( COLS ) )),Jon) - ROWS][COLS] - protect(89) ) ) / ROWS) )
};
	( Sansa );
	x *= -bar(COLS,COLS,-rule(mislead(-0.3,( TABLE[( ROWS )][-Sansa] )) + foo(( -ROWS ))))
};
	-23
} else {
	if(( mislead(( ROWS ) * 0.45,( ( -0.77 ) ),Jon) )){
	if(-TABLE[-Sansa][foo(betray(( ( -TABLE[ROWS][COLS] ) / -( --Ygritte ) )),( ( ROWS ) ))] - y * 0.43 + ( ROWS ) + -bar(COLS + Arya,COLS)){
	x *= --protect(Ygritte,bar() / 0.14,x)
};
	if(( -Ygritte * -( foo(81,( 0.91 ),0.79) ) )){

} else {
	ROWS
};
	Jon /= Ygritte
}
};
	Ygritte /= ( 1 - COLS ) / protect(-destroy(Sansa,foo(( ( -Sansa + ( ( ( -( COLS ) - -bar(-Stark,dog,destroy(Jon,TABLE[COLS][1] + betray(foo(-0.43,0.15,destroy(-y * Jon / ROWS,-rule(betray(-( mislead(( --( bar(Ygritte,0.84) ) ),-( TABLE[Ygritte * ROWS][-COLS] )) ) / ( COLS )),--COLS - 0.81 / destroy(Arya,protect(36 / protect(betray(-1,COLS,Stark))),COLS),-destroy(ROWS,0.64))))),Jon)) + -660.35 ) ) ) - y ) ) - ( protect() ),( --0.73 / -destroy(-COLS * COLS + -----85 * ( -----53 ) / Jon * dog,Stark) ))) * betray(COLS,Sansa + rule()) + Sansa)
}
};
	if(Sansa){
	Hodor -= -destroy(ROWS);
	COLS;
	dog -= Hodor
}
}
}
}
def TABLE[TABLE[-ROWS][destroy(-16 - x)]][i] {

}
assert -y : "Nothing burns like the cold."
def protect(Stark,Hodor){
	--( TABLE[mislead(Sansa)][---120.5] + 1 ) * ( rule(bar(),0.19,TABLE[-0.99][( -7 ) + -( ( 930.97 ) ) * --COLS * 0.78]) );
	if(TABLE[58][ROWS]){

};
	COLS / COLS
}
assert --( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.32][j] {
	if(x){

} else {
	-ROWS
}
}
def TABLE[-1][i] {
	Jon;
	( rule(84,bar(68),-( ( 0.6 ) )) ) / --0.07 - y
}
def betray(y){
	-ROWS
}
def protect(y){
	y /= ( -protect(-Ygritte,ROWS) )
}
def bar(dog,Ygritte,Jon){
	-94
}
var dog = 0.75 / 61
assert TABLE[COLS][COLS] : "Nothing burns like the cold."
def protect(dog,Stark){
	if(0.23){
	if(330.15){
	-( -1 );
	Ygritte -= ( -0.86 );
	if(y){
	if(( -Stark * ( Hodor ) + Sansa )){
	Hodor
} else {
	Sansa += rule(rule(0.54),mislead(dog,Jon,--1 + ( Arya * Ygritte )));
	Stark
};
	y -= ( --( -COLS ) )
} else {
	Arya;
	-Arya
}
} else {
	y *= -0.68 - ( 46 )
};
	y /= COLS
};
	Sansa -= Arya
}
var Sansa = ROWS / Hodor
assert -82 : "Winter is coming"
var x = 27 + -0.84
assert COLS : "What do we say to the Lord of Death?"
assert ROWS - --COLS : "Fear cuts deeper than swords."
assert ( mislead() ) : "What do we say to the Lord of Death?"
var dog = dog
def protect(Stark){
	if(Jon){
	if(dog){

};
	COLS
};
	x /= -0.48;
	if(( foo(( 1 + Hodor ),-88) )){
	56;
	if(-rule(TABLE[1][-0.56])){
	Stark -= -0.23
} else {
	if(0.4 - TABLE[foo(( x ),Stark + COLS,-0.99)][ROWS] / foo(( ( Ygritte ) ),Hodor * ( bar(-y) ),( 340.381 ) + -( -ROWS ) * -betray(-bar(-0.35,-rule(-1,dog),Arya) * 0.78)) / 0.32 * ROWS){
	if(-bar() * 18){
	if(ROWS){
	if(ROWS){
	if(-0.99){
	Sansa
};
	dog += bar();
	Hodor += Jon
};
	Stark /= ( destroy(-740.069) )
};
	if(COLS){

} else {
	if(ROWS){
	if(protect()){
	Jon -= -0.92;
	protect(( ( ( COLS ) ) - TABLE[-0.36][COLS] ),bar(dog,Arya / 0.85 - -50 / Arya * ROWS)) - mislead()
};
	if(-35){
	if(y){
	y += rule(-dog + rule(( foo(( dog ) + destroy(),( mislead(protect(Jon,( --mislead(mislead(-protect(protect(-( ( y ) ),Hodor,protect()),COLS / ROWS * ( ROWS ) - ( -800.6 )) / --0.48 - TABLE[( x * ROWS ) / -0.3][foo(( -1 ) / Arya)],-COLS)) )),ROWS) )) ),95,ROWS),COLS / -340.411)
} else {
	x *= foo(( Hodor ),800.29)
}
}
};
	dog -= -1
};
	if(TABLE[Stark][Hodor]){

}
} else {
	( TABLE[( ( ( Hodor - ROWS ) ) )][( ( x + COLS ) )] ) - 0
}
} else {
	( TABLE[TABLE[rule(-1,foo(( Sansa )))][( Jon )]][( --Jon ) / ( COLS )] * -( mislead(-60.8,-760.736) ) );
	if(bar(( dog ))){
	x += COLS;
	if(Sansa){
	if(mislead()){
	ROWS
} else {
	if(( TABLE[rule(-8,( Stark ) / -( bar(bar(96,destroy(64,-51,-1)),-57) ),Sansa)][-150.35] )){
	dog += x;
	Jon += Ygritte
};
	if(rule()){
	1;
	y += Ygritte;
	if(betray(( ( ROWS ) ),( -1 ))){
	Jon;
	if(-0.69){
	if(Sansa){
	Stark *= ( -( -( ( 1 ) ) ) );
	Arya += -33;
	Stark /= ( -TABLE[--0.79][ROWS] )
} else {

}
} else {
	if(( Hodor )){
	if(89){
	COLS;
	Ygritte += ( mislead(-Arya - ( rule() ) * y,--( 0.74 / TABLE[Ygritte][-1] + protect(ROWS,bar(0.63 - mislead(),COLS * -protect(-( TABLE[foo(-0.43,-( ROWS ))][Ygritte] ),-TABLE[Arya][Sansa - Sansa] - ( Ygritte * ( Jon ) ))),COLS) ) / destroy(Sansa,destroy(( 0.15 + destroy(0,-TABLE[( -1 )][( ( 0.37 ) )],Sansa) ),( rule() ),Sansa),( -0.15 ))) );
	dog /= -0.7
};
	Jon -= bar(( COLS ),-mislead(86,-( -0.18 ) * destroy(( -rule(TABLE[TABLE[Hodor][0.36] - -TABLE[ROWS][( ( ( destroy() ) + betray(( -470.8346 )) ) + Jon )]][( 130.2 )] / ROWS,TABLE[-0.41][ROWS],-ROWS) ),( -destroy(protect(( -1 ),( 47 / -destroy(( ROWS ) - Arya,betray(Arya)) ) + 0.89)) ),bar(( --860.8 ))),-ROWS) / --310.48)
}
};
	if(710.888){
	Hodor
} else {
	--1;
	rule(y)
}
}
};
	Arya *= y
};
	if(( bar(-Ygritte) )){
	66;
	if(-0.49 - destroy(-31)){
	Arya += 0.56
} else {
	x -= 0.83;
	if(ROWS){
	Arya -= x
} else {
	--Arya;
	Stark += TABLE[TABLE[TABLE[ROWS / mislead(ROWS,Sansa)][destroy(ROWS)]][protect(97,x,--( -860.837 ))]][Sansa] + ROWS * ROWS
};
	if(Stark + rule(-70.7496 + COLS) * TABLE[COLS][( -ROWS + -0.43 * ---Hodor )] / ( -( -89 ) ) / ROWS + betray(TABLE[Arya - ( TABLE[( ROWS ) + 0.59][-Sansa] )][betray(-( Hodor ),( betray() ),rule(Ygritte))] - -0.9,( Jon / TABLE[( Sansa )][Arya] - -Sansa - TABLE[rule(-rule(rule(84)),COLS)][Hodor - ( bar(-1,0.46) )] ) / ( ---( -Hodor - ( -destroy(Stark,foo(betray(COLS,bar(15)) + foo(67,Jon,( -Sansa )))) * Ygritte ) ) * foo(( -( -91 ) ),1) * 9 ),Hodor)){
	if(630.49){
	if(1){
	if(( ( -0.37 ) )){
	if(Ygritte){
	Arya -= ( --1 );
	x += foo(( destroy() ))
} else {
	Stark /= ( foo() );
	-490.488;
	Jon += -0.36
}
};
	if(1){

}
} else {
	Stark *= mislead(Jon,COLS - -1)
};
	if(-Jon){

} else {
	dog /= Jon;
	if(betray(rule(Ygritte),-( ( 1 ) ))){
	protect()
} else {
	Arya /= x
}
}
} else {

};
	if(--77){
	if(rule() * 68){
	bar()
}
};
	x += -Stark
} else {
	if(--betray(22,( ROWS )) * COLS / TABLE[Hodor / --1][TABLE[1][COLS]]){
	x + mislead(ROWS,Stark,Hodor);
	if(-dog){
	if(( bar(( Arya / COLS )) )){
	Hodor -= COLS;
	if(rule() + 850.82){
	if(Arya){
	bar(-78)
};
	if(( foo(Hodor,foo(TABLE[TABLE[-COLS][rule(( betray(0.16 / ( -1 ) - --58 * bar(0.75,650.638)) ))]][rule()] / Hodor)) )){

}
}
} else {
	Stark *= ( 60 );
	Ygritte += mislead(-COLS - ( 0.85 ) - TABLE[Jon][Jon] / -210.643 - bar(-protect(--78),-72))
}
}
} else {

};
	-x;
	Arya /= Stark
}
};
	( --( -( ( COLS ) + 1 ) ) )
} else {

}
} else {
	foo();
	Hodor;
	if(ROWS){
	COLS;
	if(bar(foo(ROWS))){
	y *= 0;
	if(COLS){
	if(mislead(-( 1 ))){
	COLS;
	Hodor -= ROWS
}
};
	Jon += --0.14
}
} else {
	y *= -61;
	y += betray(-y) - -destroy(x,Jon);
	Ygritte -= -620.3
}
}
} else {
	0.91;
	--62 * -destroy(Hodor)
}
}
};
	Ygritte /= protect(-0.86)
}
}
var dog = Hodor
def destroy(){
	if(mislead()){

}
}
var Ygritte = ( ( 0.65 ) )
def mislead(Stark,Stark){
	Arya *= -28
}
var Stark = 220.3
assert Hodor : "Fear cuts deeper than swords."
def TABLE[bar(-bar(TABLE[TABLE[510.85][TABLE[-0.69 * Arya + mislead(-94) / x][rule()]]][x] / x,-0.74),( mislead() ))][k] {
	dog += Stark;
	if(Ygritte){

} else {
	rule(dog,mislead(( betray(destroy(( Sansa - --Sansa / ROWS * -99 * COLS + -57 - ( ( protect(protect(( ( ( ( Jon ) + ( TABLE[( -mislead(Hodor,--( 14 + COLS ) / ROWS) )][( -ROWS )] ) ) ) )) - betray(--1),protect(y)) ) ) ),( foo() ),-( bar() )) / ROWS,x,rule(--0.14,0.31,0 - ( destroy(-y,ROWS) ))) )),-500.7 * 33)
}
}
assert mislead() * -( -610.75 ) - -( -ROWS - ( -foo(mislead(rule(-13),0.67,TABLE[( ( --140.09 ) / -0.44 )][0.56])) ) * ROWS ) : "What do we say to the Lord of Death?"
def mislead(Ygritte){
	-destroy(Arya,( ( ( Jon - Sansa / -1 ) ) ),Ygritte * ( mislead(-130.29) )) + mislead(COLS) / -x + foo(( rule(rule(TABLE[--rule(rule(bar()),( Jon ))][-( -mislead(ROWS) * ( ( ( ( --1 ) ) + ( ROWS - ( -TABLE[-betray(COLS)][75 - -COLS - ( bar(protect(( -y )),-COLS) ) / -TABLE[( ( destroy(Hodor) ) - protect(foo(Hodor,390.79,ROWS)) - x ) * TABLE[( ROWS )][TABLE[1][0.18]]][COLS]] ) / rule(( TABLE[Ygritte][ROWS] ) * -betray(( betray(-24,( protect() )) ),ROWS) * destroy(Ygritte,( ( -mislead(COLS,-COLS) ) )),bar(-Hodor),-120.56) ) * --ROWS ) ) )]),TABLE[ROWS][( -( Sansa ) )]) ));
	Arya -= ( --destroy(protect(-ROWS * -COLS)) )
}
def destroy(){
	( ROWS )
}
assert mislead(Arya,( -COLS ) / TABLE[COLS][protect(( destroy(destroy(-69,ROWS) - -destroy(),0.15,destroy(mislead(-( ( betray(-25 - COLS - -49,Ygritte,protect(x)) ) )),betray(( ROWS + ROWS + -bar(-bar(protect(),21)) ),mislead(betray(mislead(COLS),( Arya )))))) ) / --0.44)]) : "Winter is coming"
assert COLS : "Fear cuts deeper than swords."
def TABLE[Jon][j] {
	Ygritte;
	Ygritte += Stark;
	( TABLE[Jon][TABLE[TABLE[TABLE[bar(-( ( ( bar(Hodor) / ( Jon * -( Stark - dog ) ) ) ) ),ROWS)][0.61] / bar(-90,protect(ROWS,destroy(Arya))) * COLS + rule(-98,-TABLE[Jon][( -99 + ( betray(( TABLE[29][0.55] ),---destroy(dog) - ROWS,( --betray(betray(TABLE[Jon][-68],TABLE[Jon][dog]),--1) )) + ( -7 ) ) )],Hodor) * ( COLS )][rule(Ygritte,-TABLE[-51][-( mislead(50,COLS) )],-960.684)]][x]] )
}
assert -COLS : "What do we say to the Lord of Death?"
assert bar(foo(),TABLE[( ---39 )][( ( -1 ) )]) : "Winter is coming"
def TABLE[rule(ROWS)][j] {
	-TABLE[COLS * 1][( 240.1 )]
}
def TABLE[4 / Sansa][j] {
	if(bar(( -( -( -TABLE[-Sansa][--Arya * COLS - TABLE[-COLS - ROWS * ( -0.65 )][mislead(COLS)]] ) ) ),x)){
	0.47 - 0.83;
	if(( betray(TABLE[Arya][( Arya )],foo(COLS + ROWS - -0.09)) )){
	55;
	Sansa *= -97
}
} else {
	if(ROWS){
	if(bar(Ygritte,COLS / 0.57)){

} else {

};
	TABLE[( -( --betray(ROWS,destroy(destroy(x),ROWS)) + --( ( protect(( -( -0.3 ) + -TABLE[destroy(-x - destroy())][-2 - bar(dog,( bar() ))] )) ) ) ) / Sansa )][1]
};
	protect(Stark);
	ROWS
}
}
def TABLE[dog][k] {
	if(mislead(ROWS,ROWS) + bar(-0.13,Arya,2 / -( -rule(-63,Hodor / -260.933) - betray() + Sansa + TABLE[-Ygritte][-( protect(820.81,-TABLE[rule(Jon,( bar(TABLE[rule(( COLS ),foo(TABLE[-TABLE[--y][mislead(-730.4626 - dog,rule(COLS,-rule()))]][COLS]))][Jon],ROWS) ),protect(( Ygritte ),-rule(-0.95,betray())))][-1] * ( bar(-540.0522) ) - -890.4782 * ( -24 ) * x + -TABLE[foo(TABLE[destroy(COLS,( ( -360.351 / destroy(( -880.579 )) ) ),foo(( ( -0.95 ) ),ROWS))][destroy(destroy(--15),--0.18)],x,( Jon ))][( rule(COLS,-ROWS) )]) )] - --600.68 / bar(( COLS ),protect(ROWS,ROWS),Arya) / -0.95 / COLS - destroy() + bar() + betray() )) * rule()){
	Ygritte *= Ygritte;
	if(Jon){
	if(ROWS / -36){
	if(rule()){
	Hodor += COLS
}
};
	if(Arya){

} else {
	mislead(Ygritte * -Hodor + protect(--64,TABLE[mislead(Hodor,( destroy(betray(betray(110.78,Sansa) / -0.07)) ))][-0.4 + COLS]),( 72 ),Arya);
	x -= ( ( protect(-( ( betray(dog / Arya + TABLE[bar()][( ( COLS + ROWS ) )] / -43,-0.7,COLS) + ( ( --Stark ) * Arya - TABLE[( -dog )][destroy(Stark,--54,--protect(( -COLS ))) / Hodor] + destroy(( foo(dog) )) ) ) ) / Sansa * Sansa * ( 42 ),ROWS) ) )
}
}
} else {
	Sansa /= TABLE[foo()][-rule()];
	( COLS ) + y
};
	Ygritte += ROWS;
	( 1 )
}
var Stark = ( foo(TABLE[( -( TABLE[mislead(-TABLE[-1][Sansa],270.84 + --0.63)][0.77] ) )][600.01 + protect(-rule())]) )
assert protect(0.49) : "Fear cuts deeper than swords."
def TABLE[Jon][k] {
	-( COLS ) * ( -60 ) / x * -TABLE[( ( 0.04 ) )][ROWS];
	Hodor += -betray()
}
def protect(Hodor,Sansa,Sansa){
	if(COLS){
	if(( bar(mislead(-bar() - -ROWS + ( Ygritte ),-0.35),COLS) )){
	if(bar(0.72)){
	Stark *= foo(0.54 + ROWS,( Stark ))
}
} else {
	TABLE[1][COLS]
};
	x /= TABLE[destroy(COLS)][Hodor]
} else {
	y += Jon;
	if(( ( ROWS ) )){
	dog;
	Stark /= TABLE[( Arya )][protect(ROWS)]
} else {
	if(TABLE[1][-0.67 / -bar(destroy(( -protect(-COLS) / destroy(ROWS,ROWS,ROWS * -0.68 / ( -ROWS )) ),COLS))]){
	Sansa += Hodor
};
	rule(foo() - foo(-foo(-61 - -( x - ( ( x ) ) ) * 1),( --ROWS ),-0.41 / foo(-2,protect(TABLE[TABLE[0.74][( COLS ) - foo(-Jon,TABLE[COLS][-0.17])]][( betray(bar(Hodor,670.27),( betray(Hodor,mislead(x,0.92)) )) )]) - foo(ROWS,foo(Arya - -0.09)),TABLE[Arya * -160 + ( --0.36 ) + bar(( ( 191 ) ) / -ROWS - ( 0.68 ))][( Ygritte )] / TABLE[y][ROWS])),COLS)
}
};
	Hodor *= ROWS
}
def betray(Ygritte,y){
	if(( Ygritte )){
	if(--34 * -Sansa + ( ROWS )){
	( destroy(Sansa) / Stark ) / COLS;
	Arya /= ( dog )
};
	y /= Jon;
	Arya /= betray()
}
}
def TABLE[-480.194][i] {
	if(mislead()){
	bar(Hodor,y);
	Sansa
};
	x *= destroy(bar(),( 0.84 * Jon / TABLE[-( protect(-( ---290.641 * Sansa ),3,( 22 )) )][Jon] ))
}
var Sansa = -( COLS )
def TABLE[( COLS ) * ROWS][j] {
	COLS
}
def foo(Stark,y){
	x /= COLS
}
var Ygritte = ( ROWS - ( ---0.83 ) )
assert Ygritte / -( Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = TABLE[y][x]
var Ygritte = Hodor
var Hodor = 1
def TABLE[betray(( -1 ),COLS)][k] {

}
def protect(Jon){
	if(rule(-Ygritte,---71)){
	-( ( 130.585 ) )
}
}
var dog = betray(TABLE[( Hodor )][bar()],-betray(( ( ROWS ) ) + --46,--93) * Sansa)
assert Ygritte : "Fear cuts deeper than swords."
def bar(Hodor,Hodor){
	if(-680.45){

} else {
	COLS;
	-0.02
};
	if(foo(y * ROWS,--1,betray(( Hodor / ( 0.02 + mislead(foo(Arya)) / ( COLS + -74 + ( rule(0.48 * bar(( betray() )),-( Jon + ( Ygritte ) / destroy(Hodor,-0.61) + ROWS )) ) ) ) )))){
	if(protect(dog)){
	if(Arya - y){
	Ygritte += -Ygritte;
	Sansa /= TABLE[-430.9 + destroy(( -310.17 * Ygritte / x ),( -( -( -Jon ) / TABLE[( ( ( Jon ) ) )][COLS * 1] ) ))][TABLE[-Arya][( -1 )]]
} else {

}
}
}
}
assert COLS : "Fear cuts deeper than swords."
def TABLE[-91][i] {
	0.42 / Arya
}
assert COLS : "Winter is coming"
def mislead(){
	-0.13;
	-0.28
}
assert 1 : "What do we say to the Lord of Death?"
def TABLE[( -Stark )][j] {
	rule(betray(Stark * ( betray(Ygritte * TABLE[Jon][( -Hodor )],-Stark,TABLE[43][( ( COLS ) - -0.97 )]) ) - -COLS,Hodor,( 550.87 )));
	Sansa /= protect(( 83 ));
	dog /= -( -77 )
}
assert TABLE[( 1 )][COLS] : "One can not simply parse himself"
var Arya = COLS
var Jon = 0.81 - ROWS
assert ( ( Stark ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -foo(( 0.98 ),-66)
def TABLE[foo(80,foo(-63 - TABLE[( x )][Sansa] * foo(destroy(( 0.82 ))) + x - betray(-530.26) / ( 38 ),( ( bar(( COLS )) ) )))][k] {
	Stark -= ( ( 1 ) * ROWS ) / betray(-ROWS / ( Hodor ))
}
def bar(x,Hodor){
	y += Stark;
	if(bar(betray(),Arya)){
	if(protect(Jon,-( betray(0.68) ) + Stark,--TABLE[1][-15])){
	---74
} else {
	if(79 - 100){
	Stark -= COLS
} else {

};
	Hodor += Sansa
};
	if(( ( -TABLE[( ( COLS - -0.35 - Jon ) )][x] + bar(foo(-560.067,( mislead(ROWS,Jon) ),TABLE[1][COLS]) * -81) ) )){

} else {
	( destroy(-( x ) / ---0.04) ) + ROWS;
	if(( -0.83 )){
	foo(55 - 0.98,betray(1,( -1 )))
} else {

}
}
}
}
var Sansa = -( ( -67 - ( mislead(( -( bar(Arya,-mislead(foo(ROWS + rule(Sansa - bar(-( ( Hodor - x / TABLE[Sansa][1] ) )),( -0.77 )),betray(Arya,mislead(-ROWS,78 - COLS),y - -dog / ( -COLS ))) * Hodor),foo(20.756)) ) ),( betray(( Arya )) )) ) ) )
def TABLE[x][j] {
	if(-( Jon )){
	if(-1){
	if(-Stark / 87 / 1){
	x *= -protect(COLS / ( Sansa ),-1)
} else {
	Hodor /= -890.396
};
	y;
	y += ( ( -ROWS ) )
};
	Jon -= -1
} else {

};
	if(( --( x ) )){

} else {
	if(destroy(-0.35,COLS)){
	( ( -0.91 ) );
	Hodor -= ( -dog - ( 480.769 ) )
};
	if(18){
	if(-0.01){
	if(-Arya){

};
	Ygritte / ( betray(( -Hodor - TABLE[( bar(( --rule(y,-COLS,Stark) ),mislead(COLS)) ) * -470.72 + -bar(destroy(Ygritte,Hodor,Hodor))][1] ),Arya,( dog )) + -0.38 - betray(x,TABLE[-( Stark ) - -890.041][( betray(mislead(ROWS,y),Ygritte,COLS) )]) )
} else {
	Sansa -= 750.67;
	Sansa *= Ygritte
};
	--3
} else {
	dog -= -1 + betray(-Ygritte,( ( COLS - ( ROWS ) ) ))
}
};
	( ROWS )
}
def protect(Arya,x){
	dog
}
var Ygritte = ROWS
def betray(Sansa,Jon){
	x *= Arya + destroy(x,rule(-( ( destroy(-COLS) ) - Hodor )),destroy(15)) - -( -Hodor )
}
assert ( -50 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert mislead(rule(-( -61 ) / ( ( -96 ) ) / -( -1 )),-( TABLE[COLS][ROWS] )) - COLS : "Fear cuts deeper than swords."
assert TABLE[x][--( destroy(( foo(mislead(-490.29),COLS) ),betray()) ) - bar(( 1000.5541 ),-0.77)] : "Winter is coming"
assert ( -17 ) : "What do we say to the Lord of Death?"
var x = x
def mislead(y,dog){

}
def TABLE[Ygritte][i] {
	if(-Arya){
	if(y){
	rule();
	Arya *= -690.88;
	--destroy(destroy(-0.12),( TABLE[betray(-0.14)][( 62 )] / protect(-dog,--TABLE[( ROWS )][-( Sansa ) / 1 * -COLS]) ) + ( destroy(--0.88 - ROWS,( ( ROWS ) )) ) - 0.87,-0.98)
};
	x *= ( foo(-23 + foo(0.45,mislead(--betray(bar(foo()),83 - 57))) / -( TABLE[-dog][Arya] + COLS ),COLS + ( 570.63 ),( ( 1 ) )) )
} else {
	if(COLS * -foo(y / 0.96,0.98)){
	COLS;
	if(( ROWS )){
	foo(( ROWS ))
} else {
	dog *= Sansa
}
} else {
	if(destroy(0.35)){
	Stark += 0.25;
	if(( Arya )){
	Jon += Ygritte;
	Arya -= -x;
	if(mislead(( protect(( -bar(-( Arya / ( protect(1,-68) ) ),( dog ),destroy(y,-Hodor)) - ROWS + foo(( ( -( x ) ) / 870.753 ) + TABLE[dog][y],bar(( -Jon ),betray(COLS) - -82 - COLS),0.17) )) ) + foo(( Ygritte ),COLS)) * ( betray(--( ( ( --destroy(Sansa,Sansa / 35 - ROWS) ) ) ) * 0.6 * TABLE[mislead(COLS,TABLE[COLS][bar(rule(TABLE[-87][protect(x)],( 350.958 + betray(COLS) ),-ROWS))] / 0.15)][( -16 ) / Hodor]) )){
	x += betray(-33 + --1 + -83 + -( ( Stark + -destroy(-betray() / destroy(( mislead(COLS / ROWS,COLS) ))) - -bar(Stark / --800.3 + rule(( -( TABLE[Arya][--0.3] ) ),ROWS)) ) ),betray(0.66)) / protect(x,mislead(Stark,-destroy(TABLE[COLS][( betray(1 / ( Sansa ) + TABLE[Sansa][-COLS] / -0.2) )],-0.61,-0.38),( -ROWS )),rule(mislead(TABLE[-0.35][( ROWS )]),mislead(Sansa - dog,-0.06,ROWS)) - Arya - Arya)
} else {
	if(-1){

} else {
	Sansa += -Ygritte;
	x += bar(rule(( bar() )))
};
	( TABLE[TABLE[( rule(Arya) )][-dog / ( -1 ) + 800.01 * ( TABLE[--0.65 + TABLE[bar(-59)][-bar(--70.8,1 + ( --x + destroy(ROWS) ))] + rule(ROWS)][dog] )]][54] );
	if(-68){
	if(( Hodor )){
	x /= -( Hodor );
	betray(bar() * -0.01)
};
	if(Arya){
	if(-88){
	-42;
	if(COLS){

}
} else {
	x += Sansa / -foo() - COLS
}
} else {
	Stark += mislead(-( -24 ),-40) / Jon / -99;
	if(Hodor){
	Hodor /= COLS;
	COLS;
	if(ROWS){

}
} else {
	-0.54;
	if(-1 / -63){
	y += Arya;
	ROWS
} else {
	if(Jon){

}
};
	if(-( protect(1,bar(-1,( ( mislead() ) ))) )){
	Sansa += betray();
	y /= protect(( Ygritte ),Sansa) - 0.77;
	Ygritte /= ( rule(bar(),TABLE[ROWS][-TABLE[( ( -2 ) ) - ( Arya )][rule(-TABLE[( -Hodor + --bar(( -3 ),betray(),Ygritte) )][( -0.85 / ( -foo() ) * ( -0.35 ) )] * ( -16 ))]],( dog ) * --COLS / -1 - dog) )
} else {
	if(COLS){
	dog *= Stark;
	if(destroy(( --1 ),0.89)){
	--72 * ( Sansa ) / -1;
	if(-140.85 - 44){
	x += -95
}
} else {
	dog += mislead(-0.47,Sansa)
}
} else {
	dog *= -59;
	Sansa *= rule(Ygritte / COLS,ROWS,TABLE[( ( protect(21,( dog ),COLS) ) )][dog]);
	Hodor
};
	--0.45
}
}
};
	Sansa -= COLS
} else {
	Hodor /= ROWS
}
}
};
	Jon -= destroy(Arya,Jon,-( mislead(x,x,Sansa) ))
} else {
	TABLE[ROWS][COLS];
	640.43
}
};
	Arya;
	if(-( betray(0.42,ROWS) )){

} else {
	x /= destroy(COLS - -bar(betray()) / 590.9899 - -Hodor * 0.16);
	( ---TABLE[Stark][( -ROWS )] )
}
};
	COLS;
	ROWS
}
assert -Jon : "Winter is coming"
var Ygritte = y
def foo(Stark){
	Sansa *= destroy(( foo() - -72 )) * ( ( Ygritte ) )
}
def TABLE[TABLE[bar(x)][TABLE[TABLE[foo(ROWS * bar(x,( --37 )))][( TABLE[ROWS][COLS] / ( mislead() ) - -destroy(-ROWS - ROWS / 29) )]][-destroy(COLS,-TABLE[TABLE[Sansa][( -1 ) * destroy(-rule(Sansa / 80,1 + TABLE[( TABLE[TABLE[( ROWS )][-380.1]][TABLE[-0.21][rule()]] + x ) - TABLE[( TABLE[-1][-1] )][--x * ( rule(-dog) ) + Ygritte] + foo(( x ),( ( -280.36 * ( -protect() ) - TABLE[y][dog] ) )) * ROWS * -56][dog]))]][-80] - ( -( Ygritte ) ))]]][j] {

}
var y = 0.54
def mislead(){
	if(Hodor){
	if(-y){
	if(( destroy(0.07,( TABLE[0.25][( ( rule(Arya,destroy()) ) )] )) )){
	-( 18 ) * ( -1 ) / -protect(bar(--300.46),-13);
	Ygritte -= -0.63;
	ROWS
} else {
	if(bar(0.74 - bar(COLS,TABLE[ROWS][y]) * ( protect(--y,COLS / dog,--bar(--TABLE[( bar() )][--( ( 1 ) )] * Stark,Stark,protect(-----destroy(( ( TABLE[foo(---TABLE[Jon][650.102])][x * -81] + Jon / ( --( TABLE[betray(( ( Sansa ) ))][-ROWS] ) ) ) ) - ( ( -COLS ) / ( foo(destroy(( --rule(-protect(1,ROWS,( ROWS ) / x + foo(y,--21,COLS)),ROWS) ),-ROWS),-370.71,Hodor) ) ),rule(70.4884,mislead(),( -Sansa )),( ROWS )),95))) ),rule(1))){
	0.1
} else {
	if(( ( -750.53 + -780.4 + bar(560.72,ROWS - rule(-protect(foo(-Arya * mislead(75,--betray(Ygritte))),Ygritte),dog)) ) )){
	if(-COLS){
	Sansa;
	y += x
} else {
	Sansa *= -Arya;
	x += ( -ROWS ) + 32;
	if(-0.49){
	mislead(ROWS)
} else {
	y /= -40
}
};
	dog /= TABLE[-x * ( 0.3 )][ROWS]
};
	y -= destroy(rule(( -1 ),0.47))
};
	if(y){
	( rule(ROWS) );
	if(-mislead(-( --0.21 ),0.69) * Ygritte){
	Jon -= ( foo(ROWS - -710.928 * ( TABLE[( ( Arya ) )][Sansa] )) )
}
};
	if(( ( 49 * destroy() * 2 - bar(Ygritte) ) )){
	y += ( mislead(20.9177,Hodor - betray()) ) - ( ( foo(protect(--0.64,-Hodor),COLS) ) ) * Hodor + --44 * ROWS
} else {
	if(-50){
	x /= mislead() + bar();
	if(( 710.27 )){
	y *= 0.77;
	Hodor -= rule(-750.36,Arya,( --Sansa * ( y ) + -1 ))
};
	dog -= Stark
}
}
};
	if(-64){
	x *= ( -Ygritte )
} else {
	y -= dog;
	TABLE[protect(betray(protect(Arya),30),protect(destroy(Ygritte + destroy(rule(-49,--( -( COLS ) )),440.6),destroy(-71,Jon),TABLE[x][COLS])))][x]
};
	protect(dog)
} else {
	1000.565 - TABLE[( Stark )][-y - dog] * TABLE[COLS][dog];
	if(ROWS / Hodor){
	Hodor / -( mislead(Hodor,Stark,-100) ) / Hodor - ( dog )
} else {
	Hodor += ( TABLE[COLS][-ROWS] );
	( destroy(-rule(-destroy(1 / Sansa),-82,( betray(( TABLE[( Jon )][ROWS] )) - -25 )) + Sansa,-750.1) );
	rule(-( -( -( -1 ) - Ygritte ) ))
};
	foo(TABLE[( -COLS - rule() )][COLS + Sansa] + -dog)
};
	if(Ygritte / dog){
	dog -= -190.7;
	mislead(destroy(),foo(TABLE[Arya][-( ( -48 ) ) + -0.54],( COLS )),0.57)
} else {
	1 - 0.78
}
} else {
	if(foo(ROWS + TABLE[betray(-0.19,ROWS)][-COLS],COLS,-260.6522) - ( 390.26 )){
	y /= Arya;
	870.09
} else {
	x *= COLS;
	Jon /= Hodor;
	-1 / Jon
};
	( betray(( ROWS ) - Hodor) ) * ( Sansa )
};
	-destroy(-( ( dog / y ) ),Stark - ( ( Stark * ( protect(13,destroy(Stark,-TABLE[protect(-3)][protect(ROWS,-TABLE[destroy(0.63 + -17 - ROWS * rule(betray(),( -( Stark ) ),-89 + 27)) - ROWS][-0.14] / rule(( 53 * mislead(x,32) )))] / Stark / -9,-rule(y) / -( ROWS ) - TABLE[( dog * ( COLS ) )][Stark]) / -y - TABLE[-0.84][TABLE[Sansa][ROWS]] + bar() * ( -0.19 / x * -0.44 ) + mislead()) ) * ( -dog ) ) ))
}
assert --36 : "Winter is coming"
def mislead(Sansa,Arya){
	-( -53 );
	if(0.55){
	Ygritte /= -( ( rule(dog) ) );
	if(-201){
	Sansa *= COLS
};
	-( --0.91 ) - -48 * Hodor
};
	if(--( -79 )){
	( ( TABLE[y][ROWS] ) )
}
}
def TABLE[Jon][k] {
	----protect(foo(ROWS),--30 * -1,1)
}
def protect(){

}
def TABLE[rule(-x - Arya)][k] {
	Arya -= ( ( ( ( TABLE[Stark - ( TABLE[--foo(-mislead(-510.81 / foo(destroy(( Stark ) - --foo(300.85,x) * -TABLE[Sansa][Jon] - Ygritte,( ( 27 ) ),( TABLE[20.66][dog] )),Stark) * ROWS,-4 * mislead(Ygritte - -( ROWS ),bar(TABLE[-0.7][Ygritte],( 1 ),-37) + foo()) - Hodor - Jon,bar(Arya)),-ROWS,Arya)][COLS * foo(--0.19)] ) * ( --( COLS ) * betray(--dog + rule(Jon,ROWS)) )][COLS] ) - 88 ) ) );
	if(( ROWS )){
	Ygritte /= -41;
	Ygritte -= -0.59;
	if(ROWS){
	Hodor -= 0.07;
	if(-( dog ) - TABLE[rule(TABLE[rule(( ( -foo(-1,-TABLE[y * --bar(--TABLE[TABLE[ROWS][TABLE[( ROWS )][COLS]]][( TABLE[960.901][85] )])][--destroy(-bar(),( --0.76 / ( y - y ) )) - TABLE[Sansa][dog]]) * Arya / TABLE[-0.18][COLS - -0.33] * 720.6 + ( ROWS ) ) / Stark ) + 1)][( COLS )],rule(-( 52 )))][0.32] / 0.39){
	-COLS
} else {

}
} else {
	if(8){

} else {
	Sansa -= -TABLE[1][rule(1)];
	Hodor -= COLS;
	Jon += 140.062
}
}
} else {
	if(-0.74 - Ygritte + 7){
	if(( Sansa )){

} else {
	Jon
};
	if(ROWS){
	Ygritte += ( --( y / ( ( bar() * ( protect(-460.205,( x )) - foo(bar(COLS,-ROWS) - betray(TABLE[--290.5][betray(Jon)]),COLS,TABLE[610.433][( ( ( ( -( -protect(Sansa / ----TABLE[foo(0.9,( ROWS ),-460.231 / -Hodor)][--ROWS] / ---COLS / betray(),( bar() ),-3) - 93 + ( -Stark ) - 350.094 / COLS ) ) ) * -0.81 ) )]) / 1 / dog / -55 ) ) / ---900.133 / rule() ) ) - --0.06 );
	if(( -( ( -840.9708 ) ) )){
	x *= ( Stark )
};
	y -= ( foo(-( ( --bar() * bar() - -COLS * Stark ) )) )
}
};
	-1 - bar(-9) - ROWS
}
}
def TABLE[( bar(83) )][i] {

}
var x = ( Ygritte )
assert foo(Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Sansa - foo(destroy(protect(-1,-COLS / -1),( -dog ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[y][i] {
	TABLE[COLS - bar()][( y )]
}
var y = Arya
def rule(Hodor,Jon,y){
	TABLE[rule(-ROWS,y)][( -26 / Ygritte )];
	if(ROWS){

}
}
def destroy(Hodor,Stark){
	if(Jon){
	Jon -= -ROWS
};
	450.71
}
def bar(Arya,Sansa){
	dog += bar(-( protect() ),foo());
	Stark /= ROWS
}
var Sansa = -bar(Ygritte,y,-TABLE[--Hodor][protect(Ygritte,-TABLE[Jon][mislead(COLS,TABLE[( COLS ) + Jon][TABLE[Jon][-1]])],Ygritte)])
def betray(Arya,Stark){
	if(dog){
	if(foo(ROWS / -0.08 - TABLE[bar(( Sansa ))][-0.98])){

} else {
	if(--0.31){
	TABLE[betray(betray(bar(53,-destroy(Ygritte),( destroy(( COLS )) ))),COLS)][y]
} else {

}
};
	-1;
	Stark += Stark
};
	rule(51,-Ygritte);
	( -( TABLE[( 300.37 )][( 1 )] ) )
}
assert COLS : "One can not simply parse himself"
def betray(y,y){
	if(x){
	dog *= ( -betray(330.185) )
};
	if(-bar(foo(-dog),TABLE[rule(( --dog ))][-( ROWS )],( --Arya - -1 ) * Arya / ROWS - COLS)){
	Hodor -= 0.2
} else {
	if(ROWS){
	ROWS;
	dog *= ( 580.586 )
}
}
}
assert destroy(x,betray()) : "One can not simply parse himself"
def betray(Stark,Stark){

}
def foo(Sansa){
	Jon += y * Stark
}
var dog = x
def TABLE[TABLE[( -Jon )][destroy()]][i] {
	Arya += 130.36
}
def protect(y,x,Jon){

}
def TABLE[COLS][k] {
	destroy(protect(-foo(betray(-TABLE[-840.0853][ROWS])) / ( x ),Jon),rule(bar(ROWS,Ygritte),( -0.17 )))
}
def TABLE[mislead(-34) * ( --( dog ) / foo() ) / 0.06][k] {
	if(betray(-betray() / TABLE[COLS / Jon][foo()])){
	if(y){
	-690.496;
	( -betray(-y - --Hodor / ( ( dog ) ),COLS) )
} else {
	if(y){
	if(590.44 - Stark){
	dog -= TABLE[( Hodor )][x];
	mislead(Sansa,TABLE[--0.73][COLS + -0.57],Arya)
} else {
	Arya *= ---TABLE[( ROWS )][-0.63]
};
	Jon /= --850.719
} else {
	if(x + ( TABLE[0.11][bar(betray(8) + COLS,COLS)] )){
	if(betray(62,Stark,Hodor)){
	Ygritte *= COLS * TABLE[( ( 120.19 ) )][bar(protect(-bar(),Sansa,-mislead(Ygritte,ROWS) / -0.82),COLS,dog)] / 34
};
	Arya
} else {
	if(( mislead() ) - ( --0.56 ) - ( Arya )){
	if(( COLS )){
	x -= ( x )
}
} else {
	x /= ( -930.9051 * mislead(ROWS) );
	-630.61
}
}
}
};
	if(TABLE[TABLE[COLS][-70 / ( 1 )]][-75] - 0.26){
	if(rule()){
	if(( Sansa / -0.16 * 39 * Arya )){
	Hodor /= -( -mislead(-x - Hodor / mislead(),( -Hodor ) - protect(destroy(destroy(rule(ROWS,mislead(-ROWS,( mislead(destroy(Stark / y,-ROWS) - ( 0.91 )) ))),---( 1 ),( betray(TABLE[ROWS][betray()],-( ROWS ) + mislead(),0.02) )),( COLS ),TABLE[-Jon][TABLE[Ygritte][bar(-ROWS)] / TABLE[-0.07][Arya]]) + TABLE[Sansa][-( Jon )] + Jon,-ROWS),TABLE[bar()][foo() * Stark]) );
	( ( bar() ) + ROWS ) / ROWS
}
};
	Jon + Jon
}
} else {

}
}
var Sansa = -ROWS
def destroy(Ygritte,Hodor){
	ROWS
}
def rule(Jon,Sansa){
	Jon -= ( foo(( ROWS / Arya ),( -550.19 )) )
}
def TABLE[( --Jon )][i] {

}
assert -1 : "One can not simply parse himself"
assert ( ( -Stark ) - 0.66 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Sansa){
	foo(-90,Ygritte);
	Stark *= ( Jon );
	if(-560.1905){
	Jon /= -0.61;
	bar()
} else {
	if(( dog )){
	x /= ( --34 - destroy(57,-41) );
	if(-( -0.21 ) * 97 - betray() * Ygritte - COLS){
	Arya /= TABLE[betray(bar(Sansa,-49),dog,ROWS)][( ROWS )];
	dog -= mislead(Jon,710);
	ROWS
}
} else {

};
	45;
	Arya /= -COLS
}
}
var Arya = ROWS
def TABLE[-30.039][i] {
	-630.559;
	if(y - Sansa - 0.75 / y){
	if(foo(-270.865)){
	foo(Ygritte);
	destroy(( Jon ),( 0.33 ),COLS);
	Ygritte += -0.57
};
	y += dog
}
}
def mislead(){
	if(Ygritte * ( ( -( ( -ROWS ) ) ) )){
	-Arya;
	-25;
	Stark += ( COLS )
};
	if(-COLS){
	-1;
	-1
} else {
	if(dog){
	( --0.49 - ( ROWS * 1 * Stark ) ) * destroy(COLS,( -TABLE[COLS][( ---TABLE[TABLE[destroy(-1 * 0.89 - ( betray(-0.49) ) + TABLE[Ygritte][( COLS )] * -rule(( ROWS ),COLS),destroy())][0.87]][-1] )] + -COLS / -0.62 + rule(-( TABLE[TABLE[TABLE[x][-TABLE[-400.74][660.6] + ROWS]][--950.972]][( -530.3 )] ),( -0.08 ),Stark) ) + protect(-0.85),( 590.654 ))
} else {

};
	if(-destroy(--( x ),x,Sansa)){
	y -= protect(foo(( TABLE[dog][Arya] )),foo(-COLS,0 * ( ( ( -TABLE[Arya][ROWS] ) ) ),destroy(( ROWS - foo() - ROWS - Arya - -COLS )) * TABLE[-( -17 )][ROWS]));
	if(64){
	dog -= Hodor / -0.95 - dog - ( ( TABLE[-380.4][Stark] ) ) + bar(( 40 ))
} else {
	TABLE[Sansa][( mislead(( betray(( -0.8 )) )) )];
	Stark;
	dog += 1 * ROWS + Jon
};
	if(TABLE[y][Arya]){
	ROWS;
	if(-COLS){
	if(--4){

} else {
	if(destroy(-( Ygritte ) + 35,-foo(rule(dog),1),---0.86)){

};
	Hodor *= ( ( -Hodor ) )
};
	Stark *= 0.73
} else {
	Ygritte -= mislead(-TABLE[rule(92,rule())][protect(-23,COLS)] + destroy(Hodor),Ygritte,Hodor);
	if(820.9 - y * ( -TABLE[( -y )][y] )){
	Hodor += y - ( TABLE[betray()][TABLE[-29][-ROWS]] + betray(( betray(ROWS,0.87) )) )
} else {

}
};
	-mislead(COLS,TABLE[betray(ROWS,( TABLE[ROWS][Arya] ))][betray(( protect(( 1 ),-ROWS) ),-0.01)])
}
}
}
}
assert dog : "Nothing burns like the cold."
var Stark = dog - y * foo() * destroy(-ROWS,61 - COLS) * -rule(( Arya ),770.247)
var Sansa = TABLE[-1][( -1 )]
def bar(Ygritte,y,y){

}
var Stark = -52
assert --490.018 / Arya : "One can not simply parse himself"
def betray(Arya){
	Jon += mislead(TABLE[foo(y,bar(-protect(0.56,200.215,ROWS)),-77 + -1)][COLS],( -ROWS * -870.6 )) - destroy(--860.039 * ( 65 ) / -40.2,foo(betray()))
}
assert ( TABLE[Hodor][ROWS / -730.9] ) : "One can not simply parse himself"
assert -50 : "Fear cuts deeper than swords."
def TABLE[( ROWS + foo(-protect(( -1 ) / -( TABLE[protect(-x,mislead(bar(0.28 / foo(1,ROWS)),Hodor),-1 + Hodor)][( ( -25 + Stark ) )] ) * ROWS)) )][j] {
	if(Stark){
	if(-55){
	if(( bar(( 0.28 ),-Arya) ) * mislead()){
	-560.94;
	if(1){
	if(destroy(betray(y * foo(rule(( x ),Ygritte,( -84 )),Hodor) / Sansa),TABLE[rule(-( protect(COLS,mislead()) ),TABLE[---1][bar(Sansa,Hodor)],Stark)][77 / -1],-( -Stark + bar(( -65 ) / -( -0.98 ) + COLS,1) + 79 * dog * 0.07 ))){
	COLS
} else {
	-83;
	Hodor *= ( -Ygritte )
}
}
} else {
	90.027
}
} else {
	-x
}
} else {
	Sansa -= ROWS;
	protect(ROWS,-COLS,( ( ( -0.46 ) ) ) - ( 490.0257 ))
}
}
assert ( rule(44,( -destroy(( -foo(800.5041 / -Stark,Hodor) - ( -95 ) ),mislead(1 / Jon,foo()),TABLE[Ygritte + 1][protect(-1)] * TABLE[-TABLE[9][( destroy(42) )]][( protect(Sansa,-( -230.31 )) )]) ),protect(Ygritte,COLS)) ) : "Winter is coming"
def TABLE[mislead(620.23,10 / ( protect() ) / TABLE[COLS][( ( -( ( -( bar(-0.93) ) ) ) ) ) * 0.55 - ( bar(mislead(bar(),TABLE[-( Sansa )][TABLE[-foo(destroy(( ( ROWS / ( TABLE[( TABLE[-( COLS )][Stark] )][COLS] ) ) ),30 * destroy(TABLE[-Hodor - -0.13 * bar(ROWS)][--0.59] / -15 - mislead(-betray(( Arya ),COLS,-Sansa),-34,-1 * protect(-( rule(44,( TABLE[-39][-950.6] ),-rule(-38)) ),Stark / protect(-Sansa))),-TABLE[( Sansa )][betray(-0.92,--( -660.06 ))])))][mislead(( ( 0.72 ) )) * Hodor]],--Stark)) )] / Stark)][j] {
	if(1){
	if(-0.16 / -TABLE[x][65] * Ygritte){
	Sansa *= y + y
};
	if(-32){
	if(COLS){
	Sansa += Stark
} else {
	if(Hodor){
	dog *= rule(protect(( TABLE[20][TABLE[foo(-COLS) * 94][( bar(x,-Stark) )]] / betray(( -1 ) / ( 510.383 )) + -1 / ROWS )))
} else {
	if(dog){

} else {
	mislead(ROWS,Stark / 1,bar(Jon,Jon,mislead(--ROWS,-0.66)));
	y /= Ygritte
};
	( ( -0.69 - Stark ) )
}
};
	Stark += mislead(-0.8 - Sansa)
} else {
	if(-( betray(betray(TABLE[-200.4312 - COLS][49] + 400.21),-4 + Hodor) )){

} else {
	-foo()
};
	if(x * --23 - ( ( ( ROWS - ( ---Hodor ) ) ) ) + Hodor / ( destroy() ) - TABLE[COLS][-y]){
	if(-0.41 / --28){
	-1 + betray(-Jon)
}
} else {
	( ROWS )
}
}
} else {

}
}
def TABLE[( x )][j] {
	dog /= -1
}
def foo(Ygritte){

}
def TABLE[Hodor][j] {
	rule(COLS,TABLE[Stark][foo(Arya,-COLS)])
}
def TABLE[( bar() / ( y ) )][k] {
	if(1){
	Hodor + -TABLE[COLS][( 350.57 )]
} else {
	x *= ( rule() );
	Hodor -= rule(betray(Ygritte) + foo(y))
};
	Ygritte /= COLS
}
def foo(Ygritte,dog){
	if(betray(---( -0.45 ))){
	mislead(-0.41,Sansa / ( ( Jon ) ) - ( ( -COLS ) ) + COLS,-0.96) - TABLE[Hodor][( Hodor )] - Hodor * TABLE[TABLE[-90.569][Jon] * COLS][ROWS] * bar()
} else {
	bar(( ( ( TABLE[-Ygritte][ROWS] ) ) / destroy(( TABLE[( destroy(( -29 ),Sansa,-0.2) )][( rule(rule(( 0.16 )),( protect(--y) - protect() - ( betray(ROWS,TABLE[TABLE[-y][destroy(-( ( 1 ) ),-( Jon ))]][bar(y - -1 / COLS,-0.97)]) ) )) )] ) - -Stark) ),Sansa,ROWS)
};
	Ygritte += COLS;
	dog -= --0.05 * ROWS
}
var dog = destroy(Stark)
def TABLE[-TABLE[( -65 )][Jon]][k] {
	Stark *= --( -ROWS ) - ( ROWS )
}
var Arya = ( rule(-x,rule(1)) ) - -650.157 / ( -( -1 ) ) * Arya / mislead(Jon,COLS)
assert --0.65 / COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = -( dog )
def TABLE[protect(y,( COLS ))][i] {

}
def TABLE[TABLE[bar(( 69 ))][-0.16] + 0.12 + ( -ROWS )][j] {
	Sansa += -betray(ROWS + TABLE[-ROWS][-1],-0.88)
}
assert ROWS : "What do we say to the Lord of Death?"
var Jon = betray(ROWS,-1,COLS) + ( -0.88 ) - 48
assert Stark : "What do we say to the Lord of Death?"
def TABLE[TABLE[( -betray(( Sansa ) * -Hodor,foo(-betray(( COLS ),Arya * -0.62 * ( x * protect() ),-690.79)),destroy(COLS,--ROWS)) ) / Stark][-Hodor]][j] {

}
var Sansa = ( Ygritte )
var Arya = ( --y - ( ( Jon ) ) )
assert -rule(mislead(bar(COLS * betray(COLS,-920.63,-mislead(-150.608 * ( ROWS ) * foo() / rule(( -90 ),( mislead(mislead()) )) * --0.1,Ygritte)) * ( Jon ) - rule(0.89 - Sansa - ( -0.79 ) / mislead(),( ( ---Hodor * ---27 - rule(destroy() + ( ( Ygritte ) ),-y) ) ))),dog,TABLE[ROWS][x]),-0.58) : "One can not simply parse himself"
assert ( protect(COLS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( TABLE[-60][( 77 )] ) : "Winter is coming"
def TABLE[-0.24][i] {
	if(-1){
	( Jon ) - ( ROWS ) / ROWS / ROWS + mislead(rule(protect(dog,protect() - COLS - Arya - ( TABLE[x - -y][-0.35] ) / Arya / ROWS,TABLE[dog][-betray(1,-( -Jon ))])),Jon / ROWS) * -ROWS - -foo(-0.51)
} else {
	betray(betray(TABLE[bar(TABLE[destroy(-betray(( dog + --Jon )),COLS) * TABLE[-1][( COLS - ( ROWS ) )]][---foo(COLS,Arya,COLS) - --( 75 ) + rule(ROWS,bar(( TABLE[( -620.224 + -y )][( Stark + protect(dog,ROWS) )] )),160.8021 + -( 0.9 ))])][250.754] / mislead(COLS)) - -( rule(Ygritte * -40) ))
}
}
assert 5 : "Fear cuts deeper than swords."
assert -1 : "Nothing burns like the cold."
assert Sansa : "One can not simply parse himself"
var Arya = betray(( COLS ),430.633,( ( bar(Jon,Stark) / ( rule(x) ) ) ))
assert -630.4537 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(ROWS,COLS,( -0.13 )) : "Winter is coming"
def TABLE[-TABLE[( ROWS )][( ( COLS ) )]][k] {
	if(ROWS - 72){
	if(-COLS){
	Ygritte /= -84;
	TABLE[( --280.57 )][x];
	if(( bar(ROWS,-TABLE[-95][( COLS )] * -87) )){
	x /= -dog + bar(-Hodor / -57);
	Ygritte -= betray(-72);
	Hodor += Ygritte
} else {
	if(ROWS){
	if(Stark){

}
} else {
	( COLS );
	TABLE[bar()][rule(bar())]
}
}
};
	if(-0.54){
	Stark += TABLE[( Ygritte - ( betray(-0.55 - ROWS,dog,( foo(destroy(0.33 - betray(( ( 78 ) ),-0.53)),Sansa) )) ) * rule(TABLE[ROWS][destroy(( -0.28 ))] * --0.87) / Sansa )][dog / ROWS - rule(dog / foo(( destroy(Hodor / --x,bar(Arya)) ))) - Arya];
	Arya -= mislead(Ygritte)
} else {
	x -= ( --dog )
};
	Arya
} else {
	if(TABLE[--Ygritte][betray(Sansa,Sansa)]){

} else {
	mislead(Ygritte,720.3234 * destroy(0.86 + Arya),( COLS ));
	1
};
	if(-( Ygritte )){
	if(( -mislead(ROWS,( COLS )) )){

} else {

};
	-protect(TABLE[x][destroy(x)])
}
}
}
def TABLE[TABLE[Sansa][-TABLE[destroy()][Arya / Arya]]][k] {
	mislead(( -560.652 ),Sansa);
	if(-6){
	if(( ---92 )){

} else {

};
	x /= ( 95 )
};
	x -= dog
}
def TABLE[( y )][j] {
	if(Sansa * ROWS * Ygritte){
	x /= mislead(dog,TABLE[COLS][COLS]) - ( ROWS )
};
	if(( ( ( 0.75 ) ) )){
	--protect(-72,0.09);
	Ygritte -= ( -( Stark ) );
	if(COLS - -1){
	if(TABLE[( ROWS / betray(-61) ) - -99 / -0.8 / ( ( y ) )][-27]){
	x
} else {
	Jon -= 580.086
};
	dog *= ( ( ( ROWS ) ) ) * Stark;
	if(ROWS){
	y /= Jon;
	y
}
} else {

}
};
	ROWS - TABLE[( Ygritte )][betray(900.29,-121,TABLE[-x][Ygritte + -88] - TABLE[COLS][( ROWS )])] + 31
}
var y = y * -690.52 * ROWS
def bar(dog,Arya,dog){

}
def TABLE[( -1 )][i] {
	x *= protect();
	-( Hodor )
}
def TABLE[990.4][i] {
	if(-x - TABLE[foo(mislead(-490.9 - ( ( 16 ) ) - 1 / Hodor),-Arya)][-( -( ( ROWS ) ) )] * -( protect() )){
	( betray(ROWS - COLS,rule(betray(),Ygritte,( foo(0.93,71) ))) - Jon )
} else {
	Hodor += y;
	if(x){
	if(0.46){

} else {

}
} else {
	if(y){
	Sansa -= Jon;
	if(( Hodor )){

} else {
	Ygritte
}
};
	Stark += Jon / ( protect(dog,( -0.1 * ( ( Arya ) ) ),rule(COLS)) ) / -betray(COLS + y,-1,( ( 890.525 ) )) + --TABLE[destroy(-mislead(86) * ( TABLE[destroy(destroy(( ( ( -Jon ) ) )) / -0.05 / protect(-rule(-rule(-97,ROWS),foo(( ROWS )) + ( -destroy(COLS,Sansa) ) / 1)),rule(0.85,-0.45,( Jon )))][TABLE[rule(Jon,( ( ROWS ) ))][Ygritte]] ),COLS)][destroy(ROWS,ROWS,( x ))];
	-TABLE[-0.86 + betray(TABLE[-x][COLS],( 0.92 ),( COLS )) * ( ( rule(---destroy(betray(-0.42,TABLE[TABLE[62][( ( Ygritte ) )]][( -0.84 / --0.03 )],COLS))) ) )][82 + Sansa]
};
	if(Arya){
	-0.71;
	Ygritte += ( --0.1 );
	if(betray(betray(0.35))){
	Arya /= -bar(-( ( -0.19 ) + foo(TABLE[TABLE[0.84][-( ( x ) )]][Stark],-( destroy(-270.66) ),TABLE[Stark + -Arya][( -1 )]) ) * ( -92 ) - ( foo(Hodor,x) )) + -750.577
} else {
	Arya /= ( -61 - destroy(( ( -0.84 ) )) );
	if(mislead(( -( foo(destroy(( ( ( ( ROWS ) ) ) ),TABLE[COLS][bar(( -120.8 ))],0.81),x,foo()) * ( ( TABLE[( ( 18 ) ) / -0.17][-dog - y] ) ) ) ),( ROWS ))){
	foo(( ROWS ) * -0.15,( 0.63 )) / x / bar(--9) - protect(( ROWS ),dog + rule(),Stark * -x)
}
}
} else {
	if(--83){
	if(betray(( rule() ))){
	TABLE[( -( ( --0.68 ) ) )][Arya]
}
};
	Sansa /= ( 1 );
	Ygritte *= ( COLS )
}
}
}
var Sansa = dog
def foo(x){
	if(-0.44){
	y;
	-mislead(Hodor)
}
}
def mislead(Arya){

}
assert TABLE[( dog )][--bar(Hodor * ( ROWS ))] : "One can not simply parse himself"
def destroy(dog){

}
assert rule(-Stark,0.04,destroy(--0.83)) : "Nothing burns like the cold."
def TABLE[-0.21][k] {
	rule() - ( -1 );
	y;
	-Hodor
}
def mislead(Arya){
	Hodor /= mislead(ROWS,ROWS,( ROWS ));
	if(( protect(-0.17,COLS) )){
	Hodor /= 1
};
	if(TABLE[( -COLS ) - rule(protect(( TABLE[dog][1] ),---( COLS ) - ( ( --3 - Sansa ) ) + -0.34),( ( 620.15 ) ),-12)][-( COLS )]){
	Stark -= ( betray(foo(bar(TABLE[TABLE[destroy(Jon,TABLE[0.77][( ( ROWS ) )]) * ROWS][( foo(TABLE[--0.03][foo(( -( Hodor ) ),rule(( foo(0.72) ),Arya * -ROWS))]) )]][betray(TABLE[foo(ROWS)][1])])),-1,betray(ROWS,TABLE[bar(-240.92,COLS - -41,-13) / Jon * ROWS][ROWS],TABLE[-Arya][rule(rule(),TABLE[1][410.7] + dog)] / -TABLE[ROWS][-mislead(TABLE[-( 50 )][( Sansa )] + TABLE[protect(-1) - TABLE[1][--mislead(-ROWS)] * foo(protect(-( mislead(( foo(Ygritte) ),( ( ( TABLE[--betray(( -mislead(Sansa,Stark,Arya) ),-Sansa,0.74)][foo(0.27,-TABLE[-bar() - ROWS][( 0.41 - x - Hodor )])] ) / COLS ) )) )))][COLS] + destroy(COLS) + COLS,ROWS,rule(-Hodor + Stark,betray(mislead(-ROWS)),Ygritte))])) );
	y /= ( ROWS )
}
}
def TABLE[--( -1 + -17 ) / y / -99 * betray(Stark)][i] {
	Hodor -= TABLE[3][-bar(( Arya ),TABLE[-Sansa][-( TABLE[protect()][0.02 * 95] )],( -Ygritte ) - ROWS)] - --TABLE[betray(COLS)][COLS]
}
def protect(dog){
	Ygritte *= 650.8;
	Ygritte -= ROWS
}
def TABLE[x][j] {
	Arya += ( bar() );
	Sansa -= betray(( betray(( -mislead(bar(33,( ROWS - foo(-0.26) ),ROWS),rule(destroy(bar(-0.46),y,TABLE[Arya][COLS]),TABLE[Hodor][-21]),rule()) )) ),x * TABLE[47 + --( -0.09 )][protect(TABLE[TABLE[Arya][-Hodor]][protect(betray(-870.8342),( -42 ),( mislead(Sansa,0.01) ))])] * 1);
	( -( dog ) )
}
def destroy(Sansa,Sansa){
	( -Sansa )
}
var Hodor = ( --x )
def rule(x,Arya){
	dog += ( ---( Arya ) );
	Sansa /= 1
}
def TABLE[( y )][k] {
	if(Arya){
	if(-59){

} else {
	if(Ygritte){
	---0.03 - Stark + COLS
} else {

};
	if(bar()){

} else {
	if(ROWS){
	dog -= -Ygritte
} else {
	32 - y;
	ROWS;
	dog -= 170.7237
}
}
};
	if(1){
	betray(-COLS)
};
	x /= ( foo(Stark - ( ( y ) ),-( --mislead(COLS) ),( TABLE[0.83][-( Hodor )] )) )
};
	if(protect(0.57)){
	if(Ygritte){
	if(Jon){
	Stark += -0.09;
	y += Jon
}
} else {
	Ygritte /= -bar();
	dog += ROWS
}
} else {
	ROWS + Ygritte;
	if(-ROWS){
	if(foo(( -1 ))){
	y / ROWS;
	if(-x * -0.72){
	Stark += -39
} else {
	if(betray(-COLS,TABLE[950.2][( TABLE[Jon][( 0.24 )] )])){
	if(-0.62){
	Sansa += dog;
	Stark
}
};
	y *= 0.23
}
} else {
	y -= rule(1);
	protect(0.34,COLS);
	ROWS
};
	Sansa += ( ROWS )
} else {
	Jon
}
};
	Stark *= destroy(-Sansa + protect(TABLE[( 47 * Ygritte )][( --( TABLE[-Arya][--( 0.21 ) - -( 0.56 )] ) - TABLE[( Ygritte )][ROWS] - ( 1 ) ) - -35],betray(protect(-1 - ( Arya )),( ( -530.56 ) / -ROWS / foo(betray(-x,Arya),betray(-betray(dog) * -x)) ))) - --( -protect(Arya) - TABLE[Stark][( 1 )] * dog / x + -( -COLS - y ) / Sansa ),--( 0.68 ),bar(( protect(-0.86,-830.3702,-x) )) + dog * 40 / TABLE[x][-dog * dog])
}
var Ygritte = bar(rule(dog,destroy()))
assert rule() : "What do we say to the Lord of Death?"
assert mislead() : "One can not simply parse himself"
assert COLS : "Winter is coming"
def bar(x,Ygritte){
	x /= dog;
	dog /= -ROWS
}
def TABLE[y][j] {
	if(( COLS )){
	COLS * TABLE[Hodor + Arya][mislead(( ( y ) ))]
} else {
	if(Jon){

} else {
	if(-65){
	-( foo(ROWS,protect() + -1,betray(( ( mislead(mislead()) ) ),ROWS) / dog) )
} else {

};
	if(-destroy(---TABLE[protect(y + -rule(-Arya,22),protect(-67,x),Stark)][0.57])){

}
}
};
	( 0.38 )
}
var Arya = protect(( betray(protect(-( --0.06 ),COLS,TABLE[Ygritte][dog] / 93)) ))
var Hodor = COLS / mislead(dog * TABLE[-( rule(y,( 56 + ( foo(mislead(( --foo(( -betray(mislead(ROWS),Jon) )) ),( COLS ) * -570.8535,( -34 )),destroy(( bar(( -( ( bar(-COLS,-1) ) / ( --( -COLS ) ) ) ),-291,( 0.32 )) ) + bar(( -TABLE[-( COLS )][( 67 )] ))) * ( -mislead(( ROWS ),betray(-( destroy(COLS,-12) ))) )) ) )) )][( ( x ) )]) + ROWS + -90.273
assert -bar() * ROWS : "What do we say to the Lord of Death?"
def TABLE[( ROWS )][i] {
	if(mislead(Stark,( 0.97 ) * ( y ))){
	dog -= -( foo(Sansa,ROWS) - ROWS - -56 ) / Arya;
	90.439
};
	-( -0.12 )
}
def TABLE[--95][k] {

}
assert ( ( Arya ) ) : "Winter is coming"
def TABLE[TABLE[y][Sansa]][i] {
	x *= Stark;
	if(( Jon )){
	if(COLS){
	Ygritte += COLS;
	Ygritte += -y / ROWS / protect(-1,( Hodor ))
} else {
	Sansa += 93
};
	destroy(dog,( COLS ))
} else {

}
}
var Ygritte = ( TABLE[-( Ygritte )][-0.1 - ( y )] )
assert ( TABLE[Jon][Jon] ) / Arya : "One can not simply parse himself"
def foo(){
	720.621
}
def TABLE[ROWS][k] {
	dog += Ygritte
}
assert Arya : "Nothing burns like the cold."
def rule(Jon){

}
def protect(Arya,x){
	x -= ( -dog )
}
assert betray(Arya) : "Fear cuts deeper than swords."
var Sansa = -0.37
assert x : "What do we say to the Lord of Death?"
assert Stark : "One can not simply parse himself"
assert ( -0.75 ) : "Fear cuts deeper than swords."
assert Stark : "Nothing burns like the cold."
def foo(Arya,Ygritte){
	Sansa *= 0.89;
	( -1 / 0.19 );
	-0.67
}
def rule(){
	-0.87;
	COLS / ( --foo(TABLE[Sansa][-y],( COLS )) - ROWS * -10 ) - ( foo(foo(-betray(ROWS,-0.18,670.125),betray(COLS,Hodor,0),-( Arya )),-ROWS,ROWS) ) + -23
}
def mislead(Arya){
	rule(COLS,( -23 ),( ( ( protect(-Stark + destroy()) ) ) ));
	-betray(---destroy(-( destroy() + destroy(COLS) ),destroy(ROWS)))
}
def rule(Sansa,dog,y){
	( mislead(0.76) )
}
def TABLE[foo()][k] {
	Hodor /= x;
	x
}
def foo(Arya,Jon){
	Arya /= -1
}
assert betray(0.4,COLS) - ( ( TABLE[mislead(--0.24,--0.66)][destroy() * Hodor] ) ) : "What do we say to the Lord of Death?"
var x = ( COLS )
def TABLE[Ygritte][i] {
	if(-1 - TABLE[y][--0.93]){
	Jon *= -foo(COLS / rule(),dog,mislead(( ( Hodor ) )));
	-83
}
}
var Hodor = Hodor
assert ROWS : "What do we say to the Lord of Death?"
var x = -Hodor
def rule(Hodor){
	Hodor / COLS;
	if(Ygritte){
	if(-19){
	19;
	( bar(Sansa,dog) );
	Stark
};
	if(( -bar() / -20.17 )){
	if(Sansa){
	Hodor /= betray();
	if(ROWS){
	Arya * ( -TABLE[-0.03][-( -mislead(TABLE[ROWS][Jon],( --Ygritte )) )] )
} else {
	Hodor -= dog;
	if(COLS){
	Arya += y;
	Ygritte *= ( ( -0.32 ) - rule(rule(-1 * -( ROWS ),ROWS)) - ( Ygritte ) )
} else {
	if(y){
	if(-rule(--44)){
	-( ( COLS ) )
};
	-1
} else {
	-( ( COLS ) ) + -Sansa
};
	if(( -foo(Hodor - -1,mislead(ROWS)) )){
	970.26 * -0.79 * -( --22 ) * y;
	Ygritte += ( rule(TABLE[0.51][( -0.04 )]) );
	Arya += dog
} else {
	( ROWS );
	y *= ( ( TABLE[-( 24 + TABLE[TABLE[Hodor][( dog )]][COLS * ROWS - rule(( dog ),-160.34,---0.43 + ( -1 ))] )][bar(-Jon + COLS,Arya)] ) )
}
};
	Stark /= --9
}
} else {
	foo(97,-protect() * 0.75 + 62);
	if(-0.78 - y * ( ( ( -1 / 150.4 ) ) )){
	Jon
} else {
	if(Hodor){
	Ygritte -= -Sansa
}
};
	y *= ROWS
};
	COLS;
	protect()
} else {
	dog *= destroy(( -1 + -0.78 - -( -Sansa ) / y )) - foo();
	--Hodor;
	Sansa -= TABLE[y][( 71 )]
}
} else {
	if(protect()){
	Jon
} else {
	Stark - 0.37
};
	Arya /= -bar(Ygritte,( ( rule(ROWS) * y ) ))
}
}
def TABLE[--( Ygritte / foo(-60) )][i] {
	TABLE[Stark][-( COLS )] / -bar(protect(Hodor),66,-Stark) / COLS;
	-0.39
}
assert ( -130.2889 / ( foo(-( -( ROWS ) ),protect(COLS)) ) ) : "Nothing burns like the cold."
assert Arya : "Nothing burns like the cold."
def destroy(x){
	TABLE[1][-95]
}
def TABLE[( x )][k] {
	y += Sansa
}
var y = COLS / foo(( betray(( -1 )) ),Ygritte)
def TABLE[ROWS][i] {

}
var Hodor = ROWS + COLS
var dog = bar(mislead(( COLS ),-1))
def TABLE[( -protect(( --0.85 )) )][i] {
	Stark
}
def bar(dog){
	if(TABLE[betray()][Ygritte]){
	Hodor *= rule(COLS,--0.6 / ( rule(-x * -( bar(( destroy(COLS) ),-COLS) ),-betray(Sansa)) ) * ---31);
	if(0.4){
	Ygritte /= ( -COLS );
	Ygritte
}
} else {
	COLS;
	if(foo(Jon)){
	Stark /= TABLE[y][89];
	Stark /= -( -( -( ( foo(TABLE[-foo(mislead(( 0.27 ),( ROWS )),protect())][-foo()],( -( ( betray(bar(--ROWS,COLS)) ) ) )) ) ) ) )
} else {
	-Jon - betray(( --36 ))
}
};
	if(destroy()){
	destroy(destroy(( protect(Jon) ),ROWS),betray(( ( Jon ) ) * Arya,-TABLE[-270.084 + 44 + ( Sansa * -85 )][Ygritte],bar(( TABLE[TABLE[( -0.67 ) * ROWS][ROWS]][-( -Hodor ) / ( mislead(ROWS) ) - 1] ),dog + rule(----ROWS,( ( --( -50.051 ) * -58 ) ))) / ROWS)) * dog
}
}
var Stark = 0.68
assert Hodor : "Nothing burns like the cold."
def bar(dog,y){
	if(Arya * TABLE[Jon][Hodor]){
	Hodor /= 0.91;
	( TABLE[Sansa][---0.39] ) / -38
} else {
	betray(COLS,Jon);
	if(COLS / mislead(--Jon)){
	dog /= TABLE[12 * -( COLS )][Ygritte];
	if(-ROWS){
	if(Hodor){
	Jon -= Jon;
	-x * -( Hodor )
} else {
	ROWS;
	if(ROWS){
	dog /= ROWS
}
};
	if(-( ( rule(83,-1) ) ) - ( ( ROWS / ( Jon ) ) * dog )){
	Jon -= x;
	dog -= Stark
} else {
	( Hodor )
}
} else {
	dog /= mislead(ROWS,Jon)
}
} else {
	rule(-0.34);
	( ( -21 ) )
};
	72
};
	destroy(dog)
}
var Sansa = x
assert -ROWS : "Winter is coming"
assert foo(54,-1,-0.62) : "Fear cuts deeper than swords."
assert Ygritte : "Fear cuts deeper than swords."
var Sansa = ( COLS )
var dog = ROWS * ( betray(--rule() + --93,TABLE[Hodor * -( ( ROWS ) )][( -52 )]) ) - ( ROWS - COLS - COLS + Jon - -33 )
var Sansa = rule(bar(240.68),ROWS)
def bar(x,Ygritte,Arya){

}
var Jon = -0.58
def TABLE[0.54][i] {
	( COLS );
	TABLE[Ygritte][( y )]
}
def TABLE[-( -bar(protect(( ( -ROWS + -( -ROWS - TABLE[( Arya )][rule(ROWS - --ROWS * 0.58)] * ROWS ) * ( ( -Sansa ) ) ) ),TABLE[-ROWS / -40][( protect(Ygritte,rule(dog - -ROWS)) / 0.69 )]),-( betray(Stark) )) )][k] {

}
var Jon = ( ( 0.95 ) )
assert -y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ROWS ) + Hodor][i] {

}
assert rule() : "What do we say to the Lord of Death?"
var Stark = -0.23
def rule(Hodor,dog){

}
var dog = Ygritte
def TABLE[Arya][k] {
	Ygritte -= Hodor;
	Ygritte += ( -COLS )
}
var dog = Sansa
assert ---ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[rule(33,( ROWS ),0.95) + Arya * 83 + TABLE[ROWS][y]][i] {
	Ygritte -= -( -rule(y,--56 / rule() + ( TABLE[protect(foo(( ( Jon ) - -19 / ( COLS ) ),TABLE[Arya][0.17 - Jon],betray(Stark,dog)) - bar(( ( foo(-0.18,( ( Hodor ) )) ) )) + COLS,( TABLE[ROWS][0.96] ))][destroy()] ) / -1) * ROWS ) - bar()
}
var Ygritte = -( y )
def TABLE[y * COLS][i] {
	protect(TABLE[protect(rule(),mislead())][-33] - 0.62);
	dog /= ( ( TABLE[-710.486][COLS] ) )
}
var Jon = Stark / ROWS
def destroy(Ygritte){

}
def rule(Hodor){
	--21;
	-54;
	( 44 ) - ( 0.41 ) - Jon + Stark - bar(destroy(( -Arya )))
}
def destroy(Arya,x){
	TABLE[dog][-1 + COLS / ( destroy(46,-( ROWS * ( ( ( ( -( -840.384 ) ) ) ) - dog ) + y / TABLE[foo()][destroy(-( betray(-270.954) ))] / dog - -840.38 ) + Hodor) )];
	Arya += 85;
	if(( 0.51 )){

}
}
var Arya = ( Ygritte )
assert ( -100 / ( rule(( -( 0.87 ) ),-Ygritte) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ROWS ) : "One can not simply parse himself"
assert 92 : "Winter is coming"
def TABLE[Jon + dog][j] {
	18
}
def TABLE[0.83 / TABLE[Stark][-Stark]][j] {
	if(-mislead() * ( COLS * --( ROWS ) )){
	if(( -destroy(( TABLE[destroy(( --92 ),43)][foo(COLS,mislead(dog,( ( foo(y) ) / -0.92 )))] + Jon ),( bar(ROWS + ( -x * destroy(TABLE[COLS][-0.62]) * --TABLE[( protect(( 0.17 )) )][bar(bar(-Jon,0.06,TABLE[Ygritte][mislead(-77)]),-0.65)] ),ROWS) ),( bar(Ygritte,( COLS ) + Jon + ROWS) )) / ( ( -0.12 ) ) ) * Stark){
	if(( ( --( rule(0.21) ) * dog * ROWS + ( 0.06 * --COLS ) ) / rule(ROWS + TABLE[50][ROWS] - -( Arya ),bar(-COLS,1) - destroy(-38 * --( COLS ),protect(-COLS,-1,92))) )){

} else {
	Hodor *= bar(-( ( COLS ) + Stark / rule() - ( ( protect(---mislead(-( ( ( COLS - -54 ) ) ))) ) ) ));
	TABLE[( Sansa )][0.92]
}
};
	y += y
}
}
def TABLE[Stark][j] {

}
def TABLE[( 92 )][j] {
	if(TABLE[protect()][( ( -370.27 ) )]){

};
	( rule(COLS) )
}
assert ( -1 ) : "Winter is coming"
def rule(Sansa,Stark){
	destroy(x);
	if(-1){
	Arya -= -98;
	if(foo(-1,-770.205)){
	if(( COLS + ( -0.85 ) )){
	-mislead(( -( destroy(---ROWS * 0.12) ) ),Stark,--( ( ROWS ) ))
} else {
	COLS
}
}
}
}
var Hodor = ( 1 )
def TABLE[protect(COLS,840.603)][j] {
	if(COLS){
	Arya -= ROWS;
	if(1){
	-ROWS - ROWS
} else {

};
	if(COLS){

} else {
	( -dog )
}
}
}
var y = --ROWS
var x = --COLS / ( TABLE[rule(Hodor,( ROWS / 23 ),TABLE[Hodor][bar(( 0.96 + x ),-TABLE[dog][-Hodor],bar(( -mislead(-betray(-( ( -( -0.69 ) ) ),--0.58 * Arya / Ygritte / ( ( -ROWS ) ) - Sansa)) ),COLS))])][dog] )
assert ( -TABLE[1][( -0.94 )] ) : "Fear cuts deeper than swords."
assert -destroy() : "Fear cuts deeper than swords."
var Sansa = 33
def TABLE[COLS][i] {

}
var dog = --0.53
var Hodor = 0.92
var Stark = 560.14
var Ygritte = rule(foo(),5)
def foo(y){
	-( -0.56 - bar() );
	Stark / 0.79 * COLS;
	if(-COLS){
	if(ROWS){
	( ---66 );
	if(--0.21){
	Sansa += betray(TABLE[COLS / -84][TABLE[-( protect(y) / protect() )][bar(( --ROWS + -mislead(Sansa + ( -ROWS )) - -44 - ROWS ))]],( ( -foo(Sansa,-1,COLS) ) ) / destroy(rule(-1,bar(0.91,betray(--Jon),ROWS)),( y ),TABLE[( rule(--protect(x),Sansa) )][( -0.74 )] - ( Stark ))) - -55;
	if(Stark){
	protect()
};
	if(( x )){
	Hodor *= x;
	if(( protect(( destroy() ),( ( rule(Sansa,Stark) ) - -( -ROWS / -betray(TABLE[Sansa][x] * --( Jon ) * COLS + -0.3) ) ),destroy(TABLE[( 48 )][rule()],TABLE[ROWS][rule()],-( bar(-Hodor) + ( ( TABLE[-240.7116][foo(ROWS)] ) ) ) / Jon)) * Ygritte )){
	Stark /= ( 1 )
} else {
	( Ygritte ) / 43
}
}
} else {
	if(-Jon / rule(72,ROWS) - -COLS - --TABLE[-120.37 / ( betray(820.692,TABLE[-ROWS][betray() + ( --35 - TABLE[-foo(Ygritte,destroy(bar(-10) - ( rule(rule(2)) ) * rule(ROWS,-dog),x / -0.27 / COLS),( Ygritte * COLS / -COLS / ( COLS ) ))][0.81] - ( -( COLS * ROWS ) ) )]) ) / Jon][-TABLE[--Stark][ROWS]] - COLS){
	if(0.49){
	if(Ygritte){
	( -destroy(-Jon,TABLE[COLS][dog]) - --6 - -2 * bar(ROWS,Hodor) ) * ( -1 );
	Jon += --Hodor
} else {
	if(Hodor){
	if(Stark * mislead(-0.84)){
	if(Hodor){
	if(( ( dog ) )){
	foo(rule(-300.674 - COLS,protect(COLS,( destroy(( ( 0.78 ) / ( Jon - --( TABLE[mislead(-( COLS ),-0.03) + COLS][( Ygritte )] ) ) ) / ( Hodor ),destroy(rule(Sansa,x),-( ( TABLE[( COLS )][-0.08] ) ) * 38,TABLE[( -0.97 )][ROWS]) * Stark * ROWS - mislead() * -0.08,TABLE[( 1 )][-destroy(-18,COLS + ( ROWS ),670.532 + ( ( -Stark ) ) / y)] * ( mislead() )) ),foo(Arya) / 0.79),Stark),-20.257)
};
	if(-500.271){
	if(Hodor){

} else {
	x
};
	if(Hodor){
	-12
}
} else {
	Hodor /= 0.23
};
	if(( ( ROWS ) )){
	if(--( COLS )){
	-ROWS
}
}
}
} else {
	if(destroy(mislead())){
	if(Stark){
	if(-0.55){
	Hodor += Jon
};
	if(-( -rule(( ( mislead(TABLE[ROWS][--protect(0.94,TABLE[37][( 1 * COLS )])],--1) ) )) - Sansa / ( foo(TABLE[-0.03][( ( COLS ) )],-( COLS )) ) )){
	TABLE[( TABLE[COLS][dog] ) - foo() * -920.5][Hodor] / ( 1 ) - -TABLE[TABLE[( Arya * rule(foo(COLS,y,-bar(( Hodor ),mislead())) / betray(( Arya ),y,Ygritte),-98) )][COLS / destroy()] + COLS][COLS];
	COLS
}
} else {
	1 - -210.7;
	TABLE[-1][1];
	-foo(protect()) - --( Stark - Stark ) + TABLE[Sansa][foo(-0.93) / ( -45 * Arya )]
}
};
	if(TABLE[ROWS][mislead(bar(( bar() )))]){
	--420.1;
	x /= TABLE[( COLS )][-39]
} else {
	Stark /= ( rule(betray(( Ygritte ),mislead(-( -250.21 )),--980.66),( ( ( ROWS ) ) ),rule(dog,x)) )
};
	Stark += ( TABLE[( -0.46 )][COLS] ) / COLS
};
	if(-0.71){
	if(ROWS){
	Ygritte -= Sansa;
	if(COLS){
	Stark;
	Arya
}
};
	Arya /= foo();
	Jon += -( ROWS )
} else {
	Hodor /= 0.74;
	Jon /= Arya / 0.54 / TABLE[-( -9 + dog )][rule(destroy(18,ROWS,ROWS),Ygritte)]
};
	y *= destroy(TABLE[0.77][Jon] - COLS / Ygritte / protect(-Jon))
};
	if(1){
	Jon -= ( ( -1 ) );
	mislead(rule(COLS,( Sansa )),-29,-900.9)
};
	y /= -1
}
} else {
	---Hodor
}
}
};
	ROWS
} else {
	dog += -( Stark );
	if(COLS){
	if(ROWS + TABLE[Arya][rule(-( ( TABLE[-60 - Sansa][-( mislead(COLS) ) / destroy(TABLE[dog][betray(Arya / x)],( -70 ))] ) * mislead(Ygritte) ))]){
	y;
	if(0.78){
	Ygritte -= ( mislead() );
	-1;
	-Hodor
}
}
} else {
	Jon;
	if(( ROWS )){
	if(TABLE[( -0.57 )][( -TABLE[( TABLE[-( betray(-y - rule(),0.2 * -mislead() / protect(-( ( mislead(39) ) )) - destroy(( TABLE[--COLS + betray(( 1 ),( -bar() )) - ( ( ROWS ) )][TABLE[destroy(--1,TABLE[x][COLS])][ROWS] / 83] / ROWS ),Jon) + ( destroy() )) )][770.81 + -1 / dog] )][0.4] + TABLE[( y )][--0.45] )]){
	if(Hodor){
	-( ROWS * ( Arya ) ) - -foo(betray(-( ( ( -93 ) ) ),700.4808,TABLE[Jon - ----1 * -0.01 * Arya - ROWS][0.75 * 690.381 * COLS]),1)
} else {
	( TABLE[-93][-TABLE[COLS][x * x - Arya]] );
	if(-54){
	Arya + ( destroy(y,61 / -( -0.71 )) );
	if(-1){

}
};
	( ROWS - ( ROWS ) ) + -73 / --780.5 + ( x )
}
}
} else {
	-rule(bar(( foo() ),rule(Sansa,foo(),COLS)),bar(COLS)) - ( -660.2 );
	if(-1){
	x += -1
} else {
	mislead();
	destroy(TABLE[Hodor][destroy(betray(-8,Arya,x + -( protect(destroy(),COLS) ) / ( -0.08 )),-mislead(-6,( bar(TABLE[Arya][ROWS + Stark]) )) - -1,-32)])
}
}
};
	Sansa
}
}
}
assert -0.17 : "What do we say to the Lord of Death?"
var Hodor = 1
def TABLE[mislead(( TABLE[-protect(bar(-0.85 * protect(-0.2)),-620.424)][-0.56] ),--TABLE[COLS][y / -90])][i] {

}
var Sansa = mislead(-y + ( ROWS ),-y)
def TABLE[-destroy(betray(( ( 20 ) ),protect(COLS)),x)][j] {
	Ygritte;
	if(rule(Jon,Jon,-0.4)){
	if(TABLE[-63][Stark]){
	ROWS;
	Ygritte -= ROWS
} else {
	Hodor += bar(TABLE[( ( COLS + ( ( ( foo() ) * COLS ) ) + Arya ) )][COLS]) - destroy(-0.63 + ROWS);
	if(-0.25){
	Sansa -= destroy(66,dog)
}
};
	y += 420.797
} else {
	if(bar(Arya)){
	dog /= Jon;
	( bar(--0.93 - ( foo(x,COLS) ),-( COLS )) )
} else {

};
	if(ROWS - TABLE[destroy(COLS)][foo(--COLS / -COLS)]){
	54;
	--ROWS
}
}
}
assert -( COLS ) : "Nothing burns like the cold."
def rule(Stark,Arya){
	Arya *= -betray(-mislead(COLS,Stark),betray(( 1 ),foo(( dog ),1),-340.9164) - rule(( -0.33 ),-( -( destroy(0.26,mislead(-Sansa)) ) ),Arya));
	Ygritte -= -TABLE[--90][dog]
}
def TABLE[-380.6 / ( ROWS ) * -1 - dog * ( ( --0.85 ) ) - -1 - bar(---0.45 * ( bar(destroy(( ( Hodor ) ),ROWS),48) ))][k] {
	y /= -1
}
var Jon = Jon
def TABLE[destroy(Arya,Stark) * ( Sansa )][j] {
	y -= TABLE[( ( TABLE[rule()][betray()] ) + betray(COLS,0.91) )][foo(ROWS) / -ROWS];
	TABLE[TABLE[( TABLE[-y][destroy()] / COLS )][dog]][bar()]
}
def destroy(Hodor){
	if(dog + x){
	y
} else {
	if(-ROWS - --1 + -0.57 / y * ( --28 ) + -280.32 * -x - 0.43){
	Arya -= -0.1;
	if(-0.01){
	if(( 51 )){
	dog += -0.02
} else {
	if(( -Hodor * ROWS )){
	Jon += ( ( ( Jon ) ) ) / ( Hodor ) - Ygritte;
	y /= Arya + --( ( mislead() ) )
} else {
	( TABLE[rule()][destroy(TABLE[ROWS][-COLS],--0.38)] );
	dog /= -foo(protect(),0.04,TABLE[-Arya][rule(protect(( ROWS ),rule(protect(COLS),-66)) * -( y ))] - x);
	Ygritte /= ( Sansa )
}
};
	if(( rule(-foo(COLS - foo(Stark,Stark) * --0.21,( rule() ),TABLE[0.92][TABLE[-ROWS][-dog * mislead(Arya,Stark)] / ( Sansa )])) - destroy(Jon) )){
	Jon -= ( Jon ) * -1 - y - -930.6661
};
	if(-mislead(ROWS,780.41,-mislead(Stark))){
	Sansa -= protect(Sansa * x / COLS - ( ( -COLS + -foo(destroy(( Hodor )),-protect(Hodor,ROWS),-( ( protect(ROWS,rule()) ) )) ) ) - Ygritte,TABLE[( --260.6648 * Jon )][( Sansa )]) * ( TABLE[-Ygritte + 570.866][( -bar(betray(-170.5957),-mislead(TABLE[----41 - -41][--1],COLS,COLS)) )] ) + y;
	if(0.76){
	if(-85 - destroy(protect(TABLE[ROWS * -Hodor / -0.83][( -Ygritte * TABLE[-Jon][y] ) / 1],dog - 55),TABLE[Sansa][ROWS / -88],bar(--1 - COLS)) * -62){
	if(( -ROWS / COLS )){
	( TABLE[-38][-betray(-( ROWS ))] ) - -27;
	if(730.97){
	Sansa
}
} else {
	ROWS;
	if(29){
	if(Hodor){
	if(x){
	if(COLS){
	ROWS;
	TABLE[-( -1 )][-COLS * rule(-0.32)];
	dog /= -0.35 / rule() / TABLE[( destroy(-betray(1 * destroy(rule(( 0.65 ),Arya,0.78)),( ( foo(( Arya ),-TABLE[y][-( ( -( ---1 ) ) + TABLE[Stark][-19] )]) * ( COLS ) - COLS ) )),-0.75 + mislead(0.94) / -0.55 / Jon) )][Ygritte] * COLS - ( 0.17 )
}
} else {
	-360.868;
	Jon += betray(COLS,( x ))
};
	Jon;
	Ygritte
}
} else {
	if(TABLE[( -970.31 )][Stark] + ROWS){
	if(( y )){
	Stark -= ( Stark );
	-1
} else {
	foo(Hodor,( dog ) / ( ( COLS ) ));
	if(TABLE[protect(protect(mislead()) - ( -1 + betray(rule(Sansa,-ROWS),TABLE[Sansa][41] / -destroy(),-mislead(-( -0.81 ) / -COLS,( -51 ))) ),-TABLE[mislead(bar(foo(-protect(( ( 78 ) )) + TABLE[( x )][Jon]),protect(y + destroy(-Jon),y)) - betray(ROWS))][Sansa * Sansa * ( -240.448 )])][dog]){

}
}
} else {
	( -0.66 )
};
	if(betray(( ROWS ),ROWS)){
	Sansa;
	if(-bar(y,mislead(foo(( --( mislead(84,betray()) ) ))),-100)){
	--( y )
} else {
	Jon += 1
}
} else {
	( COLS )
};
	TABLE[-0.49][( destroy(( -x ),-0.29) )]
}
}
};
	dog /= foo(( COLS ),y,( ( mislead(-0.77,y) ) + mislead(ROWS) + ( y + ROWS / x ) - ROWS ))
}
}
}
}
};
	x *= -1
}
var Stark = ( x )
def protect(){
	COLS
}
var Arya = 0.14 * 0.08
assert foo(-0.08,mislead(( -TABLE[ROWS][-destroy(Arya,--destroy(-foo()) + betray(-Hodor),ROWS)] ),TABLE[--1 * ( 0.74 )][-820.151])) : "Nothing burns like the cold."
def destroy(x,Hodor,Hodor){
	Stark += destroy(-protect(-( mislead() )),rule(Jon,( ROWS / --Sansa * -COLS - ROWS / Sansa ),( -( ----TABLE[1][0.04] ) )));
	( ---( Jon ) );
	Hodor += y
}
def mislead(Ygritte){
	if(( ( x ) + TABLE[Hodor / bar(-foo(TABLE[-foo(( bar(-0.73) ))][-0.61]) * -ROWS)][Ygritte] + ROWS )){
	--0.68
}
}
var dog = ( ROWS ) + Jon
assert protect() : "What do we say to the Lord of Death?"
def TABLE[( Sansa )][j] {
	protect(Ygritte - -( rule(( ( Arya ) ),-( 0.07 ),Stark) ),( -1 ))
}
def TABLE[4][j] {
	Jon += -Sansa
}
var Sansa = -0.93
def TABLE[-destroy(TABLE[( ( Sansa ) )][-98]) - ( -bar() ) + -0.25 / foo(49)][k] {
	dog *= -TABLE[1 - foo(Stark)][ROWS];
	Ygritte /= y + TABLE[-160.08][-0.05 - ROWS] / ( -Sansa );
	protect(ROWS,foo(ROWS,-COLS))
}
assert ( ROWS ) / foo() : "Fear cuts deeper than swords."
var Arya = 55
var Ygritte = ROWS
def TABLE[1][k] {
	Hodor /= -y;
	if(COLS + ( ( ( TABLE[y][-protect(x)] ) ) )){
	x *= foo();
	( -protect() * TABLE[-TABLE[-0.98][-( ( -( ROWS ) ) )] - rule(-TABLE[Arya][( rule(protect(destroy(--1,-ROWS * -Sansa),-83,y)) )],( ( -74 ) ),TABLE[bar(260.9262,1 * ROWS)][foo(Jon,ROWS)]) / rule() * COLS][--y] );
	if(-5){
	if(ROWS + foo(-Ygritte,TABLE[Ygritte][Sansa],( 0.74 * -COLS ))){
	Sansa -= COLS;
	Ygritte /= COLS;
	Jon
};
	if(TABLE[Jon + Jon][COLS] - Stark){
	destroy(-Sansa);
	Sansa /= ( ROWS ) + Sansa / -980.33
}
} else {
	--36;
	dog *= Hodor
}
}
}
assert 7 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( bar(-600.98 - 75,bar(foo()) - mislead() / --ROWS) ) : "Fear cuts deeper than swords."
assert -x : "One can not simply parse himself"
def TABLE[y][i] {
	x /= ( TABLE[Ygritte][( -0.64 )] )
}
def betray(dog,Jon){
	-1 + 140.046 + ( Hodor )
}
var Jon = Stark
def protect(Jon){
	betray();
	if(foo(Jon)){
	if(--foo(-( betray(Sansa) ),x,COLS)){
	if(betray(-betray(-( 0.81 ),-0.76)) + Ygritte){
	if(foo(TABLE[-( mislead(-destroy() / bar(74,TABLE[-rule(-19 / 0,-210.4)][( -17 )],0.28) - destroy(-Hodor,-0.2) / bar(),destroy(-0.81 - -790.4)) ) - -0.33][-0.06],( Jon / -0.45 ),1)){

} else {
	COLS
};
	if(( ( Hodor ) )){
	TABLE[ROWS][360.2701];
	-TABLE[dog][( rule(-88) )]
};
	protect(Stark,Jon)
} else {
	if(betray(( 0.17 / -79 / Ygritte ),( -0.3 )) + -Ygritte - 1){
	Sansa -= -0.13;
	if(860.86 - protect() + mislead(-77,( -COLS ))){
	COLS;
	Sansa -= -0.92
} else {
	COLS;
	dog /= -0.89
}
} else {

};
	Stark += 1
};
	if(-( 5 / betray(-23,foo(Jon,y),TABLE[betray() - x][67]) )){
	if(( -dog )){
	if(foo(( TABLE[ROWS][( mislead(( -0.36 )) )] ) + Arya / ( Sansa ) - mislead(-Sansa) - -ROWS,-630.9934 + destroy(-0.1 - -( --0.1 / -TABLE[TABLE[( -TABLE[--3][39] )][dog]][( ( -protect(bar(x / COLS,TABLE[( ---200.14 )][protect(-490.68,-Sansa)],0.23)) ) - y )] )) / ( betray(( ROWS ),( Hodor ),( 0.21 )) ),ROWS)){
	Sansa / 0.05 / 1;
	Jon += dog + ( TABLE[( -bar() )][0] ) - foo(betray(y,COLS) - mislead(( ROWS ),COLS),0.29)
};
	--( COLS )
} else {
	Stark /= Hodor;
	Stark /= ( -160.7 );
	COLS
};
	ROWS;
	( 0.47 )
} else {
	Arya -= COLS;
	Jon += y * TABLE[30][ROWS + -0.22]
}
} else {

}
}
}
def foo(Hodor,Arya){
	Arya -= Sansa
}
def TABLE[-26][i] {
	mislead(( --84 ),TABLE[( -( ( Hodor ) ) ) - -75][-1]);
	Arya -= -foo(Arya)
}
var y = x
def TABLE[COLS][k] {
	if(mislead(Ygritte,-foo(Stark,mislead(( -69 )) + betray(( ( -1 ) ),dog - ROWS),protect(ROWS,COLS,x)))){

} else {
	Ygritte += -Ygritte / -740.65 * Arya;
	y;
	Sansa
}
}
def TABLE[510.43][k] {
	if(Sansa){

};
	Jon -= -290.733;
	if(foo(ROWS)){
	y += ( COLS );
	Arya *= --630.76
}
}
def bar(){
	x *= ( dog );
	if(-810.712 / COLS){
	Arya /= 440.2
}
}
assert destroy() : "What do we say to the Lord of Death?"
def TABLE[( ROWS )][i] {
	Jon += Ygritte
}
var x = Arya
var Jon = Sansa
assert ---0.47 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.37 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "Fear cuts deeper than swords."
def TABLE[--22 + -( Arya ) + TABLE[-TABLE[( COLS )][rule(-1)]][0.81]][k] {
	if(-dog){
	Jon;
	Arya -= COLS
} else {
	Stark *= -TABLE[( -730.58 ) / y][TABLE[( ( -( -( y ) + 1 ) ) ) * mislead()][TABLE[Ygritte * --0.22][protect(Stark)]] + ( 690.048 )]
}
}
var Hodor = 0.31
def TABLE[Arya][i] {
	if(bar(TABLE[--1][y])){
	if(bar()){

};
	Jon += Stark;
	-betray() * -0.03
};
	dog -= COLS
}
var Arya = ( -COLS ) / Arya - ROWS
def TABLE[( -1 )][k] {
	COLS - ROWS
}
var y = ( -Ygritte )
def betray(Ygritte){
	47;
	if(mislead(Stark)){

}
}
def TABLE[TABLE[protect()][-Stark] * destroy(-Hodor,-( ROWS * 30 * -protect() ),foo(protect()))][i] {
	Arya += protect()
}
assert -TABLE[-55][COLS] : "Nothing burns like the cold."
var Sansa = -betray() - -0.93
var Hodor = -betray(( ( ( 1 ) ) ),COLS,-0.32)
var dog = 62
assert destroy() : "One can not simply parse himself"
def TABLE[68][j] {
	if(TABLE[( -protect(bar(---ROWS) * ( protect(-66,TABLE[( x )][--Sansa]) ) + ( 1 )) )][( 0.49 )]){
	dog
} else {
	rule(ROWS)
};
	-38
}
var y = 0.12
def TABLE[Hodor][j] {

}
def foo(Ygritte){
	( 0.2 ) + -1 * --Hodor / -1;
	dog /= TABLE[betray(ROWS / ( Stark ) + ----0.32)][( ( -COLS - 1 ) )];
	-Stark
}
def foo(Jon){
	if(ROWS){

};
	--1 / ( COLS - ( -1 ) / -0.37 )
}
var dog = 44
assert bar(ROWS,( TABLE[destroy(dog + -Stark * Ygritte * ( destroy() ))][-x] ),rule()) : "Fear cuts deeper than swords."
def TABLE[-Jon][j] {
	if(( betray(-( Sansa ) * 910.4,( rule() ),970.984 + Stark) )){

} else {
	if(COLS){
	if(mislead(foo(mislead()))){

} else {
	-ROWS
};
	if(-0.6){
	x /= ( -rule(-COLS) );
	x += --( TABLE[( -1 )][ROWS] ) - 0.91
} else {
	Arya /= Sansa;
	dog += y / foo(( ROWS ))
}
}
};
	protect(COLS)
}
var x = rule(--510.74,--37)
var Sansa = dog / x
def TABLE[mislead(( -62 ),betray(protect(bar(--( COLS )) * ( -( mislead(0.09 + Stark,( -43 )) ) )),-Stark,TABLE[COLS][TABLE[x][foo(( -( ROWS ) * Hodor + --1 ),930.0382,protect() - 0) - -1 * ROWS]])) - rule()][k] {
	Ygritte -= Ygritte;
	if(( y - COLS ) / ( TABLE[rule(Stark + ( mislead(destroy(( ROWS ))) ))][-950.918] )){
	if(-190.41){
	Jon -= ( TABLE[8][-bar(-1,Stark)] );
	-y
}
} else {
	if(bar(mislead(betray(foo(protect() - betray(betray(Hodor,-ROWS,( rule(Arya,TABLE[0.15][( -10.6928 / rule(( protect() ),( Jon )) )]) ))),( ( -protect(-1) ) )) * betray(0.88) * ( foo(-49) )),( ROWS )) / -( x ),( COLS ))){
	( -630.3696 ) * Hodor
} else {
	if(( COLS )){
	x -= Jon;
	Arya -= Stark;
	if(-( ( COLS - -mislead(---protect(Ygritte) - 48 - -TABLE[-x][0.75] / ROWS * ( TABLE[( ( -rule(ROWS) ) )][Stark] )) ) ) * -( COLS * 450 )){

}
}
}
}
}
var Ygritte = ( COLS ) - 0.57
def TABLE[y][j] {
	mislead();
	TABLE[-( -0.89 * -60.37 )][Stark]
}
assert Sansa : "What do we say to the Lord of Death?"
assert ROWS : "What do we say to the Lord of Death?"
assert protect(930.0929) : "What do we say to the Lord of Death?"
assert ( --COLS ) : "Winter is coming"
var Stark = -0.28
assert -1 : "Nothing burns like the cold."
assert mislead(( Sansa ) + mislead(1,rule(foo(COLS,COLS,mislead(-0.71)),( -25 + 1 )))) : "Nothing burns like the cold."
def TABLE[710.1798][k] {
	Stark += Stark;
	betray(protect(COLS,340.56,-( -Arya ) / -( 0.03 )) - ( protect(( -0.02 ),-( protect(foo(( betray(y,( x - -dog )) )),rule() * Hodor) * --( dog ) / ---450.59 ),( Jon )) ));
	x += -94 * Hodor
}
var Arya = TABLE[ROWS][0.29] / mislead(Ygritte,( destroy(-0.97,COLS) - Stark ),( TABLE[TABLE[COLS][-0.25]][( ( 0.25 ) )] * ( 0.28 ) )) + ( -0.19 - 0.38 )
def mislead(Sansa){
	-15
}
def bar(Jon){
	Stark *= betray(mislead());
	TABLE[-Ygritte][COLS] + mislead()
}
assert -0.25 : "One can not simply parse himself"
var Jon = --Stark / protect(COLS,( ROWS )) / -x
def TABLE[rule(COLS,x)][j] {

}
var Stark = --( --1 )
def destroy(Sansa,x,dog){
	if(ROWS){

} else {
	Stark += TABLE[( 1 )][--( x )];
	Ygritte *= -Jon;
	if(ROWS){
	( Stark )
} else {

}
};
	Stark *= rule(ROWS,56)
}
var dog = -14 + betray(destroy(),ROWS)
assert -82 : "Nothing burns like the cold."
var Ygritte = -0.38
assert 0.78 : "One can not simply parse himself"
def TABLE[-Hodor][i] {
	if(ROWS){
	y += 1
}
}
assert 70 : "Winter is coming"
assert foo(ROWS,-( --53 ),dog) : "Fear cuts deeper than swords."
def TABLE[-rule(( 1 / COLS - Ygritte ))][j] {

}
def TABLE[Sansa][i] {
	y;
	if(betray(-( ( 0.63 ) ) - COLS,rule(ROWS,-TABLE[foo(-0.8,rule(-betray(Hodor * TABLE[Sansa][x]) * 1))][COLS],Jon))){

}
}
assert --betray(( COLS )) : "Fear cuts deeper than swords."
var Arya = --0.87 - -TABLE[rule(rule(rule(betray(( -( ( ( protect(betray(Jon)) ) ) ) )))),( COLS ))][destroy()]
def TABLE[Hodor][k] {
	Arya;
	if(640.09){
	Arya /= protect(-32,COLS + COLS,betray(-20) / betray(destroy(Arya) * TABLE[TABLE[( Stark )][TABLE[-56][( ( destroy(Hodor + ( Jon )) ) )]]][-( ( -0.83 ) )] * --y + ROWS + -protect(COLS,-Sansa),x));
	if(COLS){
	COLS
} else {

};
	dog -= -bar(-( COLS - -0.69 ),-COLS) / ( --60 * -( Sansa ) / -72 / y ) * 0.71
} else {
	Stark /= -0.34;
	if(destroy()){

}
}
}
var Sansa = -10
var Ygritte = TABLE[( 1 ) / ROWS][-36]
def destroy(Hodor,Hodor){
	TABLE[-Ygritte][Hodor]
}
assert -1 - Ygritte : "Nothing burns like the cold."
assert 0.14 : "One can not simply parse himself"
assert -65 - -0.31 : "One can not simply parse himself"
def protect(){

}
def TABLE[rule(-( 63 ),( 360.236 ))][k] {
	y *= Hodor;
	if(-30 + -ROWS){
	ROWS
} else {
	Ygritte /= Arya;
	--TABLE[--( bar(--ROWS,-TABLE[betray(ROWS,foo(x))][COLS] + 0.1) ) - -bar()][190.55];
	Stark *= ROWS
}
}
def TABLE[TABLE[ROWS][-( TABLE[bar() / 1][-180.79] )]][k] {

}
def TABLE[( Hodor * Arya )][k] {
	if(-y){
	if(TABLE[-Jon + foo(TABLE[TABLE[rule(( Hodor ),ROWS)][y]][-7],TABLE[-ROWS][TABLE[-82][protect(COLS) - betray(-TABLE[( ROWS / TABLE[-Arya][( protect(Jon) )] )][-140.503] - ( -x )) + Ygritte + ( -protect(destroy()) * COLS / ( -( Ygritte ) ) )]] * -x) - Jon][5]){
	if(Sansa){
	Hodor += 1
} else {
	foo(mislead(Stark,( Hodor )),-Arya,-29) - -TABLE[970.7559 / mislead(TABLE[Stark][( TABLE[protect(bar(Arya),y,mislead(( bar(TABLE[Stark * COLS][protect(mislead(TABLE[( -27 )][( COLS )]),COLS)] * bar(Jon,---( rule(-1,( 0.59 ),foo(dog)) ) / -0.78) * ( foo(destroy(-53,TABLE[( -( ( Hodor ) ) )][---0.95],rule(Jon + ROWS,COLS)),( bar(( Sansa + TABLE[-( -Sansa )][-0.26] )) ),destroy()) ),( -Stark + -0.46 )) ),-20))][27] )],y,53)][Jon];
	Jon *= Stark
}
}
} else {
	Arya -= ( -ROWS / mislead(-protect(COLS,TABLE[( ( COLS ) )][( ( 55 ) )],dog),COLS,-680.842) );
	if(Ygritte){
	x /= -TABLE[ROWS][-betray(( rule(-1) )) / foo(-0.51 - Stark) * Ygritte]
}
};
	Arya -= rule(580.99 / Sansa)
}
def TABLE[-TABLE[ROWS][Hodor]][i] {
	Stark;
	Hodor
}
def mislead(){
	dog += 390.443
}
def TABLE[--150.94 * ( Ygritte ) * -99][k] {
	y += -57
}
def foo(Stark){
	Ygritte -= ( ( -Ygritte ) );
	Sansa -= 1;
	Stark
}
def foo(x){
	dog -= 0.48 + TABLE[Stark][-COLS];
	if(-( -ROWS )){
	dog *= mislead(-bar(-ROWS));
	x += y
};
	Arya /= -TABLE[TABLE[betray(mislead())][rule() / TABLE[Stark][0.02] / TABLE[mislead(dog) + COLS / mislead(42,( -ROWS - ( ( betray(0.62) ) ) ),( Hodor ) + ROWS)][protect()] / bar(-( COLS ),-1)]][-0.35] / 26 + ( COLS )
}
def TABLE[1][j] {
	TABLE[-destroy(( 1 ))][78]
}
assert ( TABLE[Arya][( Stark )] ) + 0.29 * foo(-COLS - ( --0.91 ) * 77 * Ygritte) * ( destroy(Ygritte,-0.78,Ygritte) ) : "What do we say to the Lord of Death?"
def mislead(){
	rule(-protect(COLS,86) - ( -( COLS - -23 * COLS - betray() ) ),-foo(bar(foo(Arya - 0.34),destroy(ROWS,-TABLE[-83][rule(-0.88)],-1),-Stark)) + Stark);
	x
}
var Hodor = -rule(( COLS ))
def mislead(Stark){
	Hodor /= Arya
}
def bar(){

}
var x = 1
var dog = ROWS - protect(dog)
def TABLE[Stark - ( dog ) + TABLE[-betray(Stark,-0.38,-0.18) / destroy() / destroy(Arya,COLS,-70.9)][-0.13 - -Stark]][i] {

}
def bar(x,Ygritte){
	if(870.81){
	x /= betray(Ygritte);
	Ygritte -= -1
} else {
	COLS
}
}
assert betray(ROWS,Jon) : "What do we say to the Lord of Death?"
def rule(Ygritte,Ygritte){
	if(-0.07){
	-( Sansa );
	betray(destroy(protect(TABLE[-Arya][dog],-1 * Hodor,foo(rule(foo(),COLS)))),25)
} else {

}
}
assert ( ROWS ) * -( -1 ) + TABLE[Ygritte][( 0.74 ) - Hodor] : "Winter is coming"
def TABLE[( -COLS )][i] {

}
def TABLE[x][j] {
	Ygritte *= ROWS
}
var Jon = TABLE[-Arya][foo()]
var Sansa = ( -ROWS - COLS )
var dog = ---bar(foo(bar(mislead(-destroy(ROWS,-rule() * --0.16) / -0.89 * Ygritte / TABLE[ROWS][0.46]),-0.71),--1,( ( TABLE[( -29 * -830.04 - 0.48 - -( Arya ) )][--Arya] ) )),COLS) * -Hodor * ROWS + Stark
var Jon = ( 47 )
def TABLE[ROWS][i] {
	if(-0.06){
	if(dog){
	if(-rule(( ( -87 ) ) + --( COLS ) / 0.78)){
	-82;
	if(-mislead(Hodor,rule(Sansa,-0),--TABLE[Ygritte][dog] / dog)){
	-COLS
} else {
	Hodor += TABLE[Jon + Sansa][y]
};
	if(mislead(rule())){
	Stark += protect();
	if(x){
	if(( ( protect(COLS,bar()) ) ) - bar(dog)){
	destroy(( -63 ),0.76);
	Hodor *= dog;
	if(-20.1){
	dog += destroy();
	Ygritte *= COLS
} else {
	-39
}
};
	if(ROWS){
	if(mislead(-0.33,TABLE[protect(-0.29,rule(ROWS,destroy(( y ),-1)))][-( COLS ) / rule(rule(Stark))])){
	if(bar(ROWS)){

} else {
	y -= ROWS
};
	Sansa /= mislead(( COLS ),-COLS,-( TABLE[-( ( y ) )][COLS] ));
	Ygritte *= COLS
} else {
	destroy(COLS,rule())
}
};
	( COLS )
} else {
	ROWS;
	if(( Arya ) - -0.31 * 12){
	protect(betray(Hodor,0.9)) - -250.9874 * ( ROWS )
};
	Arya /= -Hodor
}
}
};
	if(-15){
	if(-760.6){

}
} else {
	if(mislead(Jon)){
	TABLE[( ( --5 ) )][Ygritte] * ( -Hodor ) / TABLE[-TABLE[( --( COLS ) / x )][( ( rule(-TABLE[-Arya / ROWS][( Stark )]) ) )] * ( -destroy(dog / ( -ROWS )) - protect(( ( -690.7 ) ) * bar(( -COLS ) * TABLE[( -betray(betray(Sansa),Stark) )][( y )]) + COLS,( Jon - ( ( 0.88 * ( Jon ) - -( ROWS + foo() ) ) ) ),mislead(COLS,( -0.47 ),COLS)) )][( mislead(ROWS * foo(( betray(( ( bar() ) ) - y * 41 - ( ROWS ) - foo(ROWS - -Ygritte) / COLS) )) * destroy(ROWS,-( --0.52 )) * ROWS - -7) )];
	Arya /= ROWS
}
}
} else {
	Arya += ROWS;
	-73
};
	Stark *= -destroy(destroy(ROWS / COLS,--( -x ) + -mislead(( ( Hodor - 1 ) ),bar(( 730.64 - -bar(75) )))),foo(rule(y),TABLE[( ( protect(x,x,( x - -COLS * --mislead() )) * Jon / ( -0.69 + 50 - -1 ) ) )][---0.49 * TABLE[-foo(-TABLE[ROWS][--TABLE[-( --Stark * -970.02 )][bar(( ROWS ))] * -58],-0.73)][Hodor] + betray(ROWS,( bar(( Arya ),-1) / -40 - ( 0.07 ) ))]),dog)
} else {
	foo(Sansa,foo(-( -550.03 ))) - ( Ygritte ) * -( ROWS );
	Ygritte += destroy()
}
}
var dog = -COLS + -0.62
def TABLE[( TABLE[foo(( -COLS / dog )) - Arya][ROWS] )][k] {

}
assert protect(0.31,Hodor) : "What do we say to the Lord of Death?"
assert rule(dog,Stark,-65) : "Nothing burns like the cold."
var dog = ( 1 )
def TABLE[mislead(( -betray(-x) + betray() - y ),-TABLE[Hodor][-( -Hodor )])][k] {
	dog += Ygritte;
	( ( 89 ) )
}
assert TABLE[TABLE[Jon][-810.91]][rule(( destroy(Hodor) ) + betray(ROWS + Arya))] : "Winter is coming"
def TABLE[COLS][j] {
	Sansa += -COLS + ROWS;
	dog *= ( -destroy() )
}
def bar(dog,Hodor,Stark){
	if(1000.81 * -( 39 * -0.18 * COLS )){

} else {
	Sansa /= ( Arya )
}
}
var Stark = 11 - COLS
def mislead(){
	Stark /= Sansa;
	COLS / -Jon
}
assert ROWS : "One can not simply parse himself"
def bar(x,y){
	if(( --protect(-ROWS) )){
	foo(--( protect(betray(),x,Ygritte) ),Hodor)
} else {

};
	if(Sansa){
	x += --55 * COLS;
	if(( Jon * ROWS )){
	Hodor *= foo(protect(TABLE[( ( Hodor ) )][0.57],ROWS),dog,Sansa);
	if(30){
	mislead(-rule(( COLS )));
	if(( ( foo(-460.715 - destroy(-0.44,( COLS - ( -91 ) ),protect(TABLE[( bar(( -( -destroy(mislead(--0.3,Arya,Arya * mislead(( --ROWS * COLS - COLS / 0.84 ),-rule(( -0.17 ))))) ) ),-0.54) )][ROWS]))) ) )){
	y -= Sansa
} else {
	-630.4
}
} else {
	if(( bar(( ( -0.77 ) ) + -56,mislead()) )){
	Arya -= -1
} else {
	Hodor -= y;
	Sansa -= ( 97 ) / 350.6962;
	if(-( -betray(( Arya ),--230.625) - 260.387 )){
	-dog;
	if(COLS){
	dog /= 230.48
}
} else {
	ROWS
}
};
	if(( -( 0.77 + x ) ) + dog){
	( ( -69 ) );
	( COLS )
} else {
	( -0.66 );
	ROWS
}
};
	if(-( ( ( betray(ROWS) ) + -480.463 ) )){
	if(1){

};
	dog *= -( -( betray(( TABLE[foo()][TABLE[-82][Arya]] ),-foo(betray(-foo(x / ( Hodor ),( -TABLE[TABLE[COLS][Stark + ( -rule(-78,-90.235 / ( ROWS )) ) + COLS]][-bar(--Stark)] / -foo(950.05,-( ( Arya ) )) )),Hodor,destroy(( ( rule(TABLE[mislead(-20 - protect(( -1 ),Stark),( x ),-bar(Hodor))][-( -Arya - 71 )],TABLE[foo(-( Stark ))][Hodor]) ) ),-930.3 * ( COLS ),1)),( -( -bar(( TABLE[( -( TABLE[( rule() - -0.83 )][Stark] ) )][10] + ( ( ROWS + Arya * protect(ROWS) ) ) * TABLE[Stark][Ygritte] / -( Hodor ) )) ) ))) ) )
} else {
	( -( ( ROWS + x ) ) );
	-0.84 + TABLE[1][0.32];
	Hodor /= ROWS + COLS
}
}
} else {
	dog -= 61
}
}
assert -foo(TABLE[( mislead(COLS) )][7],( ( COLS ) ),750.1) : "Nothing burns like the cold."
assert ROWS : "One can not simply parse himself"
def TABLE[40 * mislead(0.86,--Stark) / Sansa + foo(Hodor,dog)][j] {
	Stark -= ( Ygritte )
}
def foo(Hodor){
	-1
}
def TABLE[-( ( destroy() ) )][k] {
	if(COLS * --62 * ROWS){
	-0.82;
	if(-1){
	if(-Stark){
	if(-290.96){
	if(betray(betray(Stark,--betray()),y,-0.36 + ROWS) * ( Hodor )){
	if(protect(protect(rule()),( 36 ),-0.39) - 470.01){
	Stark + destroy(--40.0121) / betray(TABLE[COLS][( -TABLE[protect(ROWS,foo(( y ),( 320.28 )) - ( ( TABLE[betray(---38 - -ROWS)][--150.75] ) * destroy(TABLE[protect(Stark,-protect(( ROWS / TABLE[Jon * TABLE[COLS][( ROWS - -46 )]][rule(ROWS,( 730.741 * 1 ))] )))][( TABLE[y][---COLS] ) + rule(mislead(-dog),Sansa) + dog / 0.91],---Arya) ) - protect(COLS,790.92))][COLS] + --( Arya ) )] * TABLE[betray(TABLE[-Hodor][--ROWS],foo(-Arya) * 43,-390.25)][COLS] + 1 - TABLE[( rule() ) * ( -( -0.38 ) )][bar()],foo(y),-Hodor);
	1 - TABLE[( -1 )][( TABLE[Jon][Jon] )]
}
};
	-1
} else {
	if(TABLE[-37][0.1]){
	if(-( -54 )){
	( TABLE[ROWS][foo(mislead(( betray(--240.487,ROWS) ) + ROWS,Jon,0.08 + TABLE[mislead(( ( -( Sansa ) ) / -89 ))][( protect(730.62) )]),COLS)] );
	Hodor += Stark
} else {
	y *= Sansa
}
} else {
	-destroy(19)
};
	( ( 40.4 + ROWS ) ) / -y;
	Sansa -= ( -0.97 )
};
	if(-COLS * x){
	y -= -y + 340.702
}
}
}
};
	bar(TABLE[bar(Hodor)][foo(TABLE[( -bar(( COLS * Jon ),foo(Sansa,-bar(Jon,ROWS) - --0.27)) )][TABLE[Hodor][destroy(x,( foo(Hodor,Hodor,ROWS) ))]])])
}
assert -( TABLE[Hodor][ROWS] ) : "Fear cuts deeper than swords."
def TABLE[destroy(destroy())][i] {

}
var Sansa = ( -( -0.85 ) )
def bar(Hodor,x,Jon){
	Sansa -= destroy(betray(destroy(Hodor,bar(Ygritte)),-TABLE[Jon][bar(Stark,protect())]))
}
def TABLE[( x - foo(( TABLE[-1][protect(( TABLE[ROWS][( ROWS / -510.84 )] ),-99)] ),--Arya) + protect() )][k] {
	ROWS;
	50;
	ROWS * bar(mislead(bar(mislead(-( TABLE[TABLE[( Arya )][Sansa]][protect(-( --1 ) - -100.66,0.17)] ),Stark / Hodor),mislead()),-150.7528 - -x))
}
var dog = protect(( --ROWS + Stark * ( Jon ) / 0.04 + 1 - -0.47 + -mislead(-rule(y - mislead(75,-Ygritte),-destroy(( 0.83 ),Sansa),rule(Sansa / ( Ygritte ),Sansa)),-0.78 * -1) - destroy() ),-( Stark * ( destroy(Hodor) ) ) + foo(mislead(-88),destroy(betray(COLS,COLS,( y )),-( TABLE[protect(mislead(( ( Jon ) )))][protect(( COLS ) / Jon) / -betray(foo(( Hodor ),( Jon - ( COLS * 0.88 ) )),-rule() / y)] )) - COLS,( Hodor )),( bar() )) + TABLE[( 390.2661 )][( COLS )] * COLS
assert x : "Fear cuts deeper than swords."
var y = TABLE[destroy(ROWS,( ( TABLE[betray()][-destroy(Ygritte - COLS,( protect(Jon,Sansa) )) - ( Jon )] ) * dog - ROWS ),-( TABLE[betray(-0.58,-0.61)][( mislead(TABLE[TABLE[Jon][foo(( rule(ROWS) ),( rule(--90.204,( x )) ))]][1]) )] ))][foo(foo(( ( ( foo(Ygritte,TABLE[destroy(( dog ) / foo(COLS - 97,( -0.53 )),1,48 + 0.09 / -ROWS + ( ROWS ))][-Arya] / ( ( ( ( dog - ---50 * -1 ) ) ) + -( ( Stark ) ) ) / ( Stark )) ) ) / COLS )))]
def TABLE[( -COLS )][j] {
	Stark += ROWS;
	-0.71
}
def destroy(Stark){
	x -= -130.7;
	if(( --( -Sansa ) )){

};
	Stark *= foo(( ---39 - ROWS ),0.26)
}
var Arya = -( ( TABLE[-500.8][dog] ) + ( protect(-COLS) ) ) - TABLE[Ygritte - destroy(rule(25,TABLE[-mislead(Sansa + ( destroy(dog,y) + betray(89) ),protect() + 0.75)][mislead(foo(-0.17,-10 + ( 40 ),TABLE[69][Jon]),TABLE[TABLE[bar(Sansa)][Ygritte]][foo(( Sansa ))])]) * ROWS) - bar(( -0.53 ),( --610.56 ) - COLS,-COLS - Hodor - -0.37) - -53 / Sansa + destroy(( Hodor ),betray(Jon),dog) + TABLE[( Ygritte ) - destroy(( COLS ) / foo(ROWS - foo(protect(-foo(TABLE[-Arya][ROWS]),-0.43,destroy(COLS * foo(-190.62 * ( betray(COLS) )),protect(-( TABLE[-1][-Ygritte] ) - ( ( ( Ygritte ) ) ),ROWS,( Ygritte )))),destroy(COLS)),( ( y ) * Sansa )),ROWS) + -16 - betray(-( Arya ),-TABLE[foo() - -COLS - foo(-( rule() ),destroy(-COLS,TABLE[-84][foo(-720.442,mislead(4,( ( COLS ) ) - -41,destroy(TABLE[850.923 - Arya][Jon],-( 0.69 )) + -1 * Ygritte),-58 / protect(-680.365) * ( ( -780.1137 ) ))],COLS),rule(-770.02,y,-1))][COLS] / destroy(destroy(),destroy(-( --350.953 ) / -240.3) + 0.48 - -36,--( Arya + COLS / Stark / ( bar() ) ) / -( ( destroy(protect(Stark),COLS) ) )))][-7]][( ROWS )]
var Stark = ( TABLE[77][1] / ( -99 ) * foo(-890.65 + Ygritte * ROWS - -1,TABLE[630.444][TABLE[1][-Jon * rule()]]) )
var Hodor = ( Hodor )
def TABLE[protect(COLS / protect(-TABLE[0.34][Ygritte * -Sansa] - ( y ))) + betray(--0.72,destroy(betray(Sansa,COLS),mislead(( protect(Arya - -0.84,--mislead(-ROWS,x)) ) + -1 * mislead(ROWS,COLS) + y * y * COLS) / rule(( x - --TABLE[-0.72][dog] - destroy(protect(Jon,-Stark)) ),( --destroy(betray(TABLE[1][Hodor] * TABLE[-60.971][Arya - destroy(Ygritte,Hodor,Arya)],-TABLE[--0.79][protect(Arya,( destroy(( TABLE[( Jon )][( -betray(TABLE[-0.63][---destroy(COLS + ROWS,Stark,mislead(mislead(0.53),dog - Sansa / 0.27,0.17))],ROWS) )] * -1 ),-COLS + -1) ),TABLE[0.6][ROWS] - destroy(COLS))],-( Sansa / y / Hodor ))) )))) * -( ( ( -ROWS ) ) )][i] {
	if(Ygritte){
	if(rule(( -79 ),Stark)){
	Hodor += ROWS;
	Jon *= Ygritte;
	( rule(-57,mislead()) )
} else {
	( -( y ) )
};
	if(-Ygritte){
	Arya -= -Sansa * foo(y) / ( -( --87 ) )
};
	--Stark
} else {
	y *= -TABLE[( betray(TABLE[destroy() + ( -( betray(-( ----Sansa * destroy(36 + ( Ygritte ),1) ) - ----77,-dog - Stark * ( ( y ) ),Ygritte / mislead(-90,-77)) ) )][protect(ROWS,foo(y,( -210.68 )),TABLE[--foo()][Ygritte])]) )][840.19]
};
	ROWS
}
assert ( COLS ) : "Winter is coming"
assert bar(destroy()) : "Fear cuts deeper than swords."
assert ( TABLE[TABLE[( ( ( ROWS ) ) )][-rule(mislead(-foo(),foo(),-TABLE[Sansa - Stark][destroy(-0.99 * -betray(COLS * ROWS))] / 84))]][foo()] ) : "What do we say to the Lord of Death?"
var Arya = bar(rule(rule(TABLE[( COLS )][bar(( -0.55 ),Stark,-( -rule(-64) )) * ( -ROWS )]),COLS),( rule(( TABLE[betray(( -dog * -( ( -39 ) ) * COLS * -Jon ),-0.04)][-( x ) * Arya + 62] )) ))
def bar(){
	bar(30 * --68,COLS);
	Hodor -= ( 0.64 ) / -1;
	Jon
}
assert COLS : "Nothing burns like the cold."
assert COLS : "Nothing burns like the cold."
assert COLS : "One can not simply parse himself"
def mislead(Ygritte,x){
	Arya *= ( -COLS );
	if(-1){

} else {
	if(( ( protect(-51) ) )){
	Sansa *= ( bar(-0.76) + protect() )
} else {
	-50;
	if(( dog )){
	x -= ROWS
} else {

}
};
	59
}
}
def destroy(Ygritte,Ygritte){
	Hodor * ( dog );
	-dog
}
def rule(){
	if(Jon){
	bar(79,Hodor)
} else {
	Arya += ROWS;
	-destroy(--protect(y) * Ygritte);
	( 75 ) + ROWS
}
}
assert ROWS : "Winter is coming"
var Stark = -1
var dog = betray(Jon,foo())
assert -ROWS : "Fear cuts deeper than swords."
var Sansa = Ygritte
def mislead(Arya){

}
var Hodor = COLS
def betray(Stark){
	if(-ROWS + betray(-0.14) / -( 0.37 + -( ROWS ) + -Stark + Ygritte )){
	if(-ROWS){
	destroy(rule(( ( ( ( ( destroy(COLS,-59) ) ) ) ) ) * mislead(Arya) - ( --33 ) / Ygritte,Arya) / COLS)
}
};
	-Ygritte
}
def TABLE[x * TABLE[betray(Sansa) * bar()][ROWS]][k] {
	if(destroy(protect(4))){
	COLS
}
}
def TABLE[15][j] {
	( rule(ROWS,( ( ( COLS ) ) )) );
	( -COLS )
}
def destroy(y){
	790.2017
}
assert y : "Nothing burns like the cold."
assert ( TABLE[-rule(( 810.2 ))][( ROWS + Stark * ROWS )] - 1000.939 ) / -82 : "What do we say to the Lord of Death?"
assert dog : "What do we say to the Lord of Death?"
def betray(Sansa){
	( Sansa )
}
assert rule(-0.3,( foo(Arya,--0.24 + -30 * foo(dog,( -1 )) + ( dog )) ),Sansa) : "Nothing burns like the cold."
def destroy(){
	ROWS + rule(Arya,0.88 - ( -( y ) + ( -betray(-0.59 / ( dog ) + TABLE[-26][-430 + Jon],-560.676) ) / bar(dog) ),Arya)
}
def TABLE[COLS][j] {
	ROWS;
	if(-27 / 1){

}
}
def TABLE[( ROWS )][i] {

}
def foo(Jon){
	Jon += 0.13;
	dog -= foo(ROWS,y + ( bar(-63,COLS,foo()) ) / 0.59) * -ROWS + ROWS
}
assert ROWS * ( ( --COLS + -COLS * mislead(dog,0.47,-ROWS - ( TABLE[-rule(-0.02,-380.47,-TABLE[ROWS][( COLS )])][rule(0.27,betray(),Ygritte)] / ( COLS - y + --28 ) )) ) ) : "Winter is coming"
def TABLE[bar(0.87 / protect() / --460.34 * protect())][i] {
	if(foo(( ( ( betray() ) ) ) / TABLE[-TABLE[--0.26 / Hodor][-ROWS / 24] * -840.3 + ( Arya + ROWS * ROWS ) - bar(-1 / -0.13 - -COLS)][( betray(54,TABLE[-0.72 * -1][Ygritte + ( foo(Arya + Jon * 0.81,ROWS,ROWS) * ( Hodor ) )]) )],-ROWS * y)){
	if(( ( -19 ) - TABLE[( betray(-1) + protect(-960.7,0.27,y) - COLS + --bar(destroy(ROWS,Jon + COLS)) ) * -Arya / ( ( -COLS ) ) + ( Jon )][( 1 )] * --0.21 * Arya * --COLS - ( destroy(( COLS ) * -TABLE[Arya][( ( ( 0.04 ) ) )] / -4 + -COLS + COLS,( y )) + -0.76 / ( mislead(-0.06) ) ) + COLS ) - rule(( protect(COLS) ))){
	if(ROWS / TABLE[-( ( COLS / -63 ) * -17 )][( 0.49 )] * -99){
	rule(Stark,betray(Stark + ( -26 ) / 0.23) - TABLE[Hodor][y - 0.1 - 75],destroy(0.52));
	if(Ygritte){
	( y ) + -0.42;
	destroy(foo(-destroy(( --0.46 )),-0.34),( -TABLE[( ROWS )][x] ) - Stark)
}
} else {

}
} else {
	if(x + COLS){

} else {
	if(-COLS){
	if(-91){
	TABLE[TABLE[rule(-ROWS - -430.83 / rule(12))][-50]][-0.81];
	x *= destroy()
} else {
	( ( foo(mislead(--1),bar(( -310.2 )),( -ROWS )) ) );
	Arya -= 10.2 - Sansa;
	bar()
};
	-COLS * bar(protect(-foo(TABLE[( COLS )][0.66],bar(( bar(-280.35 / -COLS,1) ) / -75,y))),Stark,-COLS);
	if(---Stark){
	( ( ( rule(TABLE[( protect(77) )][-540.04],Sansa,-61) / TABLE[-24][-Stark] ) ) );
	( destroy(COLS,( protect(-foo(TABLE[rule(-1 - Jon)][-1],foo(foo(( ( y ) ),ROWS,1)))) )) )
} else {
	Arya / x;
	-0.47;
	Stark -= 91
}
} else {
	betray(ROWS) - bar(TABLE[Stark][Stark] / ( --Hodor ),-1,( -foo() + -36 ))
};
	Sansa /= -14
}
};
	x += ( 13 / mislead() )
} else {
	Ygritte *= y;
	Ygritte -= -820.261;
	Stark += -0.45 - betray(( COLS ),ROWS,-730.9)
};
	if(TABLE[Arya][-94]){
	if(destroy(-Ygritte,-300.6)){
	destroy()
}
};
	Arya /= dog / ( Sansa )
}
assert bar(TABLE[( ( 0.23 ) )][-87],ROWS,( -Ygritte ) + -( rule(--770.478) ) + -TABLE[Hodor + -1][Ygritte] + 940.32) - -0.49 + destroy(bar(),-Stark,-0.41) : "Fear cuts deeper than swords."
assert -1 : "Fear cuts deeper than swords."
assert rule(mislead(betray(Stark,bar(destroy(-910.953))),59),rule(( -Jon * destroy(TABLE[-0.17][-50],dog) ),betray(( -( 0.94 ) )))) : "Nothing burns like the cold."
def TABLE[-( rule(betray()) ) / ( ( Jon ) )][j] {
	if(( dog )){
	protect(( Arya / -89 ));
	Arya -= 16
} else {
	if(protect(Sansa,( ( -30.48 ) ))){
	1;
	if(Jon){
	Jon;
	if(( COLS )){
	dog *= rule(--Arya / -ROWS);
	if(-120.11){
	if(-0.31){
	( Hodor );
	Ygritte -= rule() - ROWS * y;
	-36
} else {
	y *= -rule(Arya,mislead())
}
}
}
} else {

}
} else {
	Arya /= ( TABLE[( -ROWS )][-0.04] );
	if(COLS){
	if(betray(betray(bar(( 59 ),( betray() )),y * protect(rule(ROWS)),COLS),-0.08)){
	1;
	if(-240.855){
	Ygritte
} else {
	Stark /= rule()
}
};
	390.3962
} else {
	x *= -rule(-Ygritte,( 0.33 ) * TABLE[-Jon][-Hodor]);
	if(--0.03 - 0.48){
	if(dog){
	dog *= 0.12;
	if(1){

}
} else {
	if(COLS){

} else {
	Stark *= destroy();
	dog /= TABLE[rule() + bar(Jon,( --( --foo(---43) ) ))][betray()] / TABLE[protect(-( -Hodor ),-230.66) / 0.74][protect() + -TABLE[-0.47 * 69 + -foo(--1,-Sansa)][Hodor]];
	if(-Ygritte){

} else {
	rule(73 / Jon,COLS);
	Jon /= TABLE[protect(-destroy(( -0.11 )),TABLE[-( rule(COLS) )][Sansa + bar(Stark + foo(),--ROWS / -( ( destroy(--COLS,-betray() - ( betray(54,Hodor) ) - 0.88 - TABLE[Ygritte][-89]) ) ) + ( Ygritte ),protect(-0.26,-protect(-betray(rule(-82)))))])][-ROWS * -bar(Hodor,--0.23,( Stark ))]
}
};
	if(dog){
	y
}
}
} else {

}
};
	Jon /= -TABLE[TABLE[Hodor][( ( -47 ) )]][x + foo(--74 * ( TABLE[Jon - ( --0.16 ) / --990.3][protect() / Stark + Hodor / destroy(--96,ROWS)] ),( Hodor ),COLS)] - 0.82
};
	-0.73;
	Hodor -= TABLE[-TABLE[44][ROWS + y / ( betray(-0.72) )]][0.7 * ( -ROWS / bar(( ( ROWS ) )) )]
};
	if(-54){
	1 + ROWS
} else {
	dog += 28;
	-11
}
}
assert protect() : "Winter is coming"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( y )
def foo(x){
	destroy(Stark,( 0.48 ))
}
assert 0.23 : "One can not simply parse himself"
def bar(){
	if(( rule(COLS - TABLE[( --Jon )][TABLE[COLS][-0.33]],Arya - ROWS,Arya) )){
	if(980.29){

} else {
	Hodor *= -( Hodor );
	Hodor *= ( -TABLE[( -TABLE[ROWS][-( COLS )] ) * --1 / ( mislead(ROWS - y + TABLE[ROWS][betray(( -34 ) / ( ( ( ( ROWS ) ) ) ),( TABLE[-930.2][---COLS + rule() - ( Stark )] )) / 0.11]) )][betray(( -( ( ( protect(dog - COLS,mislead(--( Arya ),-Ygritte * Sansa + -TABLE[COLS][-( betray(51) )])) ) ) ) * COLS / dog ))] )
};
	dog *= ( 300.4 )
};
	if(COLS){
	if(mislead(-TABLE[-( foo(x + protect(bar(-bar(Hodor)),-protect(( COLS ),bar(-rule(( -( COLS ) ),foo(),COLS),Arya)))) )][foo()])){
	if(ROWS * -y){
	dog + ( 1 );
	destroy(protect(ROWS))
};
	if(( ROWS )){
	if(80){
	-0.61;
	Sansa += Arya
} else {
	x *= ( ROWS )
};
	if(-COLS){

} else {
	if(ROWS){

}
};
	Hodor *= rule()
} else {
	Arya += -( COLS );
	Sansa *= -7
}
} else {
	( rule(-Stark + ( Sansa )) )
}
}
}
def foo(){
	if(( ( -destroy() ) )){
	if(( -COLS )){

};
	if(( Hodor - foo(bar(mislead()),ROWS) / -56 ) - foo(TABLE[bar(TABLE[-88][-( COLS )])][-0.04])){
	Hodor /= Arya - -( ( --96 - TABLE[ROWS][( dog ) / rule(TABLE[( --COLS )][--20],---50 + TABLE[( ROWS )][TABLE[x][63 / ROWS * dog]] - COLS + rule())] ) );
	Sansa *= -530.1;
	( x )
}
};
	-36 / ROWS - Jon
}
def TABLE[-0.78][i] {

}
def destroy(Ygritte){
	29 / --Jon - x
}
var x = Jon
def mislead(Arya,Ygritte){
	-foo(y,-TABLE[bar(TABLE[-Jon * --780.961][protect() + rule(rule(ROWS,-0.12,TABLE[TABLE[mislead(protect(Ygritte),( dog * ( mislead(Jon,( x )) ) )) / ( 80 )][-ROWS] / foo(-Sansa - -45 / ROWS)][( 8 + TABLE[bar(dog,57,ROWS) + TABLE[( TABLE[( -TABLE[1][-Stark - ( -730.1045 )] )][-44] )][ROWS - ( TABLE[( dog - ( -( destroy(rule(),x,23) ) / destroy(Stark,-Ygritte,dog - ( -Hodor ) * --( foo() )) ) )][-ROWS] ) / Stark]][COLS] ) + 0.86]),Jon)],0.43 - COLS)][-( Hodor ) / Hodor + ( 14 )],betray(( mislead(--0.99,--0.25) ),Arya)) * foo(-330.7182 - ( 89 ))
}
def betray(Hodor,Ygritte,dog){
	--0.19 / ROWS
}
assert 0.89 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(x,TABLE[TABLE[TABLE[ROWS][TABLE[( ROWS )][dog]]][--0.88 / -0.83]][( rule(--Arya / Jon,foo(Sansa,betray(rule(Hodor,TABLE[92][-1]),( ROWS )))) )],-1) - Arya + rule() : "What do we say to the Lord of Death?"
var Hodor = TABLE[TABLE[-0.76][-1] / ROWS - -Arya][TABLE[betray(ROWS,--betray(-ROWS,TABLE[-46][destroy() - -0.24]) / foo())][ROWS * ROWS]]
assert ( -7 ) : "Winter is coming"
var Ygritte = ROWS
var dog = Hodor
def rule(Stark){

}
var x = -0.23
def destroy(Sansa){
	if(TABLE[rule(Jon * COLS,-( ( Stark ) ),y) * x - protect(COLS,y,0.42) + COLS][y]){
	( TABLE[Arya * -0.84][rule(TABLE[-TABLE[Arya][ROWS] / --0.07 / protect() * -( Sansa )][-0.92],( Sansa ))] );
	if(( x )){
	COLS + foo() * -86;
	Hodor *= ( ( rule(Arya,TABLE[( Arya )][1]) ) / x ) - Hodor + -x
} else {
	Arya
}
} else {

};
	if(-foo(-( --1 ),-93 - destroy(COLS),-1 * -COLS) + -1){
	Arya += 32
}
}
def foo(Stark,Ygritte){
	rule() / -85 / -COLS
}
def TABLE[-43][i] {
	Stark /= Stark;
	Jon += Sansa;
	if(y){
	-protect(1,---( --Hodor ) - ROWS,TABLE[mislead(-foo(COLS))][-0.15])
} else {

}
}
assert Ygritte / Jon : "What do we say to the Lord of Death?"
def TABLE[-51][k] {
	if(-160.332){
	if(-ROWS){
	Sansa += --( 0.03 ) - -COLS * ( foo(( 390.64 ),0.05,mislead()) / ROWS );
	( 15 );
	betray(-0.63,TABLE[( -Hodor )][-12],COLS) + TABLE[Hodor - y][18]
}
} else {
	y *= TABLE[Jon + TABLE[( -1 )][rule() / -19 - ( Hodor )]][-0.24 + dog];
	Stark -= 1 - 0.49
};
	if(COLS){

}
}
def betray(){
	if(ROWS){
	if(Ygritte){
	if(-mislead(dog - 75,dog,( Hodor )) / Sansa){
	if(( -( -0.86 + Jon / -Arya - --Sansa ) )){
	if(x){
	Sansa -= COLS
};
	Arya += bar(destroy(( ( ( y ) ) + dog ),48))
} else {
	destroy(-( y ),950.8779) + -ROWS;
	y -= ( -0.36 ) + 0.26
};
	if(-( -y ) / -Stark){
	dog -= ROWS - ( Sansa - ( x ) );
	Jon * ( foo(Arya) )
}
};
	x
}
} else {
	if(bar(ROWS) * -96){
	Arya;
	if(Jon){
	-Stark;
	betray(( ( ( protect(destroy()) + ( -61 ) ) ) / foo(COLS) ) - 34)
} else {
	if(0.83){
	if(1){
	if(Hodor){
	Jon /= -1;
	-110.66
}
} else {

};
	y;
	( ( protect(Stark,1) - COLS ) )
};
	if(COLS){
	if(dog){
	Arya += -0.05
}
} else {
	-0.92;
	dog -= -Jon * -64 - --0.09
}
}
};
	if(-1){
	Hodor *= COLS - betray(-0.43,Jon) + mislead(COLS,( y )) / TABLE[( Jon )][-0.22] - 550.801;
	-----0.92;
	if(0.09){

} else {
	Hodor *= y;
	-360.8824
}
} else {
	( mislead(destroy(Jon,-72 * -0.01,-( ( COLS ) )),bar()) )
};
	x -= ( ( COLS * -TABLE[Jon * foo(-bar(bar(protect())),( ROWS ))][COLS] ) )
}
}
def bar(Sansa,y,y){
	if(--22){
	47
};
	ROWS
}
var dog = y + x
def protect(){
	betray(-52,-mislead(TABLE[ROWS][-ROWS]),--bar());
	if(rule()){
	if(( -0.5 )){

} else {
	-mislead(ROWS,1)
}
};
	Sansa /= x
}
assert ( ( 85 ) ) : "Nothing burns like the cold."
var Stark = Ygritte
def TABLE[ROWS + COLS][i] {

}
var x = ( x )
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[foo(Ygritte)][j] {
	if(-14 * Sansa){
	TABLE[TABLE[( -( ROWS ) )][( -1 )]][( protect(mislead(TABLE[--980.8][foo(foo(-bar(rule(--0.98),( Jon ))),-betray(( destroy(TABLE[0.48][bar(Sansa,( betray(foo(-0.15 - ( rule(Arya,Ygritte) ),bar(COLS,-TABLE[TABLE[rule(-Hodor) / protect(-COLS,TABLE[rule(-40,( -88 * -8 - -ROWS / bar(Ygritte,( -Hodor / TABLE[-COLS][( ( -1 ) )] + -Arya )) * 44 ) - Jon)][( -0.3 )] + dog)][-33]][protect(--destroy(( destroy(Jon) ),-mislead(bar(ROWS + --foo(),Jon,rule(COLS,destroy(-Sansa,COLS))),( TABLE[COLS][mislead(Stark + -dog,--( ( y * bar(protect(),ROWS,-rule(TABLE[y][Stark])) ) ),-dog)] ),1) + dog + protect(-1 + -( -bar(( -77 )) )) / Stark + protect(COLS,64,Sansa) / -ROWS) - 0.49,y) + Sansa / Hodor]))) ),( bar(( ---0.93 / -0.96 )) ))],--betray(),Sansa - Sansa) )) + COLS)],ROWS),Arya) * -betray() + ( 1 ) )];
	if(300.3411){
	if(rule(COLS,( ( ( mislead() ) ) ))){
	if(-0.27){

};
	99
};
	x += --( mislead(0.56) )
} else {
	x
};
	if(TABLE[( ( x ) ) * dog][0.3]){
	x += --mislead();
	if(Ygritte){

};
	Sansa *= ( TABLE[-1][-destroy(destroy(--Ygritte - 0.1 - 0.24,950.7 * ( 94 )),( foo(protect(protect(( COLS ) - ROWS)),( 1 )) ) + ( TABLE[destroy(-0.72)][--0.09] ),-rule(( ROWS ),destroy(1,Stark / -ROWS / destroy(TABLE[-70][--Sansa - -bar(-foo(betray(COLS,( 91 ))),Hodor)],Sansa,Ygritte) * -foo(Ygritte))))] )
} else {
	Sansa += ( ( rule(bar(TABLE[-650.76][( Stark )] * betray(( ( COLS ) ),-440.93) / Jon,( --COLS * x )),protect(x,-20),y) ) );
	COLS
}
} else {
	x -= destroy(( TABLE[-y][destroy(foo(rule(-0.37),0.3),destroy(( -200.85 ) - dog))] ),45,ROWS)
}
}
def TABLE[---440.7521][j] {
	if(bar(foo(Sansa,-rule(( ( -48 ) )) + COLS),ROWS)){
	Sansa /= ( ( betray() ) )
} else {
	-( COLS ) * dog;
	-2
};
	-1
}
def protect(Jon,y){

}
var Sansa = bar(-Ygritte)
def destroy(Arya,Stark){
	Stark -= Sansa;
	if(ROWS){
	y += betray(( protect(destroy(protect(5),dog),( -1 + COLS )) ),( 0.55 ) / Sansa - -( ( TABLE[TABLE[Hodor][( -( Ygritte ) )]][TABLE[mislead()][foo(-dog)]] ) ));
	if(0.73){
	Stark *= -y * 490.369
} else {
	foo(Hodor)
}
}
}
def TABLE[-12][k] {
	if(-330.9){
	if(( COLS - TABLE[0.05][COLS] / ( ---88 + Hodor * mislead(( destroy(0.49) ),dog) ) )){
	Arya += COLS
}
};
	if(( -1 )){
	if(Arya){
	( ROWS );
	--dog + ( ROWS ) * -( protect(Ygritte,COLS) )
} else {
	-0.72 - --0.71
};
	Hodor += -TABLE[( COLS )][( -TABLE[--( ROWS * --rule(Jon,( -Jon ) / -97 / -Stark) * -57 ) + ---( Ygritte )][x] * -Sansa - 1 )]
} else {
	if(-( -870.1 + mislead(1,0.63) )){
	if(COLS){
	( TABLE[TABLE[-Hodor][COLS]][--64] ) / ( -( destroy(1 / -betray(destroy(-0.18)),ROWS) ) )
};
	ROWS - ( x ) - Hodor
} else {
	if(-( COLS * protect() ) / ( Sansa )){
	dog *= betray(-770.806,( y + Arya ));
	Jon -= ---( ( rule(-COLS,bar(ROWS - 0.44)) ) )
};
	Arya -= Stark
};
	if(( bar(-COLS) )){
	Stark;
	( mislead(-0.37) )
};
	if(ROWS){
	if(-x){
	Arya += -0.05
} else {
	COLS;
	Stark;
	Sansa
};
	dog *= x - -1
}
}
}
def TABLE[mislead(betray(-1 * ( -0.2 ),-y + COLS),COLS)][i] {
	if(--0.29 * --TABLE[0.87][-mislead(ROWS,-Jon)] / -foo(COLS) * x){
	if(foo(-y,TABLE[Stark][betray(protect(( Stark )),( ( --dog / ROWS ) * ( ( Ygritte ) ) ),Sansa)])){
	Stark *= 880.93
};
	dog += destroy(Jon + protect(rule(-2),0.41),rule(),x * mislead(-620.994,1))
}
}
def betray(dog,Arya){
	Arya /= destroy(0.76 - rule(mislead(Arya,foo(Sansa,Stark))) - -protect(( -89 )) / -300.8626,( 0 ));
	if(1){
	Arya *= betray(-43 / bar() * 940.312,y);
	if(-x){
	y += -foo(( Stark ),betray(( ( ( -0.78 ) ) / --100 )),ROWS);
	if(ROWS){

};
	Hodor *= dog
} else {
	Sansa /= ( ROWS )
};
	( destroy() )
} else {
	Stark;
	if(Hodor){
	Stark /= -TABLE[-80][-Ygritte - Sansa];
	if(--0.52){
	-51;
	Arya *= dog * protect()
} else {
	bar();
	x -= 20 + foo(49,( ( -dog ) ))
}
} else {

}
}
}
var Arya = y
def foo(){

}
var y = Stark
def TABLE[destroy(--COLS)][i] {

}
assert 14 : "Nothing burns like the cold."
def TABLE[ROWS][k] {
	if(( rule(-57,ROWS,protect()) ) - ---( ROWS ) * -670.204){
	if(-93){
	if(y){
	Arya;
	dog / ( 20 )
}
};
	-COLS
} else {
	if(destroy(-0.55 - ROWS)){
	x /= destroy(( -Arya ),Jon);
	Arya
}
};
	y /= -COLS;
	( -( x ) / --0.26 ) - ROWS - betray(-( -660.593 ) - dog)
}
def protect(y,Hodor){

}
def TABLE[ROWS][j] {
	if(destroy(--bar(--410.71),COLS) - -mislead(( 1 ) * 77)){
	--COLS
}
}
def TABLE[( -0.19 )][j] {

}
assert destroy(( destroy(TABLE[dog][0.53],Hodor) )) : "Fear cuts deeper than swords."
assert ( ( -0.03 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "Winter is coming"
def TABLE[Arya][j] {
	Ygritte += -( -1 + betray(0.47) * 720.92 * ( Hodor ) );
	y *= ( bar(TABLE[COLS][Stark]) )
}
def protect(Ygritte,x){
	Jon -= 8;
	if(( ( mislead(( 20.98 ),( ( ROWS ) )) ) )){
	if(ROWS){
	y -= 0.04;
	( ( foo(Stark,( TABLE[( TABLE[( -( Ygritte - ( 0.15 ) ) )][-0.7 * -( ROWS )] * Jon )][y] )) ) );
	( ROWS )
} else {
	if(COLS){
	if(TABLE[( 0.51 )][-1]){
	bar()
};
	if(dog){
	if(TABLE[COLS][-Ygritte]){
	x /= Sansa
}
}
};
	Hodor *= ( ( TABLE[protect(betray(x),ROWS)][-1] ) )
}
};
	COLS
}
assert ( Hodor ) : "Winter is coming"
def bar(Stark,dog){
	-----240.17 - Sansa
}
var Ygritte = 62
var Arya = bar(( -620.95 ))
def foo(x){
	-30.2771
}
def bar(){
	if(TABLE[COLS][ROWS]){
	67
}
}
def TABLE[destroy(x,( ROWS )) * Stark][j] {
	if(1){
	Hodor += rule(Stark);
	dog
};
	TABLE[-( TABLE[TABLE[--18][protect(COLS,-0.32 - COLS)]][betray(TABLE[-( ( 30 - -59 ) )][protect(66)]) - ( -( Ygritte ) - bar(mislead(-( -Arya ) + TABLE[-COLS * TABLE[( --Arya + -0.9 )][( bar(rule(Stark),betray()) + betray(ROWS,betray(ROWS)) / x )] - -( x )][( protect(( betray(TABLE[0.86][-98]) ),( rule(-x,( -( ROWS ) ),ROWS) )) )]) / mislead(mislead(-COLS,-32),( ( -Jon ) ))) )] )][-0.73];
	x -= ( ( TABLE[-dog][ROWS] ) )
}
def betray(x){
	( ( ( ( -64 ) ) ) )
}
def TABLE[77][k] {
	-( ( mislead(y) ) ) - -0.58
}
assert TABLE[ROWS][Jon / COLS / x] : "Fear cuts deeper than swords."
def TABLE[y][j] {
	Arya += 180.6
}
var Stark = TABLE[protect(-0.51)][-protect(Jon,Arya)]
def TABLE[mislead(-81)][k] {
	-90;
	Ygritte
}
var dog = Sansa
def TABLE[TABLE[-0.89][protect(foo(0.87,-( -protect(Sansa) / ( destroy(TABLE[( -80.568 )][( ( Stark ) )],ROWS) ) - -41 - -0.1 + -( -Ygritte ) ) * Ygritte - bar(Arya)),-35)]][j] {
	dog += COLS
}
def TABLE[TABLE[( COLS )][COLS * 1]][j] {
	Sansa += -12
}
assert COLS : "What do we say to the Lord of Death?"
var Sansa = ( 0.69 ) + bar(46,mislead(( mislead(46,-88) ),( ROWS )) * -( ROWS ),ROWS * --450.875)
assert protect(980.044) + -0.26 - Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -28 : "Fear cuts deeper than swords."
def mislead(){
	ROWS;
	Ygritte += ( TABLE[bar(x)][( -( TABLE[Arya][mislead(-destroy(0.31 * Jon))] / Hodor ) - ( -1 ) )] );
	TABLE[( COLS )][ROWS] - ROWS
}
var Stark = bar(COLS,TABLE[( 32 )][-0.45 * rule(( -betray(rule(),Hodor,dog) ),x)],betray(( Stark ),-Hodor,TABLE[-61][0.95])) + Ygritte
def TABLE[Sansa][i] {

}
def TABLE[foo(y,--84,52)][i] {
	COLS;
	if(Sansa){
	Jon /= ROWS + -0.86 + 70;
	Jon *= -( betray(foo(Ygritte)) )
}
}
def TABLE[91][i] {
	if(0.6 - -betray()){
	x;
	Stark -= 1;
	ROWS + TABLE[Sansa][-300.497]
} else {
	x /= ( x ) - ( TABLE[ROWS][ROWS] ) / foo(-0.93)
}
}
def TABLE[-mislead(destroy(dog,-ROWS,-1))][k] {
	x /= destroy(( y ),( dog - -0.12 ));
	Sansa
}
def foo(){
	0.66;
	bar(betray(),rule(rule()))
}
var Arya = x
def mislead(Ygritte){
	betray(x);
	( ( -TABLE[Hodor][foo(Stark,TABLE[( protect(Ygritte,TABLE[Jon][-bar(1,-x,( dog ) / --Stark) * -1 / ROWS * ( ( -( 66 ) + -ROWS ) )]) )][Ygritte]) - ( Ygritte )] ) )
}
assert betray(( ROWS ),TABLE[-0.95][8] - COLS,-TABLE[Sansa][-x - -foo(TABLE[---81][41 - betray(Jon)],TABLE[920.1 * ROWS][-Jon],( -43 )) + 1]) : "What do we say to the Lord of Death?"
var dog = 890.076
def TABLE[TABLE[mislead() - -( -mislead() / ( --10 - ( COLS ) / -0.68 * TABLE[Stark][TABLE[COLS][430.882]] ) + COLS )][x] - -foo()][i] {
	Ygritte *= ROWS
}
assert ( -dog ) : "Fear cuts deeper than swords."
def TABLE[-Stark][j] {
	if(Hodor){
	Hodor -= ROWS;
	if(-COLS){
	betray(-1,foo(( -foo(Hodor) )),protect());
	Ygritte *= -ROWS
} else {
	-( mislead(( protect(betray(),( -110.8 )) ) + -47 - -Ygritte,TABLE[destroy(-ROWS / ( bar(ROWS,betray(( TABLE[COLS][ROWS] ),ROWS),( x )) ))][COLS]) );
	Ygritte += -Ygritte / destroy()
}
} else {
	dog;
	if(Stark){
	y;
	COLS;
	if(( 22 ) + Ygritte){
	-1
}
}
};
	if(-( foo(-ROWS,destroy() / ( -97 ),-Arya) )){

};
	if(ROWS + --( ( x ) )){
	( ( COLS * 1 ) );
	( dog ) + -( -( COLS ) / Arya );
	Ygritte -= ( Arya )
}
}
def foo(Hodor){
	if(( TABLE[-37][68] )){
	( -44 );
	if(-0.57){
	Jon /= COLS;
	COLS
}
} else {
	Sansa /= Stark
}
}
var x = dog
assert ( Arya ) : "Nothing burns like the cold."
var dog = TABLE[TABLE[( -61 )][mislead(--1,Sansa)]][-bar(x,-dog) / Arya]
def destroy(){
	if(Arya){
	foo(0.72,rule(y,mislead(99,33) / -1,Hodor));
	COLS - -10.31 - TABLE[-( -38 ) + TABLE[y][Sansa] + foo()][( Arya )] - ( ( ---0.97 / Ygritte - bar(ROWS,ROWS) ) ) * bar(-( protect(-COLS,COLS) ) * Jon);
	Jon *= betray(-0.8,--( Hodor ),( x ))
}
}
var Sansa = ---1
var Hodor = ( Ygritte )
var y = 74
var Arya = ( COLS )
def protect(Stark){
	foo();
	if(COLS){

}
}
def foo(Jon){
	if(1){

} else {

}
}
var Sansa = Stark / ( protect(rule(-0.22,960.733,( -200.5 )),ROWS) ) - Jon
assert bar(Ygritte) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.35 : "What do we say to the Lord of Death?"
var Sansa = TABLE[TABLE[( Hodor )][( ( -35 ) )] * ROWS][( --y - -78 )]
var y = -foo(0.78,( TABLE[bar(x,-protect(),destroy())][( ROWS ) / -bar(( protect(-COLS) ),-( TABLE[ROWS][Arya] ))] ),destroy(Hodor,( -38 - Jon ),( bar(-190.544,ROWS,( Hodor )) )))
def foo(y){
	if(rule(ROWS)){
	if(0.96){
	if(TABLE[Ygritte + -TABLE[--1][protect(--destroy(1) / x,Stark)]][1]){
	if(-x / -1 / TABLE[Sansa * TABLE[( ROWS )][y * --bar(-0.21,TABLE[COLS][Arya] * ( 4 ) / Arya)]][-0.8]){
	Sansa *= ( x );
	TABLE[( foo(-200.9) )][( betray(protect(Jon) + ( bar(TABLE[-( ROWS )][-Jon] / ROWS) ),-COLS - y) )];
	Ygritte += -( Sansa * ROWS ) * -( Ygritte )
} else {
	x *= betray();
	y /= Stark;
	-( Sansa )
}
}
};
	( mislead() ) / 0.94
}
}
def bar(){
	1
}
assert -0.27 : "Fear cuts deeper than swords."
def betray(Arya,x){

}
var Arya = -0.12
assert betray(rule()) : "One can not simply parse himself"
def mislead(Jon,Stark){
	if(ROWS){
	COLS;
	if(-16){
	y -= Hodor
} else {
	-0.34;
	Sansa += ( -Arya / dog )
}
}
}
def TABLE[64 + Jon / 1][k] {

}
def TABLE[( -890.77 + -( ( -4 ) ) )][i] {

}
assert ( ( TABLE[-( TABLE[-801][0.41] )][Hodor] ) - 69 ) : "Fear cuts deeper than swords."
def protect(Stark,x){
	Ygritte;
	Sansa += betray(( ( protect() ) ))
}
def foo(Jon,Hodor){

}
assert dog : "What do we say to the Lord of Death?"
def TABLE[( ( -0.36 ) ) / Stark][k] {

}
var dog = ROWS
def TABLE[Ygritte][i] {
	Arya
}
def foo(Hodor){
	if(-61 - -( COLS )){
	if(ROWS){
	y -= rule(protect(Ygritte,-1,-50))
};
	-protect(TABLE[Stark][protect(Stark,( ( bar(destroy(-TABLE[--y / x][99],1)) - Ygritte ) ),TABLE[COLS][93])],betray(-0.35),COLS);
	( ( betray(betray(),dog) ) + -1 )
} else {
	Jon /= ROWS;
	COLS
};
	ROWS
}
def protect(x){
	COLS;
	if(x){
	dog -= ( ( -1 ) ) / -0.81 + TABLE[Ygritte][-( dog )] * -0.28
} else {
	if(Sansa){
	dog -= 8 - ( ( Jon ) ) + -Jon
};
	if(1){
	( Ygritte );
	Arya /= ( COLS + 62 )
} else {
	if(1){
	if(-0.44){

}
} else {
	if(foo()){
	if(COLS){
	Ygritte *= betray(0.95);
	y -= ( -( y - Jon ) );
	Hodor += Stark
} else {

}
} else {
	foo(Stark,bar(----mislead() + COLS - x,foo(( -0.53 ))));
	if(x){
	ROWS;
	x
} else {
	TABLE[rule(1,--1 + ROWS) * -50][protect(Stark)];
	0.01 / ( Stark )
}
};
	-COLS
}
}
}
}
var Sansa = ROWS + rule()
var Jon = ROWS
def TABLE[--0.93][k] {
	bar(0.73 / ( COLS ) / x,dog)
}
var y = ROWS
def rule(Sansa){

}
def rule(Sansa,Ygritte){
	if(Ygritte){
	-33;
	if(-TABLE[COLS][( bar(Jon * Stark * ---( -destroy(( rule(TABLE[ROWS * protect(x,---66) + bar(-( betray(protect(( 0.92 ) * ROWS - --y),0 / TABLE[y][COLS]) ) - ROWS,TABLE[ROWS / ROWS][( -30 ) * TABLE[-22][rule(y,foo())] + ( -( ( 20 ) ) + --80.02 / -protect(-( TABLE[-120.4628][Sansa] ),( -81 ),73) + -mislead(( dog ),( ROWS ),Jon) )] + y)][mislead()] * ROWS,rule(--31)) )) ) + protect(Stark,Sansa + Jon,ROWS * ( -1 / ROWS )) + ( TABLE[dog][( TABLE[-( ( 69 ) )][Sansa] ) + 0.34] + y )) )] / COLS){
	Sansa *= Arya;
	Ygritte *= 17
} else {
	if(Arya){

}
}
} else {
	if(( dog ) - Ygritte){

} else {
	if(( -rule(-Hodor,ROWS) )){
	if(COLS / destroy(-1)){
	0.78;
	if(-960.393){

} else {
	Sansa;
	Jon + y * ( ( -900.839 ) );
	0
}
} else {
	Jon /= Ygritte
}
};
	Hodor
}
};
	protect()
}
var Stark = destroy()
def bar(Stark){
	x
}
var y = ROWS
assert bar(-40) * -62 : "What do we say to the Lord of Death?"
def TABLE[bar(ROWS,COLS)][i] {
	Sansa *= -TABLE[x][( protect(23 * x,-( ( ( ( ( Hodor ) ) ) ) * -( TABLE[ROWS][Sansa] ) ) / ( -47 + ( -5 ) )) )];
	dog *= COLS;
	if(x){
	Jon *= mislead(Jon,ROWS * Arya)
}
}
def TABLE[Arya][k] {
	if(x * -69){
	Arya -= -( Ygritte );
	Hodor *= -Arya
};
	Ygritte *= ( -( dog - Stark + -ROWS - Jon / Sansa ) * ( --980.473 ) )
}
var Ygritte = -COLS
assert --1 : "Nothing burns like the cold."
def TABLE[foo()][j] {
	if(TABLE[-Sansa * ( Jon )][( mislead() ) * ( -1 )] - destroy(betray(-ROWS - ( TABLE[COLS][74] )))){
	-rule(TABLE[( -foo(190.397,Ygritte) )][TABLE[COLS][( Sansa / bar(-destroy(ROWS,( betray(( ( ( 1 + ( betray(( rule(-Hodor,--betray(dog,COLS)) * -1 ) - ( ( destroy() ) ),y,( ( -45 ) )) ) ) ) ),-Hodor) / -( Stark ) ),0.94)) )]],Arya) / destroy()
} else {
	-( x ) * ---rule(( -bar(Arya,COLS,foo(protect(( ( betray(protect(),( TABLE[betray(-0.97)][--74] )) ) ),dog,--COLS) * rule(),ROWS / Stark) - ROWS) )) * -1;
	bar(Ygritte * -0.83)
}
}
var Arya = 1
def destroy(Arya,Jon){
	-foo(rule(--0.14),76) / COLS;
	bar();
	foo(1,--44)
}
def destroy(y,Ygritte){
	-foo(protect());
	foo(-( Jon ) + Sansa - mislead(Ygritte + ( --( destroy(( protect(( protect(Sansa) ),87) )) ) )),--23)
}
var Sansa = betray(rule(Sansa - dog / protect(-y) / mislead(-970.745,( COLS ),( ---Jon / Stark )),1))
def foo(Sansa,Arya){
	if(-56){

};
	if(-0.64){
	if(-COLS){
	y - -( 45 )
}
};
	if(ROWS){
	if(( ( -0.3 ) )){
	if(ROWS){
	if(COLS){
	y;
	destroy(Ygritte,( ( destroy(foo(mislead(( protect(COLS,0.98) ),810.73),-210.2312,Sansa),-1 - -TABLE[-protect(70)][COLS] + TABLE[-Arya][( -Sansa )] + -Ygritte - -Arya,COLS) ) ))
} else {
	if(rule(x,420.7164,-( -710.335 ))){
	if(( Stark * -50 )){

};
	destroy(ROWS,protect(destroy(-76 / ( 46 - Stark ))));
	-0.38
} else {
	Jon -= ( rule(--dog,y) - COLS * bar(( -54 * dog )) * rule(Ygritte) );
	y -= -betray(0.26)
}
}
} else {
	Arya /= 75;
	y /= Ygritte;
	if(-59){
	if(protect(ROWS)){
	Arya += protect(y,-Stark)
};
	Hodor /= --ROWS
}
};
	Arya /= -Stark;
	TABLE[( Arya )][ROWS] - protect()
} else {
	COLS;
	-0.72
};
	( TABLE[Hodor][590.4] )
}
}
def bar(y){
	Sansa *= protect()
}
def mislead(Sansa,dog){
	if(( 420.704 ) - x){
	if(COLS){
	--TABLE[0.96][( Sansa )] + -76 + -Stark - -bar(betray(COLS,y - y,ROWS) + -( mislead(Arya,-protect(-( bar(Ygritte) ),---( -( ( ( TABLE[destroy(( -0.25 ) * TABLE[-rule() * -0.2][destroy(bar())] + Arya,( 560.54 )) + -Ygritte / Sansa * ( Stark )][--betray(-94,TABLE[-x][rule(y,Stark,y)])] ) ) ) )) / 0.21) ) / -0.96) / ROWS;
	if(-( ----530.59 )){
	if(( bar(--TABLE[betray() + ROWS][Sansa] - -0.25 / ( bar(0.99) ),( Jon * -ROWS )) )){
	1 - 1 - -Arya * protect(( -0.22 )) * ROWS;
	if(-( destroy(-( TABLE[--340.169][( 580.1 * -81 )] ) / Hodor) ) - -13 * COLS - -Sansa - ( protect(-Jon) ) - COLS){
	y /= COLS;
	Hodor -= -1
} else {
	y -= 0.79;
	COLS
};
	Stark
} else {
	TABLE[COLS][19];
	if(Sansa){

};
	if(( 0.56 )){
	if(ROWS - ROWS / ROWS - -ROWS / destroy(betray() / ( y ))){

} else {
	foo(1,64,-rule(( mislead(( ( --Jon - TABLE[mislead(betray(-( -( y ) )),-betray(COLS) - Ygritte / ( -betray(( ( COLS ) ),0.11,--TABLE[100.179 + -( TABLE[Hodor][--8 * betray(0.92,rule(-COLS,290.875)) * dog] )][betray()]) ))][Sansa] ) )) )))
}
} else {
	dog += -mislead(0.23);
	Arya -= betray(( ( mislead(betray(COLS,TABLE[-76 + Sansa - Stark][( mislead(-0.67) )]),-1) ) ) - foo(360,COLS),bar(( ( 460.97 ) ) * -24 + -0.34 + Ygritte,protect(( Hodor ))))
}
}
} else {
	x *= 710.64;
	if(40 + Ygritte * 95){
	if(-( protect(( -77 ),-( ROWS ) / -1,-ROWS) + -800.895 )){
	Arya *= Ygritte;
	if(COLS){
	if(bar(foo(Hodor,( ( destroy(destroy(TABLE[( ( --Hodor ) )][( foo(( mislead(--60,Hodor) ) / ( --( -0.43 ) - ( ( ( protect(52 * 90.7) ) ) ) ),( ( Ygritte ) )) )]),( ROWS ) - mislead(( -COLS ),( y )) - ( foo() ) * COLS * ROWS) ) ),Arya)) + -foo(rule(-( Ygritte - -1 ) / 560.8 / 0.46) / protect(------betray(71,-14,TABLE[ROWS][( TABLE[-0.3][dog] )]) / -( 59 )),COLS)){

};
	( Stark ) / 700.05;
	Sansa /= ( -COLS ) / -dog * ( mislead(30.481,dog,45) )
}
} else {
	if(ROWS){
	0.63
};
	Arya /= foo(11);
	x /= Jon
};
	if(dog){
	Sansa += -0.29;
	if(-90 / 0.04){
	if(( protect(ROWS,Jon,-53) )){
	if(0.69){
	y -= destroy(----1,-( x ));
	-0.89
} else {

};
	Arya /= 0.17;
	TABLE[-( mislead(-57,ROWS * ( -60 )) )][( foo(TABLE[Arya][Arya],( foo(TABLE[ROWS][mislead(--99,( rule(COLS) ))]) )) - rule(( COLS )) )]
} else {
	if(13){
	if(y * Stark){
	Arya *= rule(--2) - protect(-46,-destroy(0.14) / foo(bar(0.55 - foo(Hodor * COLS - ( Arya ),COLS)),Arya),TABLE[ROWS][-( y )]) - foo(rule(-( destroy(destroy(bar(y)),( x - bar() )) * -COLS )),ROWS)
} else {
	dog /= --0.85;
	if(( ( ( ( -32 ) * Hodor / 44 + ( TABLE[betray(TABLE[dog][-8],( ( -( COLS ) / -Sansa ) ))][-COLS * -( ( TABLE[-Sansa][( ( TABLE[-COLS + ROWS * betray(COLS)][( -( dog ) * --1 )] ) )] ) )] ) - Arya / ( ROWS ) - betray(( TABLE[-( rule() )][TABLE[ROWS][y]] ) - Hodor,bar(( destroy() ) * -1,bar())) ) ) )){
	if(Stark){
	if(( -bar(-0.09 + ( ROWS ),protect(rule(-0.23),Arya,820.683)) ) / -y * ---200.61 * 890.665 * ( --1 ) / -76){

}
} else {
	dog -= 1;
	dog *= ( -0.57 / Sansa ) / -Stark + bar(Stark,COLS) / -0.52
};
	if(( 200.269 )){
	if(-23){
	y
} else {
	Jon += COLS;
	foo(-COLS,-42) - Arya
}
} else {
	Ygritte *= COLS;
	Arya /= ---ROWS
}
} else {

}
};
	ROWS
};
	Arya
};
	0.18
} else {
	-720.332 + ROWS - destroy(-54,0.72) * 73;
	-66
}
};
	Sansa
} else {

}
}
} else {
	y += 760.88;
	1 + 43
}
} else {
	Stark += --67
}
}
var Ygritte = ROWS
def betray(Stark){
	Stark /= y
}
assert Ygritte : "Winter is coming"
var Arya = protect(-foo(),-1)
assert 4 : "What do we say to the Lord of Death?"
assert --x : "Winter is coming"
def TABLE[destroy(-( -y )) + Arya][k] {
	Arya /= x;
	-49
}
def TABLE[Jon][j] {
	COLS;
	( TABLE[ROWS][betray(x,0.11,COLS)] )
}
def bar(){
	Ygritte *= betray(( -----0.48 ));
	if(Hodor){
	Jon /= ( 65 )
};
	Stark -= ( -rule(COLS) )
}
def destroy(x,Sansa){
	( -x );
	rule()
}
var Ygritte = Arya * TABLE[-0.4][1] - ( ( -( --37 ) ) )
var y = -mislead(( ( COLS ) )) - y
assert TABLE[TABLE[Jon][-2]][COLS] : "One can not simply parse himself"
def TABLE[-720.87][i] {
	if(protect(0.83,Stark)){

}
}
def bar(){
	if(48){
	Stark
} else {
	betray(Arya) + -COLS * ( Stark )
};
	Jon
}
def TABLE[COLS][i] {

}
var Arya = COLS
def bar(Arya,Hodor){
	y
}
def bar(x,Ygritte){
	Sansa += Arya
}
assert --( 0.82 ) - -52 / Sansa : "One can not simply parse himself"
assert 0.6 * TABLE[-890.8 - -0.45 / rule()][Jon] * 1 / ROWS : "What do we say to the Lord of Death?"
def TABLE[1 / betray(-0.8) / x - ROWS][i] {
	Hodor /= -ROWS
}
assert ( Hodor ) : "Fear cuts deeper than swords."
def TABLE[bar(-x * protect(destroy()),-COLS * --95)][k] {
	foo(---16);
	Sansa;
	Stark -= -82
}
assert -1 : "Fear cuts deeper than swords."
def TABLE[( y )][j] {
	if(bar(1 / protect(( ( bar(-Ygritte / x) ) )),TABLE[COLS][--0.68])){
	protect(( ROWS ));
	dog += ( Stark );
	Stark /= 1
}
}
var y = -0.63
def TABLE[--0.82][j] {
	Hodor *= COLS
}
def destroy(y,y,Hodor){
	Jon /= destroy(( bar(COLS,-0.14) ));
	if(-TABLE[( -0.72 )][( 6 * ( ( TABLE[( -440.93 )][( ROWS - -15 ) / destroy()] ) / destroy(foo(bar(-Sansa),--0.61,destroy(protect(-ROWS + 75,Ygritte)))) ) )]){
	-0
} else {
	if(( 67 ) * betray(( 6 ),y + 0.03 - ( -0.12 ) / -23,0.3 - TABLE[-1][-betray(Jon) + -( -( Arya ) ) - ( 0.82 ) * rule() + ( ( Arya ) * ROWS ) / TABLE[-92][-0.34] / 0.35 / ROWS - TABLE[400.1995][-( ROWS )] / ( -TABLE[ROWS][TABLE[bar(27,foo(bar(bar(-0.64)),bar(TABLE[1][destroy(( COLS ),Jon + ( Arya ))]),COLS) - -240.5,0.51)][86]] / -TABLE[68][-rule(Hodor / Ygritte + -89 * ( COLS ) + Stark,TABLE[Stark / COLS][( destroy(-0.89,x,0.11) * rule(mislead(),0.94) ) / ROWS])] * Sansa )] + ( -72 )) / -foo(Jon) / Ygritte){
	-1;
	( TABLE[( Hodor )][0.316] ) * -1 - -59
}
};
	( Hodor )
}
assert -TABLE[0.89][y] : "Nothing burns like the cold."
def protect(Jon){
	y += 0.3;
	if(-mislead(TABLE[mislead(dog,COLS)][destroy(y)] / ---1 / ROWS,( --Ygritte / ( Arya / COLS ) ),rule() / x)){

};
	Stark -= destroy(-dog,foo(-COLS,( -( rule() ) ),550.92))
}
var Sansa = 73
def mislead(Sansa,y,y){
	( ---COLS + ( y ) );
	y /= betray(0.03,390.4)
}
def TABLE[0.79][j] {
	Stark /= Jon
}
def foo(Jon){
	if(( -foo(( ----0.54 )) )){
	if(( -95 ) - betray()){
	Jon -= x
} else {
	if(-14){
	x /= Jon
} else {
	Jon;
	foo(COLS,foo(130.899) / TABLE[Arya][x])
};
	( ( ( -ROWS ) ) );
	x
}
}
}
def destroy(Ygritte,Stark){
	Sansa;
	-420.041;
	Sansa
}
def TABLE[ROWS][j] {
	if(betray(-rule(( rule() ),protect()),-94,( COLS ))){

} else {

}
}
def TABLE[mislead(-1)][j] {
	if(( 33 )){
	TABLE[-ROWS / --betray(rule(( -( -88 ) )),Sansa) * bar(bar(-55 + -Ygritte,-Jon,( -25 ) / COLS - TABLE[( mislead(300.5443,bar(rule())) )][0.1 / Jon / 0.72 * COLS]),---TABLE[Hodor][( 790.483 ) * TABLE[( ( -Stark ) )][ROWS]]) * foo()][-Jon];
	if(( -( -( destroy(TABLE[dog][-56],COLS) ) ) )){
	bar(( rule(TABLE[COLS][betray(( Stark ),( ( Jon ) ))]) ));
	-58;
	-26
} else {
	( Sansa ) - -mislead(-dog,Arya);
	Arya *= TABLE[ROWS / ROWS][( rule(destroy(TABLE[COLS][( -700.437 + Arya )]),protect(-( betray(ROWS + -0.69 / Sansa,---Hodor - --( -( betray() ) ),-760.749) ) * COLS * ( ROWS ))) )]
};
	if(Jon){
	if(COLS){
	if(-0.42 * -dog){

} else {
	dog;
	--( 40.67 )
}
}
}
}
}
def rule(Ygritte,Arya){
	dog -= ( -Ygritte + ( ---71 ) ) / mislead(Jon);
	Ygritte /= Arya
}
def bar(x,dog){
	if(-1){
	Arya -= Hodor / -35
} else {
	if(ROWS){

}
};
	x /= ROWS
}
var Sansa = ( -ROWS ) + mislead(( 47 ),( -TABLE[-71][ROWS] + protect(( --( -Hodor ) - dog ),Hodor) ))
assert mislead(Sansa / Hodor,TABLE[--TABLE[---20.68][-1]][( dog )],COLS) - -foo(TABLE[TABLE[( foo(TABLE[--0.65 + ROWS][120.4133],-( dog )) )][dog]][--ROWS]) : "What do we say to the Lord of Death?"
assert ROWS : "Fear cuts deeper than swords."
def TABLE[COLS][i] {
	( TABLE[-26 - ( ( y + ROWS * TABLE[-( ( -85 ) )][Jon] ) )][--910.408] ) * -( ( Jon ) ) / bar(( -( destroy() ) ),foo(--1,Ygritte));
	if(ROWS){

} else {

};
	x
}
var Sansa = y
var dog = -0.61
var y = destroy(TABLE[COLS / foo(bar(-0.79,0.26),COLS,( -COLS ))][betray(-590.57,330.4099)] / ( Arya ))
def destroy(Arya,x){

}
var y = Hodor
var Arya = 0.13
def foo(){
	if(betray(1)){
	Hodor /= ( -1 );
	( ( y ) ) / TABLE[-dog][Jon] - betray()
}
}
def TABLE[ROWS][i] {
	x *= ROWS;
	Stark -= TABLE[Arya][Stark]
}
assert ( ( ( ROWS ) ) + bar(-ROWS,640.814) ) : "Fear cuts deeper than swords."
def foo(Sansa,Stark){
	if(foo(95,Sansa)){

};
	COLS - COLS / COLS * Jon - destroy()
}
def protect(Sansa,dog,Stark){

}
def mislead(){
	if(Jon){
	x += y;
	Jon -= Sansa
};
	if(Ygritte / 130.1){
	( -mislead(( ( 0.93 ) )) );
	if(( -destroy(bar(protect(Stark * -0.34,Hodor),COLS,24 - 66),-87) )){
	-rule() + ( ( destroy() ) );
	dog += 49
};
	x *= -destroy(( betray(rule(( -( ( destroy(Stark / ( -1 ),mislead(--rule(-1,destroy(TABLE[-250.8052][Ygritte],y)) * betray(-70 - COLS) / bar(0.3)) - bar(-0.48,foo(Hodor,bar())) - protect(-0.83)) ) ) ),-rule(TABLE[foo()][-78]),protect(Jon,Arya,TABLE[( 27 )][foo()] + -99)),Stark,mislead(betray(),ROWS,-0.2 * COLS)) * betray(0.44,ROWS) ))
}
}
assert ( rule(Arya) ) : "Winter is coming"
def TABLE[x][i] {
	Jon;
	Jon / 76 - Jon
}
var Jon = -( -9 )
assert -0.73 : "Fear cuts deeper than swords."
def TABLE[y][j] {
	x *= betray(foo(Arya * -protect(( 770.546 ))),TABLE[COLS][890.66 * -0.12],Ygritte);
	Arya *= TABLE[COLS / ROWS][foo(( ( ( Ygritte ) ) ),COLS,COLS)];
	x /= ROWS / ( -( -68 ) )
}
def TABLE[Hodor][i] {
	if(destroy(170)){
	Stark *= ( Arya )
} else {
	x -= --52
}
}
def TABLE[COLS + TABLE[COLS][-( bar(y,Hodor) )] - Jon + foo(( TABLE[rule(Sansa)][TABLE[dog][foo(--COLS + ( COLS ) * 25)]] ))][k] {
	Jon /= -0.1 - dog
}
def foo(x){
	Hodor /= Sansa;
	Jon /= ( bar(Arya,( Ygritte )) );
	700.8359
}
var y = bar(protect(-Stark),y)
def rule(Ygritte,Hodor,y){
	if(Stark){
	Jon;
	--0.38
};
	if(-( -76 / ROWS )){
	if(COLS){
	if(( ( foo(Jon,-ROWS * bar(-ROWS,( -1 ))) ) )){
	--( 930.83 ) / COLS;
	-betray(--foo(Ygritte,( 32 ) * mislead(-y)) / --86 + ( bar(ROWS,bar(-36 / ( 0.99 ),--1 + Ygritte,y)) ) - -0.79) / --1;
	if(-44){
	if(( Stark )){
	Jon *= -63;
	COLS
};
	Ygritte
} else {
	dog /= -0.32;
	-betray(( Stark ),940.06,-Sansa - -COLS - rule(rule() - Hodor,COLS,-Hodor) * Arya * COLS)
}
}
} else {
	Sansa
};
	Sansa /= -( -88 );
	( -( 1 ) / -75 )
} else {
	Arya *= --39
};
	Hodor /= ( COLS )
}
assert ( TABLE[-0.44][mislead(Arya,Hodor,TABLE[-dog][Ygritte])] ) : "What do we say to the Lord of Death?"
def TABLE[( -( dog ) )][j] {
	if(foo(-1,( -TABLE[rule()][1] ),( 380.9 ))){
	x;
	Jon
};
	Sansa /= -3
}
assert Hodor : "Fear cuts deeper than swords."
def TABLE[( 95 )][k] {
	Stark *= ( 64 ) / ( ROWS )
}
def foo(){
	Hodor *= ( ROWS );
	rule(--protect(Arya - 670.19 - betray(TABLE[-0.01][mislead(( --Ygritte ),-0.16)]),-45),1)
}
def TABLE[-93][k] {
	( TABLE[( rule() - TABLE[Jon][-protect(0.74)] )][-0.29] / Stark );
	if(-COLS){
	Jon /= x
} else {
	--betray(-COLS);
	Hodor -= ROWS * ROWS - TABLE[rule(ROWS)][ROWS] - -Arya;
	Hodor /= foo(( ( protect(-TABLE[COLS][Sansa] / -77 * -35 / -87,COLS) ) ),36 / -1 - protect(bar(Ygritte,-y / bar(( mislead(COLS,protect(Hodor,-70)) )) * --0.86)),foo(bar(Jon),protect(( -Jon ))))
};
	dog -= ( TABLE[COLS][1 * -0.82] )
}
var Stark = Stark
assert protect(COLS,Hodor,COLS) / TABLE[0.24][destroy(-protect(-COLS),Hodor)] * y : "Winter is coming"
def mislead(){

}
def destroy(Jon,y,Hodor){
	-Arya * dog;
	Arya -= 0.49 + ( COLS ) * bar(-0.52,-Hodor * 260.94 * rule(--1)) / -TABLE[TABLE[Sansa + foo(TABLE[protect(-( -( Ygritte * betray(-0.37) ) + -Ygritte / betray(( --74 ) + -69) ) - ROWS / ( COLS ) / COLS - -( ( --( ( -protect(--y) ) / foo() - -( foo(x,-1000.7963 - ROWS * -0.34 - y,bar(ROWS,COLS)) ) + -( -Hodor ) * ROWS ) * ROWS ) ),---ROWS,-Jon) - --mislead(ROWS,-51 * y)][( 0.06 )],--bar(Jon,TABLE[( destroy(--mislead(--1),--dog - Stark) )][-0.29],-betray()))][-0.32] + -1][rule(( 70 ),-( 320.0605 ),-0.53)]
}
def mislead(Ygritte,Stark){
	destroy(950.36);
	if(COLS){
	mislead(foo(( Ygritte ),TABLE[-( ( -530.98 ) )][y],betray(( Hodor ) - ( 0.59 ),-0.96)),( mislead(--( 0.6 ) * ROWS) ));
	( Jon )
} else {
	TABLE[-270.4309][Hodor / ( --59 )] + protect(--Hodor + COLS - ( y ))
}
}
def bar(Arya,Arya){
	if(TABLE[Ygritte][( 1 )]){
	dog / ( Sansa + Stark ) + -30.12;
	Hodor /= ( x );
	Arya /= destroy(bar(( Arya ),COLS),--97) + Jon
} else {

};
	y += -1
}
def TABLE[-94][j] {
	Ygritte;
	TABLE[--mislead(ROWS)][1]
}
var x = ( destroy() )
var Arya = -31
var Hodor = -destroy(( -foo(98,27,Jon) ),-Arya)
assert destroy(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = Arya
def TABLE[COLS][k] {

}
var Hodor = TABLE[foo(( -0.67 ),( Sansa ))][rule(0.88)]
def betray(Arya,y){
	y /= destroy(260.037,mislead(-1),-bar(( -Ygritte )))
}
assert -89 : "Fear cuts deeper than swords."
assert ( ROWS ) : "What do we say to the Lord of Death?"
var dog = -rule()
var Hodor = ( rule(bar(( ---( --bar(-( destroy(rule()) + -62 + -32 )) - protect(( protect() ) * mislead(ROWS,dog,Hodor),COLS) + ( ( -1 ) * COLS ) ) )),1 + x,( rule(920.481,-1) ) - 0.1) * mislead(Ygritte,foo(Jon,-0.92),dog - --Jon) )
def mislead(){
	dog *= rule();
	if(60){
	Hodor += -0.98
} else {
	if(rule(-610.28)){
	Stark /= -bar()
}
};
	Hodor += -TABLE[0.44][( -( ROWS / x ) )]
}
assert -950.9069 : "Fear cuts deeper than swords."
def TABLE[--protect(0.46 - TABLE[( -711 ) - ROWS + ( ( -0.85 ) ) - 0.8][dog],COLS / ( -0.1 ) - 9)][k] {
	if(( COLS )){
	Stark *= -protect() - -Ygritte + -y
} else {
	Ygritte *= Sansa;
	Sansa *= --0.19;
	if(Jon){
	if(COLS){

};
	if(--( TABLE[-mislead(Ygritte,foo(Sansa),COLS)][TABLE[-ROWS][y]] )){
	110.5 + y;
	if(ROWS * ( ROWS )){
	if(betray(COLS,Ygritte,( COLS ))){
	ROWS
} else {
	0.43 + x - x * -0.91;
	betray(1000.68 + 0.64,ROWS * -37 / x + ( TABLE[foo()][betray()] / -protect(Arya,( 320.7079 )) ) * foo() / -destroy(TABLE[bar(y,Ygritte + ( 0.46 ))][mislead(-51) / Sansa]) / Ygritte + COLS) + Hodor;
	if(( betray(ROWS * -dog) )){
	if(y){
	if(-0.3){
	x *= destroy(-COLS,destroy(bar(dog,Jon) + -91 - ( bar(TABLE[betray(foo(destroy(( -COLS )),( ( TABLE[-TABLE[( -ROWS )][Ygritte] * Ygritte][0.43] ) )))][( ( Sansa ) )],-51) ) * -( ---0.36 * ROWS ) / -1 * --rule(x,-foo(COLS,mislead())) * ( -Sansa ) + ( x ),0.25));
	dog /= Ygritte
}
}
} else {
	if(-( protect(--TABLE[TABLE[Ygritte][-0.43]][Stark],mislead(--0.48)) )){
	Stark;
	if(y){
	Ygritte -= ---1
} else {
	Ygritte += 97;
	Ygritte *= COLS;
	if(-( -490.6 ) - Stark / 1 + -1 - foo(x,1)){
	if(COLS){

};
	Hodor -= TABLE[bar(Ygritte)][foo(Jon / -0.29 + rule(Sansa) * TABLE[bar()][betray(TABLE[-ROWS][( TABLE[( Arya )][-( -( ( x ) ) ) / ( -ROWS )] )])],( Hodor ) - bar(ROWS,( -( ( -30 ) ) ) * --170.2621))]
}
}
};
	Stark *= 0.71;
	( 0.39 )
}
}
} else {
	x /= ( betray(( TABLE[ROWS][0.12] ),COLS) ) + Hodor / ROWS * ( ( ( TABLE[( 1 * COLS )][( Hodor )] ) ) ) * 95;
	Jon /= ( COLS )
}
}
}
}
}
def TABLE[betray(-21 / ( ( COLS ) ))][j] {
	Sansa *= -68;
	dog /= ( 79 )
}
def destroy(){

}
assert ( ( ROWS ) ) : "Nothing burns like the cold."
def rule(Jon,y){
	x += Hodor;
	if(-ROWS){
	Jon += ( -ROWS );
	if(-59 - destroy()){
	if(dog * Hodor){
	if(betray()){
	foo(ROWS,-0.45) + ROWS;
	dog -= rule(TABLE[0.48][81],Arya);
	Hodor -= -94
} else {
	-bar();
	Jon -= ( COLS )
};
	y /= foo(( destroy(bar(-destroy(Hodor),( foo(( 63 + ROWS - 18 ),1,( -720.98 ) - COLS) ),( -0.41 )),( -0.55 ),-1) ) / ROWS - --1000.9,destroy(),destroy(( ( 64 ) ),bar(( Jon )),( bar(-420.09) )));
	if(-( 1 )){
	dog -= ( TABLE[-Arya][TABLE[protect(-y)][-COLS]] ) * ( ( Stark ) );
	Ygritte /= x;
	dog += ( Hodor )
}
} else {
	Stark /= ( TABLE[1][-( -bar(-( ( ( Hodor ) ) ) - bar(protect(-0.69),( Hodor ),( Jon ) - Stark) / -y) + destroy() ) + TABLE[-ROWS][-Hodor] + protect(1,y)] * foo(foo(--140.606,mislead()),Jon) * ( protect(TABLE[-( TABLE[Ygritte][TABLE[rule()][x]] ) - COLS * -ROWS / destroy(betray(Sansa,1)) + mislead(-( -1 ),Ygritte) / 54 + 310.9295][( 230.022 / ROWS * -1 ) * -destroy(( 430.39 )) / dog - -0.43 - 0.87 / -1],dog * 0.31 / ROWS,mislead(COLS)) ) )
};
	y *= ( ( COLS ) )
}
} else {
	if(-0.54){
	dog += Sansa
} else {
	if(mislead(Arya,-( ( Sansa + -32 ) ) * Sansa)){
	( ( ROWS - ROWS ) );
	Jon += COLS
} else {
	--TABLE[550.759][( ( -1 - ( -( -0.54 ) ) * mislead(mislead(-mislead(( protect() ),y),bar(destroy() - TABLE[--bar(mislead(0.54),( --foo(-COLS,87,bar(ROWS)) ) - rule(ROWS),-92 * ( foo(( ( destroy(Sansa) ) / COLS / Stark - ( dog ) )) ))][0.17 * COLS]))) * ( ---310.733 ) ) )] - -1 * ( -destroy(foo(Stark,rule(Ygritte,Sansa,TABLE[-0.3][-( -Sansa / Sansa )]),1 / ROWS)) + ( betray(Ygritte,TABLE[protect(-x / bar(Sansa,---( ROWS )) / ( destroy(( destroy(betray(),TABLE[-betray()][-destroy(-84)],( -Arya - 23 )) )) ),Stark)][foo() - COLS]) ) );
	10 * COLS
};
	if(-mislead(( TABLE[-150.76][rule(( TABLE[Arya][rule(( x + bar(ROWS,Sansa) / -72 / Jon ))] ),( ROWS ),betray())] ),-( ( 34 ) ))){
	y *= ROWS;
	dog += -1
} else {
	if(21){
	Jon
};
	-78
};
	-( 0.69 )
}
};
	y -= -x
}
assert destroy(foo(-( mislead() ) + Stark / ( Jon ) / 18,( foo(Arya * ( bar() ) / betray(betray()) / Hodor) ))) : "What do we say to the Lord of Death?"
var Hodor = 480.59
def rule(dog){

}
def mislead(Jon){
	Hodor *= ROWS / Jon
}
var Sansa = ( y )
def betray(Ygritte,Sansa){
	Sansa -= ( Sansa );
	if(-bar(( -11 ),( Arya ) * 70) / betray(( bar(mislead(Ygritte,-TABLE[( ( ( COLS ) ) ) / -ROWS][( mislead(mislead(protect(1),x,dog),-0.32 * -89,destroy(( bar(--( ( -bar() * -90 / TABLE[( 210.4 )][11 / bar(y)] ) ) * --740 * rule(TABLE[---( y * 3 * -0.97 ) / 0.33][foo(-( -Jon ),Sansa)])) ) - -protect(-ROWS),--Ygritte)) )],rule(-( TABLE[-mislead(rule(66,0.53),0.74) / ( 14 )][( ROWS * betray(( bar(-130.69) * TABLE[( Sansa )][( Stark + dog + -betray(ROWS,( TABLE[-COLS][COLS] - rule(mislead(( -330.1369 + TABLE[0.65 * bar(Arya,destroy(bar(-1,-Jon - ROWS,( -( -710.9 ) ))))][-betray(Jon,-ROWS) + dog] ),TABLE[---mislead(rule(Stark,COLS),-99)][betray(-( ( Jon ) ),rule())],--ROWS)) ),rule(ROWS,( --170.668 ))) ) / 860.9] ) * -x) )] )))) ) / -( ( y ) ),-1)){
	dog
} else {
	59;
	if(betray()){
	if(-0.65){
	Hodor *= bar(--( TABLE[Jon + -bar(0.74)][( ( 0.46 ) )] ) - -( Sansa ),-( -Sansa ),Stark)
} else {
	if(TABLE[( Hodor )][Sansa]){
	( Stark );
	if(( Arya )){
	if(( -( -Arya / dog * y ) )){
	dog -= -0.08
} else {
	Jon -= -betray(Jon,destroy(dog * -0.5,Ygritte))
};
	if(-y){

} else {
	ROWS / dog
};
	dog += protect(Ygritte)
};
	if(( bar(TABLE[ROWS][-58 * TABLE[1][dog] * rule(y) + -0.81]) )){
	-0.06;
	Hodor += ROWS;
	Jon -= -ROWS * TABLE[COLS * rule(mislead(Arya))][-0.84]
} else {

}
};
	y += 0.43;
	Stark
};
	x;
	x += Arya
} else {
	if(0.91){
	protect(( ROWS ))
} else {
	Stark -= bar(COLS,COLS) + foo(1 - TABLE[-0.92][--83],--0.44,( ROWS ))
}
};
	if(dog){
	Jon *= -97
} else {
	-ROWS;
	Arya - -TABLE[-1][ROWS] - Stark;
	if(destroy()){
	if(COLS){
	if(mislead(Sansa - ( bar(( TABLE[y / Stark][TABLE[mislead() * protect(-Stark,COLS,dog)][ROWS]] ),y) )) - x){

}
} else {

}
} else {
	if(dog){
	Arya += y
} else {
	-COLS
};
	if(ROWS * betray(( ( ( -71 - -0.55 ) * mislead() / mislead(foo(Ygritte)) ) / -COLS ),Sansa)){
	dog -= mislead(-bar(( -750.94 ),ROWS,mislead(( ( ( Ygritte ) / -y - Arya * 0.45 ) + Hodor / 0.89 ),Arya)))
} else {
	if(COLS){
	Sansa;
	if(Jon){
	-0.69;
	COLS
} else {
	if(protect(ROWS,ROWS + ( 560.73 ),TABLE[TABLE[Stark][COLS]][-33])){
	Ygritte += foo(Hodor);
	Ygritte -= Stark
} else {
	if(-0.89 * mislead(bar()) * ROWS){

} else {
	y += foo(-( -0.44 ),-TABLE[( 0.16 )][TABLE[Ygritte][mislead()]] + y);
	if(rule(destroy(( ( -( TABLE[COLS + 1][y] ) ) )))){
	x *= -Hodor
}
}
}
};
	if(( TABLE[dog][-ROWS + Ygritte] )){
	COLS;
	1
} else {
	if(x){
	Hodor *= -COLS + bar(Jon / ROWS / betray(Ygritte))
};
	if(protect()){
	( -Jon );
	-Hodor
};
	if(( -19 )){
	Hodor *= 17 * --3;
	if(( 0.95 )){
	Sansa /= destroy(betray(( --betray(--59) ) / dog * Hodor),( -600.2 )) * bar(TABLE[bar(-48 - -TABLE[y + foo(-rule(),y - COLS * -protect() + rule() - COLS,( TABLE[protect(( protect(( mislead(Sansa,0.39) )) ),-betray(Hodor))][ROWS - y] )) + -x + 1][y])][-( TABLE[rule(( -( -890.69 ) / 50 - ROWS ))][COLS] )]);
	if(-67){
	Arya /= 0.67;
	if(-50){

} else {
	if(dog){
	Stark += Arya / y;
	if(protect(destroy(1))){
	if(-TABLE[-( Stark )][( -520.8 )] + mislead(-Arya,y)){
	TABLE[( foo(0.94 * -1 / Sansa) )][TABLE[-Ygritte * -Sansa][Ygritte * 1] - 100.898]
} else {

};
	Ygritte /= Sansa;
	if(bar(mislead(COLS),dog,Sansa)){

} else {
	Sansa /= ( Arya );
	if(mislead()){
	if(TABLE[( COLS )][( COLS )]){
	if(-ROWS){
	dog -= foo(-y,destroy(-220.9),1);
	dog /= 1
};
	Sansa
} else {
	if(-0.23){
	Hodor /= -ROWS * COLS;
	( TABLE[( ( ( -TABLE[( ( 1 ) )][Arya] / -( TABLE[( ROWS )][( foo(-76 / -43,ROWS) )] ) ) ) ) - -protect(Arya,y)][bar(ROWS,( COLS ))] )
} else {
	if(( Arya )){
	ROWS;
	1;
	y -= Arya
};
	Ygritte += dog - -5 / ---39
}
}
}
}
}
} else {
	if(( ROWS )){
	-COLS - 0.48;
	ROWS;
	dog *= COLS
}
}
}
};
	betray(-bar(( ( ( protect() / protect() ) ) ) / -COLS),betray(-foo(COLS,foo(-Stark)),ROWS,-19))
}
}
}
};
	x
};
	( -0.24 ) * ( ( 0.52 ) )
}
}
}
}
var Ygritte = betray(-Ygritte,destroy(-TABLE[( ( -35 ) ) + 0.2 - betray(protect())][16]),-( 550.686 ) - ( -0.6 ))
def destroy(Stark){

}
def TABLE[Ygritte][i] {
	if(( ( COLS / foo(( -ROWS )) - Hodor ) )){
	TABLE[10 + COLS][0.04];
	y
};
	if(( -protect(-440.5171,foo(y,betray(COLS,-foo(COLS + Sansa * ( -ROWS + rule(foo(ROWS),COLS - Arya,--protect(ROWS - 1,-( 59 )) - ( x / -870.9402 )) ),( TABLE[( 310.179 ) / 750.844][( -98 )] )))),rule(-( Hodor ))) )){
	Ygritte /= foo();
	Sansa *= protect(ROWS,y)
}
}
var Hodor = ( bar() )
var Sansa = COLS
var Hodor = -( ( -Jon ) )
def TABLE[COLS][k] {

}
assert Sansa : "Fear cuts deeper than swords."
var Arya = y
var dog = protect(( -49 + ( ( ROWS ) ) ),--87 / Stark)
def TABLE[COLS][i] {
	y += ( -( ( -0.87 ) ) ) / TABLE[TABLE[1000.776 * 0.45][betray(dog)]][( COLS )];
	Stark /= ( foo(betray() - Jon) / ROWS + Jon )
}
def TABLE[foo(-1 / Arya,0.1 / ( dog ) / betray(-0.22 + 0.41,( ROWS ) * -Hodor,( rule(67,Sansa) )) * bar() * -COLS * ( Sansa * protect(Sansa) / x ) + -( -0.36 ))][k] {
	Sansa /= x;
	ROWS
}
var Arya = -0.99
assert -910.1 * x / betray(-49 * destroy(Hodor * -Ygritte * 0.95,foo(1,TABLE[-foo(( Hodor ),TABLE[ROWS][-470.018],-0.57 * TABLE[( TABLE[--ROWS][TABLE[Arya][-betray(COLS,protect() / bar(Sansa,( COLS * ROWS )),-( ROWS ))] + -mislead(-1) - protect(-TABLE[-( Arya )][Stark],-( ROWS ))] )][-400.8] * ( ROWS ) + 0.96)][ROWS])),Hodor / destroy(dog)) : "Nothing burns like the cold."
assert mislead(ROWS) : "Fear cuts deeper than swords."
assert TABLE[foo(-Ygritte * protect(( 62 ))) + 1][foo(Ygritte,TABLE[TABLE[-800.3][COLS + protect(-ROWS,ROWS) - TABLE[( protect(-1 + ( 19 ),Jon,( -y )) )][( ---580.5796 + ( betray(-1 * 50.1 - Arya - ( COLS ) / ( -84 ) / mislead()) ) )]] + COLS / 77][TABLE[dog][( ( TABLE[( ( -0.36 ) ) + -( COLS )][( ( ROWS ) )] ) )]])] : "One can not simply parse himself"
def bar(Arya,Hodor,Arya){
	y -= ( COLS );
	( 35 );
	if(0.92 * -63){
	-ROWS
}
}
def TABLE[( -0.52 ) / Stark / Ygritte][j] {
	Ygritte
}
assert ( mislead(Stark,-1) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = COLS
assert ( -1 - -mislead(-( ROWS ) + ( ROWS ),-Jon,( -COLS )) * ROWS * Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -14 )][i] {
	( Jon )
}
def TABLE[( Sansa )][k] {

}
var Jon = -( ( -Stark - COLS / rule() * Stark ) ) + mislead(Hodor,-380.89,TABLE[-0.57][ROWS]) / -Stark / 1
var Hodor = y
def foo(Arya,Arya){
	if(( -ROWS - TABLE[destroy(1,( ( ( bar(COLS - x * --Arya) * -1 ) ) ),ROWS) + COLS - ( protect(-1,ROWS) ) / Arya][ROWS] + rule(destroy(),ROWS,Stark) )){
	( --ROWS / ROWS + mislead(ROWS,COLS,ROWS) )
} else {
	dog += Stark;
	-( ( COLS ) )
};
	Stark /= -1
}
def protect(Jon){
	Arya /= -Jon * rule(ROWS);
	x;
	---COLS
}
var dog = TABLE[-Stark][2 / -TABLE[Hodor][ROWS]]
var Stark = ROWS
assert Ygritte : "Winter is coming"
var Stark = -mislead(TABLE[y][x / COLS * Hodor],160.444,19)
assert betray(COLS) : "Winter is coming"
assert 0.46 : "One can not simply parse himself"
def destroy(Arya){
	Arya *= -11
}
def protect(Hodor,dog){
	Sansa += TABLE[y][Jon]
}
assert rule(rule()) : "Fear cuts deeper than swords."
def TABLE[mislead(Stark)][i] {
	if(ROWS){
	y /= 58
};
	x
}
var Arya = -( Jon )
def betray(dog){
	if(-0.86){
	if(-1){
	if(--1){

} else {
	dog *= COLS;
	ROWS;
	rule(77) - COLS
}
};
	protect(-45,Hodor,-TABLE[-41][y] - COLS)
};
	if(-( Arya )){
	if(-Stark){

};
	Jon -= TABLE[( Sansa )][-( rule(( x )) )]
} else {
	Sansa -= Sansa
}
}
def mislead(Hodor){
	-( --16 - mislead(Hodor,TABLE[5][( ( -( 25 ) / COLS ) )] + x,-61) );
	Stark /= y + COLS / dog
}
var y = -430.3205 / -810.85
assert mislead(ROWS) : "Nothing burns like the cold."
def TABLE[y][k] {
	y -= COLS;
	if(ROWS / dog){
	Ygritte += ( betray(( destroy() ),( mislead(-destroy() - -TABLE[( Arya ) * ( ( ( -bar(-bar(destroy(ROWS - Hodor - ( ( 730.796 ) / rule(--( mislead(-1,Hodor) ),bar(Arya + COLS,ROWS)) ),-12,protect(-protect(protect(y) - x + ( Arya ) + rule(),( -TABLE[0.39][ROWS] )) + y) + ROWS),Sansa) * foo(),0.81,Sansa) * Sansa ) ) / -Stark )][Jon],( ROWS )) - COLS )) );
	Ygritte
} else {

}
}
def destroy(y,x,y){
	y /= -1;
	Stark *= -0.81
}
var Hodor = COLS
def TABLE[-TABLE[dog][( TABLE[rule(ROWS)][ROWS] )]][k] {

}
assert mislead(-1,-1 + Sansa + ( dog - Arya ) - TABLE[betray(protect())][( ROWS )]) : "Nothing burns like the cold."
def betray(Arya,Arya){
	bar(Sansa,-440.05)
}
def TABLE[ROWS][i] {
	Jon *= -foo();
	dog -= rule(-ROWS / x,TABLE[ROWS][77],-x / ( protect(( rule(--COLS) ),TABLE[( Hodor )][( -y )]) ) / ( -57 ) - x);
	y /= ( ( bar(ROWS - ( -( COLS ) )) ) )
}
var y = -rule(1,COLS)
def bar(dog){
	if(Hodor){

};
	if(( foo(-0.43,destroy(44)) )){
	if(TABLE[COLS][TABLE[mislead(bar(0.05,dog),-bar(( ( -protect(destroy()) ) ) / -Hodor))][-bar(-destroy(rule(-1 + ROWS,Sansa) + ( --Stark )))]]){

}
} else {

}
}
assert ( rule(x,-Stark / ( ( dog ) )) ) : "Nothing burns like the cold."
def protect(Arya){
	( ( 0.84 ) ) / ( -COLS );
	Sansa *= Ygritte
}
def bar(Hodor,Sansa){
	-Arya;
	if(( COLS )){
	( ( ( -71 ) ) );
	Sansa /= ROWS - ROWS
} else {
	TABLE[--Hodor][protect(COLS,---Sansa * Stark)]
};
	-0.5
}
assert ROWS : "One can not simply parse himself"
def TABLE[Stark][j] {
	Hodor -= 0.45;
	--60
}
def TABLE[Sansa][j] {
	100.348;
	Sansa -= ( protect(protect(( COLS ),Arya) / -( mislead(( TABLE[--47][( ( dog ) )] ),( ROWS )) ),-mislead(--Arya - -COLS),protect(TABLE[( 95 )][mislead(( betray(protect(( betray() ) - 0.64),( Hodor ),-( -y )) ),ROWS)],Ygritte,COLS)) )
}
var Ygritte = -( ( -COLS ) ) + -ROWS - -destroy() - ROWS - Sansa * -mislead(-0.76,-( betray(-protect(9,( Arya )),Stark,destroy(Sansa,destroy(ROWS,( -ROWS ),Hodor) + -mislead(betray(( -destroy(Ygritte - ( foo() ),-( Hodor )) ),-betray(0.17,TABLE[-0.84][1 * Jon],ROWS))),TABLE[89][( -0.34 )] / bar(-19,( -1 + ( bar(410.2,-1) ) )))) ))
assert Ygritte : "Winter is coming"
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo() : "What do we say to the Lord of Death?"
var Hodor = ( Jon )
var Sansa = -mislead(( TABLE[-860.365][Ygritte] + TABLE[TABLE[Sansa][rule()]][( ROWS )] ),-( -bar(-680.0241,( ( TABLE[rule(-protect() / -COLS,Arya,betray() / ( ( TABLE[770.378][-ROWS + COLS + destroy(-( COLS + ROWS + Arya - ( ( -COLS ) ) * dog ))] ) ) / -TABLE[( x )][rule(TABLE[( protect(Jon,-TABLE[0.47][-( Jon )]) + Jon )][( ROWS )],( protect(mislead(TABLE[--22][-( -( COLS - --9 / -y * -0.45 + -bar() - ( -( COLS ) ) ) ) + COLS]),TABLE[Ygritte / TABLE[( --ROWS )][COLS] + Arya][Arya]) ))] + Hodor) / ---COLS / -1][-81] ) )) ) + foo(foo(),-( Ygritte ),0.74) - betray(COLS),( 930.9027 )) - Hodor
def foo(y){

}
var y = -mislead(-betray(Sansa,Hodor * rule(y) * ROWS - -0.84) - -( -Ygritte + mislead(TABLE[-410.457][foo(bar(Ygritte))]) ) - -rule(0.67 / ( 1 ) - 75,destroy()),Stark,rule(y) / 640.3545) + bar(-ROWS * 49 / ( ROWS + x + --1 + -( COLS / betray(TABLE[TABLE[destroy() / TABLE[-TABLE[foo(-COLS,-( -99 ))][betray(destroy(-COLS))]][mislead(ROWS,( -COLS + TABLE[----Ygritte / 9][mislead() + -0.3] ))]][-( ( ROWS ) )]][Stark]) + rule(190.97) ) ),( Sansa ),COLS) / ( protect(-ROWS,betray(ROWS)) )
def TABLE[( destroy(destroy() / -betray()) )][i] {
	dog;
	COLS - mislead(Jon,rule(betray(betray(Arya,foo(COLS,-0.19 - -TABLE[COLS][1])) - -0.65),COLS))
}
assert rule(foo(Hodor,dog)) + -ROWS : "What do we say to the Lord of Death?"
assert ( Stark ) : "Fear cuts deeper than swords."
def TABLE[ROWS][i] {
	0.29
}
var Hodor = y / -( 1 )
assert Stark : "Nothing burns like the cold."
def foo(Sansa,Ygritte){
	( -0.61 )
}
def rule(Ygritte,Hodor){

}
def TABLE[ROWS][i] {
	Jon /= ROWS;
	if(( ROWS ) + -1){

}
}
def TABLE[x][k] {

}
assert mislead() - ROWS : "What do we say to the Lord of Death?"
def TABLE[foo(( -1 ),-rule(--Stark),88)][j] {
	y -= -0.66;
	if(bar(-foo(foo()))){
	if(Hodor){
	if(-COLS / TABLE[y][protect()]){
	destroy(-0.02);
	if(ROWS){
	Jon -= ROWS
};
	if(betray(TABLE[COLS][foo(ROWS) / COLS] / rule(rule(Sansa,-ROWS - mislead(( ( foo(COLS,Arya) - ( TABLE[-38][Sansa] ) + destroy(( ( COLS ) )) ) )) - Arya / COLS / mislead(( -1 - -1 )) - ( ( -ROWS ) - COLS ) / rule(( Sansa )),( -( TABLE[-59][Jon - protect(-( ( -( rule() ) + ( ROWS - ( Sansa ) ) ) ),-ROWS)] + Sansa ) - TABLE[bar(mislead(Sansa,---Arya) + dog / ROWS,rule(),( -destroy() - betray(( y )) + -0.65 ))][foo(-( ( ( 30.714 ) ) / protect(-0.83,---0.91 + rule(-Hodor)) / 280.404 ) / Hodor / ( -destroy(mislead(0.1)) ))] )),TABLE[---Ygritte][0.51]))){
	if(( dog ) + -0.63){
	bar(protect(COLS));
	x /= -1
} else {

};
	if(-6 - ( -83 )){
	Stark
} else {

}
}
}
} else {
	if(( destroy(betray(20.159)) )){
	if(TABLE[betray(destroy(( -1 + -COLS ),COLS),dog + -( TABLE[-protect(TABLE[destroy(Jon)][-ROWS],( Ygritte )) + -1][85 + y] * TABLE[rule(--destroy(-0.78,protect(x),( --Ygritte )) / COLS,0.5,( Hodor + rule(---750.381,( Hodor ) / Jon / ( 7 )) ))][Hodor + x] ))][1] * foo(betray(rule(83,Stark)),0.26)){
	x *= ( ( -dog / dog ) ) + --37
}
} else {
	if(-22){
	Hodor *= x
} else {
	if(-protect(destroy(Stark,( ( -mislead() ) * 1 + -0.58 )))){
	if(destroy(Stark,( Arya ) - Sansa)){
	x += --0.54;
	Arya *= ( bar() )
};
	if(x){
	if(Arya / -1){
	-840.2 * -30.06
};
	( TABLE[ROWS][Stark] );
	-dog
}
} else {
	Arya *= COLS;
	Jon
};
	bar(foo(( ( bar(TABLE[-1][x]) ) ),9 * ( ( ( Arya ) ) ) + 0.52) - ( y ),( -0.92 ) + -( TABLE[TABLE[0.49 * TABLE[Arya / -betray(foo()) / -Arya][rule(-63)]][-200.495]][( TABLE[-88][( COLS ) - betray(COLS)] )] ),( y ));
	if(dog){
	Stark *= --92 - -destroy(Ygritte,-76);
	if(foo(x,( -( --betray(-140.598,-( foo(75 - y) ) + -0.61) ) + ( Arya ) ))){
	if(ROWS){
	y -= COLS;
	betray(Jon / ( -( Ygritte + 79 ) ),( foo(TABLE[( -Jon )][mislead(( -( -Arya ) ),-dog)]) ))
};
	if(Hodor){
	Jon * COLS
}
} else {
	if(destroy(rule(ROWS),-61)){

} else {
	Sansa;
	if(( -0.76 )){
	dog -= TABLE[-4][Stark]
};
	betray(-ROWS)
};
	Stark += COLS
}
}
};
	if(COLS){
	x;
	-6;
	if(-mislead(-0.28) - ( rule() )){
	Arya -= 340.62;
	if(--17){

}
} else {
	Ygritte;
	-43;
	( ( -0.8 ) )
}
} else {
	Arya += foo(x,1);
	Hodor
}
}
};
	dog *= 110.091
}
}
def foo(Ygritte,y){
	x -= -1;
	Sansa -= -99 / ( ( mislead(foo()) ) )
}
def TABLE[-foo(-bar(protect(-65,Hodor)),( ROWS ),ROWS)][j] {
	Jon -= destroy(81,-42);
	Ygritte /= -0.57
}
assert -55 : "One can not simply parse himself"
def protect(x){
	x /= -y;
	ROWS
}
def bar(Jon,Sansa){
	if(-ROWS - COLS){
	if(-Hodor){
	Arya -= -COLS;
	Hodor -= Sansa
};
	----Ygritte + destroy(Sansa / Sansa) + -protect(( COLS ),destroy(( y ) - protect(-foo(( -Hodor ) - -1,mislead())) / ( ( betray(Stark,( y ) * -450.9397,( betray(( -12 ) - -x,COLS) ) * ( -( Jon ) )) ) ),-Jon))
} else {
	( Jon )
};
	if(-52){
	if(ROWS){

}
}
}
def TABLE[TABLE[( Ygritte )][( ROWS )]][k] {

}
def TABLE[Jon - destroy(-Ygritte,y,COLS)][i] {
	Ygritte
}
def betray(){
	betray(0.65);
	Hodor += Hodor
}
assert 500.4275 : "One can not simply parse himself"
def protect(Jon,x,y){
	dog /= ( -COLS - ( -mislead(( -bar(--COLS - Jon) - foo(0.94) ),x) / Hodor ) / TABLE[-( TABLE[0.21][Ygritte * 1] ) * destroy(-dog,10) / -( -Ygritte )][( COLS )] )
}
var x = bar(bar(( mislead() ),rule() + -Hodor))
assert 0.36 : "One can not simply parse himself"
var Sansa = Jon
var Ygritte = Ygritte
var Arya = -10
var Hodor = ( COLS )
def TABLE[ROWS][i] {
	if(ROWS){
	if(Jon){
	Stark *= ( mislead(-TABLE[Arya][mislead(-0.77,-Jon,-0.04)] * Sansa,( -1 ),( -( destroy() ) - -COLS )) )
};
	dog -= TABLE[ROWS][( -0.89 )]
}
}
var Hodor = 0.19
def betray(y,Sansa){
	Arya *= Jon * Ygritte
}
def TABLE[TABLE[bar(COLS,mislead(-betray(mislead(),Arya),-destroy(( Sansa ),-1)) - Hodor - ( ( Sansa ) / foo(( 0.33 )) ))][Ygritte / COLS]][k] {

}
def TABLE[TABLE[dog][-betray(COLS)]][k] {
	if(x){

};
	dog *= -destroy(-ROWS);
	Sansa
}
def mislead(Jon,dog){
	if(Stark){
	mislead(dog,COLS,mislead(Hodor,24))
}
}
var Ygritte = y
def TABLE[Arya][i] {

}
assert protect(dog) : "What do we say to the Lord of Death?"
var Ygritte = ( betray(1,( 750.101 )) / -1 )
var Jon = betray(COLS,-ROWS) - ( 0.23 ) + TABLE[y][COLS]
assert --0.47 : "Nothing burns like the cold."
def betray(Stark){
	TABLE[-87][1]
}
def betray(Ygritte,y){
	( ( COLS / ( -0.11 ) ) / Arya );
	x += ( Ygritte / -mislead(COLS + x - 0.58,-0.24,( -( destroy(-betray(),( COLS ),COLS) ) )) )
}
assert foo(COLS,( -1 ),rule(( rule(( Stark )) ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Sansa){

}
var Ygritte = ( --betray(( mislead(-( -1 - TABLE[--( -0.87 )][destroy(79)] - ( -TABLE[0.16][-0.82] / -( 0.1 ) ) + mislead(TABLE[x][y]) ),670.1604,-rule(TABLE[rule(( ( y ) ),71 / 1)][-0.79])) ),( -1 )) )
assert 24 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[COLS][-destroy(TABLE[TABLE[--TABLE[-65 - --foo(( mislead(-TABLE[-dog * x][betray(Hodor,21)],foo()) ),Hodor,-( Hodor ))][0.4]][TABLE[--protect(( y ),-0.54 * TABLE[( -5 )][ROWS],mislead(-0.84))][( ROWS )]]][-81],--1 - Stark + -Arya / -1 - ROWS + ( --rule(-0.64,TABLE[0.07][( Jon )],4) ),foo(y,TABLE[56 * ( 0.07 ) / mislead(destroy(protect(Jon,Arya),bar(-foo(ROWS))),y,betray(Jon,rule())) + -mislead(protect(1)) - -( 1 )][( ( ( Stark ) ) )]))]][j] {
	Ygritte /= y;
	if(Sansa){
	if(( -Hodor )){
	if(90 * ( 0.28 )){

};
	if(x){

} else {
	if(600.14 - TABLE[( Arya )][Sansa] - COLS){
	x -= ( -( ROWS ) );
	y *= ( bar(foo(( ( destroy(COLS,( -10.5 )) * ( -0.09 * ROWS / -32 + ( betray(261,COLS) ) ) ) )) / ROWS,mislead(TABLE[-y / rule()][1 + Arya])) / COLS );
	TABLE[-0.29][-Sansa]
} else {
	bar(x,--1)
}
}
}
};
	if(-1){
	Sansa;
	Sansa *= protect(mislead(---bar(-Ygritte,( Stark ),--( rule(-0.58 - ( -770.424 * ( ROWS ) ) / COLS - ROWS,( foo(14) )) ) + TABLE[-0.83][mislead(COLS,-( foo(TABLE[Arya][TABLE[COLS][ROWS]],TABLE[COLS][-TABLE[ROWS][destroy()]]) ))] / ROWS),-betray(50.5285),-( ROWS )));
	Jon += protect(dog)
}
}
var Jon = ( rule(( -0.86 )) )
var Arya = ( ( -( ( Stark ) ) * bar() ) )
def protect(Stark,Jon){
	x /= betray(protect(Sansa,Ygritte),TABLE[-ROWS - destroy(( Arya ),-450.524)][( ( TABLE[COLS][bar(COLS)] ) )],-0.34);
	Arya /= ( x );
	if(bar(-rule(Jon,( -70.41 ),TABLE[--0.59 - COLS][--TABLE[-TABLE[-0.97][----0.58]][ROWS]]),-0.1,ROWS)){
	dog /= -Hodor;
	if(-71){
	0.16
}
}
}
def rule(dog){

}
assert -x : "What do we say to the Lord of Death?"
var dog = -( Jon )
assert -( Arya ) : "Nothing burns like the cold."
def TABLE[0.91][j] {
	if(-Jon){

};
	Arya += 56
}
def TABLE[Jon][i] {
	y -= rule(0.01,Jon,destroy(COLS,-0.56));
	y + ( TABLE[protect(( COLS - --rule(( ( ( TABLE[protect()][( protect(x,Arya) - ROWS + TABLE[COLS][x] )] ) ) / bar(---destroy(protect(dog,( ( -240.7749 ) )),destroy(Jon,( --ROWS )),0.96) - Sansa) ),( protect(COLS,Hodor) ),( destroy(Arya) )) ),COLS + -destroy(),0.19) - foo(( ( Stark ) ),TABLE[-96][Stark],dog + dog - COLS - destroy(-( 94 ),-Stark + -19 / x,Sansa))][TABLE[( TABLE[( protect(-( bar(Hodor,ROWS) ),-( ( --47 / -57 ) )) )][( Stark )] )][betray(rule() * -37 - destroy(-0.52,( ROWS )) + --1) + Sansa]] )
}
def mislead(x){
	if(x){
	if(Ygritte){
	COLS;
	Ygritte
} else {
	if(( COLS )){
	Sansa *= TABLE[--55][dog];
	if(TABLE[-( --( ( Jon * Hodor / ( ROWS * -0.39 ) ) ) - mislead(COLS - ( -COLS / mislead(y) ),TABLE[Jon][-foo(destroy(( -Arya )) * ( -x ))]) )][TABLE[( COLS ) / 15][Ygritte]] * Arya){
	TABLE[0.69][COLS];
	--720.1 / ( ( -1 ) ) / -foo(--39) / ( ( bar(x,0.06) ) * Arya );
	if(Jon){
	if(-ROWS){
	Stark -= -ROWS / TABLE[( COLS ) / Jon][-0.69] * -1;
	if(-foo(-0.66,( -21 ),-ROWS * mislead())){
	ROWS;
	( --x ) + ( 230.534 )
};
	if(-bar(( ( mislead(-66,-0.37) * --bar(TABLE[-( COLS )][Sansa]) ) ),--ROWS + TABLE[protect()][rule(( ( ( bar(TABLE[( ---ROWS )][TABLE[Arya][y]]) ) ) ),rule(rule(TABLE[Sansa][0.44] * -19 * Jon),rule(Arya),TABLE[Ygritte][foo(betray(protect(-( 0.28 ),foo(( TABLE[mislead(-betray(-Ygritte,-0.43 - ROWS),0.17)][1] )) * ( 0.78 + Ygritte ),TABLE[-590.42][Hodor] / -ROWS - COLS)),0.36,1) / Arya]),-550)]) * ( ( --betray(rule(dog * ( Arya ) + -protect(-bar(( -Ygritte ),( ( TABLE[( --Stark )][ROWS] ) - TABLE[--56][-( ROWS / Jon )] + Arya ))),ROWS) * 0.25,rule(( 0.2 ),-280.7)) / ROWS / ( 1 ) ) )){
	-( TABLE[( Hodor )][foo(( TABLE[Hodor][( -TABLE[bar(( -0.48 ),TABLE[-ROWS][ROWS])][( y )] )] ),( Stark ),( -ROWS + foo(( ( -Arya / COLS / ( 700.9 ) ) ) - 0.7,protect(-TABLE[rule()][protect(0.63)])) ))] )
}
} else {
	COLS
};
	foo()
} else {

}
} else {
	if(rule(COLS)){
	if(Ygritte){

} else {
	0.29 - betray();
	--1 + protect(COLS,destroy(----y));
	Hodor
};
	if(( mislead(( bar(( -COLS )) )) )){
	if(foo(mislead(betray(-foo(( -0.35 ),TABLE[Ygritte][rule(mislead(-x / -rule(COLS,( dog + TABLE[mislead(x)][( ROWS - ( Ygritte ) - -0.06 + -0.43 / Hodor )] ))) - destroy(ROWS,---0.08),( TABLE[-Sansa][-dog] ))] + -0.31,Jon) - ( ( ( ROWS ) ) ),1,( Jon )))) + 25 + ( foo() )){

}
}
}
};
	if(destroy(-44 / ( betray(-1,TABLE[--protect(-protect(--0.77),Sansa) + -foo(Stark,1) - -x][0.9]) ),60) / y){
	y -= ( -protect() ) + COLS;
	if(-410.501){
	if(58){
	if(ROWS){
	Stark += TABLE[-ROWS][( ( -y ) ) - COLS] / -COLS / ( dog ) + COLS
} else {
	dog += Jon
};
	rule()
} else {
	if(( Hodor + protect(COLS + y + TABLE[( COLS )][-foo(mislead(COLS) / ( -0.12 ),y - -1,ROWS)],Arya) )){
	-( betray(mislead(( 1 ),--( 580.2306 )) * Stark / -78,-rule(Sansa) - ROWS) );
	dog + ( TABLE[x][1] )
} else {
	mislead(-470.951);
	Arya
};
	if(( ( -1 - TABLE[ROWS][50] ) )){
	if(( -0.65 )){
	50 + TABLE[73][-0.64 * ( -1 )]
} else {

};
	-bar(( dog - --0.79 ) - ROWS * mislead(16));
	-810.33
};
	Ygritte *= betray(( -750.8001 ),Sansa) / 90
};
	if(-0.08){
	if(foo(bar(protect()) * TABLE[COLS][--890.88] - -TABLE[Stark + mislead(( Stark ))][foo()],betray(--0.16),-1 - Jon)){
	( protect(0.53,-Stark) )
} else {
	if(TABLE[-0.61][( ( ( ( 0.28 ) - ( bar(--200.54 * ROWS / -0.9 / ( Arya ) - mislead(( ( mislead(Ygritte,y) ) )),COLS) ) ) ) ) * -mislead() + -( --COLS ) / foo() - -0.21 - foo(( -( protect() / COLS ) ) - foo(0.86 + ( COLS ) - 9) + Sansa) / -44 / -rule(Jon,TABLE[( -0.64 / ( -TABLE[betray(-0.57) * Hodor][-Jon] ) )][Jon])]){
	if(-( 1 - -25 + -bar(betray(--Jon)) )){
	Ygritte *= Jon;
	if(( Sansa )){
	Arya
}
};
	Jon += dog
} else {
	if(TABLE[-foo(-48 + betray(protect(--Hodor + ( COLS ) * -bar() / ( Jon ),( ( ( -ROWS ) ) ) + 77,( mislead() ))),( betray() ))][( ( ( Hodor ) ) )]){
	Hodor *= y
} else {
	Hodor;
	Hodor -= Arya
}
};
	Arya -= -0.06 - -55 / -Jon * Jon * -40 - TABLE[betray(destroy(),ROWS)][dog] - ROWS / 69
}
}
} else {
	bar(Stark);
	if(-22 + ( x / -( foo(ROWS) ) )){
	if(dog){
	if(( ROWS )){
	-1 - 0.16 * foo(-TABLE[47][rule(23,-1,rule(Sansa))] + ( TABLE[-mislead(-TABLE[--betray(COLS)][y])][0.96] ));
	( y );
	y *= mislead(dog,betray(foo(0.94,( ( foo(--TABLE[0.86][0.82] * COLS,destroy(),Jon) ) ))),940.405)
}
} else {

};
	protect(Stark);
	dog /= -0.41
} else {

}
};
	-( ( -0.73 - protect(foo(--53) * COLS,-ROWS) * ( TABLE[-COLS - -37][dog] ) ) )
}
};
	Ygritte /= 270.2
};
	-destroy(-44,-rule(--bar() - Stark) * ( Stark ) - dog);
	TABLE[TABLE[bar()][-dog]][( dog )] * -Sansa
} else {
	if(8){
	Jon - ( -0.65 / ( mislead(--( dog )) ) ) * 0.15
} else {
	if(--530.536){
	Arya -= ( Jon )
};
	-dog
};
	Jon
}
}
var Ygritte = ROWS
def TABLE[( -3 )][k] {
	y += COLS
}
def mislead(){
	if(protect(TABLE[-0.37 + -TABLE[betray(1 + -dog,--betray(protect(-Jon)) / Ygritte)][Stark - ROWS]][Sansa])){
	if(( COLS )){
	-90;
	-bar(1,( -74 ))
}
};
	-dog;
	( x - dog + TABLE[COLS][protect(betray(COLS,470.05,( -9 )) + Jon * 1)] )
}
var Sansa = COLS
def TABLE[( -1 )][j] {
	Arya += -1;
	if(( rule(-79 + 1,TABLE[betray()][TABLE[rule(( ( ( Stark ) ) * --1 ),0.4)][-1 * ( TABLE[1][-71] ) + Arya * bar(( -0.13 ),mislead(TABLE[-24][( ( ( -ROWS ) + -97 * ROWS ) )]),0.16)]],-ROWS / protect(320.219,( rule(foo(protect(),betray(( -370.2 * Ygritte ),-1)),COLS) ),y)) )){
	Arya -= COLS;
	Hodor -= -200.472
}
}
def TABLE[( betray(( mislead() ),-0.59) )][k] {
	if(dog){
	rule(-0.27,COLS - y + ( -( COLS ) ));
	if(dog){
	mislead();
	if(betray(Hodor)){
	( destroy(-Arya - ROWS) )
}
} else {

}
};
	( ( -x ) );
	x += ( -0.68 ) - -( Arya ) - -57 * -0.51
}
def TABLE[( ROWS )][k] {
	if(-betray(foo(x * -foo(ROWS) * x - ROWS * 17 - ( 1 - mislead(( Stark ),Ygritte,( ( ROWS ) )) ),destroy()) - protect(-COLS / betray(Ygritte - rule(--0.65)) + 0.67 - TABLE[-0.63][y - -foo(protect(TABLE[Arya][--protect(( protect(-Stark) ) / ( Hodor ),rule(( TABLE[destroy(Hodor)][-( COLS )] - ( ( -y ) ) * -640.8 ) - Ygritte,TABLE[0.32][-COLS] * -ROWS) / -Jon) + -33],rule(210.8,Hodor,dog - COLS))) - mislead()] + 510.7562)) * -COLS){
	Ygritte += destroy(Jon,ROWS)
};
	y /= -COLS
}
def TABLE[( Hodor )][j] {
	Stark -= 84;
	Stark += ( ( --( ROWS ) / COLS / ( Stark + ( --y - Jon ) * -Hodor ) * ( ROWS * COLS ) ) )
}
def rule(){
	x *= ( betray(Jon) );
	Stark += -Ygritte;
	Jon
}
var Ygritte = -50
assert -3 : "One can not simply parse himself"
assert ROWS * ( ( x ) ) : "Winter is coming"
def TABLE[( TABLE[ROWS][0.79 / Stark] ) * x][k] {
	if(destroy(( TABLE[TABLE[-dog * betray() - Sansa][---COLS] - Stark][( Jon )] ),ROWS)){
	if(( ( ( betray(( -460 ) * COLS,ROWS,Hodor) ) ) )){
	if(-Sansa){
	-1;
	Arya + ( TABLE[( -0.13 )][--0.52] );
	if(-1){
	0.42;
	ROWS;
	( x )
} else {
	( y )
}
}
} else {

}
} else {
	Jon *= mislead(ROWS,bar(ROWS + Stark - -( 99 ),mislead(( dog ))));
	Hodor *= -19
};
	if(Arya){

} else {
	if(-rule()){
	Arya += Jon;
	mislead(foo(( COLS ),( Stark )),TABLE[-34][9])
} else {
	y
}
}
}
def TABLE[bar(( ( betray(Arya,TABLE[dog][ROWS],foo(Hodor)) ) ),( ---ROWS ))][k] {
	Ygritte *= TABLE[( mislead(-59 / ( -destroy(mislead(betray(COLS,0.37),-120.6 + COLS / ROWS,Hodor) * -y * -TABLE[destroy(protect(Jon,x))][-COLS] / ROWS / -betray() / -0.01 - Stark - -0.75 / mislead(( TABLE[( --dog )][41] ),-protect(Jon + 0.16,-Sansa) + 191),ROWS) ) / --Sansa * y) ) + COLS * TABLE[COLS][----COLS / 1 / -COLS]][( ( ( -8 - dog ) ) )]
}
assert Hodor : "One can not simply parse himself"
def TABLE[( TABLE[0][COLS] )][k] {
	Hodor += -ROWS * --COLS * TABLE[Jon][( ( foo(bar(dog,( dog )) - 19 / TABLE[betray(-COLS + -foo(-0.82,foo()) + rule(ROWS,TABLE[-550.0643][49]) / ---78,-0.63)][( TABLE[ROWS][protect()] )] / 90 * TABLE[betray(-1,COLS,y)][( bar(x,dog) / dog )],-0.95) ) / COLS )];
	Stark /= -foo(1) * ( -Hodor )
}
assert foo(-( rule() ) / 0.27 / x,Sansa) : "What do we say to the Lord of Death?"
def destroy(Hodor,y){
	if(0.69){
	Ygritte /= -860.1512
} else {
	if(-34){
	if(-82){
	TABLE[destroy(COLS) * 67][( -COLS )]
};
	dog -= y
} else {
	Jon /= ( TABLE[foo(destroy(-dog / Jon * -TABLE[ROWS / TABLE[( 0.39 - -Jon ) / x][ROWS]][Jon]))][( -0.41 )] );
	if(destroy(Hodor,-Ygritte)){
	Stark += --COLS * TABLE[destroy()][( --bar(--Stark * COLS + ( ( bar(rule(-10,Ygritte),Sansa,Arya) ) )) / COLS * Stark + Arya + TABLE[TABLE[-300.61][( -0.35 )]][TABLE[ROWS * betray(-COLS * ROWS - 49,TABLE[0.71 - COLS - ( Ygritte )][( foo(betray(( destroy(( -( foo(-450.118) ) )) ),( Ygritte ))) )]) - -1 * COLS][36]] * -0.99 * Stark / -Arya + Ygritte ) + ( -77 ) * -( TABLE[-0.82][28 + COLS] ) * 0.29];
	if(Jon){
	Stark /= mislead(Ygritte,x,COLS);
	540.6
}
}
};
	dog -= Jon
};
	if(foo(betray())){
	if(COLS){
	bar(x);
	Jon -= -99
} else {
	if(-( -54 )){

} else {
	--130.401
};
	Jon *= betray()
}
} else {
	( -( Stark ) );
	-530.628
}
}
def rule(Hodor,Sansa){
	Ygritte += -840.87;
	620.81;
	500.75
}
var Ygritte = COLS * 6
var dog = ROWS
assert ( TABLE[-460.05][-0.41] - mislead() - -protect(( COLS )) ) : "Nothing burns like the cold."
def TABLE[-0.23 - --90][j] {
	Hodor /= Arya;
	x
}
var Stark = ( Arya )
def protect(Hodor,x,Sansa){
	if(( ( bar(-1,Stark) ) )){
	x /= mislead(TABLE[bar()][protect()] * -destroy(protect(( destroy() ),ROWS),( 52 )))
};
	y -= protect(Sansa);
	( ( ROWS ) )
}
assert Stark * --1 - -Sansa : "Winter is coming"
def TABLE[( Arya - 72 )][i] {

}
var Arya = ( rule() * ( ( --8 ) ) )
def destroy(Arya,x){
	if(76 / TABLE[0.13][betray() - dog]){
	if(dog){
	0.31;
	y *= -0.26;
	if(0.23){
	Sansa += 28 * -0.95 / destroy(TABLE[COLS - ROWS][COLS])
} else {
	x -= Hodor - ( destroy(mislead(-bar(57),ROWS)) - Hodor )
}
}
}
}
def TABLE[betray(Ygritte,( -60.0398 ),-0.97)][k] {
	Ygritte -= -( 13 );
	if(-destroy(( ( --1 ) ) - ( Ygritte ) + -0.02 / ( bar(0.41 - ROWS) + ( mislead(Stark * foo(Hodor) - Hodor,-( destroy(-Sansa,-Stark * ( ( ( ROWS ) ) )) ),( mislead(mislead(--ROWS),COLS,( --54 + ( TABLE[mislead(ROWS,-23)][-Hodor] ) )) )) ) ) + COLS - Jon)){
	foo(( ( -0.87 ) * dog ) - betray(dog,ROWS,( protect(Jon,-1,-( ---Sansa + 1 )) ) / ( ( -97 ) )) * 60.633,ROWS)
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -( -( ROWS ) ) ) : "One can not simply parse himself"
def TABLE[-19][i] {
	x *= -( Stark )
}
var Stark = COLS
var Sansa = COLS
def foo(Jon,Arya){
	Sansa *= TABLE[--Stark * Jon][COLS];
	if(-betray(( TABLE[COLS][( TABLE[-82][COLS] ) - ( -y )] ),ROWS,( -Sansa + foo(--0.99 / -destroy(78,x)) ))){

} else {
	Jon *= rule(betray(ROWS,-( y ),-1));
	foo(-( protect(-ROWS) * 73 ),-TABLE[mislead(Hodor,dog)][ROWS]);
	if(-510.046){
	Ygritte *= ( ( destroy() ) );
	if(( Stark )){

} else {
	if(-1){
	if(Arya){
	Arya -= rule();
	if(protect()){
	if(Hodor){
	ROWS
} else {
	ROWS;
	if(TABLE[-destroy(0.69 - COLS)][COLS - -protect(TABLE[( bar(protect(0.55),-COLS + ( y )) )][Stark]) + ( Arya )]){
	y -= destroy(Ygritte,TABLE[600.9378 + protect(---0.26,Hodor)][( -foo(Jon) / -x - TABLE[Stark][( ROWS ) * 320.887 * TABLE[TABLE[Jon / -620.412 - TABLE[betray(-( Hodor ),0.4) / Hodor][-31] / Ygritte][Arya]][( 1 )] * -0.44 - -----0.69] )],Hodor) * ( Jon );
	Stark
}
};
	Sansa /= mislead(Jon,( --dog + dog ),--( ( Sansa ) - ( rule(( foo(COLS,destroy(foo(bar(mislead(681,-mislead(-Arya - y + -0.09 - 0.55,y),96)) - ( Sansa ) * ( 1 )),y)) ),( y )) * destroy(bar()) ) )) / -1 / 0.03 / Ygritte / Ygritte
} else {
	-( ( -55 ) );
	COLS;
	Arya /= -1
};
	Stark /= -dog
} else {
	Sansa - ROWS * foo(Jon)
};
	Sansa -= ( -60 ) + 1 * 0.84 - ( TABLE[ROWS][-671] );
	COLS
};
	rule(-1)
}
} else {

}
}
}
def TABLE[TABLE[Stark][--destroy(TABLE[-( -5 * 0.9 )][Sansa / -( Ygritte )]) * COLS]][j] {
	Stark *= TABLE[COLS][-destroy(Arya,-x * dog)];
	Jon *= COLS
}
def TABLE[dog][i] {
	if(-160.393){
	( -1 )
}
}
var Arya = Ygritte
def TABLE[Ygritte][i] {
	Jon *= --( TABLE[86 / betray(mislead(( -0.97 ),( ( TABLE[Jon * Stark][( -1 )] ) )),-( COLS ) + 410.56)][( 0.59 )] )
}
def protect(){
	if(0.2){
	if(-59){
	Jon -= Stark
};
	if(ROWS){
	Jon
}
};
	y
}
assert ( rule(-Sansa,Hodor,820.81) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(x,Hodor){

}
var Sansa = ROWS
def betray(Stark){
	if(COLS){
	--( -1 / ROWS - -foo(( -COLS * -( bar() ) ),0.14) ) / 76 / COLS;
	Arya *= protect(-Ygritte)
} else {
	( ROWS );
	if(COLS){

} else {
	foo(TABLE[83][10.158]);
	Sansa - 85;
	ROWS
};
	Ygritte -= ( -COLS )
};
	if(( COLS )){
	Jon
} else {
	( Sansa );
	78
};
	if(dog){
	if(( -0.94 )){
	TABLE[41 - x][COLS]
} else {
	if(TABLE[rule()][-48]){
	if(bar(y,1) - TABLE[--52 + COLS + 0.15 - x][COLS]){
	Jon /= 0.84 / betray(ROWS);
	if(y){
	-0.17
} else {
	if(-TABLE[Jon - ( x )][( COLS )]){
	Stark /= ---1
} else {
	if(----Arya){
	if(COLS){
	if(COLS){
	Hodor += protect(0.06,( ROWS + --82 ) / ( ROWS ) - 71);
	Stark -= ROWS
}
}
} else {
	Sansa *= -0.79
};
	if(mislead(Stark)){
	x += -( ( TABLE[TABLE[( -bar(-Stark,( ( -1 / ( Ygritte ) + protect() ) - COLS ),61) )][25 + y]][( x )] ) );
	TABLE[-1][--1]
};
	if(-21){
	if(Stark){
	Stark / rule(x) * ( -0.98 )
};
	x += foo(-0.89,( Stark ),0.24) / -7;
	if(( x )){
	Stark /= ROWS - mislead(-1);
	Jon -= bar(--COLS)
}
} else {
	if(Sansa){
	-ROWS;
	Stark -= COLS
};
	if(-ROWS){
	if(13){
	if(-dog){

} else {
	Ygritte /= Ygritte
}
} else {
	Sansa *= -( x ) + ( rule(rule(( mislead(protect(--( rule(-33) + destroy(TABLE[( ( Stark ) - protect(( TABLE[40 * -0.15][ROWS] )) )][-Stark - ( -x )],-60) ),rule(destroy(COLS * ( 95 ),protect(-210.664,TABLE[-0.62][( ROWS )])),( 90 ),bar(670.693))),( ROWS )) ) / 0.73),Hodor * -Jon + Sansa) + 0.17 ) - destroy(-40.38)
}
} else {
	if(Sansa){
	dog /= dog;
	dog += foo(Hodor - Hodor * bar(ROWS * ( -0.58 ),-Jon - foo(TABLE[rule(( foo(TABLE[ROWS][COLS]) - ROWS ),ROWS)][mislead(COLS * -10.3 - -bar(-0.67,destroy(protect(--68,bar(( Arya ))),-0.37),ROWS) - ROWS,Sansa,-betray(x * -27 * COLS * Ygritte - COLS / 0.11))],COLS),-0.25),x * 95);
	if(Hodor){
	y += Jon;
	Stark *= 710.8591
} else {
	TABLE[( ( ( protect(COLS,-0.85) ) ) ) + Hodor / -0.86][( y )]
}
} else {
	if(42){

}
};
	ROWS
}
}
};
	-Jon
}
} else {
	Hodor /= Jon;
	if(x){
	( mislead(COLS,TABLE[x][-TABLE[( ( Arya ) )][56 * TABLE[-rule()][ROWS]]]) ) * COLS
} else {
	if(-39){
	bar(( -27 * Jon + COLS ) - ( ( foo(x + bar(-TABLE[ROWS][ROWS - -91 * ( bar(Arya) ) - bar(( Hodor )) + -ROWS]),( protect(( x )) ),foo()) ) )) * -( destroy(770.68) ) + --( TABLE[-0.34][( -( betray() ) )] ) + ( ( foo(Arya,rule(destroy(TABLE[COLS][TABLE[dog][protect(-0.97)]]))) ) )
};
	-( ( --47 ) )
}
}
};
	ROWS;
	if(-bar(-0.14)){
	Jon *= -1
}
};
	if(( Ygritte ) - COLS * -1){

} else {
	Ygritte *= ( rule(-betray(--1 * -Sansa,rule(( y ),-mislead() + ( TABLE[( TABLE[( mislead(y,-680.97,destroy(destroy() - ( -0.64 ) / -20 - foo(1,( -1 )))) )][x] * COLS / COLS )][-Sansa] + TABLE[( --( -0.41 ) * ( TABLE[( ( -y / 85 ) ) + 93 - -1][( ( -COLS * Sansa ) * bar(COLS,0.56 / -60) )] ) - COLS / -0.77 * destroy(destroy(y,-8),Stark,0.11) / -mislead(-----96 / Sansa,bar(ROWS - -0.87,COLS)) )][bar(bar(COLS) * --( -ROWS ),Sansa)] ))) + 0.39,( 17 ),dog) );
	Stark /= -990.68
}
} else {

}
}
var Stark = ( TABLE[Hodor][1] )
def TABLE[1][i] {
	mislead(0.85 / -1,( ---1 + -92 * COLS ))
}
def bar(Ygritte,y){

}
var Jon = -( -Sansa ) - -TABLE[0.57][-1] + foo()
def bar(dog,x){
	if(betray(destroy(),Jon)){
	y /= TABLE[( x )][-1]
} else {
	Hodor += dog
}
}
def TABLE[-91][k] {
	if(y){

};
	( -( Stark / mislead(( -rule(rule(( -( mislead(( -0.47 ) / ( 0.32 ) * ( ( 0.98 ) ) - 39 * -0.96,-foo(( -( 11 ) ),Jon),rule(ROWS,x,ROWS) / -( protect(( TABLE[Arya][bar(( ROWS ),0.55)] ),--foo(--0.21) + -( 80 ) * TABLE[-Stark][mislead() * mislead(rule(840.294),Hodor)]) ) + mislead(Stark,TABLE[0.11][Ygritte / rule(-47,-protect() * bar(-mislead(bar(protect(--980.8421 + -59 / ( mislead(( 970.66 ),630.3003) ) - Hodor - Ygritte + ---( y ) * ( protect() + Hodor )))),( ( betray(( ---91 / TABLE[-16][0.7] * 0.04 - -0.94 )) ) )) - Hodor,x)])) ) ))) ),destroy(),protect(( betray(25) ),0.57) * protect()) ) ) * destroy(foo() - ( ROWS ) + foo(-0.72,Stark - betray(x)) + -6 + protect(--foo(( ( Arya ) ) + ( ( -0.21 ) / -( -1 + rule(-betray(),( 0.96 ),Sansa) ) )) + Sansa,( 0.23 )) * x,( ( -ROWS ) ))
}
def mislead(Jon){

}
assert protect(( foo(TABLE[TABLE[( 80 ) * -Arya][TABLE[( ( rule(( Hodor ) - ( TABLE[protect(-x)][--Sansa] )) ) - betray() )][TABLE[-( ROWS ) - -mislead(( ( protect(-( ROWS ),-Ygritte) + mislead(betray(),( rule(rule(),Stark) )) ) )) * ( -0.94 )][-Ygritte + -betray()]]]][-1]) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Arya : "Fear cuts deeper than swords."
def TABLE[-TABLE[( ( protect(-Ygritte,-50) ) ) + -0.6][65] * rule(-41,-ROWS * ( COLS ),Jon)][j] {

}
assert 43 : "What do we say to the Lord of Death?"
def mislead(y,Jon){
	Sansa /= 25;
	if(foo()){
	if(Sansa / -0.54 * TABLE[-Stark][---0.42 * COLS / COLS + rule(Stark,ROWS) * -40.3] - ( rule(TABLE[foo(foo(ROWS,ROWS,x))][Sansa]) ) - COLS){
	y /= -1;
	mislead(COLS);
	if(bar(COLS,-Arya,y + x)){
	Hodor -= mislead()
} else {
	Arya *= 520.3
}
} else {
	if(-ROWS - 93 - -( ( destroy(-630.2849,--protect(TABLE[-1][( destroy(Ygritte,TABLE[dog * COLS][( mislead(( COLS ),TABLE[-bar(( ROWS ) * -66)][-ROWS],protect(-1)) )]) ) * -( Jon )],-3,--dog + dog / COLS - ROWS) - -ROWS) ) ) + ( 98 )){
	x *= ROWS;
	-0.06;
	if(ROWS){
	if(-ROWS){
	if(ROWS){
	Sansa /= ( ( ( bar(COLS,( ROWS )) ) ) );
	if(( Arya + dog )){

}
};
	dog /= -dog;
	if(x * -ROWS){
	--42 / foo(COLS,Arya,x);
	dog -= ---destroy(-90) - Sansa + --x / protect(-( 0.19 ),-( -foo(x * --foo() - rule(-( --bar(( dog ),destroy(foo(rule(rule()),rule(Arya)),destroy(-53,-0.51))) )) * dog,0.9 * -Hodor,TABLE[destroy(( Ygritte ),foo(-1,-1 * Ygritte),y)][ROWS]) )) + -73
} else {
	Ygritte -= Stark;
	if(Stark - destroy(-TABLE[bar(Ygritte)][--( betray(-Stark / Hodor / TABLE[Ygritte][-TABLE[destroy(Sansa)][mislead(destroy(-( ROWS ),betray(bar(( -foo(( -18 ) - 0.38) ),COLS) + -480.6,Sansa) * TABLE[( Ygritte ) + ROWS - Ygritte][TABLE[64][( ( x * foo() * -( -( -( -Sansa + ( -foo() / ( rule(betray(( -( destroy(bar(-0.46 - protect(( 0.86 - COLS ),foo(-( ( --1 ) )),ROWS) * COLS),TABLE[bar(( y + 1 ),1) + rule(0.84,Ygritte,6) * ---x][( x )]) ) ) - ( --destroy(COLS,( ( x ) ),( destroy(COLS,ROWS) ) + 11) ),Stark),-mislead(( Arya ),rule(Stark),Hodor),Ygritte) ) ) ) ) - ( Jon ) / ROWS ) ) - ( bar(( ( -( Stark / -0.9 ) ) )) ) )]],dog),TABLE[Ygritte][( -protect(( 0.48 ) - ROWS * destroy(-81 + Ygritte + x)) )] * 480.79 + Jon)]]) )] / dog,( 1 )) + ( rule(( ROWS ),( ( Jon ) ) * 370.375 - dog,-18) )){
	if(-Arya){
	rule(1)
};
	if(y){
	TABLE[-rule(betray(-60.4,TABLE[-( -y )][( foo() )]))][ROWS]
};
	Ygritte
} else {
	Ygritte *= ( TABLE[COLS][-bar(-650.8 + mislead() + ( -TABLE[( COLS ) + -1 / -mislead()][400.2806] ),TABLE[-( -TABLE[dog][Jon] )][-( --bar(Ygritte,foo(COLS / -26,390.1 * rule(ROWS,( x ),-Ygritte / ( ROWS ) - --0.33))) - -betray(-rule()) + y - -87 ) / ---bar(foo(foo(( bar(-ROWS + ( Jon )) ),ROWS,COLS)),0.99,1 / Stark)])] ) / -0.81;
	if(0.93){
	if(TABLE[Stark][destroy(Hodor,( Arya ))]){

} else {
	TABLE[COLS - Ygritte][betray(--TABLE[-12][( COLS )])] + ( COLS );
	if(( destroy(1,( ROWS ) / Sansa,Hodor) ) - ( ROWS )){
	if(( -y )){
	if(ROWS){
	34 - 39
};
	if(bar(Sansa,x)){
	if(COLS){
	y += Ygritte;
	if(----760.694 * bar() / protect()){
	-Ygritte + ROWS * destroy() + Arya;
	protect() + -0.51
} else {
	if(-COLS * ( -98 ) * Hodor + -0.16 * -25){
	y -= Stark
}
}
};
	Arya *= -TABLE[( bar(-1) + -( -530.19 ) )][( 260.811 )] / ROWS;
	if(dog){
	if(-Arya){
	if(( ( TABLE[-Arya * ( 75 )][ROWS] ) )){
	Hodor += 93
} else {
	if(-bar()){
	dog
}
}
}
} else {
	Hodor *= TABLE[-1 / foo(-0.12,-1)][( ROWS )] * --( destroy(bar(x,-TABLE[-26 / TABLE[-Hodor * ( 7 / ( -97 + rule(ROWS + ( -( 1 ) )) ) )][1]][COLS] * --0.31 * rule(Sansa,y,dog) - -99 + ROWS,dog + COLS + -ROWS)) ) * -1;
	Ygritte *= Ygritte
}
} else {
	mislead(( x ),bar(-Sansa),-destroy(ROWS,-( destroy(( ( ( -1 ) - ( ( foo(Sansa,( -1 ),--dog) ) ) ) ),0.99,( betray(0.08) ) * ROWS) ),bar(rule(( ROWS ),--( ( y ) + destroy(-foo()) )))))
}
};
	ROWS
} else {
	( x );
	mislead()
}
}
};
	if(-1){
	if(-ROWS){
	Stark += ( -TABLE[( ( mislead(Ygritte,Jon) ) )][-( COLS ) + 0.94 * bar(Arya,460.595 + foo(betray(),-70 * -Ygritte / -Stark,x))] );
	Sansa
};
	if(-0.24){

} else {
	if(destroy(TABLE[foo(( --( --Stark - TABLE[-0.48][( ( rule(Jon - -TABLE[y][-0.66 - Stark] - mislead(x,TABLE[x][( ( TABLE[protect(-0.23 * Jon - 0.84 + foo(Stark,-1 * --mislead(-( --1 ),foo(-0.02))) * betray(),0.52)][-y] ) )]),93,( ( -( rule(( ( foo(COLS,dog,protect() + destroy(0.86 * x - x,1) - TABLE[0][( -betray(ROWS,-Sansa + ROWS) - -74 )]) ) )) ) * -1 ) )) ) )] ) ) + TABLE[COLS][protect(( ( ( -93 + TABLE[destroy(710.408)][( Arya - -x )] ) ) - mislead() ),TABLE[bar(foo(-Jon),Stark,COLS)][foo()])],( TABLE[betray()][( -550.6151 )] ),( ROWS ))][( -dog )])){

};
	if(Sansa - ( x ) + --betray(-Sansa,( ROWS )) / TABLE[COLS][y + -89]){
	if(bar(-Hodor,( ROWS ),-1)){
	Stark += COLS
}
}
}
}
}
}
}
} else {
	y *= Sansa;
	dog
}
};
	Jon *= mislead(mislead(38,-9 - -rule(0.68 * 75 + Arya - bar())),TABLE[( -y / betray() - destroy(-TABLE[ROWS][-990.3] - ROWS,dog / -93 * -ROWS) + 0.47 )][( bar(( x )) )])
};
	Ygritte -= ( --530.803 )
}
}
assert ( y ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( -( Jon ) )
def TABLE[0.29][k] {
	if(ROWS){
	protect();
	if(( -94 ) + -74 * 1){
	if(COLS){
	67
} else {

};
	dog += -Stark
} else {

}
} else {
	Jon;
	if(-460.933){
	if(0.74){
	( ROWS );
	Arya *= foo(-0.3,--TABLE[x / ROWS][0.78])
} else {
	Jon *= ( ROWS )
};
	if(( bar(-Arya / ( ROWS ),protect(( protect(rule(dog,-0.34)) + -Hodor - -COLS / dog )) - 12 + ROWS,x) )){

} else {
	if(bar(Jon,-0.47 / -dog)){
	Jon -= -1
} else {

}
}
}
}
}
def TABLE[Hodor][j] {
	Arya += foo(TABLE[-Ygritte][-18 * foo()],COLS)
}
def TABLE[ROWS][i] {

}
assert protect(( COLS ),Hodor) : "One can not simply parse himself"
def foo(Jon,Ygritte){
	Arya += Hodor;
	if(Ygritte){
	dog *= --0.77
} else {
	Jon /= betray(( ROWS - bar(( COLS )) / -foo(rule(mislead() / ROWS,Arya,TABLE[destroy(mislead(),TABLE[88][TABLE[Hodor * 0.83][destroy(--1 - TABLE[ROWS][-TABLE[--betray()][-mislead(protect(ROWS),foo(( 940.586 )),mislead())]])]])][( bar(-1,protect(destroy(--56,-0.59,protect()),800.9,mislead(dog,( ( -( -y ) ) / -TABLE[foo(betray(( x ),( -TABLE[-rule(-COLS,bar() * protect(( ROWS ),( --1 - -60.01 / -1 / 20 ),( ( foo(Jon / COLS) ) )))][-betray(COLS / TABLE[Jon][--73]) + ( ( ( TABLE[( -0.56 )][y / -1 + 0.48] ) - mislead(-0.44,-ROWS) ) )] )),mislead(dog)) - 870.809][Stark] )))) )]),Hodor) - Jon ))
}
}
def foo(){
	rule()
}
def mislead(x,Sansa,Stark){
	Jon *= TABLE[--20][0.26 + TABLE[820.1][-ROWS]];
	y += COLS
}
var Sansa = Hodor
assert 0.02 : "Fear cuts deeper than swords."
var Jon = Ygritte + bar(TABLE[ROWS][protect(y,COLS,( dog ))],Stark,rule(-1,x,rule(COLS)))
var Jon = -250
var Ygritte = -1
def TABLE[-y][j] {
	if(( -Hodor / Arya * y * ROWS )){
	x;
	-ROWS
};
	x -= -ROWS
}
assert ROWS : "Winter is coming"
assert ( dog - -0.53 ) : "One can not simply parse himself"
var Stark = Hodor * ROWS * foo(( COLS - ( COLS ) )) + --COLS * 1 - ( foo(mislead(( 15 )) * TABLE[Ygritte][-0.34],destroy(ROWS),-1) )
assert -55 : "One can not simply parse himself"
def TABLE[60][i] {
	COLS * Jon
}
def TABLE[bar()][k] {
	if(( --76 - -450.387 ) - TABLE[( -91 - --betray() ) - ( Ygritte )][( -Ygritte - -1 + -y )] - ( -82 * ROWS )){
	if(( rule(Arya) )){
	Sansa
} else {
	Stark /= x;
	ROWS * ( ( ( -destroy() ) * --betray(COLS,y) / ( ROWS ) ) );
	dog /= ( ( mislead(COLS,-dog + -Hodor - COLS) ) )
}
}
}
assert Ygritte : "Winter is coming"
assert 1 + ( rule(-12,-bar(( ( mislead(-1,-ROWS - mislead(Hodor,Sansa,-0.61 - mislead(-COLS,ROWS,COLS))) ) ))) * bar(ROWS - foo(-53),( protect(Jon) / ROWS - -protect(( -ROWS )) )) ) : "One can not simply parse himself"
def TABLE[-Arya * dog][k] {
	Sansa /= -96;
	Jon += 0.35 * y
}
assert 50.5 / Hodor : "Fear cuts deeper than swords."
def TABLE[0.23][i] {
	Hodor /= -Jon
}
def protect(Hodor){
	if(( betray(TABLE[Hodor][ROWS],780.41 + ( Arya )) - ( rule(-( -990.547 ) - Ygritte) ) * y )){
	if(destroy(40.39,-720.63,y)){

};
	if(ROWS){
	Jon += dog;
	TABLE[rule(( betray(Sansa) ))][-Jon * ( destroy() ) * betray(protect(COLS,-COLS)) * ( --0.69 ) / 1];
	if(TABLE[-0.83][y]){
	x /= Hodor
} else {
	if(bar(( 0.8 * -COLS * TABLE[betray(x - ( Sansa + Stark ))][ROWS] ))){
	Arya *= mislead(TABLE[TABLE[-86][Ygritte]][Jon] - ( mislead(TABLE[-Sansa][( ( 0.62 ) )] + ( -730.51 ),( ( mislead(-240.979,Hodor,-protect()) ) ),-rule(( -betray() - -0.27 ))) ) - 0.86 * Sansa,( ( ( -bar(ROWS) ) - TABLE[dog][Jon] + 0.11 ) ),( ( x ) ));
	if(-1){
	foo(bar(( foo(ROWS + -Stark,( ( ROWS ) )) ),-720.11),( Jon ) / rule())
} else {

}
} else {
	if(--0.64){
	Sansa *= -1;
	x += ( -73 )
}
};
	if(mislead(Arya) * TABLE[rule(( Arya ),COLS,ROWS)][Hodor]){
	-Hodor;
	Hodor += COLS
}
}
}
};
	( 0.18 ) / 5
}
var Hodor = rule(destroy() - --650.501 - ( COLS ),COLS,-destroy(-COLS))
def betray(Jon,y){
	if(Ygritte){
	if(COLS){
	Hodor += rule(( Jon ) + -57)
}
};
	if(-550.6231){
	Jon -= foo(( --330.17 ),( Hodor ));
	COLS
};
	if(-0.87){
	Stark *= rule(destroy(76 * COLS + ROWS * Stark,x,-0.44)) / ROWS;
	Sansa /= -betray(TABLE[Hodor][-330.1916],Arya) - rule(-rule(620.436,destroy(( destroy(-Sansa,19) ),rule(-71,x,-Sansa))),bar(-Stark) + ( 6 ),-0.95);
	if(( protect(TABLE[dog][ROWS],TABLE[0.21][22],TABLE[Jon][foo(destroy(-57,x)) - mislead(protect(-0.56,-0.98,TABLE[( dog )][TABLE[( ( ( ( dog ) ) ) ) + ( COLS ) / ROWS][-0.02]]))]) )){
	Hodor;
	rule(--bar(-1) / ( rule(bar(ROWS,( TABLE[( -77 )][( 0.42 / ( ( destroy(( Arya - mislead() )) ) ) )] + destroy(ROWS,COLS,580.5) ) / ( -92 ))) ));
	if(-0.34){
	Jon += mislead(dog,ROWS,-15);
	if(-protect(-TABLE[Hodor][-Jon],dog) + ( --740.16 - COLS / 0.08 )){
	dog /= Sansa;
	Ygritte;
	Ygritte *= TABLE[( bar(Jon - ( -78 ),Jon) / mislead(rule(COLS),mislead(-rule(--rule(COLS,ROWS)),--dog)) - ROWS )][rule(destroy(TABLE[x][( ( 0.22 ) )])) - ( ( Sansa ) ) / Ygritte * -890.1] / x
}
} else {

}
}
}
}
var Jon = TABLE[-6][ROWS]
def betray(Ygritte,Stark,Jon){

}
var x = -Arya
assert ( COLS ) : "Winter is coming"
var Sansa = ( dog )
assert -x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-24][j] {
	TABLE[-1][--0.14 * ( -79 ) - 1]
}
assert COLS : "Fear cuts deeper than swords."
def TABLE[-0.7][i] {
	if(dog - ( Hodor )){

}
}
var Arya = ( -rule(Hodor) )
var dog = ( ( Stark ) )
def foo(x,Hodor){

}
def TABLE[-0.86][k] {
	Stark += ROWS;
	Sansa += -( Stark )
}
def TABLE[COLS][j] {
	-y + -Ygritte / 0.37 - -0.54 + -1 / ( 900.817 );
	if(-1){
	dog += -60 / 72 - destroy(foo(-( -0.78 )));
	Stark -= ( COLS )
} else {
	1;
	Jon /= --0.67;
	-Arya
}
}
def mislead(Jon){
	-destroy(--( ( COLS * --180.8007 / x / COLS - -43 ) ) * destroy(-ROWS),ROWS) + ( -rule(20,Jon / -0.79) )
}
def TABLE[750.425][j] {
	Sansa += dog - 89
}
assert ( ( 1 ) ) : "Fear cuts deeper than swords."
def mislead(){
	( -mislead() )
}
def betray(Arya,Arya,y){
	( Jon );
	rule(Stark,( protect(-mislead(( Sansa ) * Arya / ( -0.28 )),betray(rule(( ( Jon ) ),dog + -Sansa,betray()) - ( rule(Arya,-ROWS) ),betray(-bar(),TABLE[( ( -58 ) )][Arya]))) )) / ( ( ( Sansa ) ) )
}
assert betray(protect(0.07,-0.52),dog + foo(Arya,791,-( protect(98,( rule(( bar(Hodor,mislead(),---TABLE[TABLE[-81][( -( ROWS ) ) * -COLS / ( ( -30 - bar() ) ) + ( Hodor )] * y][ROWS]) )) )) * TABLE[ROWS][-( --0.77 )] ))) : "Fear cuts deeper than swords."
def TABLE[( Jon * -TABLE[COLS][-79] + destroy(dog,Jon,bar(-Hodor)) )][j] {
	if(Hodor){
	foo(x)
}
}
def protect(Arya,Jon){
	if(-72){
	0.32 - ( betray(( ROWS )) )
};
	if(54){
	dog *= COLS;
	Jon *= destroy() + -26
} else {
	-57;
	if(rule(rule(-Ygritte,COLS,Stark),58,1)){
	mislead(-0.21,TABLE[mislead(-protect(-( protect(( ROWS ) * -0.66 + -0.56,ROWS) * Stark ),( protect(COLS) ) + Jon,betray(( dog ) / rule(( -( 0.88 ) ),Ygritte),-( dog ) / -( -0.57 ))) - bar(COLS,1))][Sansa],rule(foo(-0.09),( 880.21 ),-destroy(12,-COLS)));
	destroy(( Stark ))
} else {
	ROWS
}
}
}
def TABLE[-foo(Ygritte) / COLS][i] {
	if(ROWS){
	if(dog * rule(COLS)){

};
	if(ROWS){
	Ygritte += 74 + --1
} else {

};
	if(TABLE[86][-990.5]){
	if(( Arya )){
	if(foo(Jon,--500.207,29) / -rule(( -ROWS ))){
	dog += TABLE[COLS][-Ygritte]
}
} else {
	if(TABLE[rule(-( ---TABLE[( bar(( -24 ),mislead(Hodor),-COLS) )][Ygritte] / -( ( Stark ) ) - dog ) / betray(destroy(( ROWS )),betray(rule(rule() - COLS / -26,-( ROWS * destroy(( --( destroy() * COLS / -TABLE[-betray(0.48,( ( --Stark ) )) / --890.4922 / x][rule(foo(),( Arya )) * ( ( 1 ) )] / destroy(COLS) ) / -Stark ),COLS,( Hodor / rule() )) )) * Sansa + 21)),( Arya * ( ( TABLE[0.26][Stark * foo(-( -mislead(890.27) ))] ) ) ))][destroy(( TABLE[-0.11][Sansa] ),y)]){

} else {
	if(0.31){

}
}
}
}
}
}
var Stark = protect(foo(-COLS + -Arya / ROWS),ROWS,--foo(COLS,betray(-20,-( -( COLS ) ))) / -TABLE[0.59][60])
var Ygritte = Ygritte * -90.7
var Jon = ( -0.03 )
def TABLE[-Sansa + -1][j] {
	betray(Ygritte,-COLS - 1 * destroy(--TABLE[-0.26][( 0.51 )],-0.68 - bar(foo()) * x,-( ( ( COLS ) ) ) * COLS));
	Jon += 670.31
}
assert -Stark : "Nothing burns like the cold."
def TABLE[Hodor][k] {
	Ygritte /= -bar();
	if(-COLS * 0.86 * ROWS){
	if(0.28 - ROWS - -12){
	( 12 )
}
}
}
def TABLE[---TABLE[TABLE[foo(rule(rule(mislead(protect(-betray(destroy(Hodor),( --ROWS ),ROWS)))) * -0.25 / ROWS * betray(--protect(Stark,( rule(COLS) ),foo() - -39)),destroy(rule(y,( TABLE[15][-( -14 )] )) / protect() * ( foo() ) / bar(x,destroy(-560.456,-protect(Hodor / 79,Ygritte,-260.553)),-( betray(x,-( ( Arya ) ) * ( -rule(Ygritte) / ROWS )) - -rule(protect(-dog - COLS + -Hodor / 56)) - Jon )))))][Stark]][-rule(--0.21)]][j] {
	Stark *= -ROWS - ( destroy(Sansa,0.42) ) + rule(COLS,-78);
	if(( y + ( dog ) )){
	dog;
	if(bar(( -510.57 ),( TABLE[rule(-14,y,y)][-0.16 - -( ( betray(0.84,COLS - ( -Stark )) * x ) ) * foo(-0.71) / ( 95 )] ))){
	Arya -= Sansa;
	dog /= Jon;
	Hodor *= -( rule(COLS,TABLE[-0.25][betray(protect(),-77,--TABLE[-foo(bar()) * -77 + ( bar() )][rule(--85 * --0.85 * ( 100.536 ),protect(x,-betray(dog,COLS)),protect(-1,( foo(0.72,-ROWS) ) * -foo(-0.13,Jon,protect(49 / COLS,COLS))))])],destroy(-48,1)) )
}
};
	Jon /= betray(1)
}
var Jon = -TABLE[-ROWS][( -87 )]
def protect(x){
	0.95;
	if(-ROWS + COLS / dog - mislead(( betray(Jon,mislead(dog,rule(-TABLE[( Hodor )][COLS]),mislead())) ))){
	if(rule(ROWS - x,----Arya) - ( Arya )){
	destroy(1,-betray(Jon,-65,( 630.3788 )));
	if(TABLE[77][-bar(x + ( Sansa ) * -1 / COLS + ROWS,( ( TABLE[44][x] ) ))] - ROWS){
	Stark /= -Ygritte * bar(( Arya ));
	if(-x){
	COLS - --COLS * -440.1 / -Ygritte;
	Sansa
}
} else {
	if(-TABLE[dog][mislead(-ROWS,protect())]){
	if(bar()){
	if(x - ROWS){
	dog -= -83;
	y += Jon;
	if(( -Ygritte + ROWS + -Jon - -0.91 - --dog + betray(Hodor) + TABLE[destroy(y,( ---1 + TABLE[-Hodor][x] - -15 / TABLE[bar(protect(( Ygritte ),-140.406))][-2] ))][( mislead(y,Jon) )] * -0.82 )){
	if(-ROWS){
	if(-( COLS ) - -bar(( Sansa ) + ( -Hodor ) + TABLE[-( Hodor )][-1])){
	( bar(foo(destroy(57,bar(x,( ( Stark * -( ROWS ) ) ),Ygritte - --0.1 * 10 / Ygritte)))) );
	if(ROWS){
	( Hodor )
} else {

}
} else {
	if(Hodor){
	if(dog){
	--( COLS ) * -TABLE[-0.7][Arya] * -0.35
};
	if(destroy(-480.78,COLS)){

} else {
	x *= -2;
	if(( ( ( bar() ) ) )){
	Hodor += 1;
	Arya /= ROWS
} else {
	if(( -0.45 ) * destroy(( 98 ),mislead(COLS),( 190.597 ))){
	Arya;
	if(( -1 )){
	ROWS + -8;
	bar(mislead(foo(-710.9,-COLS,-foo(-foo(( 1 * ( -foo(-73,( foo(Hodor,Ygritte + dog) ) / 95) ) ))) + -ROWS),Sansa),mislead(foo(Stark,0.15) - Jon - --protect(( -COLS ),-0.89)),destroy(-0.3 * foo(bar(-foo(( ( -260.906 ) )) * ROWS)),foo(Jon,y)))
} else {
	Hodor /= Ygritte
}
} else {
	Hodor;
	bar(destroy(Stark),12)
}
}
};
	if(Ygritte){
	if(-COLS){
	Jon -= y;
	1
}
} else {
	-foo(x / rule(--ROWS,foo(-510.84 * -betray() + -destroy(24),protect(ROWS + -mislead(-1,--64,-57)))),1);
	Sansa + COLS;
	-TABLE[protect(-Stark)][( rule(ROWS,ROWS / COLS) )]
}
} else {

};
	x += COLS;
	Stark *= -protect(( --14 ) / -mislead() / destroy(COLS))
}
}
} else {

}
} else {
	if(ROWS){
	if(-1){

}
} else {
	x *= -( -COLS );
	Hodor += 440.897;
	if(Stark){

}
};
	if(TABLE[-( ROWS )][dog]){

} else {
	if(Sansa - TABLE[mislead(-( -0.27 + TABLE[( Sansa ) / ( TABLE[x][y] )][Hodor] ),( rule(x) ))][Sansa * COLS + ( foo(Jon,-protect(betray(0.01 * ROWS))) ) + dog] - foo(Sansa,1) * protect(( mislead(COLS) ),0.6) / protect(-TABLE[COLS][( Sansa )])){
	Arya *= --Stark;
	---protect(( Sansa ),y) * --( 1 ) + ( -protect(COLS,-( dog ),Hodor) ) - -y - ( --ROWS + ( ( -0.25 ) / ( Hodor * ( -0.41 ) ) ) )
} else {
	dog /= ( -dog )
};
	if(88){

}
};
	if(TABLE[destroy()][destroy(-bar(( -COLS + -bar(Ygritte * ROWS / 1,COLS,dog - Hodor) - COLS ),-( ROWS ),-1) + foo(36,COLS) + TABLE[-140.7][ROWS / -( Hodor ) / rule(-38,Ygritte)],x)]){
	if(ROWS){
	if(-83){
	Jon *= ( ( COLS + 9 - -96 ) );
	if(0.43 - Ygritte){
	Hodor /= Arya
}
}
} else {
	Hodor *= ( x );
	Ygritte
}
} else {
	dog += ( ( ROWS ) )
}
};
	Arya /= destroy(60)
} else {
	protect(( protect() ),Arya);
	--foo(mislead(),0.26 + COLS)
};
	if(betray(-310.49,-160.61 / 80 * destroy(( foo(( ROWS + -870.41 )) )),( bar(-1,betray(-ROWS * COLS)) + betray(-0.01) ))){

} else {
	if(TABLE[COLS][betray(-1,Hodor)]){
	( TABLE[destroy(ROWS,0.43)][mislead(( COLS ) * --COLS,( -0.44 ))] ) + -( 0.22 );
	Ygritte -= ( 0 )
}
};
	protect()
};
	-x / TABLE[rule(ROWS,Jon,bar(-880.15,foo()))][45]
};
	ROWS
} else {
	if(( ROWS )){
	betray(( x ),Arya) / COLS;
	ROWS
};
	0.42
};
	0.48 / ( 65 ) / -0.92 * ( COLS )
}
}
def TABLE[mislead(betray(protect()) * ( rule(-COLS / TABLE[( ROWS )][-COLS] - ( ROWS + -63 ) - destroy(0.36,820.6975 / -destroy(COLS,( protect() ),TABLE[-( 53 / 34 / -1 )][ROWS + x]))) ),COLS)][i] {

}
def foo(Jon,y,dog){
	Sansa -= -0.28
}
var Arya = 1 - -betray() + dog
var Arya = 8
assert -31 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( ( -0.03 - Arya ) ) ) : "Fear cuts deeper than swords."
def TABLE[( ( -1 ) + COLS )][j] {

}
var x = -0.7
var Arya = -( ROWS ) + betray(( TABLE[Hodor][-64] / -1 ),-Jon,-Sansa)
assert -( ( ( y ) ) ) : "Winter is coming"
var Ygritte = dog
def TABLE[0.31 * -14][j] {
	Arya /= protect(-0.39,rule(Ygritte,-betray(---bar(ROWS,Ygritte) / COLS,-( bar(TABLE[COLS][Stark],( bar(( -66 )) )) + ( ( Arya ) ) ) - ( -39 )) + -67),TABLE[foo(--38,TABLE[COLS / ( ( rule(( ( -Hodor ) ) / Stark,32,Hodor) ) )][-Hodor])][Sansa * y])
}
var Hodor = ( COLS )
def mislead(Arya){
	foo(( -( mislead(protect(-betray(53,betray(x,dog)) + TABLE[destroy(( 13 ),ROWS)][( Arya )]),Ygritte) ) * Ygritte ),protect(ROWS))
}
var dog = ( ( -0.6 ) )
var Jon = y
def TABLE[Stark][k] {
	y + -( betray(96) ) - --6
}
assert dog : "One can not simply parse himself"
def destroy(Stark,dog){
	if(ROWS){
	if(betray(( destroy(ROWS,-foo(ROWS)) ),mislead(-510.67) * ---0.9)){
	if(COLS){
	if(( -0.18 )){
	Ygritte /= COLS;
	Arya -= ( -0.35 - -protect(-( ( Arya ) ) * -ROWS,TABLE[COLS][COLS],-betray() * Hodor / ( TABLE[Hodor][bar(betray())] ) / 1) * TABLE[protect(rule(-( mislead() ) / dog,--y))][-betray(-1)] - -rule() )
};
	if(( ( TABLE[Stark][dog] ) ) * ( bar(TABLE[betray(bar(0.87),( -Sansa * dog / -0.12 ))][bar(TABLE[COLS][ROWS])],-TABLE[protect(-ROWS - -1) - --410.07][Jon * --32] + Hodor - -57 / -13) )){
	dog *= foo(bar())
} else {
	if(( protect(-0.95 + protect(0.79) / ( ( ( ( betray() ) ) ) ) + mislead(mislead(Hodor),dog)) )){
	dog *= mislead(ROWS / mislead(-( -( y ) ),-Hodor));
	if(( y )){
	ROWS - -( y );
	Sansa += Arya;
	if(1 - -foo(Arya,destroy(-protect() + ( TABLE[TABLE[-1 + 820.6843][dog]][ROWS] ),-foo(( Arya ) * bar(Hodor + -COLS)),COLS))){
	dog -= mislead(( -98 ) * -COLS,-33);
	x -= protect(( COLS ),( 150.1 + betray(-ROWS * foo(( COLS ),y,( ROWS )) - Hodor * betray(--560.429 * -( destroy(dog) ),Hodor) + Arya,x) ));
	TABLE[--Ygritte][( ( COLS * Stark - y ) ) / foo(foo(-destroy(Ygritte,mislead(destroy(x)))) - ( protect(( ( foo(1) ) )) ),Ygritte + dog)]
} else {
	-52 * 0.9
}
} else {
	protect(( -( ( ( ( Hodor ) ) ) / foo(( bar(-1,( ( 78 ) ),--mislead(rule(ROWS),protect(-9,1 + Sansa - -89))) )) ) ));
	TABLE[0.04][foo(Stark,bar(mislead()))];
	if(Sansa){
	Jon += ( -Ygritte ) - Ygritte
}
};
	Stark -= -Jon
};
	if(COLS){
	y *= Arya
}
};
	--Jon
} else {
	if(Arya){
	bar()
};
	if(mislead(--1,Arya)){
	Hodor += dog
} else {
	if(TABLE[( -TABLE[COLS / dog][Stark] / TABLE[-0.56 + Stark][-foo(TABLE[COLS][destroy(( ROWS ),ROWS,Stark)]) + 0.22] )][( ( x - dog + y ) )]){
	dog *= ( -970.459 );
	TABLE[-Ygritte][ROWS]
};
	COLS - Hodor * -730.159 * 1 - -0.44 / -( dog ) * rule(destroy(ROWS,Jon)) - ( mislead(1) ) - 0.67
}
}
}
} else {

};
	if(---ROWS * -1 * -270.7 - --1){
	Ygritte *= Hodor + Stark;
	Hodor /= -0.22;
	if(dog){

} else {

}
} else {
	Ygritte -= foo(--31);
	Jon -= ROWS
}
}
def protect(x,Sansa){
	if(-( 0.29 ) + rule(( -56 ),Ygritte)){
	if(Jon){
	betray(-95);
	y *= ROWS
};
	if(ROWS){
	TABLE[y][0.65]
}
} else {
	x *= foo(8,( -0.1 ),x);
	COLS / -590.388 - -( mislead(Sansa,98) ) + Jon;
	( -33 )
};
	dog /= ( COLS )
}
def TABLE[170.87][i] {
	Stark -= ROWS;
	y *= TABLE[-( -( ( Stark ) ) ) * y * betray()][destroy(x,Stark)] - ROWS + -( ( 13 ) );
	if(1){

} else {
	if(bar(x)){
	dog += ROWS
} else {
	Hodor -= TABLE[-foo(betray(( ROWS * -83 + COLS ),-1))][0.35];
	x -= rule(-Jon);
	if(-0.1){
	if(1){
	Hodor += COLS;
	if(y){

}
};
	Sansa += -16;
	rule(0.29)
} else {
	Hodor -= bar();
	if(( -73 + 1 )){
	if(( bar() )){
	( -mislead(TABLE[ROWS][y] + Arya,( ( Sansa ) )) );
	Ygritte += y
};
	Jon /= Arya;
	if(Sansa){
	betray()
}
}
}
}
}
}
def protect(y){
	mislead(TABLE[-Ygritte][betray(( -0.3 ) + Arya - 0.01,-( ROWS ) / Hodor / -12,-protect(-97,1))])
}
def TABLE[730.8106][k] {
	dog += 0.69 * ( bar(-rule(betray(-COLS,( 56 )),( betray(-mislead(betray(Arya) / --( ( ( Sansa ) ) + ( y ) ),( ( -0.33 - ( -1 - ( ( destroy(bar(COLS),Jon) ) + mislead() ) * foo(Hodor,TABLE[( Jon )][( -0.72 )]) ) ) ))) * ( -COLS ) )),betray(y - ( ROWS ))) );
	Hodor + COLS
}
def TABLE[foo(-ROWS)][j] {

}
var Arya = TABLE[--protect() / TABLE[-0.39][-0.94]][betray(0.65,-( COLS ))]
var Jon = rule(foo(76 + mislead(Stark * 37),bar(Stark * ( COLS ) + ( ROWS ),-betray(COLS,Hodor) - TABLE[-0.63][( betray(0.72 - Hodor) )])))
assert Stark : "What do we say to the Lord of Death?"
var Stark = Sansa
var Jon = -( -0.04 )
assert rule(-0.57,-0.38) : "Nothing burns like the cold."
def TABLE[COLS][k] {
	if(TABLE[COLS / -Stark][-6 - mislead()]){
	Sansa += 0.17
};
	-( ( destroy(x) ) )
}
assert ( ( 1 ) ) - destroy(y,betray(y - ( y ),1)) : "Fear cuts deeper than swords."
var Hodor = COLS
def destroy(Arya,Arya){

}
def bar(dog,dog){
	protect(-36) + TABLE[betray(x,ROWS,y)][ROWS];
	Sansa /= --ROWS;
	betray()
}
def rule(x){
	if(ROWS){
	Hodor += -0.12
} else {

}
}
var Jon = -36
def protect(Ygritte,Stark){
	-340.77;
	Hodor *= COLS;
	Jon -= betray(betray(-destroy(mislead(-bar(),( x )),-380.27) * 1),( -( Arya ) ))
}
def TABLE[COLS][k] {
	Jon += ( dog - Arya )
}
def mislead(){
	Ygritte += protect(-destroy(COLS),protect(-34 + ( Sansa ),-0,-8) + mislead(---COLS / -36,-Arya,-0.06),protect(bar(TABLE[TABLE[-11][x * ( -ROWS )]][-( COLS ) - TABLE[bar(destroy(y,destroy(0.23 * ( COLS ),-0.72))) / bar() + --( -TABLE[-1][( --foo(Sansa,-dog,ROWS) )] )][Arya]] + -COLS + ( -Stark ) / Ygritte,--( --86 ) * COLS,COLS),( ( mislead(ROWS,dog,dog) ) ),mislead(-76,protect(( rule() ) * -( x ) + Hodor,( x ),Sansa),Stark)));
	Sansa /= betray(-x,x,( protect(-protect(-96),( -betray(--64 * -0.85,( TABLE[destroy(( -1 + ROWS ))][( mislead(Jon,foo(-Jon,bar(),64)) )] ),TABLE[( TABLE[protect(TABLE[ROWS][Sansa])][--( -COLS / Hodor ) + --0.71 / rule(ROWS,x,-85) / 2] )][protect(Hodor)]) ),Hodor) ))
}
def bar(Hodor,Jon,x){
	Jon += ( -610.2252 )
}
var Jon = rule(( -0.92 / bar(protect(0.24 + ( COLS ) + -ROWS * 16,Jon),( protect(-( protect(( ( mislead() ) ) - ( TABLE[COLS][-90] ) * --( ( COLS / 99 ) ),0.78) - Jon )) + betray(TABLE[Hodor][-7]) ),COLS) ),ROWS)
assert bar() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(x){
	if(protect(( COLS ),( -0.35 - betray() ) - mislead(TABLE[-Jon * Hodor][--58 / 280.318]),--0.4)){
	Arya;
	y -= COLS
};
	-0.29 * rule(-0.26,0.69) - Arya + mislead(ROWS,Stark / foo(Jon,protect(dog,( ( ( -0.59 ) / y ) ),Stark + ROWS * -protect(Ygritte - Ygritte)),bar() + TABLE[( -destroy(-( mislead(( ROWS )) ),( -23 )) )][mislead(TABLE[ROWS][foo(( mislead(-( 58 ),( COLS )) ))])] * 1))
}
def TABLE[( --( 0.71 - -bar() ) * ROWS + -TABLE[ROWS + ( -foo(mislead(-Ygritte),( TABLE[dog][-59] ) + TABLE[dog][-240.96] * rule(( 0.32 ))) * -destroy(( Hodor - x )) - -0.93 ) * -ROWS][Stark] )][i] {
	if(( ( rule(foo(x,-( --1 ))) ) )){
	12
}
}
var dog = bar(Arya)
def TABLE[betray() * -71 * -( rule(y + y) )][j] {
	Stark *= TABLE[TABLE[-betray(ROWS,protect(-x,( 0.8 )))][rule(( foo(( -dog ),1,( 0.08 )) ),( -91 ),destroy(TABLE[780.52][-TABLE[foo(Sansa)][1 - y * --Jon / ( Ygritte )]],( -rule(0.24) )) + Jon)]][TABLE[-73][-270.2077]];
	ROWS
}
def TABLE[( ( ( x ) ) + -( -0.12 ) - -0.32 )][j] {
	if(-Stark){
	if(-Arya){
	Arya /= ( ( destroy() ) + -rule(COLS,bar()) )
}
} else {
	TABLE[TABLE[TABLE[bar(COLS,Sansa) * ( ( 0.72 + --y ) ) * -86][destroy(Stark,( ROWS ))]][( foo(TABLE[Stark][-0.97],92) )]][-0.6]
};
	if(COLS){

}
}
def mislead(Ygritte,y){
	COLS;
	Stark /= rule(-0.09);
	dog += ROWS
}
assert 43 : "What do we say to the Lord of Death?"
var Arya = ( rule(-80 / Ygritte,dog) )
assert --0.83 : "Nothing burns like the cold."
assert COLS * ( TABLE[( destroy(dog / -0.33,( ROWS )) )][1] ) * TABLE[( 1 )][--64 * -TABLE[-0.38][Arya]] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.75][j] {
	1;
	foo(( Jon ),y) / Jon - 57;
	x -= y
}
var Arya = ( -280.4 )
def TABLE[rule(dog)][i] {
	Hodor
}
assert mislead(( -Sansa ),( Stark )) : "Fear cuts deeper than swords."
assert ( -dog ) : "One can not simply parse himself"
var Ygritte = ( ( -( ( x ) ) / -dog + COLS + --( Hodor ) ) )
var Ygritte = ROWS
var dog = Ygritte
assert --protect(( --950.07 ) + -13,TABLE[COLS][( destroy(-destroy(( -11 + destroy(ROWS) * -Arya * TABLE[Ygritte][Sansa] + ---( -1 / --85 + ( ( COLS * -36 ) ) + dog ) ))) )] - 0.15,-Ygritte * 1 + Ygritte) : "Winter is coming"
def TABLE[destroy(-380.396)][k] {
	if(protect(COLS,-Ygritte)){

} else {
	-40.13
};
	( bar() ) / Hodor
}
assert x : "Nothing burns like the cold."
def rule(Jon,y){
	Ygritte;
	mislead()
}
var Stark = 180.081
assert -30 * y : "Fear cuts deeper than swords."
def mislead(Arya){
	Hodor -= -1
}
assert ( Sansa ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ( Hodor )
def TABLE[( ( 0.27 - mislead(--1,TABLE[( ROWS )][Stark]) + -240.0595 ) )][k] {
	if(( -Jon )){
	-700.5
}
}
def TABLE[( ( Jon ) )][j] {
	if(TABLE[--1][-0.27]){
	Jon *= ROWS
}
}
def rule(Arya,Jon){
	if(-( COLS )){

} else {
	--140.36;
	( ROWS )
};
	37;
	( ( --x ) )
}
def foo(){
	if(destroy(TABLE[TABLE[TABLE[-destroy(Hodor) + Arya][( -betray(( -1 + -TABLE[TABLE[( -( Arya ) )][destroy(COLS,-( -38 ))]][0.39 - ( foo(19,-COLS) )] ) + -ROWS) - ( -protect(TABLE[COLS][-mislead()],( Ygritte )) ) )]][COLS]][betray(x,-( 63 ))],destroy(Hodor),( TABLE[Hodor][-( TABLE[Jon][ROWS / -Jon] )] ))){

} else {
	COLS
};
	Ygritte *= 210.78;
	Ygritte /= ( ( Hodor ) )
}
def protect(dog){
	if(-COLS){
	if(dog){

} else {
	if(-1 * ( Hodor )){
	-x / y
}
};
	Arya / -0.86 + 660.634;
	Ygritte
}
}
def TABLE[Jon][j] {

}
var Ygritte = destroy(mislead(),y)
def TABLE[TABLE[( ( TABLE[( -Ygritte ) / ( betray(mislead(),mislead(Arya,( -Stark ),bar(( y )))) )][destroy(-430.648,-foo(( TABLE[-ROWS][dog / -481] )) * ( betray() ) - ( ( 0.5 * -( -0.54 ) ) ),COLS) / COLS - -( COLS )] ) )][Hodor]][k] {

}
def TABLE[COLS][k] {
	if(--76){
	x *= ( x + -( ( ( protect(ROWS - -6,Stark) ) ) ) );
	if(( y * 1 )){
	if(mislead(COLS)){

};
	--( TABLE[TABLE[COLS][betray(rule(rule(( Hodor ) + -dog)),( ( protect(y) + dog ) ))]][mislead(0.53,Stark) - COLS] / Hodor ) * --COLS;
	-50
} else {

}
};
	y *= -COLS;
	if(( ROWS )){
	if(dog){
	Hodor /= protect(bar(),destroy(( destroy(1) )))
};
	if(( ( dog ) )){
	if(COLS){
	if(( mislead(Arya) )){
	Hodor -= -51;
	1 * TABLE[0.71][bar(1,protect(),ROWS)];
	( destroy(1,Stark,COLS) )
};
	dog -= -70;
	Jon
} else {
	Ygritte /= ( 96 ) * -( x );
	protect(COLS,Sansa)
};
	if(COLS){
	y *= 200.3811
} else {
	Stark += -dog;
	betray(TABLE[( ROWS ) / Hodor + -21][( -COLS )])
}
} else {
	1
}
}
}
def destroy(y,Hodor){
	-TABLE[( -bar(TABLE[( x )][COLS]) )][( Sansa )]
}
var Hodor = -( betray(TABLE[Jon][rule(-destroy(( Ygritte )) + -COLS,COLS) - dog],betray(foo(0.08),Hodor / ( dog ) - -Ygritte - ROWS,bar(TABLE[-COLS][( -bar() + -0.985 )],1 - Hodor) * betray())) )
def TABLE[1][k] {

}
def betray(Arya){
	ROWS;
	0.57
}
assert y : "One can not simply parse himself"
var Stark = 1 + COLS
var Sansa = destroy()
var Hodor = TABLE[-62 / destroy(-1) - ( rule() ) + foo(( --920.4 / TABLE[-240.553][foo(( -64 ),0.56)] ),protect(( 0.65 )),-( -72 ))][65]
var dog = ROWS
assert betray(360.1773 + TABLE[rule(COLS / destroy(foo() * ( x )),90 * Sansa)][( bar(( TABLE[ROWS][ROWS] - foo(( TABLE[( ( ROWS ) * -11 * 0.3 )][( -Hodor + bar(0.21,dog - betray(y,--0.24) * ( ROWS ),ROWS) )] ),COLS,--COLS) / COLS * ( Sansa ) / COLS ),( -( Jon ) ) * TABLE[foo(990.8914)][( ROWS )],0.95) )]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = rule(0.84,-32 + dog)
def TABLE[protect(( 600.973 ))][k] {
	Ygritte -= ( ROWS ) + bar(-Jon);
	TABLE[ROWS][( protect(( COLS )) )]
}
def TABLE[TABLE[-dog + x * Stark][ROWS]][k] {
	COLS;
	TABLE[Ygritte][-ROWS / ( bar(1) )]
}
def protect(Ygritte){

}
var Ygritte = x
def bar(Sansa,Stark){
	if(( bar() )){
	if(Jon){
	y -= -0.42
}
};
	if(0.29){
	if(-Arya / mislead(-COLS,rule(mislead(),( ( mislead() ) + -bar() )),mislead(rule(),( Ygritte ) * ( -( -( ---ROWS * -y / TABLE[( -ROWS ) + dog - -( -( Ygritte ) + -Sansa * --( ( -( Sansa ) ) ) + dog - 0.33 )][-rule()] ) ) ),0.75))){
	x
} else {
	if(COLS){

} else {
	Jon -= -rule()
};
	y += y
};
	Jon -= ( -0.74 )
} else {
	if(-( ( ROWS ) )){
	Sansa *= COLS;
	if(TABLE[COLS][betray()] * ( -0.6 ) + COLS - destroy(y)){
	if(Stark){

} else {
	if(destroy(--( y ) + ( ROWS ) + -1,Hodor)){
	Sansa *= Ygritte
} else {
	if(--68 - bar(Arya)){
	x -= ( ( COLS - mislead(rule(-TABLE[foo(foo(betray()),( ---( protect(-380.077) ) )) / ( dog )][( -0.19 )],destroy(ROWS,Jon)),COLS) ) )
} else {
	Hodor /= COLS;
	Hodor += ROWS;
	if(destroy(-( Hodor ))){
	if(ROWS){
	Jon += Stark + TABLE[( dog ) + ( -TABLE[( Arya )][TABLE[-y][COLS] / -y] )][TABLE[( ( TABLE[( TABLE[( y )][destroy(x)] ) * ROWS][rule(betray(protect(1)),( mislead(foo(--60 / --( TABLE[destroy(( ROWS ),-TABLE[1][TABLE[TABLE[( TABLE[53 - mislead(TABLE[0.44][ROWS],-( ( bar(bar(-destroy(COLS,rule()),( -( dog ) ))) ) ))][-mislead(betray(ROWS,--Ygritte - COLS + -TABLE[( COLS )][-( ( -1 - -1 + Sansa / -70 ) )]))] )][mislead(Sansa,COLS,TABLE[( foo(destroy(mislead(-( dog + TABLE[ROWS - ( protect(protect(betray(TABLE[( dog )][12]),( TABLE[380.7][ROWS] ))) ) / betray(-bar(--Sansa),TABLE[TABLE[-protect(rule(TABLE[-0.28][-1]),-( ( foo(0.02) ) ))][y]][ROWS],( ----( destroy(Hodor,23,-590.82) ) / -1 + protect(mislead(-bar(( -COLS ) * ( ROWS ) - mislead(-dog / -bar(Arya),TABLE[( y - ---COLS - COLS )][x] * x,-mislead())) - Stark),-ROWS * ROWS) ))][( -( 48 ) )] / 10.5 ))),-36,( TABLE[-140.116][-Stark] )) )][( ( ROWS ) )])] - TABLE[-Sansa][--43]][-Arya / -38 / betray() / -1] + --TABLE[Hodor][( ROWS )]],-( betray(betray(ROWS * COLS),rule(Stark + betray(rule(Jon,bar(TABLE[Arya][-1],Ygritte,( TABLE[( -ROWS )][bar(x,0.15) * destroy(( -92 ),--51 - ROWS / bar()) * y + COLS * -ROWS] )),mislead(-( betray(-destroy(bar(Arya / bar(TABLE[89][( ( -0.63 / 19 ) )]) * ( --8 ) / 0.04 * x / 1 - COLS,rule(( ( COLS ) / -( foo(protect(Ygritte) * 6 * dog) / -0.22 ) ))) / 1 - dog),--1,( -0.95 / TABLE[COLS - Arya / --x / Hodor + ( 0.07 ) - ROWS + -2][---0.77 + -( -( ( -bar(-Jon) + betray() ) ) ) + ( protect(-( -protect(( protect(0.57) ),rule(),( -bar(-31 * Arya) )) )) )] )) ) - bar(( -( 72 ) ),Stark / destroy(( -0.51 + foo() ),-990.8)) * -62) / bar(( -( ( -190.706 ) + ( -82 ) ) ),TABLE[TABLE[Sansa][( COLS )]][( mislead(TABLE[-46][COLS],( 0.77 ) * mislead(--10)) ) + -Jon * Stark])) / Jon,-mislead(( ROWS ),( TABLE[-Ygritte][COLS] ))),destroy(56)),-protect(-61,Jon,-mislead(COLS,bar(( Sansa ),COLS),--bar(rule(-1)) + --y - ROWS * -( ( 600.118 ) + mislead(dog,-0.27,mislead() + 0.71) ) / -mislead(destroy())) / ROWS)) ))][-76] / foo() ) * ( COLS ),mislead(Sansa,-foo(COLS,TABLE[rule(---0.43)][y],x) * x,( TABLE[TABLE[ROWS][destroy(mislead(-Stark),-protect(y,( COLS )))]][ROWS] - -( foo(490.8642 + ( Sansa - Jon )) ) ))),foo(1,COLS / Jon + Sansa),57) - ROWS / bar(( -Jon * --1 + ( ( -89 ) ) )) ))] ) )][x]] * ( protect(-0.56 * ( -( foo(Hodor,dog) ) )) + protect() ) * -( ( -85 ) );
	--mislead(Jon,protect(ROWS) / 23)
};
	y /= destroy(Arya * 500.2747,ROWS,Jon)
}
}
};
	if(( destroy(0.65,mislead(Hodor,--550.5,ROWS)) )){
	x;
	( ( bar(x * 20,-1) ) )
}
};
	if(-910.43){
	betray(( -Arya + COLS ) + -ROWS + -TABLE[( bar(foo(0.68,---( -0.75 ))) )][destroy(ROWS)]);
	if(--0.47 / -250.99 + ( y - TABLE[Stark][ROWS + ( ROWS ) - ( -0.77 ) - -0.85] * --0.04 )){
	if(-x){
	y /= protect(-0.01);
	if(( COLS / -9 ) * x / dog){
	if(97){
	mislead(COLS,Hodor);
	-ROWS
};
	y /= 58;
	if(--1){
	--( ROWS )
} else {
	Stark
}
} else {
	if(-Jon){

} else {
	-23 / x
}
}
};
	if(( ( -130.5 ) )){

} else {

}
} else {
	if(TABLE[-( ROWS ) - -( TABLE[dog][TABLE[rule(--50.1,ROWS)][-18] * -490 - COLS] ) - ( ROWS )][-TABLE[( rule(COLS) )][-1]]){

};
	if(-destroy(--( -destroy(-betray(mislead()) + TABLE[-0.98][-0.67]) ),y)){
	if(bar(betray())){
	dog /= -ROWS
} else {
	ROWS;
	Sansa += COLS
}
} else {
	if(-( ( protect(Stark) ) ) - y){
	if(-bar(( ( -bar(-5) ) ),( -bar(TABLE[ROWS][x]) ))){
	if(-bar(( -960.4364 ),foo(TABLE[-( ROWS )][-Ygritte],betray(300.558 / ( -0.5 + COLS ) * ( -0.88 ),destroy(TABLE[-ROWS][Ygritte])),( ( TABLE[-0.59][0.8] ) )) / TABLE[TABLE[( --( ( --TABLE[Stark][protect(( 1 * COLS ),foo(( Hodor ) + -( ( --0.05 ) ))) + Hodor] - --( -Sansa ) ) ) - -0.33 )][dog]][mislead(Jon,( Arya ))] + 1)){
	if(( Stark )){

};
	if(( TABLE[protect(1,( Jon ),0.54)][x] ) / ( Jon * ( ( rule() ) ) )){
	( --1 - -( Jon ) )
} else {
	if(-0.81 / ( ( 66 ) )){
	if(Arya){
	-77
}
};
	if(-destroy(x)){
	if(-4){
	if(COLS){
	if(COLS){
	if(COLS){
	TABLE[y][Arya];
	if(destroy(0.69 - -64 / betray(x) / COLS)){
	Arya -= ( -y - bar(rule(( --0.73 ) - -0.03,-430.17),-0.09) )
}
} else {
	if(-( ( ----3 ) / -760.4906 - -810.74 ) * ( --27 ) * -TABLE[protect(( --bar(-70 - rule(rule(-0.82),rule(ROWS,-41),( -( betray(( Hodor ),COLS) ) ) * -50)) ),-0.86)][--Ygritte]){
	Hodor -= -0.19;
	Jon *= foo()
}
}
};
	--550.2 - --0.15 - 89 / -1
};
	if(protect()){
	Stark -= Ygritte + -Arya + COLS;
	( rule(( dog )) )
}
}
};
	Jon / Jon * -Stark
}
}
} else {
	destroy(foo(( 0.06 ),mislead(-550.6,COLS,0.39 * ROWS)),-86);
	if(foo(protect(-COLS - protect(COLS) + ( ROWS ) - COLS),Ygritte)){
	protect(( ( Sansa ) ),--Hodor,Jon);
	if(Stark + 12){
	if(( ROWS )){
	( --0.18 + TABLE[-COLS * ( COLS ) / foo(( ( dog ) ),( ( TABLE[690.384][Ygritte] ) )) + destroy(-25 * x,destroy(rule(betray(-foo(-14,destroy(-ROWS * Hodor + --1),( ( mislead() ) )),y))) * Hodor) / COLS * y / ( ( 0.7 ) ) / -28][--ROWS] )
};
	( destroy(( 47 ),rule(destroy(ROWS))) ) + 33;
	ROWS
} else {
	x *= ( ( ( Sansa ) + -( -0.2 ) ) )
}
};
	if(bar(0.54,---destroy(-foo()) * -19 * mislead(-1,-28 / y) - -( -89 ),TABLE[Sansa][TABLE[Ygritte + TABLE[( 420.019 ) / protect(protect(protect(),COLS),ROWS) - y + 0.26 + -destroy(Jon) * -y - 66 - ( 1 )][mislead(dog,betray(-48 * -TABLE[-28 + bar(( ( ROWS ) * -31 ),-x * -Hodor)][1],TABLE[TABLE[Jon][betray(-54,y) / ( Jon ) + 7 - 1] + -70][0.4]))]][Stark * TABLE[ROWS][( betray(COLS,ROWS,0.43) )]]])){
	if(-57){
	if(Ygritte - bar()){

} else {
	x += -TABLE[ROWS][y];
	Hodor -= --850.759
};
	Sansa -= 10
} else {
	if(-betray()){
	-( mislead(y,( -( COLS ) ) * Jon) );
	mislead(betray(COLS,foo(ROWS,betray(-( TABLE[rule(protect(COLS) - y) + 520.17 + COLS - Sansa][--protect(mislead(( -430.527 ))) + -Sansa / ( TABLE[destroy(-( ( COLS ) ),rule(ROWS),( ( 1 - Stark + ( Stark ) ) ))][bar(1)] ) - 1 * ( foo(Arya) ) - protect()] )))),Jon) * ROWS
};
	if(Ygritte * -1){
	if(x){
	if(-0.43){

} else {
	Stark /= -5 + Hodor;
	if(-ROWS - -ROWS){
	( bar() * -410.26 )
} else {
	if(( x ) * TABLE[rule(mislead(( betray(-Arya,0.66) )),Jon - protect(destroy(mislead(( 0.43 * Sansa ),ROWS)),-72,-0.15) / rule(-betray(-0.7)))][-( -( ( foo(--0.27 / Stark + foo(68,-( ROWS ) + ( ( -6 ) ) + ROWS)) ) + 70 ) )]){
	if(-0.31){
	if(dog){
	if(TABLE[970.2][foo(bar(ROWS),( ( ( ( -ROWS - ( COLS ) ) ) ) ),( mislead(destroy(COLS),-( 99 - foo(mislead(( ROWS )),( Jon ) / foo(dog,foo())) ),ROWS) )) / ( -Jon ) - betray(TABLE[-93 / -Hodor][220.351])] / ( ( -50 ) ) + ( ( ROWS + -1 * 0.53 * -260.39 ) )){
	( --390.491 / ( -ROWS / ( -1 ) ) );
	TABLE[Sansa][destroy(COLS,y - Arya,COLS * foo(( TABLE[86 - rule(COLS)][--COLS] ),--COLS) * ( Stark ) / -Arya / destroy(destroy(),( x )) - ( -( betray(( ( ( -0.03 * betray(TABLE[-1][dog - -Stark],-62,( foo(( COLS ) - -protect(-Hodor,Hodor,TABLE[---COLS][COLS]) + TABLE[foo() - ( Jon ) - -970.42][( protect(y) ) - betray(-66 - 90.7 * dog * Ygritte,Stark)],TABLE[foo(TABLE[( -( -Sansa ) / dog )][0.36]) - Hodor + 26][rule(-( -0.5 ),0.87)]) )) ) ) )) - ( -foo(( destroy(TABLE[( -TABLE[betray()][protect(( COLS ),x + -( COLS / -64 ))] - --77 )][0.96],( foo() )) - --ROWS + -TABLE[( COLS ) / ( protect(-0.36 + Hodor,COLS) )][-90] ),destroy(rule())) ) ) ) / -190.11 * -1 + protect(840.2,-Stark))]
} else {
	Hodor /= protect(mislead(--rule(Ygritte)) + ( TABLE[-0.84][( rule(-( 1 ),-( ( Jon ) / -mislead(-Ygritte - 80,( 1 ),Hodor - 0.25) + Jon )) )] ),-x) * mislead(-COLS,--( ( ( ROWS ) * Hodor ) + betray(ROWS,x) ) + -( bar() ));
	if(( 0.66 )){
	if(x){
	if(-Hodor + ( --( betray(( destroy(-1,COLS) ),--370.76) ) )){
	60
} else {
	Stark /= 0.16;
	if(Hodor){
	dog -= 0.76
} else {
	if(-ROWS){
	Stark -= dog
} else {
	Jon -= 0.27;
	if(( 0.13 * 88 )){

};
	-y
};
	rule(TABLE[Stark][( 0.9 )])
}
};
	dog /= -92;
	if(( bar(-ROWS) )){
	if(TABLE[Jon][ROWS]){
	40.879;
	Ygritte /= -dog;
	if(TABLE[-foo(Ygritte,( -( -Ygritte ) - ( foo(bar(mislead(bar(COLS),( Ygritte ))),COLS) ) )) * ROWS][( ( mislead() ) )]){
	bar(( ( --dog ) ),dog)
} else {
	if(65){

};
	Hodor += -ROWS - COLS
}
} else {
	if(41){
	-0.99;
	dog /= -COLS
} else {
	if(TABLE[COLS][--1]){
	Arya /= Hodor
};
	y *= ( bar(COLS) );
	( ( --28 ) )
}
}
} else {
	-250.7;
	Sansa += ( ( ( ( -1 ) ) ) )
}
} else {
	y /= rule(( betray(( -40.2 ),TABLE[-Stark][dog]) ),( TABLE[-ROWS][COLS] ),betray()) * -COLS + ROWS / -0.9
};
	dog /= ( -Stark / 0.55 )
} else {
	if(-destroy(( rule(( COLS ),0.86) ),-270.513,( bar(( --TABLE[-x * y][mislead(-99,mislead(-destroy(protect(-x,COLS - TABLE[Ygritte][Ygritte],-1),0.03,TABLE[1 * ( Arya - ( -( Arya * -dog ) ) )][Arya]),TABLE[-0.39][ROWS]),mislead()) / -( ROWS )] )) ))){
	protect(y,Stark,Jon);
	Arya += protect(Sansa,TABLE[y][betray(-( TABLE[y][-0.35] ) / 0.76 / mislead(( 0.07 )) / -( TABLE[820.744 - ( -( -( -0.85 ) ) * ( -0.03 ) / ( -0.89 ) - bar(0.72,( TABLE[( 41 )][Arya] )) )][1] - protect(( -mislead() ),( -0.48 )) ))])
} else {
	if(Stark - COLS){
	if(TABLE[y][Arya - Ygritte * Sansa] * COLS){
	if(-ROWS){
	protect(( Stark ));
	if(( y )){
	if(Stark){
	0.99 + ( bar(TABLE[COLS][-0.48],-0.11 - ( ( Ygritte ) ) / 930.8) )
} else {

};
	betray(Jon,-y + --TABLE[y][foo(( y ),( x ))],y);
	Hodor += -1
};
	if(0.15){
	if(-Arya){
	Stark -= 0.47;
	x *= rule(( -190.39 + 0.3 + ( destroy(y) ) ),-0.84);
	dog
};
	-0.48;
	if(--( Jon )){
	if(--betray(-96,protect(( ( --betray(Stark,-80 * ( 0.86 )) ) )),-Arya)){
	if(bar(Hodor)){
	-11;
	Jon *= ( ( rule(TABLE[-0.94][--foo(0.81,( 1 ) / COLS)],Sansa + TABLE[ROWS][680.37 - protect(--0.81,COLS,Hodor) / --1 / Arya] / -Ygritte + -590.05 / dog) + y ) );
	if(-ROWS + y * destroy(-0.06)){
	( Jon )
} else {

}
} else {
	if(destroy(--( Stark ) / ( 0.9 + COLS - betray(ROWS) / TABLE[-Hodor * TABLE[destroy(( COLS - COLS ),( TABLE[( -0.08 )][ROWS / 0.21] ),1)][Sansa * -0.31]][y] ))){

} else {

}
};
	mislead()
}
}
}
};
	if(-( 0.1 )){
	-( -47 ) - mislead(-( Hodor ) + protect(-1,COLS),-rule(COLS * protect(dog),-970.775),--( ( -0.16 ) + -40.168 ) - ( ---ROWS / -bar(ROWS) - ( Hodor ) ) * ( ( ( TABLE[rule(bar(TABLE[TABLE[-rule(x) + --230.7 * ( rule(protect(protect(TABLE[TABLE[( ROWS )][dog]][ROWS]),Ygritte),-dog / -Stark) ) / dog - Hodor][foo(-22,--880.43 * bar(-foo(COLS,-Jon),rule(mislead(Ygritte - ROWS,-x)),710.31 - Jon) - y) - y]][43]),24,( bar(destroy()) ))][280.71] ) ) + protect(Ygritte / protect(bar(TABLE[mislead(foo(TABLE[0.91][ROWS]))][ROWS],-0.67,COLS))) ))
} else {

}
} else {
	if(--58){
	if(( y )){
	if(Jon){
	( ( COLS ) );
	COLS
} else {

};
	Ygritte *= 62
};
	if(( bar(-73,x) )){

}
} else {
	( betray(COLS,rule(COLS * COLS + ( ( -0.54 ) ) * --( --ROWS ) / x)) );
	Stark += rule(--0.49 + ROWS * -destroy(destroy(-170.3,830.22,destroy(Arya)),ROWS,-y / --0.16) / -ROWS)
}
};
	( -230.137 );
	Ygritte -= -20
} else {
	Arya
};
	if(y){
	TABLE[( TABLE[( bar(-950.254,-820.4,-0.3) )][-53] )][Arya] - ( 1 )
} else {
	970.9233;
	1
};
	if(990.866 - COLS){
	Jon *= dog;
	( Sansa )
} else {
	if(protect()){
	Arya /= ( ( betray(( ( x / dog / COLS - ( 40.24 * betray() ) - ( TABLE[rule(-Sansa,x,destroy(( -TABLE[( TABLE[( -TABLE[y][Sansa] ) / mislead(Jon,x)][mislead(mislead(-( 0.56 ),--dog + -x / protect(--0.04)))] )][destroy()] )) * -( betray() ) * ( COLS / Sansa ))][( --500.4512 )] ) ) ),( rule(Jon) ),0.42 - protect(betray(( Hodor ),protect(bar(( Arya ),ROWS,--52 - Hodor),TABLE[-COLS][Ygritte]),ROWS))) + -bar() + ( 93 ) ) );
	Jon
} else {

};
	if(9){
	if(x){
	( TABLE[foo(Sansa) / -44][foo(Arya / Sansa) + Sansa] );
	Sansa /= Hodor
}
};
	if(TABLE[( Jon )][--74]){

} else {
	if(-( ( betray() * --COLS ) ) / COLS){
	( -mislead() )
} else {
	if(Stark){
	if(mislead(0.56) / -( ( COLS ) )){
	-13;
	Jon += 59
};
	if(-rule()){
	if(( ( COLS ) / TABLE[-COLS][-Arya] ) - 200.61 * protect(destroy(Jon),51,-0.35)){
	if(mislead(COLS,21)){
	( TABLE[-protect(-1)][betray(y,foo(TABLE[-0.89][-Hodor] + -800.7,ROWS,-7),-1)] );
	betray(-betray(-( ( -ROWS ) ) * TABLE[-rule(( x ),ROWS,12 / mislead(-1,-TABLE[ROWS * Arya][( bar(( Jon )) ) - y],-Sansa))][-rule(mislead(( ( -50.96 ) )),TABLE[destroy(ROWS + TABLE[----0.53 - -0.26][protect(( Ygritte ))],-0.02,betray(-11,37 - y))][87])],( -ROWS - ROWS )),--x - ( bar(Arya,COLS) ));
	if(-destroy(TABLE[betray()][( betray(-Sansa,-730.352) )],0.08)){
	( dog )
}
}
};
	Arya /= TABLE[27][bar(COLS,TABLE[-TABLE[0.03 - Arya][-ROWS]][( -27 + -0.31 )] * -0.48) - betray(COLS)]
};
	if(TABLE[( betray(55,y) )][-TABLE[Jon][-0.13]]){
	Hodor *= -Arya + protect(( 46 * ( y ) ),--( -77 ) - Hodor)
} else {
	dog / Stark;
	Hodor *= ( -49 );
	if(Stark){

} else {
	Hodor *= rule(bar(( -Arya - Sansa + Arya - Hodor ) - mislead(( -ROWS ),COLS) / Stark,( ( ROWS ) ) + ROWS + 1,-Arya) - --( -96 ) / mislead(dog,mislead(( TABLE[-( ---COLS / rule(( -foo(y,( Stark )) / ROWS )) * TABLE[Stark][COLS + TABLE[COLS][0.2]] ) * rule(-dog)][( COLS )] ),TABLE[( TABLE[COLS / -rule(( ROWS / -protect(76,destroy()) - COLS ))][( dog )] - ( destroy() - TABLE[( protect(betray(( -( 540.3 ) - bar(-protect(bar()),-Stark) ),--bar(( protect(( 0 ),0.72) / ( bar(Hodor,y * bar()) ) )))) )][( -200.75 - -( 9 * Sansa / -bar(( -28 ) / dog,-dog) / -Jon ) + ( Jon ) ) + dog] ) )][40]))) * Arya
}
}
} else {
	dog += foo(-40,--Sansa - dog);
	Arya * -( ( -( ( ( Ygritte ) ) ) ) * ( --( 89 ) - bar(1,COLS) ) ) * ROWS - -Hodor / ( -dog );
	protect(rule(( TABLE[79][ROWS] - Stark ),dog) - Arya)
};
	0.01
}
}
}
};
	if(-53 / destroy(( -42 - 670.671 ),--( ( ROWS ) ),rule(y,( TABLE[1][y] ))) - ( TABLE[ROWS][( mislead(-70.82) )] )){
	Hodor -= -betray(foo(foo(Ygritte,ROWS),-82,ROWS) + Jon);
	Arya -= rule(Jon - x,( Hodor ),-98) + 1;
	Ygritte *= betray(90.2,mislead(y,( 610.15 / 0.9 ) / ( dog )),destroy(-820.636) - ( TABLE[COLS][44] ) - bar())
} else {
	y *= TABLE[-10][Jon];
	if(0.15 - 860.46){
	destroy()
} else {
	if(bar() / 20 * -COLS){
	---Arya
} else {
	Stark /= Ygritte * betray(foo(Jon));
	ROWS
};
	Sansa -= x;
	Hodor += bar() + TABLE[rule(( ( -TABLE[TABLE[mislead(mislead(( COLS ),( ( -Hodor ) ),ROWS * -18 / ( COLS ) + foo(( ---1 ))),( x ),( Hodor ))][betray(( -COLS ))] + protect(Arya)][( x )] ) ),y)][-Stark] / Ygritte
}
}
};
	Stark -= ( betray(( Ygritte )) )
};
	if(Sansa){
	y *= TABLE[( y )][-31];
	-ROWS;
	if(97){
	Ygritte;
	y *= -( -650.93 )
}
}
};
	Ygritte *= ROWS + Stark - protect()
} else {

};
	if(y / 1){
	Stark -= bar()
} else {
	if(0.61){
	TABLE[-COLS][TABLE[( 0 )][( mislead(--Arya,-410.5068,220.339 / -betray(mislead(y) * -1 * bar(mislead(x * TABLE[-( -( ROWS + ( -540 ) ) + foo(( betray() )) - rule(Jon,ROWS,( 0.46 )) ) - -Jon][mislead(Arya,-0.58) - Jon - mislead(protect(( ---TABLE[-0.89 * -0.4][betray(-90 - 42 / -0.28)] ),-130.7),Sansa)] / x,-1))) + -1 + y - ( COLS )) )]]
} else {
	x *= -TABLE[destroy()][1]
};
	Ygritte += -Ygritte;
	Sansa *= -rule(--0.17,-0.26,-0.65)
};
	if(( -betray(betray(x)) )){
	if(rule(64)){
	rule(( destroy(protect(( -( TABLE[( ROWS )][-Stark / TABLE[( ( ROWS ) - -betray(-87) - COLS )][TABLE[( 77 )][8]]] ) / ( TABLE[( COLS + protect(-350.454 + Ygritte,--240.6424) * -1 + destroy(-( foo(Sansa,protect(Hodor,betray(-betray(( Ygritte ),( ( ROWS ) )),( --9 ),-48))) ),COLS,-750.7532) / --Stark * x ) * -betray(Hodor,-ROWS) - ( -Sansa + ROWS )][mislead(( Arya + destroy() + protect(-COLS - betray(),-COLS - Stark) ))] ) ),270.78,mislead(foo(Stark / -betray(foo(790.376 + COLS),( --1 )) / bar(destroy(Jon,-0.29 + Hodor,COLS),-17,-COLS) - ROWS + ( 63 )),rule(rule(-0.81,betray(-0.64,-Sansa * dog - foo(960.63,rule(( COLS ))))),( ( protect(ROWS) ) ) - ( ( ( bar() ) ) ) * betray(--( protect(x,Hodor) ),TABLE[0.99][( dog )]) / --destroy(ROWS)))),( rule(TABLE[-0.14][Stark],dog) ),betray(73)) ),( y ));
	Jon += ROWS - Sansa - ( ( TABLE[-19][( betray(y) )] ) ) - --0.56 - foo(TABLE[-9][foo(( ( x + betray(dog,Jon,-Ygritte - rule(x * Sansa)) * -rule(COLS) ) )) + COLS - ----45] * COLS + x)
} else {
	Arya *= -ROWS - 1 - COLS * -1
}
} else {
	if(--( TABLE[x][Stark] * --y )){
	x -= COLS;
	Stark += betray()
} else {
	Stark /= -COLS
}
}
} else {
	Arya;
	if(TABLE[-COLS + ( Sansa )][bar(protect(( destroy(bar(TABLE[-0.56][ROWS] - 220.893)) ),-13,Sansa),ROWS * rule(Stark),-0.85 * ( rule(( Stark / 12 ),Arya) - rule() ))]){
	Arya /= Sansa;
	( 0.58 );
	Hodor /= TABLE[Stark][( --71 )]
};
	if(( --( --910.6449 / ( -0.06 ) * mislead(-rule(bar(),-( betray(Sansa) ),Jon / Hodor) + TABLE[TABLE[dog][rule()]][rule(--1,ROWS)] / TABLE[-0.72][ROWS] - -0.33,( Jon )) - -( ROWS ) ) )){

}
}
};
	Arya -= 1
};
	Stark -= 73
} else {
	Stark -= ( Hodor ) * Hodor
}
}
}
}
};
	-39
}
}
}
}
};
	if(-dog){

}
};
	if(-dog + COLS / ( Ygritte ) - betray(COLS,-52,-dog * ROWS) + mislead(betray(),( ROWS ),( -destroy(TABLE[-Stark / TABLE[( -50 ) - ( COLS - -( Hodor ) / Ygritte )][ROWS] + -1][rule(1,---0.94,81)],COLS,---48) )) + 0.02){
	dog;
	Ygritte *= destroy(-COLS,COLS);
	dog /= ( Jon / betray(dog - COLS,( Jon )) )
} else {
	if(TABLE[0.67][( TABLE[( 0.26 - ROWS / Stark )][-0.69] ) - rule()]){
	if(betray(( -0.31 ))){
	57;
	-Jon
};
	x
} else {

};
	if(-destroy(-320.014,COLS,-77)){
	Ygritte += bar(dog,COLS)
} else {
	if(bar(760.9469,y) * foo(( -0.21 ),Arya)){
	y += ( 0.88 )
} else {
	TABLE[mislead(Hodor)][0.02] * ( x )
};
	x /= mislead();
	x += ( -1 * ( protect() ) ) / -Hodor
}
}
}
}
assert -671 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "What do we say to the Lord of Death?"
var Sansa = COLS
var Ygritte = ROWS
def TABLE[( betray(bar(COLS,COLS),betray(y)) ) / --ROWS * Jon][i] {
	if(( ( 0 ) - dog )){
	Stark
}
}
def bar(Hodor,y,dog){
	Arya -= COLS;
	ROWS
}
def TABLE[( Ygritte )][i] {
	if(protect()){
	x += ( COLS );
	if(( destroy(Hodor) )){
	dog *= ----y - ( protect() )
};
	Sansa -= 49
}
}
def betray(Jon,Sansa){
	-mislead(11) + ( 0.63 / y );
	x /= 0.43;
	if(TABLE[-0.1][170.45]){
	if(ROWS){

} else {
	Arya;
	-protect(( 0 ))
}
} else {
	if(Sansa){
	rule(-( ROWS ));
	-( mislead() );
	Stark -= -( foo() / ( -1 ) )
} else {
	dog *= Jon;
	Stark /= rule()
};
	if(( ( 0.57 ) )){
	if(TABLE[-160.083][mislead(-Hodor,Sansa) - ( ( ROWS ) )]){
	Stark -= -( COLS ) - -( ROWS - ROWS );
	y /= -360.59
} else {
	if(100){
	Jon += -Arya
}
};
	Hodor -= -0.56;
	Sansa *= Stark
} else {

}
}
}
assert foo(-rule(x,COLS + bar(( mislead(-0.84) ),( y )))) : "Fear cuts deeper than swords."
var x = Jon
def foo(dog,Sansa){
	if(COLS){

} else {
	if(Sansa){
	Sansa *= protect(dog,--Stark) * ( mislead(ROWS,-bar(),--81) - Stark )
} else {
	if(( 5 )){

} else {

};
	Ygritte
}
}
}
var y = ( foo() )
def bar(Sansa){
	Stark += Sansa;
	Arya += --TABLE[( ROWS )][( COLS )] - ( COLS );
	y /= COLS
}
assert Stark : "Winter is coming"
assert COLS : "What do we say to the Lord of Death?"
def TABLE[-27][j] {
	Jon /= -0.28
}
var Hodor = destroy(x * -COLS)
var dog = protect(dog)
var dog = Jon
def bar(Jon,Ygritte){
	Jon /= ROWS
}
def TABLE[x * bar(ROWS,COLS + -ROWS / Sansa,rule(TABLE[34][TABLE[COLS][-710.37]]) / 810.1 / ( -Hodor ) + betray(x,( -340.46 ) - ( -rule() ) * Ygritte) / COLS)][j] {
	Stark /= rule(-( x ),( ( destroy(( ROWS )) ) ));
	Arya
}
def TABLE[( ROWS )][j] {
	Stark
}
def TABLE[-0.99][j] {
	dog += ( 0 );
	if(0.11 - COLS){
	bar();
	if(COLS){
	Sansa += -25;
	Hodor *= -740.665 - ( Sansa )
};
	Sansa /= mislead()
}
}
def betray(Hodor,Jon,Jon){
	destroy(-TABLE[destroy(-( 0.07 ) * -0.78 * COLS,COLS)][( ( ( Sansa ) ) )] * 700.261,-Hodor * dog);
	Stark /= 95;
	Ygritte *= 0.2
}
def destroy(Stark,Ygritte,Hodor){
	COLS
}
def TABLE[---COLS * ( rule(( ( Hodor ) + 87 ),Ygritte) )][j] {
	if(betray(foo(TABLE[TABLE[COLS + Arya][( -520.2 + 1 )]][rule(( COLS * COLS ) / ( -TABLE[destroy(Stark)][dog] ),-0.19 * dog) - ROWS * dog + ( TABLE[( --0.21 )][Ygritte] ) * protect(mislead(dog,( Stark )) / ( -Ygritte / bar(( -Sansa ),-0.21) ))] * ( Ygritte ),( protect(destroy(0.31),( -0.69 )) ),COLS),ROWS)){
	dog;
	if(20){

};
	0.38
};
	if(TABLE[protect(foo(),destroy(( -0.88 )),Arya)][--0.02]){
	Arya -= x;
	Jon += ( betray(Arya,y,-mislead(ROWS,mislead(-0.29,-Jon),34)) );
	protect(( ( ( protect(y) ) ) ),ROWS)
}
}
def TABLE[1][k] {
	if(TABLE[0.6][x]){
	if(bar(( -740.6666 ),y)){
	if(TABLE[0.8][( -1 + ROWS / ( -x ) ) + foo(Sansa,Ygritte,39)]){
	Stark -= -0.03 * Arya / --10 / ( ( ( -0.3 ) ) );
	Hodor += 77
};
	TABLE[protect(-destroy(-ROWS + Ygritte),Hodor)][x];
	Arya /= COLS * -protect(Jon) - -60.5
} else {
	-TABLE[-TABLE[( ( y ) )][( mislead(Jon,Hodor,( TABLE[( ROWS )][ROWS] )) )]][-( ( -0.62 - mislead(Arya,-0.57 - TABLE[x][foo(COLS * Ygritte)] + betray(-0.43) + -TABLE[ROWS][-COLS]) ) )]
}
}
}
def protect(y,Stark){
	dog += y
}
def protect(dog,Sansa,Stark){

}
def TABLE[TABLE[-foo(0,-mislead(-Sansa,ROWS,( protect() ) * ( COLS )))][-43] * Hodor][i] {
	Sansa += x;
	if(TABLE[ROWS][-260.8513]){
	----7 - -0.84;
	Ygritte
} else {
	if(Arya){

} else {
	Stark /= TABLE[-1][Sansa];
	if(-57){

};
	x *= ( ( ROWS ) ) + 830.222
};
	if(-TABLE[COLS][-Ygritte]){
	if(-TABLE[bar(( ( --0.46 ) ),Hodor)][mislead(-1 / foo(-53,( TABLE[-bar()][protect(--TABLE[x][-56] * mislead(Jon,-89,-TABLE[( Sansa - Arya ) + -destroy(ROWS) + TABLE[--TABLE[ROWS][betray(( ( ( Ygritte ) ) ) - foo(( Hodor ) / -( bar(TABLE[-Stark][ROWS],-580.5) ),( 0.11 )))] + ( COLS - rule(x,TABLE[--mislead(( TABLE[Hodor][destroy(bar(foo(-TABLE[( ROWS )][Jon],Jon,bar(ROWS,protect(-Hodor,ROWS),-( ( ( --56 ) ) ) + destroy(bar(dog,0.84,-92),32,( ROWS )) / --1))) / COLS,0.28)] ))][ROWS * 1],foo(-TABLE[betray(COLS)][Arya]) * bar(-1,dog * --TABLE[( -1 ) + -93][COLS] / ( 270.5 ) * -1) / -860.195) )][ROWS]][20.414] - -1),Jon,Jon)] ) * Hodor * TABLE[protect(Jon)][( y )]),-0.02,--27 - destroy(Arya) / foo())] - -55){
	if(( protect(0.75) )){
	74
} else {

};
	Hodor += Arya
};
	--Ygritte
} else {
	Arya *= 7;
	Sansa -= 200.7222
};
	dog += -61
}
}
assert ( ( ( ( rule() ) ) ) ) : "Winter is coming"
def bar(Sansa,Ygritte){
	COLS;
	if(250.16){
	x *= Sansa
} else {
	Sansa *= TABLE[17][-0.82]
}
}
def mislead(Hodor,Arya,Hodor){
	Jon -= ( Hodor - x );
	if(5){
	-( COLS )
} else {
	Jon
};
	rule(( -200.12 + bar(mislead(( -----0.76 + ROWS + ( Hodor ) ))) + ( --1 ) ),mislead(destroy(-820.81,-bar(-TABLE[-86 * ROWS][( -1 )])),----betray(-73) + Arya,23) * rule(Sansa,-betray(-bar(),( Sansa ) / COLS * foo(Arya,-42,( -foo(0.29,( ( TABLE[betray(-130.8)][x] ) ),rule(-39)) )) * ( protect(0.22,( ROWS )) )),( Jon )))
}
def rule(Ygritte,Hodor,x){
	if(foo(0.88,Jon)){
	if(--Stark){
	( Jon );
	if(dog){
	y
} else {

};
	Arya + dog + TABLE[x][( -64 ) / ( ( ( ROWS + ( y ) - 0.84 ) ) )] + x / mislead(Sansa,x)
} else {
	if(-COLS){
	y -= -22;
	x *= ( ( ( --150.27 ) + foo(0.37,y) ) ) - -97 - -47;
	Ygritte /= -1
}
}
} else {
	if(ROWS + -23){

} else {

};
	if(-destroy(( TABLE[Sansa][( Jon )] / -TABLE[-Ygritte / Arya][ROWS] )) / betray(( ---1 ) * ( 140.9 ),( -TABLE[mislead(--Arya,ROWS)][-63] ))){
	if(57){
	x *= ROWS
} else {
	Hodor /= x
};
	if(Hodor / TABLE[mislead(-protect(mislead(ROWS)))][COLS]){
	if(TABLE[y][-betray(410.801,-rule(-1,Hodor)) * -83]){

};
	Stark
}
}
};
	protect(COLS)
}
var Sansa = ( bar(-1,-76) )
def protect(){
	dog += Sansa + ( -( ( destroy(foo(y,Arya)) + 91 ) ) ) + destroy(( bar(( ( -( ( 1 ) ) ) ),COLS,x) ),ROWS);
	x / 100.44
}
def TABLE[Sansa][j] {
	if(-( -93 )){
	if(COLS){
	if(-25){
	Ygritte += Arya;
	dog += ( -93 ) * 0.22
};
	Sansa += -Jon
};
	destroy(Sansa / -bar(-TABLE[( mislead(-ROWS - foo(Sansa)) )][COLS]) * Jon,Stark,43)
} else {
	if(Sansa * Stark){
	if(COLS){
	Hodor -= -y / -destroy(protect(-37) + ROWS,-71)
} else {
	if(ROWS){
	( ( Stark - mislead(Sansa) ) )
};
	y /= 220.964
}
}
}
}
var y = --1
def TABLE[( TABLE[1][mislead(COLS,( ( 28 ) )) + Jon] )][k] {
	( -ROWS )
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-960.3881][j] {
	Stark /= ---destroy(bar(foo(59),-0.83),protect(( COLS ) - Arya,( ROWS ) / ( TABLE[TABLE[Stark][dog]][protect(protect())] - 0.4 / TABLE[protect(( --( -0.4 ) ),TABLE[0.66][COLS] + -mislead())][betray(Jon,x)] ) + ( mislead(destroy(--( Jon ) * -0.7,-destroy(),bar(-y))) ))) - -0.35 + 82;
	Hodor -= destroy(Ygritte)
}
assert --( ( betray(Arya) ) * -88 * ( COLS ) ) : "What do we say to the Lord of Death?"
var Sansa = -890.3 + protect(93 + foo(1 * 99),-( 1 ))
def betray(Arya,x){
	( TABLE[ROWS][ROWS] );
	( -foo(TABLE[COLS][Ygritte],TABLE[foo(ROWS)][--foo(betray(TABLE[--87 - -Stark][Jon],0.46),TABLE[-mislead(-( TABLE[0.45][( destroy() )] ),1)][0.51]) - -( ROWS ) + Hodor * -790.7]) )
}
def TABLE[foo(COLS * COLS)][j] {
	if(( TABLE[-14][-mislead(-( foo(0.11,TABLE[46][---y]) ))] )){
	-( mislead(Stark / -93,56) )
}
}
assert Hodor : "Winter is coming"
def protect(){
	destroy(-0.7 / -0.79,-mislead())
}
def TABLE[destroy(ROWS)][k] {
	Stark *= -ROWS * ( mislead(rule(--betray(-0.04) + -0.74,-0.48),TABLE[( y )][Sansa / dog] + Arya) + 380.759 * Stark - x )
}
def TABLE[COLS * 0.14 / TABLE[0.05][-21]][k] {

}
def foo(Stark){
	Stark /= Arya;
	68
}
def foo(Ygritte,Arya){

}
assert ( rule() ) : "Nothing burns like the cold."
var Hodor = protect(dog + 0.59,y)
def betray(Arya){
	730.8168;
	if(-x){
	if(Arya - ROWS){
	Ygritte
};
	if(foo(( 240.032 ))){
	if(250.79){
	if(-Hodor){
	rule();
	if(-ROWS){
	if(-36){
	if(Arya){
	x -= ( COLS )
};
	if(--( ( foo(Jon,( protect(-650.1151) - TABLE[-( betray(( ROWS ),COLS) ) + -Stark + -Sansa - foo(Stark,Arya)][Arya] ),-( Ygritte ) / -0.89) ) )){
	Stark += -protect(TABLE[foo(( 0.93 )) / 1 - -1][-Hodor] - -89 - rule(COLS));
	if(( -63 )){
	Arya
} else {
	Jon += -Hodor
}
};
	if(ROWS){
	Ygritte += -0.6
}
} else {
	Sansa;
	Ygritte;
	( Sansa )
};
	dog -= ( ( -1 ) )
} else {
	Hodor;
	if(-COLS){

} else {
	--0.7;
	y /= -330.298 - -1
};
	dog
}
}
} else {
	foo(41);
	if(protect(destroy(),( ( Hodor ) * -1 / TABLE[COLS][ROWS] - ( rule(bar(mislead(( ( Jon + 1 + -dog / -( 12 ) ) - betray(Hodor,TABLE[ROWS][-Jon + rule(( TABLE[mislead(-( Arya - Stark ),( y - 0 + Sansa ))][y] ) / -mislead(protect(foo(1,-0.13 - ( Sansa ))),bar(Ygritte,--( -Jon ),-Ygritte),Hodor) * -0.94,foo(150.48,Hodor,-Stark),betray())]) / -Jon + --450.764 - ( -y ) + -0.48 ),-Stark / --COLS,Jon))) ) ) * -Hodor)){
	Ygritte += dog;
	if(-ROWS){
	--0.26
} else {
	COLS - 130.516
}
} else {
	if(-bar(--1,-1) * -790.1){
	Jon /= -Arya
}
}
}
}
}
}
def TABLE[( ( -Jon ) )][j] {
	Ygritte += foo(betray(-( destroy(TABLE[protect(Jon,Arya,( TABLE[y][--0.63] ))][-470.663],Arya) )) * ( ( 310.7397 ) * Stark )) + --17 - ( Sansa );
	Hodor /= ROWS + -( 980.223 ) - -0.53;
	if(TABLE[-60][85]){
	if(( ( TABLE[( ( Hodor - -1 * 80 / rule(destroy(470.628,-Jon / -TABLE[0.61][-10.308])) ) )][COLS] ) - TABLE[Sansa - ( -ROWS )][31] )){
	if(-protect(ROWS,COLS,610.33)){

};
	if(-( TABLE[destroy(----Jon,TABLE[-COLS][( -rule(-25,-( betray(( ( -( COLS + Ygritte + Arya ) ) ),( ROWS )) )) )])][Stark] ) / -0.79){
	if(( destroy(-0.61,( COLS )) )){
	if(bar(--COLS)){
	( --( -protect() ) / -0.2 );
	--( COLS )
}
} else {

}
}
} else {
	Ygritte *= Sansa
};
	if(( TABLE[ROWS][-( ( foo(( -1 ) - -Sansa) ) )] )){
	( 0.93 )
};
	Arya /= mislead(-63,ROWS)
}
}
assert -1 : "What do we say to the Lord of Death?"
def TABLE[--0.7 - ( betray(x) )][j] {
	if(COLS * rule(Arya) / -betray()){
	-0.41
}
}
assert Sansa : "One can not simply parse himself"
var x = ( Ygritte ) + -1
var Hodor = -( -( -1 ) ) / TABLE[x][y]
var Sansa = ROWS - ( -COLS )
def protect(y,Stark){

}
def rule(dog){
	if(bar()){
	if(1 - foo(Jon,( COLS )) + ( TABLE[( ROWS )][Stark] ) * ( 1 )){
	if(-1 - Stark - 0.23){

}
}
} else {
	83
};
	if(-COLS){
	if(dog * 0.87){
	if(ROWS){
	Jon /= ( y ) * -( Stark )
};
	x /= Stark
} else {
	if(-52){
	dog += -TABLE[COLS][--foo(-Hodor)] / ( COLS )
} else {

}
}
} else {
	if(COLS){

};
	--( destroy(foo(),rule(destroy(Stark,--Stark,( -foo(-mislead(rule()),-1) )),Sansa / ( -( y / TABLE[y][foo(COLS,-85)] ) ) + --Hodor - COLS * destroy(-700.5,Jon)),--ROWS) ) + COLS * ROWS
}
}
assert ROWS : "Winter is coming"
def protect(){

}
var Stark = -COLS
var y = dog
var Jon = ( protect(foo(-( Arya ) - mislead())) )
def TABLE[Sansa][i] {
	( -9 + TABLE[-1][-TABLE[29][-Arya]] );
	if(-destroy(--Sansa / COLS,Sansa)){
	ROWS * -0.72 - ROWS;
	-rule() / ( --Stark - ( TABLE[Sansa][betray(( Hodor ) + ( ( ROWS * -490.59 - -ROWS ) + rule() - foo(( y ),ROWS) ) - ROWS - protect(y,-mislead(-29,TABLE[44 - COLS / Arya][0.86 / foo(TABLE[rule(( ( ROWS ) ))][Hodor],Sansa)])),Sansa)] ) ) / -0.05
}
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[97][j] {

}
def betray(y){

}
assert ---betray(ROWS) : "What do we say to the Lord of Death?"
def TABLE[( ( -0.15 ) / -0.27 )][i] {
	if(Stark){
	( ( -protect(-destroy(-COLS,rule())) ) );
	dog;
	Jon += foo(-110.5)
} else {
	destroy(( -0.17 ),( dog ))
}
}
var Jon = ( ( foo(-( ROWS )) ) + TABLE[-foo(betray(( -ROWS )),--COLS) * ( ROWS )][-22] / betray(-COLS / -( -mislead(-53,TABLE[-0.05 - ROWS][Arya],TABLE[Jon + Arya][-22] - destroy(protect(bar(-0.89)),( Stark ))) ),ROWS) )
def TABLE[ROWS][i] {
	y /= -( 0.43 );
	Sansa /= ( -0.32 ) + TABLE[0.69][-1] + foo();
	if(-19){
	5;
	Jon += Jon / ( foo(--( ( 1 / 79 / Stark ) ) * ( TABLE[( -TABLE[-Sansa][protect(Stark)] )][7] ),betray() + -0.95) )
}
}
def TABLE[( -( ROWS ) )][i] {

}
assert mislead(TABLE[TABLE[( Jon )][TABLE[-1][0.69]]][x],dog) : "Nothing burns like the cold."
def destroy(dog){
	y *= mislead(y,-y);
	destroy(ROWS,----TABLE[-210.718 + ROWS][-1 - COLS] - betray(-0.76 / y + -( -( destroy(Sansa + -x) ) ),TABLE[dog][( Arya - ( -0.66 ) )]) - -foo(destroy(bar(bar(Stark,( TABLE[( Jon )][TABLE[-0.45][-1]] )),Stark) * ( --ROWS ),( -810.65 ) / -bar()),ROWS) / rule(-protect(( x ) - 98,bar(( foo(( ROWS ),rule(-0.93)) )),y + foo(-destroy(-Sansa))) / COLS) + COLS - destroy(foo(-0.55)),Arya);
	protect(COLS)
}
var Hodor = mislead(destroy(( Ygritte )),COLS) - -0.5
var Ygritte = ( rule() )
assert ( ( -protect(--foo(),mislead(),-mislead(--0.6 - Stark * ( -85 ) - rule(Stark,Ygritte,( ROWS ) * dog) / --( Arya ),foo(-0.75,-0.52))) / ( Hodor ) ) * x ) : "What do we say to the Lord of Death?"
assert -bar(bar(x,-71,( dog )) / -29,Jon,Stark) / TABLE[1][TABLE[( ( --1 ) )][TABLE[COLS][TABLE[--1][ROWS]]] + -( Jon )] : "Winter is coming"
def TABLE[COLS][j] {
	( 0.21 );
	if(COLS){
	Jon += protect(-1,TABLE[---530.45][-0.81]) + Hodor * -Jon / Stark - ( TABLE[( -0.83 )][y] )
}
}
def betray(dog){
	if(( x + ROWS )){
	if(1){
	destroy(-( Hodor ),rule(),( COLS / ( -( -1 ) - -foo(460.08,-COLS) ) ));
	x /= rule(TABLE[( -ROWS )][y] * Jon);
	bar(( TABLE[-destroy(TABLE[-0.68 / ( ( 1000.19 - 0.91 - COLS - ( rule(bar(--dog,-320.4 / -0.2 + Stark),bar()) ) ) / COLS ) * ( ROWS )][Arya],0.37 * mislead(Arya))][-84] ))
} else {
	bar(ROWS * -dog) - TABLE[-betray(( --71 ))][-70]
}
} else {
	betray(-TABLE[mislead()][1 / -0.93 - --TABLE[TABLE[-0.2][( ROWS * -ROWS )]][protect(Arya)] + ( COLS )] / TABLE[mislead(ROWS,COLS,-1)][y],rule(Sansa,-( -29 )));
	if(( Ygritte )){
	( ROWS )
} else {
	x *= dog
}
};
	Sansa *= x
}
assert ( foo(-0.58,ROWS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-86][k] {
	if(COLS){
	Sansa -= -COLS;
	Jon
} else {

};
	destroy(foo(-0.05 / COLS,( Ygritte )) - -0.96 * TABLE[protect()][dog],betray(betray(rule(TABLE[mislead(y)][rule(( TABLE[x - Sansa][( TABLE[-0.35][Sansa] )] ))],COLS,TABLE[45][bar()])),foo()) - Jon * 0.88,COLS / -( 63 ));
	x -= ROWS * 1
}
def TABLE[( Hodor )][k] {
	if(COLS){
	-0.66;
	destroy(( --Jon ));
	mislead(-dog * mislead(-0.7 * --0.93),ROWS)
}
}
def TABLE[-rule(17 - ROWS,Stark)][j] {
	if(( ROWS )){
	Stark += -rule(Jon,( ROWS )) * 0.32 / COLS;
	if(ROWS){
	if(-COLS){
	y -= dog;
	if(-( --bar(( TABLE[93][TABLE[Stark][-400.61]] )) )){
	TABLE[mislead(( ( ( -TABLE[betray(TABLE[( -Jon * COLS * ( ( TABLE[Ygritte][-TABLE[-1][betray(( ( COLS ) ) * ROWS,-640.6)] + COLS] ) ) )][( -0.84 )],ROWS)][4 / -Arya * Jon] ) ) ))][Arya]
};
	if(-80.7661){
	if(--0.34 - ROWS){

} else {
	y += -TABLE[TABLE[dog][Hodor]][TABLE[Jon][( TABLE[destroy(( -12 ),destroy(rule(TABLE[bar(Jon)][-600.182],Jon,-30 / ( betray() )) / rule() + -88,580.963 - --0.72))][TABLE[-66][ROWS] + COLS] )]];
	protect(Arya,Stark,-0.59 / rule(x,( 80.157 )))
};
	if(COLS){

} else {
	x *= COLS
};
	if(TABLE[rule()][-mislead(foo(-900.5))]){
	dog /= betray();
	y *= ROWS
} else {

}
}
};
	Sansa += COLS
};
	if(-4){
	if(-0.34){
	Arya;
	ROWS - 510.98
};
	if(-0.47){
	-49
} else {
	( ( ( ( Hodor ) ) ) )
}
}
};
	Hodor *= 660.032 / Hodor
}
def mislead(Jon){

}
assert --1 : "Winter is coming"
assert -0.75 : "Fear cuts deeper than swords."
var x = Sansa
var Sansa = --Hodor
var x = 0.26
var Hodor = -79
def TABLE[TABLE[( -( bar(Stark) - -640.2739 ) )][dog * betray(-foo(--( ( ROWS ) )),-33 + -protect(destroy(( --1 ),ROWS / -COLS),Jon,-( --0.74 ))) + ( Sansa ) * ( Hodor ) - ( 1 - -0.93 - Hodor ) * ( -Ygritte ) + foo(TABLE[TABLE[Ygritte * bar(ROWS * protect(mislead(COLS,COLS),0.4))][-Sansa * -72 / -63]][--x + 0.18],Stark * ( ( ROWS ) + rule(Arya,protect(mislead(-mislead() * ( Stark / ( Ygritte ) ),TABLE[Arya][( -18 )]),-mislead(Arya / ( Ygritte )),ROWS),TABLE[( TABLE[ROWS][COLS] + --( ( -COLS + -rule(protect()) ) + -1 ) * ( TABLE[ROWS][Ygritte] ) )][protect(Arya / betray(betray(COLS,dog * x,( -TABLE[1][-( 10 )] )) + ( COLS ))) / bar(foo(ROWS),COLS,ROWS)] + 94) ),protect(mislead() * ( Stark ),y) * COLS) * -1]][k] {
	TABLE[Ygritte][( -protect(x) )]
}
def destroy(Hodor,Ygritte){
	Stark
}
def betray(dog,Hodor){

}
def bar(dog){
	Sansa
}
def bar(Sansa){

}
assert ( mislead(( 72 )) ) : "What do we say to the Lord of Death?"
assert -Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -COLS
assert -dog / -9 : "What do we say to the Lord of Death?"
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -82
var Hodor = ( destroy(( ( ( -Ygritte ) ) ),COLS,ROWS) ) + 0.49
assert foo(-Jon) : "One can not simply parse himself"
def TABLE[0.59][k] {
	if(( -24 )){
	x /= 91
};
	( ROWS );
	if(-ROWS + -23){
	foo(bar(-( ( foo() ) ),( Ygritte )),-mislead(-1,( -760.1 )),Jon) + --betray(1,-Ygritte) * TABLE[-0.43][COLS]
} else {
	-( dog );
	if(0.63){
	Hodor *= ROWS;
	Jon
}
}
}
def betray(y,Arya){
	bar(COLS - -0.81,--destroy(( ( --0.84 - -Jon ) + rule(-Jon) * ( TABLE[bar(destroy())][85] ) / -0.88 * COLS - -dog / 72 - ( rule(ROWS) / ( Arya / ( -53 ) ) ) * -23 ),bar(destroy(0.41,rule()) + Arya,( 90 ) + TABLE[1 / -0.31][-990.7756],( COLS ))) + bar(-bar(67,TABLE[Sansa][Sansa],-95)),-0.27)
}
assert Sansa : "What do we say to the Lord of Death?"
def rule(){

}
var Sansa = Sansa
var Stark = -Ygritte
def TABLE[-foo(TABLE[0.72][COLS])][j] {
	bar(mislead(ROWS - Sansa,----0.45)) + x * -( -0.59 / -Ygritte ) * rule(( ( --1 + ( Jon ) ) ),--0.29,destroy(31) - ( -0.15 )) * Jon
}
def bar(Hodor,Stark,Jon){
	( betray(COLS) / --67 + ( 1 ) );
	if(--52){
	y /= Jon;
	if(-26){

} else {
	if(1){
	Hodor += bar(dog);
	Ygritte *= COLS;
	if(( ( ( -rule(TABLE[( ( ( ( 98 ) / -67 / -rule(Ygritte + Hodor,Jon) ) ) )][-mislead(--( -Jon ) + ROWS)]) ) - -( -1 ) ) )){
	if(COLS){
	dog *= COLS;
	dog += -protect(( 22 ) / mislead(-56,-( destroy(TABLE[-Sansa][COLS - ROWS],destroy(( Stark ),foo(destroy(TABLE[betray(( -dog / x ),( Sansa ),-destroy(Sansa,ROWS))][bar(mislead(y))],-0.7,ROWS),mislead(-30) + destroy(foo(),Jon)),5 * ( betray(-1) - ( COLS ) / -0.89 ))) ) * foo(COLS,TABLE[-COLS][TABLE[0.26][COLS]],ROWS),Stark));
	if(---bar(( COLS )) * ( ROWS )){
	if(-0.5){
	ROWS + Ygritte
} else {

};
	y /= -Ygritte
} else {
	dog *= TABLE[1][betray(0.54,-COLS)]
}
};
	x
} else {
	Arya -= protect(Sansa);
	if(COLS){

} else {
	rule(ROWS,rule(( TABLE[--( Hodor ) * ( 20 )][x] )))
}
}
} else {
	if(--( y / 981 )){
	Sansa
} else {
	( foo(( -COLS )) );
	Jon += -( Arya )
};
	Ygritte -= Hodor
};
	Stark /= ( ( foo(( ROWS )) ) - destroy(Ygritte,( foo(Sansa,66 + x / destroy(-1,Arya) + ( betray(COLS) )) )) );
	x /= ( COLS )
}
}
}
def bar(Ygritte,dog){
	Stark += ( Jon )
}
def TABLE[( 1 ) + -y][k] {
	dog -= y;
	if(rule(Sansa,---98)){
	dog /= protect(( COLS ),mislead());
	( -0.08 );
	Stark /= Sansa
} else {
	if(87){
	if(-73 * ROWS){
	y += ( -TABLE[( -700.195 )][Arya] );
	y *= ( ROWS );
	y /= bar(--Stark,( Arya ))
};
	dog *= destroy(( TABLE[( ( ( ( ( -640.16 ) ) ) + betray(-Hodor,Ygritte / Stark) ) )][COLS] ) + ( ROWS ),--( dog ) / Sansa - ( -69 / 99 + -0.61 ) / betray(-21,( TABLE[TABLE[( dog ) + ROWS][Sansa]][ROWS] ) * COLS),destroy(-( Hodor ) * COLS,protect(foo(-betray(Arya + 0.04))) - ROWS)) / ( ROWS )
} else {
	-24
}
};
	if(destroy(ROWS,-ROWS * Hodor * ( TABLE[Ygritte][x] ),( Hodor )) + Hodor - ( TABLE[COLS][1] ) / y - 0.45){
	if(betray()){

} else {
	x -= -protect();
	ROWS;
	-Stark / betray()
}
} else {

}
}
var Stark = 1
def TABLE[-15][j] {
	dog /= mislead(bar(Hodor),TABLE[TABLE[destroy(destroy() / destroy(18))][ROWS]][Ygritte])
}
var Sansa = ( dog )
def TABLE[-310.9755][j] {

}
var Hodor = foo(Arya - -14) * 690.608 / foo(TABLE[bar(-0.76) - ( ( COLS ) )][-49],38,-y) - mislead(-300.263 - -0.02,-x) + foo(betray(COLS - -10,-( Stark ) * -500.5661) * ( -0.4134 ),Sansa)
var Jon = -bar(betray(ROWS,rule(--18,( -ROWS ),betray(Ygritte,( TABLE[Ygritte][-bar(TABLE[Stark][Jon] * rule(-TABLE[( Stark )][( betray(( Arya ),0.99,-betray(ROWS,---x)) )] * protect(ROWS,Sansa * ( mislead(-73) ) + -1 + -foo(COLS)),mislead(Ygritte,Hodor) / 0.01,Stark / COLS))] ) - TABLE[( Sansa )][( --0.93 )] - protect(TABLE[ROWS * ( Sansa ) + Ygritte][--5 + -840.45])))))
def mislead(x,y,Sansa){
	if(-rule(( protect(y) ))){
	if(protect(-( ( y ) ),rule(ROWS),-700.437)){
	Hodor;
	Jon += ROWS
} else {
	-860.9103;
	if(-87){
	x /= rule(( Ygritte ),ROWS);
	if(-100.419){
	if(COLS){

} else {
	Ygritte *= y;
	0.65 * -Sansa;
	Stark
};
	if(betray(-1 + ( rule(45 - mislead(( 520.41 ))) ))){
	x -= x;
	if(Sansa){
	--( -90 )
};
	Hodor *= protect(( -( dog ) ),--580.8,-0.94)
}
};
	Ygritte *= mislead()
};
	Arya
}
}
}
def TABLE[destroy(ROWS,-1)][k] {

}
def destroy(y){
	dog /= x
}
def TABLE[52][k] {
	Sansa -= protect(ROWS,ROWS * -300.15)
}
assert ( -( TABLE[COLS][Jon + bar(( -( TABLE[betray()][( ( ( Arya ) ) / dog )] ) ),COLS - dog * ( protect() - -43 ))] ) ) : "Nothing burns like the cold."
def rule(Sansa){
	-Arya;
	TABLE[COLS][protect() + COLS]
}
def bar(Stark,Hodor){
	Ygritte += ROWS * ( foo(14,foo(-Jon),-0.61) );
	Sansa += TABLE[-92][Stark]
}
def mislead(Sansa,Ygritte){
	Hodor;
	if(dog){

} else {
	Jon /= -39;
	COLS
}
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.53 - TABLE[betray(Hodor)][ROWS]][k] {
	y += ( mislead(( ( Jon ) )) )
}
assert --foo(Sansa,Jon) : "What do we say to the Lord of Death?"
def TABLE[dog][i] {
	if(Ygritte + mislead(bar(),-bar(( COLS )),bar(protect(( ( ( TABLE[( destroy(TABLE[-betray() - ( 1 * -( 32 ) * protect(foo(Ygritte),( TABLE[---Jon / bar(Arya)][Sansa] - ( ( ( 580.4 ) ) ) / -ROWS ),1) )][foo(Ygritte,mislead(foo(( mislead(ROWS,-63) ))) / TABLE[betray(y)][Arya] / protect(destroy(destroy(-0.65 * bar(ROWS,( COLS ) + ( ( -630.9866 ) ))),ROWS)))],-TABLE[( ( betray(( Hodor )) ) )][( ---foo(-ROWS + Jon,mislead(( TABLE[betray(y - Arya,betray(destroy(Sansa,---protect(protect(2,Ygritte),( ROWS * ( ( 1 ) ) - bar() )) + ( 880.54 - mislead(( bar(0.16,-530.5) ),Jon) ) - Arya),630.69),-1)][( COLS )] ),-ROWS,foo(( -mislead(rule(mislead(mislead(--rule() / foo(-33)),TABLE[-COLS + TABLE[TABLE[-TABLE[protect(-0.85 + foo(20,COLS))][311]][TABLE[-COLS - -Ygritte][-39] * -Jon]][( 520.426 )]][-28],57 - ROWS) * ( ( betray(y,y) - bar(betray(Sansa,-1)) ) - foo(ROWS * Arya) ) / -1,( destroy(Hodor,protect()) * 0.93 ),-( ROWS )),ROWS) ),-foo(TABLE[-x][( Ygritte )],1) * 67 / -dog - protect(TABLE[-Hodor][Jon],-( ( -Hodor ) ),Ygritte),0.54)),( mislead(( 1 - ( x ) / 0.17 )) )) - y ) / dog] / TABLE[-610.9385][-270.02]) )][betray(COLS,destroy(protect(TABLE[mislead(ROWS,( Ygritte )) * rule(--190.813 * Arya / ( -TABLE[COLS][1] ) * ( Ygritte / -1 ) * --Sansa + -( x * -10 ),( -protect() * -3 ))][89 - ( dog )] * -( ( y * ( mislead(TABLE[destroy(TABLE[( ( Jon ) )][1] * TABLE[-( 6 - protect(TABLE[Hodor][ROWS] * protect()) ) / Sansa][foo()],1)][dog + -0.25],600.91,( TABLE[mislead()][-destroy(mislead(88,TABLE[COLS][-410.2] / Arya),x - bar(protect(-COLS),0.55 + 95,24))] )) ) ) ) * COLS) / --0.98),rule(betray(4),---99) + -TABLE[TABLE[( -destroy() ) / 180.26][protect(ROWS)]][36 * TABLE[30][Hodor] * ( COLS ) * ROWS] - -450.003 / TABLE[-Sansa / COLS + ( Sansa * -140.92 ) - ( Stark ) - 1 * ( COLS ) / -93 - 870 / ( COLS ) - TABLE[Hodor][( mislead(COLS,( -( Stark ) )) * ( -83 ) * ROWS )]][betray(dog * --TABLE[( betray(25 + TABLE[-57 - -( --( destroy(TABLE[foo()][( mislead(Stark,foo(COLS,-rule(-0.31,-0.75),mislead(-ROWS))) )]) ) * -0.65 ) * ---0.27][--x],COLS,--TABLE[1][COLS]) )][y])])] / ( -44 / 350.11 ) + destroy(45,Stark) ) ) ),( -0.21 )),-0.77))){
	Ygritte -= Arya / mislead(-67) * -740.362;
	if(y){
	-1;
	y += -30;
	COLS + ( dog )
}
} else {
	x += ( ( Stark ) );
	if(( Sansa )){

}
};
	if(ROWS){
	x / 1;
	y += TABLE[-10.8][( destroy(TABLE[mislead(Arya * Stark,-ROWS)][0.03],ROWS) )]
} else {
	if(65){
	x += bar(-23 / foo(betray(ROWS) - mislead(( --( ROWS ) )),-( rule() ),-13 * mislead())) + 1;
	COLS;
	y += betray(Arya,bar(bar(( 0.33 ),-Hodor,destroy(COLS * COLS / Stark,-rule(1,57,-Stark),ROWS)),COLS))
} else {

};
	mislead(bar(y + Hodor + -14 / 1 / Stark));
	if(y){
	if(-1){
	dog -= ( -Arya )
}
}
}
}
assert -0.91 : "What do we say to the Lord of Death?"
var dog = ROWS
def rule(){
	Hodor /= COLS / foo(( --1 ),-74);
	Stark *= betray();
	if(COLS){

}
}
def foo(Sansa){

}
assert ( ( Hodor ) ) : "One can not simply parse himself"
assert ( ( ( Hodor ) - y ) ) : "Nothing burns like the cold."
assert ( ( Jon ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Arya : "One can not simply parse himself"
def TABLE[dog][j] {
	if(18){
	bar(TABLE[( dog )][( ROWS )],0.64,ROWS)
} else {
	if(( ( y ) )){

} else {
	Arya *= -Arya;
	if(ROWS){
	Hodor -= Stark;
	dog -= dog - ROWS
} else {
	Stark -= -80.31;
	Stark -= mislead(-( betray(-protect(destroy(Hodor,0.93 - destroy(Arya)),x,COLS + Jon)) ),( dog ));
	if(0.37 / bar()){
	if(Stark){

};
	--360.1381 * x;
	if(ROWS){
	ROWS;
	Arya /= 0.88
} else {
	Hodor /= ( -59 / Ygritte );
	ROWS
}
}
};
	dog += -0.15
};
	Arya += -1
};
	Hodor;
	Jon += dog
}
def foo(){
	-950.5;
	Jon
}
def TABLE[bar()][j] {
	if(1){
	Arya *= -830.85;
	-1;
	Sansa *= ( TABLE[( rule(COLS,-1) / Hodor ) / -TABLE[---0.29][-Sansa]][-0.73 + -120.29 - ( COLS ) * -( ( ( 0.74 ) ) ) - ( protect(0.9) ) + 16 - ( ( -77 ) ) + protect()] )
};
	( COLS )
}
def TABLE[64][j] {
	-Sansa / -71
}
var Arya = foo(--ROWS,mislead(mislead(x,TABLE[-protect(( -TABLE[Ygritte / ( Arya ) / -y * 200.642 + ( --66 )][foo(destroy(-31,COLS)) - -990.5553] ),( TABLE[-foo(bar(46))][rule()] ) / destroy(COLS))][-( TABLE[-rule(destroy(-80.2893,ROWS,39),-betray(ROWS))][Arya] ) - 68 + bar(COLS) - bar(( -1 ),Arya,-bar(-destroy(-mislead())))] - Jon,0.07),66),bar(rule(57,-mislead(-( mislead(( ( bar(Jon - --TABLE[Sansa][y] * -860.979,-bar(y) / ( --0.19 ) + Arya) ) ),-TABLE[COLS][y]) ))) - destroy(( TABLE[-COLS][ROWS] ) - -380.96) - -0.83))
var Sansa = ( ( -0.49 ) )
assert y * -COLS * dog : "Fear cuts deeper than swords."
def TABLE[-160.72][i] {
	if(Jon){
	if(COLS * ( destroy(--0.68 / -protect() - -93 + Arya,destroy(( Sansa )),--ROWS) )){
	--Hodor / ( betray(ROWS,TABLE[( COLS )][ROWS],dog) );
	Jon /= ( COLS ) - ROWS
} else {
	if(Ygritte){
	( -( --23 ) );
	if(-9){

};
	dog
} else {
	if(0.69){

} else {
	TABLE[-( 18 )][-Hodor / ( 0.53 ) + y]
}
};
	Ygritte += y
};
	ROWS
} else {
	if(0.9){
	if(47){
	if(( y )){

} else {
	Hodor -= TABLE[COLS - ---COLS - -mislead() - COLS][0.02];
	if(Stark){
	if(7){
	Sansa /= ( x );
	ROWS
};
	if(x){
	0.79
} else {
	foo(x);
	if(COLS){
	Hodor *= dog;
	if(-( COLS )){
	x *= ( COLS * COLS * Jon - ( 39 ) ) / ROWS
} else {
	if(( rule(bar(( TABLE[foo()][x] ))) - ( bar(-COLS) - 84 ) )){
	y -= ( --0.33 * ( ( Arya ) ) );
	dog *= ROWS
} else {
	if(Stark){
	dog /= COLS / bar(bar(-8))
}
}
}
}
};
	if(--1){
	x -= betray(-( Stark * COLS ),( Sansa ))
} else {
	dog;
	y -= mislead(-38)
}
} else {

}
};
	( ( destroy() ) )
} else {
	if(rule(protect(-protect(),--1),TABLE[-0.72][-0.61]) - y){
	if(bar(rule(COLS),-71)){
	Arya /= ---bar(0.29,-100,Jon * ROWS);
	Stark
} else {
	---0.96
}
}
};
	if(ROWS){
	Arya /= 1
} else {
	foo(destroy(( ( ( -( bar(protect(TABLE[Sansa][mislead(( dog ))],--0.97,( Hodor ))) ) + -41 ) ) ),ROWS - foo()),Arya)
}
};
	if(Hodor){
	dog -= ( ( dog ) );
	ROWS
};
	COLS
}
}
var Ygritte = -880.68
def bar(Sansa,Stark,y){
	Hodor *= ( ( -Ygritte - ---9 + ROWS ) - -ROWS * -0.9 )
}
def protect(){
	( --62 * ROWS + COLS );
	if(-( x + ( --TABLE[--rule(( 1 ),-TABLE[( COLS * Jon )][91]) - 0.76][( mislead() )] ) ) - Sansa){
	x /= 0.8
}
}
assert ROWS : "One can not simply parse himself"
var Stark = 3
var Sansa = --( ( destroy(foo(( ( 0.9 ) ),ROWS)) ) )
var y = protect(COLS)
var Sansa = Sansa
def TABLE[--Arya][i] {
	Hodor;
	Arya *= 90
}
assert --65 : "What do we say to the Lord of Death?"
assert TABLE[-( -1 - COLS ) / Stark * -0.38 * rule() - TABLE[destroy(y)][( Ygritte )] * ( COLS )][COLS] - ( y ) * ( protect(bar(--Stark,-1),Sansa,destroy(--( COLS ) / betray(-0.23),1)) ) : "What do we say to the Lord of Death?"
assert -57 : "Fear cuts deeper than swords."
assert ( betray() ) : "What do we say to the Lord of Death?"
var Sansa = TABLE[Arya][mislead(Sansa)]
assert TABLE[92][COLS] : "Fear cuts deeper than swords."
def bar(){

}
var dog = TABLE[COLS][destroy(-dog - ROWS,( COLS ),COLS) * ROWS]
def TABLE[Jon][j] {
	bar();
	x *= 22;
	if(28 / ( -0.93 )){
	( COLS - Jon );
	dog *= -( betray(( -1 ),-( TABLE[-( protect(Jon,ROWS) ) * ( destroy(destroy(destroy(),-Hodor),COLS) * -bar(TABLE[TABLE[-Ygritte][betray(rule(10),Sansa)] + ROWS][COLS],Ygritte) - bar(protect(protect(COLS),-rule(Sansa,( Stark )) - -0.62)) + Arya )][Jon - TABLE[protect(-Hodor,( ROWS ) + -COLS * y)][ROWS]] )) );
	ROWS
} else {
	Stark *= ( -80.452 );
	if(COLS * -1){
	-710.638 / foo(COLS,Stark);
	Hodor -= --93 / -y * ROWS
} else {
	if(mislead(--( -0.62 ),Arya,Jon)){
	dog * ( rule(foo(( TABLE[ROWS][-betray(Sansa,-( bar(TABLE[( 0.95 )][ROWS],Arya / -1 * -( -0.07 * ROWS ) / dog,-1) ))] ),x * -1)) );
	Hodor /= rule(rule(destroy(),Hodor,destroy(-bar(( -94 )) * 60,protect(Hodor,bar(( Stark ),Arya)))) / Jon,( -960.2 ));
	Hodor += foo(( -620.178 + ( rule(rule(TABLE[( ROWS )][-260.5]),-910.478,Sansa) ) ),-0.03)
}
};
	dog *= ( ( foo(-Sansa) ) * -28 )
}
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(rule(-Jon + -67 / --COLS + -COLS / COLS,COLS)) * ( ( betray() ) )][j] {
	-betray();
	-mislead(protect(-1,x,COLS),-79 / ROWS);
	Arya += ( COLS )
}
def TABLE[protect(-0.71,34)][k] {
	rule(mislead(-TABLE[( COLS )][mislead(foo() * ---1)]));
	if(26){

}
}
def TABLE[-0.09][i] {
	Ygritte;
	if(bar(ROWS)){
	x *= -foo(-bar(),x) - ROWS;
	Arya
};
	if(ROWS){
	y
}
}
var dog = 41
def destroy(Ygritte,Sansa){
	270.403;
	Hodor -= ROWS;
	foo()
}
assert -TABLE[-0.08][TABLE[-92][protect(mislead(bar(-( bar(betray(ROWS + --0.33 / --1),COLS) ),COLS))) - 0.24]] + ( Arya - -18 ) : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	--x * Stark
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = ROWS
assert bar(Arya) - 230.8 : "Nothing burns like the cold."
def TABLE[-dog][j] {
	( ( 58 ) );
	if(Arya){
	2;
	if(( -1 )){
	ROWS;
	Sansa += -0.64
}
}
}
def TABLE[Sansa * COLS][i] {
	dog += -740.6;
	if(-0.99){
	Stark -= TABLE[( TABLE[Stark][-( y )] * destroy(destroy(foo(( ( COLS ) ))),protect(-1),Sansa) )][ROWS];
	y -= Jon
} else {

}
}
assert -930.2 - -x : "What do we say to the Lord of Death?"
def TABLE[ROWS][j] {
	y /= -Jon;
	if(ROWS){
	( ROWS );
	x += COLS
} else {
	destroy(y);
	if(-ROWS){
	if(destroy(TABLE[750.955 - ---COLS][( foo(( -TABLE[TABLE[( ( --ROWS ) ) / Sansa][5]][0.72] ),TABLE[-destroy(Jon,-( mislead(dog) ))][-84] + 1) )])){

} else {
	if(destroy(ROWS,-TABLE[bar(TABLE[( y )][rule(( ( y ) - TABLE[-( -x ) / --COLS][rule(dog,-8)] ),protect(50,-39))])][( Sansa )])){
	if(ROWS){

} else {
	Sansa *= protect(Arya,TABLE[( 0.01 - Stark )][Ygritte] - COLS);
	37
};
	if(-bar(0.07,--0.8,TABLE[-foo(( -1 ),betray())][Sansa / ( -71 - protect(COLS) )])){
	if(protect(-27)){
	if(-0.6 / 0.95){
	if(( TABLE[TABLE[--1][-0.84]][TABLE[Ygritte][COLS]] )){
	( --720.26 ) * COLS
};
	-bar(( x )) * betray(( COLS ),( -51 ),mislead(x,rule(ROWS,TABLE[TABLE[Jon][y]][( -COLS )]))) - 1;
	1
} else {
	Ygritte += betray(x);
	( ( -TABLE[-ROWS][0.24] ) )
}
}
}
} else {

};
	( TABLE[Jon][( ( betray(( COLS )) ) )] )
};
	if(dog){

};
	if(foo(-betray(y),Hodor,0.81)){

}
}
}
}
assert ( ( ( --790.0231 - ( betray() ) - y + destroy(( 26 ),bar()) ) ) + ( 200.6254 ) ) : "Fear cuts deeper than swords."
var Hodor = COLS
def betray(Sansa){

}
def TABLE[ROWS][i] {
	if(ROWS){
	COLS;
	protect(bar(Hodor,-( TABLE[TABLE[betray(Sansa)][-0.95]][y] ) / 800.5427 + ( COLS )),--TABLE[ROWS][0.89 / TABLE[ROWS][ROWS / 0.95 + foo(betray(-70 * betray(-620.096),Ygritte) / ( -0.76 ),390.27 - ( ( ( mislead(mislead(Ygritte) / ( -66 )) ) - protect(-TABLE[( -foo(1) )][TABLE[ROWS * Jon][COLS]],80 * -TABLE[-betray(Sansa,---39)][( TABLE[-y][( ROWS )] ) * -TABLE[-bar(480.32) + TABLE[( -Hodor - Hodor )][Hodor]][TABLE[-1][-foo(-Sansa + TABLE[-rule(Jon - mislead(mislead(( 0.88 ),0.91),-0.34 * -69) * -TABLE[-0.21][foo()])][( -1 * bar(-3,-mislead(destroy(( Jon ),rule(--0.18),foo(Ygritte,Hodor)) + ( TABLE[-rule(( -protect(0.97) ),1)][-Stark] ))) * ( Ygritte ) )],-380.606)]]]) ) ),foo(foo(0.16),-( Arya ))) + ROWS + ( ( COLS ) )]] / -35)
}
}
def TABLE[destroy(Stark)][k] {
	if(( ( -TABLE[-bar(-( -Ygritte ) + COLS - -1 - ( -93 ),-0.1,( ( 0.72 ) ))][-25] ) )){
	if(( ( -73 ) ) - Sansa){

}
};
	if(protect()){
	if(dog){
	rule(x * Stark / ( ( ( -betray(y) ) ) ))
} else {
	if(69 / --100){
	Stark;
	if(-destroy(TABLE[ROWS][( mislead(0.6,-96,-0.31) )]) + -59){
	Stark += -820.4;
	if(( dog )){
	Jon += COLS;
	COLS * -COLS - Hodor
};
	COLS
}
}
};
	if(mislead(-0.46,TABLE[-COLS - -Jon][-41 / Hodor])){
	Jon += Arya;
	Jon *= ( ( ROWS ) )
} else {
	if(protect(TABLE[-1][( Ygritte ) - betray(Hodor,--COLS,protect(ROWS * ( -350.3 ),-COLS * -Ygritte - rule(TABLE[Jon][destroy(( ROWS ),COLS,TABLE[rule(ROWS + ROWS,-x)][Ygritte])] + protect(-79) * -betray(--0.44))))])){
	x += x;
	-7
} else {
	-COLS;
	dog += -1;
	if(-0.42){
	betray(-0.08,Stark + -0.25 * Ygritte,destroy());
	if(( Hodor )){
	Jon *= protect(---460.6);
	Hodor += ( ROWS )
} else {
	if(mislead(protect(-foo(y),bar(rule(),ROWS,COLS) * COLS * COLS),-64)){
	( TABLE[Sansa][mislead()] ) - ( Stark )
};
	( -destroy(--0.99 - -( -( ( -bar() ) ) )) );
	44
}
}
};
	Sansa /= --COLS
}
} else {
	Hodor *= ROWS + -850.8369;
	if(bar(Jon)){
	TABLE[ROWS][( 0.75 )];
	Hodor *= destroy(1)
} else {

};
	-( ROWS + -69 )
}
}
def bar(Ygritte){
	y *= 0.89
}
def foo(Arya,Sansa,Stark){
	if(( Sansa )){

}
}
def protect(x,Stark){
	x /= bar(Jon,( ( -Ygritte ) ))
}
var x = y
def TABLE[mislead(( -Stark ),Arya)][j] {

}
var Hodor = -16
var Stark = ( ( foo(Stark) ) )
var Arya = --590.3213 - foo() / protect(-( TABLE[-0.56][bar(--88,foo(-Jon / dog / -0.27,( ( destroy(1 * ( 11 + destroy(11,--0.5) + destroy() ),-81 + -23 / -0.75,-Sansa) ) ) - ROWS - -48,-mislead()))] ) - protect(Stark),y,ROWS)
def protect(){
	if(77){
	if(( ROWS )){
	Hodor
};
	Hodor /= COLS
};
	if(ROWS / TABLE[mislead(ROWS,-----x * Sansa)][foo()] + dog){
	( -1 );
	-ROWS
}
}
def TABLE[COLS][i] {
	Jon += 1;
	if(--0.67 - -34){
	( Stark )
} else {
	TABLE[-1][-ROWS];
	if(betray(Jon,mislead(( -destroy(Ygritte) ),COLS))){
	Hodor += -600.431;
	if(-dog){
	( Sansa );
	if(-1 - 20){
	if(mislead(dog)){
	if(TABLE[TABLE[-( foo() )][protect()]][( Stark )]){

};
	COLS
};
	dog -= TABLE[( -780.19 )][-ROWS - --0.02 + -( COLS )]
}
} else {
	if(Jon){
	if(bar(mislead(TABLE[Stark][mislead(Ygritte) + Arya],-ROWS / ( y ) + -COLS,( 1 )),Sansa,---TABLE[-860.599][ROWS] * 85)){
	TABLE[y][y]
};
	if(-Hodor){
	Sansa *= ( -66 );
	foo(( TABLE[-55][( 0.89 )] ),-COLS)
} else {
	if(bar(COLS,-1 / ROWS)){
	if(bar(Stark)){
	bar(( x ) * TABLE[Sansa][destroy(( y ))],mislead(--TABLE[foo(betray(--( ( --COLS ) ),( -0.99 - -foo(dog,bar(Sansa)) ) / Ygritte),COLS,TABLE[foo(COLS)][48]) / 0.66][0.99],y,destroy() * TABLE[foo(betray(protect() / ( Stark ),-( ( COLS ) - Arya )),( -92 / betray(-91,( ( --foo(Stark,( Stark )) ) )) - ( destroy(( 1 * TABLE[--rule(Hodor,( ( TABLE[TABLE[Jon][betray(--COLS,-dog * -ROWS)]][-19] ) )) + rule(( 72 ),-----COLS / bar(( TABLE[Stark - x][rule(ROWS + TABLE[Hodor][ROWS],dog,-( 810.361 ))] ) - foo(( -25 )) * -0.11 - TABLE[protect(COLS - -0.52)][--ROWS - -0.26]) - Jon - ( ( --Ygritte ) ))][--mislead(foo(( ( betray(-1 * rule(Sansa,-0.3,rule(mislead(--630.892,bar(( 0.76 ),-0.14)),rule(1,betray())) - -TABLE[dog][-1]) + dog * -betray(Arya,( -mislead(-Ygritte / -COLS * -0.01) ),TABLE[Sansa][foo(-0.55,TABLE[1][y])]) + bar() + betray(29 + ( ( 60 ) ),COLS),protect()) * ( --1 / TABLE[dog + 1][betray(destroy(-1),( ROWS + bar(Hodor - -Jon + ( foo(foo(-28 * --30 + Ygritte),( TABLE[( y )][-TABLE[ROWS][TABLE[43 - x][-( -TABLE[-betray(bar(bar(Hodor,TABLE[y][protect(( 0.42 ),ROWS) / ( 38 )],0.71),destroy(( -3 )),bar(x)),Hodor,destroy(--ROWS,0)) - ( ( ( ( foo() / destroy(COLS) ) ) ) ) + mislead(rule(mislead(-betray(),-x,( ( dog ) )),Hodor) + ROWS) + ( Ygritte )][730.7] )]]] ),Hodor + ( ( -TABLE[bar(COLS)][y] ) ) - y) )) ))] / -1 ) ) )) - Hodor) - -mislead(( --42 ),ROWS,( destroy(ROWS,protect(-1,-0.49,1)) )) - ( ROWS ) + -0.84] ),ROWS) ) + -0.88 ))][-0.48]))
};
	Ygritte *= mislead(Hodor)
} else {
	ROWS - -foo(( -1 ));
	1
}
}
}
}
}
}
}
assert -y : "Winter is coming"
def rule(Arya,Jon,dog){
	if(ROWS){
	dog;
	COLS;
	if(TABLE[Arya][Arya]){
	Hodor *= mislead();
	if(ROWS){
	ROWS;
	if(x){
	ROWS
};
	x /= ( ( --( ( COLS ) ) ) / destroy(( -64 ),-1) * --ROWS )
}
}
}
}
assert ( ( TABLE[Stark][( TABLE[Sansa][rule(( Jon ))] )] / -ROWS ) - Stark ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-1][j] {

}
def TABLE[( TABLE[29][ROWS] )][i] {
	TABLE[( --COLS / Hodor )][( -betray(-74) * -( -1 - dog ) * --ROWS - COLS )];
	Jon += -mislead(rule(ROWS,Sansa,24 - ---180.4124 * ROWS),( rule() * ( ( -0.93 ) ) ))
}
assert COLS : "Nothing burns like the cold."
var y = Arya
def TABLE[( Jon )][i] {
	Ygritte += bar(13)
}
assert ( Stark ) : "Nothing burns like the cold."
def TABLE[60][i] {
	destroy(( ( x ) ),-1);
	if(12){
	x *= 0.61;
	if(-Sansa){
	if(-( TABLE[destroy(Sansa)][( -( -( Jon ) ) )] )){
	protect(COLS);
	Arya -= 0.81;
	-63
}
} else {
	Jon /= -dog;
	if(( --360.9 + -20.224 )){
	if(-0.37){
	if(COLS * ( Hodor )){
	( Jon )
}
};
	( ( -TABLE[x][Hodor] ) )
};
	y
};
	if(-y){

}
} else {
	-10 - -22;
	Arya += TABLE[50 * protect()][( dog - protect(rule(ROWS,-ROWS),610.476) )]
}
}
var Arya = COLS
def bar(Ygritte,x){
	x *= mislead(-1,0.1);
	if(ROWS){

}
}
def TABLE[290.3][i] {

}
def bar(){
	if(protect(COLS)){
	-dog;
	if(ROWS){
	-0.91;
	780.951
} else {
	if(ROWS){
	if(destroy(COLS,destroy() + ( 0.89 ) / -( Jon ),Arya)){
	Jon *= ( destroy(60.8,( COLS ),Hodor) * ( TABLE[destroy(32,protect(),---ROWS - -74)][980.985] ) )
}
} else {
	dog /= -0.31
};
	( --rule() )
}
}
}
assert -670.71 : "Winter is coming"
assert ( --4 - bar(-0.63,-0.08 - Hodor - Jon) / -foo() / dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( Arya )][k] {

}
def TABLE[-1][k] {
	if(Sansa / betray(Stark)){
	( -Hodor )
} else {

}
}
def destroy(Hodor,x){
	if(rule(rule(dog,( Stark )),( TABLE[TABLE[-53][( ROWS ) / -COLS + -( Stark )]][protect(( Ygritte ),COLS)] ) - ( 84 ),-x - dog)){
	TABLE[foo(-( protect() ) * ( rule(-0.32,dog) + mislead(-protect(Jon + ( ROWS ) / -19),-y) ))][destroy(-( rule() ) - Arya * COLS)]
};
	Jon -= rule(protect(Jon,COLS),-1)
}
var x = mislead(Hodor) * Ygritte
var Jon = ( -mislead(TABLE[( 0.96 )][-1] / mislead(---TABLE[foo(COLS,--( 0.81 ) + ROWS - 0.33 - ( --990.768 ) / bar(-85,betray(46,COLS,-1)),-0.64 - ( ROWS ) - --0.07 + -0.25)][ROWS],TABLE[( -69 ) + -1][Stark]),dog) )
def TABLE[190.672][i] {
	dog *= COLS
}
def TABLE[Sansa / -protect(ROWS)][i] {
	Jon *= ( destroy(x) );
	Hodor -= Stark
}
assert --y : "Fear cuts deeper than swords."
assert --bar(protect(( -830.1293 ) / TABLE[ROWS][-TABLE[-ROWS][ROWS]],bar(( bar(-( foo(protect(),0.02) ),-foo(-1,-1,mislead(-44 + betray(rule(protect(( protect() ))),protect(ROWS)) / Stark,bar()))) ) + COLS,( -0.44 )))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(-39 - -Jon * -1 / ROWS) : "What do we say to the Lord of Death?"
var Jon = betray(TABLE[ROWS + -26][( -230.2173 )],-y,COLS) - ROWS
def bar(x,Hodor){
	y -= ( x )
}
def foo(Ygritte,x){

}
def TABLE[-foo(foo(0.66)) * ROWS][j] {
	if(COLS){
	x /= TABLE[( TABLE[-Arya][foo(-rule(Sansa),( -430.7 ))] - y * 83 )][( TABLE[destroy() + -Stark][-ROWS] ) / -83 - ( TABLE[Jon - 0.28][-1] )];
	Hodor -= dog
};
	-( x ) + -TABLE[-840.72 / ( -710.01 )][Arya]
}
assert ( ( protect() ) ) - ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( 67 ) : "One can not simply parse himself"
var Jon = rule(( ( protect(-( ( COLS ) ) * Stark,-COLS + -96) ) ),ROWS)
def TABLE[-0.33][k] {
	COLS;
	Jon += 41
}
def TABLE[-Ygritte][k] {
	Sansa += ( rule(26) )
}
def TABLE[-protect(-500.5,1)][j] {
	Sansa -= protect(-TABLE[Ygritte][COLS]);
	( COLS );
	if(ROWS){
	( ROWS )
} else {
	x *= Stark;
	y
}
}
def TABLE[COLS][i] {

}
var Jon = ROWS
def TABLE[Sansa * 1 + COLS + foo(TABLE[-Arya + -1][mislead(COLS - rule(ROWS + Arya) + ( mislead() ))])][j] {
	mislead();
	Arya *= ROWS * Arya
}
var x = mislead(( TABLE[ROWS][x] ))
def foo(y){
	if(destroy(Arya * 1,--Stark / Jon)){
	if(rule(-( 73 ))){
	Arya /= 5
} else {
	x *= mislead(Sansa) - ( TABLE[foo()][( ( TABLE[bar(580.4 + ( -foo() * -1 ),35,( ( TABLE[-rule(( y ) - ( 0.22 ),( 0.68 ),y)][dog] ) - ROWS * ---Sansa / rule(bar(-Arya,destroy() - 82,--74),TABLE[-Sansa - ROWS][-destroy(( -ROWS ))],mislead(( Arya ))) ))][-( ROWS + TABLE[-TABLE[( foo(bar(TABLE[bar(y,Jon) * 0.3][70 / ( TABLE[1][-1 - --protect(Arya)] ) * Arya]),-0.12) )][( ( 0.02 ) )]][--18] )] ) )] - x ) / ROWS + ROWS;
	betray(mislead(x),destroy(Sansa,81))
};
	-x - Arya;
	dog /= ( -13 ) - mislead(Sansa)
} else {
	dog *= Stark;
	Stark -= -x
};
	if(-45){
	Sansa /= -28
} else {
	if(0.84){
	dog -= -33;
	( ( TABLE[-( Ygritte )][ROWS] ) ) + -0.74
};
	dog
}
}
var Hodor = -( -( 380.9 / Hodor ) )
assert ( --COLS ) : "One can not simply parse himself"
def TABLE[COLS][i] {

}
assert COLS : "Winter is coming"
def TABLE[Stark + -dog - -53][i] {
	( TABLE[ROWS][TABLE[COLS][-52]] )
}
def mislead(Ygritte,Ygritte,Jon){
	if(Hodor){
	if(betray(ROWS,TABLE[Ygritte][0.31])){

};
	x *= mislead(COLS,TABLE[-950.76][--1],-0.61 * bar(TABLE[1][foo(--bar(),--4)],TABLE[-290.3465][Stark]));
	y -= -0.34
} else {

}
}
var Jon = ( protect(( -0.89 ),1) )
var Sansa = ( y )
assert ( foo(( ( rule(--COLS,Ygritte,rule(protect(Sansa))) ) ) - -530.362,foo(-destroy(--91 + -( -dog ))) * 0.93,25) ) : "Winter is coming"
var dog = ( -0.32 )
var dog = dog
def TABLE[ROWS][i] {
	x /= Jon - 0.94;
	dog -= --rule(betray(foo(Hodor,protect(-6),-bar(-rule(destroy(-280.942,-( ( Ygritte ) ) * -0.86))))))
}
def TABLE[-0.87][j] {

}
var Sansa = --COLS + ROWS
def bar(dog,Hodor){
	Stark += -1
}
var Sansa = ( COLS - -1 - -y + Sansa * -480.821 )
def betray(Stark,Arya){
	if(Arya){
	y /= COLS
};
	betray(-y,TABLE[protect(( ROWS )) * rule() + ROWS][ROWS])
}
def rule(Arya){
	dog /= -COLS;
	-Sansa;
	-660.12 * COLS - COLS / protect(-1 / 58,-0.87)
}
var Arya = protect(--0.95,dog,ROWS)
def betray(Jon,x,dog){
	if(( ( ( -580.4904 ) ) )){

} else {
	destroy(0.19);
	Arya -= -x
}
}
def TABLE[-foo(-TABLE[87][-( -COLS * -( -( destroy(( Hodor ),COLS) / 0.09 + Hodor ) ) )],x)][k] {
	if(mislead(-COLS)){
	( TABLE[-0.89][( --( 70.28 - -73 - COLS ) )] )
}
}
assert -destroy(TABLE[----1][( 0.51 ) * ( Sansa )],-( -( rule(ROWS,TABLE[78 * COLS][( Jon )] / ROWS + ROWS) * COLS ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	( betray(betray(Hodor),COLS) );
	dog *= protect(ROWS) - TABLE[( ( Arya + Hodor ) )][( destroy(foo(Jon,x * ( ( 1 / ROWS ) ),( -COLS - Jon ) - Stark - Stark),( -bar(Sansa / ROWS * COLS) * ( ( foo(TABLE[Jon][-Jon]) ) - TABLE[ROWS][0.95] ) )) )]
}
def bar(Sansa,Ygritte){
	( ( -( -Ygritte - -710.886 ) ) )
}
def destroy(Hodor){

}
def protect(Stark){
	Arya -= Jon + 0.3
}
def rule(){
	if(---( ROWS ) / mislead() + Jon / -mislead()){

};
	-1 - betray(690.48)
}
assert -1000.789 : "One can not simply parse himself"
def TABLE[Sansa][i] {
	830.34;
	if(x){
	Sansa += 0.15;
	if(-TABLE[TABLE[( TABLE[( Jon )][700.25] * Ygritte )][Arya]][COLS]){
	if(-protect(foo(rule(protect(rule(-( -0.77 )),( bar(-( ROWS * COLS - Sansa - -( -1 * TABLE[TABLE[91][--protect(Ygritte)]][( TABLE[Hodor][--0.85] )] ) )) - 0.49 ),destroy(COLS * ( -580.48 + y / Hodor * y + destroy(( ( x ) )) ),-COLS)) * --1,protect(y,mislead(-betray(Hodor))))),Hodor)){
	-0.25
};
	if(mislead(COLS)){
	dog += protect(( 18 ),foo(-Sansa + 1)) / ( COLS );
	if(( COLS )){
	if(Arya){
	if(protect(-Ygritte,Ygritte) - TABLE[bar()][( -Arya ) / ( dog / ---0.95 / -Ygritte - 0.94 + ( Jon ) )] + -( ( 1 ) ) + Sansa){
	Ygritte *= ROWS
} else {
	if(ROWS){

};
	Arya /= -x;
	Arya
};
	Sansa += ( --TABLE[TABLE[( --( foo(0.48,COLS,rule(COLS,-( destroy(TABLE[( Stark )][ROWS] / ( 0.19 ) / ROWS - 670.04,-foo(dog)) )) / ROWS) ) )][-x * --350.6 - ROWS / ( y )]][( -0.74 )] ) * ROWS;
	Sansa -= 63
} else {
	Jon += protect(ROWS,0.78);
	Sansa += Jon * ( ( 0.14 ) )
};
	y /= ( -COLS );
	-35
} else {

}
}
} else {
	( --( --( TABLE[( --93 + -bar() ) / -ROWS][Sansa * 0.18] ) ) );
	if(mislead(-0.03,destroy(ROWS))){
	x *= -bar(COLS - ( destroy(( Stark + ROWS ),-89 * --210.48 - -1) ))
}
}
} else {
	if(ROWS){
	if(COLS){

};
	1
} else {

};
	Arya *= COLS
};
	if(destroy(Ygritte,Jon)){
	Hodor *= ROWS
}
}
var Hodor = foo(dog)
var Jon = Sansa
var Ygritte = ( rule(-Stark) )
var Ygritte = -0.48
var dog = 0.69
def foo(Jon,Sansa){
	Ygritte -= Ygritte / x
}
assert bar(Jon) : "Nothing burns like the cold."
def foo(Stark,Sansa){
	Arya /= betray(--protect(foo(-ROWS - ( Sansa - ( ( -dog ) ) )),foo(ROWS,Jon))) + rule(Arya);
	Hodor += ( Sansa );
	1
}
def TABLE[-0.85][i] {
	Sansa += ( bar(rule()) );
	---ROWS * ROWS * ( y ) * Stark
}
assert -43 : "Fear cuts deeper than swords."
assert Stark - -550.06 : "One can not simply parse himself"
def bar(Stark,y){
	if(---( ( destroy() + ROWS ) ) * 51){
	-Jon;
	( --0.46 + COLS - --( COLS ) )
} else {
	-0.34;
	COLS
}
}
assert foo(TABLE[ROWS + ROWS / Arya][Jon],COLS) : "Fear cuts deeper than swords."
def betray(Sansa,Stark,Sansa){
	---TABLE[-0.38][( -1 / 730.7966 )]
}
def betray(Jon){
	if(TABLE[( -Ygritte / -destroy(( protect(dog,Arya) ) - -TABLE[COLS][0.01]) / Stark + COLS )][( TABLE[Hodor][-betray(--0.68 + Sansa,81) * mislead()] )]){
	if(-27){

} else {

};
	0.01
};
	y += ( ( Hodor ) )
}
var Sansa = --200.551
def TABLE[protect(-betray(-0.2),mislead(bar(rule(-0.49)),-betray(COLS))) / destroy()][j] {
	Sansa -= ( -690.08 );
	Jon -= 38
}
def TABLE[ROWS][k] {
	if(-( 77 )){
	if(( ( -0.13 ) )){
	if(bar(0.27,( -23 ))){
	TABLE[( --380.568 )][-0.14];
	Ygritte += -Ygritte
} else {

};
	y
};
	Stark *= -foo(( -bar(-0.78) ),COLS)
} else {
	Hodor *= -( -390.84 )
};
	if(ROWS){

} else {

}
}
def TABLE[mislead(betray(y),( mislead(0.31 * Stark) ) / rule(-ROWS + TABLE[-ROWS][-rule()] / rule(Hodor) / foo(--ROWS - 36 - COLS / TABLE[( --72 )][-92],TABLE[COLS][Stark]),Hodor)) * Jon][i] {
	if(y){
	Arya
} else {

}
}
assert -0.52 : "Nothing burns like the cold."
assert ( 0.21 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Ygritte][j] {
	if(dog){
	if(destroy(COLS / COLS,TABLE[Arya][ROWS + Stark])){
	destroy(-72 - Arya,-( Jon ) * protect(ROWS / destroy(mislead(dog,mislead(ROWS,Arya)),-TABLE[COLS][1] / destroy(( COLS ),foo(-0.53,-x + Ygritte / ( rule(0.92,( -0.48 )) ) / -Hodor * TABLE[TABLE[mislead(rule(y))][( -ROWS + 0.25 / TABLE[88][( -490.36 )] * protect(-rule(bar() + --0.2,Arya) / bar(---580.97)) - ( -( ( ( TABLE[--Ygritte][COLS] ) ) ) ) )]][-870.792],-( ( ( 1 ) ) )),mislead(COLS,ROWS)) / Ygritte / -0.57)));
	x -= TABLE[( -Stark )][betray(4)]
} else {
	if(ROWS){

};
	if(Hodor){
	dog -= Ygritte;
	if(( -( -Ygritte / 65 / COLS / -y ) )){
	-TABLE[-dog][--36 - ---COLS + ----( 0.64 / -ROWS ) - bar()] + -TABLE[Arya][ROWS];
	Ygritte *= ROWS;
	Stark *= rule(0.49)
}
} else {
	bar(x);
	if(mislead(-42,( betray(( -51 ),y) )) + -Stark - 50.4913){

}
}
}
} else {
	Hodor /= x
}
}
def bar(Jon){
	Ygritte += -ROWS + ( -190.59 ) / Stark * ( Hodor ) / ROWS;
	if(y){
	-79 + TABLE[Ygritte][mislead()] * ( ( ( ( protect(Arya * -( ( y ) )) ) ) ) ) * COLS
}
}
var Ygritte = betray(-1,---ROWS)
assert ROWS : "Nothing burns like the cold."
assert ( ( Stark ) ) : "One can not simply parse himself"
def foo(y){
	if(( destroy(-COLS,( ROWS + TABLE[-foo(Sansa) * --4 - betray(0 - Arya) / 77][-53] )) / -( ( x ) ) )){
	if(( protect(betray(-COLS,mislead(COLS * mislead(36 * ( -30 ),y,Arya) * -1),( foo(protect(63,( -destroy(Ygritte,( -y - Jon + Sansa - -( ( ROWS ) ) - destroy(betray(ROWS + Hodor,mislead()),Jon) / -bar() ),Jon) )) / -54) + Arya + -Stark * ( COLS ) + COLS / Arya )),COLS,ROWS) )){

} else {

};
	if(ROWS){
	( Jon );
	Hodor -= ( foo(destroy(( ( ( mislead(-120.72,( ROWS ),Arya * destroy(-0.78 / -1,( rule(TABLE[COLS / Sansa * mislead(Sansa) * Sansa][bar(dog,29)]) ) * -foo(TABLE[bar(-54,Jon)][( -1 )],Ygritte,( COLS ))) * Stark) ) * bar(( ( COLS ) / x ),rule(( ( ( dog ) ) ))) ) ),TABLE[71 + -810.51][-( -Arya )]),( Sansa )) )
} else {
	Ygritte *= COLS;
	Sansa
}
};
	if(-200.4){
	if(( ( rule(betray(Hodor,ROWS)) ) )){
	( ( 320.26 ) + destroy(0.73,( 96 ),-foo(ROWS,mislead(COLS,rule(( 0.11 * ROWS ),Sansa + --protect(Ygritte),( ( dog ) )))) - -20 / -y - rule(x) * x / ( -0.06 ) - Hodor - ROWS + y * -1) );
	COLS
}
};
	Hodor *= 55
}
def TABLE[720.2143][j] {
	Hodor -= protect(ROWS / ( Ygritte ) / -COLS,rule(ROWS,( Stark ),TABLE[( ROWS )][Ygritte]) * 0.34);
	Jon -= Hodor;
	dog
}
assert Hodor - -rule(ROWS) : "Nothing burns like the cold."
assert TABLE[-mislead(-510.908,rule(ROWS),8)][-TABLE[( ROWS )][-1]] : "Nothing burns like the cold."
def TABLE[destroy()][j] {
	Jon
}
var Jon = -TABLE[destroy(52)][ROWS] - 37
var y = protect(-0.44)
def TABLE[0.6][i] {
	if(-y - -62){
	Sansa -= rule(x,Sansa,TABLE[destroy(-y,bar(-( destroy() ) - Hodor + Ygritte + ( TABLE[( ( ROWS ) )][( ( bar(-Ygritte + TABLE[-TABLE[Jon][foo(-32,-foo() * rule(-( -98 ),Jon,ROWS))]][mislead(( ( COLS ) - 0.81 * dog ) * ( bar(( bar(ROWS / ( mislead(0.7,betray(-40) - ROWS + mislead(foo(( bar(mislead(),foo(COLS - Stark,Ygritte) / Stark) )))) ),( TABLE[( TABLE[Hodor][--90] ) - -mislead(COLS)][0.08] )) )) ) - ( ( -destroy(Stark,x,protect(Hodor,Ygritte,( -0.65 ))) ) ))]) ) )] ) / ROWS),Arya)][mislead(-protect(Jon,dog / x),dog) + COLS + 93]) + ( Sansa );
	if(Ygritte){
	Hodor /= COLS
}
}
}
var Hodor = Hodor
var Hodor = ( 0.65 + COLS )
def protect(y){
	Stark += TABLE[-protect(0.44,COLS) * destroy(-( COLS ))][TABLE[-0.21][Stark]] - mislead(mislead(( 22 )))
}
def TABLE[x][i] {
	760.992 * betray(( ( Arya ) )) / Ygritte + dog;
	( COLS );
	if(860.78){
	( Hodor );
	if(foo(( -87 ) / -destroy(mislead(foo(850.941,y)),( ( TABLE[( ( -38 ) )][TABLE[-0.39][( mislead(( dog ),-Jon * Sansa) )]] ) )) - --protect(--430.091,( TABLE[ROWS][--0.27] ) / Stark / -21) + dog / ROWS,mislead(45 / Hodor,--bar(Jon,-64 - COLS * TABLE[Sansa][0.97] + 44)))){
	x /= rule(TABLE[( -1 )][ROWS] / y / -290.4589 - -0.33 - ( 30 ) + TABLE[betray(ROWS,( y ))][TABLE[Ygritte][( Stark ) - 57]] / Jon - y / ( betray(dog,-620.261,betray()) / -( -0.27 ) ));
	if(betray(-0.18,( -11 ),( -0.21 )) - ( -1 )){

}
} else {

};
	Arya
}
}
assert ROWS : "Nothing burns like the cold."
assert 0.35 : "One can not simply parse himself"
assert 1 : "Fear cuts deeper than swords."
def rule(y){
	if(ROWS){
	-Jon;
	y *= bar(Hodor,betray() / destroy(foo(-( ROWS ) * Ygritte,-490.2364) - ROWS,-0.92))
} else {
	Arya += -0.93 - destroy(Jon,TABLE[foo(Jon,Hodor)][68],COLS) + ROWS;
	dog /= dog
}
}
assert Ygritte / -0.87 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 0.05 : "Winter is coming"
var Stark = Stark
var Arya = betray(y)
def betray(){
	Ygritte;
	if(destroy(( foo(ROWS,bar(0.51,Arya)) ),COLS,mislead(( -0.19 ),-Ygritte - 290.683,--0.87)) * Stark + Stark - -Stark){
	Stark -= ( -1 ) - ( -27 );
	if(-350.635){
	Hodor *= ( -destroy(( ( -26 ) ),-mislead(protect(COLS,y)) - destroy(Stark,-1),( -( ( -mislead(ROWS - Ygritte) ) / ROWS ) )) );
	mislead()
} else {
	Ygritte += ROWS;
	dog += -27
}
}
}
def TABLE[-360.243][k] {
	dog += COLS
}
var Arya = --( 0.98 / -dog ) + -y
var Ygritte = TABLE[-1 - 97][-99] * protect(foo(( -95 )),( ( -52 ) + destroy(( ( rule(-ROWS,0.78) ) ),bar(Jon,1,-Stark),y) )) / TABLE[-44 - destroy() * ( ( -destroy(-0.49) ) )][COLS] / Arya / -0.62 - destroy(-Arya + Ygritte)
def TABLE[TABLE[bar()][1 - ( ( foo() ) )]][k] {

}
def TABLE[x][i] {
	if(foo(-COLS * -920.9255,-TABLE[Sansa][ROWS])){
	if(-protect(ROWS,COLS,( 1 ) / protect(( COLS )))){
	if(( -38 + ( dog ) )){
	Ygritte /= -1;
	if(-( ( TABLE[Sansa / TABLE[( ( TABLE[--65][Jon] ) )][TABLE[( ( Arya ) ) / Ygritte][Ygritte]]][protect(protect(foo(( ---protect(-18,COLS,x / -y / Ygritte / ( Jon )) ) + dog) / TABLE[TABLE[Hodor][0.64]][0.06],( -89 )),Arya)] - ( ( betray(( ( Stark ) )) - -33 ) ) ) )){
	dog
} else {
	Sansa;
	if(x){
	80.558
} else {
	-( Sansa ) / bar(betray(0.98),Hodor);
	if(( -destroy(y,ROWS) )){
	37;
	if(( ( ROWS ) )){
	if(protect()){
	-y;
	Jon /= bar(-Arya) + -( bar(bar(y,-( --COLS ))) / -COLS / 0.44 / -0.58 - bar(( -ROWS + TABLE[mislead(--y,Stark)][( Sansa )] )) - Ygritte )
}
} else {
	if(ROWS){
	if(destroy(Arya + 0.26 / ( destroy(-ROWS,--1) )) * -( Arya ) * -destroy(Arya,--TABLE[( Stark )][( 940.83 )] + COLS,ROWS) + --rule(-0.13) / -56){

} else {
	Ygritte *= -mislead(( ( -24 ) ));
	Sansa /= -0.87
}
};
	( -960 )
}
}
}
}
};
	if(( -mislead(-TABLE[betray(Sansa,-( foo(( ( Ygritte ) ),betray(COLS,0.43)) ))][TABLE[Sansa / betray()][Stark]] / Sansa) )){
	if(( ( TABLE[COLS][ROWS] ) / ( -14 / -( --y - COLS / ( --protect(-0.63,COLS + -ROWS) - ROWS / -protect(bar(),Sansa) ) ) * betray() ) ) + ( ( ( ( -0.7 ) ) ) )){
	ROWS;
	y += -bar()
};
	if(COLS){

} else {
	if(-Sansa * COLS - ( y ) / -80.15){

};
	if(ROWS){
	Hodor
} else {
	Arya -= ( -( Hodor ) )
};
	Arya /= bar(dog,y)
};
	-56
} else {
	if(TABLE[-ROWS][-0.97]){
	if(Ygritte){
	( destroy(-1 / ( mislead(betray(betray(0.86)),ROWS) + -ROWS + foo(( Jon ),-( TABLE[-bar(-56,--69)][Hodor] ) + TABLE[( ( -COLS ) )][Stark]) ) - ( TABLE[-( betray(y / COLS - Stark,COLS,rule(-0.13 / TABLE[-84 * Ygritte][( betray(Ygritte,protect(-Stark,( y ),-x),-Stark) / dog + Hodor * -37 )])) )][-0.93 - Hodor] )) );
	Sansa;
	Sansa *= Ygritte
};
	if(protect(-TABLE[-72][-Arya + -56 + Stark],protect(--COLS))){
	Ygritte *= -1
}
} else {
	Arya /= -0.1;
	if(rule(( x ),rule(),COLS) - TABLE[COLS][-0.22]){

} else {
	if(x){
	COLS
} else {

}
};
	if(y){
	x *= -COLS * ( ( 10 ) )
} else {
	Ygritte += betray(-1,x) / 530.196
}
};
	if(-1){
	Stark -= TABLE[Sansa][( Stark )];
	mislead(y,destroy());
	bar(59,protect(( ( TABLE[bar(destroy(( Hodor ) * dog,( betray(( y )) )) * dog / --betray() / ROWS - ( TABLE[Hodor][COLS] ),( COLS * -TABLE[rule(( 5 ),-0.24)][TABLE[-( Sansa )][-0.34] + TABLE[-360.9974][---dog]] ))][ROWS] ) ),830.41) * 44) - COLS
} else {
	if(( ( Jon ) )){
	Jon += -0.44 - bar(( ( -340.82 ) )) * ROWS;
	betray(x);
	if(dog){

}
}
};
	Sansa /= ROWS - dog
};
	( bar(35 + protect(44) - ( COLS )) )
} else {

};
	dog -= 0.89 / 0.69;
	Hodor * ROWS
};
	if(( bar() ) / Sansa * --betray(( Arya )) - -protect(( COLS ),Jon) + -bar(( --rule() - 85 ) + 1)){
	Hodor /= -Ygritte;
	Hodor -= -1 / Ygritte * -( ( COLS ) )
}
}
var Sansa = Stark
assert foo(foo(( -0.17 )) * Sansa - -foo(71 - -400.088),-4) : "Nothing burns like the cold."
assert -x : "Winter is coming"
def TABLE[y][j] {
	if(x){
	-0.94;
	if(dog){
	foo(-0.2);
	if(( rule(-220.6,--foo(Sansa),-TABLE[bar(bar(32),( Jon ),TABLE[mislead()][0.24])][( Stark )]) ) - ROWS){
	if(-320.0404){
	( mislead(--COLS + ROWS) )
} else {
	-Sansa
}
} else {
	COLS
}
} else {
	( ROWS )
}
} else {
	if(TABLE[-1 - ROWS][0.52] + --0.81 * foo(( COLS ),dog,Arya)){
	if(ROWS){

};
	y /= y
} else {
	foo(-62);
	( -92 ) + -( -1 );
	if(Jon){
	if(-1){
	Stark += ( ( ( 76 - Hodor * 0.55 + Ygritte ) ) )
} else {
	TABLE[y][-1]
};
	Stark *= ( -Hodor );
	if(protect(25,Stark * ( ( x ) ) * ---protect(Hodor,( -190.8037 ) - ROWS / ROWS / -COLS,( TABLE[1 - mislead(bar(-24 + ROWS,( ROWS ))) / TABLE[0.63 - -TABLE[-58][-1]][rule(Jon)] / ROWS][1] )) / ROWS) - protect() / -420.532){
	-( dog )
} else {
	-1;
	Stark -= mislead(foo(Sansa,Ygritte,( -66 ) * ROWS - ( -1 )) * TABLE[-38][dog],-foo(ROWS / mislead(-320.884) + -0.46));
	-0.97
}
} else {
	COLS;
	Ygritte -= x + dog
}
};
	Hodor -= ( 1 );
	y -= 73
}
}
def TABLE[y][j] {
	TABLE[Sansa][ROWS]
}
var Hodor = ROWS
assert -Stark : "What do we say to the Lord of Death?"
def bar(){
	if(( betray(Hodor,x) )){
	y /= -45;
	x -= ( x );
	Arya += y
} else {
	( Stark ) + -480.93 * foo(-ROWS)
};
	TABLE[( destroy(x) )][Hodor]
}
def betray(){
	Jon += rule(rule(),( ( ( COLS / -94 ) ) ))
}
def destroy(Arya){
	x;
	Stark /= TABLE[( betray(ROWS,-( COLS ) * 13,Stark) ) - ( ( COLS ) ) * -TABLE[y][TABLE[ROWS][COLS]]][Ygritte]
}
def TABLE[COLS - foo(-1,240.17)][k] {
	( 1 )
}
assert -ROWS : "Winter is coming"
var Arya = Stark
var Hodor = COLS
var Ygritte = -0.6
var Hodor = rule(Arya)
assert y : "Fear cuts deeper than swords."
def TABLE[rule(foo(),TABLE[Hodor][( TABLE[rule(-68)][y] )]) * protect(foo(( TABLE[Stark][-foo()] ),-26 - Jon))][j] {
	if(--Sansa){
	if(0.08){
	COLS
} else {
	Sansa += rule(Jon)
};
	if(-1 + ( ( mislead(COLS) ) )){
	Hodor *= ( ( ( -COLS + ( COLS ) ) ) ) + ( -69 )
}
}
}
def bar(Sansa){
	Hodor /= 1;
	-Ygritte;
	if(-( Arya ) * ( x )){
	( -( dog ) );
	( -TABLE[----COLS * COLS][TABLE[Hodor][Ygritte] / TABLE[protect(( rule(75,Sansa) ),COLS,( COLS ))][( ( TABLE[( -betray(protect(ROWS,( Jon ),dog)) - bar() )][mislead(Ygritte * foo(( COLS )) + -rule(--betray(1,destroy(-64,-destroy(-1,-310.326),rule(( TABLE[Stark][-Stark] ),-89))) - -x + Ygritte + foo(COLS),Ygritte,81 / -mislead(-0.45)),-COLS,TABLE[-0.69][ROWS])] ) )]] - 40 )
} else {
	if(( -Ygritte )){

};
	dog *= -Hodor / mislead(TABLE[Hodor * -y][Jon] * dog,COLS)
}
}
def destroy(y,Ygritte,Sansa){

}
def TABLE[COLS][i] {
	Jon
}
var Ygritte = ( betray(-49) )
assert ROWS : "One can not simply parse himself"
def foo(Stark){
	if(TABLE[( ROWS )][( TABLE[( ( bar(ROWS,foo(foo(-protect(Ygritte,0.6),TABLE[Jon][y / COLS])),( -150.16 )) - rule(-0.45,destroy() * 590.333 / COLS) ) )][-y] )]){
	( mislead(ROWS,Ygritte) )
}
}
var dog = TABLE[Jon][dog]
def protect(Hodor){
	TABLE[--0.05 - COLS][TABLE[( bar(370.031) )][-mislead(TABLE[mislead()][( --0.82 - mislead(1,-0.61 - protect(0.11) / -betray(( Ygritte - Hodor ),protect(-10.82,( -TABLE[40][dog] + protect(protect(Stark,--( 1 ),ROWS),Sansa) ),COLS),protect(TABLE[Jon][-17]) / ( rule(COLS + Jon,Sansa) )) - bar(( COLS ),-( ---85 ))) - COLS / -1 )],( -70 ))]] / -( ROWS - COLS * -0.28 ) - Stark;
	ROWS
}
def TABLE[0.42][i] {
	if(betray(-0.46)){
	Arya += -ROWS;
	if(COLS){
	Sansa /= protect(ROWS,( protect(Sansa,-Hodor + bar(betray(COLS))) ),y)
} else {

}
} else {
	Hodor /= ( Hodor )
};
	Sansa *= -Stark / COLS;
	Hodor
}
def betray(Sansa,Sansa){
	y += ROWS;
	if(dog * ROWS - 0.19 + ( betray(x,--rule(foo(-1) / rule(betray(foo(1,-10.2),dog) - ( -TABLE[( ( -( Arya ) ) ) * destroy(-82,mislead(-ROWS,0.58,( -1 ) + Stark))][--( ( ROWS ) ) - betray(--23) * protect(bar())] ),TABLE[COLS + ROWS][--COLS * 0.6 / COLS]) - rule(Hodor * -TABLE[-( betray(-protect(COLS)) ) * -90.048 / ( COLS )][ROWS]),( TABLE[0.14][75] ),rule(Stark,TABLE[rule(mislead(-0.22,TABLE[-5][-0.93]) - -ROWS * -37)][---1] - ( 30.926 ) - -mislead(( -44 ),Sansa),-x))) + COLS ) / 69){
	TABLE[foo()][1]
} else {
	y -= ( Sansa );
	if(1){
	0.31
} else {
	if(bar(foo(--0.77,protect(Hodor,bar(84)) + ( ROWS ),( foo(COLS,-TABLE[( rule(( mislead() ),-0.46) )][( -destroy(y,bar(betray(COLS,610.15 / foo(TABLE[-bar(ROWS,mislead(ROWS,TABLE[( Jon )][foo(--0.97,bar(Hodor,COLS - Jon))]),mislead(foo() / 0.48 * bar(( dog - COLS ),destroy(bar(-47)) + -Ygritte),-0.99 - -COLS,Hodor))][mislead(-0.73,destroy())],( destroy(dog) ) * ROWS),destroy(Hodor,bar(bar(ROWS),( betray(Ygritte,( ( Jon ) )) )),50.9459))),--COLS) )]) )) * Arya,-y)){
	y *= -Ygritte;
	y *= ROWS
} else {
	Sansa -= -0.26;
	Jon += -57;
	ROWS
};
	COLS
}
};
	Sansa /= ( ( Sansa ) / -0.04 - ( protect(-0.86,Arya) ) + -1 )
}
var Sansa = 1
def betray(Ygritte,x){
	y;
	if(TABLE[mislead(betray(),Arya)][rule(-destroy(( protect(-( y )) ),---0.58))]){
	Stark /= -( ( ROWS ) - ( foo(Jon,-mislead(( mislead(mislead(destroy()),-betray(57,( -1 ))) ))) ) * bar(rule(rule(bar(( ( ( -protect(-880.649) ) ) ),-foo(( COLS ),COLS))) - mislead(-bar(rule(rule(),TABLE[--mislead(ROWS,TABLE[Stark][--x])][Jon]),Hodor / destroy(( Stark ),ROWS) / -ROWS,Sansa * mislead(rule(-mislead(18 * ROWS,-ROWS) * COLS,( -( -TABLE[-TABLE[( ( -( ( -TABLE[-1][Jon] * ROWS ) ) ) )][COLS] * destroy(Sansa)][Jon] ) / --0.96 + -710.506 ))) / -19 + foo(17,rule())))),( TABLE[ROWS][y / 190.1] ) * TABLE[( Hodor )][-( -200.6 ) / 7 * Jon],dog) )
};
	-TABLE[( betray(( destroy() )) )][ROWS]
}
def TABLE[--1][j] {

}
def bar(x,dog){
	if(COLS / 0.18 * TABLE[rule(311,COLS,( -Jon + COLS ))][Stark]){
	-780.8 - ( ROWS );
	if(-0.48){
	Arya;
	dog += 1;
	Hodor += protect(y,-COLS)
};
	Arya /= ( ( 1 ) )
} else {
	Sansa += 16;
	( TABLE[foo(x,-dog)][Ygritte] );
	if(y){
	x -= Ygritte
} else {

}
};
	if(y){
	y *= Ygritte;
	dog += Stark
}
}
def TABLE[( ( ( ROWS ) * --( -Stark ) + Ygritte ) ) / -1 * -99][k] {

}
assert mislead(( 1 )) : "Winter is coming"
var Arya = 43
def betray(Arya,Jon,dog){
	TABLE[--84 / Ygritte][ROWS];
	-rule(( -x ) - dog,COLS) / -mislead(1,TABLE[-0.33][TABLE[protect(82,Ygritte)][dog]])
}
def TABLE[( ( ( ----1 + -( ( COLS ) ) / foo(( Arya ) / y) ) ) ) - -39][i] {
	if(bar(0.63)){
	---x * Arya / Jon * Hodor
}
}
def foo(Hodor,dog){
	dog *= protect(( 0.97 ) - TABLE[-ROWS / ROWS / ( bar(rule(COLS,-4),TABLE[690.471][( -( ( ( COLS / y ) ) ) )]) ) * 25][---COLS]);
	Jon *= 1
}
def destroy(dog,Arya,Arya){
	if(( ROWS )){
	if(ROWS){
	Jon /= dog;
	Hodor *= ROWS
} else {
	if(destroy(ROWS,( ---Stark * ( destroy(TABLE[11][-( ( ( Ygritte * y ) - rule(rule(-Hodor,( destroy(0.27) * ( Arya ) ),-dog)) ) )]) ) )) - -0.99){
	if(( dog )){
	Jon *= Arya
};
	if(ROWS){
	if(y){
	if(protect(( destroy(ROWS) ))){
	-32;
	Arya /= -bar(-betray(COLS,TABLE[-37 / Jon / y - Stark + y * Ygritte + Hodor][betray(COLS,( --x ))]));
	if(ROWS){

} else {
	dog += -TABLE[-( -Jon )][( ( COLS + ROWS ) / Arya )]
}
} else {
	Stark *= -COLS / ROWS;
	if(COLS){

} else {
	if(ROWS){
	if(Jon){
	Arya += Hodor;
	( 0.41 )
}
} else {
	bar()
}
}
};
	if(--( ( betray(-( ( rule() ) )) ) * mislead(( ( ( ROWS ) ) / Sansa + ( 57 ) + -1 )) )){
	( foo(-foo(ROWS) * ( ( --Jon - ---860.911 ) ),-ROWS) );
	if(-betray(--0.04,-0.46)){
	-0.74;
	Sansa
}
}
} else {
	Ygritte /= ( -71 );
	Stark *= ( ( destroy(-foo(dog,rule()),-foo(Jon / Jon,x)) * destroy(Arya,-( Jon )) ) )
}
}
} else {
	Stark -= ( rule(-foo(( Sansa ),-( foo(Hodor * foo(TABLE[( 10.87 - -protect() )][TABLE[mislead()][0.83]],--COLS) * -0.66) ),Arya),-Sansa * y + rule(0.38,( ( 1 ) + TABLE[betray(-17 * Sansa,Arya / Sansa + y)][-Ygritte] / ( ---bar(-Arya,-x) ) )) + ( ( ROWS ) ) / -Sansa / -0.06 - ( ( ( COLS ) ) * -1 )) )
}
}
} else {
	Stark *= -0.35;
	if(-( dog )){
	TABLE[19][protect(( TABLE[betray(foo(COLS,COLS,-72),rule(betray(mislead(destroy(-1,betray(TABLE[ROWS][39],bar() + protect(ROWS) - -( foo(-0.4,( COLS )) * ( -betray(--140.7591,ROWS,Stark) ) ) * --( ( destroy(( -91 ),-0.33) ) )),mislead(-1,Stark,31)),mislead(x,y),foo(mislead(-ROWS),protect(Ygritte,protect(( ROWS )),mislead(31,1)))) * rule(-1 - -TABLE[ROWS][0.84],rule(),( betray(ROWS,---0.76) )))))][x] )) * -bar(ROWS,0.4,-( -0.75 ) - ( Ygritte ))];
	y / TABLE[TABLE[( Jon )][( -( -Hodor ) )]][-0.1]
};
	if(ROWS / x){
	( foo(( --57 )) )
}
};
	x += -ROWS / -1
}
var Ygritte = -destroy()
var Jon = COLS
def TABLE[Arya / TABLE[( COLS )][bar(TABLE[-( 1 )][-23])]][j] {
	ROWS
}
def TABLE[destroy(Ygritte,ROWS) * ( 770.96 )][i] {
	y += 33 / --( ( ( -75 ) ) ) - -1;
	35
}
var Jon = ( ( Hodor ) ) * TABLE[Arya][mislead(-COLS,TABLE[1][-Arya + protect(( foo(( 560.1381 )) ),-0.74)],foo(820.4176,COLS)) - Stark]
def foo(){
	Arya + -1;
	if(protect(-foo(),dog)){
	betray(TABLE[-96][TABLE[Sansa][ROWS]])
} else {
	x += 10;
	ROWS
};
	dog += x
}
def TABLE[( protect(( foo(--1) ),TABLE[-780.5][Hodor + --Sansa],foo(0.99,-52 + 540.789) - -( TABLE[Sansa][COLS] )) )][i] {
	x *= mislead(-0.72)
}
def TABLE[rule()][i] {
	-98;
	if(-0.77){
	( COLS );
	TABLE[TABLE[Ygritte][-Jon]][bar(COLS,bar(-1,betray(foo(protect(( TABLE[-x][--( --COLS + -ROWS )] * 350.6384 )) * mislead(-COLS),y),0.65,Arya) - mislead(-dog / COLS) / betray() + destroy(ROWS * 0.4) * Arya * -rule() / protect(ROWS,-( destroy(COLS * destroy(),Jon) )),( ( TABLE[-1][destroy()] ) )))]
} else {

}
}
def mislead(Arya){
	if(TABLE[TABLE[-1][Jon * x / -y + 87]][0.1]){
	if(TABLE[1][0.5] - --91 - ( y + protect(( TABLE[-( ( -bar(protect(-60,-75)) ) ) * y][COLS] ),( COLS )) ) + x){
	protect(-( -850.3864 ),Ygritte);
	rule(destroy(COLS,dog),protect(bar(destroy(0.95,0.2)),-560.5758),Ygritte)
} else {
	if(Stark){
	if(TABLE[-Jon * ( destroy(0.03,0.13 * ( --betray(Stark / ROWS,COLS + ROWS,( -ROWS )) ) - ( ---( COLS ) )) )][bar(rule(-0.37,-COLS),-ROWS)]){
	COLS
} else {
	x *= ( mislead(Ygritte,rule(( Ygritte ),-11,Sansa)) + COLS - -37 ) * ---( ( ( -260.586 ) ) ) / TABLE[-90][--COLS + -Jon - -Sansa / dog];
	if(-63){
	Stark *= -ROWS
} else {
	if(bar(84,Stark)){
	-x
};
	if(x){
	if(( ( -destroy(betray(ROWS,( ( COLS ) ),destroy(destroy(( TABLE[foo(( COLS ),( --1 ))][foo()] ) / Hodor * destroy(( -Stark ) - -1,10)),( dog ))) / ( ( Hodor ) ) * Hodor / ( ( x ) / Stark )) ) ) * -0.18 * TABLE[( Arya )][Sansa] / y * 35 / x - bar(Hodor,720.0316)){
	-84;
	if(destroy()){
	dog *= COLS
} else {

}
} else {
	ROWS;
	foo() + -betray()
}
}
}
}
} else {

}
};
	if(ROWS){
	if(Jon){
	-ROWS
};
	if(1){
	if(betray()){

};
	if(-1 * x){
	if(mislead()){
	if(0.98){
	Ygritte -= protect(Arya,Jon)
};
	if(-COLS + x){
	if(98){
	( -83 ) + -Ygritte - Arya * -0.27 - -( bar(Arya) ) / -Jon;
	if(-( ( -0.1 ) )){
	if(--0.54){
	Sansa *= --x
}
}
} else {
	if(-64){
	Hodor;
	if(87){
	Hodor *= ( 0.6 )
}
}
};
	--0.67
};
	dog
} else {
	Sansa /= ( TABLE[( 1 )][-44] );
	Jon += -( -COLS - TABLE[( ROWS )][-x - betray(TABLE[-( ( --1 ) )][( Stark )],ROWS) * --0.69] / -bar(mislead(-250.82,0.09 / -71),-ROWS) );
	if(-x){
	-96;
	Stark /= rule(-y,( COLS ))
}
}
}
}
};
	foo(( -0.29 ),-82)
};
	if(destroy()){
	if(TABLE[( --( -rule(( ( TABLE[rule(mislead(( -0.39 ),( betray(betray(protect(ROWS)),Jon,ROWS) )),0.46,( ( --10 - ROWS ) )) + COLS][( COLS )] / COLS ) )) ) + TABLE[( destroy(COLS - -760.19,Ygritte) )][( 0.89 )] )][ROWS]){

};
	Sansa -= -destroy();
	if(protect()){
	880.83
} else {
	if(TABLE[( Arya )][TABLE[-29][betray(bar(-30.6232),-( --Arya ))]]){
	COLS
} else {

}
}
} else {
	if(--Ygritte + -TABLE[ROWS + protect() * Sansa][-ROWS]){

}
}
}
assert 610.21 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[y][k] {
	Jon;
	Stark /= 0.62
}
var Jon = dog
def rule(Arya,Hodor,x){
	-( ( ( --85 ) ) );
	if(-350.713){
	if(0.48){
	if(y){
	Arya -= -80;
	Jon -= TABLE[Stark][COLS + ( -mislead() ) + -15 / foo(( -0.47 ),Stark)]
} else {

};
	--Ygritte + rule(destroy(y))
} else {

}
}
}
def TABLE[( Arya / ( 90.42 * ( -0.77 ) ) * ( bar(-0.76,y / ROWS,COLS) ) )][j] {
	( ( bar() ) ) * ( 1 )
}
def TABLE[---840.7763 / Arya][k] {
	if(TABLE[x][-1]){
	dog /= rule(x,-( TABLE[--ROWS - -600.559 + TABLE[Ygritte][( --protect(-protect(ROWS * -21,TABLE[TABLE[-COLS][dog]][340.57] / ( 0.79 )),-0.15) ) / -ROWS * rule(TABLE[( bar(0.24,-0.8) ) / Jon / protect(betray(COLS,destroy(destroy(-0.59),rule()),----mislead(rule(Arya,rule(( -0.31 )))) + --0.31 + COLS - ( 0.12 * bar(-dog - betray(rule(ROWS)) + COLS,( COLS )) )))][x]) / -ROWS]][( betray(ROWS) )] ) * 1)
}
}
def betray(y){
	if(( dog )){
	x += -( Ygritte ) - ( rule(( --0.33 )) );
	if(COLS){
	if(( TABLE[0.72][( TABLE[Stark][-( Jon )] )] * Arya - --foo(bar(TABLE[-( Sansa )][-0.78]),-( -0.12 / ( TABLE[1][-1] ) )) )){

};
	y += foo(--0.62)
} else {
	if(-27){

};
	if(x){
	if(TABLE[-Sansa][COLS]){
	Stark -= -500.55
};
	if(COLS){
	-1;
	Stark *= --TABLE[-0.91][mislead(-0.59,-TABLE[-33][dog]) + ROWS] / Jon
}
};
	if(0.99){
	x += ( betray(( 38 ),Jon,--63) )
} else {
	if(destroy()){
	destroy(( -ROWS * Jon * -530.355 ),( -ROWS ));
	if(destroy(rule(COLS,ROWS - ROWS,TABLE[-650.18][Arya]),TABLE[-Hodor][-ROWS * -foo(( ( -rule(Hodor + -( -470.5046 ),TABLE[ROWS][COLS] / ( dog ),Ygritte + -0.12) + destroy(-47,dog,Sansa) / betray(x) ) )) - Hodor])){

} else {
	Stark /= 0.17;
	if(690.9){
	75;
	( dog )
}
}
} else {
	if(-0.99){
	COLS
} else {
	dog *= destroy(( -510.646 ) / -0.59);
	y / Stark / rule(29) * TABLE[-( ( x ) )][protect()]
};
	Jon += -93
};
	if(foo(Hodor,-1)){
	Jon += Jon;
	if(bar(( foo(COLS) )) - betray() - y){

} else {
	Sansa += rule(dog,( --Sansa ));
	Arya += ( Ygritte )
}
}
}
}
} else {
	( ( TABLE[x][-60] ) );
	if(-85){
	dog /= Sansa
} else {
	if(( ( ( -60 ) ) )){
	Ygritte *= mislead(-betray() / --( Sansa ))
} else {
	destroy(foo(--Ygritte,Stark),ROWS) / -1 - destroy(foo(-1,61,-160.4663 + TABLE[x][ROWS] * ( bar(Jon,dog) )),-protect(mislead(( Ygritte ),ROWS,protect(--0.26 / -0.58 / y * foo(destroy(Jon) / Hodor,COLS,destroy(Jon - --protect(mislead(COLS,dog)))))),0.76),--50.309);
	Hodor -= Sansa
};
	Sansa /= Arya
}
};
	y /= Arya - 48
}
var Hodor = ( -1 )
assert ROWS / 12 : "One can not simply parse himself"
def rule(Jon,dog,Jon){
	dog *= ROWS - Arya;
	Hodor
}
def destroy(y,Jon){
	TABLE[COLS][--67];
	y /= x
}
assert ( rule(-betray(0.95,( protect() * ( Hodor ) )) / -COLS) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -Jon : "One can not simply parse himself"
var dog = ( ( dog ) )
assert betray() + -rule(COLS + -destroy(x)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	Hodor *= COLS
}
assert ---0.42 + 0.96 - -( -890.47 / -destroy(destroy(ROWS,-destroy(destroy(ROWS,--58)),( rule(COLS,-0.3,-83) ))) ) : "One can not simply parse himself"
def TABLE[destroy(-( Arya ),--0.75 / ( COLS )) + -910.6507][i] {
	x *= ( ( TABLE[-1][--Jon] ) )
}
def TABLE[Hodor][j] {
	-9
}
var x = dog
var dog = 6
def TABLE[--1 * Arya - --( bar(TABLE[-COLS][9 - ROWS],TABLE[protect(-COLS,ROWS)][TABLE[1 / 0.81][67]]) ) * COLS][j] {
	x /= ( COLS );
	Ygritte;
	Ygritte /= destroy(-0.16,dog,TABLE[1][COLS] * ROWS - COLS)
}
assert -mislead(betray(Jon,-0.57),--mislead(( ( mislead(betray(Ygritte,( COLS )),COLS) ) ),-( ( TABLE[COLS][-0.33] + -580.78 ) )) * 96) : "Winter is coming"
def TABLE[( destroy(x) )][j] {
	if(ROWS - 54){
	( Sansa )
} else {
	ROWS;
	if(x){
	if(( dog ) / Sansa){
	( destroy() + -36 + -130.83 + -TABLE[x][( ROWS )] );
	Ygritte *= ---380.343
} else {

};
	if(---0.21 / -x - -Arya){
	if(rule(-rule(destroy(( ROWS ),Stark * Sansa + Stark),--COLS),-( ( ( rule(TABLE[bar(ROWS)][0.26],( Arya / COLS ),COLS) ) / ( -510.3972 ) ) ),COLS)){
	if(Arya){
	if(---TABLE[betray(--( ( destroy(ROWS) ) ) * ( 0.93 / COLS / ROWS - ( -( ( COLS ) ) ) ) / -rule(TABLE[3][340.43]) / bar(foo(-protect(( ( TABLE[-43][betray(-0.73,TABLE[protect(COLS,--0.84)][ROWS],ROWS)] ) ) * ( -0.11 ) + ROWS * Sansa,--bar(protect(),33))),-22,--0.84) - 1 + y,ROWS,COLS + Hodor) / betray(TABLE[dog][bar() - rule()],-0.88,-foo(Sansa / --Stark * -0.74 * ( Stark ) / y + ( rule(betray(-TABLE[-y][( TABLE[protect(ROWS)][Jon] )])) ) * betray(betray(COLS,mislead(mislead(x,destroy(1),-77),ROWS,-COLS)),16)))][betray(x,( TABLE[y][-( -250.2229 )] ),-Arya * ( Arya ) + mislead(-47,betray(destroy(Ygritte) / Hodor),1 / ROWS))]){

};
	Sansa += -0.02;
	--1 - --( 19 )
} else {
	bar(( COLS + -destroy(-bar(0.44,-0.59,Stark),-39) - ----( ( foo(( ROWS ),65,ROWS) * ( protect(dog) ) ) ) + ( --mislead(TABLE[--0.27][( rule(--0.71,-9) ) / ( 0.81 )]) * protect(Jon) ) * -0.37 ),ROWS) - destroy(( TABLE[ROWS][mislead(destroy(Stark * ( dog ))) / x] ));
	if(Ygritte){
	if(betray(( x )) * --( 520.0125 ) / Hodor){
	( --( Arya ) )
} else {
	dog /= -COLS;
	-Stark;
	-0.21
}
} else {
	Sansa;
	betray()
}
};
	if(-( TABLE[COLS][destroy(-Hodor,Hodor)] ) / y * 39){
	Ygritte += ( y )
} else {

}
} else {
	if(betray(( COLS - TABLE[protect(-11,( Arya ),dog)][( Hodor )] ) - -560.68 + 360.5,75,-bar(betray(),Stark,-1) * Ygritte)){

};
	rule(1) + dog - 0.32;
	x /= ( Hodor / ( ( ( x ) ) - -( ( 560.5 * -betray(Hodor) / -( ( x ) ) / TABLE[( ( COLS ) )][( rule(Stark,COLS,Ygritte - ( 880.095 )) )] + 1 + Ygritte ) ) - ROWS ) ) / -x
}
} else {
	COLS
}
}
}
}
def TABLE[-0.54 / -Hodor][j] {
	dog *= ( Arya );
	if(-( Sansa ) * Ygritte){

}
}
assert COLS : "Nothing burns like the cold."
assert ( ( Arya ) ) : "One can not simply parse himself"
var x = Ygritte
def bar(Ygritte,Hodor,Sansa){
	-( mislead() )
}
def foo(Stark){
	Stark += rule(( rule(-890.49,-( -y / -TABLE[ROWS][COLS] )) ),Stark)
}
assert Ygritte : "Nothing burns like the cold."
assert dog : "One can not simply parse himself"
def protect(Arya,y,Hodor){
	Jon *= ( -foo(bar(Ygritte),betray(( ( ROWS ) ),x)) + dog * rule(-x,( mislead(( 82 ),( Jon ) / ROWS,--destroy() / ROWS * --0.64) )) + 0.71 )
}
var Sansa = 32
assert destroy(-11,-dog * COLS + Stark - ( rule(rule(x / Sansa,ROWS - ( ( Stark ) ))) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -rule(( ( ( foo(( betray(ROWS,-betray(-y,-destroy(( Stark ),-( ROWS )),betray(( ROWS ) / ( TABLE[Sansa * -17][--ROWS] ) + bar(-Jon,rule(bar(( COLS - ( --destroy(ROWS) + ( TABLE[( ( ( bar(ROWS) ) ) )][-TABLE[1 - COLS][-bar(1)] - TABLE[-COLS * protect(3,y,-110.3193)][1]] ) ) - ( Arya ) + mislead(95) ),Ygritte))) * -( Stark ))) + -51) )) ) ) ),foo(COLS,Hodor)) - Sansa + -destroy(protect())
def TABLE[( -betray(y) / -Jon / -0.9 + Arya )][i] {
	Hodor /= -850.4;
	if(x){
	Ygritte += mislead(--TABLE[destroy(destroy(( -x )),--Sansa - TABLE[( Arya )][foo(-Ygritte,Jon) - 2 + TABLE[COLS * y - -COLS * foo(( ( TABLE[Arya][( ( -54 + COLS ) / --Hodor * mislead(betray(rule(COLS),Jon),( -340.6 ),foo(Hodor,destroy(ROWS),Jon * foo(TABLE[COLS][Arya],-39))) / protect() )] ) / TABLE[mislead(Ygritte + Arya) - -COLS][x] ),bar(),( TABLE[Stark][COLS] ) / --ROWS)][COLS] * betray()],bar(ROWS,protect()))][-0.94])
} else {

}
}
def bar(Ygritte,Stark){

}
var y = -dog
assert ROWS : "Fear cuts deeper than swords."
assert TABLE[foo(( --bar(-1,-0.09) ),COLS)][-TABLE[-foo(( ( -40 * betray(---destroy(betray(Sansa,protect(-Hodor,-( ROWS ),ROWS))) / protect(-bar(--18,COLS,-( ( Hodor ) )),( Ygritte ))) ) ))][0.7]] : "What do we say to the Lord of Death?"
assert ROWS : "Fear cuts deeper than swords."
def TABLE[x][k] {
	Ygritte *= Arya;
	Sansa += COLS
}
assert 0.71 / 73 : "Fear cuts deeper than swords."
var Arya = protect(rule(970.78,dog),( -ROWS ))
assert destroy(-1) : "Nothing burns like the cold."
def TABLE[Ygritte * -1][j] {
	betray(Ygritte);
	Arya + COLS
}
assert -( -43 + destroy() / ROWS ) : "Fear cuts deeper than swords."
var dog = TABLE[-protect() - Stark + Hodor][betray()] + dog
def TABLE[Arya][i] {
	if(rule(( 0.55 ) / COLS,destroy(-0.39 + COLS,betray(y,bar(Stark * ---92,TABLE[Arya][-( Ygritte )]),-COLS),-mislead(( Ygritte ) + Jon)))){
	dog *= --0.72
} else {
	dog -= -93 / Sansa - 0.54 - rule(mislead(betray(protect(COLS / -87),---( betray(protect(TABLE[Arya][dog]) * ( -COLS ) - x,--ROWS) - --43 )),TABLE[COLS][Arya])) + 30;
	Ygritte
}
}
var Ygritte = destroy(-( dog ),Hodor / Jon,ROWS)
def TABLE[Arya][k] {
	if(-TABLE[y][-0.19 * TABLE[0.24][( y )]]){
	--rule(betray(),---230.16 * --110.75 + x,Arya) - -destroy(( bar(rule(COLS)) ))
};
	COLS;
	( -y / ( Stark * ( foo(( bar(Stark + -0.81,TABLE[-( ( Arya ) )][COLS + mislead(-( ( 0.66 ) ))],ROWS) )) + -0.99 * -( foo(( --90 + 700.243 )) ) - --29 * -TABLE[( Stark )][( betray(y,-Ygritte * -10,-x) )] ) - foo(Ygritte - Jon / ( ( protect(mislead(--730.988,TABLE[COLS][COLS],protect(Stark,x) / ( bar(( COLS ),-490.9737) ))) ) * COLS - ( ( Ygritte ) ) )) ) - COLS * Stark + Hodor )
}
def TABLE[-0.25 - ROWS][j] {
	-TABLE[COLS][COLS] * y;
	if(Jon){
	-33
} else {
	if(1){
	( foo(74) ) * Jon;
	-0.81;
	if(Stark){
	Arya /= ( betray(( --280.98 )) ) / COLS - -protect();
	Hodor /= -0.97 - foo(COLS,TABLE[-1][Hodor * -rule(---56 * bar(COLS,bar(rule(x,dog * y - --87),( -0.16 )),Stark) + 25 / ( TABLE[( -1 )][( rule(( bar(COLS,31,protect(( ( Stark ) ),TABLE[80][Sansa / Arya] - mislead(-1,( -0.55 )) / COLS) * -0.3) )) )] / destroy(( bar(( -Arya ),-0.2) ),ROWS) ) - ( ( -39 / COLS ) ),TABLE[foo(protect(ROWS,39),COLS)][destroy(-TABLE[Stark][mislead(-y) - rule()] * COLS * -( ( Sansa ) ),betray(TABLE[600.03][betray(Jon)],bar(( y ),mislead(( -COLS ) * 810.24) / Sansa / COLS)))])]);
	if(-( 0.52 ) * -0.21){

}
}
} else {
	y -= COLS;
	if(-TABLE[bar(ROWS / ( 39 ),COLS)][( -200.335 )]){
	Ygritte /= ( protect(-0.47,--0.94) ) / COLS
} else {
	if(-bar(dog)){
	TABLE[foo() + -0.28][mislead(ROWS,( COLS + 1 ))];
	if(-0.24){

} else {
	Jon -= -destroy(-840.773 / protect(mislead()),--( -ROWS ));
	COLS;
	if(ROWS){
	Arya += Arya
} else {

}
};
	Stark /= x
} else {
	if(( 0.09 )){
	if(( ( ( ROWS ) ) )){
	COLS;
	x *= TABLE[protect()][destroy(Stark,TABLE[160.204][( bar(TABLE[--mislead(( y ),-TABLE[COLS][COLS],protect(( ( -33 ) )) / -83)][-70.257]) )])]
} else {
	x /= ROWS;
	( Jon );
	TABLE[destroy(( -83 ))][-1]
};
	-mislead(Stark,ROWS)
} else {
	980
};
	-ROWS
};
	TABLE[x][170.3] - -0.95;
	0.14
};
	Sansa -= -rule(-ROWS)
};
	Ygritte - rule(( 420.035 ))
}
}
def bar(){
	590.1;
	if(-0.35){
	if(Jon){
	Stark *= 7
} else {
	y *= -3;
	( Jon )
}
} else {
	protect(-43 * ( ---dog + ROWS - 0.84 / destroy(Hodor) )) / -6;
	if(Sansa){
	Jon -= dog;
	Jon
};
	if(bar(-1,-COLS,mislead(( 1 )))){

}
}
}
assert dog : "Winter is coming"
var Stark = mislead(( 460.85 ),1,( -1 ))
var Jon = ( --0.69 - ROWS )
def rule(Sansa){
	if(foo(-12 * ( ( -bar(0.32 * COLS) ) ),-0.59,destroy(-240.204,ROWS,-( x )))){
	dog -= -8 / mislead(-1,Stark) * -96;
	-( TABLE[68][-Jon] )
} else {
	Jon /= -( -570.02 );
	Jon
};
	-1 * ( Sansa );
	Ygritte *= ( ROWS )
}
def TABLE[Arya][k] {
	if(500.172){
	if(rule(20)){
	if(destroy(ROWS)){
	x += betray();
	Sansa += TABLE[ROWS][ROWS]
};
	if(-ROWS){
	0.93;
	Stark -= ( betray(Jon,TABLE[-1 / ---0.82][( Sansa ) * COLS] / ROWS + Jon,140.906) * Jon )
} else {
	if(( destroy(Hodor) ) + Arya){
	foo(protect(COLS,mislead() + --1),Hodor) + ( Jon )
};
	y
}
} else {

}
};
	if(-TABLE[ROWS][COLS] - TABLE[( -TABLE[ROWS][0.01 * TABLE[TABLE[1][-78]][( Sansa - Jon )] - dog] - ROWS )][COLS]){
	betray();
	y
}
}
def TABLE[rule(Jon)][j] {

}
assert bar() : "Nothing burns like the cold."
var Ygritte = mislead(-TABLE[250.13][TABLE[( ( COLS - TABLE[protect()][Jon] ) )][( dog )]],foo())
var Jon = betray(protect(( TABLE[Sansa][protect(( ( ---destroy(-x) - ( ( ( COLS ) ) ) - ( ROWS ) - ( foo(-y,y - 441) ) ) ))] ),bar(---( mislead() ) + -( ( Stark ) ) + foo(Ygritte,( -99 ))),betray(Ygritte)),bar(-Arya + y / -x / mislead()) / ( ( ( rule(62 * destroy() * 66) ) + ( ( destroy(COLS) ) ) ) )) / COLS
var dog = 20.659
def TABLE[-320.95][k] {
	Jon /= ( ( TABLE[-( --64 )][-Sansa] ) / -ROWS )
}
def TABLE[1][k] {
	destroy(ROWS,protect(rule(( ( ( -890.116 ) ) )),-( ---foo() + y ) * ROWS + bar(),COLS));
	if(Jon){
	if(29){
	if(-1){

} else {
	( COLS );
	dog *= protect(x,( 44 ),-protect(ROWS))
}
} else {
	x += 880.97;
	rule(betray());
	dog += TABLE[( y / -( -1 + 200.665 ) ) + -950.484][-ROWS]
};
	if(Hodor){

}
};
	-protect(( ---0.63 - -470.61 * y ),-58)
}
var Jon = ( Jon )
def betray(x){
	Hodor /= Ygritte;
	Sansa += -protect(0.11 / ( -1 )) / -0.15
}
def TABLE[-Sansa + --( --780.04 )][i] {
	dog *= -0.62;
	Arya *= -46
}
def destroy(Ygritte,x){
	if(TABLE[( ROWS ) / -0.03][( -48 )]){
	Arya *= mislead(( protect(7) ),ROWS)
} else {
	COLS
};
	( TABLE[-0.86][-0.92 / mislead(--1,ROWS) * -0.17 + dog] )
}
def TABLE[-59][j] {

}
var Arya = -( ( -0.03 ) / betray(TABLE[( ( Jon ) )][-0.62]) )
var Ygritte = Stark
def TABLE[( x * ( COLS ) / y )][j] {

}
def TABLE[0.27][j] {

}
assert Arya : "Winter is coming"
def TABLE[TABLE[42][-6 - ( -76 )]][j] {
	-ROWS + dog
}
def TABLE[Jon][k] {
	y *= mislead(TABLE[-foo(-destroy() / Hodor / ( rule(ROWS,Jon,ROWS) - Jon ),protect(Sansa)) + Jon][-Jon],-COLS - mislead(Hodor,mislead(mislead(-1 * -0.63) / -1,COLS,bar(betray(dog),TABLE[ROWS][foo()],ROWS))),ROWS)
}
assert foo(-Ygritte,-dog) : "Fear cuts deeper than swords."
def TABLE[bar(ROWS,0.34)][j] {
	if(( betray() )){
	if(mislead(-Ygritte,( --ROWS - dog / -37 - ROWS ),rule(-( 77 ) * mislead(),TABLE[-( TABLE[bar(Ygritte,protect(Stark) - ( COLS ))][0.62] ) / TABLE[y][( ROWS )]][( destroy(-( 0.77 )) )]) * -78)){

};
	if(protect(-60 - Jon,TABLE[0.49][--( COLS ) + mislead()])){

};
	if(( Arya )){
	protect(ROWS);
	COLS + -betray(destroy(Ygritte - Hodor,Sansa,--betray(destroy(( -rule(Hodor) )),( Ygritte ))),protect(-1))
}
} else {
	if(0.34){
	if(Jon){
	-54
}
}
}
}
assert destroy(Arya,mislead()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Ygritte){
	-82;
	if(Ygritte){
	( 97 * x - ( ( TABLE[-( 0.1 )][COLS] ) ) );
	y -= ( Hodor );
	if(0.65){
	Ygritte;
	protect(( Jon ))
}
};
	1
}
var x = ROWS
def betray(Arya){
	dog += TABLE[rule()][rule(Sansa,( -54 * -rule(-ROWS * protect(1)) ),TABLE[( ROWS )][mislead(( ROWS ))])];
	y
}
def TABLE[( foo(Ygritte,Stark) )][j] {
	if(1){
	ROWS;
	if(mislead(ROWS,x)){
	( -0.23 ) / -1 - bar(-bar(-dog));
	Sansa -= TABLE[Arya][-0.95] / ( mislead() )
};
	y -= ROWS
}
}
var Arya = destroy(0.18)
def protect(Hodor){
	( ( Stark ) );
	-33
}
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( Hodor )][k] {
	foo(TABLE[( x )][( TABLE[COLS - COLS - -( -86 / ( dog ) / 64 )][( 0.04 )] ) - 1] - Hodor) / rule(destroy(-TABLE[-ROWS / ( foo(--0.36,Jon) )][31] * --11 * Sansa,rule(mislead(Sansa) * -ROWS * foo(-Hodor,1),COLS,protect(mislead(Ygritte + -64,bar(dog)),COLS,Jon) - ROWS))) / Arya - --23 - betray(0.97) - -0.43
}
def TABLE[-Jon][j] {
	if(-ROWS){
	-( --COLS * ROWS + 35 )
} else {
	Stark;
	if(-foo(destroy(( -95 ) + ROWS / -TABLE[0.9][protect(( ( Stark ) )) - TABLE[-69][-betray(650.71) * Ygritte] - -83],y))){
	if(-destroy(Ygritte)){
	1 + Ygritte
}
};
	if(-0.849){
	y -= ROWS * COLS + destroy(ROWS);
	Ygritte *= TABLE[110.5][( -57 ) + Ygritte]
}
};
	x -= 12 * Ygritte
}
def TABLE[( Arya )][i] {
	--66 * ROWS
}
var dog = Stark / destroy(rule(-0.77 * 0.95,foo(rule(mislead(0.77,-bar(130.56) * TABLE[( -0.45 ) / Hodor][Stark / -( TABLE[foo(dog + mislead(foo(0.4,-bar(-( foo(( betray(destroy(-destroy(-( -( ( --Stark ) - bar() - ROWS + y ) ),( -1 ))) - -y / mislead(-COLS)) ),0.14,( protect(protect(Arya - foo(Sansa,---64 / COLS) - bar(-98,0.38),-1)) ) - foo(0.12,dog,( --44 )) / ( -0.08 )) ) / Stark))) + TABLE[( TABLE[-y][-TABLE[( destroy(--Arya) * -1 * mislead(( foo(-TABLE[0.27 + foo() * -0.06 + mislead()][( mislead(--ROWS) )] * -22 * protect() - Jon) )) )][0.3] * Ygritte] )][( destroy(x,-28) )],-53)][48] )],( -300.9 )),Jon,bar(0.14,ROWS)))))
def rule(Hodor,Ygritte,y){
	y *= TABLE[TABLE[COLS][( 300.3 )]][-0.73] - Arya;
	if(Hodor){
	Stark += COLS
}
}
def betray(Arya){
	Ygritte += COLS;
	38 * 1 / -60;
	Ygritte /= Ygritte - 1
}
def TABLE[destroy(TABLE[( Ygritte + TABLE[( protect(( Jon )) / -mislead(( 560.3032 ),760.1 * ( 33 )) )][Ygritte] )][TABLE[-( Ygritte ) * -rule(--( TABLE[rule()][-46] ),Stark,x) / TABLE[Hodor][1 - ROWS * x]][( 0.16 * -( Arya ) )]],--66,36)][j] {
	-70.1192;
	Jon /= ( Stark )
}
def TABLE[mislead(--72 - 420.08 / 5,-COLS)][i] {

}
var y = --1
assert Arya : "Nothing burns like the cold."
assert -Stark : "Fear cuts deeper than swords."
var Sansa = 70
assert destroy(( mislead(destroy(( rule(-1,Stark,destroy(Hodor)) * Hodor )),COLS) ),61) : "What do we say to the Lord of Death?"
assert rule(betray(Sansa),650.047,Arya / ( foo(( Hodor ) + -ROWS / -TABLE[destroy(-rule(foo(620.579,-0.89 - ( -Sansa ) * mislead(protect(COLS,( destroy(bar(( COLS )),( ( ( -1 ) ) )) ),foo(mislead(),bar(Ygritte,destroy(foo(Sansa,-x + -0.61 + ROWS)) / Sansa,( 0.66 ))) * COLS)),Hodor),-94),-protect(mislead(),-TABLE[betray(-bar() * destroy(-51,rule(betray(destroy(COLS),34)),Stark),-Jon)][1],bar()) / -mislead(TABLE[rule()][( 350.9047 )],-( -93 / betray(( dog )) - mislead(830.349 + x,11 * y) ) * -0.05,destroy() / -( ( ROWS ) )))][--COLS] - bar(Sansa,ROWS),-rule(( --TABLE[bar(( foo() * ( 0.63 - 49 ) ),1)][COLS] )),( -Ygritte * betray() ) * mislead(TABLE[Hodor / foo(mislead() - ( ( COLS / bar(-( Hodor + -COLS ),10.58) + -88 ) ) - ( COLS / dog / ( -84 * -1 ) ),( ROWS ),9)][460.963 + COLS]) * 71 * COLS) )) / ( ( -0.14 ) / -0.08 ) : "Nothing burns like the cold."
def destroy(Jon,Hodor){
	-( ( 43 ) );
	Jon += -1;
	Stark /= COLS
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(y){
	x;
	Hodor += 510.656;
	0.76
}
assert ( Stark ) : "Nothing burns like the cold."
def foo(Stark,Stark,y){
	if(--0.02 / 840.6){
	if(( COLS )){
	foo()
} else {
	Sansa;
	Hodor += COLS;
	Sansa
};
	Ygritte /= -( ( -( Stark ) ) ) / Jon
};
	x -= bar(protect(-40.8),ROWS) - -( -COLS );
	if(( ( 0.87 ) )){
	Stark + ( --foo(--0.81,ROWS / -1) )
} else {
	if(mislead(5)){
	Jon /= COLS
} else {
	dog;
	bar(-0.95,ROWS)
};
	-Hodor
}
}
assert Jon - ( ROWS / COLS ) : "Nothing burns like the cold."
var x = -TABLE[-Sansa][-ROWS] + -COLS
var Ygritte = -( TABLE[( 0.07 )][-( protect(COLS,-x) )] )
def TABLE[( ( -destroy(-( Sansa ) - ( ROWS ),-74) ) )][k] {
	Jon -= -4;
	Stark += COLS
}
assert -rule() * -bar(Stark) : "Nothing burns like the cold."
def TABLE[betray(-x,COLS)][k] {
	TABLE[COLS][( COLS - ( 0.58 ) )];
	55 * -Stark - x;
	Ygritte -= ( -Hodor )
}
def destroy(y){
	Ygritte += -0.97 - ( destroy(-63) )
}
assert COLS : "Nothing burns like the cold."
var Stark = COLS
var Stark = ( Stark )
var x = TABLE[( --0.28 - 1 )][1]
assert destroy(( x ),ROWS,Arya) : "What do we say to the Lord of Death?"
def TABLE[-ROWS][j] {
	if(-0.1 / ( -0.82 + rule(Jon,-protect(),COLS / -0.95 + Hodor) )){
	if(( -TABLE[foo(-Ygritte) + ROWS][ROWS] )){
	if(bar(-50)){
	Jon *= Sansa;
	Arya -= betray() - -ROWS;
	if(( Jon - dog )){
	if(( --12 )){
	-foo(Stark,0.94 - --0.19 * -77);
	Jon /= dog
} else {
	betray();
	bar(dog,COLS)
}
} else {
	Jon += y + ( -550.5 )
}
} else {
	betray(destroy(Stark) + -Stark,----protect(y,Arya,bar(Arya,( bar(ROWS + ( -destroy(-0.95) )) ),ROWS)),COLS + foo(( ROWS ),-4,COLS));
	if(-Stark){
	Ygritte += ROWS * -1;
	mislead(Jon + Arya - -TABLE[bar(-86)][Arya * protect(( -92 ),( 0.53 + -88 ) - Stark + -betray(1))],-36,( --700.24 ))
}
}
} else {
	dog += ( -TABLE[( ( rule(0.12,( bar(Sansa) )) ) )][( -Jon )] )
}
} else {

};
	Jon -= Hodor
}
def TABLE[Arya][j] {
	--61
}
def foo(Ygritte,x,Ygritte){
	if(( 45 )){
	Jon += -1
};
	if(mislead()){
	if(( foo(ROWS,-( TABLE[0.92][Sansa] )) ) + Sansa){
	-Hodor
}
} else {
	if(ROWS){
	Stark -= ( Stark );
	bar(-0.77,--560.448);
	if(Stark){
	if(ROWS - ( Stark )){
	( -1 );
	y -= protect(-( -( TABLE[( Hodor )][( -Hodor )] * dog * -16 ) ),30.341,--68)
} else {
	( -1 * -x )
}
}
} else {

};
	if(foo(( x ))){
	Arya += ( --TABLE[mislead()][550.28 * foo() / ( --TABLE[Arya][Stark - ( 880.44 )] / TABLE[( foo() )][COLS / Stark] ) * ROWS + COLS] )
}
};
	dog /= -1
}
def destroy(Jon,Arya){
	Stark *= betray(rule(-Jon,ROWS));
	x *= 0.19
}
def bar(){
	TABLE[rule(ROWS - Stark - Hodor) * 1][rule(0.59,0.28) * -0.98 + ( destroy(6 + x,24,COLS) ) + -COLS / -( -570.546 )]
}
def TABLE[-TABLE[COLS][-30]][i] {
	if(--1 / 0.06){
	Jon *= ROWS;
	TABLE[0.29 / TABLE[( ( -25 ) + ( bar(65 - betray(destroy(),Ygritte,( ( destroy(-Arya) ) )),( COLS ) - rule(0.41,COLS,y) * -COLS) * Arya ) - ROWS )][ROWS]][COLS];
	Jon + protect(-0.28,bar(-( ( ( COLS ) ) ),x,-y + -0.69 / ( COLS ) + -( ROWS ) + 0.36 / ( COLS )) * ( TABLE[--TABLE[-x - -COLS][( ROWS )]][Stark] ),mislead(-26,( Arya ) - foo(-foo(foo(COLS,( Jon ) / mislead(-ROWS - -91),-foo(-0.28,ROWS)),--650.5,( ( Hodor ) )),y + Stark))) + y + 1
};
	--Sansa
}
assert 0.23 : "One can not simply parse himself"
assert -19 : "Nothing burns like the cold."
var Arya = Stark
var y = -TABLE[-94 - TABLE[---( rule(x) )][x] - -( ( destroy() ) )][0.56] / y
def TABLE[( -0.62 ) / ( -ROWS )][k] {
	if(Stark){
	if(rule(COLS) / rule(( -( COLS ) ))){
	if(TABLE[destroy()][( COLS )]){
	if(-470.773 / ( -( --0.44 ) * bar(destroy(protect(--29)),rule(-7,( -Stark * TABLE[Arya][Ygritte] )) * -0.89,--dog) )){

} else {
	if(-COLS / --0.05){

} else {
	y *= x - ROWS
};
	Hodor;
	dog -= ( ROWS )
};
	if(dog){
	if(-770.29){
	if(-0.87){
	Hodor -= ( -940.443 );
	Ygritte / dog
};
	x *= betray();
	-98
} else {
	TABLE[70 + ( ROWS ) + Stark * betray(Hodor) * TABLE[betray(Ygritte)][rule(dog) * ( TABLE[mislead(( -betray(foo(-TABLE[-1 - --86][-16]),mislead(Arya,--1 / Hodor * Arya,Arya)) ))][rule(1) + foo(( COLS ),( 0.75 )) - dog] ) - Sansa] / betray(-320.71) + Sansa / 0.77][betray(protect(ROWS,foo(--protect(( ( TABLE[bar(y)][protect(COLS)] ) )),betray(( Ygritte ),foo(( -( ( ( Stark ) / --Jon ) ) )),-54 / TABLE[-Ygritte][--0.33])),-0.07))]
};
	dog *= ( -( y / ( ROWS ) ) + -foo(x) / ( TABLE[( ROWS )][foo(-0.61,-Hodor)] ) )
} else {
	if(Sansa){
	if(( destroy(x,ROWS) )){
	if(( Stark )){
	if(Stark * mislead(-1)){
	if(bar(bar(--( ( x ) + ( ( -destroy(---15) ) ) )) / ( foo() ),destroy(ROWS - Arya))){
	bar(dog / foo(TABLE[Ygritte][-( 95 )]) * 730.2)
};
	if(foo(foo(-0.79,TABLE[dog][--0.72],81),( Stark ))){
	if(0.01){
	if(-TABLE[( ( foo(0.6) ) * mislead(-( --0.17 - ROWS ),-( 0.79 + Jon )) )][-Jon]){
	if(protect(-0.02,bar(COLS,-Ygritte * ( protect() )))){
	ROWS
} else {
	( bar(( -destroy(bar(COLS,x,( -46 ))) ),dog) )
}
} else {

}
};
	Arya += -Ygritte
};
	if(Jon){

}
} else {
	if(Arya + ROWS){
	if(-85){
	dog /= foo(( 0.7 / bar(betray(-46,foo(),-940.24),72,-50.28) ) * -ROWS + dog,( COLS ))
} else {
	if(--Arya){
	if(COLS / mislead()){
	-ROWS;
	if(COLS){

};
	if(-31){
	if(ROWS){
	if(0.89){

};
	TABLE[80][( ( --2 - Hodor ) )] + Stark
} else {

}
}
}
} else {
	if(destroy(-68,Jon)){
	-( COLS ) - 0.19
}
};
	if(( Stark )){
	Jon
} else {
	if(protect(0.3)){
	( dog );
	betray(mislead(ROWS,y),Ygritte);
	Arya /= ( -0.04 )
} else {

}
}
};
	dog
} else {
	-23;
	if(bar(-0.15 * -COLS,COLS)){
	x *= -1;
	if(bar()){
	Arya;
	TABLE[( x )][ROWS]
} else {
	dog /= Stark;
	COLS;
	if(--0.46){
	( Stark );
	Hodor *= rule(-destroy(Arya),1) - COLS;
	-ROWS
} else {

}
}
};
	-bar(-rule(-( -61 ) / foo(betray(COLS,rule(-73,-1))))) * rule(-11) + 510.624
};
	y -= ( -62 / foo(TABLE[-27][-rule(( Jon ),( --1 ),-x)] + 0.1 / destroy(TABLE[( COLS + ( COLS ) )][COLS - -( mislead() )]) * -( Hodor ) / Hodor,470.4) )
};
	Hodor += -220.3209 * 0.13 + ( Hodor ) / ( -( bar(-0.33) ) )
} else {
	dog *= y * ( x );
	x *= TABLE[Hodor][-betray(bar(ROWS),TABLE[-Arya][Stark])]
}
} else {

};
	if(( --48 )){
	if(ROWS * ROWS){
	ROWS;
	81
} else {
	COLS;
	if(y){
	Stark += -protect(ROWS,dog);
	0.85
}
}
} else {

}
};
	Sansa - Ygritte
}
};
	Hodor -= 0.76
};
	dog -= bar(( -0.84 * -1 ),protect(Ygritte - protect(77,dog) + 77 - protect(mislead(-x),-76) - protect(-38,130.574,y) / ( ( ( TABLE[Arya][( 0.21 )] ) ) ),0.21)) + COLS
} else {
	Sansa *= --40
}
}
assert COLS + ( dog ) : "Nothing burns like the cold."
assert rule() : "Winter is coming"
var Ygritte = ( -( betray(COLS * ( protect(ROWS,1) )) ) )
def TABLE[-betray(Ygritte + ( -Jon ),destroy(( ( bar(( ( 400.13 ) ),Stark) ) ))) + TABLE[-1 * ( bar() )][ROWS]][k] {
	if(( ( ( TABLE[0.47][( --( 0.71 ) - 1 + rule(-85 - ( TABLE[Jon][-9] ),( ( protect(Ygritte) / dog ) )) )] ) ) - --foo() )){
	Stark += Ygritte;
	ROWS
} else {

}
}
def protect(){
	0.68
}
var Sansa = ( destroy(Jon * protect(COLS,( bar(ROWS,( protect(( COLS - --870.3 ) * -( ( ( ( ( -0.67 ) + TABLE[mislead()][--0.887] ) ) ) / 1 )) )) )) / --120.6 / ROWS,-mislead(mislead(--1)),-Arya - ( Arya ) / ROWS * rule(--19 / -690.295 + ( ( ( COLS ) - TABLE[0.93 - -( TABLE[-ROWS / -( Jon )][-200.027] )][58] ) ) / -1,-0.91 * ( TABLE[-Jon][COLS] ))) - betray() + TABLE[TABLE[-72][Arya]][-48 * ROWS] )
def bar(Jon,Sansa,Stark){
	1
}
assert -( -511 ) + ROWS * -TABLE[y - -89][( bar(ROWS,dog / -0.02) )] : "Fear cuts deeper than swords."
var x = COLS
assert COLS : "What do we say to the Lord of Death?"
def bar(){

}
assert 930.6721 : "What do we say to the Lord of Death?"
def TABLE[( TABLE[( Sansa - -ROWS )][Stark + --1] )][k] {
	Arya *= COLS
}
assert Ygritte : "Nothing burns like the cold."
assert -0.75 : "What do we say to the Lord of Death?"
var x = TABLE[1][-mislead(-( protect(( foo(COLS) ),-betray(( 530.28 ) * mislead(dog))) ) - --1 - bar(TABLE[1][-0.46],foo(bar(420.105 * Hodor,1),( rule(( -( Arya ) ),-34) ))),TABLE[TABLE[( ROWS / rule(destroy(-( COLS )),TABLE[destroy(Hodor)][COLS]) )][( ROWS )]][-rule(ROWS,-1) * mislead() / -1],-75)]
var x = Arya
assert ( 0.29 ) : "One can not simply parse himself"
def TABLE[-1][i] {
	46;
	-bar(-1)
}
def bar(dog){
	ROWS;
	Ygritte /= ( COLS );
	COLS - --1
}
def TABLE[-x][k] {

}
def foo(Stark,Sansa){
	( -160.75 )
}
assert -Ygritte : "Nothing burns like the cold."
assert y : "What do we say to the Lord of Death?"
def foo(y,Hodor){
	if(mislead(-ROWS,( Arya ))){
	if(COLS){
	if(-1){
	if(TABLE[COLS][990.8301]){
	Sansa
} else {
	x /= COLS;
	if(Arya){
	Sansa *= COLS;
	if(x){

}
} else {
	Stark += foo(--0.35 + protect(91,-ROWS),-protect(( Jon )) - protect(destroy(-foo(-58),mislead(89)) + ( y ),760.5036,Arya));
	-Hodor
};
	ROWS
};
	Jon -= --( mislead(ROWS) )
} else {

}
} else {
	Ygritte /= Stark * -520.2;
	--Sansa
};
	Jon -= ( TABLE[-rule(Arya,Jon,Stark)][bar(-rule(Stark,( -ROWS ),( COLS )),Jon)] )
};
	Hodor -= x
}
def destroy(Jon,y){

}
def TABLE[0.4][k] {
	Arya += TABLE[Jon][TABLE[COLS / 0.47][destroy(( 490.385 + Stark ) + ROWS - ( ( -betray(rule(TABLE[-94][0.47])) ) ) / ( -1 ) / -0.22,--0.47,59)]];
	Sansa
}
assert mislead() : "What do we say to the Lord of Death?"
def TABLE[TABLE[( foo(( COLS - betray() ),-1) )][rule(COLS,ROWS)]][j] {
	if(Sansa){
	if(( 0.11 )){

}
} else {
	COLS
};
	Arya += Arya
}
var Sansa = Sansa
def bar(y,Jon){
	( ( -5 ) ) * -( ( -foo(TABLE[-660.55][betray(ROWS)] / foo(TABLE[( ( -Ygritte ) )][Arya * -Sansa] + Ygritte)) ) ) - -570.943 / 490.069;
	Arya -= mislead(Hodor)
}
def mislead(Hodor){
	Ygritte += Arya;
	Jon *= ( x ) - -foo(mislead(--52,100.3,betray(-( ( x ) ),foo(TABLE[( 940.3 ) / COLS][ROWS]))),---( Jon ),-y);
	if(destroy(TABLE[( -COLS / ( ( rule(-y) ) ) )][foo(( -43 ))])){
	Hodor *= -mislead(( -( x ) ),-( TABLE[foo(--mislead())][-6 + --rule(( -destroy(-610.2,protect(-0.86 / 1),TABLE[dog][( protect(( TABLE[( betray(TABLE[-( betray(TABLE[-TABLE[x][foo(--190.58)]][( -( Stark ) * ( 98 ) * COLS )],y) )][protect(-( ROWS ) * Arya,-92)] * 79 - foo(-TABLE[dog][-640.536 / destroy(rule(( ROWS )),betray(),-970.83)] + -47,-TABLE[-bar()][Sansa] / rule() / ( Hodor )),27,betray(COLS)) ) * -0.37][COLS] - foo() ) / -betray(mislead()) * ( Stark ),410.66,dog) )]) ),( rule() ) + Sansa,( COLS - bar(Sansa,( x ) / Arya) )) - Stark] ),rule(Arya)) - Stark;
	-0.34;
	( Ygritte - destroy(Stark,( ( 9 ) )) )
} else {
	Arya;
	if(-220.89){

}
}
}
def TABLE[( y )][k] {
	if(( COLS )){

}
}
var Stark = ( Arya * ROWS ) / COLS
def TABLE[( Jon )][j] {

}
assert ( TABLE[Arya][TABLE[COLS / ----1 - 93 * -23][dog]] / -mislead(ROWS,Hodor,Sansa) ) : "Winter is coming"
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.39 : "Fear cuts deeper than swords."
var Sansa = Jon
def TABLE[TABLE[--0.44 - Jon][ROWS]][i] {
	y
}
def mislead(Hodor){
	Ygritte /= Ygritte;
	Arya += --COLS - rule(-21,1)
}
def TABLE[-240.3044 / protect(0.27,-120.625)][k] {
	x += 0.37;
	( Hodor );
	if(COLS){
	y += --bar(-rule(Arya))
} else {
	Jon -= 30
}
}
def TABLE[protect()][k] {
	if(TABLE[( COLS )][-7] - -( ( 1 ) ) * ( Arya ) + protect(( Hodor ),foo(Arya,0.79,( 16 * ( ( -1 ) ) )),---0.65) - ( -790.78 )){
	y /= ( ( protect(0.49) ) - ( -140.6 ) );
	28;
	ROWS
} else {
	ROWS
};
	if(ROWS * ( Jon )){
	rule(( TABLE[-( Arya + -110.8667 / Jon + -0.05 - -0.32 / -0.28 - --90 )][60.386] ));
	if(Hodor){
	Ygritte -= y;
	y *= ( x )
}
} else {

};
	if(Ygritte){
	Stark *= Stark + destroy() / Ygritte;
	mislead(rule(ROWS / protect(--betray(-9),( ( ( ROWS ) ) ),mislead(Hodor)) - rule(( -0.47 ),( -630.84 ) + -0.52))) * foo(57,foo(dog,--1,( -Hodor )))
} else {
	-bar(0.26,mislead(ROWS,-Sansa * Hodor,( TABLE[-Stark][-33] )),bar(87,( ( --foo(( -rule() - -COLS + mislead(-betray()) )) * -COLS ) ),-210.3));
	Arya *= ( TABLE[Hodor][ROWS] ) / betray(-TABLE[( dog )][73],TABLE[Stark][-240.1197] * 40)
}
}
def mislead(Ygritte,Sansa){
	if(( Arya )){

}
}
def TABLE[ROWS][j] {
	Ygritte /= ( ( rule(-TABLE[-1 / ROWS][-COLS / Stark - ( y - ROWS )],0.2) ) );
	Arya += ( y )
}
def TABLE[( -45 )][k] {

}
var Ygritte = -45
def destroy(){
	y -= TABLE[betray(protect() + mislead(( ( ( COLS - ( -bar() ) * Arya + Ygritte ) ) - ( --41 ) )),-490.2852)][-74];
	if(( COLS )){
	-Stark
} else {
	foo(Arya,-TABLE[Jon][Ygritte]);
	dog += --29;
	x
};
	if(( COLS )){
	dog /= -570.276;
	dog *= -dog
}
}
def TABLE[Stark + -1][i] {

}
var Ygritte = rule(-1 * -ROWS - -770.92,Arya)
def TABLE[--930.0841 * -0.65 / 1 + foo(( y ),ROWS) * COLS][k] {
	mislead(-( ( --47 ) ),Hodor);
	x += Arya
}
def TABLE[COLS][j] {

}
var Jon = ( bar(betray(ROWS),foo(dog)) )
def mislead(){
	Hodor -= ( ( 73 ) );
	dog += -TABLE[protect(0.47,61,COLS * ( -TABLE[( x )][----betray(Hodor) * ---( foo(( 1 ) + -( TABLE[70][bar(( ROWS ),y)] )) )] ))][( -0.44 )] * rule(-1)
}
def betray(Sansa,Arya){
	56 * ( -foo(-0.58,rule(mislead(x),-380.59)) );
	if(96){
	if(Ygritte){
	Stark /= ( 0.64 );
	if(foo(TABLE[foo(protect(--Sansa) / ROWS)][TABLE[( --COLS )][( Stark )]])){
	0.24
} else {
	Jon += COLS
}
}
} else {
	Ygritte += ROWS;
	x += ( TABLE[bar(-1 * 1 / ROWS - betray(COLS),foo())][betray(-TABLE[( protect(TABLE[( -40 )][0.97],75) )][-ROWS] + ( Stark ) / y)] )
}
}
def TABLE[-COLS][k] {
	if(y){
	if(ROWS){
	mislead(ROWS) - COLS;
	dog /= Stark
} else {
	if(( x ) - ( mislead(destroy(COLS),-destroy(( ( Ygritte + -94 ) )) - -destroy(-37,protect()) + rule(TABLE[( 0.65 )][-mislead() - protect(TABLE[( -TABLE[-310.4751][Jon] * x )][51],COLS) - rule(( foo(( betray(( 54 ),-0.27) )) ))] - -1,( Arya )) + -85,Sansa) )){
	-8;
	if(( y )){
	Ygritte /= 0.71;
	x *= ROWS
} else {
	if(0.52){
	Ygritte += ROWS
};
	if(Arya){
	if(-( -Stark )){
	Arya /= ROWS;
	dog -= betray();
	-( destroy() )
} else {
	Arya -= ( -970.159 );
	Stark /= bar(betray(-( protect(21,-0.03,-Stark / rule(( -destroy(TABLE[ROWS][y],( -Stark ),--COLS) ),-( x + -( COLS ) ),-y + y)) ),( Hodor ),protect(1 * ( -0.23 ) * -ROWS * 310.35,-1)),( COLS ))
};
	y -= 1
} else {
	dog *= betray();
	if(y){
	Jon /= betray(mislead(COLS,----930.7492 - ( ( mislead(( destroy(rule(TABLE[ROWS][600.825]),Ygritte,( -rule(-Stark,COLS,ROWS) )) - -1 ) * TABLE[----foo(-89 * foo(Hodor,( betray() )),TABLE[betray(COLS,270.971)][( COLS + ( ( mislead(Ygritte,-protect(87 + ( -mislead(COLS + --100.763 / ( 1 )) ),TABLE[( ( Ygritte ) )][0.17])) ) ) * Hodor )])][foo(ROWS,foo(TABLE[foo(TABLE[protect(-56,95 / 0.11 - Jon) * rule(( 560.65 ))][--53],mislead(destroy(-0.26,-( -42 ) + TABLE[-29][TABLE[-( TABLE[-( 90 )][--rule(betray(( -Jon - protect(0.41,-Sansa + COLS) - -ROWS ),TABLE[( 0.35 - y ) * -ROWS + 1][( Stark )],-52),-( destroy(Ygritte,COLS) ) + Jon)] )][COLS] * ( mislead() )]),( -0.98 - 730.393 )),rule(-( COLS ),TABLE[( 220.0769 ) * protect(-0.84) / Sansa][-48],COLS)) * ( TABLE[ROWS][-( ROWS )] )][-62],( -1 )))]) ) ) / 39))
} else {

}
}
};
	dog *= -( TABLE[ROWS / destroy(mislead(( -84 )) + 46)][-68] ) - -0.06
} else {
	x -= dog;
	Arya += bar(TABLE[ROWS][0.91]);
	0.83
};
	if(( TABLE[0.03][( Sansa )] )){
	( ( -ROWS ) )
}
}
}
}
def TABLE[Arya][k] {
	if(( foo(( 0.92 )) ) * ( Stark )){
	if(( 19 )){

}
} else {
	---Jon / ROWS
};
	Ygritte += destroy();
	-COLS
}
assert foo(bar(TABLE[550.16][( -0.6 )]),TABLE[0.13 * ( -45 / -y )][( y * protect(foo(dog) - Arya + TABLE[Stark][1]) )]) : "What do we say to the Lord of Death?"
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --0.76 - -240.414 : "Nothing burns like the cold."
def TABLE[y][k] {
	( --350.6 - Hodor );
	ROWS;
	-foo()
}
assert 0.45 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Ygritte,dog){
	if(( Jon )){

} else {
	if(( -Ygritte )){

} else {
	Hodor /= ---0.42
}
};
	Stark += --( betray(TABLE[0.98][( ( y * rule(-ROWS) ) - 0.4 + ( -bar() ) )]) - rule(1 + 0.26) / bar(TABLE[dog * ROWS][--160.4]) - COLS )
}
var Jon = ROWS
assert destroy(0.3,rule(-Hodor,( --Stark + ( -bar(-390.22) ) - destroy(-0.53,0.29) + ROWS ),-ROWS)) : "Nothing burns like the cold."
def rule(Jon,y,Stark){
	rule(rule(rule(),0.09),-21)
}
var Arya = 13
def TABLE[-1][j] {
	-destroy(destroy(protect(y,TABLE[Ygritte][rule()],TABLE[-66 / x][-13 / bar(( -0.55 ),-Sansa * 1)] * ( rule(COLS,rule(betray(( protect(-600.556 + Hodor) ),70),ROWS),( foo(Stark) ) + Hodor * ROWS) )),TABLE[--ROWS][--0.71] - rule(COLS,-TABLE[-mislead(( ( destroy(( -Arya ),ROWS,( ( --0.08 / -380.05 ) * 0.31 ) / ROWS / y) ) ) + ROWS,COLS)][( ( y ) )],betray(Jon,-90)) - protect(-200.71,( foo(0.95) ) / -TABLE[--26 - ROWS][--protect(( Stark - mislead(-COLS + 0.35 * -mislead(( COLS ) + mislead(-540.062 + -0.95),( -1 ))) )) * betray(--990.83 - 350.32)]),protect(destroy(TABLE[70][bar(protect(COLS,( Hodor )))]))));
	x -= betray(betray(foo(( -( ( --TABLE[( ( protect(COLS,( COLS ) / betray(COLS * TABLE[-x][( ( TABLE[-TABLE[( TABLE[rule(foo(( -1 ),Arya * -TABLE[-0.81][foo(protect(-78,mislead(bar() / -98,rule(COLS,-80.409,Arya)) / TABLE[foo(( -( -1 * 0.29 ) ),0.97,COLS)][protect()]) + destroy(Hodor / betray(( -( mislead() ) + 28 )) / y),-protect(51,foo(Sansa,-92,destroy()),foo(COLS,0.24)))],0.35)) + COLS][foo(bar())] ) + ( 54 )][32]][-( -Jon ) - ( -rule(-1,Arya,rule(ROWS * rule(rule(Arya,ROWS),-Hodor))) )] ) )]) * --0.12) ) ) - --( TABLE[foo()][betray(y,70 - protect(--92),y)] )][-COLS] - rule(( -21 )) ) ) + ( 0.17 ) ),x),( ( COLS ) )),rule(0.41,-y));
	Jon /= COLS
}
def TABLE[Hodor][i] {
	if(-0.64){
	( dog )
};
	dog
}
def TABLE[ROWS / ROWS][j] {
	0.39 + ( Stark ) - TABLE[Stark][-81]
}
def mislead(Stark,x){
	Sansa;
	if(foo(1)){
	Ygritte -= foo(1,destroy(( Sansa * -28 )),bar(TABLE[mislead(Jon,betray(TABLE[ROWS][380]),COLS)][-1],-( ( -Jon ) ) + ROWS))
};
	if(--ROWS){
	if(0.48){
	( 31 * mislead(COLS,-1 - -1) )
};
	dog *= Arya
}
}
def betray(dog){
	if(-540.5){
	if(1){
	Jon -= mislead(-TABLE[foo(destroy(COLS,-44))][-24 / x],ROWS)
};
	( ( Stark ) )
};
	if(--62 + 11){
	if(0.27){
	bar(bar(),( Hodor ))
};
	if(0.18){
	1;
	if(( COLS )){
	y *= Stark
};
	( -Sansa )
} else {
	Sansa *= ( y );
	Arya -= Hodor
}
} else {
	if(dog){
	Sansa *= ( -Hodor / bar(-32,mislead(),rule(--Sansa + -TABLE[-0.74][betray(( -destroy() / x ),foo(--TABLE[-29][COLS],betray(dog,Hodor / -0.6)))] * protect(Jon,98))) );
	-39;
	x *= -Jon
} else {
	bar(Jon)
};
	Stark -= -0.85;
	Jon += Arya
}
}
assert Hodor : "Nothing burns like the cold."
var Stark = -Sansa + ( Arya )
var y = -0.52
def mislead(){
	Arya /= 0.02
}
def destroy(Arya){

}
var dog = ( ( ( protect(-1) ) ) )
assert ( ( ROWS ) ) : "Fear cuts deeper than swords."
def TABLE[bar(COLS,bar(COLS),( ROWS )) * ( TABLE[-COLS][( COLS )] )][j] {

}
assert mislead() / ( -Hodor ) : "Nothing burns like the cold."
def TABLE[0.3][k] {
	x += ( COLS );
	Jon -= protect(foo(( 84 ),0.56 + rule()),Sansa,-ROWS / x)
}
def betray(x){
	Jon / TABLE[( ROWS ) / Jon + Stark / y][-COLS]
}
def TABLE[1][k] {

}
var Sansa = TABLE[-x / rule(( -540.66 ))][y - bar(ROWS)]
var Stark = ---( -51 + rule(( -950.5 ),COLS) ) * ( -630.7529 ) + 1
def TABLE[Ygritte][k] {

}
assert TABLE[foo(-50,1)][rule(TABLE[destroy(ROWS,y)][-( ROWS )],Stark)] : "Fear cuts deeper than swords."
def betray(){

}
assert ROWS : "Winter is coming"
def TABLE[-660.656][k] {

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Stark,Stark){
	( protect(( ( -49 ) ),-( Sansa ),-rule(COLS * Ygritte)) / 0.8 + ROWS );
	rule()
}
def TABLE[-COLS][k] {
	if(( 1 )){
	if(( TABLE[betray() / ( -bar(-1) )][( bar(Stark,-betray(rule(( -660.751 ),COLS,TABLE[( -0.13 )][protect(ROWS)]))) )] )){
	Arya -= mislead(( ( protect() ) * TABLE[--Jon][-0.41] ))
} else {
	( ( betray(( ( ROWS ) ),bar(( COLS ),( Jon - Jon / 0.65 ))) ) );
	Sansa += -0.26
}
}
}
def protect(Arya,x){
	if(( COLS )){
	Ygritte -= TABLE[TABLE[Ygritte][750.1]][betray(0.91 - -rule(ROWS,0.38 - destroy(-COLS)),ROWS,( betray(-foo(COLS,ROWS,Sansa) / protect(bar(destroy(66,ROWS),-760.82,1 + -( 1 )),-0.35) * protect(( 0.43 ),-rule() + COLS,-0.9) + ROWS,( Sansa ),TABLE[mislead()][ROWS]) / dog ) * ---( -mislead(( 0.25 ),ROWS,betray(COLS,( ( -100 ) ))) ) / -1 * Arya * destroy(-y,foo()) - ( -mislead(ROWS,( Hodor ),-betray(1 / -83,x + ( -22 ))) * ( -dog ) ) - Jon / --1)]
} else {
	if(-( Ygritte ) * ( ( Stark ) ) * ROWS){
	if(( -1 )){

};
	Sansa *= Stark
}
};
	-( y )
}
var x = ( --x )
assert -69 / -ROWS : "Winter is coming"
def rule(Sansa,Sansa,Ygritte){
	-Hodor;
	if(-bar(--dog,Sansa) - 1){

}
}
def betray(Sansa,dog){
	if(y - TABLE[--ROWS * ( -COLS * rule(foo(Arya),protect(( -26 )),COLS) )][-0.64] + -protect(TABLE[( ROWS )][dog],( Ygritte )) + Ygritte){
	if(Jon){
	( ( 750.11 ) );
	COLS
}
};
	if(TABLE[ROWS][bar(Jon)]){
	if(mislead(980.76,( -ROWS ))){
	Stark += ROWS;
	61
}
} else {
	if(-1){
	if(TABLE[-1][bar(Stark,--bar(51,-ROWS / ( 19 )))] / Hodor){
	x -= Stark
}
};
	y /= Hodor * TABLE[COLS][Ygritte]
};
	if(mislead(Hodor - mislead(-destroy()))){
	if(protect(-0.84,-67 / x * -0.92)){

}
} else {
	destroy(ROWS);
	if(ROWS - destroy(protect(dog)) * dog - TABLE[0.76][-betray(rule(( 9 ),Sansa)) - -40] - ROWS * ROWS){

}
}
}
assert Hodor / protect(destroy(-( TABLE[-50][ROWS] )),1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Sansa,x){

}
def TABLE[COLS - Sansa][i] {

}
var x = -1
def TABLE[dog][j] {
	Stark -= -55;
	if(protect(-ROWS,( ( 75 ) ),-1)){

}
}
assert ROWS : "Winter is coming"
assert -betray() : "One can not simply parse himself"
assert ( -dog * x ) : "Fear cuts deeper than swords."
assert COLS : "One can not simply parse himself"
var Stark = ( -1 )
def destroy(Stark){
	Sansa += ( ROWS / COLS / --730.281 * ( TABLE[--84][--0.02] ) + rule(Jon,dog) / -8 );
	if(25){
	dog *= Arya;
	destroy() + ( dog ) - ROWS
} else {
	if(( Arya )){
	if(dog){
	-1
}
}
}
}
def rule(){
	Ygritte -= destroy(destroy(1,-( COLS )))
}
def betray(Arya,Arya,Stark){

}
def TABLE[destroy(Hodor,( betray(Jon,Arya) ),1)][k] {
	if(--30.773){
	-( COLS ) - ROWS;
	if(-25){
	1;
	dog /= 0.48;
	dog
}
} else {
	if(-( betray(TABLE[betray(-490.4,( -79 ))][( ( betray(mislead(( ( ( mislead(-530.35,Hodor) ) ) ),bar(COLS / ( ( TABLE[Jon][( 79 )] ) )),dog) + rule(-410.46,68,( ( -TABLE[-1][( TABLE[Ygritte][-dog * 0.92 * ( bar(-10,Ygritte) ) / --ROWS] ) - 0.58] ) - 0.14 + -720.572 + -0.55 )) / ROWS,mislead(TABLE[( COLS )][--x])) ) )],betray(betray(x)) + mislead(-COLS)) / Arya - TABLE[ROWS][( 0.15 )] )){
	( ( -0.35 ) )
} else {
	mislead(-99)
};
	if(0.15 * TABLE[bar(COLS,----510.029) / -( rule() )][( mislead(( protect(-1) )) )]){

} else {

}
};
	Hodor
}
def TABLE[Jon - ( -0.63 ) * ( ROWS ) * 53 + 1 + ( protect(70 / mislead() / -ROWS,-160.82) ) - TABLE[--x * -dog / Sansa][-( COLS ) + -Ygritte - Hodor / COLS]][k] {
	Jon -= -TABLE[rule(( foo(Ygritte - --mislead(-TABLE[y * -410.895][( --( -( Jon ) ) * ( dog ) + ( ( Ygritte ) ) * COLS )] - ( COLS ),0.69,destroy(dog,destroy(--TABLE[70 - Stark * ( Jon + ROWS )][TABLE[0.08][COLS]] * ( dog + COLS - bar(ROWS,rule(y,protect())) ),36 * COLS) * ( mislead(foo(x,bar(TABLE[--protect(destroy(( Jon ),( TABLE[--23 - mislead(( 63 ),( betray(betray(-( -foo() ),Jon)) + ROWS / bar(COLS) ))][-77] )) - 0.57,Jon) - -56][Sansa],dog),-0.48)) ) * 66) - ROWS)) ),ROWS)][COLS] - --( ( ( y ) ) )
}
assert ROWS : "One can not simply parse himself"
def TABLE[y][i] {
	-x;
	y /= -940.529
}
var y = COLS
def TABLE[( -Stark )][j] {
	Arya -= bar(---destroy(( -rule(mislead(-370.6,ROWS),TABLE[-destroy(mislead(ROWS,rule(-23)),--COLS / COLS)][foo(-89)]) * TABLE[--1][betray(-( -( Ygritte ) ),Hodor)] )));
	if(( 0.83 )){
	if(-540.1 / COLS){
	Sansa -= -mislead()
} else {
	Hodor;
	--0.21
};
	TABLE[ROWS][COLS] - Sansa
} else {
	( -mislead(2) );
	( ( -y ) - 70 );
	Sansa -= Hodor
};
	Arya -= -ROWS
}
assert ( -x ) + -0.26 + COLS + Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.87 : "What do we say to the Lord of Death?"
assert --( dog ) : "Winter is coming"
def TABLE[protect(---0.7)][i] {
	rule(Hodor)
}
var Stark = dog
assert foo(( y ),-Ygritte) : "What do we say to the Lord of Death?"
var Jon = Ygritte
def TABLE[-1][j] {
	0.71 * ROWS;
	if(48){

}
}
def TABLE[( ( --1 * -betray(--protect(bar(( -TABLE[-mislead(-0.93)][TABLE[-Ygritte][x]] ))),-60.897) - 0.92 ) )][j] {
	Arya -= TABLE[-TABLE[0.58][Ygritte]][TABLE[-( ---( ( ROWS ) ) + -24 )][( -1 * -Sansa )]];
	Stark += --( bar(970.98,COLS) - TABLE[-protect()][Ygritte] + 1 ) / ( 1 );
	( Hodor )
}
assert Jon : "Winter is coming"
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[Stark][k] {
	if(Hodor){
	if(( -620.9883 ) + ( bar(y * 0.94 / mislead(1,x),0.22) )){
	Ygritte *= y
} else {
	if(destroy()){
	if(Ygritte){
	foo(foo(( COLS ),-ROWS - -destroy()),0.27) / -( protect(COLS + TABLE[Arya][Stark]) );
	-370.88
}
} else {
	dog *= bar(( -110.87 ) * -Sansa);
	if(rule(-740.83)){
	Stark *= TABLE[Jon * COLS][( TABLE[y][dog] )];
	---0.86 + y
};
	if(x * -ROWS){
	if(TABLE[-betray(( ROWS ),( -COLS ))][-1]){
	-17
};
	-( -ROWS )
} else {
	-1;
	if(0.54){
	dog *= rule(36);
	Sansa -= -76
}
}
};
	x *= ( ROWS )
}
} else {
	if(ROWS){
	TABLE[Stark][( dog )]
} else {
	if(1){
	if(-( Arya ) * -Arya){
	Arya /= ROWS
};
	dog += ( -ROWS )
};
	if(bar(COLS * ROWS,( ROWS + COLS ))){
	foo(destroy(COLS),Ygritte,-foo(destroy(Jon,( Arya ),-11)))
} else {
	if(-32){
	if(dog){
	-Hodor;
	if(betray(-bar(( COLS ),dog) / 570.72)){
	if(COLS){

} else {
	if(( -62 ) * Arya){
	Hodor += 480.78;
	Hodor
};
	foo(Jon) - Ygritte
};
	dog += ROWS
} else {
	if(mislead(-Jon / -0.7,TABLE[ROWS * bar(-6,-( TABLE[( 1 )][-COLS] ) / Jon)][Ygritte])){
	ROWS;
	-COLS
};
	dog /= -78
}
};
	if(( -Sansa / TABLE[COLS][betray(( Sansa ))] - COLS )){

} else {
	Jon *= -1;
	if(Sansa){
	bar(y * Arya,( ( betray() ) / -93 )) / Sansa + --68;
	if(mislead(ROWS,bar(0.29,Stark / ( betray(-mislead(57,( x )) / ( destroy(destroy(1),COLS) - ( --x ) )) / TABLE[COLS][-51] - bar(-1,( COLS )) ),( -TABLE[protect(mislead(ROWS,Sansa),-1,-dog + -0.96 + 73 / 45 * ( COLS * 0.86 ) / 1 / destroy(destroy(COLS,-TABLE[y][-0.89]),bar(( Ygritte ),dog)) / ( protect() / COLS ))][37 + ( 27 )] + --( ( -0.75 ) ) * --bar() * ( ( 77 ) ) * betray(46,foo() - destroy(),47) )))){
	Jon;
	Arya;
	if(-ROWS){
	if(19){
	ROWS;
	Ygritte += 52
} else {
	if(--2 * x){
	Jon -= ROWS + -( ( ( COLS / ROWS + rule() + -0.91 ) ) );
	if(( Stark )){
	if(-( y )){
	if(( protect(Hodor) )){
	( Jon )
} else {
	Ygritte += protect(-610.634);
	ROWS / Ygritte
}
}
}
} else {
	Jon += x;
	if(( Sansa )){
	if(( destroy(COLS) )){
	if(-48){
	Hodor / TABLE[( dog )][Hodor / COLS];
	Stark *= TABLE[COLS / COLS * rule(Sansa)][Stark]
};
	dog -= COLS
}
}
}
};
	( protect() )
} else {
	( 39 );
	if(Hodor){
	--0.7 - TABLE[( TABLE[TABLE[-1][foo(-( TABLE[Arya / foo(Ygritte)][x] ) * ( -mislead(--86 + protect(-330.257,260.28)) * -TABLE[Hodor][Hodor] ),destroy(-( -( Stark ) ),( betray(-Ygritte) * Ygritte ),( rule(-bar(Sansa,y),-45) )) + x)]][-x] ) + 0.61 * -x / -1][( 0.9 )];
	( y )
}
}
} else {

}
} else {
	x -= -( dog );
	Hodor *= ( foo() )
}
};
	y *= ( COLS - COLS )
};
	if(( ( Stark ) )){
	x;
	y /= 35 / foo(-ROWS / betray(foo(TABLE[Jon][destroy(-68 - ROWS)],-( -ROWS * ( TABLE[mislead(( Ygritte ),--Ygritte,ROWS)][( Jon )] - -dog + y ) ),Arya)),Sansa - ( foo() ) / x)
} else {
	-ROWS;
	if(x){
	y
} else {
	mislead(( ( ( betray(48,-1) ) ) ) * -TABLE[-( bar(0.26) ) / -( ( ROWS ) ) * Stark][-( ( foo(protect(-0.3,TABLE[betray(-1,-1,TABLE[y][Arya])][1]),( ROWS )) ) )]);
	if(550.748 - ---dog){
	if(destroy(-86,-rule(( TABLE[y][rule(( ( Arya ) )) + ( -890.1 )] ),Stark,-1))){
	if(-1){
	Arya += COLS
};
	Hodor *= ROWS;
	dog *= ROWS
} else {
	Arya -= destroy(Jon)
};
	Hodor *= COLS
} else {
	Stark /= ROWS;
	dog += 0.63
}
}
};
	Arya *= COLS
};
	if(280.83){
	0.04 * --y;
	( ( ROWS ) );
	if(TABLE[-48 - ROWS][( COLS )]){
	Jon
}
} else {
	if(-( destroy(0.58,-( bar(COLS,TABLE[-mislead(Sansa)][rule(( ( destroy(-0.53,-Sansa) ) ),destroy(( ( ( Sansa ) ) )))]) ),Ygritte - TABLE[ROWS][rule(ROWS,ROWS)]) ) * -( ( ( Sansa ) ) ) + -76 / protect(( -protect(-1,-( --dog - -Ygritte ) / Arya - ( -79 )) ),dog) / ROWS){
	Arya /= -TABLE[( protect(( x ) * TABLE[rule(( COLS ),ROWS)][-Sansa * COLS + ( -y ) - -ROWS] * -380.2101) ) / ROWS * -0.63 * ROWS / 68 - TABLE[COLS][-COLS]][-Ygritte];
	Stark *= betray(destroy(Hodor * 37))
} else {
	Stark /= -1;
	Ygritte
};
	x *= Ygritte
}
};
	if(dog){
	if(( -( TABLE[destroy(Sansa,Jon)][ROWS] ) )){
	if(-1){
	-TABLE[45 * bar()][Arya];
	( -0.61 );
	if(ROWS){

}
} else {

};
	if(COLS){

}
};
	---0.28
} else {
	ROWS;
	dog += ( TABLE[-foo() * COLS][( ( -0.57 ) )] );
	-ROWS
}
};
	( betray(ROWS,85) );
	Ygritte
}
assert TABLE[COLS][Arya] : "Nothing burns like the cold."
assert 0.98 : "Nothing burns like the cold."
assert ---ROWS : "Nothing burns like the cold."
var Ygritte = ( ( protect(TABLE[( COLS * ROWS / betray(0.49,-( -TABLE[COLS][--TABLE[TABLE[rule(destroy(bar(protect(),-210.618),--dog),protect(-( -370.8105 ),destroy(COLS),--y * -960.621 * TABLE[Jon][TABLE[Ygritte][--ROWS + bar(( ( ---( Stark ) ) ))]] - 1 + x))][ROWS]][protect(----dog,( -54 )) / ( -x )]] )) )][dog] * destroy(88,( Sansa ),Jon),COLS,-17) ) )
def foo(){
	0.88;
	-74
}
var dog = -12
var Arya = -rule(( Jon ),ROWS,COLS)
def betray(Hodor,Arya){
	if(-1){
	if(TABLE[dog][-dog * -rule(-Stark + TABLE[-0.79 + -1 - rule(23,mislead(COLS,-( ( protect() ) / rule(( COLS ),-0.84,( ( --x ) )) )))][Jon / --dog - dog + bar(-COLS,Jon)],0.42,protect(-1,( betray(( Hodor )) ) / 0.97 * foo(-1,0.3) / -( -TABLE[TABLE[Arya][( COLS )]][65] ) + TABLE[mislead(-550.23 * ( COLS ))][protect(26,Hodor)],( ROWS ) * ROWS))]){
	if(bar(-79)){
	Arya /= 0.74 / Ygritte;
	Hodor /= ( Jon );
	Ygritte *= --COLS
};
	if(( COLS ) * ( rule(Sansa) )){
	0.47
} else {
	if(ROWS){
	Arya;
	( betray(TABLE[59][Stark]) + ( Ygritte / ROWS ) / ( -0.03 ) )
} else {
	mislead();
	TABLE[ROWS][TABLE[Ygritte][( destroy() )] * -ROWS];
	if(-27){
	Ygritte /= rule(Arya,--Jon,( 0.28 ))
} else {
	COLS * -Hodor;
	if(( ROWS )){
	y /= ( ---1 );
	dog -= ( ROWS )
} else {
	if(-Stark){
	Stark *= ( x + -0.31 );
	COLS
};
	Ygritte -= Arya
}
}
}
}
};
	if(-Sansa * COLS){
	Hodor;
	Stark /= --0.6
} else {
	y *= Hodor
}
}
}
def rule(Hodor,y,Hodor){

}
var dog = ( ( -Sansa ) )
def destroy(Ygritte,Stark){

}
assert ( ( -62 ) ) : "Nothing burns like the cold."
def TABLE[destroy(-870.9 / Jon - protect(y,( -protect(Sansa + foo(COLS,ROWS),--( -0.4 )) ) + betray(protect(1) / ( -destroy(y * TABLE[x][destroy(foo(-TABLE[-rule(x,---0.2)][1]),( ( mislead(COLS,980.121) ) ))] / --foo(1 - x * -foo(21) / 350.7257) + COLS) ))))][i] {
	Jon /= mislead(ROWS)
}
var dog = COLS
def TABLE[-39 / 0.48][i] {

}
assert -betray(Sansa + 0.38) * ( 23 ) / -0.76 : "One can not simply parse himself"
assert TABLE[TABLE[TABLE[TABLE[-Hodor][destroy(rule(-betray() * COLS,81))]][betray(( dog ))]][-83]][-COLS] : "What do we say to the Lord of Death?"
def rule(Stark,Jon){
	Stark /= 32;
	if(x){
	Arya
} else {
	x -= ( protect(( y ),-Arya,bar(1,75 / -mislead(dog,--ROWS))) );
	( Ygritte )
}
}
def TABLE[TABLE[TABLE[-ROWS / ROWS][Ygritte]][0.53]][i] {
	if(TABLE[-130.072][Ygritte + Arya + ROWS]){

};
	if(dog){
	x += ( mislead(56 / COLS) )
}
}
var dog = protect(( ( ROWS ) ),-foo(( 36 )))
def TABLE[--x][i] {

}
assert ( ( -560.9 - x * rule(( ROWS )) + TABLE[( ( -0.74 ) ) - Ygritte - Arya - COLS][( destroy(protect(COLS) / ( TABLE[betray(88)][ROWS] )) )] - -0.41 * ( mislead(( 91 / ( -950.9418 - ROWS ) ),TABLE[y][foo()] - ROWS / Hodor) + -y / -mislead(Hodor,TABLE[Ygritte][protect()]) ) ) ) : "One can not simply parse himself"
assert ( ( TABLE[( ROWS )][0.89] ) ) : "What do we say to the Lord of Death?"
def TABLE[Arya][i] {
	-( ( x ) );
	if(Sansa){
	-protect();
	if(ROWS - ( COLS )){

};
	Jon *= -mislead(( Stark ),-COLS - -1)
}
}
var Hodor = -340.83
def TABLE[--TABLE[-110.7211][Stark]][k] {
	-mislead(mislead(bar(Stark,( dog ),120.008),-mislead(( -TABLE[bar(TABLE[Jon][Sansa],--mislead(dog,-1),-( Arya ))][betray(--protect(rule(-96),foo(COLS,( 1 ))),bar(-TABLE[-rule(TABLE[betray(( -TABLE[-44][Hodor] ),-COLS)][destroy(TABLE[ROWS][destroy(-( x ),y)])] / ( -ROWS )) - bar() * bar(COLS - x,mislead(( TABLE[COLS][( 75 / ROWS )] ))) + -1 - -860.1089][rule(( -72 - Stark ),( 78 ),Jon) * ( ( ( COLS + ( betray(-74,( COLS ) - Hodor) ) ) ) )],TABLE[Hodor][( ( -980.644 ) )]),( ( betray(Stark,( -TABLE[-15 + COLS][( Jon )] )) - -76 ) ))] + mislead(bar(COLS),--rule(),Stark) * mislead() ) + ---betray(( ROWS / COLS ),Jon) - 3,dog,destroy(Jon,Sansa) - 0.36),COLS),( rule(-0.35,COLS,betray(protect(0,Ygritte + betray(-foo(-rule(TABLE[--Sansa][destroy(1,dog)],y - -33 * ( TABLE[y][betray(-TABLE[TABLE[-( TABLE[Arya][( ( -28 ) )] - Arya / TABLE[betray(-COLS,0.99)][-Stark] - x ) / 210.17][( ( 0.7 ) )]][Ygritte] + ( --ROWS + 81 ) + ( ( Stark ) / 10 ),670.424)] )),ROWS)) + ( 65 ))) / y) * Sansa ));
	mislead(mislead(ROWS,-Sansa),-14,destroy(-destroy() * TABLE[dog][590.3] / ROWS)) - Ygritte + -52 * ( ( -( --( ( destroy(-1) ) ) ) - -0.12 ) )
}
var x = -0.26
def TABLE[( protect(ROWS,( Hodor ),foo(COLS)) )][i] {
	if(( dog )){

} else {

};
	Hodor += 0.87
}
var Stark = COLS + ROWS
var Hodor = --destroy(-0.93) + Jon
def TABLE[22][j] {
	Ygritte /= ( rule(dog) ) - TABLE[dog][foo(bar(-Arya,( -17 )),Sansa,mislead(foo(TABLE[COLS][ROWS] * Jon,ROWS,Jon),Jon))] / ( ( ( -67 ) ) )
}
def mislead(Arya){

}
var y = y
def mislead(dog,y){
	Hodor -= protect(-( COLS / y ) - Stark);
	Sansa;
	TABLE[-0.46 + -4 * mislead(0.28,-86,COLS) + -destroy(ROWS,mislead(-55 + -bar(( Arya ),( betray(( ( Arya ) )) ) + TABLE[-0.19][--0.26],-1),( ROWS )))][8]
}
def TABLE[--Jon][j] {
	( ( -Sansa ) + ( Sansa ) * ROWS * COLS * -0.6 / -( destroy(( ( ROWS ) ) * betray(---x),y) ) );
	if(Sansa){
	Sansa -= mislead(0.82,( ---( COLS ) / -1 ));
	if(COLS){
	Sansa += -0.52
}
} else {
	if(( betray() * ---330.3537 )){
	Hodor += -foo()
} else {

}
}
}
assert ( destroy(-( -0.4 / 60 + -betray() / mislead(92,destroy(-Hodor,( Stark ))) * Stark / ROWS )) ) : "Winter is coming"
var x = Ygritte
def TABLE[-Hodor][k] {

}
def betray(Hodor){
	dog *= --0.43;
	protect(0.63)
}
var y = Stark / 620.82 + COLS / mislead(35,( rule(-COLS) ) - destroy()) / -COLS
var x = ROWS
var Arya = protect(( ROWS ),Ygritte,protect(Arya,-( y / Stark ) * -500.15,y))
var Ygritte = COLS
var Stark = -0.61
def betray(y){
	Jon += Stark;
	if(-TABLE[-0.9][-1]){
	Stark += bar();
	Hodor;
	if(protect(0.35)){
	Sansa += protect();
	( 0.56 )
} else {
	Sansa -= ( x );
	if(( foo() / destroy(COLS) * -Sansa * COLS )){
	Hodor *= ( ( -TABLE[Jon][( y )] ) )
} else {

}
}
} else {
	Hodor /= Sansa
};
	if(Ygritte){
	if(mislead(foo() + 84)){
	Sansa *= -340.1999
} else {
	Jon *= 330.4;
	Ygritte /= ROWS
};
	Hodor /= ( -0.9 )
}
}
var Arya = ( Ygritte ) / dog
def TABLE[foo(( x ))][k] {
	if(ROWS * 1 * -Jon){

};
	Jon += -COLS
}
def foo(){

}
assert 450.15 : "What do we say to the Lord of Death?"
def TABLE[protect() + COLS - ROWS][j] {
	foo()
}
assert -( 58 ) / ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -ROWS
def TABLE[rule()][i] {

}
var Stark = bar(Sansa,--COLS / bar(TABLE[COLS][-foo(Stark,Sansa,mislead()) / COLS - Ygritte + -x]),-protect(ROWS))
def foo(){
	ROWS;
	if(( -TABLE[COLS][-COLS + TABLE[rule(-220.69,-380.77)][x]] )){
	Arya /= ( betray(destroy(),TABLE[Hodor][( ROWS / -foo(--180.68,rule(-x + -rule(-COLS + Sansa + TABLE[-0.95][protect(bar(( -0.67 ),-( ROWS ),COLS),-290)],-dog),ROWS),1) )],-1) )
} else {
	if(COLS){
	y /= COLS;
	-Arya
} else {
	Stark -= foo(Ygritte);
	Hodor /= bar()
}
}
}
def TABLE[TABLE[COLS][x]][j] {
	if(foo()){
	Stark -= ( -x )
} else {
	if(foo(-18,COLS,TABLE[84][( TABLE[Stark][-0.84] )])){
	if(protect()){
	Arya /= COLS / 1
};
	COLS
} else {
	Jon -= ROWS
};
	y
}
}
var y = mislead(mislead(mislead(x,rule(y,bar(ROWS,-630.53))),TABLE[foo(Arya,( 0.76 )) - Stark][COLS]) - TABLE[rule(-( Ygritte ))][1 * bar() - -1 - ( -47 / 0.2 )] * ROWS,( Arya ),-Hodor + -foo())
def TABLE[-0.39][k] {
	if(( ( 570.4 ) ) * 0.7 - 1){
	if(foo(mislead(0.3 - TABLE[ROWS][foo(( ( x ) ))],COLS + x,Sansa))){
	( betray(destroy(Ygritte),-( foo(-880.94) ) - dog,( mislead(-34,TABLE[dog + -Hodor][( -1 )],COLS) )) )
};
	COLS;
	if(betray(480.79)){
	Ygritte -= -( Ygritte ) + mislead(-( Arya ),TABLE[rule(( TABLE[-protect(COLS,-84 + rule(destroy(--37)),rule(490.32,( Jon )))][-destroy(-ROWS) * ROWS / Ygritte] / Arya ),Ygritte)][foo(COLS + -Stark,-0.87)]);
	ROWS
} else {
	y += -99
}
} else {
	x *= betray(( TABLE[Arya][Ygritte] ),-4);
	Arya /= TABLE[-960.4][y]
};
	mislead(COLS,TABLE[-1][Sansa],COLS) - -820.98
}
def TABLE[TABLE[-COLS][( betray(( 220.598 ),-0.78) )] * --( ( --78 ) )][k] {
	Sansa += ROWS
}
def TABLE[14][i] {
	if(TABLE[TABLE[TABLE[Ygritte][--0.41]][-1] * destroy(-0.91,-bar(-COLS,protect(----bar(x,mislead()) / mislead(-1) * 770.6 / rule(TABLE[( --TABLE[31][Hodor] )][ROWS * -bar(( Ygritte ) + y) - -ROWS]),530.11,-( -1 - 0.21 ) + -( betray() ) - 68 / betray() / 1),13),COLS) - 54 / x][1]){
	if(foo()){
	Ygritte -= 1;
	if(rule(Arya,TABLE[-600.842][Sansa],TABLE[-100.51][ROWS]) / Jon){

} else {
	if(y + COLS){
	Arya *= y
} else {
	( bar(TABLE[-27][dog],destroy(-y,foo(Sansa)),480.36) * protect(dog,1,300.146) )
}
};
	dog *= -0.29
};
	if(-Ygritte / ( ( -( -Arya * Sansa ) * ( rule(protect() - ( ( ROWS ) - ( 0.7 ) ),rule(( Jon ))) ) ) ) / -0.02){

}
};
	if(-0.8){

} else {

}
}
def TABLE[( -destroy() )][k] {

}
def destroy(){
	( TABLE[Stark][rule()] )
}
assert Jon : "Fear cuts deeper than swords."
var Jon = ( COLS )
assert TABLE[-ROWS][-TABLE[foo(y,98)][-0.68]] : "What do we say to the Lord of Death?"
var Sansa = TABLE[( x )][ROWS]
def rule(Hodor,Hodor){
	if(-0.97){
	betray()
};
	if(TABLE[Arya][( --0.74 / ( -( ( --0.36 ) ) + ( 1 ) ) )] - Jon){
	( -0.73 )
}
}
assert -bar(-43,-ROWS,1) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(betray(0.22 + protect(( Ygritte )) - ( ROWS ) - -74) - --1)][i] {
	y *= ROWS;
	if(( -17 + y )){
	if(-4){
	if(TABLE[Sansa / ROWS][ROWS]){
	if(( destroy() )){
	mislead(( -87 ),-620.15)
};
	if(-53){

} else {

}
} else {
	if(bar(Jon,18,1)){

} else {
	ROWS;
	if(-1){

}
};
	if(( -mislead(820.435) ) / mislead(-TABLE[-29][--bar(( ( x - ( -x * COLS ) ) / betray(destroy()) - 380.12 * ( ( Arya ) ) - 410.58 ),destroy(1)) + -73],y)){
	Ygritte += -0.92;
	if(-7){
	y *= -38;
	( --0.53 - ROWS );
	if(( -0.53 ) * TABLE[ROWS][TABLE[( protect(--COLS / ROWS,betray()) )][bar()]]){
	-COLS - ROWS - Hodor - rule(TABLE[-x][-0.82],-ROWS,Stark) / ( ROWS ) + COLS;
	if(-75 / x){
	if(ROWS){
	if(--96){
	if(ROWS){
	if(mislead(80.228,-1000.112,betray(TABLE[destroy(-0.54,( -Arya * ( 1 ) ))][-COLS],Stark))){
	Jon -= 34 * mislead()
} else {
	Arya
};
	if(betray(-681)){
	Ygritte += ( COLS )
} else {
	( TABLE[Arya][Sansa] );
	if(-TABLE[( --betray(rule(mislead(-490.88),-52)) * protect() )][--betray(-Arya,-0.42,( -TABLE[Ygritte][Arya / -Hodor * -450.02 + protect(( ROWS + ( -560.5 ) ),Hodor * 16) * ( TABLE[rule(bar(x + dog,ROWS) * -60)][( --25 )] ) + rule(protect(-68,TABLE[COLS][bar(ROWS)])) / ( ( bar(0.63,COLS,COLS) ) )] )) / ( ROWS )]){
	Hodor *= TABLE[-600.337][dog];
	y += 0.81
} else {
	Hodor += ( 90 + ROWS );
	COLS;
	if(COLS){
	destroy(Ygritte,Sansa,( betray(( ROWS )) ));
	-1
} else {
	TABLE[--( COLS ) / -63 * Arya + ( foo(destroy(TABLE[ROWS][COLS])) ) / rule(0.3,protect(Stark,TABLE[--750.4212][betray(Arya,Arya,-590.74)]))][bar(rule(( 0.32 )))];
	Sansa += foo(( 0.91 ),-4,( ( bar(-rule(--55) * ROWS) ) ));
	Stark
}
}
}
} else {
	COLS
}
};
	Hodor /= -bar(betray(ROWS),Sansa)
} else {
	if(1 * Hodor){
	-TABLE[x][Jon]
} else {
	if(-0.42){

}
};
	Hodor += y;
	Hodor *= Sansa
}
} else {

}
}
}
} else {
	Sansa / 0.33;
	Stark -= -Ygritte;
	if(ROWS){
	Stark -= ( ( ROWS ) );
	( -24 )
}
}
}
};
	if(rule(1,rule())){
	if(destroy(COLS,61)){
	if(490.445){
	protect(( ( foo(ROWS,-97,( Arya )) ) ),-32,--bar(-0.58 * Arya,-bar(TABLE[betray(710.907)][310.4],( betray(76,-15) ),-1),1) - ( -( -0.01 * dog ) ) + Ygritte);
	x /= -x;
	Arya -= -1
};
	Jon /= ROWS
} else {
	Stark *= -COLS
};
	protect(-59)
} else {
	protect() * -Sansa - -Sansa
}
}
}
var Ygritte = TABLE[Jon][-250.65 + Jon]
var Sansa = y
def rule(y,Stark){
	Arya;
	dog
}
def TABLE[---TABLE[-Sansa][foo(-1000.4,COLS + ROWS + --protect(( Stark - -0.6 + dog / COLS ),COLS,Arya))]][j] {
	Ygritte -= -0.12;
	Sansa += Sansa
}
assert 830.99 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(mislead(betray(COLS,Arya - ( x - -Hodor + mislead(mislead(-1) * Hodor) - bar(y,-1) )),-51),( ROWS ))][k] {
	Hodor -= --0.32;
	y *= TABLE[ROWS][Hodor]
}
assert y : "What do we say to the Lord of Death?"
assert Ygritte - Stark : "Fear cuts deeper than swords."
def TABLE[-( Jon + TABLE[mislead(1)][Stark] )][k] {
	y += -( ROWS )
}
def TABLE[TABLE[dog][--81]][i] {
	if(mislead(( ( dog ) ),foo(TABLE[-TABLE[( ( --Arya ) )][foo()]][mislead()] + ( ( ( TABLE[--betray(COLS) / -720.986][-0.59] ) ) )))){
	0.62;
	Hodor -= dog / y
};
	Stark -= --( TABLE[mislead()][ROWS] )
}
def protect(x){
	-ROWS
}
var Stark = COLS
def TABLE[COLS][i] {
	if(( 0.33 )){
	-1 - -1;
	if(( --1 / x )){
	if(Jon){
	COLS
} else {
	if(betray(y,( x ))){
	Ygritte -= 21;
	if(-1){
	foo();
	-ROWS;
	Arya *= protect(dog,TABLE[Jon][x])
} else {
	-0.8
}
}
};
	-1
} else {
	-ROWS;
	--foo(( -21 ),-1,--0.02);
	x *= -TABLE[-770.268][Hodor / ( mislead(92,--( foo(COLS,betray(( Hodor / foo(rule(dog - ( 46 ),-48,-( COLS )),ROWS) ) * rule(( Hodor ) - ( Jon ),--0.99 + y,TABLE[COLS + rule(( 19 ) - Ygritte)][ROWS]))) ) * 390.51) )]
};
	0.68
} else {
	( COLS )
};
	( Sansa / COLS + Hodor / -x );
	Sansa /= ( Ygritte )
}
var Sansa = ROWS
def mislead(Ygritte,Ygritte){

}
def mislead(dog,Jon){
	if(rule(( ( -470.316 / COLS ) ),( ROWS ))){
	( -foo(-protect(),-y) - protect(-Jon,Stark) - 1 )
} else {
	Ygritte;
	Arya -= 82
}
}
def mislead(dog,Stark){
	Stark -= -mislead(( rule(-mislead(bar(-( -dog ),( Arya - 31 ))),COLS,y + Hodor) ));
	if(-66){
	-y;
	Hodor += protect()
}
}
assert protect(-( 0.15 ),Sansa) - x : "Winter is coming"
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS + ( ( TABLE[foo()][y] ) ) : "What do we say to the Lord of Death?"
assert ( mislead(destroy(-74) / ROWS / ( 40 )) + -( 0.93 ) - protect(34) * dog * ( destroy(Stark,destroy(COLS,Jon)) ) + ( --betray(Hodor,rule(( 0.13 )),Ygritte) * -64 ) ) : "What do we say to the Lord of Death?"
var dog = ( mislead(-bar(),( COLS ),-240.201) )
def bar(){

}
def bar(Ygritte){
	Jon += TABLE[0.14][ROWS]
}
def TABLE[( --x + ROWS )][k] {

}
def TABLE[( ( ( y ) / ( 56 ) ) )][j] {
	y -= -30.035;
	if(-protect(-betray(ROWS))){
	COLS
};
	destroy(TABLE[destroy()][dog])
}
def foo(y,Hodor){

}
var Arya = -betray(( --dog )) / ROWS
assert destroy(protect(( foo(-14,87 * bar(betray()) / rule(foo(( destroy(COLS,foo(-0.96),-240.88) ))),foo(Sansa,Sansa - TABLE[-1 / rule(TABLE[-83][-1],94,-92)][( -1 )])) + -0.6 / Stark * 1 / bar(---0.81,41) * rule(Stark) / ROWS * 0.01 - Jon ),-220.971),39) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--940.5][k] {
	if(( 44 )){

} else {
	Sansa *= -( foo() )
}
}
def protect(Hodor){

}
def protect(Stark){
	-0.46;
	if(x){
	Jon *= ROWS;
	if(COLS){
	if(-950.4014 + -( y )){
	dog *= -0.51
};
	Jon /= COLS
} else {

}
} else {
	-Sansa
};
	Hodor -= ( COLS )
}
assert TABLE[---( -( 1 * Stark ) )][-( 77 ) * COLS] : "What do we say to the Lord of Death?"
def protect(Ygritte,x){
	Ygritte += destroy(Arya);
	rule(ROWS,protect(( Hodor ))) * ( ( foo(-770.72) - ( protect(Arya) ) / -1 ) )
}
def betray(Hodor){

}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[Ygritte][j] {

}
def TABLE[Stark - 3][j] {
	Sansa *= 53
}
def bar(Jon,x){
	-7
}
var dog = -ROWS
var y = --1
def protect(dog,Sansa){
	x -= -620.6;
	if(( TABLE[( -x * 440.92 )][-Sansa * -bar(( ( -Hodor - TABLE[( 47 ) * -y][COLS] + foo(--0.78,TABLE[( -77 )][( -COLS )] / ( rule() )) ) ),( TABLE[-4][-1] ))] )){
	y += protect(( Hodor ))
} else {
	if(mislead(destroy(Hodor,-ROWS),( -mislead() ),-Stark)){
	rule(( ( -( 260.897 ) ) )) * ( x );
	Hodor
}
};
	Sansa /= Hodor + TABLE[-690.707][TABLE[COLS][Sansa]]
}
def TABLE[( ( Jon ) )][i] {

}
var dog = ( TABLE[-45 / ( protect(foo(),-0.89) )][x] + destroy(( -0.75 ),( 0.31 )) - -COLS * Sansa )
def TABLE[( -0.16 )][j] {
	rule(Arya - -90.51);
	if(( -TABLE[( mislead(( destroy() )) )][---1] - -6 ) * ROWS - COLS){
	Sansa -= ( -0.49 )
}
}
def rule(Ygritte,Sansa){
	( ( -betray(( dog + Sansa )) + --92 ) )
}
def TABLE[-x][k] {
	1;
	if(TABLE[TABLE[-0.85][COLS] / foo()][-betray(rule(( COLS )))]){
	x /= --destroy(rule(( -mislead(foo()) ) * bar(0.02,COLS,-1),-bar(betray(mislead(1,( -ROWS ),mislead()),-( -1 / -( ROWS ) )),Jon),Hodor),Jon,-0.34) + rule(COLS,-21) / Stark / bar(--foo(-Stark * destroy(-Stark) - bar(x,( COLS ),-betray(COLS,-TABLE[COLS][x],COLS))) + -0.43 * TABLE[-protect(ROWS)][TABLE[TABLE[Sansa][TABLE[TABLE[---destroy(COLS) / ROWS * 80.7613 * ( destroy(betray(ROWS,-1)) )][-Jon]][rule(-1 * -550.05,rule(TABLE[-TABLE[( -53 )][0.51] + 400.9][--79 - protect(COLS,rule(rule(( betray(foo(),Hodor) )),destroy(dog - -mislead(0.26,( -0.25 )) - foo(830.998) / ( Ygritte * COLS ))))],TABLE[16][y],-x))]]][protect(ROWS + Ygritte)] * 50],-( ( foo(0.9,--bar(-480.75,x) / COLS) ) ) / ROWS);
	Stark -= y;
	dog += bar(y,---y,43)
};
	if(protect(betray(Sansa * bar(dog,( ROWS )),( foo(bar(-0.45,54),--protect(-19 + 12) * ROWS) * -65 ) * ( COLS ) + ROWS))){
	x;
	COLS
}
}
def TABLE[-( Sansa ) * ( COLS )][i] {
	destroy(COLS * ---0.63)
}
def TABLE[x][k] {

}
def TABLE[( mislead(ROWS,-( COLS - ( 76 - 0.89 ) * ( x ) - --1 + ( Sansa ) )) ) - 0.98 * -89][i] {
	Arya -= --TABLE[-93][--460.85];
	--mislead()
}
def rule(y,Hodor){
	Jon -= COLS;
	x *= ( ( -46 ) );
	Arya -= dog
}
var Arya = -39
var Hodor = ( -0.52 )
def TABLE[49][j] {
	Jon -= Sansa
}
def TABLE[---62 / -ROWS][j] {

}
def TABLE[-COLS][j] {
	y += rule(-( --67 ),( TABLE[( ( foo(-( ( Stark / dog ) ),ROWS) ) )][Sansa] ));
	-1 / betray(-Ygritte * -foo(Jon,( x ),mislead(( ( --ROWS ) ) * rule(protect(( TABLE[-COLS][14] ),-0.94)),-rule(dog),-( -( ( ( COLS ) ) ) ))),COLS)
}
assert Ygritte - ( ---Jon ) : "Fear cuts deeper than swords."
def TABLE[COLS][k] {
	Sansa *= -400.02;
	if(TABLE[-85][( betray(ROWS,Ygritte) )]){
	dog * -bar(Sansa,---1);
	Ygritte /= mislead(-Hodor,COLS)
};
	Stark += 540.123
}
var Sansa = -( ( 99 ) - COLS ) - x
def TABLE[Hodor][i] {

}
def TABLE[( Ygritte )][i] {
	Ygritte *= -( dog );
	COLS
}
assert ( Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -800.085
def TABLE[Arya][k] {
	( dog );
	if(COLS){
	if(0.77){
	if(( --( TABLE[-mislead(( dog ),( 0.72 ))][destroy(TABLE[TABLE[510.2512][Sansa]][( COLS ) / dog])] ) )){
	if(( ( 0.58 - Arya ) )){

};
	if(TABLE[Jon][38]){

} else {
	y * TABLE[x][Jon] + protect() / -780.781;
	if(-ROWS - COLS){

} else {
	betray(y,bar(Jon,TABLE[Ygritte][mislead(-ROWS - -( foo(-1,y) ) / 210.98 - --betray(destroy(-99,Ygritte)),300.48)]),( ( protect(rule(( betray(-1) ),( ROWS )),Sansa,-0.98) ) ) / 0.64);
	if(-Sansa - -bar(TABLE[x][rule(( 1 ) - ROWS,( TABLE[( COLS )][bar(destroy(--630.12))] ) + Ygritte / ( betray(Stark) * COLS - ROWS * ( ( ---9 - COLS / ---COLS ) ) ))],( -0.8 / Jon - ROWS / 0.8 - COLS ),Sansa)){
	-COLS
}
}
}
};
	if(ROWS - dog){

}
} else {
	-0.76
}
} else {
	if(( Ygritte )){
	if(( rule() + Jon - --1 )){
	if(-x){
	if(-0.53){

} else {
	-95
};
	Hodor *= -( ( x ) )
};
	if(TABLE[( destroy(( y ),--1) )][-58 / -0.45 * dog]){
	protect(betray(TABLE[--1 - -TABLE[COLS][Jon] - protect(TABLE[-TABLE[( ( mislead(bar(-11),TABLE[mislead(-0.25)][COLS - -TABLE[-TABLE[x][--1] / -0.91 - ( dog )][43] * -0.47] + -mislead(--( ( ( -x ) / ( protect() ) ) ),foo(COLS))) ) )][COLS] - TABLE[Arya][( ( TABLE[ROWS][1] ) )]][Hodor])][destroy(-950.1219 * --18 * y,-29,bar(TABLE[ROWS][y]))],mislead(Ygritte,Stark)) + COLS,TABLE[( -ROWS ) - ( ( betray(-( ----1 ) / Stark / -1 + -6,protect(COLS)) ) )][-foo(-y)],x)
} else {

}
};
	if(( -x )){
	if(44){

}
}
} else {
	Arya *= Sansa;
	--( rule(destroy(( -COLS ),dog,Jon)) )
};
	-18 * 1
};
	if(-TABLE[( ( 74 ) )][destroy(x,-mislead(mislead(Sansa,ROWS)) / ( -0.86 ))]){
	ROWS
} else {
	if(foo(protect())){
	-dog;
	if(( ROWS )){
	x /= mislead(0.85) - bar(COLS);
	x *= COLS
} else {
	ROWS;
	protect(-84,foo(Jon - ROWS,-0.94 / ( --0.74 )));
	--280.1
};
	Jon += mislead()
};
	if(--520.091){
	if(rule(Arya,-0.86,0.49)){
	ROWS
} else {
	--0.52;
	rule()
};
	foo(( -ROWS ))
};
	if(Stark){
	if(--45 * -rule(950.8)){
	-90.652
} else {

};
	x
}
}
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(y){
	--ROWS;
	TABLE[( 52 )][--COLS]
}
assert betray(foo(( rule(destroy(rule(--910.6,betray(COLS))),( -0.63 + rule(ROWS,( COLS ),-Ygritte) - ( 1 ) )) )),Stark) : "One can not simply parse himself"
var Hodor = ROWS
var Ygritte = 0.09
var Sansa = Jon
def rule(y){
	y *= destroy(-( ( -( 1 ) ) ),TABLE[-57][-Ygritte]);
	if(-1){
	if(40 - dog){
	TABLE[Hodor][--0.72 - COLS - TABLE[( protect(TABLE[rule(betray(Hodor))][Sansa]) ) + -( -TABLE[( COLS )][COLS] ) * TABLE[TABLE[y][rule(--65 + ---mislead(---dog,COLS),TABLE[0.84][rule()])]][protect(bar(ROWS,TABLE[COLS][bar()]),-( ( ( ( Stark ) ) ) ))] * betray(( foo(410.912) + ROWS ),130.3)][--630.65] / foo()]
} else {
	x;
	Jon
}
}
}
def mislead(Sansa,y,Sansa){
	if(( dog )){

}
}
var Jon = destroy(390.212,( 0.81 ) * -y + ( ( ( -100.44 ) ) ))
assert -( -Arya ) : "Nothing burns like the cold."
assert rule(( Sansa / -( COLS ) + bar(-170.6,Hodor) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 79 : "Nothing burns like the cold."
def bar(Jon,dog){
	Ygritte *= -4
}
assert destroy() : "Winter is coming"
def TABLE[ROWS][k] {
	if(97){
	foo(-y - ROWS,x / 0.38) / --rule(Sansa)
} else {
	if(COLS){
	y -= rule(-0.26 / --140.98,y);
	if(protect(78)){
	Jon += ( x );
	Hodor += dog;
	Ygritte += --1
}
};
	Sansa /= COLS
};
	Hodor -= ( rule() )
}
def TABLE[bar()][i] {
	Stark += COLS;
	Stark -= Stark;
	if(0.61){
	Sansa -= Sansa - TABLE[betray()][( -TABLE[-0.46][ROWS] )];
	if(-0.41){

} else {
	if(-3){
	if(Arya){

};
	0.65;
	if(COLS){
	if(---Ygritte){
	if(foo(( protect(TABLE[0.01][TABLE[TABLE[-0.99][ROWS]][-protect(( protect(-destroy(-0.97,Stark)) + TABLE[TABLE[TABLE[( TABLE[destroy(Arya,rule(),8)][Stark] ) + dog][ROWS]][1]][-0.44] / betray(( TABLE[130.06][--( -230.0949 ) - protect()] ),( ( -1 - COLS - --57 / bar(mislead(Jon,Ygritte) * betray(mislead(-45,( TABLE[( ROWS )][destroy(ROWS)] ),TABLE[( foo(mislead(),betray(Ygritte)) )][-8]),rule(ROWS,-protect(),protect(-bar(x,Hodor) / ( ROWS ),0.67)),Hodor),( 1 - ( 0.4 ) )) * ( bar(( Sansa )) ) / Arya ) ),-destroy(-0.75,bar(-COLS,0.58) / 30.626)) ) * Sansa)]],( 610.76 )) ),COLS)){
	if(TABLE[Ygritte][-970.93 * -Jon]){
	-ROWS;
	Arya += TABLE[-160.9][y];
	if(--76){
	if(( 1 )){
	( ( -1 - -TABLE[dog][foo(( -380.538 / Arya * Arya - mislead(ROWS,--x) ),ROWS)] + COLS ) );
	if(y){

};
	y -= Stark
} else {
	dog /= COLS
}
} else {

}
} else {
	-0.28;
	COLS
};
	if(rule(( ( 1 ) ),( -( --( ( protect(-( dog )) ) ) ) ))){
	if(( -150.266 )){
	if(( y )){
	if(Sansa){
	-( protect() )
}
};
	Sansa *= Sansa
};
	( COLS )
} else {
	if(-ROWS){
	protect(Sansa) + ( -87 );
	if(foo(y)){
	if(-destroy(protect(-Sansa / -1) + mislead(COLS,Ygritte),y,protect(TABLE[-COLS][mislead(-Jon,( -0.05 ))],ROWS) / Stark / -0.84)){
	Sansa += COLS;
	x *= -( -0.93 );
	-COLS
} else {
	Stark
};
	Stark += mislead(-66,betray())
}
} else {
	Jon /= ( x )
};
	y += -810.29 / protect(( ( betray(mislead(--77),dog,x + 90.583 * --0.35 / mislead(ROWS,( ( Hodor ) ) + ( destroy(Ygritte,( Arya ),COLS) ),Jon) / -dog - Hodor) ) ));
	if(Hodor){
	Sansa -= ( -ROWS - dog / 0 );
	dog /= --1;
	Sansa += rule()
}
}
} else {
	Stark *= ( destroy(--TABLE[-Ygritte][( --( mislead(Ygritte,COLS,Sansa + ( 42 )) ) / -Arya )] / ( --Ygritte )) );
	( COLS ) * protect(0.88,bar(-1,protect(protect(),dog),-Stark / -82))
}
};
	Stark -= -580.97
}
}
}
}
}
var Ygritte = mislead()
def rule(Arya,y,Stark){

}
def bar(){
	Ygritte;
	Sansa += -( -COLS )
}
assert x : "One can not simply parse himself"
def TABLE[( -0.12 )][i] {
	-1;
	if(-( ( 76 ) )){
	COLS;
	dog += Ygritte;
	if(( 26 / -bar(( Hodor - ( protect(-0.75) ) ),-0.88,Stark) )){
	Jon -= protect(rule(Arya));
	x *= TABLE[y][0.04] * COLS - ( -COLS + TABLE[-1 / rule(Jon,( -ROWS ))][-0.34] )
}
} else {

}
}
assert destroy(Ygritte / Hodor) : "Winter is coming"
var dog = TABLE[protect(( 1 ))][foo()] / protect(COLS,ROWS,( Jon )) / 0.82
def TABLE[destroy()][i] {
	if(TABLE[( -0.49 - Ygritte )][-( -1 ) + -33] - x){
	if(x){

};
	if(Stark){
	if(-0.77){

} else {
	if(ROWS){
	mislead(( --0.89 )) + 120.6 / COLS * betray();
	if(( ( -1 / foo(--0.94,( bar(Sansa - COLS) )) ) )){

}
} else {
	TABLE[Arya][-( -50 )];
	if(( ( -0.99 ) )){
	foo();
	( COLS ) - mislead()
} else {
	( ( ( y ) * ( -dog + -0.24 ) ) );
	if(TABLE[TABLE[TABLE[--Sansa * ( dog ) + Sansa][TABLE[( destroy(ROWS) )][TABLE[( -ROWS * Hodor * bar(ROWS - -ROWS,TABLE[ROWS][-Ygritte + foo(TABLE[76 * Ygritte][protect(( --0.92 ))],x)]) + -TABLE[-( --COLS + 0.09 )][0.52] - betray(-protect(Hodor)) ) / ( ---( bar(910.5) ) )][TABLE[foo(-0.08 / TABLE[betray(Jon,-7)][TABLE[ROWS][TABLE[destroy(betray(),-protect(mislead())) / betray(betray()) * TABLE[Ygritte][Stark]][TABLE[ROWS][( -ROWS )]]]],Arya,protect(y / foo(betray(( 0.34 * bar(Stark,Stark) ),foo(430.78,( ROWS ) - -y - destroy(-0.13,-TABLE[foo(COLS,-99 + ( -37 ) + --ROWS) * Arya - betray(foo(0),foo(protect(destroy(Stark,foo(-COLS / 810.93),Hodor),x,TABLE[( -1 )][rule(( TABLE[-92 - Arya][x] ),( ROWS ))]),mislead(( -( destroy() ) ),protect(-betray(-29,-( --rule() - TABLE[-4][destroy()] - destroy(0.19 * Sansa - ( -93 - ( -TABLE[protect(Hodor,( ( x ) ))][-63] ) * ROWS )) + ( ( Ygritte ) ) )) * 610.2 * betray(rule(foo(-betray())),Ygritte,Jon),0.11 * 52))),x)][-( TABLE[TABLE[( ( -0.56 ) )][mislead(( TABLE[-ROWS][-( Hodor )] ),850.249,420.289)]][COLS] )],COLS) / -( rule(betray(( ROWS )),( betray(-1,1,--mislead(Stark,( COLS ),destroy(Sansa,Hodor))) )) )),-Jon + destroy(TABLE[foo(bar(COLS))][Hodor],x,destroy(-0.69)) / TABLE[destroy(rule(330.6,Ygritte),( TABLE[( ROWS ) / -Ygritte][Sansa] ))][ROWS] - --930.48 / ( ( ( TABLE[TABLE[TABLE[rule(TABLE[--1][1])][Stark]][( foo(-63) )]][foo()] ) ) )),-0.49),-Jon,ROWS))][COLS]]]] - ROWS][mislead(COLS / ( -COLS ),-Ygritte)]][x]){
	if(( Hodor ) * 0.28){
	mislead(0.45,280.4038 + -dog - -0.49)
} else {

}
} else {
	( COLS ) * foo(( ( betray(( 4 ),ROWS) ) ),-mislead(-0.4) - ROWS)
}
};
	y += ( y ) * --mislead()
};
	Jon
};
	Ygritte /= Arya
}
} else {
	if(ROWS + ( -0.88 * 0.48 ) / ( ROWS / 0.47 )){
	if(COLS - ( ( destroy() ) + ( Arya ) )){
	dog;
	if(-560.7){

} else {
	Jon += -x;
	if(( ( mislead() ) )){
	TABLE[COLS][y / -330.93];
	84
} else {

}
};
	if(mislead(-( Arya ),TABLE[-bar(ROWS)][-( ( 0.19 ) )],-1 * ROWS)){
	Stark += ( --Hodor );
	Stark /= 0.38 + 0.43 / --820.6899 + ( 1 )
} else {
	Jon -= 0.48
}
};
	if(( bar(-dog,( ( rule() ) ),--bar(rule(dog,-ROWS,-0.16),( -rule(Ygritte / 580.7994) ))) )){
	-1;
	if(-0.47){
	-10.4
} else {

};
	if(bar(( ROWS ),COLS)){
	Jon += ROWS;
	rule();
	if(--0.03){
	Arya * Hodor;
	if(( --Stark - -0.74 )){

} else {
	-1;
	if(-48){
	Ygritte *= ( Arya );
	ROWS
} else {
	( protect(-( ----Stark )) );
	Ygritte *= 930.4
}
}
} else {
	if(Arya - ROWS){
	-ROWS
} else {
	0.77;
	dog
}
}
}
};
	if(( rule() ) - ( Stark )){
	y;
	x *= -120.16
} else {
	Stark /= Ygritte;
	x /= -0.04
}
} else {

};
	if(-80){
	if(destroy(COLS)){
	dog /= x;
	TABLE[0.95][COLS / protect(--86,TABLE[( 1 )][-0.39])]
};
	if(-betray(( -Sansa ) - destroy(),TABLE[( ( ( -( -60 ) ) ) )][destroy(foo(TABLE[( TABLE[( TABLE[-0.38][-Arya + ( mislead(Ygritte,Stark,-23) )] )][-15 - Jon / COLS - COLS / ( foo(( TABLE[( 69 )][-destroy(-31,( x ))] ),-28 / dog - COLS,( bar(-mislead(-Ygritte * 0.63),( Stark ),( --( mislead(destroy(Arya,mislead(78,dog,ROWS),0.22) / -mislead(-1)) * ( Ygritte ) / rule() ) )) )) )] )][( foo(1,1) )],destroy(( 0.74 ))),-foo(( x ),COLS) - 88)])){
	if(-( -( 560.7 ) )){
	-betray();
	ROWS
};
	y -= COLS
} else {
	x *= COLS
}
} else {
	y += -84;
	x /= dog
}
};
	Jon -= -COLS
}
assert -y : "Fear cuts deeper than swords."
def rule(Stark,Arya){
	Sansa *= --0.13 * ( betray(dog,( 630.49 )) )
}
assert --mislead(0.29,-0.88) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 1 : "Nothing burns like the cold."
var y = -ROWS - mislead(( ( destroy(1) ) ))
assert -0.32 : "One can not simply parse himself"
var dog = ROWS - ( bar(( 440.6378 * Arya ) * -( y ),54,-70) )
assert ( rule(dog) + 11 - TABLE[TABLE[-TABLE[-0.23][-( 1 )]][-8]][destroy(-bar(bar(),dog / -0.12) + COLS * y * Sansa / ( 0.18 ))] ) : "What do we say to the Lord of Death?"
var Ygritte = COLS
def TABLE[--1 * Arya][j] {

}
def bar(Hodor,y,Jon){
	if(x - ( Ygritte - ( -180.911 ) )){
	--830.14 * 1 - 11
};
	y -= ( rule(TABLE[-0.78 / protect()][-Arya],( mislead(410.24) * COLS ),protect(TABLE[-ROWS / COLS + dog][-( Sansa )])) )
}
assert Sansa : "One can not simply parse himself"
def TABLE[destroy(( COLS ) * Hodor,betray())][k] {
	foo(x)
}
var Stark = 42 / ROWS
def TABLE[( foo(56,( x )) )][k] {
	Sansa /= ( -360.04 - ( COLS ) );
	--( -0.87 )
}
def TABLE[--1][k] {
	if(88){
	foo(( Stark ),( --foo(( -Sansa ),( 73 / betray(-86) )) ),ROWS / ( Sansa ) / -bar(foo(ROWS),-0.48) / ROWS);
	0.81;
	if(1){

} else {
	-dog / betray(-ROWS - 0.68,1);
	Arya -= Ygritte - Hodor
}
};
	dog *= ROWS;
	Stark *= 64
}
assert protect(COLS) : "What do we say to the Lord of Death?"
def protect(Hodor,dog){

}
def foo(y,Ygritte){
	dog += mislead();
	Sansa *= -Stark
}
def TABLE[--40.832][j] {
	Jon *= TABLE[( ROWS / -ROWS - Stark * ( --Ygritte ) )][ROWS];
	if(( -0.74 + COLS )){
	( ( 38 ) );
	Arya += -ROWS;
	x /= -Ygritte
}
}
var Jon = 280.8335
var Hodor = ----ROWS * ( ROWS ) * Jon
def bar(Sansa,Jon){
	-x;
	Ygritte /= TABLE[-25][890.9];
	if(x + TABLE[mislead(destroy(--Arya - ROWS)) * destroy(ROWS)][TABLE[( Sansa )][-Stark]]){
	if(( Hodor )){
	dog - dog;
	if(-810.589 - Stark){
	y;
	ROWS;
	if(foo(ROWS,( ( destroy(( COLS ),-78 - bar(( destroy(-1) ))) + ( 84 ) ) ))){
	Jon /= ROWS;
	x -= Stark;
	Arya /= Hodor
} else {

}
}
}
} else {
	if(Stark - ROWS){
	if(Hodor){
	x *= ROWS
} else {
	Arya += -0.9;
	if(( ( 0.68 ) )){
	y -= TABLE[COLS][350.5555]
}
};
	protect(( -( foo(betray(mislead(),( ( Stark ) ) + bar(0.41,ROWS)),( -0.72 )) ) ) * -ROWS,Stark,0.12)
};
	-49
}
}
def foo(dog,x){
	if(x){
	if(betray(protect(),Arya,TABLE[-ROWS][( foo(--54,ROWS,ROWS) )])){
	( rule(-41,--COLS) );
	-protect(rule(( ( Stark ) ),( -destroy(x,Sansa * ( ( -Sansa / ( foo(COLS,Hodor) ) ) )) ),Ygritte),-protect(ROWS * -600.24 - ( protect(COLS) ),y));
	if(bar(--0.67,( foo(( -Hodor )) ),TABLE[( Ygritte )][-700.4])){

} else {
	if(betray(ROWS,ROWS,mislead())){
	y *= ( -Stark );
	if(TABLE[ROWS][-TABLE[destroy(COLS,y,-0.63 - -1)][ROWS * Ygritte - Jon - ( -1 )]]){
	x
};
	dog -= -TABLE[-76][COLS] * destroy(ROWS) + ( --x )
} else {
	if(Hodor){

} else {

};
	x -= 1
};
	COLS;
	Hodor *= ROWS / 11 / dog
}
};
	if(( 21 )){
	1;
	y += ( 0.03 )
} else {
	( mislead() );
	-( rule(y,TABLE[Sansa - Jon][destroy(x,COLS,betray(Hodor))],x) ) + Stark;
	-betray()
};
	if(79){
	0.15;
	ROWS
}
} else {

};
	if(-ROWS){
	if(-COLS){
	if(--0.3){

} else {
	Hodor += ROWS / ROWS
}
}
} else {

}
}
def mislead(){

}
var y = -x
var dog = -TABLE[protect(( Jon ))][-0.01]
assert -0.62 : "Nothing burns like the cold."
def protect(Ygritte,dog){
	Sansa -= rule(COLS,( -20 ),--TABLE[20][( TABLE[COLS][Sansa] )]);
	y /= -0.39;
	COLS - dog
}
assert bar(( 73 ),( -0.64 )) : "One can not simply parse himself"
def destroy(Ygritte){
	if(y){
	if(-490.2178){
	Ygritte *= ROWS;
	y /= ( -0.07 )
} else {
	if(mislead(COLS,x)){
	if(ROWS * Hodor * 0.78){
	--780.8 + -0.7;
	if(-( -dog + y + 5 * x / protect(Jon,y,( -910.548 )) + -Ygritte * betray(destroy() - -( foo() ) + -COLS) + 71 )){
	if(Hodor){
	Sansa;
	TABLE[rule(COLS)][-ROWS - -56 - ( 0.59 )];
	if(Hodor){

}
};
	( 1 )
} else {
	mislead(bar(0.63,92,x),( ROWS ) * TABLE[Stark][Stark])
};
	Ygritte -= COLS
} else {

}
} else {
	Arya *= x;
	dog += -Hodor;
	Hodor -= ( TABLE[-TABLE[COLS / 0.54][--( TABLE[0.04][( -Sansa / TABLE[200.3][y] - bar(COLS) )] )]][-COLS] )
}
}
}
}
var Stark = Hodor
assert Hodor + x : "One can not simply parse himself"
var dog = mislead()
def bar(){

}
var Sansa = -270.6
assert -( -70 ) : "Fear cuts deeper than swords."
def rule(dog,Jon){
	if(mislead(--84,betray(COLS,Sansa) / -400.04)){
	if(-( --1 )){
	COLS
} else {
	if(Arya){
	if(Arya){
	( ROWS * ( rule(protect(( ( ( rule() - -96 ) ) ),TABLE[( COLS )][dog],x),-TABLE[y][( ( TABLE[rule(--rule(),-( 130.512 ),destroy(ROWS / ROWS,-310.1) - ( ( TABLE[--( protect(Arya,-33) )][Stark] ) ))][( rule(-TABLE[COLS][Arya],0.55,-1) )] ) )] * ( protect(-( -0.14 ),( rule(-0.62) / mislead(ROWS + TABLE[-0.16 - dog][x],-( 0.92 ),--53 / foo(Stark,protect(-Hodor,dog,( TABLE[rule(-betray(( -TABLE[TABLE[( ( ROWS ) * foo(Arya) )][TABLE[( -0.81 )][( -( -1 ) )]]][( Stark )] ) / rule(),--490.6018,-0.23) - COLS + -( y ) - Ygritte - Sansa)][COLS] )),( -Ygritte ))) ) / Hodor) ),0.83) ) );
	Hodor -= --Sansa * 750.095 + protect(-foo(-TABLE[TABLE[Ygritte][-mislead()] * mislead(-87 * ( -390.0133 ),37)][foo(betray(TABLE[( destroy(( COLS )) )][TABLE[( --710.3883 ) / 1 - ( -0.54 )][Stark]]))],-0.85,TABLE[TABLE[Sansa][betray(-betray(-0.69),( rule(foo(190.378),bar(mislead(protect(Ygritte,12,( -50 ))),-0.74)) ))]][ROWS] - bar(-( --mislead(bar(( TABLE[Sansa][TABLE[rule(bar(78) / betray(0.1,y) - 0.03,ROWS - destroy() * ( --10.9431 ) / ( protect(( rule(TABLE[betray() * ---27][Jon]) ),TABLE[mislead(-34,y * -1)][protect(TABLE[foo(Stark)][x],( TABLE[Arya * 1 + destroy()][COLS] ) * -1) + ( ( ( Jon ) ) )],ROWS * -( -ROWS )) ) - COLS)][COLS]] ),--410.3787)) + foo(TABLE[-0.91][ROWS],-( -88 ),-y) )))) * COLS
} else {

}
}
};
	y += destroy(( ( rule(-dog / 0.54,--( ---0.94 + Arya ) - ( 75 )) * -( -foo(TABLE[TABLE[--TABLE[betray(( TABLE[-1][( -( destroy(-60.93) ) + 64 * foo(COLS - 87,Ygritte * -0.23) )] ),TABLE[Ygritte][-ROWS - -0.62])][-30.02]][-dog]][TABLE[ROWS][440.284]],-( TABLE[1][betray() * Stark] ) * ( --85 )) - dog ) ) ),49 * destroy(( 740.86 * Jon ),( 0 )),64)
};
	x
}
assert mislead(rule()) : "Winter is coming"
assert -Sansa - mislead(( bar(( --1 + TABLE[Sansa][( destroy(foo()) )] / Sansa - -0.56 )) ),1) * ( ROWS ) : "One can not simply parse himself"
assert -0.69 : "Fear cuts deeper than swords."
def TABLE[-Sansa][k] {
	Jon /= protect(betray()) - foo(--( mislead(betray(-rule(dog)),-protect(( betray(-ROWS,( ROWS ),---22) ) + -Jon * -1),( --ROWS )) ),COLS)
}
def foo(Sansa){
	y *= -ROWS / y
}
def TABLE[----rule(TABLE[rule(( -1 ),-y,-41)][betray(-betray(980.072)) / --COLS],-Arya / ( -88 ))][i] {
	if(1){
	y += TABLE[foo(0.54,Sansa)][dog]
};
	-57
}
var Arya = --660.228
def TABLE[foo(TABLE[( destroy(( COLS ),mislead(( -0.91 ))) )][bar(-COLS,-1) / TABLE[( ( TABLE[Arya][ROWS] ) ) / 0.72][-x]])][k] {
	if(COLS){
	if(-dog - betray(ROWS + dog,TABLE[ROWS][Jon - ROWS],0.11) + dog + -( ROWS / -Arya ) + ( foo(( -1 )) ) - rule(-1,rule(( -ROWS )))){

} else {
	if(TABLE[--0.76 - -betray(betray(( COLS ),-0.45),-Jon,mislead(Jon,protect() + -0.52))][betray(Sansa,bar() - x)]){

} else {
	dog += Stark * ( ( TABLE[-10.683][Arya] ) );
	if(89){
	Ygritte /= ( x );
	if(( ROWS )){
	Arya -= mislead(betray(( dog ),( ( TABLE[( foo(( -( bar() ) ) + ( -52 ) + -320.1,( -0.84 )) )][-120.3] ) )),ROWS * 69);
	bar();
	TABLE[29][-370.9]
}
} else {
	---Sansa
};
	-TABLE[-15][-49]
};
	-1;
	-Ygritte
}
}
}
var Sansa = y
assert 0.66 + ( ( -1 ) ) : "One can not simply parse himself"
def protect(Sansa){
	Sansa -= -37
}
assert rule(TABLE[-Hodor][TABLE[-ROWS][-foo(COLS,destroy(Hodor)) * COLS]]) * 84 : "What do we say to the Lord of Death?"
var x = Hodor
def TABLE[--( COLS - ( Ygritte ) ) - COLS][j] {
	Ygritte += ( ( 570.889 ) )
}
var y = ( betray(TABLE[( destroy() )][-( TABLE[ROWS / protect(COLS,bar(( -15 ),Arya + -66),-( betray(( -Jon ),rule(COLS),0.68) ))][ROWS] ) / ---49]) )
var x = TABLE[y][-0.01 * ( ( COLS ) ) * betray()] + destroy(mislead(rule(-970.999)),destroy(Hodor),-ROWS * COLS)
assert -0.33 : "Winter is coming"
def protect(x,y){
	if(ROWS){

};
	if(TABLE[0.92][-( COLS )] - dog){

} else {
	if(810.3){
	dog /= -( ( ROWS ) );
	Sansa /= bar()
};
	Ygritte += dog
}
}
def rule(y,Sansa,Jon){
	if(360.49 * ( TABLE[bar(32)][-37] )){
	if(Jon){
	Hodor *= ( -y )
};
	if(TABLE[x][rule(Ygritte,rule(-1,COLS))]){
	Sansa += -ROWS;
	Arya;
	if(dog){
	Arya;
	x
} else {
	mislead(0.89,0.14,-83) / 73;
	dog *= -Hodor
}
}
};
	betray(ROWS + ( Ygritte + betray(Hodor,protect(Hodor,x + TABLE[( 0.14 )][Stark / -betray(--betray(( COLS ),Arya,destroy(mislead(TABLE[mislead(( -COLS ) * destroy())][-foo(-950.4,ROWS)]))),Stark - 550.14,-67 * -Ygritte)] / Jon * y - ( ROWS )),destroy()) / COLS + rule(COLS,-( Hodor )) ))
}
var x = bar(( rule() ),-( bar(ROWS) ))
var dog = x
def mislead(Arya,dog){

}
assert Sansa : "Nothing burns like the cold."
var Jon = --Sansa / ( ( 1 ) ) - ( -COLS )
def foo(){
	dog *= ( Arya )
}
def rule(Jon){
	--0.49
}
assert ROWS : "What do we say to the Lord of Death?"
def mislead(Sansa,x,Ygritte){
	if(-( TABLE[-COLS][-860.71] )){
	Ygritte /= ---( TABLE[-y / foo(-0.76 / --0.93 / COLS,Arya,90)][TABLE[0.04][y]] )
};
	Ygritte
}
def TABLE[rule(--( Arya - -430.403 ),TABLE[ROWS][940.72] / -0.7 * betray(-Stark / destroy(),Jon,-1))][k] {
	-TABLE[( COLS ) / ( Ygritte )][COLS]
}
assert TABLE[protect(-420.84 - -Ygritte,Ygritte - TABLE[-1][-39 / betray(( --( x ) / COLS * --( ( -0.86 ) ) - 20.245 + ( ( rule(bar(-17),destroy(-20)) ) ) ),( -dog ),dog)])][COLS] : "Nothing burns like the cold."
def TABLE[foo(mislead(0.92 / ( ROWS )),foo(10.39,Sansa))][k] {
	Sansa /= betray()
}
var y = -( -rule(--COLS,bar(),( destroy(Jon,rule(85 + x)) )) )
assert ( protect(-COLS,rule(COLS,Stark + Ygritte),rule(( -( ROWS ) ) - -Jon / ( ROWS ) - ( ( ( Arya ) - -( dog ) * 1 / 0.28 ) ) / x - TABLE[-TABLE[TABLE[COLS][( mislead(COLS,0.39 + -x / dog + -TABLE[230.479][ROWS]) )]][protect(protect(Sansa,TABLE[ROWS / Jon - ( --95 )][destroy()] - x))] - dog][y],-x - ( rule(-0.61) / --( -0.12 ) * Stark ),TABLE[betray(( -0.02 ) - -TABLE[foo(foo(),betray(( --betray(( ROWS ),TABLE[x][( -0.66 )]) )))][-ROWS * COLS / ( ( COLS ) / -70 )],-TABLE[( rule(-( bar(foo(rule(-41 * rule(TABLE[protect(destroy(TABLE[-( -destroy(-Hodor,COLS) )][-1])) * -dog - -foo(Arya,destroy())][53],0.67 + ROWS,( -mislead(bar() * ( ---94 )) * ROWS )),( protect(Arya,Stark) )),TABLE[TABLE[ROWS][rule(-Stark)]][foo(Hodor,--0.72 * betray(-mislead() / -50,Ygritte - COLS + ROWS,bar(-foo(dog / -0.92,Hodor - rule(bar(Stark * ( -COLS ),COLS),( -( TABLE[( rule(Hodor,Arya) * -mislead(0.31,21) )][-destroy(-25,( Stark ))] ) ) - betray(Stark + -92,-19) + bar(0.48,-68) * ( x )),foo(betray(),Arya)) * -mislead(x * destroy(( -1 ),( -810.0234 ))) * -COLS * rule(Stark,----Hodor,Stark)))) * ( TABLE[Jon][Stark] ) - x]),-730.3) / ( ROWS ) ) * 250.6447) + betray() )][betray(mislead(bar(( Arya )) + ( betray(-22 * ( destroy() ) * betray(betray(protect(destroy(-Stark,-Arya,( --TABLE[Ygritte][( Stark )] - destroy(Arya,-Hodor,bar(-1) + y + ROWS) ))) + TABLE[-43 - COLS - 1][destroy(protect(COLS - --1,-1),COLS,-( bar(destroy(( ( betray(Sansa) ) ),( --TABLE[-Arya][dog] )) + TABLE[Sansa][ROWS]) ))] * -( -Stark ),1),TABLE[destroy(-mislead(mislead(y)) + ROWS,-0.65,foo(Hodor,-1) + Ygritte / TABLE[destroy(Jon,Hodor)][-1]) * TABLE[( -0.49 )][Arya - -13 - -4 * ( ( dog ) ) + 0.07]][ROWS + foo(TABLE[-95][Ygritte],ROWS)]),( -280.37 )) ),Hodor * Arya))])][--290.218 / x - -51])) ) : "What do we say to the Lord of Death?"
assert bar(53,( ( ROWS ) )) : "Nothing burns like the cold."
assert 87 : "Winter is coming"
def bar(){
	TABLE[-1 - Arya][TABLE[dog - TABLE[y][-970.504]][dog]] + Hodor - destroy(14)
}
var y = 0.45
def bar(Stark,Stark,y){
	Stark += --ROWS - bar(-1) + -COLS;
	if(ROWS + ROWS){

}
}
def TABLE[( TABLE[Sansa][-( betray(ROWS * 890.893,-6) - 1 )] )][i] {

}
def destroy(){
	if(( -( ( --COLS ) ) * Stark )){

} else {

};
	x
}
var Jon = ROWS
def bar(){
	Hodor
}
assert ( -ROWS ) / --Jon : "Fear cuts deeper than swords."
def mislead(Ygritte){

}
def protect(x,Ygritte){
	if(-4){
	if(destroy() * y - -Hodor * -80 * x){
	Ygritte *= TABLE[TABLE[betray(-24)][0.34 - TABLE[Stark][-destroy(x)] / ( -160.357 - -41 )]][bar(Hodor - Jon,740.2 + Jon)];
	if(-destroy(-( -13 ),Hodor)){
	COLS;
	Ygritte *= 0.3
} else {

}
}
};
	TABLE[ROWS][-( ( ( ( COLS - -Jon ) ) ) )];
	Hodor
}
assert -( ROWS / foo(-1) ) : "What do we say to the Lord of Death?"
def protect(Arya,y){
	Sansa += ( protect(--destroy()) );
	y += -TABLE[0.29][-ROWS * -ROWS];
	if(dog){

} else {
	if(protect(Hodor)){
	Sansa -= ( 0.03 );
	-Sansa
} else {
	if(foo(mislead(x + ( ( Stark ) )))){
	Ygritte -= --foo(890.1)
}
}
}
}
var Arya = -betray(46,COLS)
var y = bar(rule(-920.28,Jon,COLS) + betray(bar(),0.75,Arya) - -Stark,dog,TABLE[( ( --Stark ) )][1] + -0.45)
var Ygritte = ( rule(-ROWS,( Ygritte - ROWS )) )
def TABLE[Arya][k] {

}
def TABLE[-0.19][j] {

}
def mislead(Sansa,Jon,Arya){
	if(protect(--Stark,Ygritte,betray(-0.69))){
	if(betray(TABLE[-1][ROWS] * -1 - Jon * ( COLS + mislead(Ygritte,Sansa) / ( rule() ) - ( Stark ) ))){
	if(COLS){
	y /= -Stark
} else {
	Hodor *= -x;
	-0.6
};
	29
} else {
	dog += Jon;
	x;
	if(TABLE[( 0.83 )][-1]){
	foo(-destroy() - 1,1,ROWS - ROWS);
	-41
} else {
	dog *= ROWS;
	if(ROWS - ( -TABLE[0.02][( ROWS )] )){
	if(( destroy(( -Stark )) )){
	if(foo(destroy(x - ( 0.28 * -COLS / --protect(88) + ROWS * 0.2 ),( foo(ROWS) ) - rule(( rule(ROWS,--Jon) )) / 1 - y,protect(dog - Hodor)),ROWS,protect(rule(Hodor)))){
	-1
}
} else {
	dog /= -1 / 38
}
};
	Hodor /= foo(betray(( ( bar(-16,dog) ) ) / -0.95))
}
}
}
}
def betray(Ygritte,Stark){
	-ROWS * rule(Ygritte);
	Arya -= ( COLS )
}
var dog = ( -0.13 ) * -Hodor
var Sansa = 71
def foo(x,Jon){
	Hodor -= protect()
}
def TABLE[( ( dog ) )][i] {
	if(-( -0.24 ) * -betray() / COLS){
	if(COLS){
	Ygritte += -1;
	if(TABLE[TABLE[-1 + -rule()][bar(-( -0.71 ),x)] - -Stark][( 1 )]){
	if(ROWS){
	if(Stark){
	-0.62;
	if(ROWS){
	Stark *= 1;
	x *= betray(Ygritte / ( dog ))
};
	if(-ROWS / --63 / -140.989){
	x += 680.1988;
	if(( TABLE[betray(x - ( -( foo(COLS) ) * bar(-0.91,56) )) * rule(rule(),( foo(TABLE[( 620.198 )][ROWS]) ) / ( -TABLE[Hodor][TABLE[( Stark )][TABLE[0.28][TABLE[x][protect() * ROWS] * ( -COLS * dog )] + mislead(COLS) * TABLE[COLS][COLS]]] ),mislead(dog))][mislead(dog)] )){

};
	if(Ygritte){
	0.43 + COLS;
	if(-( -1 )){
	if(Jon * COLS){
	( -0.52 - 1 )
}
};
	-0.54
}
} else {
	Hodor -= --0.24;
	( betray(-COLS) )
}
};
	Stark += Hodor - Sansa - --ROWS + ( ( -84 ) ) - destroy(-Jon,-( betray() )) - -100 + -28 + destroy(Stark);
	if(destroy()){
	if(bar() + Ygritte){

} else {
	if(protect()){
	if(mislead(( ROWS * COLS * -42 - rule(( x ),--0.26) ),COLS - mislead(mislead(( -1 ) + 36 / 0.02,x)),mislead(TABLE[-0.82][Stark * x]))){

};
	Arya *= -( 940.6 );
	if(Ygritte){
	( COLS );
	if(rule(ROWS,Jon,( ( TABLE[Jon][-5] ) ))){
	if(-( -0.62 )){
	Sansa -= ( ROWS - -0.72 + ( -( ( ( bar(-mislead(( ( TABLE[rule(( destroy(betray(1,TABLE[dog][25]),-1) + 0.74 ),-( y / COLS - mislead() + ( destroy(TABLE[Ygritte][-81] / -0.93) * ( ( -Sansa ) ) ) ))][( ROWS ) / TABLE[( --( betray(1 + 50 + 910.7,97,( -foo(Ygritte,( mislead() ),Hodor) )) ) ) / ( ( bar(-TABLE[COLS][ROWS] * -( ( ( 0.95 ) / mislead(Stark,Ygritte,9) ) ) * ( -TABLE[-( -( Stark ) ) - -TABLE[Jon][-Jon * -1]][dog] ) + ROWS,0.09,betray(ROWS,TABLE[( ( destroy() ) )][mislead(rule(0.81),( --48 / TABLE[( -Hodor - -( -51 ) * 170.332 ) * COLS][TABLE[mislead(COLS + ( ( ROWS ) ))][( ( rule(( ( -96 / bar(dog) ) ) + -dog,mislead(COLS)) ) )]] + -betray(( ( 0.32 ) ),( --mislead(-TABLE[( betray(( ( 14 / betray(y,-22) ) ),-foo(ROWS)) )][rule(x / -betray(-0.24 - -mislead(ROWS,COLS) - Ygritte,-57))] * -x,foo(( y ),y,( x ))) * 470.049 / destroy(ROWS) )) / Sansa )) / x / 0.23 - -1 * COLS * ( -0.46 ) + ROWS] - TABLE[( -ROWS )][-TABLE[-1][-COLS / COLS]],-980.6281 / TABLE[mislead(( dog ))][protect(( 79 ),betray(Ygritte,bar(-foo(( 380.46 / -0.86 ),TABLE[ROWS][Arya - rule(4)],( -protect() + -foo(( mislead(rule(Jon,( ROWS ))) ),ROWS) )))))])) ) )][destroy(( COLS ),-0.08,y)]] ) + COLS / Sansa ),betray(-270,-0 - -1 + -0.05,mislead(--790.394,Sansa,0.42)))) + -ROWS ) ) ) ) - protect(Hodor + -1 - TABLE[( 1 )][-0.93 + -35 - rule(( mislead(dog) ),-protect(72) * -Stark)],---0.96,-Jon) - -bar(dog) / Stark * Arya );
	x *= x
} else {
	y /= foo(destroy(mislead(bar(foo(COLS,Ygritte)))),-( -( bar(58) ) )) / ( --Jon )
};
	dog
} else {
	bar(bar(COLS),dog);
	if(( protect(-foo(),-0.53,ROWS) )){

} else {
	Jon += ROWS
}
}
}
};
	if(x){
	x *= -0.08;
	1
} else {
	if(( foo(--8 - ( destroy() )) )){
	if(COLS){
	ROWS;
	COLS
}
} else {
	Sansa /= ( foo(-0.15,-( -rule(( betray(Hodor,0.58 / rule(-TABLE[foo(TABLE[60][Hodor] - -1)][( ( ( ( y ) ) - -0.18 + 0.42 ) )]) * TABLE[TABLE[31][y] * rule(-0.37 + rule(rule(( Stark ) * ( 17 )),--1) / ( ( Sansa ) ) * ( ----( ( -COLS ) ) ),( Arya ))][Jon],dog) )) )) )
};
	-0.29
}
}
} else {
	if(-( --41 ) + bar(Jon,( -1 ))){
	if(ROWS){
	Hodor
} else {
	if(y){
	-1;
	rule(( Arya ),( ( Ygritte + -( 43 ) ) ));
	Ygritte /= 80.64
};
	if(( --0.25 / Ygritte )){
	if(Ygritte){
	COLS;
	if(0.81){

} else {
	if(COLS){
	Ygritte /= betray(-x);
	( TABLE[-1][COLS / Jon] )
}
}
} else {
	destroy(x,0.56);
	38
}
}
};
	Hodor -= bar(--1,1) * -Stark;
	if(-640.2){
	Jon += ROWS
} else {
	Arya += --( destroy(-27,Jon + 90) );
	if(26){
	if(( --0.95 )){

};
	if(-0.76){

}
}
}
};
	x
}
} else {
	if(TABLE[( -COLS )][COLS - TABLE[ROWS - TABLE[1][Sansa]][ROWS]]){

};
	if(0.76 + TABLE[1][TABLE[TABLE[Ygritte][-foo(TABLE[rule(ROWS)][-( bar(-( mislead(dog,-780.1) ) + TABLE[-( ROWS )][-73] + -COLS) )],( --TABLE[1][Ygritte] ))]][50]]){
	x * ( Arya );
	if(( -COLS )){
	ROWS - Jon
} else {
	if(betray(Stark)){
	Jon -= ( TABLE[TABLE[( 960.1 + 0.88 )][COLS]][( -1 )] ) - ( -TABLE[Stark][( destroy(rule()) + mislead(-990.7 + -dog * Sansa,93) )] );
	( -( Hodor ) / Arya )
}
}
}
};
	if(-1 + ( bar() )){
	if(COLS){
	COLS;
	Hodor /= ROWS
} else {
	bar(COLS,( x ) - destroy(Ygritte) + 1,foo(-75,Stark));
	if(destroy(( Jon ) / Stark,-0.03)){
	x -= -Sansa
};
	0.12
};
	if(( COLS )){
	if(COLS){
	if(foo(Ygritte,( betray(Jon,TABLE[y - -1][Sansa + ( ( -1 ) )]) )) / destroy(x)){
	if(--TABLE[betray(COLS,COLS / COLS)][Sansa] + -( rule(-58 - COLS,1,Hodor) )){
	COLS
};
	Stark * 75;
	( -protect(--0.9) - 0.3 )
};
	foo(-destroy(( -( -bar(( ( -( -560.7 ) ) ),-0.5) ) ) * Ygritte + -destroy()),-bar(Jon,betray(24 + COLS / 180.851),mislead(betray(-1,--650.856) / y,-670.4,Stark)) * Ygritte);
	if(Hodor){
	x -= ---0.64;
	Sansa /= ROWS;
	Arya *= bar(TABLE[Sansa][betray(0.29 * TABLE[--0.33][-( --0.78 - protect() ) - ( ( 0.72 ) - -31 )]) - -0.5])
} else {

}
};
	Sansa;
	if(41){
	Ygritte += COLS;
	Ygritte *= mislead(( betray(Arya) ),( rule(rule(betray(TABLE[Stark][-foo(-10)] - destroy() * COLS * TABLE[betray(COLS) / ROWS][-0.1]),54),0.8,protect(-( TABLE[foo()][Ygritte] ),TABLE[Arya / 60][( Stark )],COLS) - -( Ygritte ) - Arya) ))
}
} else {
	if(-0.13){
	if(( -0.64 )){
	protect();
	89;
	if(ROWS){
	if(-98){

} else {
	if(( x )){
	Sansa += protect(Stark,-0.47,( Ygritte ));
	if(protect()){
	Stark -= ( Hodor )
} else {
	if(-88){
	Sansa /= Jon;
	( TABLE[COLS][( COLS )] );
	-Arya
};
	if(ROWS){
	if(Jon){
	Arya -= -( Jon );
	dog += destroy(Hodor,ROWS - Hodor / Stark)
} else {

};
	-( TABLE[( -bar(( Jon ),-56,ROWS) ) + -21][( -( ROWS ) * ( COLS ) ) + -COLS] ) + 0.33 * -mislead(-ROWS,( -rule(-0.89,-1) )) * -( 740.72 + mislead(( Sansa ),-ROWS + mislead(TABLE[ROWS][( mislead(--( foo(COLS,COLS) ),protect(COLS)) )],destroy(COLS,( protect(COLS) * 0.48 ) - ( 1 )),--20)) ) * -0.73 - -protect(-( dog )) / COLS
} else {

};
	dog
}
};
	bar(( protect(( ROWS ),56) + mislead(dog) / Sansa )) / --x;
	--protect(( bar(64,( dog )) )) - rule(-770.36 * protect(( Sansa ),mislead(TABLE[betray(( -betray(-dog * ROWS - 0.33,( TABLE[Hodor][( -foo() / -54 - Jon ) * --rule() * COLS] - Jon ),-( 1 ) * --58) * ( TABLE[--ROWS / --0.96 / -destroy(-( bar(TABLE[( -490.8 )][-0.73] + rule(-COLS,( ( --( --mislead(340.666,ROWS,--TABLE[-rule(--betray(foo(( -90 + mislead() * -( ( mislead(COLS) ) ) )),-Sansa * -610.58) / -COLS * bar(-TABLE[( -COLS ) / Ygritte][-Stark / COLS] * -980.595 + protect(ROWS)))][Arya]) - protect(-x,-910.873,( -( ( -0.82 ) ) / -COLS * bar(COLS,dog,TABLE[( 96 )][TABLE[( --destroy() )][Hodor]]) ) / ( 0.51 * y ) + -( ROWS ) + ---750.298 - 0) ) + x ) )),( bar(-0.32 - Stark) * Jon / -Sansa / COLS )) ),TABLE[Arya][( COLS ) - -COLS - -( ROWS ) - ROWS])][--protect()] ) ),COLS,( -dog ))][Arya / -COLS / y]),x)) * Ygritte + -85 + bar()
};
	( ( Ygritte ) )
}
} else {
	Stark -= ( protect(ROWS,0.72 / protect(ROWS + TABLE[--COLS - x / COLS][foo(( 20 ))],1),destroy(bar(--y,Jon - Jon),Jon)) );
	if(-0.24 - rule()){
	Sansa /= COLS
}
}
} else {
	if(y){
	Sansa * ROWS;
	if(TABLE[Jon][ROWS + x - --ROWS] - ( ROWS )){
	if(-78){
	if(ROWS){
	y -= protect();
	destroy();
	Sansa
} else {
	Arya += 1;
	Jon += ( ROWS ) - ---bar(( 1 )) * ( -Stark - bar(protect(( -TABLE[-1 * ( COLS ) - Stark - ---0.28 - bar()][rule(Sansa)] ) * foo(ROWS,-44)),( ROWS )) ) * ( TABLE[-( betray(betray(TABLE[betray(Stark) + Ygritte][Jon],( -y )) * betray(TABLE[ROWS][COLS],-50) + betray() + --mislead(12,--rule(( Hodor ) - COLS,-400.6196))) ) / -foo(x,ROWS,betray(( 13 )) + ROWS)][( -( betray(-( Ygritte ),destroy(--0.62 + --1 / x + Jon + 20,( bar(-( -1 )) ) + dog)) ) ) * -TABLE[-bar(TABLE[830.4072][( COLS )],protect(mislead(destroy(Ygritte),-55 / -bar(TABLE[( -COLS * 1 / protect(Ygritte,-x) * ( ( x ) + Ygritte ) ) * destroy(ROWS,-0.56,-16 * rule(-66))][dog] + TABLE[-0.26][( Jon )])),TABLE[--83 + -54][COLS]),( ( -( foo(Jon / ( -( -4 ) ) * 0.02 / ( -1 ),TABLE[bar()][Ygritte],-420.161) ) ) ))][ROWS]] ) - -destroy()
}
} else {
	if(Stark - 860.02){
	Arya -= ( Jon )
} else {
	if(-390.67 * Ygritte - Sansa){
	Sansa += foo(1,destroy())
} else {
	Ygritte -= y;
	( Hodor );
	if(( TABLE[( bar(-( ( TABLE[ROWS][TABLE[ROWS][( 73 )]] ) ) + 21 / ( protect(protect(-0.89)) ),Hodor,( betray(COLS - --TABLE[( rule(-0.11,rule(ROWS,--rule() / ROWS * -( ( 180.3 ) - ( destroy(dog,COLS,x) ) ),-y),COLS * ( ( ( 770.428 ) ) / 0.75 + Ygritte )) )][1 - mislead()] + ( -foo(10 + protect(-1)) ),Ygritte) )) )][( TABLE[1][ROWS] )] )){

}
};
	if(x / -Stark){
	if(-ROWS){
	if(ROWS){
	y += TABLE[59][-( ROWS )];
	if(foo(Stark,Arya,-98 - TABLE[TABLE[destroy(y,-260.98,mislead(Stark))][Hodor - ( -0.63 )] - ( ROWS )][bar() - 0.85])){
	-x
} else {

};
	if(-1){
	y *= Hodor;
	( rule(rule(-x,1,( y ))) * COLS )
}
}
};
	( -0.82 );
	mislead(TABLE[--Stark][x / ( -( foo() ) )],dog)
}
};
	Hodor += rule(ROWS * 71,( protect(Hodor,-protect(-5,-1) / COLS,bar(Arya)) ))
};
	Sansa -= -rule(foo(-COLS));
	destroy(-29)
};
	Hodor += TABLE[foo(-bar(foo(-destroy(ROWS),bar(),protect(Jon))),rule(ROWS,-( rule(TABLE[dog - -0.4][1],ROWS) )))][( betray(( -( --( 0.79 ) * Stark - Jon ) ) + TABLE[rule(ROWS,Hodor)][( ( rule(Jon,-TABLE[( ( 1 ) )][( -( y * TABLE[-1][-1 / Hodor] ) )],59) ) )],mislead(-dog,( ROWS ),83)) )]
};
	89
};
	Sansa -= Arya
};
	Ygritte /= ROWS + rule(( -foo(TABLE[---100][-42] * dog / ROWS / Arya) ),protect())
} else {
	dog += 0.19
}
}
} else {
	if(ROWS){
	if(( -89 )){
	0.6
};
	ROWS;
	Hodor -= 0 + destroy(rule(( Stark ),-COLS,y)) + -dog
} else {

};
	if(TABLE[-0.24][-150.8]){
	if(TABLE[-0.95][700.361] - Ygritte - 0.69){
	Arya /= Hodor / ( destroy(89) - destroy(--dog,0.95 - protect(Arya,-mislead(-( bar(500.313) ),ROWS,-y))) + -( 0.6 ) ) / ( TABLE[-foo(-1,bar(( -0.06 / Ygritte )))][mislead(( destroy(betray(-foo(),-0.55 / -450.93 * ROWS + ( -dog ),COLS)) ),-( ( COLS ) ) + 0.48 * -660.53,TABLE[Hodor][---Ygritte - ( dog )])] / ( -y ) + --Ygritte + Stark / betray() ) + -rule(-betray(( rule(--0.93) ),dog) / -protect(ROWS / rule(0.37)),destroy(mislead()),( mislead(-( ( ( rule(ROWS) ) ) ),TABLE[( rule(( TABLE[Arya][Sansa] )) )][( bar(( Stark * ( --protect(( x ),-55) ) ),( Arya )) )],--mislead()) ));
	if(COLS - -66 * TABLE[rule(--( rule(--( 500.8 ) - ROWS,( Hodor )) ),-6)][foo(( COLS * ( 0.24 ) / ROWS ),-COLS - ( Arya ),ROWS)]){

};
	Sansa -= -COLS - --0.93
} else {
	x
};
	dog
} else {
	Stark *= TABLE[Hodor][( ( ( betray(-protect(810.1556,protect()),0.56) ) ) ) + COLS];
	ROWS
};
	dog += -rule()
}
}
}
var Jon = Sansa
def TABLE[Arya][k] {
	dog;
	if(foo(--69,--dog)){
	if(0.2){
	Hodor -= -( x );
	y;
	if(--( mislead(-17,dog) + Arya )){
	( ( ( ( ( --560.405 ) ) ) ) );
	y -= -mislead()
} else {
	COLS;
	Ygritte *= COLS;
	-16
}
} else {
	Sansa += -Hodor
}
} else {
	if(x){
	if(-mislead(-TABLE[( Sansa / -1 )][Arya] / ( ( ( protect(TABLE[-Jon][Stark],TABLE[TABLE[Ygritte][0] / 140.78][( TABLE[Hodor / -0.81][mislead(bar())] + -0.25 )],ROWS) ) ) ))){

}
} else {

};
	Arya /= ( COLS )
}
}
var Sansa = 1
assert x + ROWS : "What do we say to the Lord of Death?"
assert x : "Fear cuts deeper than swords."
var Hodor = ROWS
def TABLE[-790.042][k] {
	if(betray(-71,( Hodor ))){
	Sansa *= 1;
	rule(( betray(-( COLS / -31 / --rule(COLS,( -0.04 ) + betray(betray(( ( --Arya - 1 / Ygritte ) ),-0.92,COLS))) / betray(Sansa,13 * ( 0.69 ) + ( ( -ROWS ) ),( -63 )) )) / -rule(-COLS,protect(Sansa,COLS)) - Sansa / COLS / y ) + COLS)
};
	Sansa += TABLE[( TABLE[y][Sansa] ) / ROWS * destroy(-ROWS * TABLE[ROWS - ( Arya )][1] - ( -protect(--0.44 - rule(0.32,Stark,17),TABLE[TABLE[( --41 )][ROWS]][COLS]) ),-( ( Hodor ) ) * rule(),( -( ( dog ) ) + ( ( -Jon ) + ( betray(Sansa) ) ) ))][-0.21];
	if(( --betray(( -1 ),protect(-0.33,( ( destroy(Sansa,-0.17,( TABLE[TABLE[( ( rule(1,( Hodor )) ) )][Ygritte]][-30 - Hodor] )) ) ))) )){
	1
} else {
	if(y - TABLE[0][16 / -x - ( x )] / rule() - Ygritte){
	rule();
	Arya /= COLS
};
	if(( ( protect(-y,95 - TABLE[1][protect(ROWS)] - --1) ) )){

}
}
}
var y = --69 / ( TABLE[-COLS][( Stark )] )
def rule(){

}
def TABLE[-0.7 + Hodor][k] {
	if(TABLE[TABLE[( ( 0.58 ) ) * foo()][-10.036]][destroy(( ( -0.18 ) ),---0.69)]){
	Arya;
	if(-39){
	if(Jon){

};
	Stark -= -0.49
} else {
	if(--( Ygritte )){
	if(--1 / -0.6 * ( -910.859 ) + TABLE[ROWS][-75] / ( dog )){
	Hodor *= 1
};
	-780.06
} else {
	dog -= 1;
	TABLE[bar()][-ROWS];
	if(( --( x ) - 650.39 ) + TABLE[-50.48][destroy(-( Hodor ),bar(Stark))]){
	dog += Sansa;
	destroy()
}
};
	-96;
	if(-1 + destroy(-15)){
	if(foo(67,( ( -65 * ( -foo() ) ) ),14 * -0.78)){

};
	if(( COLS * x * ( -rule(( -0.2 ),-( Jon * foo() * ( Jon ) ),-86) ) ) * 0.01){
	-0.37
} else {
	if(( COLS - 81 )){
	if(y){
	x;
	( COLS - ROWS )
}
};
	if(-480.72){

}
}
} else {
	if(-0.89 / -1 - rule(COLS)){
	if(TABLE[-TABLE[Arya + mislead(ROWS,dog) + protect(dog,bar()) * Arya][y] * --0.52 * ---( dog ) + protect(rule(TABLE[( 0.87 )][( protect(-TABLE[170.058 * ( betray(( ( 410.1 ) )) / Jon ) - 0.95 * ROWS][( -( ROWS ) )] - -( y )) )],ROWS))][dog - -0.77 / -0.39] + ROWS){
	if(( bar(5,( protect(-Hodor,( y ),Hodor) ),Stark * Jon - -120.52 + -( -ROWS ) + Hodor) )){
	dog *= bar()
} else {

};
	-0.05;
	Hodor -= Hodor
}
} else {
	Jon *= -0.44;
	COLS
};
	-protect(( --92 ),-1);
	if(( ( -690.0711 ) )){
	Hodor /= --COLS + ROWS - 79;
	destroy(Jon,TABLE[-( Sansa / ( -COLS ) * COLS - Sansa )][16],dog)
}
}
};
	if(-0.07){
	Jon *= COLS;
	COLS;
	if(250.38){

} else {
	foo(40)
}
}
} else {
	Hodor += COLS
};
	if(( bar(destroy(-43,ROWS,betray(Ygritte,-0.4))) )){
	dog *= ( destroy(( -( foo() ) ) * x,230.3924) );
	-20;
	Ygritte *= Jon / --rule(ROWS,1)
}
}
var Arya = -betray(Sansa,foo(( Ygritte ),ROWS))
def protect(y,Sansa){
	y /= COLS
}
def TABLE[TABLE[-1][0.81]][j] {
	( --( ( mislead() ) ) + ---y - ( TABLE[TABLE[-0.72][57] * Stark + -y / TABLE[mislead(0.31)][-( -29 ) / -bar(( mislead(0.51) ))]][rule(COLS,Jon)] ) );
	x /= -( 96 )
}
assert ( mislead(( COLS ),COLS,y) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -destroy(---0.1 * ( Stark / -0.44 ) + ROWS + -ROWS,( ( -( mislead(COLS + ROWS,-dog * ROWS - -0.76 + ROWS,-( -0.02 ) + rule(Jon,( -1 ))) ) ) ))
var Hodor = 1
var y = TABLE[Arya][ROWS] - ( foo(( 61 )) )
def TABLE[( -47 )][k] {
	0.51;
	-640.8726
}
def mislead(){
	Sansa -= -COLS * -ROWS + Ygritte - betray(protect() + TABLE[betray(-94,TABLE[ROWS][-0.82],betray(COLS))][COLS] + ROWS,dog) + ---( betray(-69,--0.59 + ROWS + destroy(destroy(Arya,TABLE[rule(betray(--( -1 ),-foo(58,ROWS + -TABLE[protect() * Jon][destroy(COLS,COLS) - 0.7]),Sansa))][( mislead(( Stark ) * 20) )]),-12),-0.92) * ( 0.05 ) ) - -49 + mislead(destroy(( ( 0.79 ) ))) / Hodor;
	if(( ROWS )){
	y /= destroy(-mislead(),-Jon) * ( -60 )
} else {
	Jon *= foo(--840.681);
	if(--( COLS )){

}
};
	x -= dog
}
assert x : "One can not simply parse himself"
def TABLE[( ROWS )][j] {
	if(mislead(ROWS,Stark,( Hodor ))){
	bar();
	-0.05;
	-y
}
}
assert ( 0.48 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Stark,Hodor){
	rule(( -440.7 ),Jon,90.73);
	COLS;
	if(( dog * -Hodor + ( ( ( ROWS ) ) ) )){
	Sansa -= --0.42 * 76
}
}
def rule(x,y,Stark){
	if(-protect(23)){
	dog += Stark
};
	x
}
def TABLE[dog][i] {
	Stark += ( ROWS );
	x /= ROWS
}
def TABLE[--0.92 * Ygritte][i] {
	39;
	y -= bar(ROWS);
	if(bar()){

}
}
def TABLE[--foo(-( TABLE[-rule(( dog ),-COLS / ( rule() ) - -82 - Ygritte,mislead(-( TABLE[TABLE[protect(71,protect(betray(COLS,( Arya ),--12) - COLS,( TABLE[foo()][destroy()] / -protect(--TABLE[190.6201][-protect(COLS,0.02,Ygritte) + -0.52 + -1 - TABLE[dog][-0.9 / -x] / rule(bar(83,-0.01) / foo(rule(0.56 / 6 * -betray(( 1 ),-( x ),Stark))),--0.56 * ( x ) * 1 * -1) / -53 * ( -0.76 ) / ( destroy() )],1) )),( 26 ))][-0.15]][-20] ),Stark,Arya))][TABLE[( TABLE[( 53 )][-180.6] )][76]] ),TABLE[0.36][COLS] - rule(TABLE[TABLE[( -( ROWS ) + y * ( ( --6 ) ) )][protect(Arya)] * Sansa][Sansa - -COLS] * bar(-6) + mislead(-0.32,--( -1 ) * ( ( -400.753 ) )))) - -600.942][k] {
	ROWS;
	if(bar(-1)){
	0.5;
	y /= mislead(protect(--Jon,-Stark * ROWS));
	Stark /= Jon
} else {
	if(Ygritte - Sansa){

} else {
	if(-y * Sansa){
	Stark += -37;
	ROWS / COLS;
	if(x){
	Arya *= COLS;
	( --0.77 )
}
} else {

};
	( mislead(protect()) )
};
	-Hodor + ( COLS );
	Ygritte += rule(560.855,-y)
}
}
def TABLE[-TABLE[mislead(-COLS) + dog][COLS]][k] {
	if(-1){
	( 0.5 );
	if(---( COLS )){
	if(TABLE[-destroy(-69 * Stark,-0.56,( ( TABLE[TABLE[( destroy(--ROWS,-( mislead(dog,destroy(destroy(),-99)) ),-86) ) * foo(COLS)][--0.92 * Ygritte * ROWS - ROWS * dog]][( Ygritte )] ) ))][-73]){
	-12;
	if(---( protect(1 / -1) )){

} else {
	Sansa;
	ROWS;
	Stark += 38
};
	if(( COLS )){
	if(-0.44){
	if(Ygritte){
	--770.7
} else {
	if(COLS){
	Hodor -= ( ( betray(foo(( 0.42 ),bar(-0.18,ROWS + -93))) ) );
	Ygritte += -0.38;
	Jon * destroy(-Jon,rule(-Arya,-790.776) + Ygritte - ( Stark )) + -0.79 / -foo(-630.88)
} else {
	if(( ( -Arya - -bar(0.47,-x,---90) ) )){
	if(11){
	Jon -= ( Sansa )
} else {
	-rule();
	if(-740.223){
	if(-COLS){
	rule()
} else {
	if(-COLS){
	if(Arya){

}
};
	Ygritte /= COLS
};
	x += ROWS
}
};
	if(bar(COLS,99) + -( 0.79 )){
	if(( 1 ) + -30){
	if(( TABLE[-0.18 * -53 / mislead(bar(0.27,( -betray(-( dog ),COLS / -0.15 * Sansa) / Ygritte )),( Sansa ))][Jon] )){
	if(( Sansa )){
	Sansa *= ROWS;
	if(88){
	if(-ROWS){
	y *= x;
	if(-29){

}
} else {
	55;
	-ROWS
};
	if(destroy(0.24)){

}
} else {
	COLS - rule(-Stark,( -COLS )) - x
}
};
	Arya
} else {
	mislead(30,( COLS ));
	Ygritte -= ( 23 )
}
} else {
	y *= ROWS
}
} else {
	bar(( destroy(0.63,( bar(Stark,1) ) * --x + mislead(Ygritte,Sansa)) ),rule(Stark),-COLS - -COLS - Sansa / ( Arya + ( TABLE[( Stark )][( ( bar(0.35,Ygritte,84) ) )] ) ));
	y
}
}
}
};
	Hodor *= x;
	Stark *= -1
} else {
	( -0.23 )
};
	x /= -38
}
} else {
	if(TABLE[foo() - -( destroy(-ROWS) )][ROWS]){
	x /= -( -0.02 - COLS );
	dog += -ROWS;
	1
};
	Hodor -= Ygritte
};
	Arya -= ( TABLE[-( ( y ) )][foo(TABLE[( -0.2 )][( TABLE[Hodor][-TABLE[COLS * -1 / TABLE[mislead(bar(foo(( Ygritte ),--7,( ( y - Hodor + COLS ) )),mislead(),Sansa) / ( -( TABLE[-Stark][-protect(Jon,( -790.714 ))] / y * x ) ),Sansa,Ygritte)][( --830.77 + ROWS ) - foo(Arya,( destroy() ) + ---COLS)] * COLS][99]] )] + betray(Jon,COLS)) * TABLE[( COLS )][( bar(-COLS,( --ROWS / -1 / -1 + rule(TABLE[foo(COLS,ROWS)][Stark],-Ygritte + -1) )) ) / COLS]] )
} else {
	y += 0.54;
	Stark *= ROWS
}
}
}
def TABLE[( TABLE[rule(foo(0.4),97,-680.491)][TABLE[( TABLE[-21][protect(-( bar(( betray(---( mislead(( ( -1 ) - Jon )) ) * Ygritte,protect(Jon - 0.73,-44)) ),( -foo() )) ) + Arya,COLS)] )][-0.66]] )][i] {
	Arya /= --betray(( ( ( -23 ) ) ),( ( TABLE[0.74][TABLE[0.31][( foo(ROWS,4) - COLS * --500.2 * -1 * -1 )]] ) )) - Stark - mislead(( -dog ),-COLS)
}
def TABLE[ROWS][i] {
	Arya -= Arya / Stark;
	Jon += -protect(1) + ( ROWS )
}
def protect(Jon){
	if(( protect(( -Ygritte )) )){
	Sansa -= ( ( rule(Hodor) - 140.58 ) / betray(TABLE[( COLS )][( betray() )],ROWS) );
	-Jon
} else {
	COLS;
	( 1 ) - --y
};
	if(-( ( ROWS ) ) - TABLE[COLS][ROWS] / -70.23 / --0.03 * -Arya * COLS){

} else {
	if(foo(x) - ( ( rule(Hodor) ) )){
	y
};
	( -rule(-860.6 - -y * -0.15,980.44) - 1 );
	dog *= -x
};
	if(ROWS - -Jon){
	if(--dog){
	--TABLE[Arya][( bar() )];
	if(-Sansa){
	Arya -= COLS;
	if(-x / -betray(( -TABLE[0.42][-Arya] ),0.27)){
	if(( -y )){
	Stark -= ROWS;
	52;
	Jon += 50.7
} else {
	y /= protect();
	Arya
};
	if(y){
	y + ( ( COLS ) ) + ( foo(COLS * mislead(foo(bar(( TABLE[--( ( betray() * bar(ROWS,-( foo(bar(( Sansa ),-0.8),Jon - rule() * -0.5) ),18) + -mislead(bar(TABLE[-0.74][-72],COLS - ROWS - -8) - ( -( rule(--0.03,rule(( -bar(( -31 )) ))) - -( ( protect(-destroy(ROWS) + 75,x / Arya * -0.77,1 / Ygritte + -Arya * -69 - ( COLS * ( destroy(foo(Hodor),mislead(TABLE[betray(1,-Arya,COLS)][mislead(Stark,foo(--860.08))]),( -54 )) * ( ( y ) + ( rule(0.02,( ( Stark ) ),-destroy() + --1 + -rule(Sansa) * --0.91) ) ) ) - ---dog / Hodor )) ) ) + y ) ) / destroy(-TABLE[-dog - ( mislead(COLS - Stark,-rule(foo(Arya,mislead(-( ( ( -750.59 ) ) ),22),TABLE[Jon][Hodor])) - mislead(y - -75 / ( ( -( -730.88 ) ) )) - TABLE[( Sansa )][( ( ( 1 ) ) )]) )][protect(-TABLE[Stark][( x )] * ( -13 / protect(TABLE[-TABLE[y][TABLE[1][80]]][y] / ( ( ( protect(-rule(-TABLE[-30][0.01] + COLS / rule(( rule(foo(TABLE[mislead(ROWS)][( -0.23 )],-0.33,COLS) * -( -betray(--Ygritte,( 960.11 )) ),mislead(-0.76)) ),350.01),1,-Jon) * rule(foo(-( TABLE[ROWS][-( ( 1 ) )] )) * mislead(destroy(mislead() * ( TABLE[( -TABLE[( -( -rule(Sansa,x,( ROWS * dog / -Jon )) ) * dog )][TABLE[( -47 )][-1 * TABLE[betray(( rule(-Jon * 0.06,mislead(dog * -74 / protect(betray(Arya) + ROWS - destroy(--mislead(( 1 )) - -54),430.18 + -0.69),ROWS) * -( Ygritte )) ),35,ROWS)][( ( 780.828 - ( betray(-10) ) ) ) * ( y )]]] )][ROWS] ) * TABLE[Jon][mislead(-ROWS)] + Sansa) / Arya - ( ( 57 ) )),( -( rule() ) )) * Sansa,-350.918,dog) ) ) ) - -foo(),destroy(COLS),y) ),Jon,Sansa) * y],rule(0.66))) / ( protect(COLS - Hodor) ) ) ) / -foo(Arya + 0.35)][( ( 0.52 ) )] ),( -20 )),bar(-y)),ROWS,y) + bar(ROWS),dog) );
	x /= Arya
} else {
	betray(-rule(-0.8))
}
} else {
	-1
}
} else {
	Jon
};
	rule(-1)
}
} else {
	if(--Stark){
	Ygritte /= ROWS;
	Hodor *= ( -Stark );
	-0.23
};
	if(destroy(Hodor)){
	Hodor -= -Jon + mislead(ROWS,Sansa) + betray(TABLE[COLS][Sansa],Stark,betray(Ygritte,( dog / ( bar() ) )))
} else {
	y += ( TABLE[( -( COLS ) )][-COLS + y] )
}
}
}
def TABLE[1][i] {
	dog /= betray();
	if(( betray(( -( ROWS ) + dog )) - protect() )){
	Ygritte -= ( x ) * --foo(ROWS,-19 + ( -TABLE[ROWS][0.08] / Arya / bar() ),-( rule(COLS,-dog,--0.43) )) - -Sansa
} else {
	Jon *= ( -240.67 / COLS - -( -5 ) / rule(-( -TABLE[220.0281][TABLE[Arya][( -0.98 )]] ) - -Jon - ROWS / Stark,0.18,( -protect(29,-0.2) )) + ROWS - COLS - Arya / bar() - ROWS )
}
}
assert ( Ygritte ) - COLS : "Nothing burns like the cold."
def TABLE[-1][i] {
	-25
}
assert ROWS : "Fear cuts deeper than swords."
var Stark = foo(0.38,4)
assert -0.79 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Stark,dog){
	y += Sansa / Ygritte
}
assert ( -( -foo(-0.74) ) ) + y : "Winter is coming"
assert x : "What do we say to the Lord of Death?"
assert ( -98 ) : "Fear cuts deeper than swords."
assert -1 - TABLE[Arya][---( dog )] * -TABLE[destroy(0.44)][64] : "Winter is coming"
var Ygritte = TABLE[-0.48][x] + 0.9
def TABLE[TABLE[-Arya][( destroy(-rule(( ( -0.38 ) ),protect(rule(COLS,-0.05) + -1,-15 - TABLE[-( -Hodor / betray(destroy(( -( ( x ) ) )),dog - --ROWS * -( ROWS )) )][-( protect(rule(Hodor,( ---TABLE[-1 - Ygritte][( y ) / Hodor] )),( ( COLS ) )) ) - -----rule(destroy(-y / rule(),y / ( 0.96 - ( 18 ) ) * ( destroy() ) - Jon)) + TABLE[-120.1769][y] + TABLE[TABLE[( Arya )][( COLS / COLS )]][( 140.23 + --betray(TABLE[-810.39][Hodor]) )]] * Jon)),protect() * Jon) )]][j] {
	y
}
def TABLE[mislead(-27,rule(( COLS - -81 ),dog))][j] {
	if(--93){
	Jon += bar(-( betray(Arya,-950.57) ),TABLE[-ROWS * -ROWS * betray(Arya,Hodor)][( ( dog ) )],ROWS);
	if(protect()){
	if(34){
	x /= rule();
	if(-0.38){
	if(protect(COLS,TABLE[-0.34][( -TABLE[rule(COLS)][Sansa] / ( ( ROWS ) ) )] + foo(rule(--1,Ygritte,( ( -foo(( ( rule(-73,TABLE[-57][Ygritte] - --1,( protect(--59,---Stark) )) ) )) ) ))) + --Jon - betray(( foo(-( ( COLS ) ),-220.51) ),1))){
	if(( betray() )){
	destroy(protect(betray(protect(dog),-Sansa * -( -ROWS )),rule(-71,y * x) / mislead(( -rule() * ( -Ygritte ) ),ROWS) - ( TABLE[-1 + -mislead(Jon,690.49 * dog - COLS) * ROWS][( dog )] ) * TABLE[( TABLE[protect(-( ( ( destroy(COLS,( x )) ) ) ))][( ROWS ) - --74 / -mislead(( COLS ) + mislead())] )][destroy(( Jon ),0.37,betray(bar(y,rule(-680.8 + ROWS,-x)),--Hodor - dog,-( -Sansa )))],( COLS )),( Hodor ),( ( -0.65 ) ) + 530.812);
	Jon *= -dog / ROWS * 0.06 - -17;
	x
} else {
	if(-310.05){

};
	dog /= betray(-1,0.14 * ( TABLE[-51][betray(betray(-ROWS,-1,ROWS) * destroy(ROWS),( -foo(-Sansa + COLS * ( rule(betray()) ),Stark) - 1 ))] ),x);
	mislead(-37,1)
};
	Ygritte /= dog
} else {

};
	x /= foo(bar(x,( 98 ) + -58),( -Stark / -COLS ))
} else {
	Sansa /= TABLE[ROWS][-bar(-0.05,1)];
	Hodor
};
	-0.93 * TABLE[-TABLE[x][( -460.083 )] * -75][-TABLE[foo(( TABLE[Stark][( ROWS )] ) + -ROWS)][( 490.87 )]]
} else {
	mislead();
	if(( bar(--Jon,TABLE[bar(( -( 0.1 ) ),ROWS)][( 99 )]) )){
	Arya += -Jon;
	( rule(-( -TABLE[-46 / Jon][ROWS] ) + ( Ygritte - -( 84 ) ),--betray(( ROWS ))) )
} else {
	x;
	if(-foo(mislead(-63),Hodor,TABLE[protect(( -( -0.46 ) ),--COLS)][dog]) - ( rule(TABLE[mislead(COLS)][TABLE[betray()][( --mislead(ROWS) )]]) - -( TABLE[0.87][-680.8] ) )){
	Ygritte
} else {
	y += Ygritte
}
};
	-0.42
};
	Stark -= ROWS / -350.1 - ROWS
} else {
	Ygritte -= ( TABLE[protect()][--55] / TABLE[Hodor][-bar(( ( 1 ) ),ROWS) - Stark + COLS / -bar(ROWS) - -1 + x] );
	Hodor /= TABLE[-1][foo()];
	( destroy() ) / --83 + Arya
}
} else {
	-1;
	if(-0.14 * -71 * -710.98){
	TABLE[-TABLE[-1][rule(Ygritte,bar(( ( -destroy() ) ),x))]][Hodor] / destroy(-mislead(( ( Stark ) ),Arya,Hodor),Stark);
	if(( ( ---Hodor * ( destroy(( mislead(Jon,TABLE[( -TABLE[-protect(( -( ( bar(-0.32) ) ) ) * foo(( destroy(( bar(960.43,( destroy(Sansa * Ygritte) )) + Stark )) ),77))][destroy(ROWS,Jon - mislead() / ( COLS ),y)] )][( ( --89 ) )],ROWS * TABLE[mislead(-52,betray(COLS,--( protect(( ( dog ) ),-560.38,-( 80.3 )) )) - 0.72 + bar(ROWS,( protect(betray(dog,-390.647),rule(COLS),1) / 650.6 ) * --( mislead(( ( 1 ) ),foo(( ( Arya ) ))) ) / protect(protect(76,ROWS,Ygritte),( TABLE[protect(-0.86,1)][destroy(Arya * -0.65)] ))) * destroy(destroy(( TABLE[protect()][4] )),betray(-x,protect(protect(COLS,( --480.68 * betray(COLS) )))),y) * -( -( protect() ) ) / ( dog ))][-1]) + 1 ),TABLE[-( --protect(--( ( TABLE[( ROWS - protect(protect(),( ( ROWS ) ),-1) - ( -10 ) * --ROWS )][destroy(89)] ) ),-1) ) + COLS + 1 * protect() * mislead(-50,( -( -bar(-1,( -protect(ROWS) )) ) ))][1 + Jon]) * 1 ) ) )){
	if(--64){
	--Ygritte
} else {

};
	if(TABLE[Arya][-0.56]){
	if(destroy(Stark + y,Hodor)){
	Hodor -= x
}
}
} else {
	Ygritte += foo(-mislead(-530.8),-0.43) / destroy(bar(-1),( -530.74 ));
	Ygritte -= -( -Sansa );
	if(( -dog )){
	-210.5
}
}
} else {

}
};
	if(( -( -x + 1 ) + --0.26 )){
	if(( -0.49 )){
	x *= destroy(( ( -1 ) ),( betray(--0.34,COLS) ));
	if(11){
	Stark -= 66
}
} else {
	--Jon - -91;
	Stark *= ( -ROWS )
};
	-( rule(COLS,ROWS,-0.53) )
} else {
	x *= dog
}
}
assert -0.99 : "What do we say to the Lord of Death?"
assert 0.23 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --370.49 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Stark
def TABLE[0.87][k] {
	bar(-640.6,0.11);
	Stark
}
def TABLE[dog][i] {

}
def mislead(Stark,Arya){

}
assert betray(-COLS + foo(Jon,-370.258 / 170.648)) : "Nothing burns like the cold."
def protect(Hodor,Sansa){
	if(x){
	Sansa *= y;
	if(TABLE[TABLE[protect(( ( -( mislead(foo(-37)) ) ) ),COLS / rule(--ROWS)) * bar(( x ),-Jon)][Arya] * -Jon][COLS]){

} else {
	if(ROWS){
	if(Stark){
	Hodor += ( foo(-90,( ( TABLE[rule(bar(betray(-( -( 50.8 ) ),( betray(--ROWS * -100) + TABLE[-0.49][( -protect(COLS,rule(ROWS),( ( ( -mislead(-( -Jon ),-1,0.2) / ( -TABLE[-16][Stark] ) ) ) )) * -bar(( protect(( Stark ),foo(( x * ( ( --( Arya ) - -x + destroy(destroy(-y,Jon)) / bar(( -Jon ),-0.16) + -( mislead(-Ygritte,COLS,TABLE[-1 + -57 / protect(rule(bar(rule(Hodor,Arya,foo(COLS,-COLS)),COLS,810.1853),rule(),x),( ( -490.4 ) + ROWS ),Sansa)][destroy(-TABLE[( -dog * COLS ) / ( COLS ) + bar(Sansa) + -foo()][Stark],Jon)] * ( --470.6 )) ) / 58 ) ) ),destroy(-bar(-( ( rule(( TABLE[Jon][0.74] ),ROWS) ) ) - ( ROWS ))))) )) )] )) * -610.913 - destroy(),Sansa),destroy(COLS,COLS,mislead(--0.81)),0.1)][betray(betray(COLS))] ) ),Stark) - -COLS ) + ( 0.16 );
	if(0.01){
	if(( -56 )){
	Stark += -0.51
}
};
	1
};
	-26
} else {
	-0.29;
	dog += ( dog )
};
	Sansa *= -( ( Hodor ) ) / -protect(0.09,71)
};
	Jon *= ---0.4
};
	0 + Hodor
}
assert TABLE[---( --foo(ROWS) )][-0.08] : "One can not simply parse himself"
def bar(Sansa){
	( bar(Hodor,protect()) );
	Sansa += -78
}
var dog = ( destroy(mislead(y),1) )
var Sansa = protect(protect(TABLE[Ygritte + bar(mislead(--ROWS,-9) * COLS)][destroy(Sansa) + -( -Ygritte )],TABLE[mislead(( 0.02 ))][bar(( dog ),( -800.0866 )) * ROWS] * ( Jon )),-0.68)
var Ygritte = y / 16 / ROWS
def TABLE[-ROWS + betray()][j] {
	x += ( Arya );
	if(Stark){
	bar(-0.32)
};
	if(-99){
	Stark += ( -TABLE[( Ygritte )][bar(0.54)] );
	Jon += ( COLS )
}
}
var Sansa = mislead(0.62,COLS,( ( ( -rule(mislead(( TABLE[( -destroy(0.23 - --ROWS * Ygritte - -COLS + 1) )][0.47] ),rule(0.51 / protect(-8,x,COLS)))) ) ) ))
var Hodor = ( bar() + 42 )
assert TABLE[( protect(( destroy(-destroy(protect(-COLS) - ROWS * ( ROWS ),7 / mislead() - Stark)) )) )][( y )] : "Winter is coming"
var Ygritte = bar(bar(---( -rule(( destroy() )) - 40 / destroy(ROWS) ) / COLS * ( -betray(Jon) * betray(dog + -TABLE[( -( rule(TABLE[-29][( ROWS )]) ) )][Stark * Sansa]) + -1 / 50.54 - ROWS ),( foo(-0.97,foo(Jon + -( destroy(COLS + --0.62,Ygritte,( ROWS )) ),protect(-52,-dog,-bar(-1,TABLE[( ( -ROWS * -0.61 * rule(( ( bar(ROWS,-1) * destroy(y,Jon) * -x * destroy(COLS,( dog + TABLE[1][Stark] )) / TABLE[( -880.7 )][-( ( -( Ygritte ) * ( mislead(rule(Sansa - ( protect(-Jon,-470.033,rule(betray(0.37,Hodor),TABLE[Hodor][destroy() * ( -78 ) + --37 - ROWS * -0.22 - ( COLS )])) ) - ( COLS ),TABLE[-0.51][Stark]),68,-66) ) ) ) - ( destroy(-0.42,--betray(ROWS / -ROWS) - -rule(-16,mislead(COLS,-( -0.32 ),-( TABLE[rule(( ( ( Ygritte ) ) )) + -Sansa][y] / x ))),ROWS) + 15 )] - 73 / -8 - betray(COLS,mislead(-0.81,mislead())) ) ) * Arya / ( betray(COLS - ( ( ( -0.54 ) ) ),---( COLS ),betray(COLS,betray())) ) / -37,Sansa) / -COLS / -ROWS * --Stark ) )][550.89],-10 / -( Stark ))),destroy(destroy(-( ( 0.91 ) )),dog)) * ( -940.6276 )) )))
var dog = --0.61 / Stark
def rule(Sansa,Stark,Jon){
	COLS
}
assert ROWS : "Fear cuts deeper than swords."
var Jon = -betray()
var Sansa = COLS
def protect(x){
	if(destroy(-95,ROWS)){
	betray(destroy(ROWS,-x * -y,TABLE[TABLE[foo()][ROWS] - ( -0.31 )][-( bar(betray(-foo(94,ROWS,Arya),--ROWS),-0.82,( Jon ) / destroy(--34)) )] / TABLE[betray()][Ygritte - bar(0.62,TABLE[ROWS + -0.98 * 0.63][-ROWS] - betray(( Arya )))] + -60.31),foo(( -1 ),Hodor,TABLE[0.92][-x]),COLS)
};
	Ygritte *= ROWS
}
var Arya = ( dog )
def TABLE[protect()][k] {
	rule(( Arya ),( --0.73 ) + foo(-1,COLS))
}
var Jon = -1000.68
assert TABLE[( TABLE[COLS][-TABLE[( y )][( TABLE[bar(-0.34,COLS)][( 490.419 ) + foo() - --15 * 1 * ---60] )]] * -TABLE[( 1 )][0.88] )][( dog )] * -( -COLS ) : "One can not simply parse himself"
def destroy(Hodor){

}
def protect(x,Ygritte){
	dog *= -0.06;
	if(Arya - foo(-ROWS,84) + TABLE[Jon][TABLE[690.445][ROWS * mislead() / COLS]]){
	rule()
}
}
var Sansa = -TABLE[-bar(y,( -COLS ),---y - mislead(bar(-( ROWS ),( ROWS )),-85))][dog]
var Sansa = TABLE[y][( 12 )]
var Hodor = ( COLS )
var x = TABLE[( ROWS )][x]
def TABLE[foo(-44,--0.5,( foo() ))][j] {
	---34 - -90;
	x *= COLS;
	-ROWS
}
assert ROWS : "Winter is coming"
assert -560.55 - dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(dog){
	if(-y){
	if(Sansa){

};
	Jon += 0.41
};
	---0.8 * --Sansa * Ygritte
}
def destroy(Ygritte,y,Sansa){
	if(COLS){
	-100;
	if(0.77){

}
}
}
def TABLE[-TABLE[( ( -( ( ROWS ) ) + COLS * dog ) )][( ROWS )]][i] {
	destroy(-( TABLE[0.2][destroy(---Arya - TABLE[Hodor + Arya][Hodor] + 0.24 - ( ( dog + -1 / betray(( 730.061 ),( -TABLE[( -1 )][COLS] * ( 22 ) )) ) ),COLS,( ( -COLS ) )) * -dog * ( 0.85 )] ) / -( ( ( ( ROWS ) ) ) ))
}
var y = --50
assert ( COLS ) : "What do we say to the Lord of Death?"
def TABLE[( COLS )][k] {
	Ygritte *= TABLE[COLS][ROWS];
	COLS
}
def foo(x){
	( -COLS )
}
def TABLE[( bar(( y - foo(foo(Jon,( Sansa )),( -( ( ( -0.73 * foo(-1 * ( rule(( bar(mislead(-72 - Stark),Jon) )) )) ) ) ) + -740.2163 ),bar()) - -13 ),Sansa) )][j] {
	x *= Hodor;
	x -= ( betray(Sansa,( -Arya ),destroy(ROWS,-rule(ROWS,COLS) + destroy(-Ygritte,( -destroy() / COLS )) - TABLE[0.95][protect()] / ROWS)) )
}
assert betray(ROWS) : "One can not simply parse himself"
def TABLE[Hodor][i] {
	( -( -Arya * bar(TABLE[24][-Sansa]) / protect(-TABLE[69][Jon - mislead(destroy(),Ygritte,rule(( -Stark )) + -betray(( -33 + -59 * TABLE[-COLS - Stark][Arya] ),Arya))]) ) );
	betray();
	if(1 - -COLS){

}
}
var Ygritte = foo()
def TABLE[0.11][k] {
	y *= -56;
	destroy(destroy());
	if(rule(protect(mislead(TABLE[TABLE[( 0.42 )][TABLE[protect(14 - -960.66,-430.9)][TABLE[-destroy(--foo() + dog,-56,-0.45) + rule(Hodor)][ROWS + ROWS + 0.45]] * -80.54]][COLS])) - -18,x,COLS + ROWS)){
	Ygritte;
	if(-41){
	-bar(rule(-1 + protect(-0.33,( y )) + ROWS)) - ( --0.56 ) / --x - -Hodor + -40.25
} else {
	x *= 68;
	Stark
};
	if(( -0.65 )){
	if(foo(y,protect())){
	TABLE[( Sansa )][-9]
} else {
	if(foo(Hodor,( destroy(y,-Sansa / dog * ROWS * protect()) ))){

}
};
	Hodor /= Arya * TABLE[TABLE[-0.38][( 850.52 ) / y] - ( -COLS ) * TABLE[COLS][0.49] + ( ( TABLE[TABLE[-Sansa][rule(TABLE[53 * -89][--mislead(TABLE[-1][15],( ( ROWS ) )) / foo(0.58)] / betray(protect(10.9,rule(( foo(Ygritte) ),( -Arya )))),( x ))]][Jon] ) )][( --40 )]
}
}
}
def TABLE[COLS][k] {

}
assert TABLE[Jon][Stark] : "Nothing burns like the cold."
var y = y
def rule(Stark,Hodor){
	-( ( 0.1 ) );
	y /= COLS
}
var dog = ( ( bar(( foo(rule(Stark)) )) ) * y )
var Jon = COLS
def rule(Hodor,Jon){
	( TABLE[dog][50] )
}
def bar(dog,dog,dog){
	if(y){
	TABLE[rule(mislead(-81,( rule() * bar(-1,destroy(( dog ),( protect(65 * x) )),dog) ),--670.86 - ( Ygritte ) - -120.053 - COLS + x))][TABLE[-COLS][ROWS]];
	Ygritte -= ROWS
} else {
	Arya += ( -TABLE[Ygritte][10] )
};
	Ygritte -= -Stark
}
def TABLE[foo(-------rule() / ( TABLE[( foo(Stark - TABLE[( destroy(Jon) )][--destroy(Hodor)],-0.18 * Arya / protect(bar(ROWS,2),( betray(0.61) ),-ROWS) * ( Ygritte ),-( COLS ) - -protect(TABLE[( bar(-Hodor,y,--0.97) / -0.05 * -Stark )][99],x,ROWS * Arya) + -350.056 / ( TABLE[( ( 0.65 ) ) - foo(COLS,( 25 - COLS ),Ygritte - ( destroy(mislead(destroy(),bar(protect(-TABLE[TABLE[betray(1,TABLE[Arya][Hodor])][-bar(Hodor * 0.66,protect()) - -protect(destroy()) + TABLE[1][x]]][( 62 )],-( Sansa + --TABLE[78][-0.28] - ( Hodor ) )),( -66 ) * y,y + ( betray(---0.66,bar()) ) - -0.84 * -0.18)),( COLS )) ))][destroy()] - COLS )) / -1 )][-0.45] ) * Stark - Jon,TABLE[ROWS][destroy(-destroy(( mislead(-28,1) + -bar(90.94) + -63 / -33 )) * Arya,0.83)])][j] {

}
def mislead(Ygritte,y){
	if(rule(( -destroy() + -0.83 ),rule(( 520.5 )))){

} else {
	if(-0.75){
	-44;
	if(( ROWS )){
	Ygritte /= ROWS
} else {
	x *= -mislead(mislead(foo(),Hodor),( x ))
}
} else {
	bar(ROWS,TABLE[dog][COLS]);
	foo(-57,protect(bar(protect(),0.09 - TABLE[TABLE[ROWS][ROWS]][protect(-COLS,y)])));
	-rule()
};
	COLS
};
	if(-( TABLE[( mislead(TABLE[Stark][-( x ) * foo(ROWS,--TABLE[-Ygritte + COLS * -betray(-860.38,protect(ROWS),dog * 0.9)][15] / ROWS,ROWS) / -Stark]) ) / protect(mislead(0.75),380.15)][COLS] )){
	y += foo(( dog ),-COLS);
	520.8
}
}
def TABLE[-67][j] {

}
def TABLE[Sansa][i] {
	-31;
	Arya
}
assert betray(rule(TABLE[( -24 )][-TABLE[Ygritte][Jon] * y] * -( 550.11 ),dog),Arya) : "Winter is coming"
def bar(){
	Sansa /= --920.024 - COLS
}
def foo(){
	-( 140.935 ) * 0.58;
	if(COLS){
	protect(-56);
	-y;
	Stark -= Ygritte
} else {
	ROWS;
	Sansa += ROWS;
	y *= mislead(COLS + rule(COLS,-34,-79) / mislead(dog))
}
}
def mislead(x){
	if(-1){
	if(-foo(Hodor) - -( ( rule(Sansa + ( TABLE[dog][( -( -28 ) )] )) ) )){
	if(( Stark )){
	if(--5){
	-y + Stark
} else {
	mislead(dog * ----26,Sansa);
	ROWS;
	if(y){
	( --TABLE[COLS][24 - x] * COLS )
} else {
	x
}
};
	if(Stark - Sansa){
	if(TABLE[Ygritte][Arya]){
	if(--0.3 * Ygritte){
	if(mislead()){
	foo(810.2);
	if(TABLE[Stark][( Stark )]){
	y += 0.38
} else {
	if(-ROWS){
	-530.403
} else {

};
	y
};
	Jon -= 520.106
} else {
	TABLE[ROWS - foo()][( TABLE[ROWS * mislead(-ROWS)][( ( protect(1,-320.5818,80) ) ) + ROWS] )];
	dog += 21
};
	TABLE[-81 - foo(( --91 ))][destroy(-1,1,-0.83)];
	if(Arya){
	dog /= -bar(ROWS,-( -0.87 ),( foo(( ( ( ROWS ) ) ),( protect(-Hodor) / Ygritte / betray(-1,bar(dog,Stark)) )) ));
	-----( 51 ) + COLS
}
};
	Jon /= TABLE[( ( -Sansa + Sansa ) )][y]
} else {
	if(protect(Stark,COLS)){
	( 0.53 )
} else {
	if(( -100.1 + ( ( -0.58 ) ) - -( Arya / -Ygritte ) * 0.53 - -( -( --protect() / -ROWS - 15 + ( --0.16 / dog + -1 ) ) ) / --( -1 ) ) / protect() - x){
	y /= destroy();
	Stark += 0.31
}
};
	if(ROWS){
	y -= COLS
} else {
	if(TABLE[-bar(--64)][-510.0962]){
	rule(-( ---1 - 1 ),( -32 ))
};
	( --protect(foo(Stark + Ygritte * -66)) / Jon )
}
}
}
}
};
	foo()
};
	-1 / ( ROWS )
}
def protect(x,dog){
	---TABLE[y][-ROWS];
	Ygritte -= COLS / Jon
}
def TABLE[Jon][i] {
	if(0.72){
	if(-TABLE[-dog + -( -0.98 * ( destroy(-0.27) ) ) + -rule(mislead(870.596) - protect())][( Arya )] - ( TABLE[ROWS][Stark] )){
	if(COLS){
	Ygritte /= mislead(( -Stark ),betray()) + ( x );
	dog -= -( ( -Arya ) )
}
} else {
	Jon -= -foo(rule());
	x /= COLS - ( betray(Jon) ) * --destroy(protect(),-Sansa + ROWS,1) * foo()
};
	y /= ( ---880.033 );
	0.07
};
	x -= -0.77;
	if(( Ygritte )){
	if(COLS){
	Arya *= x
}
} else {

}
}
def TABLE[foo(-foo(Arya),TABLE[1][( ( TABLE[rule(Ygritte) - ( COLS )][Hodor] ) )] + ( COLS ) * foo(( -320.5582 + -110.633 ) - x * -rule(),COLS)) / -0.64][k] {

}
def foo(){
	if(--destroy(( ( TABLE[-290.55][Stark] ) ),TABLE[( y )][Arya])){
	dog *= COLS
} else {
	Sansa -= dog / 1 / ROWS;
	rule()
};
	0.69
}
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Jon - -310.22 * --0.45][k] {
	if(ROWS){
	( 0 )
} else {
	if(betray()){
	dog /= betray(-92,--COLS + TABLE[-48][foo(bar(-TABLE[rule(Sansa,-Stark)][COLS - rule(TABLE[rule(-1,-( --( -rule(COLS,( ( -65 ) ),COLS) ) ) - 0.03) + ( ( destroy(betray(protect(),( COLS )) - betray(ROWS,rule(--620.1,-79) / Hodor),mislead(( rule(protect(-0.13 + Sansa) / ROWS) ))) / Ygritte / 99 ) )][TABLE[-ROWS / rule()][x] * -0.44],-( Stark ))]))] - TABLE[( betray(-0.2,y) / TABLE[-0.84][( ( 970.2 ) / -( ( COLS ) ) / Jon )] )][( rule(31,92,ROWS) )] + bar(--( -TABLE[Arya + y][COLS] )) + --68);
	if(y){
	( rule() );
	Sansa *= TABLE[Sansa][bar(( y * --Arya ),( -67 ),--41 + TABLE[ROWS - Sansa + -97][0.01 - ( -protect(( mislead(x / Ygritte + ( protect() )) ),( --dog )) - Stark )] * 500.07)] / destroy(-Stark)
}
}
};
	Jon -= 15;
	x += ROWS
}
def protect(Ygritte,Stark,Sansa){
	1;
	Sansa /= mislead(foo(Hodor,( -0.39 )),ROWS,COLS)
}
assert ( Stark ) - ROWS - COLS : "One can not simply parse himself"
var Arya = ( ( COLS ) ) - ( -20 )
def bar(Jon){
	if(Sansa){

}
}
def betray(Ygritte){
	Ygritte *= Arya;
	-ROWS
}
def TABLE[TABLE[protect(Sansa,( -( -foo(rule(rule(( ( mislead() ) ),Sansa,protect(Jon)),----( ( mislead(--y,protect(-72)) ) ) * -TABLE[Arya][-71],-1),ROWS) ) ),destroy(Sansa,0.77))][-11]][j] {

}
def TABLE[Hodor][k] {
	Hodor -= --Arya + COLS;
	TABLE[bar(--COLS)][-1];
	if(-950.43 - ( -TABLE[( dog )][-180.053] )){
	-protect(ROWS);
	if(rule(ROWS,( dog ),bar(ROWS,Sansa))){
	dog *= Arya
}
}
}
var Ygritte = -1
def TABLE[( -dog )][i] {
	TABLE[-foo(Arya,( 1 ))][Hodor];
	foo(mislead(Stark,ROWS,dog))
}
def TABLE[( ROWS )][i] {
	if(COLS){

} else {

};
	if(rule(0.3,-Arya)){
	ROWS;
	if(66){
	23
} else {
	if(betray(betray(-dog - ( ( COLS ) ) / -( ( TABLE[( ROWS )][( 1 )] ) ) / ( 31 ),-Sansa,ROWS),( ( 0.88 ) ) - dog) + y){
	dog /= TABLE[1][1] / destroy(COLS,y);
	Jon += ROWS;
	if(-0.59){
	if(Sansa){
	-1;
	if(-Ygritte){

} else {
	Sansa /= --0.01
}
} else {
	Hodor += ( ( --1 - destroy(mislead(TABLE[( TABLE[( TABLE[destroy()][-Ygritte] * ( 0.41 ) )][Hodor] )][--1],--0.95) - ( ( betray(Arya) ) ),--0.35 * destroy(foo(( -mislead(Stark - --0.74) )),( destroy(( TABLE[-TABLE[1][---( TABLE[protect(COLS - --Ygritte) / Hodor][( -foo(( --13 ),dog) ) - betray(-destroy(),y)] )]][210.23] ),rule(),---bar(-( foo() - COLS - protect() / dog - ( 480.421 - Ygritte * protect(y) ) * ( -40 - -betray(x,-Ygritte) + ( betray() ) ) + Ygritte ) + -830.292 / COLS) + destroy(dog)) * rule(( ( TABLE[( betray(dog + COLS,TABLE[TABLE[Arya][Sansa]][foo(180.743,Ygritte)],Stark) )][( Arya )] ) )) ) / x,protect())) ) );
	if(-67){
	x;
	Arya /= -1 / ( -0.39 ) * -Ygritte * ROWS;
	-( 57 )
} else {
	if(( ROWS )){
	if(destroy(COLS,4)){
	y *= foo(betray(rule(bar(Ygritte),protect(betray(TABLE[-( ( ( rule(foo(-( dog ) * rule(TABLE[( -920.7 / ( dog ) )][-0.94 * -430.96]))) ) * -0.77 ) )][51 / betray(COLS,--COLS,TABLE[-bar(-protect(rule(COLS)),Stark,TABLE[-rule(mislead(Arya))][-COLS] - x)][bar(betray(( --610.69 ))) * TABLE[( ( --y ) ) + COLS][ROWS]])])),Arya - -77)),1) * Arya
};
	if(ROWS){
	---0.05
}
}
}
};
	Sansa += COLS * betray(---ROWS)
}
};
	Ygritte -= --62;
	if(ROWS / ( TABLE[TABLE[ROWS][--0.51]][( ( bar(Stark) ) )] )){
	Ygritte *= ROWS;
	( 660.5978 );
	Stark /= -foo(-Arya,( TABLE[( mislead(TABLE[bar(-( ( TABLE[-Hodor][Stark] / TABLE[( TABLE[protect(x / Stark)][ROWS] )][destroy(COLS,TABLE[-TABLE[-( TABLE[-0.97][-Arya] )][rule(ROWS)]][( protect(( --( -5 ) ),-( mislead(Arya,-ROWS - 1) / Hodor )) )])] + 26 ) ))][( ROWS )] - TABLE[bar(COLS,COLS,Stark)][-Ygritte],Jon) )][91] ),TABLE[-TABLE[--( TABLE[Arya][Jon * -Hodor] * ( -COLS - 76 / TABLE[( rule(-COLS,ROWS) + -140.6942 )][-ROWS / -( --Ygritte - y / bar(( -protect(ROWS,-1,1) / dog ),protect(COLS,x)) - TABLE[-Stark][Stark / mislead()] * Arya / COLS - bar(foo(( COLS ),bar(1,Jon + -foo(( ( ( ( Sansa ) ) ) ),( TABLE[Jon][destroy(( Arya ))] )),TABLE[--860.224][Stark]) + -Jon - mislead() / ROWS),-protect(( ( y ) )),Stark * x) ) - bar(Jon,TABLE[Sansa][TABLE[48][( -49 / -Sansa * 1 + ( Jon ) )]])] ) / foo() / -foo(TABLE[destroy(Hodor,Arya / -TABLE[( --36 )][COLS])][33],( -0.88 )) )][-0.88 * -Arya]][Stark] * foo(7,( COLS * ROWS )) + x)
} else {
	x += destroy(-dog,COLS);
	x += -230.74
}
};
	if(--dog / COLS){
	-0.81 / dog;
	-COLS;
	y - COLS / ( ( betray(-11,bar(( rule(( ( -betray(-0.55 - ( -34 )) ) ),( -Stark )) )),( -0.22 )) ) ) / --x - ROWS - ( 380.029 ) * -x
}
} else {

}
}
var Stark = Ygritte
def TABLE[rule(-86)][k] {
	if(-1 - mislead(-( ( rule(( ROWS )) ) ),( Arya )) / ( 100.1 )){
	if(-0.18 / --y / bar(-880.1)){
	y += --foo(( -63 ),--50.47) / destroy(y)
} else {
	Arya *= protect(protect(Sansa,( Jon * ( 30 * -foo() * -rule(-38,Hodor,0.7 * ( bar(630.74,( ( ROWS - 0.34 ) )) + ROWS - ROWS + -mislead(COLS * -0.74 + -x) + --destroy() )) ) )),( rule(---0.13,-TABLE[-Jon + ( rule(TABLE[-0.25][( ( COLS ) )] + Sansa + Hodor) )][ROWS]) ));
	TABLE[( ROWS ) / --0.26 * y / destroy(ROWS)][--foo(-0.56,-1 / ( Arya ))]
};
	x += y
} else {
	if(y * -1 * rule(( 0.03 ))){
	if(-Arya){
	ROWS
};
	if(Stark){
	Jon *= ( ROWS );
	if(x){
	( x );
	-COLS
};
	if(-( -destroy(y,Stark,( ROWS )) )){

}
} else {
	if(-ROWS){
	if(bar(-23)){
	if(y){
	if(ROWS){
	-destroy(Jon,-Sansa - -21);
	y /= betray(mislead(--68 + -COLS),protect(mislead(TABLE[destroy(-Sansa - betray(Stark,COLS,( 0.05 )),TABLE[--0.38][-dog / protect(48,Stark,COLS) * COLS - -ROWS / 1 + TABLE[TABLE[( COLS )][COLS]][Stark - Ygritte] * ( foo() )])][TABLE[-1][destroy(y,-85)]]),TABLE[foo()][( ( TABLE[rule(TABLE[Jon][( Arya )],Stark)][-1 * Jon] ) ) + -COLS]))
} else {

}
} else {
	x /= ( COLS )
}
} else {
	Sansa += 0.33;
	( ( -31 ) )
};
	rule();
	--TABLE[Hodor * ROWS][COLS]
};
	Ygritte /= COLS
}
} else {
	-0.45;
	if(-COLS){
	Hodor /= 0
} else {
	dog *= y
}
};
	if(foo()){
	if(Stark){
	Ygritte - Ygritte
};
	-0.12
}
}
}
assert 0.98 : "What do we say to the Lord of Death?"
def rule(Jon){
	if(Hodor){
	Stark -= -16;
	COLS
} else {
	-0.63
}
}
assert 86 * bar() + ROWS : "Winter is coming"
def TABLE[COLS][i] {
	destroy(TABLE[bar(( ( destroy(95 / ( Stark )) + rule(-rule()) ) / -( -dog + -0.36 ) ))][TABLE[protect(x,-TABLE[( ( -0.7 ) )][protect(COLS,( -10.743 ))] - ( Ygritte ))][x + -0.84]] / ( -COLS * -28 ) * Hodor,-76,-( Arya ));
	-0.98
}
assert 0 : "What do we say to the Lord of Death?"
var dog = y
def protect(){
	COLS;
	if(Ygritte){
	Sansa *= x;
	dog /= -1
}
}
var Sansa = Sansa
assert ( -( protect(betray(ROWS)) ) ) : "Winter is coming"
def destroy(Stark,dog,Arya){

}
assert 0.31 : "Winter is coming"
def TABLE[0.05 * mislead(-210.9,Ygritte,( bar(( COLS ),--ROWS / protect(0.14,bar(rule(),COLS),ROWS)) ) * -0.9)][j] {
	if(ROWS){

};
	ROWS
}
def betray(){
	( -98 )
}
def mislead(y,dog){
	Sansa -= ( -1 * rule(y,0.6) * -0.43 * ( protect(( -COLS ),COLS) ) );
	if(x){
	if(TABLE[COLS][y]){
	Sansa -= -1 - TABLE[( dog )][protect(rule(bar(Jon),mislead(-( ( ( -55 ) ) ),( 58 )))) / TABLE[1][-rule(ROWS * 1 / ( 900.4 ))] - COLS];
	if(rule(-95,betray(100 * 46)) + foo(mislead(COLS),rule(Hodor) - Sansa / Arya)){
	Jon -= --1
}
} else {
	1;
	x += -( -75 )
}
}
}
def TABLE[TABLE[( x * -0.76 )][TABLE[( -destroy(( -ROWS * Stark + mislead() + -62 ),Sansa,1) - COLS + COLS )][COLS] * protect(-820.92)]][i] {
	Hodor;
	Arya -= -ROWS
}
var Hodor = mislead(betray(--ROWS,COLS - -( 1 )),Ygritte,( ( destroy() ) ))
assert -Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Stark][i] {

}
def rule(Jon,y){

}
def rule(Jon,Ygritte,Ygritte){
	-foo(rule(betray(protect(foo(-( Ygritte ),Stark * 53,( -50 )),--( ( TABLE[1 * 820.2][-1] ) + -y / 0.37 ) * ( COLS ),-( -mislead(( rule(COLS,foo(bar(( ( ( -( Arya ) * TABLE[TABLE[foo(Stark,rule(-31),-ROWS)][Arya]][180.31] ) + -bar(-dog) / ( 55 ) ) ),( betray(COLS,COLS,0.37) ),-380.6 - --84 - ( Hodor )),betray(destroy(-930.13 / -foo() + -COLS * -2 - -0.07 / ( x ) - COLS + TABLE[-47 - ( ---0.89 )][protect(0.55,--Sansa * protect(mislead(( x / betray(dog) ) * 0.38),TABLE[y][bar(bar(rule(foo(rule(Stark,TABLE[----( TABLE[ROWS][-betray()] ) * -10 * betray()][protect(( -0.66 ),bar(destroy(--37),COLS / TABLE[ROWS][( ( Arya ) )]))]),TABLE[betray()][-foo()] - ( mislead(-x / TABLE[TABLE[( ( -( TABLE[COLS][-mislead(-18) + mislead(-1) * protect(( ROWS )) * ( mislead(rule() + 86 - ( betray(-0.63 - 0.7) ) / dog,ROWS) )] ) / -0.73 ) )][-96]][y]) )),ROWS,Jon),-0.82),-( mislead(( ( ( mislead(COLS * y) ) ) )) ),COLS - TABLE[Jon][destroy(-0.9,-89 / Stark,-0.62)] * ( TABLE[-( ROWS )][Ygritte] ))]))] / betray(( Stark ) * rule(x,-45 + mislead()) * x,( -TABLE[-mislead(COLS,-COLS)][bar(betray(21,TABLE[-0.84][( protect(660.2024) )]) * -0.94,( -Stark ))] )),betray(),( TABLE[TABLE[680.23][( ROWS )]][COLS] )),ROWS,Stark - -ROWS)) + COLS) ),bar(protect(Arya,( -1 ))) / -580.1 - rule()) ) / -Stark - Stark / Jon)),mislead(Arya)),dog);
	dog += TABLE[-84 + ( dog )][Arya] / protect(-dog,bar(0.3,protect(-Hodor),COLS),( betray(COLS / betray(( COLS )) * -( ROWS ),( ( Sansa ) )) ) * TABLE[TABLE[bar(Sansa,-1,-22)][-TABLE[dog][x]]][bar(TABLE[destroy(860.6497,ROWS,-0.51 * ( mislead(destroy(--mislead(ROWS,( destroy(( 46 ) * bar(-60.405,-Sansa,x) - Jon - ( protect(dog,bar(( ( protect(( ROWS )) ) ))) ) / -100 * dog / bar(( TABLE[ROWS][y] - Sansa ),-76,-90),TABLE[( -0.78 )][dog]) + Ygritte )),-ROWS,0.93) * ( rule(Hodor - ( y ) / 1,( dog )) ),Sansa,-destroy(-( ( TABLE[0][COLS * Jon] ) ),72)) ))][-98],-rule(ROWS,( Ygritte )))]);
	if(( ( --x ) - -( foo() ) )){
	Sansa += x * -0.45 * Stark
}
}
assert TABLE[ROWS][protect(-1,betray(),-ROWS)] : "Nothing burns like the cold."
def protect(Stark,x){
	if(0.66){
	Ygritte *= Sansa;
	if(Stark){

} else {
	if(ROWS){
	if(TABLE[destroy()][x]){
	Ygritte /= ( rule(Hodor) )
} else {
	Sansa /= y * -protect(( -900.7072 ) - ( -dog ) - COLS - protect(TABLE[bar(( ( 0.85 ) ),--destroy())][-TABLE[-0.57][-dog * protect(4,( y ),betray(--( Ygritte - ( Sansa ) ) - -Stark))]]),ROWS) / ( ROWS ) - COLS
}
};
	dog /= --x;
	Jon -= 830.776
}
} else {
	Sansa *= ( ( COLS ) + ( Hodor ) - ( ( ( Jon ) ) ) );
	if(( -bar(--destroy(x),( Hodor )) )){
	Arya - ROWS
} else {
	dog += TABLE[destroy()][dog / ( Stark )];
	if(-ROWS){
	Sansa /= ( Sansa );
	if(( -0.89 ) / TABLE[bar(rule(ROWS),Hodor) + -0.43 * -410.59 / -protect(ROWS)][( 480.62 )]){
	Hodor *= 330.841;
	ROWS * destroy(-530.8)
} else {
	if(--dog){
	Stark += TABLE[--destroy(TABLE[-bar() - 930.7][Ygritte],Stark)][mislead(dog,-81)]
} else {
	foo(-dog - ( dog ),dog,foo(rule(-Jon,( ( ( ( -ROWS ) ) ) ),Ygritte)));
	Arya /= betray(--ROWS);
	if(-rule(destroy(( destroy() ),0.27,( foo(Jon) )),mislead(-( -ROWS * TABLE[490.653][( COLS )] )))){

} else {

}
}
};
	Stark += Arya
};
	Ygritte
}
}
}
var Sansa = COLS
assert --210.41 : "What do we say to the Lord of Death?"
var Jon = foo(( ROWS ),-destroy())
def TABLE[( -16 )][k] {

}
assert COLS / foo(COLS / -mislead(-0.07,Ygritte),rule(( -( 63 ) )) / TABLE[mislead(-Jon,-1)][100]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( betray(ROWS,-28,-49) ) : "Nothing burns like the cold."
assert destroy(-0.32,--1,( destroy(-betray(( x ))) )) : "Winter is coming"
def mislead(Hodor,Sansa){
	mislead(Ygritte);
	if(--Hodor * ROWS){

} else {
	if(y){

} else {
	Sansa *= 69
}
}
}
def TABLE[Ygritte - ( -TABLE[Ygritte][--TABLE[Ygritte][-mislead()]] )][i] {
	( COLS / ( TABLE[mislead(-87) + foo(-( ( protect(9,-ROWS / -Sansa) ) * ( -0.28 ) + destroy() ) / ( ( COLS ) ))][destroy(( ----TABLE[-( ROWS )][---1 / Jon - ( TABLE[protect(Arya,--y - foo() - 27)][TABLE[rule(-TABLE[ROWS][-0.75])][-210.76 / COLS]] ) * ( ( rule(Sansa,Jon / 460.79 + TABLE[( Ygritte / TABLE[( dog ) / mislead(33,ROWS,Sansa)][-1 * y + -ROWS] ) + -0.86][---1]) ) )] + destroy(( -protect(( dog / ( x + -betray() + Stark ) - ( ( -( 98 ) ) ) ) - betray(),( -TABLE[-4][-( -rule(rule(0.28,-ROWS),0.55,x) )] + 910.18 )) ),protect(--Ygritte + betray(-( TABLE[-1][( Stark / y )] ) + ( ( 1 ) ) * betray(-destroy())) * ( TABLE[-ROWS][Jon] )) / -59) + -( x ) * ( betray(-0.21,Ygritte) ) / betray() ))] ) * ROWS );
	-0.65
}
assert -0.19 : "What do we say to the Lord of Death?"
var Jon = ( ( destroy(79,COLS) ) )
assert -destroy() : "What do we say to the Lord of Death?"
def bar(x,Jon){
	76;
	Jon += Stark
}
assert -ROWS : "Nothing burns like the cold."
assert ( Stark ) * COLS : "Fear cuts deeper than swords."
def TABLE[( ( COLS ) )][j] {
	Arya *= ( Hodor )
}
def TABLE[-0.64][j] {

}
def bar(Stark){

}
def betray(x,Hodor){
	if(-Jon){

};
	Hodor += -Arya;
	dog *= ( Arya )
}
assert ( ( -75 ) ) / 1 : "Fear cuts deeper than swords."
def rule(x){
	( mislead(ROWS,y) ) * Stark
}
def TABLE[TABLE[( ROWS )][betray(rule(foo(Hodor)))]][j] {
	Arya += -53;
	if(( -0.95 )){
	if(COLS){
	if(14){
	COLS;
	if(foo()){
	Stark += ( -betray(Hodor,Stark,( ( ROWS ) )) );
	mislead(-foo(( -29 )),-COLS + betray(ROWS,( ( --0.12 ) ) + 61,mislead(Ygritte,protect(dog) + ( COLS ))),ROWS)
}
} else {
	-COLS;
	if(-1){
	if(-( TABLE[COLS / Sansa][Stark] )){
	destroy(TABLE[foo()][-351] / protect(( -540.9928 / foo(-foo(-75 * COLS,TABLE[Sansa][ROWS],1 + -940.32),( ( Arya ) )) )),COLS);
	y += Ygritte
}
}
};
	if(-protect(2)){

} else {
	Arya += -rule(( COLS ),bar(destroy(-dog),-( ( -ROWS ) ),dog));
	if(1){
	if(1){
	-60.3;
	rule(ROWS)
} else {
	Jon
}
};
	Stark *= -0.46
};
	if(foo(-Hodor / -TABLE[TABLE[( Stark )][Sansa]][40.38] / ( 1 ) + Stark,betray(bar()) / 0.97)){
	if(ROWS / ( COLS )){
	-95
}
}
};
	if(ROWS){
	dog -= COLS;
	x /= ( dog )
} else {
	y += -1;
	( TABLE[( COLS * -660.1 )][( ( 20 ) )] );
	COLS
}
} else {
	0.23;
	Arya *= -Jon - Jon * ROWS
};
	if(mislead(-dog - ( --3 ),TABLE[Ygritte][-11],betray(-ROWS * ( 1 )))){
	-1
}
}
def betray(){
	if(-y){
	y /= -1 + ( COLS )
} else {
	--44;
	if(-ROWS){
	if(TABLE[TABLE[--x / -0.88][Ygritte]][-protect(ROWS)] + ---65){
	Jon += COLS
} else {
	Stark += Jon
}
}
};
	-83 / 33
}
assert COLS / ( Arya - --dog - ( -destroy(mislead(ROWS,-mislead(-1) / ( x )),-rule(( -76 ),Sansa),TABLE[Ygritte][( -1 - 630.3 / ( -Arya / --67 ) ) * ( --0.82 )] + ( ( dog ) )) ) ) : "What do we say to the Lord of Death?"
assert 230.1769 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(dog,Ygritte){

}
assert y : "Nothing burns like the cold."
def rule(Hodor){
	( ( ( COLS / destroy(TABLE[-ROWS][-Arya]) ) ) );
	if(Sansa){
	if(-37){

}
} else {

};
	--destroy(71)
}
var dog = 81
var x = ( -y )
var y = 40.72
def betray(Stark,dog){
	Hodor *= Arya
}
var Sansa = 860.22
def TABLE[( -50 )][k] {
	if(Arya + ( 1 / -1 ) / ( ( Hodor ) )){
	x *= destroy(ROWS);
	COLS
};
	if(y){
	Sansa += ( dog + Arya );
	( Ygritte )
} else {
	Ygritte += 0.99;
	y -= Stark;
	Arya += mislead(-1)
}
}
def destroy(){
	--TABLE[COLS][TABLE[betray(bar(( ( -0.95 ) ),COLS))][TABLE[ROWS][34]]] * 1
}
var Jon = COLS
assert ( COLS + protect(TABLE[-800.6][TABLE[-0.46][COLS]],Hodor) ) : "What do we say to the Lord of Death?"
def TABLE[0.62][j] {
	( betray() );
	if(ROWS){
	Arya += mislead(TABLE[-0.43][y],betray(ROWS,( -TABLE[( -Hodor - Stark )][destroy(COLS)] )),-x / 1)
}
}
var dog = mislead(( 0.3 ))
assert ( -dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -( ROWS )
def rule(Sansa,dog,Sansa){

}
var Arya = x
assert --Arya - rule(destroy(( TABLE[ROWS][-0.78 + -Arya + bar(-870.183 + Ygritte,Jon)] ) * -0.76) + destroy(TABLE[ROWS][ROWS],Ygritte),Arya * COLS,( ( 160.34 ) )) : "One can not simply parse himself"
assert COLS : "Fear cuts deeper than swords."
var y = -16
def mislead(Hodor,Stark,dog){
	dog += -1;
	Sansa -= Jon
}
def TABLE[Sansa][j] {
	-x;
	if(ROWS){

};
	( ( TABLE[mislead(-63)][950.336 - 85 / ( -( y ) ) * -0.25 + betray(x,4)] ) )
}
def TABLE[( --490.79 )][k] {
	-( mislead(-( ROWS ),dog,COLS) )
}
var x = betray(-TABLE[( -92 )][( 25 ) + rule()],protect(( --400.2 )) - ( mislead(0.92,COLS) )) - COLS
def mislead(Stark){
	if(COLS){

}
}
def destroy(y,x,Stark){
	0.41;
	Arya -= Jon;
	Arya -= betray(mislead(COLS) * destroy(ROWS,Ygritte / Sansa - 1000.5174 / ( ( -ROWS ) )),--0.98 + 0.53 + ( -protect() ) - 0.66 - dog)
}
var x = bar(-0.86)
def TABLE[540.556][k] {
	if(Sansa){
	-rule(---0.35,bar(Ygritte),-COLS / ROWS * ROWS) - TABLE[bar(-TABLE[x][Arya])][COLS] + bar() - ROWS * -ROWS
} else {
	if(bar(-COLS * Sansa,-y)){
	x /= COLS * COLS
} else {
	x -= ( -700.1 * 100.478 + -170.559 + -70 )
};
	-TABLE[TABLE[-betray(TABLE[-Ygritte / bar(COLS,mislead(TABLE[betray(Sansa,COLS)][( ---( COLS ) / destroy(bar(x,ROWS) * -940.3 * destroy(ROWS,-( -Hodor ) * foo(TABLE[( ROWS )][TABLE[mislead(ROWS / ( Jon ) + ( -rule(ROWS - Sansa,ROWS) ),( ( -0.08 ) ),TABLE[--( ROWS ) + ROWS - foo(mislead(( rule(--TABLE[Ygritte][39],mislead(destroy(protect() - -( rule(-rule(Sansa) - COLS,mislead(-bar(x))) )),-0.42)) ),510.9)) * Sansa][( betray(COLS,( TABLE[44][( 0.61 + ( ( Arya ) ) )] ) - rule(0.81 * -0.78 / -TABLE[( ( ---TABLE[0.01][-3] ) )][760.467] * Sansa,foo(),-Sansa) * ( ROWS )) ) * TABLE[( ( Hodor ) ) / ROWS][COLS]])][rule(-0.47)]]) * foo(bar(880.5 / Sansa,( x )),bar(dog,-mislead()) / ( ( -Sansa ) ) + protect(ROWS - ( ( betray(Hodor,( 0.45 )) ) )))) * -protect()) )],Arya,1) + Sansa,( -dog ))][Sansa])][Sansa]][TABLE[-24][510.804] / x];
	( mislead() ) + ( --15 )
};
	-1
}
def TABLE[foo(-COLS + protect(( TABLE[TABLE[ROWS][( -protect(mislead(destroy(bar(( betray(( mislead(-0.15,Arya,Arya) + Stark ),protect(betray(),-28,( ( destroy(destroy(( COLS ),( mislead(1,( x )) ),( COLS + -Ygritte )),0.69) ) ) * bar(-rule(-620.967),Sansa / bar(rule(ROWS,86,COLS)),56))) ))) + Arya - ( --51 ),COLS,destroy()),Sansa) )]][destroy(ROWS)] )),-86 - betray(( -70.435 )))][j] {
	Jon += ROWS
}
var Sansa = 17 * 0.41 / ROWS + 620.8
def TABLE[-COLS][i] {
	y *= 1;
	if(0.56){
	x += -betray(--41,( Ygritte ));
	if(x){

} else {
	TABLE[0.62][( -83 * y * Hodor )];
	if(COLS){

} else {

};
	if(29){
	Arya -= -mislead(---rule(0.45,( TABLE[COLS][-55] ),mislead() + mislead(-( bar(Ygritte,-dog) ) + COLS + 1 - ( 0.94 ),-( -mislead(foo(-370.26),destroy(---Hodor)) ),-1)),-0.89);
	Ygritte *= Hodor
}
}
}
}
var Arya = 1
def TABLE[ROWS][k] {
	0.5;
	Hodor -= dog - ( ( rule(TABLE[-72][mislead(100.378,22,130.97)]) / COLS ) )
}
def TABLE[--Hodor][i] {
	--Stark
}
def protect(Hodor,y){
	Jon += Sansa;
	Jon -= --0.43 - -bar(mislead(Sansa)) - --790.3
}
var Arya = destroy(-15,COLS - ( -Arya ))
assert mislead(--TABLE[COLS][( Hodor )] / 0.97 * Stark - -34 - 6,TABLE[( -1 ) - -Stark - ( Arya )][-1]) : "Winter is coming"
def TABLE[Jon][j] {
	dog += ( -91 );
	Hodor /= -ROWS
}
var Stark = ROWS / TABLE[0.06][mislead(1,destroy(( ( Arya + -460.4 ) ),1,-44))] - -380.25
var Stark = -0.2
def destroy(dog,Sansa,Ygritte){

}
def TABLE[710.93][i] {
	Ygritte
}
var x = destroy(foo(-350.5,-COLS,( -1 )))
var dog = -1
def mislead(Hodor,Arya){

}
assert 0.3 : "Winter is coming"
def betray(x,Sansa,Sansa){
	Sansa += ROWS
}
def bar(x,Sansa){
	Sansa -= ( mislead(( foo(( 0 * ( -17 ) ),Jon,--1 + COLS) )) );
	if(-0.4){
	x;
	x /= COLS
} else {
	----1
};
	Jon /= ( y )
}
var Hodor = Hodor
def betray(){
	x;
	if(COLS){

};
	if(foo(( ( protect() ) ),--( 1 ) - Stark / -ROWS,TABLE[0.09][-840.041])){
	if(-( destroy(bar(-protect(protect()))) )){
	----Jon / -betray(TABLE[-0.54 + -betray()][ROWS] + -Sansa) * Hodor
} else {
	( COLS ) * mislead(destroy(( --( COLS ) / ( -Ygritte ) )));
	bar(Arya,mislead(-destroy(( -ROWS ) + TABLE[COLS + -0.27][TABLE[COLS][-58 / -0.76 - protect(--44) / 0.32]])),-protect())
}
} else {
	40
}
}
def TABLE[--( --betray(( ( 1 ) )) - -1 )][k] {

}
def betray(Hodor,y,y){

}
var Hodor = bar()
def destroy(Arya,dog){

}
def rule(){
	-42
}
def TABLE[Ygritte][j] {

}
var Hodor = ( 0.19 )
var Sansa = -ROWS
var dog = bar()
def TABLE[-0.13][j] {
	if(protect()){
	( 64 );
	if(-980.193 * Sansa){
	Ygritte /= --COLS;
	if(bar(protect() * -0.11,-11,1)){

} else {
	Ygritte /= betray();
	dog /= bar(( Jon ) - ( x ));
	-0.29
}
} else {
	-1;
	Jon += rule(-protect(--0.2 / ROWS),( protect() ),260.57) / --( ROWS ) + TABLE[destroy(( mislead(y,1,0.73) ),rule(betray(),y) / -53)][( -TABLE[-( Jon ) / -0.39 * --300.324][ROWS] )];
	Jon *= ( -0.41 ) * 0.09
}
} else {
	Ygritte;
	Sansa += -( -0.46 )
};
	( ROWS )
}
def TABLE[rule(ROWS,destroy(betray(mislead(68))),destroy(-1 + COLS - -0.32,ROWS)) / Arya][j] {
	Sansa /= ( 0.41 )
}
assert -( -0.18 / betray(( 1 ),COLS + ( -protect(-950.63,( betray(Arya) )) )) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = x
var Ygritte = -1 * -0.89
def TABLE[Arya][k] {
	if(Jon){
	( ( ( --COLS ) ) )
} else {
	-0.46;
	if(-38){
	0.19;
	TABLE[Arya][COLS];
	betray(Hodor)
} else {
	if(ROWS){
	COLS + betray(--COLS)
} else {
	Arya -= ROWS;
	Hodor /= -0.93;
	if(( ( ( -destroy(-21,-22,-0.91) ) ) ) - -( --ROWS ) / ( ( destroy() ) )){

}
};
	x *= -56
}
};
	Stark /= betray(COLS,protect(Ygritte,( COLS ))) + rule(COLS) * -15
}
def TABLE[Ygritte][k] {
	dog /= mislead(betray(Jon));
	( TABLE[COLS][Arya] ) - COLS
}
assert 80 : "Nothing burns like the cold."
def TABLE[27][i] {
	betray(76) - ( 18 ) - ( -Sansa );
	destroy(( betray(( Sansa )) ),-76 * 0.59 - 23 - -bar(ROWS))
}
def TABLE[( bar(ROWS,-55) )][k] {

}
def TABLE[-700.6469][i] {
	Arya -= ( TABLE[TABLE[-( ROWS ) / COLS][TABLE[( 99 )][mislead(( -42 * foo(( -86 ),protect()) ),( TABLE[( ( ROWS ) * COLS )][Jon] ),COLS)]]][-0.18] + COLS )
}
def TABLE[Arya][j] {
	if(-0.55){
	TABLE[( Sansa )][( -0.35 )] * ( TABLE[( ( mislead(( 24 ),dog) ) )][( ( ( ROWS ) ) )] );
	if(betray(-1 / -mislead(( -1 ),Jon)) + y / destroy(x)){
	y -= ROWS;
	if(-COLS * x){
	protect(( Ygritte ),98,( TABLE[bar(foo(--0.61,-COLS - TABLE[-540.427][-1])) - ( bar(-( bar(-protect(COLS)) )) )][0.07] ))
} else {
	Sansa / -foo(destroy(-protect(-0.73,( ( protect(( ROWS )) ) ),Jon),bar(-15)),-0.08) / -150.8
}
} else {

}
};
	y
}
def TABLE[( Hodor )][i] {
	Jon *= Jon;
	if(200.0424){
	if(( bar(790.5,betray(COLS)) )){

} else {
	dog /= ( TABLE[16][rule(-1,ROWS,( -50 ) / ( Ygritte ))] )
};
	1 + -470.9 * protect()
} else {
	if(-y){
	if(Stark){

};
	( -Ygritte )
} else {

}
}
}
def mislead(Hodor){
	-( 0.48 );
	860.68 * -ROWS
}
var Ygritte = y
def TABLE[( COLS )][j] {
	Sansa += dog
}
def TABLE[ROWS][i] {
	if(rule()){
	( Hodor )
};
	TABLE[Stark][ROWS];
	( rule(y) ) + COLS / bar(bar(( Hodor + -27 ),-42),-12)
}
var Arya = -ROWS
def protect(Sansa){
	( destroy(Ygritte) );
	dog *= y
}
def protect(){

}
var Arya = ( ( ( 84 ) ) - TABLE[x][mislead()] )
var y = Hodor
def mislead(){
	Arya += x
}
def TABLE[( Arya ) / ( 1 )][j] {
	Arya -= rule(TABLE[mislead(TABLE[Sansa][x],TABLE[-0.9][protect() / Sansa],39)][-82] + ( ( ( rule(protect(1,protect(-x,ROWS,-TABLE[dog][970.5092]))) ) ) ) * ( 74 ),destroy(Jon,-530.7) / TABLE[COLS][-360.6],( Jon )) / -dog / -( ROWS );
	if(COLS){
	( -1 )
};
	Stark *= ( --( ( ( -mislead(Ygritte,Stark) ) ) ) + betray(-0.34,( foo(Hodor) )) - -ROWS + ( ( --ROWS - ( ( -69 ) ) ) ) - TABLE[( destroy() - foo(( -foo(-28,-1) ),-Hodor) )][ROWS + ROWS] / -0.13 / Sansa )
}
def TABLE[-( ROWS )][i] {
	Arya
}
def TABLE[ROWS][i] {
	bar(900.9064);
	if(protect(99)){
	Stark *= 0.5;
	-Sansa * Stark;
	0.07
} else {
	-0.69
}
}
def TABLE[-0.01][i] {

}
assert ( y ) : "What do we say to the Lord of Death?"
assert 1 : "One can not simply parse himself"
var Stark = Stark
def foo(Arya,Hodor,dog){
	-830.412
}
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon,Hodor){
	if(( mislead() ) / COLS / -1){
	betray(Ygritte + ---( Stark ) + dog * bar(-( TABLE[-1][--3 * 0.16 + -betray() * Arya - -Arya] ) * -91,( x ),Sansa + protect(-49,1,rule(betray(-0.4))) * -1) / TABLE[34][0.8],bar());
	dog -= mislead(Sansa,COLS + Hodor - -61 * Arya,-foo())
}
}
var Hodor = TABLE[( protect(( betray(0.47) )) )][COLS]
def TABLE[TABLE[-19][0.4]][i] {
	TABLE[( COLS )][--mislead(-ROWS)];
	x /= -27
}
var dog = Ygritte
def foo(Ygritte){
	if(-Sansa * ROWS - -TABLE[-protect(betray() / bar() - ROWS,bar(COLS))][dog] / dog * rule(foo(destroy(( bar(1) ),--mislead() - ( mislead(mislead(-( y * y )),( x ),72) ),mislead(61)),-( 0.98 ),0.95))){
	-Jon;
	0.12 + -55 + COLS - ( -780.763 ) - mislead(COLS,--45) / Sansa;
	Ygritte += --0.41
};
	COLS;
	if(COLS){
	if(Stark){

} else {
	0.92;
	Stark /= ( mislead(0.53,Ygritte) )
};
	mislead(rule() + ROWS,--380.626 * ( TABLE[ROWS / ROWS][-TABLE[-39 - COLS][-1]] ) + ( Jon * 31 ));
	Hodor += ( 230.75 )
}
}
def TABLE[-0.4][i] {
	( -0.32 ) * ( ROWS )
}
def TABLE[ROWS][j] {
	( Sansa / -( ( rule(( -dog )) ) ) )
}
def destroy(Arya){
	if(-protect(TABLE[ROWS][0.83 * 7],-82,rule(x,-Sansa / 40.89))){

} else {
	-1
};
	Arya -= COLS
}
var x = -Sansa * -TABLE[TABLE[TABLE[( protect() )][-x + TABLE[ROWS][x]]][-0.51]][-foo()]
def destroy(){
	TABLE[destroy(-1)][( destroy(10,-rule(x,Hodor)) )];
	betray(-760.896,Sansa,Sansa) - 0.44 / destroy(-( TABLE[Sansa][ROWS] ),mislead(mislead(( ( --protect(49) ) ),Stark),Jon));
	if(betray(-51 + -32)){
	if(-ROWS){
	Jon
} else {
	1;
	if(Stark * Jon){
	if(( Arya ) - ( mislead(-10.936,-49) )){
	0.78
} else {
	x *= ( ( Jon ) )
}
}
}
} else {
	Ygritte += x
}
}
assert -760.3 : "What do we say to the Lord of Death?"
def destroy(y,Arya){

}
def bar(Ygritte,Ygritte,Ygritte){
	TABLE[( COLS )][TABLE[Hodor][mislead(-1,-0.74,betray(protect(84),-51))]];
	if(Stark - foo(( protect(-( 5 )) ))){
	Hodor *= betray(-bar(0.63 / Arya,COLS) + bar(rule(ROWS,betray(protect(( -50 - y ) + ( -0.3 ),--bar(Hodor,y,-TABLE[x][-x / -0.64 * -bar() - ( ( TABLE[96][( ( Sansa ) )] ) - y * TABLE[( y / -ROWS )][-650.11] )]))) * 390.43),--96,COLS),-45,( -0.46 ));
	if(Stark){
	Arya;
	Hodor /= ( -5 ) / ( Stark )
};
	0.28 * -400.734
} else {
	Jon
}
}
assert foo(0.03) / Stark : "Nothing burns like the cold."
assert 1 : "Winter is coming"
def TABLE[betray(x,-34,mislead(COLS,-TABLE[( ( mislead(Sansa,COLS,TABLE[rule(mislead(TABLE[ROWS][ROWS] * COLS,dog,-( ( ( bar(-460.31) ) ) / x + protect(protect(x,Stark),-0.3,Ygritte) + --95 )),x)][-( ROWS )]) * -97 ) )][y]))][i] {
	if(destroy(Hodor)){
	if(( Ygritte )){
	dog - Sansa;
	-1 * Sansa
} else {
	if(-1){
	Hodor -= COLS;
	Ygritte;
	if(( Sansa + -1 )){

} else {
	Arya += Ygritte;
	if(94){
	Jon *= Stark
};
	( Arya )
}
};
	if(bar()){
	if(16){
	if(--0.81 - -( Sansa )){

}
} else {
	-60.9669;
	Sansa /= ( ( 1 ) )
};
	-( -COLS / COLS )
} else {
	Ygritte -= ( ( -0.24 / ROWS ) )
};
	Jon += --TABLE[dog][COLS]
}
} else {

};
	-rule(( ( -( ROWS - -1 ) ) ));
	TABLE[COLS][( TABLE[COLS][foo(( y ))] )]
}
var x = Arya
def rule(Arya,Jon){

}
def rule(Stark,Stark){
	foo(foo(foo(-bar(rule(y,TABLE[--0.22][( Stark )]) + TABLE[betray(( x ) * -5 / TABLE[dog][bar()],-ROWS + Hodor + 48)][ROWS] * Jon,Hodor),-0.72),COLS));
	Sansa /= -Hodor;
	if(Ygritte){
	Stark *= ( -COLS );
	dog
} else {
	( Sansa );
	-0.08;
	if(Jon){

} else {
	y += 0.12;
	if(Arya){
	y += TABLE[1][protect(1,-( -dog ))]
}
}
}
}
def TABLE[( ROWS )][j] {

}
def foo(Arya,Stark){
	Sansa /= -COLS
}
def TABLE[0.57][k] {
	if(( -29 + -rule(TABLE[0.15][58] - -bar(protect(ROWS),-0.87) - x) - ROWS + COLS + dog )){
	-foo(( ( Arya ) ),-y,-( dog ) / -TABLE[( y / ROWS + COLS )][Jon]) - ROWS + y - -y
}
}
def betray(y,Hodor){
	550.4;
	( --1 )
}
def TABLE[( -0.75 )][i] {
	if(COLS){
	0.25;
	COLS;
	if(98){
	ROWS;
	-Arya - ( y )
}
};
	y /= -rule(0.02) / TABLE[54][-Stark + --1 + --rule() / --0.16]
}
assert -25 : "Winter is coming"
assert bar(TABLE[Stark][--430.8 * foo(ROWS)] / -0.81 * Jon,-0.37 + Jon,protect(( -( ROWS ) ),( betray(COLS) ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( bar() ) )][j] {
	if(COLS){
	( ( 26 ) );
	protect(-( -ROWS ),-1)
} else {

};
	-TABLE[-bar(-ROWS,-40)][COLS];
	y *= 68
}
def TABLE[-COLS][i] {
	if(ROWS){
	destroy(TABLE[Stark + ROWS * -0.95][-43],84);
	protect(COLS);
	if(x){
	x /= ( ( ( x ) ) )
} else {
	dog /= 21
}
} else {
	-0.66
};
	foo(rule(ROWS,( 0.04 )))
}
def mislead(Hodor){

}
def destroy(dog,x){
	Sansa /= x
}
def rule(Sansa){
	y /= -COLS;
	protect(( ( 0.33 ) ) - -( -0.95 ),-48) + Arya
}
var Ygritte = TABLE[Ygritte][foo(destroy(( foo() )))]
assert betray(mislead(-38),Sansa) - mislead(Hodor,0.47 - -0.26) : "Fear cuts deeper than swords."
var dog = Jon
assert rule(-betray(25),betray()) : "Winter is coming"
def rule(Jon,x){
	if(( destroy(-x / 1,-730.15) )){
	Arya /= foo(Hodor,11,mislead(( -43 )));
	Arya *= 0.25;
	protect() - ( TABLE[y][Ygritte] * protect(COLS - -COLS) )
} else {
	---destroy(630.65) - dog * -0.33 + COLS;
	if(( x )){
	( 20 );
	Sansa -= -( -97 )
}
}
}
def TABLE[dog][k] {
	Hodor;
	Arya /= mislead()
}
assert COLS : "Fear cuts deeper than swords."
def betray(y,Ygritte,dog){
	ROWS;
	0.21
}
def TABLE[92][i] {
	x /= betray(-15);
	-bar(destroy(COLS),-0.58);
	if(( Hodor ) / -16){
	-foo(-12,COLS * ( Hodor ) * TABLE[y][foo(ROWS,1 - ( --( COLS ) ),destroy(foo(ROWS,( --rule(mislead(Sansa / ( ( -470.749 ) )),( --y / ROWS ),TABLE[mislead(ROWS,y)][-ROWS * COLS]) / TABLE[1][( -0.5 + dog )] )),TABLE[89][-mislead(( ( ( Hodor ) ) + Ygritte ))],-830.1092))],0.73) - -x
}
}
var x = destroy(y,x)
def rule(Ygritte){
	COLS;
	x /= ROWS
}
def protect(y){
	24;
	destroy(( Sansa ),Arya) * ( --destroy(-ROWS,-78) ) / foo(19,COLS - Hodor) / ROWS / 93
}
def TABLE[--ROWS + TABLE[COLS][TABLE[( ROWS * TABLE[TABLE[bar(--61,---TABLE[TABLE[( ( -0.08 / Sansa ) )][mislead()]][TABLE[( COLS )][( ( COLS ) )]])][ROWS] / 0.54][( ( protect(Ygritte,( -Hodor ),( ( -( ( protect(Hodor,( ( y ) )) / -1 ) ) ) )) ) + ( ROWS ) )] - ( destroy(-90) ) )][290.59 / Sansa + TABLE[ROWS + Hodor][dog / ( COLS ) / -( COLS )]]]][k] {
	-40 * -770.98;
	-COLS
}
var y = -Stark
def TABLE[( -TABLE[-Hodor][0.24 * ( foo(ROWS,COLS) )] ) - ( 850.3 )][j] {
	-1
}
assert TABLE[ROWS][y / 36] : "What do we say to the Lord of Death?"
assert --Stark : "What do we say to the Lord of Death?"
assert -25 : "Fear cuts deeper than swords."
assert destroy() : "Winter is coming"
def TABLE[( 34 )][j] {
	-( bar(-74) );
	0.41
}
assert -450.521 : "Winter is coming"
var dog = ( ( -1 ) )
var Ygritte = betray(19,( -44 ),( Ygritte + -0.18 / 810.4 ))
def TABLE[TABLE[820.8503][y]][k] {
	-89
}
var Stark = protect(ROWS)
assert protect(betray(Ygritte)) : "Nothing burns like the cold."
def destroy(Jon,Sansa){
	if(bar()){
	if(-98){
	COLS
};
	1
};
	Stark
}
var Sansa = TABLE[-1][COLS]
def rule(y,dog){
	COLS;
	y += rule(-10.9,COLS) / y
}
assert mislead(-protect() + -0.8 + -0.12) : "Nothing burns like the cold."
def TABLE[mislead(840.32,Stark,( ( COLS ) )) * ( Jon )][k] {
	Arya += Jon
}
var Jon = --TABLE[0.25][foo(destroy(foo(Stark),( protect() ),mislead() * 0.7),-66)]
def rule(Stark){
	if(betray(6,-rule(rule(1 * TABLE[y][Stark] - ( -COLS - -TABLE[0.91 + -Arya][destroy(( ( -62 ) / Stark ))] ),1,( -84 / -89 - -destroy(Stark,41) )),-( -ROWS ),Arya))){
	if(bar(-destroy() - ( Hodor ) - bar())){
	Arya /= 1;
	( betray() )
}
} else {
	if(COLS){
	-Stark;
	Arya + ROWS
} else {

};
	Arya *= -0.12
}
}
def TABLE[rule(( mislead() ),y / 59,ROWS)][j] {
	Ygritte
}
def TABLE[protect(0.75,( COLS ),( -25 ))][k] {
	( COLS )
}
var Hodor = -( -1 )
assert -1 : "One can not simply parse himself"
assert ( -0.58 ) + -destroy() : "Winter is coming"
def TABLE[ROWS][k] {
	if(Jon){
	-5;
	Hodor += -0.21
} else {
	Ygritte *= COLS
};
	y /= Hodor
}
assert -33 : "What do we say to the Lord of Death?"
assert Stark : "Nothing burns like the cold."
assert ( protect(0.6) + ROWS ) : "Fear cuts deeper than swords."
def TABLE[-COLS * x / protect(77,0.57,destroy(63,--1))][k] {
	-8;
	0.15
}
def TABLE[( COLS )][j] {
	if(ROWS * TABLE[bar(foo(ROWS + ROWS,-14),1 * ( Arya ))][TABLE[-0.75][destroy(( 52 ))]]){
	if(bar(ROWS)){
	if(0.76){
	10.4
} else {
	if(COLS / --COLS + foo(( 89 ))){
	rule(COLS)
} else {
	--210.8;
	if(foo(Jon,-Arya * -41)){
	if(100){
	if(-5){
	mislead(62,( destroy() ));
	Hodor += Stark
}
} else {
	Stark *= ( mislead() ) / -rule(betray(rule(y),( COLS )),Jon)
};
	( ( ( -65 ) ) );
	if(14){
	Sansa * protect(( -410.075 ));
	Sansa *= 290.965
}
} else {
	if(74 - ROWS){
	y *= 0.5;
	dog /= bar(Hodor,ROWS)
} else {
	-1;
	if(TABLE[-99][-mislead(COLS)]){

};
	0.54
}
}
};
	-bar(-0.97,Sansa,Jon) * --240.2512
};
	---380.54 - x / -Ygritte + -Arya
}
}
}
def rule(Jon){
	betray()
}
var Sansa = y
var Arya = ( -38 )
assert -( ( foo(( 1 ),x,( 1 )) ) ) - rule(mislead(betray(y * ( -dog - ( ( destroy(mislead(-rule(-Arya),-destroy(Ygritte)),-1,Arya) ) ) ) + ( ( -44 ) ),TABLE[rule(ROWS,( COLS * mislead(Ygritte,Hodor,( rule(( COLS ),x,ROWS - mislead(destroy(Ygritte,x))) )) ))][x * destroy(-dog - --290.53)]),-( destroy(ROWS) ) + TABLE[bar(protect(( ( Hodor ) * y ) / protect(ROWS) - 0.17) + ( 0.18 ),-Sansa)][COLS] / COLS / COLS / foo(96),( Ygritte )) - -( Ygritte * COLS )) : "Nothing burns like the cold."
var Sansa = -COLS
var x = -0.58
def TABLE[( mislead(Ygritte) )][i] {
	Hodor -= -( -530.021 );
	1
}
def TABLE[rule(mislead(),-Sansa)][i] {
	Stark += ( ( 0.01 ) / Ygritte / TABLE[( ( protect(betray(protect(destroy()) / protect(-40) + -foo(-ROWS / ROWS) * ( 1 + Arya )),( ROWS )) ) )][-0.56] );
	Sansa *= -Hodor
}
def betray(y){
	y += dog;
	Jon
}
def TABLE[protect(Arya / Stark,protect(),-Jon / bar(protect(TABLE[COLS][( destroy() / TABLE[COLS - -( -bar(-TABLE[38][foo(betray(-Stark,( COLS ) + ROWS))]) )][( -( Ygritte ) )] - ( -750.4699 ) ) + ( --protect(COLS,0.59) ) / -1 * Arya],-280.2,dog),COLS) - ( ( destroy(Stark,bar(betray(-0.87 + --500.288 / ROWS))) ) + COLS ) - -Jon / ( ( TABLE[COLS][dog] ) ) * bar(y) / TABLE[rule(destroy(mislead(COLS)),( TABLE[-1][( destroy(-dog,-0.38,TABLE[mislead(( y ))][dog]) - -mislead() + mislead(ROWS) )] ),8 - ( y * -ROWS * x ))][-protect(destroy(-COLS + destroy(Ygritte),-TABLE[-( ( Stark ) )][65] * -( ( ROWS + ( ROWS ) ) )))])][k] {

}
var Ygritte = mislead(--Sansa,-y)
def TABLE[destroy(TABLE[1 / protect()][betray(( ROWS ) / COLS,COLS,y)] * foo(),--81)][j] {
	TABLE[protect(--1 - rule(x) + Arya * COLS,protect())][0.36] * -rule();
	Stark -= bar(Stark + x,-0.63)
}
def rule(Hodor,y){

}
var Jon = -44
def TABLE[protect(-bar() / protect(7,-COLS),-bar(( mislead(-COLS - Stark,( ( 1 + -1 / ( ROWS ) ) )) * y ) / Stark))][k] {
	if(COLS){
	( ( ( -53 ) ) );
	if(TABLE[ROWS][COLS]){
	if(-3){
	if(bar()){
	if(--38 * TABLE[-93][betray(foo())]){
	if(--TABLE[protect()][-( mislead(rule(3),-0.51) ) + -64 / -( TABLE[( COLS * -COLS + ( mislead(-ROWS) ) )][COLS] )]){
	Arya /= dog;
	if(TABLE[-x][protect(-0.12)]){
	if(x){
	destroy(( -0.85 ));
	Stark /= Jon
} else {
	y
};
	TABLE[y][ROWS]
} else {
	ROWS;
	y += 0.48;
	( ( ( -rule(Arya,-0.51,-Stark - dog / Arya) / ( -Arya - mislead(( -Hodor ),Jon) + rule() ) ) / -Jon * destroy(41) ) )
}
} else {
	destroy(TABLE[TABLE[0.94][TABLE[( TABLE[bar(-2,destroy(( foo() ),rule(-0.44)))][-100.83 / Hodor] )][( ROWS )]]][protect()]);
	Stark
}
} else {
	if(Hodor){
	Jon /= ROWS;
	( COLS );
	Stark
} else {

};
	ROWS;
	x -= Sansa + ROWS
}
};
	Sansa += -COLS
} else {
	if(foo(( -TABLE[--780.0274][-20] ) * foo()) + ( COLS )){
	Jon += -0.14;
	1
} else {

};
	-foo(1) / protect()
};
	if(---ROWS / -59){
	if(( dog )){
	dog -= ( ROWS );
	95 * foo(-( Arya ),( TABLE[ROWS][28] ),mislead())
};
	if(COLS){
	Sansa;
	if(( Stark )){
	Stark /= ROWS;
	Arya
}
} else {
	Ygritte += ( protect(bar(),Ygritte) );
	Ygritte -= -0.02;
	if(foo(COLS,920.814)){

} else {
	Hodor;
	if(Arya - protect(0.36,( destroy(y * ( COLS )) ),destroy(( bar(( 81 ),mislead(Jon)) ) * ROWS,protect()))){

} else {
	if(rule(mislead(),( Arya ))){
	-80
} else {
	COLS;
	TABLE[rule() * rule(( rule(x,ROWS / y) ),-ROWS,48)][TABLE[foo(rule(( mislead(( -Stark )) )))][--TABLE[mislead(150.4)][betray(( -0.48 - ( 35 / -Stark ) ),( protect(TABLE[betray()][-13]) ),-protect(Hodor) - dog * --( 15 ))]] - -Hodor * ROWS + foo(--betray(dog) - dog * ROWS + dog / -TABLE[protect(COLS + ROWS)][-69])]
}
}
}
}
} else {
	if(mislead(-COLS - -56 / -620.01,x / COLS / foo(),( ( mislead(dog) ) )) - -foo(destroy(betray(ROWS,-88)))){
	COLS
} else {
	0.83;
	if(13){
	Jon /= Hodor;
	mislead()
} else {
	( ( bar(COLS,rule() + --34) ) )
};
	y - TABLE[1][TABLE[bar(( ( x / Jon ) )) / protect(89,( -73 ),bar(TABLE[foo(-x)][rule(TABLE[-ROWS][---( COLS ) / mislead()],( -0.32 + --Sansa ))]))][protect(( dog ),protect(betray(),dog,mislead(0.77,y) + COLS - ROWS))]]
};
	-y
}
} else {
	if(foo(Hodor,--0.12 * ( x ) - Jon / ( --1 + ( dog ) * COLS ))){

}
};
	if(( 0.48 )){
	COLS
} else {
	if(( Ygritte )){
	if(-0.44){
	-40;
	if(---( -betray(( ( --( ROWS ) * ROWS ) ),1) * betray(Arya * protect(-ROWS)) - TABLE[-( ROWS )][y] - ( ( COLS ) ) )){
	--COLS;
	Jon
}
} else {

}
} else {
	Sansa /= TABLE[( COLS ) * 1][Sansa];
	dog -= rule(--570.37)
}
}
} else {
	y -= ( destroy(-TABLE[( --930.189 )][destroy(destroy(-( Arya ) * -510.2),( -( mislead(ROWS) ) ))],-260.8,-COLS) );
	Jon += ROWS;
	if(Jon + Sansa * betray(COLS) * ( bar(( ROWS ),-destroy(-( Arya ),( Stark ) - -17)) )){
	if(-y){
	dog *= -Arya;
	Sansa -= 0.29
};
	if(rule(( ROWS ),( -1 ))){
	-1
} else {

}
} else {
	if(-mislead(Jon,( dog ),dog) / -90){
	Stark - ( Ygritte );
	( bar(-Sansa) );
	if(bar()){
	if(( Stark * Ygritte / ( TABLE[( 0.57 / --1 + 78 * TABLE[( -( --25 ) / ( 67 ) )][( ( dog + ( dog ) + Stark ) - -26 )] / ( Sansa - ROWS ) )][foo(-0.22,( mislead(( ( 27 ) + ROWS ),-TABLE[COLS][( Stark )]) ))] ) )){
	y /= y - x;
	( ROWS / Arya )
};
	Arya *= 0.73
}
} else {
	Hodor /= Arya;
	( ROWS );
	if(Hodor){
	if(-240.585){
	( ( -bar(--rule(bar(940.135),mislead(foo(12,---0.89 + -0.38,x * ( --0.16 )) - -0.12,( -Jon ),--( -1 ))),( COLS )) ) )
} else {

};
	mislead()
} else {
	y -= y;
	TABLE[ROWS][mislead(betray(COLS,foo(-destroy())))]
}
};
	Hodor /= betray(( -COLS ));
	ROWS
}
}
}
def TABLE[( COLS )][j] {
	if(-0.27){
	if(rule(0.56) + -36 * -69 * ( ROWS ) * -TABLE[COLS][Sansa]){
	-1
};
	Sansa -= --0.04 - Hodor;
	if(bar(-0.16)){
	y *= x;
	Ygritte /= -0.69 / -( protect() )
} else {
	if(-( foo(TABLE[( -790.817 / Hodor )][betray()],COLS / -ROWS + 36 * y) )){
	Stark *= ( ( ( ( 340.424 + COLS ) ) ) );
	Jon -= 1
}
}
} else {
	-rule()
};
	if(foo(( ( COLS ) )) - -0.71){
	if(protect(COLS)){
	if(TABLE[Sansa][protect(Sansa)]){
	Ygritte -= Hodor;
	if(83 - COLS){
	if(destroy(-2)){
	betray(Hodor,x,rule(TABLE[-0.76][protect(( 1 ) / ( ( --( ( 28 ) / ( 2 ) ) - y - -0.21 ) ),bar(-( ( dog ) ),mislead(( -45 / Arya ),TABLE[betray(mislead(0.74,mislead(destroy(--TABLE[betray(( -bar(TABLE[0.85 + -TABLE[betray()][COLS]][-bar(bar(bar(betray(-COLS)),ROWS))],-( COLS ) - mislead(TABLE[ROWS][( -( protect(betray(bar(bar(( -0.99 )),-betray(bar(dog))),ROWS),( bar(-foo(),TABLE[TABLE[( TABLE[COLS - betray(rule(TABLE[-COLS][870.73 * Sansa])) * --TABLE[Ygritte][ROWS + bar(( betray(Hodor,TABLE[26][-COLS]) ))] - ( COLS ) + COLS][--dog / ROWS] ) + -mislead(foo(),COLS)][Arya]][y]) )) ) )] * COLS)) ),--6,destroy(COLS,protect(TABLE[TABLE[-370.7622][( -86 )]][mislead()])))][TABLE[rule(-destroy(-Ygritte,-ROWS - betray(--0.91,COLS) / rule(destroy(),Hodor),( ( 0.86 ) )) / ROWS,-( COLS ),0.23)][TABLE[-990.1][ROWS]]] + -75,Stark)),( protect(mislead(COLS,-TABLE[TABLE[ROWS - Arya][-bar(COLS)]][26]),TABLE[rule() - Ygritte][0.59]) )),( TABLE[mislead(rule(0.32 * ROWS,-0.19),Arya)][betray(--130.3) / 51 - -( ( 0.3 ) )] * ROWS + -rule() ),TABLE[Hodor][---800.73])][-62])))] + -0.72,( bar() * protect(Sansa) / -( 1 + -( -0.79 ) ) / Jon * -Arya )))
}
} else {
	-mislead()
};
	if(mislead()){
	if(y){
	Ygritte /= foo()
};
	-1 - ROWS;
	x -= ( 22 )
}
};
	if(-1){

}
} else {
	y += Stark;
	Arya += ( Ygritte )
};
	if(( COLS )){

}
}
}
var Stark = -ROWS
def TABLE[protect(----betray(protect(TABLE[COLS][destroy(-Arya)]),790.6351 * -( -40 ),-TABLE[betray(( destroy(--( Arya )) ),COLS + protect(Sansa))][dog]),( ROWS ),mislead(ROWS * 0.21 * rule(-bar(-bar(( dog / 0.85 ),mislead()) + 39),ROWS,-( ( ( TABLE[dog][( -ROWS )] ) ) )),Hodor))][k] {
	Sansa += COLS;
	( ( ( 0.41 ) ) )
}
var y = --1
assert x : "One can not simply parse himself"
var y = ROWS
def TABLE[( -470.368 )][j] {
	( TABLE[-protect(-ROWS + -( ( y ) ))][-970.9] ) / ( ( rule(-0.34,bar(ROWS,( Ygritte / Jon / --0.53 )),130.71) - --Jon - ( -TABLE[TABLE[90.508][Ygritte]][-0.72] ) + COLS - ( Arya ) * ROWS ) ) / bar(--0.81,( destroy(x) ),-ROWS)
}
def TABLE[( ( ( -1 ) ) )][i] {
	if(TABLE[-( ( ( 570.877 * protect(-0.18) * ( Arya ) ) ) )][destroy(rule(TABLE[TABLE[ROWS][Sansa]][0.4],dog),rule(x))]){
	y /= -1;
	--ROWS
} else {
	x += -1;
	Jon
};
	rule(ROWS,COLS) * TABLE[Arya][foo(--41,Stark)] + ( --( mislead(TABLE[( Hodor )][rule(-( ( ( destroy(-Stark * destroy(Jon,Jon - 59) * protect(COLS) + bar(foo(72,foo(-( Hodor )),-( TABLE[COLS][( 50.27 )] )),COLS)) ) ) ),Stark * Stark)],Arya,COLS) ) )
}
var Arya = -bar(ROWS,bar(bar(-1) / -730.5942,( COLS ))) / ROWS
def rule(){
	if(( -TABLE[Hodor][bar(Ygritte)] - -protect() )){
	if(Sansa - ( ( -ROWS * ( ( TABLE[Sansa][( ( Sansa ) ) - bar(ROWS,mislead(-0.78 / ( COLS ),TABLE[protect(Arya,----200.57)][ROWS])) - TABLE[Jon][( Hodor )]] / bar(destroy(TABLE[( TABLE[ROWS * --ROWS + ROWS][( 0.83 )] )][( protect(rule(-16 / -TABLE[( -ROWS )][( -1 )] * mislead(--1,bar()),56,ROWS),( destroy(69 + -protect(foo(betray(rule(x,( 0.91 )) * 420.016 + Stark / ROWS - ( -bar(ROWS,Jon) ),-mislead()),0.92),dog,-protect(protect(0.96),destroy(62,TABLE[Ygritte - ( foo(x,rule() * ( Stark / mislead(( Arya )) )) )][rule(y)]),---590.7162)),-Ygritte,--0.58) )) + ( ROWS ) + Ygritte + 44 )],Sansa)) ) ) ) )){
	ROWS;
	Stark -= Sansa
} else {
	if(0.84){
	Hodor /= TABLE[Hodor][-( bar(mislead(mislead(TABLE[-96 / ( -( Sansa ) )][TABLE[1][88]],Arya,bar(--foo(COLS) + -1,destroy(betray()))))) )]
} else {

};
	COLS
}
}
}
def betray(Arya,Stark,Ygritte){
	if(( y )){
	if(bar(67)){
	y;
	if(mislead(-0.07,62)){
	betray(-( Sansa ),0.5 / dog,( -( Ygritte ) * dog ));
	if(destroy(Arya,--dog)){
	if(ROWS){
	y += TABLE[-17][-Jon] * x;
	Sansa -= -( bar() );
	x -= ( -( Sansa ) / -mislead(( ( ( TABLE[COLS + mislead()][TABLE[y][-0.83]] * x ) ) ),--COLS,-rule(destroy(destroy() / destroy(bar(-1,Ygritte))),( mislead(dog,( --59 )) ) - -ROWS + -1,ROWS)) / Sansa * Sansa )
} else {

}
} else {

};
	if(-x){
	if(ROWS){
	protect(( ROWS ),destroy(mislead(Jon,TABLE[TABLE[( -0.74 )][-foo(TABLE[foo()][( ---( ( 1 ) ) )] * COLS,--0.45,-dog)]][-220.44 - -0.26 - mislead() - ( ROWS )])));
	-( Hodor ) - TABLE[Jon * 85 / Arya][( ROWS )] * -ROWS
} else {
	if(( ( Jon ) ) - foo(88,ROWS) / 0.75){
	dog /= ROWS;
	Stark *= --rule(0.03,dog)
} else {
	-( protect(destroy(ROWS)) );
	if(--Sansa - Hodor){
	if(-Arya){
	if(ROWS){
	Sansa *= --0.24;
	0.26 * protect(Arya,foo(destroy(foo(TABLE[( y )][foo(ROWS,4,Hodor) + ( destroy(--( COLS ),Jon) ) * -rule(0.2,( -0.57 ) + Arya + -0 - mislead(rule(-0.81)),bar(3,Jon))]) + mislead(x,Sansa)),destroy(( -( ( Arya - ( ( destroy(foo(foo(ROWS,--59),--0.23),TABLE[TABLE[x / Sansa][-Stark]][-0.55]) ) ) ) ) ) / ( destroy(( -0.04 ) * -destroy(( Jon + betray(0.02 / COLS,8) ) + -COLS + -Ygritte / rule(rule(COLS + TABLE[-0.51 - bar()][( betray(protect(Arya,mislead(---( 1 ),( ( -410.182 ) - foo(360.6 - COLS,( TABLE[-1][protect(ROWS,ROWS)] ),-0.19) / destroy(-0.68,rule()) )),COLS)) )],-TABLE[TABLE[mislead()][betray(betray(mislead(( -1 ))),( ( Stark ) ))]][( TABLE[Arya / ( TABLE[( COLS )][foo(COLS,-0.16)] )][-18] )]),betray()),290.2)) ),Jon))) - bar() * COLS;
	Ygritte /= -foo()
} else {
	Sansa
};
	570.688
};
	dog += Sansa
} else {
	mislead(-y);
	bar(( ( -Stark - foo(protect(mislead(-COLS,-1),Ygritte) + ( 59 ),-70 / --foo(x,y)) ) ))
};
	( 0.33 )
};
	--0.05;
	TABLE[460.6364][-0.08] + ( ( -87 ) )
}
}
} else {

}
};
	0.56 + Ygritte
};
	if(COLS){
	rule(( foo() * 690.9 )) * ( bar(( betray(( ROWS ) * ( ( -39 ) ) / ( ( foo(---1 * TABLE[-0.45][0.65],COLS) ) ) / ---( -( Jon ) / ( -0.64 ) ),mislead(-bar(protect(96 / 350.67)),bar(-0.09,( ( betray(( ROWS ) - ( COLS ),ROWS) ) )) - ( 0.86 - -( ROWS ) ))) ),COLS) );
	y -= -ROWS
};
	Sansa += -Stark
}
def TABLE[destroy(COLS)][j] {

}
def TABLE[-Hodor + -0.38 - Arya][j] {
	protect(x,-0.29,1);
	Stark
}
def TABLE[-0.08][k] {
	-950.476
}
def bar(Hodor,y){
	foo(-95);
	x -= 0.43
}
assert COLS : "Nothing burns like the cold."
var Arya = ( -43 ) + 480.427 + ( ( ( ( -Arya ) ) ) )
var Stark = betray(-COLS * ROWS,-1 / 62 + ROWS - ROWS - destroy(-0.47,78 + COLS / dog,foo(rule(mislead(-dog,COLS / ---0.27 * ( TABLE[y][COLS] )) + 0.17 + ( ( -( ( ( ( -bar(Hodor) + Jon ) ) ) ) ) ) / ( ( Ygritte ) ) + 88) / ( COLS ) - rule(-1,--67,-0.19))) - Arya)
def TABLE[ROWS][i] {
	-TABLE[( COLS ) - ( -Ygritte ) + 1][y];
	if(betray(-Ygritte,Hodor) * -0.46){
	if(Sansa){
	dog += 280.522 - -4 / protect(-Stark)
};
	-25 - ( Stark ) + protect(protect(970.04,--rule(Ygritte) - -TABLE[betray(-( -betray(990.372,-59 * COLS + ( COLS + 0.43 )) ),-TABLE[0.92][destroy(protect(-36,bar(mislead(( 71 )),ROWS)))] + -TABLE[Hodor][( dog + y / 1 )])][ROWS]))
} else {
	-1 - 97 * TABLE[ROWS][TABLE[0.53 * dog - 0.04 * ( foo() )][--1]]
}
}
def TABLE[protect(y)][k] {
	y -= protect(( 0 ),x) / -TABLE[-0.01][ROWS] / Sansa;
	if(( -rule(( ROWS + protect() ),10.8) )){
	-56;
	Hodor += -x
} else {
	-Sansa
};
	dog *= -0.66
}
assert Sansa : "What do we say to the Lord of Death?"
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( 0.62 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( Stark ) )][k] {
	mislead(( TABLE[y][--190.1] ),( mislead(-foo(TABLE[mislead(1)][TABLE[COLS][50] - rule()],COLS)) ),-1)
}
def betray(Stark){
	Hodor /= rule(Ygritte,( rule(ROWS) ) * mislead(( -9 )));
	ROWS;
	if(-TABLE[-77][-Arya]){

}
}
def TABLE[-1][k] {
	betray(170.167 / ( TABLE[dog][--( ( -92 ) )] ) - -protect(COLS),-1,( 60.24 ) + -0.08) + TABLE[( -( TABLE[protect() - -990.86][y] ) )][y] / ( x - COLS );
	Ygritte -= --COLS / ( -ROWS )
}
assert -betray(destroy(y - ( -0.45 ),-Hodor,( 0.04 + -0.91 ) * --betray(-COLS) + -460.03 + Jon * 33 * 0.85 - -80),x) + -87 : "One can not simply parse himself"
def betray(y,y){
	dog;
	Sansa /= ---Stark
}
def foo(dog,y){
	if(betray(y,bar(),destroy(bar(),TABLE[Stark][x]))){
	x += -( ( ( TABLE[x][72] ) ) )
};
	if(-x - foo(mislead(-ROWS * ( foo(COLS,-foo(TABLE[-( -0.11 )][mislead() * -25])) )) * Sansa,-760.669,TABLE[( 0.25 )][TABLE[-Jon][( -( rule(betray(TABLE[-betray(-rule(COLS),0.32,( -foo() / bar() )) / COLS][COLS],( Sansa )),y / ( mislead(destroy(betray(Stark,( ( 390.35 ) ))),COLS,-710.123 / Stark) )) ) )]] * ( TABLE[Hodor][bar(-( ( ( ( -( protect(( --TABLE[-foo(( Arya ),dog) / bar(--31)][COLS] / -0.51 ),( ( rule(Jon,---560.321,-( 73 + betray(( ROWS ),Stark) - ( Sansa ) )) ) )) ) / -0.81 * -( ( destroy(-290.738,mislead(-( ( -100.7 ) * bar(TABLE[y - Jon][mislead()]) ) / ( COLS ))) ) ) * -Jon + Jon ) ) ) ) * ( rule(( protect(( 1 ),-ROWS / 0.7) ),mislead(-64,Sansa)) ) - foo(betray(y * ROWS),( ---0.99 )) + ( mislead(Ygritte + ( betray(mislead(ROWS,--( ROWS + --TABLE[-ROWS + bar(ROWS - 0.41,protect(y,-dog) * TABLE[---39][foo(( bar(1,53) ),ROWS) * Jon]) * TABLE[-99][TABLE[65][foo(y)]] + 71 / destroy(--COLS,COLS) - -28 + ( ---ROWS + 8 / TABLE[-( ROWS )][-protect() / TABLE[COLS][( ( Ygritte ) )]] - --0.94 * Ygritte ) + ( destroy(--0.48,-900.9996) )][90] * 2 )) - x) + -bar(( -80 ),TABLE[ROWS][Stark]) )) ) * ( foo(COLS,Arya) ) + TABLE[( ( -bar(COLS,600.73) ) )][Sansa] + ( -4 ) * --0.24 / dog)] + -( ROWS ) ) + Ygritte)){
	x += ( 0.98 );
	if(1){
	Ygritte += dog;
	Arya += protect(TABLE[destroy(-1)][Arya] + bar(( ( Jon ) ),TABLE[78][( ROWS )]),( -Hodor )) * ( -mislead(rule(betray(TABLE[protect(( betray(x,bar(rule(93))) ) + ( bar(480.3302,Sansa) ))][Jon]),-0.75),bar(),bar(-840.1663,bar(Arya),COLS)) / -ROWS - ( COLS - foo(0.3,0.12) + Jon ) )
} else {
	if(Hodor * ( ROWS ) * ROWS + 0.36 * protect()){
	Stark += COLS
} else {
	if(47){
	y *= -0.53;
	( protect(bar() + -( ( 37 ) ) * -30,x) ) / COLS / -1
};
	if(-650.3537){
	ROWS;
	TABLE[-mislead(COLS)][( -TABLE[430.737][y] )]
};
	if(destroy(-0.52,-bar(bar(34,( y )),( ( -destroy(destroy(Stark)) ) ),Ygritte))){
	if(-4 + 1 / protect(mislead(),-mislead(Arya,-( dog )),ROWS) / 0){
	if(betray(betray(),Stark - dog)){
	COLS
};
	-betray()
} else {
	Ygritte *= Sansa;
	if(Ygritte){
	y /= Hodor - ( x )
} else {

}
};
	if(-bar(-80.5)){

}
} else {
	Jon -= ( -Stark );
	betray(-41,( ( ROWS ) ))
}
}
}
}
}
var Stark = TABLE[Hodor][COLS]
def TABLE[ROWS][j] {
	( 42 ) * COLS;
	( Sansa )
}
def foo(){

}
var Arya = -0.37
var Jon = Sansa * y
def destroy(Stark){

}
assert rule(-51 + dog,( 67 )) - ( -mislead(ROWS,Hodor) ) + COLS + dog : "What do we say to the Lord of Death?"
var x = x
def protect(y,Arya,dog){
	-44 - Jon + ROWS - COLS * -bar();
	if(Jon){
	if(--( 95 )){
	Hodor /= TABLE[-0.09][protect(-destroy(1),( ( ( -1 ) ) ),-0.11)];
	if(-Hodor){
	if(-ROWS){

}
} else {
	if(-( ( mislead(TABLE[( -x - COLS - ( betray(Stark,bar(( mislead(protect(bar(-1),TABLE[( rule(TABLE[bar()][ROWS],Arya) )][ROWS],( 0.12 / ( destroy(1) - ROWS ) * ( ( Jon ) ) )) - TABLE[mislead()][-( 0.5 )] + -mislead(( ( TABLE[( 530.58 )][rule(--0.63 - ( ROWS ) + bar(190.24,protect(),-ROWS))] ) * 58 ),-COLS) + -Ygritte + destroy(y,---0.28 * mislead(-( Ygritte )) * 0.2 * -COLS * -0.54 - Arya,Hodor) - Hodor / -Sansa / 440.54) ) + betray(rule(-( 250.621 )),mislead(rule(ROWS) * ( ---Jon ),( ( --TABLE[ROWS - -TABLE[COLS][x + ( dog )]][foo(rule(( y ),Sansa),-ROWS / COLS,( ROWS ))] ) ) - 910.995))) + COLS / -betray(betray(( Arya )),-rule(x,-1))) ) + COLS ) * x][( -29 )]) ) )){
	-1
} else {
	bar(ROWS,-99);
	rule(foo(),Stark)
};
	dog += -600.62 + Hodor;
	if(72){
	x -= bar(ROWS)
} else {
	Jon /= dog
}
}
} else {
	Jon += ( COLS / -betray() * Ygritte * TABLE[-590.89][Stark] + ( ( -70 ) ) )
}
} else {
	x += Stark;
	if(TABLE[72][-foo(( -ROWS ),0.09 - Jon) * x / --COLS] / 0.36 + -COLS - TABLE[rule(Jon + ( COLS ),-32)][-0.53] + betray()){
	if(( ROWS ) * ( betray(COLS) ) + TABLE[-destroy(-0.8,mislead(-1,x,--rule(-1,x)))][( -0.63 )] * rule(destroy(bar(( 27 ),0.85,destroy(---450.6,mislead(( ROWS ),Ygritte,ROWS))),mislead(63,--83,Ygritte) * COLS * ROWS,destroy(Arya,-( -0.67 )))) / ( -0.98 ) / ( ( ( -1 / ( -1 ) ) + -78 ) )){
	COLS;
	( -Hodor )
};
	y *= -490.88
} else {
	Stark *= -Arya - -0.42 / -destroy() * Jon - ( --y / ( -1 ) )
}
}
}
def foo(){
	dog *= -20 / Arya
}
def TABLE[-x * -0.46][k] {

}
def TABLE[-mislead()][j] {
	x -= ( ( ( COLS ) ) );
	if(rule(-ROWS)){
	if(rule()){
	if(Stark){
	--TABLE[-ROWS][1];
	if(--dog / -0.89){
	-87;
	x
}
};
	if(COLS){
	if(x){
	Hodor *= -0.46;
	( ROWS ) * ( TABLE[rule(( TABLE[0.04][78] ),bar(15 * ( Arya )) - ( ( ROWS ) ) - -0.42 - y * ( -0.9 ),32 + Jon)][--( TABLE[COLS][foo(-830.91,x)] )] ) + bar() / TABLE[-0.07][-1]
} else {
	( -( ( -TABLE[betray(-1,protect(( foo(270.039) - COLS )))][dog] ) ) );
	-1
}
}
} else {
	Stark *= Arya;
	if(ROWS + bar(foo(),-0.46)){
	( dog );
	Sansa *= -dog
}
};
	dog += 57;
	if(( mislead() ) * 1){
	ROWS;
	rule(COLS)
}
} else {
	--1
};
	dog /= -( -0.35 )
}
var Jon = -0.04 + x / mislead(bar(rule(( -0.65 ),( COLS ) / Sansa / 25)))
def TABLE[-protect(dog)][k] {
	Hodor -= bar(COLS,mislead(mislead(ROWS,dog,protect(bar(( Arya ))) * 530.3791 / TABLE[foo(( ROWS ),COLS)][-COLS])) + -860.605 + 1,-88 + rule())
}
def TABLE[protect(Ygritte,-0.73)][k] {
	ROWS + y
}
assert protect(-0.57) : "What do we say to the Lord of Death?"
def rule(Stark){
	dog -= protect(TABLE[-50][( Jon )],ROWS);
	Ygritte += ( -86 )
}
def protect(x,x,Ygritte){
	protect(--betray(dog));
	Stark /= TABLE[COLS][0.68]
}
var dog = ( -37 * x )
def protect(Arya,Jon,Ygritte){
	if(-( --Jon )){
	if(-0.74 * -1 * ( y )){
	if(--x){
	92;
	y += TABLE[--1][--Ygritte]
} else {
	dog /= -1;
	if(0.48){
	( Jon / ROWS ) / COLS;
	x /= -y
} else {
	y /= COLS
}
};
	-COLS;
	rule(ROWS)
} else {
	( -( -99 ) );
	-0.82
}
};
	Arya += ( COLS );
	if(-ROWS){
	( TABLE[( betray() )][ROWS] / -87 );
	x *= -0.82;
	if(-1){
	if(0.9){

}
}
} else {
	COLS;
	x *= -0.4;
	Arya -= mislead(71) - 0.93 / betray(protect(-TABLE[-destroy(-1,--Hodor + --580.49)][100.6],-( y - TABLE[-mislead(-300.1)][-y + COLS] )),( destroy(---bar(( COLS )),COLS,destroy(betray(64,Jon,-7)) * ( -0.56 )) ))
}
}
def bar(dog,Jon){

}
def foo(Hodor,Ygritte,y){
	Jon *= ( bar(-890.483,( ROWS ) - ( Ygritte ) / Hodor,y) );
	if(TABLE[rule(-940.74,mislead(-1,bar(( 91 ))) - -17,y)][destroy()]){
	if(( -----ROWS - COLS + Ygritte / Stark + ( Ygritte ) )){
	if(42 / ( -( -( ( Jon * ( dog ) + 0.39 ) ) ) ) + dog){

};
	Sansa
};
	Stark /= Ygritte
}
}
def TABLE[Stark][k] {
	if(-0.56){

}
}
var y = ROWS
var Ygritte = ROWS
def TABLE[protect(betray(TABLE[mislead() / mislead(COLS - -1,-45) + bar(TABLE[( y )][protect(TABLE[-( TABLE[-( ( ( COLS ) ) )][1] )][Jon],-TABLE[Ygritte][( -( -500.25 ) - -21 )])],betray(( dog ),( -ROWS * protect(x,Jon,rule()) - protect(mislead(ROWS),Stark / TABLE[( -1 )][TABLE[-Sansa + COLS + x][---0.47 - ( ( -foo(Sansa,betray(destroy(y,0.2 + 240.7 + -( rule(-( ( ( COLS ) ) / Stark ) / -( ( TABLE[COLS][bar(-0.68 / protect(),-ROWS)] ) ) / TABLE[( -ROWS )][0.24 * ( ( -( --betray() ) ) )],-y) )))) ) ) * TABLE[( ( ---77 + -21 ) + Stark ) - 80.08][COLS]]]) + 1 / Arya / betray(( -0.83 ) - Jon,y) )),x) / rule(dog,ROWS) - destroy(dog,Hodor) - 0.82][foo(Hodor)],ROWS),---1,-1)][j] {
	if(-( rule(--( ( ROWS ) - -rule(( -0.12 )) ) / ( -0.59 )) * y )){
	y -= --Stark
};
	Sansa += ( COLS )
}
def TABLE[-TABLE[--10.9][40]][k] {
	y *= 170.8 - 900.4 - bar(TABLE[COLS / Hodor][destroy(COLS / 0.58) + rule()],( ( ( mislead(destroy(TABLE[( Jon / rule() )][15])) ) + Arya / ROWS ) ) - -x,-79)
}
def foo(Ygritte,x){
	if(--0.77 / ( TABLE[y][Ygritte * ( dog ) - Hodor] ) * ( ( ROWS ) )){
	-Jon;
	if(mislead(betray(-Hodor) - -1,Arya)){
	--COLS;
	if(foo(67)){
	-1
} else {
	x *= 62 + -Hodor * -COLS
};
	1
} else {
	if(x - ( --COLS ) - -destroy(( COLS ),Sansa,0.27)){
	if(-Arya){
	-TABLE[ROWS + ( ( ( COLS ) ) )][protect(-79,( ( 64 ) ),COLS)] / ( -( 0.97 ) );
	Jon /= -31 / protect(Hodor,( 1 )) * COLS
};
	if(( destroy(-( ( -0.9 ) ),-----0.76) * -Hodor )){
	--51 / destroy(550.14)
} else {
	if(COLS - Hodor){
	Hodor - 800.444 - ( -Stark );
	dog /= TABLE[( TABLE[Hodor][-( x )] )][destroy(TABLE[mislead(x / 93,( COLS ),Ygritte) - ( rule(protect(( Stark ),x) / ROWS,-20) )][-( -0.28 ) - TABLE[mislead(rule(COLS,ROWS,-1)) * Jon][y]],ROWS,-0.72)]
};
	if(-1 / 0.61 * ( Arya )){
	if(( ( ( ( -70 ) ) ) ) * foo(700.7,-1)){
	( ( ( ( rule(-( foo(Ygritte,TABLE[Arya][-750.961]) + -( ROWS ) )) ) ) ) )
} else {
	if(protect(( TABLE[TABLE[rule(14,betray())][-1] - destroy(ROWS / protect(-TABLE[-destroy(-ROWS - ROWS + COLS - Jon,COLS)][1]) - 1,-( -86 ))][dog] ))){
	dog /= 81
} else {

};
	if(17){
	Hodor -= foo(Sansa / -( -ROWS ));
	if(-0.38){
	if(COLS){
	Hodor += mislead(protect());
	-Arya
} else {
	300.4
}
} else {

};
	if(-71){
	if(rule(( -( 12 ) ))){
	Arya;
	if(--destroy() * ROWS){
	Arya /= Hodor;
	Stark *= 1
}
};
	-56;
	dog *= COLS
} else {
	--40;
	ROWS;
	if(Stark - -15){
	if(destroy(( 990.131 ),-43)){

}
} else {
	mislead(( -68 / -0.1 ))
}
}
};
	x *= ROWS
};
	Hodor -= ( ( Stark ) )
} else {

};
	Stark *= -0.59
}
} else {

}
};
	( Sansa )
} else {
	if(91){

};
	y *= --800.818
}
}
def TABLE[( TABLE[mislead()][35 / ( -Hodor / TABLE[-62][COLS] / --( Jon ) - foo(bar(ROWS),rule()) / -0.42 )] ) + foo(ROWS,0.38,betray(-Sansa - -83) + -0.91 - --120.7849 * --0.43 - COLS)][k] {
	-ROWS;
	if(( foo(ROWS) )){
	if(mislead(x / betray(( -y ))) + ROWS){
	if(Hodor){
	if(betray(Sansa,ROWS,protect(mislead(),-0.44))){
	( Arya )
};
	if(Sansa * foo()){
	-Sansa
} else {
	y /= -bar(0.04,ROWS,ROWS)
}
} else {
	Sansa -= TABLE[ROWS][-550.595] / mislead(protect(Arya,( 0.44 + ( Jon - ( Sansa ) ) ),230.096),ROWS,( x ) / -Arya + TABLE[COLS][TABLE[Stark][-( Sansa ) - TABLE[rule()][x]]] + 0.15);
	( rule(( ( ( ( betray() ) ) - foo(x - ROWS,-ROWS / TABLE[-Sansa / -1 + 0.88][Arya / ( Jon - ( -48 ) )]) - betray(foo(COLS,--TABLE[destroy(-0.78,-ROWS) / bar(-Jon * -1,( mislead() )) / rule(destroy(Hodor,Hodor + x) / ( COLS ) - ( dog ),rule())][( x )] * foo(-46,-( ( foo(TABLE[COLS][( ROWS )]) ) ),0.37) / 82)) + ( 1 ) ) ),foo(bar(-----( protect(Sansa,-COLS) )),( ( Hodor ) ))) );
	( TABLE[TABLE[-1][( 0.36 ) / Stark]][( Sansa )] )
}
} else {
	x /= ( betray(--87 - ( rule(( ( -1 ) )) - ( rule(ROWS,360.522) ) ) - bar(betray(-TABLE[-( Arya )][-43] + -protect(260.9,-0.01),( bar(TABLE[0.91][rule()]) ))),ROWS) )
};
	y *= protect(ROWS,-( Ygritte ) * -53,( -( bar(ROWS) ) ))
} else {
	if(betray() - 0.04 - rule()){
	if(( ( -58 - -64 - Arya ) )){
	if(-( ( foo(Ygritte,-betray(( -1 ),-Stark),Stark) ) )){
	if(ROWS){

} else {
	bar()
}
} else {
	Ygritte /= COLS;
	if(--33){

}
}
} else {

};
	Sansa /= mislead(betray(rule(Sansa)),--COLS)
};
	rule(-destroy(Stark) + Ygritte,bar(( -0.58 )) + destroy())
}
}
def betray(Ygritte,x){
	mislead(protect(),dog)
}
var x = Jon
def destroy(Sansa,Jon,Arya){
	Sansa += -1
}
var Sansa = mislead(ROWS)
def TABLE[Jon / Ygritte][j] {

}
def TABLE[y][k] {
	Sansa /= 590.454
}
assert ( Stark ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(Hodor / rule(TABLE[16][0.66]) / -ROWS,destroy(Stark)) : "Fear cuts deeper than swords."
var Hodor = rule(-( TABLE[-13][1] ),-Sansa + ( ( COLS ) ) - destroy(-x,Jon,dog) * Sansa,y) - ROWS
assert 12 : "One can not simply parse himself"
var Sansa = COLS * -y
def TABLE[-ROWS][j] {

}
def TABLE[( 87 )][k] {
	Sansa;
	if(-1){

};
	if(foo(( mislead(-Sansa,TABLE[( 2 )][-( destroy(TABLE[bar()][x]) ) - bar(Arya,Arya + -( -Hodor * -1 )) / -protect(-TABLE[16][y],bar(630.7),bar())],TABLE[-ROWS][82]) ),-rule(COLS) / Arya / ( -49 / TABLE[ROWS][-TABLE[TABLE[TABLE[-protect(COLS)][bar(( -( -ROWS ) - --Sansa ) - ( -rule(-0.01,-0.4) + TABLE[rule(-16,Sansa / -93,-COLS * ( -0.85 ))][( ( mislead(protect()) ) )] ) / ( mislead(ROWS) ) * y / bar(ROWS * Stark,( -( betray(( x )) ) )),-4 / COLS * protect(dog,1))]][-ROWS + ( ( -0.98 ) + -TABLE[-( 0.16 )][protect(Sansa,ROWS,-0.96)] )]][Arya]] ))){
	TABLE[( Hodor )][( Ygritte - ( Sansa ) * COLS )];
	Ygritte += ( x )
}
}
def TABLE[( ( ( ( ( bar(93 * -COLS) ) - TABLE[-mislead(-TABLE[betray() * destroy(1,ROWS) + -ROWS - 0.79][-Arya - ROWS],ROWS,Hodor - x * ROWS) + -1][foo(840.65 / -( x ) - ( Stark ) / rule(foo(Hodor)),( protect(-TABLE[( ( -16 / foo() ) )][0.2],Ygritte) - destroy(Hodor) ) / Ygritte)] ) ) ) )][i] {
	if(Arya){
	if(0.28){
	dog *= Ygritte;
	1
}
};
	if(-ROWS){

}
}
def TABLE[COLS][i] {
	Ygritte *= -Hodor
}
var Stark = --1
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( 24 ) * ( 1 ) )][k] {
	0.91;
	Stark /= -92
}
assert mislead(( dog ),ROWS) : "Fear cuts deeper than swords."
assert ( betray() ) : "Winter is coming"
def TABLE[COLS + COLS / -0.96 / 1 + --COLS * bar(dog) + TABLE[-0.44][-0.43] / rule(-0.06)][j] {

}
assert -( COLS + -( -y + ( 0.32 ) ) ) * -y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = foo(-84)
def TABLE[-bar(Stark * protect())][j] {

}
def betray(dog){
	mislead(-19,( ( ( -32 ) ) ));
	dog
}
def foo(Stark,Arya){
	-0.42;
	( destroy(betray(COLS,ROWS,( ( TABLE[( ROWS + Jon )][-280.57 / protect(protect(rule(foo(-mislead(COLS,( COLS ),COLS)),26) / --COLS,ROWS,( bar(( -93 ),TABLE[-0.27][0.07]) )) + Jon - ROWS) - -0.56] ) )),-54) ) * -Ygritte
}
def TABLE[TABLE[Jon][protect(Arya + rule(COLS) * COLS * COLS) + COLS]][k] {
	( ROWS + ROWS + --94 )
}
def rule(){
	Jon *= TABLE[-0.09 + ROWS][mislead(-ROWS + ( dog ))]
}
var Sansa = --8
def betray(Ygritte,Jon){
	if(COLS){
	Hodor *= 12;
	-y / -( -( 50.9 ) );
	Jon += Arya
}
}
def foo(Hodor){
	dog *= x;
	Stark *= -1;
	TABLE[-76 * ( Stark )][COLS]
}
def TABLE[-820.444][k] {
	if(-98){
	if(---81 / 0.21){
	if(betray(-600.971) - ( ( -Arya ) )){
	890.556;
	-foo(ROWS,ROWS) * Stark;
	Ygritte /= y
}
} else {
	if(0.23){
	betray(y * -0.28,( 1 ),-ROWS);
	Stark -= ( -0.59 )
}
}
};
	if(COLS){
	if(Arya){
	bar(COLS);
	if(Sansa){

}
};
	( mislead() )
};
	( destroy(TABLE[Arya][-bar(COLS * -35) + foo(mislead(( ---1 ),0.46,-90)) / COLS],( Stark + COLS ) / 0.9,dog * 1 * TABLE[( ( -0.82 ) )][-87] / -21) )
}
var Jon = Arya
def protect(Hodor,Hodor,Arya){

}
var Jon = Hodor
assert Stark : "What do we say to the Lord of Death?"
var Jon = dog
def protect(Stark){
	( rule(0.06,betray(protect(-Ygritte),protect(protect(x),( -1 )))) - Sansa )
}
assert ( Ygritte ) : "Nothing burns like the cold."
assert bar(foo(31,TABLE[mislead(--ROWS,y)][COLS]) + -Hodor,( COLS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( ( Hodor ) ) - ( ( destroy() ) ) : "One can not simply parse himself"
def protect(y,y){
	Ygritte -= ROWS
}
def bar(Jon,y){
	if(COLS){
	Ygritte += ( ( x * 710.35 + dog ) )
} else {
	Sansa /= 6 + protect(( COLS ),--1)
};
	-300.15
}
def betray(Hodor){
	if(-68){
	-x * ( betray(0.44) - y ) - ( --0.49 / Arya );
	Ygritte += rule() * ( -90 )
} else {
	if(foo(COLS,-( ROWS + 0.24 ) - --ROWS)){
	Ygritte -= COLS;
	-18
};
	if(( -ROWS )){
	( ( ( -protect(1,TABLE[TABLE[( 450.5837 )][( -COLS )]][-ROWS]) ) ) );
	x -= -400.393
}
};
	Stark *= foo(--( mislead() ) + TABLE[bar(-COLS)][( 46 )])
}
var y = Jon
assert 0.86 : "One can not simply parse himself"
assert 1 : "One can not simply parse himself"
var Jon = -Ygritte
var dog = betray()
def foo(Hodor,dog,Stark){

}
assert foo(-42 + -x,TABLE[betray(Jon,0.93)][betray()]) : "Nothing burns like the cold."
def betray(){
	if(protect(y)){
	1;
	if(-78){
	-TABLE[-750.69][( -bar(COLS,protect(TABLE[--2 - --0.49][( ( -TABLE[Stark][( Hodor ) * -0.58] ) )])) * -COLS - Jon + -1 )];
	if(-Hodor){
	if(-9 - betray(--rule(betray()),( ( -mislead(-55) ) ))){
	Hodor += TABLE[Jon - -mislead(-rule(TABLE[76][COLS],( -0.23 ))) / mislead(-87)][Jon]
};
	if(-1){
	Jon /= foo(-57);
	if(-58){
	if(( COLS )){
	if(( 58 )){
	mislead(dog,-Sansa);
	x += -( ( dog ) * TABLE[dog][ROWS + destroy()] )
} else {
	if(mislead(( 61 ),ROWS) * COLS){
	if(y){
	if(TABLE[( COLS / destroy() )][bar(( -( TABLE[bar(COLS)][destroy(foo(Hodor,-0.54))] ) ) / ( ROWS ),protect(ROWS),dog)]){
	Stark;
	bar()
};
	-8
};
	if(--Jon / foo(COLS,TABLE[betray(TABLE[ROWS * 97][29 + ( Sansa ) + foo(-( mislead(-0.67 * Stark) ),-destroy(ROWS) - dog - bar(),rule(ROWS)) - 0.41])][( bar(740.4826) / ROWS ) / -120.37],rule(( -0.3 )))){
	x -= -0.42
} else {
	rule();
	1
}
} else {
	x /= -25;
	Sansa *= protect(COLS,Hodor)
}
};
	Ygritte *= TABLE[27][protect(-betray(-( -y ),TABLE[bar(0.46,TABLE[-0.7 + TABLE[-0.67][( bar(betray(( Jon ),( -400.6881 )),( foo(-7) )) )]][( -1 )])][mislead(bar(),-bar(foo(-( 0.25 ) / ----( -0.27 ) / -destroy(-( ROWS ) / -dog / -( TABLE[ROWS][x] ) - 84 - -1 - -( x ) - TABLE[11][TABLE[58 - mislead(x,TABLE[37][( ----Jon )])][730.729 / -74]],foo(destroy(betray())),( ( -TABLE[ROWS][COLS] ) / -5 / 1 )),( -0.62 - TABLE[Hodor][( -110.8071 ) * Ygritte] ))) + ROWS * Sansa)]),1)] - -1
}
} else {
	( -Stark );
	Hodor /= dog;
	if(43 - dog){
	( TABLE[-0.94][COLS - Stark] );
	( -0.64 );
	x * Ygritte
} else {
	if(ROWS){
	-53;
	Hodor;
	Ygritte -= destroy(bar(protect(ROWS)),Stark)
} else {
	Ygritte -= ( Arya );
	if(ROWS){
	if(( Arya )){
	if(( betray(Jon,-betray(COLS,( y ),ROWS) * -dog / destroy(ROWS)) )){
	if(-8 + destroy(( -380.9 ))){

};
	if(ROWS){
	Arya
} else {
	Arya -= ( --( 670.6 ) )
}
} else {
	Jon *= ROWS
};
	Stark *= bar()
} else {
	( Sansa ) - -y
};
	x += ROWS - protect();
	if(ROWS){
	--560.71 / COLS * ROWS * -Stark
}
};
	-TABLE[63][( -1 + --Ygritte )]
}
}
};
	if(-y){
	COLS
} else {
	if(rule(TABLE[TABLE[destroy(y)][-0.55]][Arya],-y)){
	( ( ( 0.42 ) ) );
	mislead(betray(),--TABLE[Stark][( 0.95 )]) / -dog
} else {

};
	if(TABLE[COLS][-1 * -( dog - mislead(( TABLE[--TABLE[-0.18][( y )] * -35 + ROWS][Arya] ),rule(-COLS + x / TABLE[ROWS][( ( ( 550.523 ) ) )]),( -210.0597 )) ) / Arya]){
	Arya;
	if(TABLE[( y )][-1]){
	Ygritte;
	x += TABLE[( rule(-mislead(Stark)) )][-0.63] * ROWS
}
} else {
	if(TABLE[mislead(--3,-betray(destroy(),-COLS,y) * --destroy(( -0.08 - TABLE[Stark][Arya] )))][( -76 ) - bar() + mislead(690.8)]){
	ROWS
};
	dog
}
}
} else {
	Ygritte *= ( Sansa ) * rule(Jon,dog)
};
	Hodor
} else {
	Arya -= 0.19;
	Arya /= -1
}
} else {
	Ygritte /= ROWS
};
	COLS
} else {

}
}
var y = foo(foo(-( ROWS )),-foo(( ----80 )))
def mislead(Sansa){

}
def foo(Ygritte,Ygritte,x){
	if(destroy(betray(( foo() ),ROWS) / destroy(0.14,-0.11) * -1 + -TABLE[-protect(80,x,( --Jon ))][Sansa])){
	Ygritte *= x;
	Arya += -940.8;
	if(TABLE[( -( ( -500.049 ) ) - betray() / --COLS * destroy() )][( foo(-betray(destroy(mislead(Stark / bar(TABLE[COLS][28]) + bar(-0.48,( TABLE[--( 1 ) + ( mislead(--58,( 85 ) * ( bar(-66 * mislead(),mislead(Sansa - Arya,( rule(ROWS) ))) ) / rule(( -6 ),( Ygritte ))) )][( COLS )] ),-45),ROWS),-( Sansa )))) + -x * TABLE[-bar(protect(protect(-( ( -TABLE[Stark][-Arya] ) )),49),dog)][foo(betray(-Hodor / --Sansa,betray(TABLE[destroy(-TABLE[ROWS][( mislead(( ROWS ),destroy(0.56,-17,mislead()) * betray(-bar(--95))) )] + ( bar(-ROWS,COLS) ))][( Arya )]),( -( -0.8 ) - --COLS / ( ( ( --0.27 ) ) ) * ROWS )))] )]){
	( -90 + -( ( -COLS / Sansa ) + TABLE[65][ROWS] ) - COLS );
	if(-TABLE[ROWS][0.41]){
	Sansa -= COLS;
	if(Arya - -0.21){
	if(0.51){
	Jon -= destroy(-Arya,-( Ygritte ),( rule(-Sansa) ))
} else {
	-COLS
}
}
}
}
} else {
	Arya
}
}
def TABLE[protect(y)][j] {

}
assert ROWS - ( 0.84 ) - bar(COLS,-( -( ( ( ( Hodor ) ) ) ) ) + Stark) * -ROWS - ( rule(-7) ) : "One can not simply parse himself"
var Sansa = dog / destroy(( ( betray(Ygritte,Jon,TABLE[-41][Sansa * TABLE[Hodor][rule(-90 - ( ( betray(foo(TABLE[-1][58]),-750.2 - -25) ) ) * Sansa,protect(1,Hodor))] / bar(-0.6,-56,--0.58)]) ) ),( 6 ) - destroy(dog,mislead(( ( -( -dog ) ) ),( ( -( ( ( Ygritte ) ) ) ) )) / -Hodor + ( 6 ) - TABLE[Sansa][Stark]) * -( -( TABLE[rule(-Jon + protect(),Stark)][---990.28] ) ) + --dog / --rule() - 1)
var y = ---TABLE[TABLE[( --110.3908 )][foo(( ( -42 ) ),-0.03,( ROWS ) / Ygritte)]][rule(TABLE[840.13][y - -Sansa] * foo(destroy(1,----0.94 * ( Hodor )),COLS + protect(mislead(( -( Sansa ) ) + -Ygritte / -0.88) - ( protect(destroy(TABLE[-( COLS ) - ROWS][-TABLE[( ( ( -( -Sansa ) * ( ROWS * foo(destroy(( 50 )) - dog) ) ) ) + destroy(COLS / ROWS) )][ROWS]]),-protect() + ( -53 )) ) * COLS,protect()),rule(ROWS,y)) / ROWS,bar(( -destroy(0.22,Sansa) ),bar(Jon,Ygritte,Arya) / -Jon - foo(( Ygritte ))),-270.6886)] - rule()
def mislead(Sansa,Jon,Jon){

}
def betray(y){
	if(mislead(44,Jon)){
	if(-COLS){
	( COLS )
} else {
	if(Ygritte){
	Stark *= ( destroy() );
	dog /= -protect(-Sansa,TABLE[-foo(-14,-48)][( Stark - ( x ) )])
} else {

}
};
	Jon;
	Ygritte + ROWS / -TABLE[mislead(0.55)][betray(destroy(-TABLE[Hodor][-83 + -( Sansa / ( 0.66 ) )],x * Arya),destroy(( -rule(Jon) )))]
} else {
	ROWS
};
	if(--mislead(TABLE[COLS][TABLE[betray(TABLE[Arya][COLS],betray(( ( ( bar(( -( Jon ) )) ) ) * ----ROWS * -63 )),TABLE[0.56][Sansa - -( 0.92 ) + ( -0.48 )])][ROWS]])){
	-destroy(-1)
} else {
	( ( ( -46 ) ) );
	if(dog){
	if(( 0.01 )){
	if(x * --Hodor){
	if(rule(dog + -0.44 / -ROWS)){
	if(770.102){
	-0.34
} else {
	Jon /= rule()
};
	Ygritte += protect(Hodor)
};
	Jon + dog;
	0.61
} else {
	1 - Stark
};
	if(ROWS){
	-940.51;
	160.67 - ( TABLE[1][foo(( ( -( ( COLS / -protect() - ( COLS ) ) ) ) ))] )
} else {

}
} else {
	if(x){
	ROWS * TABLE[COLS][COLS];
	Jon *= betray(foo(bar(destroy(Ygritte,( ( ( -y ) ) )))),bar(( ( -COLS / ( Arya ) ) )) + COLS - -9 - foo() + protect() / mislead(Arya,( dog )),Hodor)
};
	if(0.03){

}
}
} else {
	protect(44)
};
	if(-38){
	Stark += 1
}
};
	if(ROWS){
	x -= ( Ygritte )
} else {
	Ygritte *= mislead(protect(-0.07,destroy(y - TABLE[ROWS][Stark + --Ygritte * 0.46],( ( destroy(-betray(-24,ROWS,Jon),-0.43,COLS) ) * TABLE[foo()][-( -( -TABLE[-TABLE[( 56 ) + ( Ygritte )][foo()]][-1] ) + mislead(( ( --protect() ) / protect(rule(dog,--( ROWS / -foo(-0.69) ) * destroy(rule(Arya,--0.12),ROWS - x,bar(---( TABLE[75][0.8] ) / betray()) * Stark))) * Jon ),( ( -1 ) )) )] )),betray(TABLE[-rule(( TABLE[-bar(-61,( ( -TABLE[Jon * -77 / --Hodor][ROWS] ) ))][( mislead(-ROWS,Stark) )] ))][0.37],ROWS)),Jon) + -x * -41;
	-0.83;
	Arya += ( -830.617 ) * 0.84
}
}
assert mislead(Sansa) : "Nothing burns like the cold."
assert destroy(protect(-betray(),COLS)) - rule(dog,0.53 - ROWS) * mislead(COLS) / protect(ROWS,dog) : "Fear cuts deeper than swords."
assert destroy(( -0.79 ),-( Hodor )) + 950.316 : "What do we say to the Lord of Death?"
assert -0.47 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[45][i] {
	if(TABLE[x / 26][protect(COLS,-destroy(-0.65,--( COLS ) * ( --610.81 )),Hodor - -rule())] + 390.21){
	if(COLS){
	x
};
	if(( destroy(y - -COLS / --1,-mislead(protect()),mislead()) )){
	if(dog * ROWS){
	if(-rule(betray(( y ))) - bar(ROWS,1)){

}
};
	x -= -0.16 / y
}
};
	if(y){

}
}
assert -Arya : "What do we say to the Lord of Death?"
def destroy(x){
	if(protect(foo(-( -dog ) + Stark,Ygritte,COLS + ( 0.59 )))){
	( rule(-betray(Ygritte,-1)) )
} else {

};
	Ygritte -= 340.98
}
assert -0.68 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Jon){
	mislead(ROWS,-( x ) - x);
	---TABLE[ROWS][-( mislead(-foo(--1,dog) * Ygritte * ( TABLE[dog][Stark + 30] ) - betray(56 / ROWS * y),-( ( Sansa ) )) )] / Stark
}
def TABLE[TABLE[( -rule(( -850.5869 )) * --0.12 )][-foo(-23) - TABLE[Sansa][x + -TABLE[-1][foo(( -Arya ),Arya,COLS)]] / --1]][j] {
	Arya /= -770.0073;
	Ygritte += 0.04;
	if(-0.14 * mislead(( ( ( ( --betray(Stark * COLS,-Stark,( TABLE[ROWS + 0.2][COLS] )) ) * --0.69 * Hodor ) ) ),-1,( TABLE[( COLS )][ROWS] - bar(-ROWS - ROWS * TABLE[mislead(-( ( TABLE[protect(TABLE[y][--49],TABLE[ROWS][21 / ( COLS - ( -0.85 / --1 ) ) / -53 + TABLE[destroy(( -23 ),-destroy() * ---0.1)][-Ygritte]])][( ROWS ) / ( Stark )] ) )) / betray(( -850.689 ))][Arya]) - ROWS ))){
	Hodor += -( COLS );
	dog /= x
}
}
var dog = 1
def TABLE[( bar(Arya) )][j] {
	if(ROWS){
	Jon / -Stark
}
}
assert TABLE[( ROWS )][( ( dog ) )] : "One can not simply parse himself"
def TABLE[18][k] {

}
def bar(dog,x,y){
	if(-COLS){

};
	Stark += Stark
}
var dog = bar(-0.51,rule(--0.01 + Stark + COLS / COLS,betray() - 0.78))
def TABLE[Jon - mislead(TABLE[( -52 )][--88])][j] {
	ROWS / ( ROWS );
	y -= -Jon / -rule(( destroy(protect(dog,( 30 ))) ),destroy(0.18 / --86)) + ( ROWS ) + -68 + COLS
}
var Arya = --Arya
def foo(Jon){
	190.045;
	if(Arya){

} else {
	( rule(-TABLE[foo(-( ( 350.95 ) ))][-0.69],25) );
	Hodor *= -( ROWS )
}
}
assert betray(TABLE[Arya][-Arya] - rule(),ROWS) : "One can not simply parse himself"
assert rule(destroy(-Arya - ( ( ( Ygritte - destroy(destroy(bar(protect() + ( mislead(dog / TABLE[protect(TABLE[ROWS][protect(y)],destroy(Stark),Ygritte) / ( COLS - destroy(( 0.53 ) / 0,COLS) )][destroy(-73)],COLS,destroy(990.506,TABLE[x - COLS - bar(( TABLE[--rule(mislead())][foo(( betray(protect(820.63)) ),protect(( Arya - -150 ),-460.3358),3)] ),( -ROWS ) - foo() * --1 * x - Sansa)][mislead()])) ),-mislead(y,destroy(protect(-5,TABLE[( protect(x) )][----TABLE[foo(( y ))][-foo()] / -39],( betray(( mislead(TABLE[-0.24][940.346]) )) )) / foo(( foo(COLS,COLS * ( foo() ) * x,-1) ),( ( COLS ) * ROWS ) - TABLE[( -x * rule(-Ygritte,TABLE[-1][ROWS]) )][700.3],0.61 / Jon) * --bar(TABLE[--COLS][destroy(( Ygritte ) + -y,Jon)]),( bar() ),( -33 ) / -Hodor) - -18,destroy(-TABLE[( -( ( x ) ) )][bar(COLS / -0.15,32)],bar(ROWS),( --210.2362 ))),protect(-destroy(Ygritte) + destroy(),bar(COLS,--1,0.31))),bar(Hodor,( ROWS ))),TABLE[-98][betray(rule(TABLE[destroy(COLS) + destroy(( dog ),-55)][y],( -( ( -ROWS ) ) / -dog )) + ROWS + 26)]) - COLS ) * -TABLE[dog][Hodor] ) ) + -0.24,COLS),( ( -protect(ROWS) + 20 ) )) : "Winter is coming"
assert mislead(( ( 1 ) ),TABLE[( Ygritte )][-COLS] / -0.62) : "One can not simply parse himself"
def TABLE[protect(destroy(89,-( y )) * -( TABLE[-0.97][-ROWS] * rule(dog,-0.96 - mislead(Ygritte)) ),COLS,rule(( -Jon ),( Hodor ),foo(destroy(COLS),TABLE[x / TABLE[bar(x)][--x + -33 - rule(( Stark )) - ( -12 ) * --0.07]][-0.33])))][j] {
	( ( TABLE[-( dog / destroy() )][ROWS / ROWS - ( 0.12 )] - 89 ) );
	Stark /= Arya;
	Hodor *= 76
}
var Jon = Hodor
assert -6 : "Fear cuts deeper than swords."
def bar(){
	dog *= protect();
	-1;
	Hodor /= y + 0.17
}
var y = TABLE[Hodor][rule()] * TABLE[COLS][betray(( Ygritte ))] + ROWS
def TABLE[dog][j] {
	foo(-0.85,TABLE[-59][91],-( -700.7 ))
}
def foo(Stark){
	230.8 * Jon;
	-COLS;
	if(TABLE[TABLE[betray(( ROWS ),Sansa) / rule(ROWS * COLS,TABLE[bar(( protect(bar(0.24 * -1)) ) + 96)][( ( -( ROWS ) / mislead() ) )],-16) + -foo(Jon,ROWS * COLS) - -Ygritte][destroy(0.84)]][1]){
	if(Sansa){
	if(--Jon){
	y + Sansa
}
} else {
	Sansa -= 1
}
}
}
assert ( bar() ) : "Fear cuts deeper than swords."
def mislead(Stark,Ygritte,Sansa){
	Hodor *= -1 - ( TABLE[-betray(-rule(Ygritte + 550.703,99),Stark)][x] );
	if(( dog ) - bar(450.0092 * 85 * --COLS / ( ( --rule() ) ),-rule(dog) - ( betray(69) ))){
	0.11 + ROWS
} else {
	( -810.4 ) - ROWS + -protect(( bar(-Hodor + ( Jon )) ),--( -2 ));
	if(-bar(ROWS)){
	bar();
	y -= 170.55
} else {
	if(( dog ) / -dog){
	if(COLS){
	Stark *= TABLE[y][TABLE[-0.16][y]] + TABLE[( Jon )][foo(-Ygritte)] * ( --41 ) * -ROWS
} else {
	Hodor *= ( ( 0.41 ) )
}
}
}
};
	dog /= -50.9985
}
var Jon = Arya
var dog = 1
var y = TABLE[dog][Jon] + 0.25
def TABLE[Stark][j] {
	Hodor /= ( -destroy(dog,( ( --foo(TABLE[( --destroy(( -560.815 ),COLS) + Stark )][( ( 1 ) )],Sansa,-1 * x) / COLS - -ROWS ) )) );
	0.26;
	if(Jon){
	if(160.5){
	if(-mislead() - mislead(destroy(-foo(rule(( COLS )),TABLE[Ygritte][Arya],-39),foo(bar(0.67,-930.117,protect(rule(-betray(Sansa,( mislead(rule(Stark / Arya),rule(-1,ROWS)) - 830.354 ) / x),ROWS,Sansa) - COLS)))),-0.15,foo(( -0.64 ) * mislead(),Sansa))){
	if(foo() * Sansa){
	rule(( Jon ),( -0.65 ),COLS - --dog);
	TABLE[-1][TABLE[Arya][COLS]];
	if(-ROWS){
	y /= -Stark;
	-750.92
} else {

}
}
} else {
	if(-COLS){

};
	if(dog){
	-520.313;
	dog /= --y
};
	Ygritte
};
	Stark /= -570.001 - COLS
} else {
	360.753
};
	-protect(-( -94 ) * TABLE[( Arya + --x )][Hodor] + Ygritte + -y + ROWS - ( ( -0.27 + x ) ))
}
}
var y = TABLE[( TABLE[Arya][( ( mislead(-0.34 / mislead(rule(1,destroy(-ROWS,( betray(TABLE[Stark][-( -betray(-destroy(Ygritte),( TABLE[dog][-0.55] )) )],COLS) ) + -Jon),( 1 )))) - -TABLE[-( Arya )][ROWS] ) )] )][foo(860.4,82)]
var Jon = Hodor - -( -( dog ) )
def protect(Ygritte){
	x -= ( rule(-mislead(-0.92 + COLS,0.77,-90)) )
}
assert ( COLS ) : "What do we say to the Lord of Death?"
assert ( Ygritte ) / COLS + dog : "What do we say to the Lord of Death?"
def rule(Hodor,Arya){
	if(( foo(-Jon * ROWS,-0.93,Arya / dog * ( -destroy(protect(-94)) ) + 73 - ( 70 ) * Ygritte) ) / -destroy(x)){
	if(rule()){

} else {
	if(Ygritte){
	if(--680.44){
	y /= TABLE[42 / ( TABLE[TABLE[53][-500.0264]][Arya] * foo(ROWS) )][TABLE[( y )][-0.3 + -50]] * 120.4 * Sansa / Arya;
	if(COLS){
	mislead(x);
	x /= ( TABLE[betray(-TABLE[-( -50 )][COLS / -( ( x + foo(( destroy(COLS,Sansa,( TABLE[ROWS][--mislead() + 76] + ( TABLE[0.57][rule(( bar(( mislead() )) ),-Ygritte,( ROWS ))] ) )) ),( Jon )) ) )])][-98] )
} else {
	if(-TABLE[ROWS][( ( destroy(--25,Stark) ) ) * Hodor]){
	if(-COLS){
	Hodor;
	if(mislead(-COLS - --1)){
	x -= ( ( ( COLS ) + protect(TABLE[( 0.97 )][Arya]) / ( 80 ) + foo() / destroy(Arya * -511,dog) ) );
	( --Stark )
} else {
	Ygritte /= -mislead(COLS);
	x *= TABLE[-840.303][-bar(COLS,destroy(( ROWS ),--Arya * COLS,-1 * ROWS))];
	Stark -= 73
}
}
} else {
	Hodor /= -( COLS + ( mislead(Stark,Stark) ) * ( mislead(TABLE[-1 - ROWS][( COLS ) + Stark],Stark,-x) ) ) / Arya - COLS * foo(-Hodor) / -( ROWS ) - ( -0.19 );
	x *= -Stark
};
	dog /= TABLE[1][mislead()]
}
} else {

};
	Jon += ( -1 ) - -TABLE[---0.79][-TABLE[( protect(dog,--( -38 ) * mislead() / COLS / -0.85) / bar(-( 250.0404 ),-Hodor) )][Hodor] / -COLS * --COLS - -0.24 - -( ( COLS ) ) / -COLS];
	y += ROWS
} else {
	Sansa /= 1;
	Hodor += ( 38 )
};
	if(-1){

}
};
	( dog ) / -1
} else {

};
	Jon *= -40
}
def TABLE[( ( -( Arya * -92 ) ) )][k] {
	( 820.1094 )
}
def protect(Jon){

}
assert bar(destroy(x)) : "Fear cuts deeper than swords."
var Ygritte = 48
var Stark = ROWS
def TABLE[bar(Ygritte * Ygritte,mislead(rule(--ROWS * dog,betray())),-740.8)][k] {
	Jon -= betray(mislead(Ygritte / -Ygritte / COLS + rule() + -mislead(( 1 )),1,-0.61),-rule(( -TABLE[( ROWS )][-( -65 - dog )] ),--ROWS),0.77);
	if(-protect(TABLE[( Arya )][880.283],Hodor) * 0.54 - -( 73 )){
	( -Arya )
} else {
	if(-( COLS / ROWS )){
	if(( -1 )){
	Hodor *= ROWS
} else {
	dog
};
	if(Ygritte){
	y -= ( -1 ) + ( TABLE[-90][foo(protect(rule(-COLS),-Stark))] );
	if(Stark){

} else {
	dog *= protect(COLS,( Ygritte ))
}
} else {
	Arya -= Sansa;
	-0.97
}
};
	if(protect(TABLE[COLS][TABLE[Jon][rule(-0.86,--x)]]) / TABLE[betray(-Ygritte,TABLE[-0.02][TABLE[mislead(COLS + ROWS,1)][( x )]])][-1 * 78]){

} else {

}
}
}
assert Arya : "Fear cuts deeper than swords."
var Sansa = ROWS
var Ygritte = -( Sansa ) - ROWS
def mislead(Jon){
	if(560.36){
	Sansa;
	( ---foo() )
} else {
	-1
};
	Stark -= Arya
}
def TABLE[-85][k] {
	-800.2;
	ROWS;
	if(mislead()){
	Arya /= -y;
	x /= betray(-( COLS ))
} else {
	y -= ( -0.18 )
}
}
def rule(Jon){
	if(COLS){
	Jon /= TABLE[Sansa][TABLE[dog][( -TABLE[Jon][betray(75 * foo(1 / -( -( -protect(--98 + betray() + TABLE[-( y )][ROWS] + -destroy() + ROWS / dog) + ( -( -0.67 ) + protect(x) ) + 74 ) - ( -ROWS * ( -0.36 ) ) / 72 ) / -17),( TABLE[ROWS][( Sansa )] ) + betray(-10,ROWS,( 20 )),COLS)] + Arya - -TABLE[x][( -foo(-1,( -0.89 )) + Hodor ) + -x] + -0.67 - 150.18 )]]
};
	-TABLE[y][-46]
}
var y = COLS
def foo(dog){
	x /= rule(-COLS,betray(( mislead() )),--ROWS)
}
def destroy(Hodor){
	if(rule(TABLE[( 0.28 ) / ( ( -150.66 ) )][( ( 91 ) )],Ygritte)){
	ROWS;
	rule(-betray(1,--TABLE[-Ygritte / ( -protect(( -1 ),Stark) * --COLS )][ROWS]))
};
	Jon;
	dog *= -1
}
def TABLE[-rule(betray(0.86))][j] {
	TABLE[COLS][mislead(bar(0.41,Jon),74,mislead(--47 / ROWS - ROWS) * ( protect(Jon) ))];
	( -Arya )
}
def TABLE[x][i] {
	Arya *= y;
	if(Stark){
	TABLE[0.83][destroy()] / ( COLS )
} else {
	if(ROWS){
	if(ROWS){
	dog;
	-Sansa;
	if(foo(( --COLS - -70 ))){
	-rule(0.8) + -protect() - dog
}
}
} else {
	-COLS
}
}
}
def bar(Ygritte,y,Ygritte){
	y -= protect(-( --( protect(0.75,TABLE[( ROWS )][-bar(Arya,y)] + destroy(-61,x),TABLE[0.64][( -ROWS )]) + dog - ROWS / ( -Sansa + -26 ) * --0.93 ) * ROWS ),Stark)
}
def TABLE[betray(COLS)][i] {
	dog
}
assert ROWS : "Winter is coming"
var y = ( Hodor )
def rule(x){
	if(Hodor){
	Hodor *= 9
} else {

};
	( mislead(--Jon + ( 0.28 )) );
	COLS * Ygritte
}
assert y : "Winter is coming"
var Jon = ( -Ygritte )
var x = ( -ROWS )
def mislead(Sansa,dog){
	if(( Sansa + -Ygritte / ( ( ROWS ) + Hodor ) + ( --78 ) + Sansa * --betray(-mislead(Sansa,protect(-75,Arya)),( foo(--( x ) * ( 0.77 )) )) / Sansa )){

}
}
var Stark = -0.59
def TABLE[-760.959][i] {
	y *= foo();
	if(( -bar(--COLS) * ( COLS ) )){

};
	Hodor -= Hodor
}
var Jon = TABLE[230.6][protect(x / protect(dog,betray(( -betray(TABLE[--30 - -57][( -betray(ROWS,-0.78) )]) ),-0.86)),( ( 0.56 ) ))]
assert ( -( 0.87 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(-72,destroy(ROWS,-rule(-99,( -50 ))),dog) - ( 0.58 ) / TABLE[ROWS + -ROWS / -( protect(COLS,TABLE[( COLS )][-1]) )][bar(( TABLE[( bar(y,ROWS) )][COLS] ))] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(TABLE[( bar(-( TABLE[COLS + ( TABLE[ROWS][ROWS] )][-1] ),Ygritte - COLS) + ( ROWS ) ) / COLS / ( Jon )][Arya],( bar(-530.531,destroy(TABLE[betray(mislead(( Hodor )),-68)][COLS]),TABLE[-( -Sansa )][-Ygritte]) )) : "Nothing burns like the cold."
assert ROWS : "Fear cuts deeper than swords."
def TABLE[-ROWS][j] {
	0;
	y /= y
}
def mislead(y,y,Stark){
	if(TABLE[-1][( ( mislead(TABLE[13][( ROWS )],-bar()) / x ) * ( rule(300.08,TABLE[( ROWS )][Jon],-70 * destroy(COLS,Hodor)) + 1 ) ) + mislead()] + mislead(( -Sansa / bar(COLS * -( 600.446 )) ),( -( -rule() ) + ( ---56 - 0.03 * -Stark + ROWS - Hodor ) * betray(x) ))){
	-( ROWS );
	if(-850.42){
	if(1){
	if(TABLE[--ROWS - Ygritte / -ROWS][bar(protect(--47,-48) / Jon)]){
	TABLE[( Arya )][ROWS];
	if(0.47 * ( TABLE[bar(rule(ROWS / ( ROWS ) + ( betray(( Ygritte ),Arya) ),mislead(-destroy(COLS,betray()),TABLE[COLS][--( 1 )]),-0.15))][Ygritte] ) / COLS){
	if(--destroy(0.19)){
	if(ROWS){

} else {

}
} else {
	Sansa *= ( Ygritte );
	if(1){
	Jon -= bar(destroy(mislead(( TABLE[foo()][-( bar(( foo() ),-( COLS + -0.54 * mislead(-ROWS * ( dog ),bar(( Hodor ))) )) )] )),Ygritte),( ( -TABLE[1][foo(( destroy(-Arya / ( Hodor * COLS ) + foo(Stark / ( -59 ),60.15) - TABLE[( ( -protect(-0.56,( TABLE[87][0.1] )) / Jon ) )][Arya]) ) + ---COLS,( -0.14 + -650.7814 ))] ) + COLS ));
	protect()
} else {
	Hodor;
	dog *= protect(( ( ( ( Sansa ) ) + ( 0 - betray(TABLE[-( ROWS - -71 ) + ROWS][-protect(Ygritte)],mislead(rule(450.71,1),-0.47)) / -COLS / mislead(-TABLE[betray() / Ygritte - 73 / TABLE[-( ROWS ) + --TABLE[-TABLE[-10][Stark] / 560.419][dog]][bar(( Stark ),-1 - ( Arya ),Ygritte) / COLS]][Stark - TABLE[protect(-28,Ygritte / x)][0.59] - ( y )],-( COLS )) ) ) ))
};
	destroy(-0.35)
};
	-95
} else {
	Arya += betray(-240.157 / COLS / mislead(-x,COLS) - 14)
};
	Sansa / 0.86 / -120.321
};
	Jon -= COLS * Stark;
	if(( -( -1 - ROWS ) )){
	if(-foo(510.2,-1)){
	if(x){
	if(--Jon){
	( TABLE[ROWS][Stark] );
	0.66;
	if(( TABLE[mislead(TABLE[( ( bar() ) )][foo(Ygritte,rule(x,rule(foo(Ygritte),610.977,bar(ROWS,betray(Hodor,-TABLE[y][87]))),ROWS))],98)][-foo(--( TABLE[protect(bar(TABLE[1][-ROWS * Jon],foo()))][y] ) - Stark,TABLE[( -170.57 )][betray(-Hodor + ( ( ( Sansa / -59 ) + destroy() ) ),TABLE[( Stark )][( dog ) / ( ( Hodor ) * ROWS )] + TABLE[COLS][( ( bar(--1 + -ROWS - --foo(Sansa),0.05) ) ) / rule(COLS)] + TABLE[-ROWS][-290.138 * ( TABLE[0.1][TABLE[COLS][0.51]] )],ROWS) / dog],83)] )){
	if(ROWS){
	x
};
	1;
	protect(( 47 ),0.19) / COLS
}
} else {
	protect();
	if(57){
	Arya
} else {
	if(TABLE[--21 - -1][Stark]){
	Arya /= -rule(-COLS)
};
	7 + Stark - destroy(Hodor,TABLE[ROWS][Hodor],betray(--0.61,ROWS - TABLE[COLS][Arya],( ( dog ) )) * --protect(( Jon * ( -14 ) ),( mislead(bar(-0.43,Arya),destroy(( 1 ) / COLS),( --bar(Arya) )) ) / 29,( 1 )) / rule(( ( -0.2 ) - bar(( TABLE[x][foo(1,rule())] ),-Stark,ROWS * ( 0.78 )) )) - -protect(-TABLE[Hodor][mislead(protect(( Ygritte )),bar(bar(0.1),( TABLE[1][ROWS] )))],1)) * foo(Stark,bar(COLS) * ROWS + -0.1 + TABLE[mislead(Jon,COLS)][( --( betray(x) ) )]) / ( -( dog ) ) - COLS + -( -Hodor )
};
	-750.7
}
} else {
	( ROWS );
	if(Sansa){
	Sansa += ROWS;
	if(rule(bar(),TABLE[1][Ygritte])){
	Jon += foo(--0.31,betray(0.79),-94)
};
	if(0.21 / Arya){
	Sansa *= Sansa
} else {
	if(-0.5){
	-4
} else {

};
	if(Hodor){
	x /= y;
	Jon += Arya
} else {
	-ROWS;
	if(Sansa){

};
	Ygritte -= --38
}
}
} else {
	x *= ( Arya - ( -45 ) )
}
}
} else {
	Ygritte -= betray(foo(-( 0.86 + foo(---55) * foo() * 0.52 / bar(-rule(-0.87) * COLS,( -TABLE[( 83 )][mislead(dog,dog) - 0.25] ) / -1) - bar(ROWS,betray(-14,Stark)) * 0.9 ),( ( Sansa ) ),--betray(ROWS)),-Ygritte - ( COLS ),( x ))
}
}
} else {
	Stark += ( COLS )
};
	if(TABLE[TABLE[Arya][( ( 1 ) )]][ROWS]){

} else {

};
	Jon -= 52
} else {
	Hodor -= ROWS
}
} else {
	( destroy(COLS) );
	if(-x){

} else {
	Stark *= y;
	Sansa /= mislead(-34)
}
};
	if(-510.116 - -1 - Jon){
	if(( destroy(( betray() )) )){
	if(protect(-( Arya ) / ( ( TABLE[foo(COLS)][TABLE[-Jon][Sansa]] ) ) / --5,-COLS,32)){
	if(mislead()){

};
	( bar(--( ROWS ) * -protect(-64,( 0.66 )),betray(Stark),--destroy()) ) - -Hodor;
	Sansa -= Stark
} else {

};
	Sansa -= ( betray(y,COLS,0.82) / foo() + mislead(dog) + Stark )
};
	TABLE[Stark][( ( -18 ) )];
	if(( Ygritte )){

} else {
	Stark += COLS
}
} else {
	Hodor;
	mislead()
};
	y -= ( y )
}
assert -x : "One can not simply parse himself"
def foo(){
	Jon *= 78 / Arya / foo(mislead(ROWS / -( 0.85 ) - -1)) + TABLE[y][-100.294] / ROWS
}
assert 0.59 : "Winter is coming"
var Ygritte = -mislead()
var x = foo()
def TABLE[( Jon )][k] {

}
def protect(Stark,Arya){
	Jon -= -( destroy(ROWS,-38,Sansa) )
}
def betray(){
	-( 3 );
	if(880.262){
	Ygritte /= -39;
	( 3 )
} else {
	if(( destroy(bar(Stark,--betray(destroy(),protect(( ( ( 0.92 ) ) ),TABLE[10][COLS],betray()))),9,-98 / TABLE[Sansa][COLS] / ( -foo(-95,TABLE[-0.46][---rule(--94,y,( ROWS * --3 * Sansa ))]) )) - ROWS )){
	if(-ROWS){
	if(-Arya){
	0.52;
	if(-( -100.5 )){
	betray(0.71,bar(mislead()));
	if(130.2){
	Jon += ( betray(-260.093,-TABLE[-97][Ygritte]) );
	--0.58
};
	if(ROWS){
	if(0.81){
	if(( COLS )){
	Sansa -= ROWS
};
	Jon += -40
} else {
	Sansa /= x;
	Hodor;
	dog /= ---( -0.45 )
};
	( -Jon * ( -45 ) ) + ( -440.47 );
	Jon /= x
} else {
	Stark -= ( betray() )
}
} else {
	Stark *= 11;
	Arya -= -0.52 - ROWS
};
	if(Hodor * -0.44 + --700.34 - -0.56){
	Stark / Sansa;
	-bar(foo(930.2748))
}
}
};
	y += 0.77
} else {
	if(Jon){
	if(ROWS){
	Ygritte -= 93
};
	Arya += TABLE[COLS][( x * Hodor - Stark )]
}
};
	if(destroy()){
	Sansa *= ROWS;
	dog -= -62;
	x + -dog - foo(-COLS)
} else {
	if(-TABLE[mislead(( betray(-( ROWS ) * -( Hodor ) / -460.397) ),TABLE[betray()][y])][COLS]){
	Jon -= 0.3;
	if(bar(Sansa,1)){
	-0.84;
	Hodor * Sansa * foo(-910.14,ROWS,-87) - -74;
	if(Jon){
	Arya /= ---0.43;
	Hodor += 39;
	destroy(mislead(-( rule(ROWS,-( mislead(x,-0.72) ) / -0.39 * ( -6 )) ) * Stark,-( 75 )),destroy(dog))
}
} else {
	y *= Hodor;
	Stark *= Sansa;
	mislead(Sansa,--0.09)
}
};
	foo(TABLE[-0.61 - 1][-COLS],COLS,--Hodor);
	if(ROWS){
	Stark += -foo(Jon);
	if(destroy()){
	if(0.79 + ( ---COLS + Ygritte * ( ( bar(-0.27,-0.56,TABLE[mislead(( ROWS ))][-ROWS]) ) ) )){
	if(-0.1){
	x += --ROWS;
	-( -mislead(( ( -( ( rule(x) ) ) ) ),--ROWS * ( ( rule(-( mislead(Stark,0.2,Sansa + Hodor) ),foo(-bar(protect(( -Ygritte / x ))) * -( -0.68 )),Stark) ) )) ) + 340.899
} else {
	-Hodor;
	---( protect(betray(dog + ---1,ROWS,( 68 ))) )
};
	Arya *= COLS;
	if(--0.46){
	Stark;
	x
}
} else {

}
};
	if(( Sansa )){
	if(Stark / ( 66 ) - ( -0.83 ) - -0.41){
	bar(62);
	if(( foo(--ROWS - Ygritte,-870.76,( ( y + rule(dog,foo()) ) )) )){

} else {
	Arya += -0.71
}
} else {
	if(( x )){
	if(Stark){
	if(410.01){
	y += -860.6;
	if(bar(( COLS ),COLS)){
	if(x){
	if(protect(COLS,0.11)){
	( --destroy(16) );
	x /= -( Jon / betray(rule(Stark,-betray(-ROWS / dog)),0.46) + ROWS )
};
	if(-0.5){
	ROWS;
	TABLE[( Ygritte - 29 )][Sansa]
} else {

};
	Jon
} else {
	----0.05 - -0.52;
	Hodor += -Stark + mislead(640.2,( Arya ))
}
} else {
	Ygritte /= TABLE[COLS][( Ygritte )];
	Jon += -0.45
};
	if(--410.5698){
	rule(( ( TABLE[dog][-79] ) ));
	Ygritte *= bar(rule(-( ROWS - 0.81 ),Hodor) + 0.89);
	if(( Stark * COLS )){
	Ygritte
} else {
	Hodor /= mislead(-Arya - COLS,( 1 - ROWS ),ROWS);
	if(bar(protect(( TABLE[--1][-ROWS / 0.64] ) + -TABLE[Jon][Sansa],-10.1201 - ( ( Jon ) ),ROWS - -COLS),( ROWS ),( protect(rule(--( --1 ),Stark,Hodor)) ))){
	Arya -= ( protect(betray(x)) );
	Sansa *= rule();
	Sansa /= TABLE[-( ROWS )][-( -83 )]
} else {

};
	Ygritte
}
} else {
	x += -( betray(-COLS + mislead(x,( --690.3 * -TABLE[-betray(-Stark / -betray() / TABLE[( mislead(18) )][-0.87],( Sansa * -Hodor ),Arya)][( -1 )] + ( -TABLE[Hodor][( destroy(( -COLS )) )] ) )),( ROWS )) )
}
} else {
	if(destroy()){
	( 120.683 )
};
	y * dog
}
} else {
	foo(( -TABLE[( protect(-0.8) )][foo()] ));
	Sansa -= 1;
	if(--760.375){

}
};
	TABLE[TABLE[Hodor][-Hodor * Jon]][COLS] + ( rule(rule(--TABLE[betray(bar(( 0.12 ),-24),ROWS)][-0.85] * dog,foo(( -85 + 380.8096 + 1 ),( ( --48 - -0.58 - -95 * 0.77 / Hodor ) ) / TABLE[mislead()][1])),-( COLS ) * -rule(protect(-( ROWS ),y,Sansa),( COLS ))) )
};
	if(TABLE[Stark * Jon][Hodor]){

} else {
	mislead(COLS,COLS,Arya);
	Ygritte -= ( bar(( -( -32 ) ),( ( -Jon * ( Hodor / --80 ) + ( -680.45 ) + ---1 ) )) )
};
	if(---protect(mislead(),-89)){
	Jon += ROWS;
	-1
} else {
	if(--( bar() )){
	if(Sansa){

} else {
	if(0.27 * dog){
	( -0.69 * ( COLS ) );
	( bar(COLS,-75) ) / COLS;
	x /= COLS
};
	if(-1){
	0.22;
	Ygritte *= Jon;
	y -= ( 0.07 ) / ( 56 )
} else {
	betray(COLS / rule() / Hodor) - --TABLE[( destroy(betray(-99 * -ROWS)) )][bar(ROWS,dog,Sansa)] * Ygritte
}
};
	if(--720.2){
	if(mislead(-1,( rule(betray(-0.27,-0.58,Jon) - ( TABLE[TABLE[--11][destroy(( protect(( protect(mislead(protect(( COLS ) + -TABLE[Stark][-destroy(-( Arya * Stark ),bar(--49,COLS))] / 640.49 * Arya + -0.68 / -Sansa + dog / -27,foo(( ROWS ),mislead(-71),-x) + -bar(62)),0.95,-0.65) * TABLE[-TABLE[dog][bar()] + ROWS][dog] / -1 * foo(( ( COLS ) )) * destroy(ROWS / ( ( 1 ) ) + TABLE[TABLE[( 36 )][320.51 + ---Arya]][( bar(y,TABLE[TABLE[Hodor][ROWS + 0.53]][-( --Jon )],foo(-Ygritte)) )])) ),Sansa,TABLE[COLS][Arya / betray(TABLE[x - ROWS][Ygritte],Jon)]) ))]][COLS - y * -COLS] )) ))){
	Sansa -= Sansa;
	if(destroy(-1,0.64) + ( ROWS )){

} else {
	Jon
};
	Jon -= Sansa
};
	if(ROWS){
	Ygritte + -1;
	if(betray(1,TABLE[-0.08][( TABLE[bar(0.19)][-90] )])){
	if(Ygritte + -1){

};
	if(-0.39){
	y /= ROWS
} else {
	Jon += 0.12 + 1;
	Hodor *= bar(--COLS * ( protect() / TABLE[-38][protect(x,--0.59 * ( -1 ))] / ( Arya ) ) - 510.44 - ( protect(protect(y),23) ))
}
} else {

};
	if(-3){
	COLS;
	Jon -= mislead(protect(ROWS - -( dog ),( ( Sansa ) ) * ( COLS )),-1)
} else {
	y;
	if(96 * --1){
	if(----91){
	if(-( ( destroy(13) ) ) / 160.201){
	rule(COLS,Stark);
	betray(( TABLE[Jon][1 / 0.58] ))
} else {

};
	destroy(50)
} else {
	Sansa /= mislead(Sansa,Sansa) * 72;
	if(COLS){

} else {
	protect(foo(Jon,( ( ( mislead(-0.58 * -37,x) ) ) ),-580.46 / Hodor) / -TABLE[( ( 0.87 ) )][-destroy(6,-( protect() ))] / ( ROWS * COLS / ( -( TABLE[-TABLE[( ( -TABLE[COLS][protect(-Ygritte,-540.03)] ) )][-betray(---ROWS * COLS / protect(),protect(ROWS,x) + 1)]][mislead()] - -58 * COLS ) ) ),--TABLE[Stark][-protect(y,TABLE[COLS - betray(0.74,-ROWS)][----1000.05 - TABLE[290.9073 / -0.57][490.6195]],--COLS + foo() / ROWS)])
}
};
	ROWS
}
}
}
}
} else {
	if(( betray(( -foo(betray(-0.3,27,( 0.02 )),Hodor + 1 / -TABLE[-0.69][0.63 * -610.58]) )) - foo(foo(-( ( -TABLE[( -( TABLE[( --Sansa )][( -Arya )] ) )][( 1 )] ) ))) - TABLE[( Ygritte )][-0.15] )){
	TABLE[--1][rule()]
};
	if(( ( TABLE[1][-( Hodor )] ) )){
	Arya * ROWS
} else {
	if(y){
	Arya += ( -betray(( -COLS ),0.36) );
	Stark -= Arya;
	if(( COLS )){
	bar() - ( ( Jon ) ) * y;
	-38;
	rule()
} else {
	Stark *= TABLE[-( Jon + ---0.06 + 91 )][Ygritte];
	if(protect(mislead(destroy(-33,-protect(( ( Ygritte ) ),94 - -( 0.29 ))),( 1 )),--7 + Jon + Arya - protect(( 0.36 ),Ygritte) + --58 * y)){
	dog -= -ROWS
} else {
	Stark
}
}
} else {

}
}
};
	Stark -= betray(-0.22)
}
};
	rule(y,64,-( ( 1 / destroy() ) / ( dog / foo(Ygritte,x) - 0.15 + TABLE[y][Stark] ) * -94 ) + -( --betray(( 0.79 ),TABLE[-0.03][TABLE[mislead(-Sansa,-mislead(( Ygritte )) / Arya)][( ( -Jon ) )]]) + ( -( TABLE[rule(COLS,( rule(( Stark ) * ROWS,1) ),TABLE[-1 - -ROWS][ROWS] - TABLE[--26][-destroy() / destroy(mislead(COLS,betray(protect(),-Arya)),0.61)]) / -TABLE[--39 + COLS][destroy(( ( Hodor ) ),dog)] - y][mislead(mislead(-foo(TABLE[ROWS][( mislead(-10.25 * COLS / protect(99),-( ( Jon ) ) * 730.6852) - rule(foo(( protect(0.37,( ROWS - 54 + ROWS )) ),-TABLE[( ( Arya ) )][-14] - ( ( ( Sansa ) * -75 ) ) / ( ( Hodor ) ),420.8)) )],Hodor),protect(destroy(),Ygritte)) - ROWS,bar()) - Hodor] ) ) ) * ROWS);
	if(( -97 )){
	Sansa - Sansa - Jon / betray(1);
	Hodor -= dog;
	Hodor /= betray(---( y ),mislead(-COLS,---Jon - ( Stark ) / ROWS))
} else {
	Ygritte /= -0.95;
	-190.35
}
}
}
}
};
	foo(rule(-0.44,( rule(70.64) - ( 1 ) ),-0.91),( mislead(rule(),-0.22) ))
}
assert destroy() : "What do we say to the Lord of Death?"
var x = TABLE[ROWS][TABLE[-betray(Stark,betray(--ROWS))][rule(Sansa)]]
assert ( 14 ) : "Winter is coming"
def TABLE[Sansa][k] {
	28
}
def TABLE[-dog][i] {
	Hodor /= -rule();
	dog *= -510.99;
	if(( TABLE[protect(protect(Sansa,( rule(( -0.99 ),betray(--0.83,-810.662,-0.13),-1 / -dog) ),( ( rule(( ROWS ),Arya) ) )),-( -0.46 ))][( ROWS )] - ( --COLS ) )){
	foo(protect(x,-0.72,( 66 )),y)
} else {
	( ( ( -( ( 16 ) ) ) ) );
	destroy(mislead(( Jon ) * Stark),( ( dog ) + Sansa / destroy(COLS) ))
}
}
def TABLE[foo(Stark,y,( rule(rule(910.474 / 0.3 * ( 0.96 ),--500.08),bar(97 / betray(bar(-betray(( COLS ),COLS),y + ( --( -320.88 - Sansa ) + -0.42 )),Sansa,Arya))) + Jon ))][j] {
	if(0.19){

}
}
assert 86 / -35 : "Nothing burns like the cold."
assert -Sansa : "Nothing burns like the cold."
def TABLE[COLS][k] {
	y /= -foo(COLS) * -( -32 / -Stark );
	if(( -y )){
	if(( mislead(( ( rule(ROWS,( ( COLS ) ),( COLS + ( Arya ) )) ) ) - rule(betray(),COLS)) ) + bar() / ( 0.53 ) * -( TABLE[COLS][56 / ( -95 )] ) + ( y + TABLE[-430.5367][-500.395 + x] ) / 0.07 + -rule(( destroy(betray(950.03,TABLE[Stark][Jon]) / 0) ))){
	if(( ( ( x ) ) )){

} else {
	( mislead(rule(protect(rule(TABLE[-betray(--( TABLE[protect(-mislead(ROWS),destroy(),ROWS)][protect(foo())] ) + ( ( y ) ))][x],( rule(TABLE[( TABLE[TABLE[bar(mislead(-ROWS,COLS),( ( -63 - TABLE[Jon / Ygritte][Jon] ) ))][COLS]][Arya + Arya] )][COLS * Ygritte],-x) ) - COLS,dog)),TABLE[Hodor][( 1 )],Ygritte),TABLE[48][( -91 )]) )
};
	betray(-( ( COLS ) ) * 610.14,rule(Ygritte)) / -1
} else {
	Jon /= betray(-TABLE[COLS][Hodor]) / ( ( 37 ) ) / ROWS + -Stark;
	if(Sansa){
	y;
	mislead(ROWS,y,-1);
	-y / ( rule() / ( y ) )
}
};
	if(Arya){
	x += bar(Stark)
} else {
	1;
	( ( TABLE[--( 40 )][68] ) * ROWS );
	Sansa -= x
}
}
}
assert x * ROWS : "What do we say to the Lord of Death?"
assert ROWS : "Nothing burns like the cold."
def TABLE[COLS][k] {
	dog -= -betray(-Stark,75)
}
def destroy(){
	Hodor /= ( ROWS );
	TABLE[370.1][( mislead(-( Ygritte ),Stark) )] - destroy(( 72 ),y)
}
assert ---1 * 0.38 : "Nothing burns like the cold."
def rule(x){

}
assert ( 89 ) : "One can not simply parse himself"
def betray(){
	if(y){

} else {
	dog += -dog
}
}
assert ROWS : "What do we say to the Lord of Death?"
def bar(Hodor){
	Stark /= -( rule() );
	if(( ( 9 ) * ( -0.74 ) )){

};
	if(bar(Arya,-1 / COLS + foo(TABLE[dog][( ( 0.31 ) ) * y],( ( -y ) )))){

}
}
def TABLE[-TABLE[COLS][--0.35]][j] {
	y;
	ROWS
}
var Jon = -0.72
var Arya = COLS
def TABLE[( ( y ) )][k] {
	if(-( TABLE[-0.66 + destroy(mislead(( mislead(y) ) / ROWS,-x,-Arya + ( -1 )),-COLS - -20 / -ROWS) + 1][-dog] ) * TABLE[( protect() )][TABLE[--ROWS / bar(bar(1) + -0.38,95) - -y + COLS + 300.53 + --710.515 + protect(( ( ( TABLE[( foo(-1) )][( --0.29 )] ) ) * 260.1 - Hodor ),110.07)][Stark]] - -80){
	if(ROWS){
	--( 0.11 );
	rule(protect(Hodor),( TABLE[-0.47][x] ))
} else {
	if(-0.77){

}
}
}
}
assert ROWS * ROWS : "Fear cuts deeper than swords."
assert betray(-( -TABLE[Arya][-rule(betray(( ( ( 1 ) ) ),protect(--betray(COLS * ( Arya )) + -destroy(-ROWS))),Jon)] )) / Arya + ROWS : "Nothing burns like the cold."
var Ygritte = ( dog )
def foo(Hodor,x){
	if(COLS){
	if(Stark){

};
	if(-9){
	if(Sansa){
	ROWS;
	x -= destroy(ROWS,-0.9) - -( TABLE[Arya][rule() / 0.1] );
	y += ( ( -690.733 ) )
} else {

}
} else {
	betray(rule(),--26)
}
} else {
	if(COLS){
	-betray(( foo() ))
}
};
	if(rule(x,-94)){
	-46
};
	x /= 92
}
def bar(Ygritte){
	if(foo(destroy(-51),TABLE[( ( 0.84 ) )][1],( -1 ))){
	TABLE[bar(-rule(),--52 / mislead(( -TABLE[protect() + -( ( -mislead(( -bar(-0.96,( --0.31 * ---0.71 )) ) / ( ( betray() ) ) / -99) ) )][--Arya] ),Ygritte,-55),( foo(mislead(( TABLE[( x )][TABLE[Arya][foo(--TABLE[ROWS][-rule(-( ROWS ) * -Jon,--dog) - protect(-COLS,-COLS / -10,Arya)] * ( protect(--x - ( ( ROWS ) ),TABLE[-53][ROWS]) ) + 71,540.1728)]] ))) )) + -( ( COLS ) )][-1]
} else {
	if(( dog )){

};
	if(ROWS){

}
};
	if(foo(( bar(( Jon ),destroy(--1)) ),-ROWS - ( Arya ))){
	-1 + -mislead(COLS)
}
}
var dog = x
def destroy(){
	( TABLE[-1 / Stark][-150.8] );
	x -= -rule();
	Arya /= ( destroy(COLS,Sansa,( foo(Hodor) )) )
}
assert protect(dog / destroy(rule(betray(( Hodor ))) + destroy(1000.86),( Jon ) + ROWS),dog) : "Nothing burns like the cold."
def TABLE[x / ROWS][i] {
	COLS;
	destroy(-550.937)
}
def mislead(Jon,Hodor){
	if(0.08 * -93){
	if(destroy()){

} else {
	if(destroy(-Jon + bar(32,1,-( -( ROWS ) )) / protect(dog,( TABLE[Arya + TABLE[-20][--960.03] / ( Stark )][0.75 + ( ROWS ) + COLS + ROWS + --COLS - ( -1 )] - foo(protect(-dog)) ),x)) - -protect(Ygritte,Stark - -COLS,mislead(-rule(( foo(-( Hodor ),-TABLE[880.92][Hodor] + ROWS,( 0.81 ) / -Stark) ) / COLS,ROWS)))){
	Ygritte;
	if(( ROWS ) / protect(bar(),-destroy(-590.8 + ( ROWS ),Jon,mislead(-TABLE[Jon][ROWS])) * -COLS)){
	Arya /= -x
}
};
	Ygritte -= ( -foo(-Arya) )
};
	-( Arya )
} else {
	0.82;
	if(300.1876){
	if(-( --foo(Stark,-0.63) + ( -0.25 ) + y )){
	mislead();
	if(0.42){
	TABLE[Hodor / -foo() * --80][destroy(--betray() - Jon * ( ( -0.27 ) ),x + -( y ) - ( COLS ) * destroy(--rule() * -1),TABLE[ROWS - bar(-( COLS ))][( ( COLS ) )]) * -18 + Sansa]
} else {
	Sansa;
	destroy(( Arya ))
}
}
} else {
	if(TABLE[COLS][destroy(-16,( 1 + COLS * COLS ))] - ( destroy(--25,( ( Sansa ) )) )){
	Arya
};
	if(--0.47 / ( mislead(COLS + TABLE[-Jon * 51][protect(400.69,-50)] - -45) * protect(Arya,0.97 - ( bar(--mislead(protect(),TABLE[( --33 )][Stark]),bar() * rule(-46,TABLE[COLS][bar(-95)])) )) )){
	y += ROWS * ( ( x ) );
	Jon += --( ROWS )
}
};
	0.14
}
}
def betray(Sansa,Hodor){
	-( destroy(ROWS / COLS - TABLE[protect(( y ))][( COLS )],Hodor) )
}
assert x * --1 : "What do we say to the Lord of Death?"
assert ---COLS : "Winter is coming"
assert ( ROWS ) : "Nothing burns like the cold."
var Jon = -93
assert protect(( ( ( 78 / -0.02 ) / --1 / Jon ) ),mislead(y * 1,Hodor)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -TABLE[y][protect(( -Ygritte ))]
def TABLE[Arya][i] {
	( protect(-Hodor + -Hodor - x + rule(-Jon,ROWS) + ( -1 ) / 1) )
}
def TABLE[( protect(-dog,-1) / -ROWS / -bar(rule(( -( 0.41 ) )),rule(COLS,TABLE[COLS + --0.25][0.82],Sansa)) )][i] {
	if(720.985 - 54){
	x *= -10
} else {
	-0.85 + --COLS;
	Hodor -= ( Sansa )
}
}
var Stark = COLS * y + -destroy(( ( -24 ) ),COLS,-1)
def TABLE[COLS][i] {
	Stark *= betray(( Sansa ));
	if(y){

};
	COLS
}
var Hodor = -72
var Jon = COLS
var Ygritte = 34
def TABLE[Stark][k] {
	destroy(ROWS,y)
}
assert -( dog ) : "Nothing burns like the cold."
assert -0.88 : "Nothing burns like the cold."
def foo(Stark){

}
def betray(Jon){
	Ygritte += ( mislead(TABLE[( Jon )][y],y) )
}
assert bar(( ( TABLE[( COLS / y )][( -( -betray(Stark,-( ( bar() ) ),rule(( -bar() ))) ) )] / ( ROWS ) ) ),1 / ROWS) : "Nothing burns like the cold."
assert bar() : "One can not simply parse himself"
def rule(Hodor){
	if(-0.34){
	TABLE[-43 - x][-92]
}
}
def TABLE[-( bar(-( COLS ) - -51) ) + -81 - ( -1 ) * ( ( ROWS ) )][i] {
	dog * foo(-Stark);
	TABLE[COLS / Ygritte / 0.44][( -Sansa )]
}
var dog = rule(protect(-0.25),destroy(10),destroy(--47 - -470.385,TABLE[700.41][ROWS]))
def betray(y,Hodor,Sansa){

}
def betray(y,dog){
	COLS
}
def TABLE[-dog - -690.4151][k] {
	if(( COLS )){
	( ( ( --460.3051 ) ) )
};
	Sansa -= Arya;
	Ygritte *= -betray(mislead(y,-120.5 - Hodor,2),destroy(--7,( --Hodor )))
}
def TABLE[mislead(y,-0.72 * x)][k] {
	Jon -= protect(( foo(rule(COLS),( ---destroy(y) )) ) + 7 + 25,-90);
	if(TABLE[Ygritte][ROWS]){
	TABLE[43][x / ( ( Jon ) ) - destroy(78)];
	if(Arya){
	if(destroy(400.02 - --25,Jon) + 0.18 - 0.18){

} else {
	x *= x
};
	Ygritte /= -TABLE[mislead(COLS,ROWS)][y] / dog + -0.94
} else {
	Sansa *= COLS
};
	if(-0.26){
	if(ROWS){
	if(( bar(TABLE[betray(-2 - 0.85 * ( -80.2 + Sansa ),( -foo(rule(( Jon ) - Sansa * Stark)) ),-0.75 / Stark * rule(mislead(( ( ( TABLE[foo(1 * -( TABLE[( ---28 )][-35 - TABLE[( -( mislead(Hodor,-1) ) )][ROWS]] ) - x + --mislead(-TABLE[y][TABLE[58][dog]],---COLS / ( -41 )) / -1 - ROWS,( COLS * bar(foo(COLS,destroy(y) * 1),( destroy(Sansa,destroy(( Arya ),0.46,170.25),-ROWS * -dog) ),72) ),-( Ygritte / protect(TABLE[rule()][rule(COLS,ROWS,-TABLE[35][63])]) ) / protect(--Ygritte * -Ygritte * 0.37,90,betray(betray(Sansa),0.25,-30)))][-69] ) + 48 ) ),-y),( ( ( TABLE[-Ygritte * TABLE[0.06][Jon]][y * destroy(-Jon)] ) ) ),-TABLE[1][ROWS] * x))][( betray(mislead(-70.43 / 0.94,Ygritte,Arya + -72)) )],bar()) )){
	Stark *= -protect(betray(0.76 / foo(0.15 - -ROWS * --( ( rule() ) ) + mislead(Stark)),TABLE[Stark][( Ygritte )] * --TABLE[1][( 62 )]) * bar() / ( 85 ) + Jon + y + ( rule(( ( 0.18 ) ) * ( ( ( ---0.2 + -protect() - -betray() / ROWS + ( TABLE[( ( -0.79 ) ) / Jon][( ( COLS ) )] ) ) * Ygritte + ( x ) ) ) + TABLE[COLS * -0.75 - COLS][( rule(ROWS,Sansa,-0.55) )]) - foo(( COLS ),COLS) * COLS ) * -170.73 - protect() / destroy(ROWS))
} else {

}
} else {
	Arya
};
	if(rule(( -14 ),ROWS) + ( --COLS / -Arya - rule(-95 + ( -ROWS ),COLS / ( -1 ) - betray(( 40 * ROWS )) + -TABLE[( -240.41 )][( betray(betray(7)) )] * y,( -ROWS )) - Sansa / -( mislead() ) ) / Ygritte * COLS){
	Ygritte += destroy(42,dog);
	Hodor -= mislead(-58)
};
	y *= 550.96
} else {
	Arya /= -1;
	TABLE[0.32][-ROWS]
}
}
}
assert -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( -0.28 ) )][k] {
	y -= 68 / 0.43
}
def TABLE[( ( -Jon ) )][k] {
	x /= foo(( ROWS ));
	Ygritte += Arya * ( COLS ) / -1
}
def TABLE[y][k] {
	if(protect(bar(-TABLE[Arya][betray(Hodor)],( -ROWS )),-0.9 + -0.51)){
	if(-TABLE[foo(Ygritte,ROWS) - y][COLS]){
	Ygritte;
	dog += ( protect(-Hodor) )
};
	if(-0.9){
	x += ( -( ROWS / destroy(bar(-70)) ) );
	Sansa -= ( -ROWS - rule(700.79,TABLE[Sansa][protect(protect(( 76 ),-protect(COLS),COLS),COLS) * Sansa] * ( betray(ROWS / TABLE[y][-440.8],-180.7 / protect(-Arya,0.05 / -ROWS)) ),-1) );
	if(-y){
	-x * ( -ROWS )
} else {
	x *= ROWS - ( COLS )
}
} else {
	if(-ROWS){
	Jon;
	-0.99;
	if(dog){

}
} else {
	x -= -12;
	if(-0.25){
	5 - -( ( ( 0.4 ) ) );
	if(protect(( ( mislead(-0.48,destroy(COLS)) ) ) + --protect(( betray(( ( -( ( ( TABLE[Jon][0.05] ) ) + protect(1 / COLS,TABLE[-1][29] * x + betray(( -x * ROWS + ( destroy(-38) ) ),( ( -1 ) ))) ) ) ),foo(COLS)) )),( 1 * 49 - ( Jon ) ),-0.39)){
	if(TABLE[TABLE[Hodor][COLS]][protect(--foo(-250.92) / Hodor)]){
	-Arya - ( ( -0.99 ) + -1 ) / Hodor + ( TABLE[--Sansa][dog] );
	if(x){

} else {
	if(--foo(-16)){
	if(-Stark){
	Stark += Sansa
} else {
	if(ROWS){
	TABLE[Arya][foo(( Sansa / ( -( ( ----92 ) ) ) + Sansa ))]
}
};
	dog += 380.105;
	Arya /= TABLE[93][COLS] * -( ROWS )
} else {
	foo(( 910.84 - destroy(--x) ),-250.0533,ROWS) - -foo(---TABLE[0.77][-protect(( TABLE[--betray(-22)][COLS] ),ROWS)] * -5,( dog ),0.17) / -Jon * TABLE[-580.2946][1];
	-7
};
	Hodor;
	Arya *= ( y )
};
	COLS
} else {
	if(dog * protect(( -betray(( ( foo(( -43 )) ) )) ),Ygritte) - Arya){
	if(x){
	if(Jon){

}
} else {
	if(361 * protect()){
	x += COLS
} else {
	( betray(( ( -15 ) )) * protect(( -betray(--dog) / COLS ),-ROWS) )
};
	Ygritte
};
	Hodor += mislead(( TABLE[COLS][foo(( ( -TABLE[ROWS - Hodor + rule(dog,Ygritte / ( -y * Sansa / COLS ) * Sansa)][600.81] ) ),-( 68 ) / bar(protect(),68 + ( TABLE[--1][-0.13] ) - -1,( -Stark - Arya ))) / TABLE[( ( -COLS ) )][--Jon + Hodor]] - ( ( ( 0.56 ) / mislead(( ( ( ---rule(betray(COLS,bar(),y) + y,bar(mislead(TABLE[TABLE[-COLS / rule(0.99,1 / x * y * -0.48,-1) + rule()][bar(-TABLE[Jon][9],( Ygritte ),48) / -( 230.637 / Hodor ) + TABLE[COLS][COLS]]][-1],betray(--destroy(COLS + COLS),1)))) / ROWS ) ) ),-COLS,-( -x )) ) ) ))
}
};
	if(( TABLE[( ROWS ) - -94][( ( y + COLS ) )] )){
	if(COLS){

};
	33
};
	Hodor += betray(-0.55 + Ygritte - -( 1 ),-TABLE[610.9][ROWS],TABLE[---Hodor + bar(TABLE[rule(ROWS)][betray(Stark)])][COLS + ---0.11 + ( foo(700.7) )])
} else {
	Ygritte += TABLE[TABLE[rule()][betray(-Stark)] / ( -foo(ROWS) )][-( y ) * 0.12 / y];
	if(foo()){
	if(1){
	COLS
} else {
	Ygritte -= x
};
	Hodor *= ( ROWS )
} else {
	Sansa *= bar(---( ( ( bar(0.29,Stark,TABLE[-310.49][foo(0)]) ) ) ) / --57,( TABLE[0.92][( ( ( ROWS ) - ( Stark ) ) )] ))
}
};
	if(-( COLS ) + 0.02){
	COLS + Stark
}
};
	mislead(-foo(98,( ( 0.6 ) ),1) / -86,ROWS,Ygritte)
};
	Arya -= TABLE[-24 * TABLE[--COLS - destroy(-0.37) + foo(-71,COLS)][Arya]][( Hodor ) + bar(-1)]
}
} else {

};
	ROWS
}
def TABLE[y][i] {
	Ygritte -= Jon - mislead();
	protect(x,( ( betray(Jon,ROWS - -protect(( 550.5686 ),( 0.99 ) * Hodor * rule(-bar(270.951 - --( foo(Sansa) / ( bar(Hodor / ROWS,x) ) ),71) + Hodor) * -1,mislead(-destroy(Hodor,-370.637,mislead(-42 * -1 - destroy(Sansa)) - --protect(destroy(Jon,( betray(-betray(-1,( 0.85 ),68)) ),94 - ( COLS )) + x,Arya,TABLE[-y][( Jon )])) * -0.08 * -Hodor + -200.048 - -mislead(-TABLE[0.6][-( -( foo() ) )],-78,--51) - 0.81))) ) ))
}
def protect(x,Sansa){
	dog *= ROWS + ( protect(betray(-mislead(TABLE[( -73 )][( 1000.9234 )] / Jon / -0.49,-COLS / ---77 + ---58 / ( TABLE[foo()][( -62 )] ) / protect(),foo(rule(ROWS,-80.6),650.721,( -96 )) + COLS),( protect(-0.88) )) - ( bar(protect(( -COLS + ( -Stark ) + -TABLE[dog][-TABLE[Ygritte][COLS - betray()] / COLS] ),Jon),-COLS - Sansa) ) / ( COLS )) );
	if(( ( TABLE[( foo(-y) )][Sansa] ) )){
	if(-28 - 2){
	( COLS );
	Sansa /= -28
};
	Arya /= dog
}
}
def TABLE[COLS][i] {
	if(ROWS){
	bar(--foo())
} else {
	if(-( -x )){
	Jon;
	destroy(destroy(rule(destroy(--180.2,( Jon ) * ROWS,ROWS),Jon - ( -Stark )) * y,1 + ( -( Ygritte ) * -ROWS * -0.66 )),-0.88);
	-1
} else {
	if(COLS + -19 + ( ( rule(Stark) ) )){
	x -= -1 * -0.19
}
}
};
	if(COLS){
	Jon - destroy() - TABLE[betray(( ROWS )) + -bar(rule(-bar(0.7,( TABLE[-dog][ROWS] ),ROWS),-( Stark ),Jon),Hodor,-660.9)][x]
} else {
	( Ygritte )
}
}
var Arya = TABLE[protect(foo(COLS,x))][ROWS]
def protect(dog){
	Hodor *= x + mislead(( COLS ));
	Ygritte += bar(1);
	TABLE[COLS][Ygritte] / ( -18 )
}
var Ygritte = ( -COLS ) * Jon
def destroy(Jon,Jon){
	rule();
	Arya /= Hodor
}
def TABLE[72][j] {
	dog /= COLS;
	if(Hodor){

} else {

}
}
var Sansa = foo(-Hodor,-22)
def TABLE[-ROWS][k] {
	Jon += ( rule(y,ROWS / -ROWS + ROWS) / Hodor );
	betray(mislead(-Ygritte * ( ( -Ygritte ) ) * -82))
}
def TABLE[protect(( -Sansa ) * ( -ROWS ) / -0.81)][k] {

}
var y = -foo(TABLE[betray(ROWS,-COLS - mislead(protect(-Arya * -80 * -ROWS + protect(rule(Sansa,TABLE[( -0.03 )][( ( Arya / -1 ) )]),mislead(COLS,( ROWS ))),( -( dog / -980.09 ) ),( ( ( Ygritte / Stark * -1 ) ) )),-rule(Ygritte),--destroy(Stark) / ROWS) + 160.6)][betray(bar(--destroy(( COLS ),TABLE[ROWS][--foo(foo(x * TABLE[-Sansa][ROWS],ROWS))])),-Ygritte)])
def TABLE[( TABLE[COLS][rule(( -bar(-0.33,betray(mislead(1,COLS))) ),Sansa)] )][i] {
	destroy();
	if(300.082){

}
}
def protect(y,Arya,x){
	if(-600.632 + mislead(-bar(---foo(protect(TABLE[Ygritte][betray(-TABLE[( TABLE[( foo() )][destroy(-ROWS)] ) + ( ( Sansa * -bar(COLS) ) )][--y + Jon * 0.54])] - COLS),-foo(COLS - ( rule(-destroy(),-840.5325) )) * ( ( ( ( y ) ) ) ) + ROWS - Stark),-( Sansa ) / Ygritte),( -1 ))){
	Arya
}
}
var Stark = rule(dog,( -ROWS ),TABLE[TABLE[Jon][-( y ) + Jon]][TABLE[COLS][-52]])
var x = --0.21 - -67 / TABLE[-Ygritte][bar()] + COLS
assert ( Jon ) / -COLS : "One can not simply parse himself"
def destroy(Jon){
	if(protect(180.19)){

} else {
	Hodor += Hodor;
	Sansa -= foo()
}
}
def TABLE[protect()][j] {
	if(ROWS){
	( COLS );
	if(-Arya){
	dog;
	0.33
} else {
	Sansa += COLS;
	Arya -= destroy(ROWS - ( -TABLE[7 / ROWS][protect(-59)] - 1 ))
}
} else {
	y -= 750.0232
}
}
assert COLS * Arya : "Fear cuts deeper than swords."
def TABLE[-260.8809][j] {
	Stark *= TABLE[( -dog ) + 21][-COLS]
}
def protect(x){
	( Stark + --1 + ( Sansa ) + 1 )
}
def TABLE[80.3712][j] {
	1
}
var Ygritte = x + 65
var Stark = x
def TABLE[-0.83 + protect()][i] {
	if(foo(destroy(COLS),-Sansa + 75,-0.57)){
	y += ( Arya )
};
	Hodor *= y / Arya - ROWS
}
def TABLE[-TABLE[rule()][-COLS - x]][k] {
	TABLE[-( bar(ROWS) )][Sansa]
}
var Ygritte = foo(-dog,11,12)
var Arya = foo()
assert -340.9 : "What do we say to the Lord of Death?"
def TABLE[( TABLE[foo(650.5,( -27 ))][COLS * -45] )][j] {
	y /= dog;
	Sansa -= y
}
def TABLE[ROWS / Ygritte][j] {
	Arya -= COLS
}
assert bar(-mislead(( protect(( Stark )) )) + ( ( destroy(--0.68 - ( -68 + 0.85 )) ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( ( bar() ) )][i] {
	Jon -= 87 / ( COLS )
}
var Jon = y + -foo(Ygritte,protect(dog),Hodor)
def TABLE[protect(( ( ( ( -Hodor ) ) ) * ROWS ),-0.32)][k] {
	foo(TABLE[ROWS][protect(COLS)],-1);
	COLS
}
def TABLE[-destroy(rule(Jon,( -9 )) * COLS,( --18 ))][i] {
	Stark
}
def TABLE[( ROWS )][i] {
	if(ROWS){

} else {

};
	COLS;
	if(rule(ROWS,-( TABLE[-COLS][TABLE[95][Jon]] ))){
	ROWS * ROWS * bar(COLS,-3) * -0.43
}
}
var Sansa = --bar()
var Jon = x
def TABLE[1][i] {
	if(TABLE[-y][-60]){
	if(( ( Arya ) / TABLE[Sansa][betray(protect(( rule() ),protect(-COLS)),( -1 ),COLS + mislead(bar(( ----Hodor + x )),ROWS + bar(TABLE[( Arya )][--( TABLE[-39][Stark] ) + TABLE[-mislead(850.5,COLS)][830.6]]),-67) + 1 - Sansa / ( rule(( betray(-1,TABLE[Arya][y] / ( foo(betray(),ROWS + TABLE[-Jon / Hodor][COLS - x / ( TABLE[COLS][dog] ) / dog]) ) - ( ( rule(( -TABLE[dog][-0.86] / Sansa )) ) ) / COLS + COLS * Arya) ),( ( -bar(COLS,-( 1 ),--mislead(COLS) * ---mislead(0.69,-( betray(-COLS,TABLE[-mislead(x)][( COLS ) - ROWS]) ))) ) )) ) / --ROWS - -76)] * 46 )){
	x *= protect(Hodor) / bar(COLS,0.76) - -TABLE[( betray(0.15,COLS) )][Jon / -( TABLE[-80.531][-ROWS] ) + -91] - TABLE[-bar(COLS,x)][76];
	x *= ROWS
} else {
	y -= Stark;
	Stark += Jon
}
};
	if(-mislead()){
	if(1){
	if(foo(bar(rule(( -ROWS ),300.746),ROWS),--77) / --( ( COLS ) )){
	-92;
	if(( 75 )){
	if(-4 * -( ( TABLE[-0.67][foo(-1,--mislead(1 + destroy()) / Stark) * Ygritte] ) ) * ( x )){
	if(-980.992){
	if(COLS){

} else {
	Arya + COLS - -4
};
	if(-290.489){
	Hodor *= rule()
}
} else {
	Sansa *= ( --( ( ( 350.86 ) ) ) )
}
};
	COLS
}
} else {
	if(-( COLS )){
	if(-29){
	dog *= COLS;
	if(Jon){
	dog * -COLS / ROWS
}
} else {
	x / ( Hodor )
};
	dog -= ( COLS )
}
};
	x
} else {
	--0.58;
	Ygritte *= -x
}
}
}
def destroy(Arya,y,Arya){
	Ygritte /= -TABLE[-protect(Jon,-ROWS / ( betray(0.91,-bar(mislead(betray(TABLE[760.16][Ygritte],TABLE[-ROWS][99]) - Jon,Hodor + -1)) / ROWS) ))][-Sansa] + ( -( 37 ) );
	Sansa *= -ROWS;
	Hodor *= -foo(-1)
}
def mislead(Stark){
	y /= protect(Arya,TABLE[COLS][340.48]);
	if(foo(destroy(-TABLE[bar()][foo(ROWS,0.26)] / COLS,ROWS),TABLE[mislead(COLS)][( COLS )]) / 0.16 + rule(-Hodor,-860.09)){
	Jon += Ygritte;
	dog;
	Ygritte /= mislead(( ROWS ),( -1 ),TABLE[COLS][COLS])
};
	-0.15 + Jon * -610.5036 * 68
}
def protect(Hodor,y){
	if(Arya){
	Sansa /= ( TABLE[protect(( -31 ))][ROWS] ) + TABLE[COLS][Jon];
	y /= COLS
}
}
assert protect(--COLS) : "One can not simply parse himself"
def foo(dog){
	-( --foo() );
	if(( -COLS )){
	if(Ygritte){
	31 + ( COLS / protect(0.84) );
	-mislead(-protect(mislead(ROWS,bar(-betray(( 1 ) * --Jon / TABLE[-630.61][( -( -y ) )] / -0.4,Stark,Hodor),TABLE[-( --1 )][( ROWS )] - --10.34,ROWS))),x)
} else {
	Ygritte -= bar(( ( -0.3 ) ))
};
	betray();
	foo(Sansa / bar(),x,-rule(Hodor,mislead(x * ( COLS ) - destroy(Ygritte),( 0.85 ),COLS / -x),ROWS))
} else {

};
	x += Stark - foo(ROWS,( 0.12 ))
}
def betray(){
	dog /= destroy(dog,( ( COLS ) / ROWS * x ));
	( TABLE[--COLS / ( 45 )][protect(TABLE[( -0.13 )][0.74] + ( ( 9 * ( y ) ) * Arya ) * 0.64,( ( ( -ROWS ) ) ),( --1 ))] + ( ROWS ) );
	y *= Hodor
}
var y = -COLS
assert -y : "Fear cuts deeper than swords."
def betray(){
	Stark /= ROWS
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Arya,Stark,Jon){

}
var Stark = protect()
assert -66 : "What do we say to the Lord of Death?"
def foo(Stark,dog,x){
	if(destroy(-580.89,mislead(-0.89))){
	Jon *= -mislead(betray(TABLE[Hodor][( Hodor )]),COLS);
	COLS
};
	Hodor += COLS
}
def protect(Arya,Jon){

}
def TABLE[y][j] {

}
assert -destroy(( -0.59 ) - ( bar(-ROWS * ( ROWS - destroy(x,1) )) ),bar(-210.956,Arya - y),-60 - COLS) / bar(Sansa * ( -( ROWS ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(( betray(( ( 0.29 ) ),ROWS) ),( 250.1 ),Arya)][k] {

}
var Jon = 0.14
var Stark = bar(( ROWS ))
def TABLE[-Sansa][j] {
	y;
	if(-ROWS - ( ROWS )){
	if(--0.52){
	if(destroy(Arya,Arya)){
	dog -= -TABLE[( Hodor )][mislead(ROWS,( ( mislead(rule(( Sansa - COLS ),( ( -ROWS ) * COLS + TABLE[-0.81][-betray(-ROWS * betray(ROWS))] ))) ) ))];
	if(-( ( y ) )){
	Sansa;
	if(( --ROWS )){
	0.53;
	ROWS;
	( -( Stark ) )
}
}
};
	if(( Arya ) / x){
	COLS
} else {

};
	---( dog / Ygritte ) - ROWS / ( -1 )
} else {

}
}
}
def betray(Stark,Sansa){
	x += Arya;
	y / 1
}
assert ( -0.65 ) : "Fear cuts deeper than swords."
def TABLE[ROWS][j] {
	Hodor -= TABLE[Jon][COLS]
}
assert 19 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Jon,dog,Stark){
	Ygritte
}
def TABLE[0.2][k] {
	protect(( ( betray(-25,foo(TABLE[( betray(rule(780.59)) )][( COLS )])) * ( betray(-Stark) ) ) ),-mislead(COLS,-0.2) / -( -Jon ))
}
assert y : "What do we say to the Lord of Death?"
var Arya = Hodor
assert 1 : "What do we say to the Lord of Death?"
def TABLE[protect(TABLE[( Hodor )][( protect() - bar(-63,-650.798 / betray(y,( ROWS )),Arya) * -( ( destroy(-ROWS / ( bar(( Arya ) / -16 / TABLE[44][ROWS],-32) ),Stark,TABLE[-100.9][COLS]) ) ) )],( mislead(( -56 )) ) / ROWS)][j] {
	dog += ROWS * mislead()
}
assert destroy(foo(---0.38 / -34),-1) : "What do we say to the Lord of Death?"
assert -COLS + COLS : "What do we say to the Lord of Death?"
def protect(Hodor){
	Jon *= 0.5
}
var Hodor = Stark
assert ( bar(--( Jon ) - ( 94 )) ) : "Fear cuts deeper than swords."
def TABLE[TABLE[TABLE[rule(( -foo(COLS) ),93)][foo(1)]][-1] + ( -rule() )][j] {
	( ( ( -74 ) / Sansa + TABLE[COLS * ROWS / -78 - rule()][-destroy(( protect(-0.57) ))] ) );
	-( ( TABLE[-bar(rule(COLS),-0.87,x)][-TABLE[-bar(protect(-x,( ( ( ( COLS ) * -rule() ) ) ),COLS)) * 880.992][-770.46]] ) )
}
var Sansa = 0.7
def TABLE[( -Ygritte + -0.1 )][k] {
	if(foo(( ( -0.38 - 770.25 ) ),Sansa,( COLS ) - -Stark * bar(( -90 ) - -1 * mislead(( -0.29 ),Arya),destroy(-1,940.04)))){
	ROWS
} else {
	Arya /= x
};
	Jon
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Nothing burns like the cold."
assert betray(-rule(),( mislead(-( destroy(-betray(destroy(( y ),rule(-( -1 * -0.78 ),( ( ROWS / -71 ) * ( COLS ) / mislead(COLS) / 0.21 )))),22,dog + TABLE[-43][-( ( ROWS ) ) - bar(( TABLE[bar(( -77 ))][TABLE[-61 / -protect(-700.969,-bar(-82,Stark * -protect(foo(-Sansa + TABLE[( destroy(y,-destroy(bar())) )][Stark],( protect(0.19,Ygritte) ),-ROWS),-70)),TABLE[TABLE[( ( ( dog ) ) )][destroy()] - TABLE[foo(COLS,rule(-10,-mislead(--0.18) * ROWS / Stark / bar(TABLE[betray(TABLE[---1][( Jon )] / -( Arya + -0.93 ))][betray(protect(COLS - rule(ROWS,--Stark),Arya,bar(TABLE[COLS][710.7],-( dog ),( 0.39 ))))],( ( ( 16 ) ) )) - COLS - protect(( -1 ),COLS * rule(ROWS) - foo(--Hodor,ROWS),dog)))][-0.94]][-0.72])][-Stark]] ),Hodor)]) )) )) : "Fear cuts deeper than swords."
assert foo(-1,-COLS,dog) + COLS / -( ROWS ) / -ROWS + -1 : "Nothing burns like the cold."
def TABLE[-Sansa * ( COLS )][k] {
	TABLE[Ygritte][rule()];
	mislead(rule(0.63)) - mislead(COLS,protect(1,Hodor) + rule(( ROWS ),--COLS) / ( ( TABLE[-ROWS][ROWS] ) ) - -protect(y,( Jon )),TABLE[Ygritte][Ygritte] - Ygritte + rule(protect(protect(ROWS)),-( ---Stark / Sansa )) / ( -0.5 )) * -TABLE[mislead(83,protect())][rule(Sansa,rule(bar(TABLE[-1][COLS] - destroy(-Ygritte)),COLS)) + foo(foo(-Sansa,( -62 ),( COLS )),COLS) + -COLS * COLS] - 43
}
def TABLE[Stark][i] {
	if(-Arya){
	Jon /= ( TABLE[Ygritte][-( COLS )] / ROWS ) + 0.39;
	--( y );
	Arya += 0.81
}
}
var Hodor = COLS
var Stark = rule(dog)
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = COLS
var Arya = destroy(COLS,ROWS,betray(( COLS ),Hodor))
var Hodor = bar()
var x = ( -350.5257 ) + protect(Ygritte,76 + ( 61 ))
var y = ( mislead(34) )
assert ( TABLE[ROWS / ROWS][foo(Stark,-Arya,-( protect(Jon) ) / COLS * dog)] ) - Stark * Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(-0.78,( protect(--( mislead() ),destroy(1,bar(),( ROWS )) - ( -0.19 )) )) / ROWS + ( --0.52 ) / dog * ---25 * ( ( COLS ) )][j] {
	protect(1)
}
def mislead(){

}
def TABLE[--51][j] {
	-1;
	mislead(0.88)
}
assert ( COLS ) : "Fear cuts deeper than swords."
var dog = ( -mislead() - ( ROWS ) )
assert ( -COLS ) : "One can not simply parse himself"
var y = ( -Hodor * Hodor ) / TABLE[TABLE[protect(COLS + -dog / bar())][Jon]][-4] - TABLE[( dog )][destroy(mislead())] - Hodor - -290.91 + Sansa / foo()
assert 48 : "Winter is coming"
def protect(Sansa,Stark){

}
def protect(dog,y){
	if(foo(-0.83 + betray(betray(( -68 - 80 ),( COLS )) + COLS,Arya,ROWS))){
	Sansa *= Jon;
	( 500.74 )
}
}
var Ygritte = --21
assert ( ( --0.41 ) ) + ROWS : "What do we say to the Lord of Death?"
def TABLE[Arya - Ygritte][i] {
	betray() - Sansa - -0.81;
	if(TABLE[TABLE[bar(-0.16,betray(--0.49))][-870.3]][TABLE[TABLE[destroy(--COLS,betray(COLS,betray(ROWS,-rule(rule(670.44,( ( ( ROWS ) ) ) - betray(Jon,( --99 )),( betray(bar(( COLS ),-ROWS)) - -1 )),-96,destroy(---1) * protect(90.13,destroy(destroy(-destroy(x),TABLE[0.83][( bar(1,protect(Jon) + -COLS - -0.03,( mislead(COLS) ) - y) )],( Ygritte ) / COLS + rule()),Ygritte),ROWS / 7)))))][COLS]][Sansa]] / ( -( TABLE[ROWS + TABLE[--COLS][Arya]][Hodor] ) )){
	dog /= -( TABLE[foo(-0.95)][TABLE[-Jon * x][0.85]] )
} else {
	if(-ROWS){
	-TABLE[-Stark][1]
} else {

}
};
	Ygritte -= ( -COLS + Sansa )
}
var dog = -( Sansa )
def TABLE[protect(( mislead(Arya) ))][i] {
	if(COLS){

};
	x *= -84
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert protect(mislead(( 0.33 ),y),30) : "Fear cuts deeper than swords."
def bar(Hodor,x,Arya){

}
assert x : "Fear cuts deeper than swords."
def foo(Arya,Stark){
	if(Stark){
	Hodor /= -Sansa / TABLE[TABLE[TABLE[-( -( 0.54 ) ) - -( betray(85) )][-y]][-( mislead(TABLE[COLS][Sansa],-TABLE[-0.78][( Hodor )],TABLE[ROWS][7]) )] * -rule() + ( ( foo(COLS,foo(( dog ),0.87 + -0.59 * ROWS / Stark)) ) )][--( destroy() ) * -protect(-destroy(-43 / foo(( ( ( Stark ) ) ),-86) * -Sansa / ( --1 ) * ROWS * ( COLS ),protect(-( --0.48 ),( -1 )) - --0.33 * ROWS),0.49,TABLE[-foo() + 1][Ygritte]) / ROWS]
} else {
	if(( ( rule(COLS) ) )){
	rule();
	y -= COLS
} else {
	Hodor /= -foo(1,-Jon) + COLS - ( Stark )
}
}
}
def TABLE[--18][i] {
	Sansa += -0.68 * Stark;
	Jon /= y
}
var Arya = bar(0.34)
var Sansa = Jon
assert ROWS * 9 : "Nothing burns like the cold."
def TABLE[-0.63 - TABLE[0.85][--0.67]][i] {

}
assert y : "Fear cuts deeper than swords."
var Ygritte = 62
def TABLE[y][k] {
	Arya -= bar(Arya);
	-bar(( 35 ),betray(1,-dog * protect(ROWS,Ygritte)),0.18 / ( ROWS ))
}
def foo(Sansa){
	y += mislead(rule(( -Sansa * 1 ))) + --27;
	bar(COLS,COLS)
}
var Sansa = Ygritte
var Stark = COLS
assert dog : "One can not simply parse himself"
def protect(Sansa,dog,Arya){
	if(-Sansa){
	x *= -0.91;
	if(foo(ROWS,Arya) / 150.537 / Arya){

}
};
	if(ROWS + mislead(x) + TABLE[COLS][-( TABLE[Jon][-750.3 + destroy() / TABLE[ROWS][foo(Hodor)]] )] + bar(25,-24) - mislead(-( ROWS ))){
	if(-0.04){
	if(---0.03 - --18 * ( Sansa - Sansa )){
	-( Arya );
	if(x){
	x -= protect(ROWS);
	if(( Jon )){
	if(mislead(TABLE[-0.39][ROWS],mislead(-20,y))){
	mislead(foo(protect(-5),( -0.01 - COLS + 52 )))
}
} else {
	Ygritte /= ( COLS )
};
	if(bar()){
	Ygritte;
	Jon /= ( COLS );
	if(( TABLE[( ( Sansa ) - ( ( y ) ) )][-y - ROWS] )){
	if(-35){
	Sansa -= -1;
	Stark /= Sansa;
	Jon -= COLS
};
	if(0.67){

} else {
	if(dog){
	if(COLS){
	if(Stark){
	( Stark );
	-1
} else {
	ROWS;
	Ygritte
};
	-1
} else {
	-TABLE[Hodor][-1 - protect(( 6 ) - COLS,( ( 0.61 + 0.08 ) ),--( protect(Ygritte) ) + foo(0.23,COLS,-1))];
	( destroy(---( -0.42 )) )
}
};
	dog += ( dog )
}
} else {
	mislead(betray(56,Jon,Jon) + -protect(( 1 ),( -580.1279 )),COLS) - ROWS;
	Arya *= 0.08
}
}
}
} else {
	Hodor -= y
};
	if(( -( TABLE[Ygritte][destroy(( Stark ))] ) )){
	Sansa += 32;
	mislead(-1);
	Hodor
}
}
}
}
assert COLS : "Winter is coming"
assert 0.38 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(dog){

}
def protect(Stark,Stark,Sansa){
	if(dog){

}
}
def TABLE[betray(ROWS)][j] {
	if(-( TABLE[-Stark][-TABLE[-480.972][( Sansa )]] )){
	dog *= ( TABLE[TABLE[betray(-Jon * 1)][-( ( 92 ) ) - TABLE[dog / 1 - protect(x,Hodor)][-82]]][COLS] );
	Arya += -( Stark );
	Jon /= --Hodor
} else {
	if(0.18){
	Jon += COLS;
	Stark *= COLS;
	y - -54 - ( ( ( ( Arya ) ) ) )
};
	if(64){
	( foo(x) )
} else {
	( Arya )
}
}
}
assert --( Jon ) : "What do we say to the Lord of Death?"
def TABLE[Sansa][j] {
	mislead(dog) / ---y
}
var Ygritte = bar(COLS,foo(bar(Ygritte),( TABLE[mislead()][( COLS )] ),0.32),--67)
assert protect(Jon) : "Winter is coming"
def TABLE[TABLE[-0.75 - Arya + --540.41 + -Ygritte / 0.76][Arya]][j] {
	if(-0.13 * ROWS + TABLE[-foo(ROWS)][---29] / --ROWS){

}
}
assert 0.91 : "What do we say to the Lord of Death?"
def bar(y,dog){
	if(93){
	if(Stark){

}
} else {
	if(TABLE[betray(destroy(( Ygritte ),rule(( destroy(0.61,Sansa) )) + Arya) * -Arya,dog,-Arya)][--75]){
	y += 0.81;
	ROWS
};
	x -= 0.06 * foo(COLS / -( Arya ))
};
	if(1){
	571
} else {
	y += TABLE[x][( rule() * 0.93 )] - Hodor
};
	-0.3
}
assert COLS + 15 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Stark,Hodor){
	if(betray(Jon) + rule()){
	dog /= Ygritte;
	TABLE[ROWS][-dog * Sansa / COLS]
} else {
	( ( --COLS / betray() ) * Arya / TABLE[-y][bar(( dog ),dog)] );
	if(bar()){
	40
} else {
	Arya -= -( ( Sansa / TABLE[-x + ( -430.8 )][( Ygritte )] ) ) * TABLE[x][( ROWS )] / bar(x,COLS) + mislead(( y ),rule());
	if(( ( -1 ) )){

} else {
	x += dog;
	if(( ----53 * -0.85 * ( betray(betray(0.26)) ) - bar(( -ROWS )) * ROWS )){
	y
};
	ROWS
};
	betray(ROWS,( -0.43 )) * -0.27
};
	Hodor /= ( destroy(TABLE[TABLE[COLS + COLS][dog]][Hodor],foo(bar(0.41))) * ( y ) )
}
}
var dog = ROWS
def TABLE[-COLS * mislead(y,protect(-0.69,0.69),( Sansa ))][k] {
	y += foo();
	Sansa
}
def foo(Stark,dog){
	if(ROWS){
	if(-ROWS + Jon){
	Sansa /= mislead(COLS,-5);
	if(COLS + ( Hodor )){
	Hodor += 88
} else {

};
	Sansa += foo()
}
} else {

}
}
def protect(x,y){
	Hodor += Jon + --x;
	COLS;
	if(( destroy(TABLE[( 700.14 )][Arya - ( ( ( 0.77 ) ) )],-1,( Ygritte ) * protect(Stark,Hodor)) )){
	Ygritte;
	Stark *= Arya;
	x /= rule(Stark,( dog ))
}
}
var y = -Sansa
var Jon = TABLE[-0.86][TABLE[foo(( ROWS ) - -33,-COLS)][-Arya]]
def protect(Stark){
	Hodor -= -0.08;
	if(Sansa + ( COLS ) - ROWS){
	if(-0.05){
	Ygritte += TABLE[Ygritte][ROWS + COLS * rule(-330.2,-foo(TABLE[( ( -0.41 ) )][COLS]))];
	dog
};
	if(mislead(TABLE[Stark][( 1 ) - dog] / protect()) - -( -protect(ROWS,-0.15,-( 0.26 )) )){

} else {
	rule(( betray(mislead(( -( ROWS ) )) + TABLE[( 0.2883 )][1]) ),COLS,TABLE[--0.62][foo()]);
	if(TABLE[-TABLE[0.03][0.1]][( -1 )]){
	Hodor -= TABLE[TABLE[ROWS][Arya / Hodor]][COLS] * Stark;
	y -= Stark;
	Arya += -0.04 + ( 83 )
}
}
}
}
def rule(){
	( y - -COLS ) / 0.6;
	protect() + ( -protect(ROWS,COLS,COLS / ( ( COLS ) )) )
}
def TABLE[COLS][k] {
	dog += 32;
	Ygritte += Hodor;
	if(TABLE[betray(-56 / ( -TABLE[-TABLE[protect(y / protect(1 + Arya,ROWS + ROWS,destroy(( destroy(( ( x ) ),ROWS * -1) ),TABLE[-bar()][protect(-betray(( ( -( ( Stark ) ) ) ),bar(( x ))),betray(Jon))] * y)) / ( ( TABLE[x][--0.45] ) ),dog)][-( -510 ) + dog / rule(dog,ROWS)] * 220.56][( -destroy(-0.93,( -0.01 )) )] ),x / -0.61)][Hodor / mislead(-dog)] + Jon){
	Ygritte -= ROWS;
	( --( -250.379 ) / COLS ) * ROWS + ( --( rule(-dog,630.8 / ---Sansa) ) )
} else {
	x / TABLE[39][foo() * -( ( -Jon ) )];
	y /= TABLE[-1][betray(-12,mislead(0.86) + Stark,-26)] + 0.04
}
}
def TABLE[( -0.5 )][i] {
	if(TABLE[800.1226][-6]){
	( ( Stark ) )
}
}
assert ROWS : "One can not simply parse himself"
assert Stark : "Nothing burns like the cold."
var Sansa = COLS
assert -COLS * Ygritte : "Nothing burns like the cold."
def TABLE[bar(-1)][k] {
	Sansa *= protect(( y ),ROWS) / -1;
	( Hodor ) - -0.65 / ( ( protect(-ROWS) ) * betray(-betray(Hodor,y)) )
}
def TABLE[--dog][j] {

}
def TABLE[ROWS][j] {
	if(Hodor * COLS - -mislead() + -( -Stark - ( betray(( TABLE[bar(-( -160.5 ),( COLS ),COLS)][protect(-1)] )) ) ) / COLS){
	Hodor *= betray(-68,( ( x ) ),ROWS);
	dog -= -Arya + Stark
} else {
	dog /= bar() * Jon;
	Arya += --( ROWS )
}
}
var Hodor = ( TABLE[Ygritte][mislead(COLS)] ) / ROWS
def TABLE[-( x ) / -10.9 * -670.05][i] {
	if(( 60.932 )){
	if(66){
	if(Hodor + -TABLE[COLS][-55]){
	if(Ygritte){
	Sansa /= 72 - destroy() / y;
	x;
	Sansa -= ( dog )
} else {
	-ROWS / protect(Hodor) - Arya / --( -mislead(destroy(),dog + ( ROWS )) ) * -COLS;
	Sansa += TABLE[ROWS - ( TABLE[destroy(0.11,Hodor)][rule(-Ygritte)] )][-COLS + ( bar(bar(-0.2,Jon)) )];
	if(Stark){
	Arya -= foo();
	y;
	rule(COLS,protect(-x))
} else {
	Arya += ( TABLE[TABLE[( COLS )][rule(rule(destroy(( Ygritte ))))]][( rule() )] )
}
};
	Hodor /= ( ( Arya ) - ROWS )
};
	if(8){
	Sansa /= protect(( ( destroy(betray(-( protect(rule(),( protect() ),COLS) ),destroy()),protect(x)) * ( ( -440.845 ) ) - ROWS / protect(-Ygritte,1 - x + 0.94 + ( ( betray(0.07 - protect(),betray()) ) ) / ( -7 ) * ( 86 ) / TABLE[( -1 )][-protect(-580.25)]) * ( -( mislead(COLS,( Ygritte - ( ( foo(rule()) / -0.27 ) ) )) ) ) ) - destroy(TABLE[-( TABLE[bar(foo() + x)][bar(-Jon)] ) / destroy(Arya) * -rule(COLS)][protect(betray(-0.01 + ( mislead(-59) )),COLS,Jon)] + x + -dog,rule()) ),99 - COLS)
}
} else {

}
} else {
	ROWS
};
	--( foo(-ROWS,rule(Hodor)) ) + -Arya
}
var Arya = ( ROWS - rule(( TABLE[280.7165][78] ),( 0.19 ),rule(-COLS)) )
var x = destroy(Arya,rule(( COLS ),-0.06 + -bar(( ( ROWS ) )),( y )))
def destroy(){
	( -86 + mislead(Hodor,-77,( foo() ) / ( TABLE[( ( protect(Ygritte,y,Arya) ) ) + ROWS - -21 + -820.07][ROWS] )) )
}
def TABLE[( 1 )][k] {

}
var x = -87
assert -0.88 - -ROWS / ( protect(-0.34,-0.64) ) / ( ROWS ) + -1 : "What do we say to the Lord of Death?"
def foo(y){
	if(TABLE[-TABLE[Ygritte][-1] / 0.74 * ROWS * 0.63][Jon]){
	if(x){
	if(destroy(0.3)){
	if(ROWS){
	( -bar(COLS,-61) - destroy(Ygritte) + 87 )
} else {
	-90;
	if(( -0.52 * 72 )){
	Jon -= -1;
	Sansa /= destroy()
};
	Arya
};
	-protect() - y
}
} else {
	if(( destroy(-84 * COLS) )){

};
	Ygritte /= --0.24;
	if(mislead(COLS)){
	if(rule(bar(),Jon,17)){
	if(( bar(Ygritte,58,Ygritte) + TABLE[( ( --1 ) )][TABLE[( -( Stark ) )][-( ( COLS ) )]] )){
	if(y){
	-0.46;
	--ROWS - ( -1 )
};
	Jon /= --100.38
}
} else {

};
	-Sansa
}
}
} else {
	if(600){
	if(COLS){
	Sansa /= ( Ygritte );
	if(0.72){
	foo(90);
	Ygritte += -0.22
}
} else {
	( Stark );
	TABLE[-0.21][betray(-89,11 + Sansa)]
}
} else {
	Jon += destroy() + --y;
	( -bar(TABLE[0.91][betray()]) * Ygritte * Ygritte )
};
	Arya += ( -protect(69) );
	if(foo(TABLE[Arya * 4][0.22])){
	-15 - ( 370.75 ) * betray(bar()) * ( -270.1 )
}
}
}
def protect(x){
	x -= TABLE[-0.03][-1] / --1 + rule(0.46,ROWS,TABLE[-0.09][Sansa]) / ( protect(( protect(( 320.277 )) ),( ( -0.3 ) + TABLE[( COLS )][-400.98] / ( ( x ) ) )) )
}
var x = -( ( COLS ) )
def rule(y,Stark){
	if(-0.73){
	if(( COLS )){
	Hodor *= ( ( betray() ) );
	-0.7
} else {
	Jon -= dog
}
} else {

};
	y /= -( -COLS / ( ( Ygritte ) ) * ROWS )
}
def TABLE[-bar(( -( dog ) ))][i] {

}
var x = -29 + dog
assert ROWS : "What do we say to the Lord of Death?"
var Jon = -47 * ( TABLE[TABLE[-COLS][bar(rule(ROWS),TABLE[-betray()][( TABLE[Stark][-mislead(foo(),0.25,0.73)] ) * TABLE[26 / -26][----970.195 - protect(( ( ROWS ) ),( Stark ),dog + ROWS)] - TABLE[-( ROWS / -1 )][ROWS] * rule(ROWS,---380.1 / TABLE[x][-y] * ( 1 ) / --0.23 + -( ( foo(-TABLE[94 + -ROWS][protect(-foo(-11) + -TABLE[Ygritte][( Ygritte / ROWS )] - ( --0.15 ),dog,( bar(( betray(Arya) ) - --Sansa / ROWS * -mislead(0.9,0.79),ROWS / ( rule(( ( -0.69 / COLS + -y ) / 0.41 )) )) ))],TABLE[bar(( -foo() ) + mislead(-ROWS) / ( ( destroy(Arya) ) ),mislead(TABLE[Ygritte][TABLE[( ROWS )][70] + ( ----Arya )]))][Jon]) ) ) + ( -75 + ( Sansa - -ROWS ) + ( 92 ) ) / -x / ( foo(260.44,Jon - -y,( -10.631 ) / foo(destroy(-0.08),540.889)) ) / dog)])]][-0.98 * -1] ) / TABLE[-80.16][-72 / -protect(protect(),( ( -1 ) ) / y)]
def TABLE[0.98 * foo(Stark)][k] {
	destroy(ROWS,--640.4717) - foo(Hodor * ( -( -ROWS ) + Jon ),ROWS);
	if(TABLE[betray(( ROWS ))][Hodor]){
	protect()
} else {
	Sansa += -Jon
};
	y += Stark
}
def TABLE[( bar(mislead(foo(-( Arya ) - x + 0.47,Arya),foo(-0.09))) ) - foo() + x][j] {
	x *= -TABLE[ROWS][protect(-0.68,ROWS)];
	if(-COLS){
	if(0.09 * Hodor){
	Sansa += --Jon;
	if(x){
	if(COLS){
	if(-1){
	if(( --COLS )){
	x -= -( -0.97 )
};
	( TABLE[( -( ROWS ) )][-protect() + TABLE[44 / 78][18 - 0.83 * ( Stark )]] )
} else {
	770.93;
	Sansa -= ( Jon );
	if(-1){
	if(dog){
	ROWS;
	ROWS
} else {
	Hodor /= -0.82 - betray(-( 1 ),( ( ROWS ) ) * ROWS);
	Ygritte
}
}
}
} else {
	dog *= Hodor
};
	if(Sansa / -TABLE[0.05][( ( 0.18 ) * ROWS )]){

};
	if(y){
	if(TABLE[-destroy(TABLE[-COLS * -COLS][ROWS]) * --Ygritte][ROWS]){
	if(Hodor){
	if(foo(( 34 / ( ( TABLE[46 / ROWS][y] ) ) ),0.02)){
	Arya *= Sansa;
	Jon /= -0.13
} else {
	if(-TABLE[TABLE[( ( -0.53 ) )][foo(x,-TABLE[-0.65][1],foo(( ( -( ROWS - -46 ) ) ),-0.61,TABLE[betray(y,dog,0.64) + ( -COLS ) / x][TABLE[-( -ROWS )][mislead(( ( Hodor * TABLE[TABLE[destroy(mislead(Hodor * ----Hodor) - COLS,-75,( -56 ))][Jon]][protect()] ) ) - Jon * Stark - -TABLE[1][TABLE[-420.4486][( 1 + -0.57 ) * ( Sansa )] + ( --0.54 )] - COLS,ROWS)]]) / ROWS)]][TABLE[destroy(Stark,Hodor / protect(ROWS,-840.77,( -foo(Hodor) )),-0.34)][-( Arya )]] / ( TABLE[( 0.33 )][Ygritte] )){
	Stark *= dog;
	if(ROWS){
	x * Stark;
	dog *= Jon
};
	dog -= TABLE[( ( 17 ) )][( -ROWS )] * x + ( -ROWS ) + -betray(TABLE[destroy(( COLS ),TABLE[y][y],TABLE[-1][-0.17 / 760.05])][protect()],--Ygritte - -mislead(( ( COLS ) / -foo(( dog ),x) )))
} else {
	Hodor /= -foo(ROWS,-destroy(y),-0.06);
	Arya -= 0.48
};
	if(94){
	Hodor;
	Hodor /= foo() * -56
}
};
	if(COLS){
	if(-710.3){
	COLS
}
}
};
	if(TABLE[( COLS - 1 )][TABLE[( protect(1) )][COLS / destroy() + protect(TABLE[COLS * TABLE[( Ygritte )][ROWS]][80 + 0.05 + 0.17 + ( betray(-Jon / -430.3,y) )],TABLE[--0.43 - ( COLS )][mislead(y)] + mislead(betray(1,x),---0.64))]]){
	if(x){
	Hodor /= TABLE[protect(COLS,-24) / Jon][18]
} else {
	Stark /= Stark
};
	if(destroy()){
	Ygritte += -83;
	-1 * COLS
};
	if(rule(( TABLE[( -ROWS )][( y + Arya * x ) / -Ygritte] ))){
	-COLS;
	Ygritte *= TABLE[Hodor][COLS]
} else {
	Ygritte /= protect(-24,COLS);
	if(Jon){
	Arya -= --y;
	if(74){

}
}
}
} else {

};
	-0.99
};
	if(bar(-( x ),COLS * -0.64,-1)){

};
	Arya /= x + ( -Sansa )
}
};
	if(ROWS){
	Arya *= ( --1 );
	TABLE[-1 * TABLE[mislead(x / mislead(Arya) - ( ROWS ) + Hodor * COLS - Arya,-ROWS,550.6)][TABLE[-( foo() * x )][-( ( ROWS ) )]]][( ( ( COLS ) ) )];
	if(y){
	--TABLE[-y][-0.12];
	x;
	( ( ROWS ) ) * 0.7
} else {
	Arya += destroy(Stark) - -1
}
} else {

}
};
	( COLS + COLS )
}
}
def TABLE[-0.76][i] {
	190.483 / -55 * COLS - 12;
	destroy(( bar(( y )) ),mislead(),TABLE[x][ROWS] / bar(bar(( -0.57 ))))
}
def protect(Sansa){
	0.18;
	Arya /= destroy(( ( -840.6781 ) ),-1 * Jon / -TABLE[Sansa][( foo(Arya) )] - ( betray() ) * TABLE[x][( -40 )],-( ( ( protect() ) ) ))
}
def betray(y,y){
	y += --Jon * 49
}
def TABLE[Jon][k] {
	if(Ygritte){

} else {
	rule(--TABLE[1][betray(0.91,-y,-3)],-1 + Jon + foo(),( foo(-Arya,( -bar() )) ) + betray());
	protect(61,-0.88);
	Arya
};
	( ( protect() ) ) - COLS;
	-( protect() )
}
var dog = ( TABLE[( -0.32 )][1 / ROWS] )
assert 0.91 / protect() : "Winter is coming"
var Ygritte = Hodor
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[-83][k] {
	TABLE[y][destroy(-34,ROWS)]
}
def protect(Arya){
	if(( rule(-36,--1000.34 / TABLE[TABLE[-TABLE[-betray(-( x )) + TABLE[y][12] - -52 - ( 0.91 )][( ROWS )]][ROWS]][Arya],( Stark )) )){
	Arya
} else {
	if(betray(( TABLE[ROWS][-0.01] ),-bar(x)) - 60.21){
	TABLE[Sansa][foo(TABLE[TABLE[-x][-420.905]][( -140.14 ) - -dog],68)]
} else {
	Sansa -= -0.02 / --Arya
}
}
}
assert -foo(( ( ( -ROWS ) ) )) / destroy(1,foo(( -670.3 ),0.77 * ( ( rule() ) / mislead(TABLE[-Ygritte][-( ROWS )] * 67,COLS / -( x ) / -COLS - -x - bar(( ( -420.078 ) ),-Hodor * COLS / y + -23),( 430.32 )) ))) : "Nothing burns like the cold."
var Jon = mislead(Hodor)
var x = --TABLE[0.47][( protect(betray(COLS,ROWS,ROWS - rule(Hodor)),-Jon * protect(COLS + 91),rule(-0.91)) )] * x - TABLE[bar(-190.344,TABLE[( -TABLE[COLS * ( TABLE[-Jon][COLS] )][( 0.91 )] )][-TABLE[mislead(betray(0.44,( TABLE[--9 * -34][y] ),bar(Hodor)) / x)][mislead(-Jon / --0.84 + -( mislead() ),-Hodor) + -44]] / ---ROWS)][Ygritte - mislead(Stark,350.467,--( -( 1 + mislead(( Hodor ),Arya) / foo(1,foo()) ) ))]
def foo(Jon,dog,Sansa){
	dog -= TABLE[TABLE[Stark][foo()]][x]
}
def TABLE[COLS][j] {

}
var Ygritte = dog
assert destroy(betray(),betray(27,dog,-430.9631),( Sansa )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-TABLE[foo() * -1 - ROWS][destroy(TABLE[-Arya][Sansa])]][j] {
	if(( x ) / dog){

} else {
	betray(TABLE[foo()][--5],( protect(rule()) + dog ) / -ROWS - Ygritte)
};
	Jon *= -ROWS
}
def mislead(){
	( -Ygritte ) + -31;
	if(Hodor - ( ( -( 160.774 ) + 1 ) )){
	dog;
	Arya *= 0.68 + COLS;
	if(-dog){
	if(betray(-94,Jon,Sansa)){
	Hodor /= Stark
} else {
	Ygritte /= Ygritte
}
} else {
	if(-0.54){
	if(TABLE[ROWS - dog][COLS]){

};
	if(bar(( Jon / 1 ) - y,( -Ygritte ),y)){

} else {
	if(ROWS){

} else {
	Arya /= ( -( 72 ) );
	x *= protect()
};
	-foo(--( destroy(protect(-0.88,490.81,Hodor),-COLS) ) - ( -COLS * Ygritte ) * COLS - 0.97);
	y
};
	if(-0.81){

} else {
	TABLE[x][-0.18 - 90]
}
} else {
	x
}
}
};
	Stark -= ROWS
}
def protect(Jon){
	Sansa -= COLS
}
def protect(x){
	dog *= -95;
	dog += x
}
def protect(Jon,Arya){
	dog -= 0.08
}
var dog = ( COLS ) / ( Ygritte ) - --97
var Sansa = COLS
assert ( foo(Sansa - ( -1 ),protect(Stark)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[200.3113][k] {

}
var Sansa = foo(( Sansa ),( COLS / destroy(TABLE[-ROWS + TABLE[-TABLE[ROWS - foo(ROWS)][-COLS] / foo()][mislead()]][-protect()],--Arya + foo(Jon)) ))
def destroy(){

}
def TABLE[-TABLE[( Ygritte ) - ( -0.1 - ( Arya ) )][--46 / ( x )]][k] {
	Stark /= COLS
}
def betray(){
	if(TABLE[-Jon + Sansa][---x]){
	if(( COLS ) / mislead(COLS,-dog * Hodor / COLS / -( -1 ),TABLE[rule(59,( -98 - foo(87) )) / COLS * -22][-( COLS ) / mislead(TABLE[( COLS )][--21]) * -ROWS])){
	( dog )
}
};
	if(foo()){
	if(0.23){

};
	dog *= -betray(( -TABLE[destroy(-dog,30,-0.44)][( 0.13 ) / -0.15 + -95] ),TABLE[protect(bar(( ( 11 ) )),( ( mislead(7 + ( 0.88 - 47 / Sansa )) ) ),-0.5)][Ygritte] - Stark)
} else {
	ROWS;
	-y;
	( ( betray(rule(TABLE[-( TABLE[ROWS][ROWS] )][TABLE[--( 41 )][betray(destroy(COLS) * -mislead() / rule(y,1),-830.84)]],( -1 - bar() ) - 68 * ( 540.24 ),1),Stark) ) )
}
}
var x = ( ( TABLE[Stark][( ROWS )] ) ) - protect(( Sansa ),-Hodor * x) * betray(-30,Jon)
assert Jon : "Winter is coming"
def TABLE[-foo(foo(),bar(COLS))][j] {
	if(-1 + ( -85 )){
	if(COLS){
	TABLE[ROWS][390.164]
}
} else {
	Ygritte += COLS / TABLE[protect(( ROWS )) / TABLE[COLS][ROWS]][mislead(rule(bar(Arya + x),( -0.03 ) - Stark,Arya))] * Ygritte + -Sansa;
	x *= ( --( -COLS * y + -0.71 ) - Sansa );
	x += betray()
};
	if(( 57 ) / -1 - TABLE[( ( COLS ) )][-1] / rule(Sansa / ( -ROWS ) / destroy(28) / ( ---ROWS ))){
	Sansa
} else {
	Ygritte * 1
}
}
def TABLE[( betray(--150.6,bar(86)) ) - ( Arya )][j] {
	( ( 0.14 - -0.41 ) );
	if(betray(COLS,27,-( betray(protect(TABLE[bar()][ROWS] + ROWS,( -( destroy(( -COLS ),betray(Hodor,( rule() / rule(-3,---0.3 + ---100.8 / -( -87 * Stark ) + ( mislead() ),bar(protect(ROWS,Jon),Hodor)) ))) ) - Ygritte )) / rule()) ))){
	Jon += mislead(dog,ROWS)
} else {
	Ygritte *= ( -0.93 )
}
}
def TABLE[--betray() / Hodor - -Jon][j] {
	-COLS
}
assert -COLS - Jon : "Winter is coming"
assert -( ( betray(-59,( ROWS )) ) ) / Sansa : "What do we say to the Lord of Death?"
def betray(Hodor){
	-( Sansa );
	TABLE[0.35][ROWS]
}
var Ygritte = 380.4
assert 1 : "Winter is coming"
def TABLE[-360.49][k] {
	-0.12
}
def foo(){
	-430.345 / destroy(x * ( Ygritte ),-( COLS ) - -98 - y / TABLE[destroy(Arya,TABLE[protect(TABLE[mislead(Jon + betray() - destroy(15 * COLS + -320.3,destroy(0.97,1,-8)))][0.32 / protect(protect(TABLE[COLS + -( -0.99 * 0.47 )][Stark]),Stark / ( protect() ))],( TABLE[ROWS][37] ))][destroy(-590.36 + -destroy(( -destroy(-( COLS ) * Ygritte - ----betray() + ROWS,-TABLE[( TABLE[( -58 )][( 0.88 )] ) - ROWS - TABLE[Hodor][rule(Hodor * foo(-24),-Ygritte)]][COLS] * protect(-610.198 / ( ( -COLS ) - ROWS + Stark ) + bar(-1 / ( ROWS )),foo(-590.28,( rule() )))) ),COLS) * 0.69,-betray(-x / -230.385 / -destroy(-33,TABLE[----ROWS + rule(Hodor,COLS)][COLS / ( dog )]),mislead(Ygritte,( Stark )) / ( ( -0.84 ) )))])][ROWS] + destroy(foo(Ygritte,Sansa - ROWS),( COLS ),( dog )));
	Stark /= ( Jon ) / -destroy(betray(0.41),-ROWS,( COLS ));
	TABLE[( ( destroy(TABLE[TABLE[( Jon ) * 870.549 / Sansa * foo(Ygritte,destroy(( TABLE[-ROWS / dog][-rule(-( Stark - Sansa * -x ) - -0.8,dog)] ) / ( COLS ) + ( -( -( protect() ) ) - -49 ) / TABLE[destroy(ROWS) / ( -5 )][ROWS])) - -COLS][rule(Sansa,Hodor)]][TABLE[Arya][y]] / 560.087) ) )][( foo(x,ROWS,( Arya )) - x )] - ( -Jon )
}
def destroy(){
	if(Jon){
	if(0.17 / protect(--0.24 / ( rule(( 1 + TABLE[betray(y / ( -TABLE[( ROWS )][-1] ),rule()) - dog][ROWS] ),ROWS * dog) ) * Jon,Arya)){
	ROWS
} else {
	Stark /= bar(( -55 ),---1) + 1;
	if(0.99){
	if(Stark * --( betray(0.43) )){
	if(mislead(Jon,( --TABLE[-11 * Jon][TABLE[( -Hodor )][-240.34]] ),betray(-y / Jon,-18,-27))){
	if(COLS){
	-( ( -Ygritte * TABLE[protect(bar(-170.744),betray(mislead(( ( 1 ) )),0.88))][Ygritte] ) )
}
} else {
	if(Ygritte){
	if(Arya){
	dog /= bar(rule(Jon),-betray(TABLE[--680.986][Hodor] * y * ( ( mislead(dog + 0.46 + 18,( ( ( ( -Stark ) ) ) )) ) )));
	dog += 0.77
} else {

};
	Hodor *= ( Sansa )
} else {
	if(Ygritte){
	TABLE[-( -dog * Arya * y )][COLS - ( mislead() )] * foo()
}
}
};
	if(betray(ROWS,2)){
	TABLE[mislead(ROWS + -TABLE[COLS][-Arya * rule(foo(destroy(( COLS ) - destroy(rule(Jon),( -COLS )),--0.99),( -mislead(( TABLE[-( 1 )][0.74] ),-640.05) ),COLS) * 1)])][Stark];
	if(-0.92){
	Jon *= mislead(-870.3689)
};
	x -= betray(60.1,-1)
} else {
	if(bar()){
	if(mislead(rule(--ROWS))){
	if(( Sansa * 290.07 + 23 )){

}
}
}
}
}
} else {
	x /= ( ( -ROWS ) )
};
	if(( Stark )){

} else {
	if(66){
	if(( -destroy(betray(67)) )){
	y -= ( ROWS )
};
	if(foo(ROWS + ( COLS - ( 720 ) ))){
	if(-TABLE[-620.84][( COLS )]){
	-540.91 / destroy(97,Arya);
	if(---protect() * ( ROWS )){
	Sansa
};
	Jon /= ( mislead(--betray(Stark,bar(( Sansa ))) - TABLE[( ROWS ) / COLS + rule(-( ( -290.913 ) ),TABLE[( -46 )][dog])][rule(-COLS,( ( ROWS ) ),rule(rule(ROWS,foo(-( -x ),ROWS,Sansa),-13),protect(protect(-COLS),-76)))] - Jon * ( -TABLE[Stark + mislead(COLS,740.182) + -770.02][( bar(-0.36) ) - bar(( -bar(( mislead(protect(-1,-protect(ROWS))) ),ROWS * bar(),Jon) ),ROWS)] ) + Hodor * ( COLS ),--( ( ( ( COLS ) ) ) ) - ( protect(Ygritte) + betray(x - COLS) - ( -ROWS ) ),Stark / -( Sansa )) )
} else {

}
}
};
	( COLS )
}
};
	if(( Jon / protect(1,ROWS) )){
	if(ROWS){
	Ygritte -= betray(foo())
};
	( Stark )
}
}
}
assert -protect() : "What do we say to the Lord of Death?"
assert -( -24 ) * -protect(y) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ( betray(Hodor) )
assert -( ( ( ( Hodor ) ) - TABLE[mislead(( 1 ) + ( ( rule(( 150.9 )) ) + -y ) / -COLS)][TABLE[ROWS][x]] + 0.48 + -( -Arya ) ) ) : "What do we say to the Lord of Death?"
def TABLE[1][i] {
	TABLE[dog][ROWS]
}
def foo(Sansa,dog){
	Arya += -bar(( -4 ));
	Jon *= -Sansa;
	if(protect(-( Jon ),Arya,( bar(( ROWS ) / -protect(-600.502,Stark,bar(COLS,Arya) + ( 0.9 ) + --520.035)) ))){
	if(betray(( 4 ),-( -betray(bar(-ROWS,ROWS - -Jon + -74,( y )),( bar(0.91,ROWS) ) * destroy(Arya) * mislead() - y) ))){
	if(0.17){
	if(COLS){

};
	if(1){
	TABLE[50][foo()];
	COLS;
	-22
}
} else {

};
	if(COLS / ( 1 * ROWS )){
	Hodor -= COLS
};
	y /= COLS
} else {
	if(( ( -99 ) )){
	TABLE[-30][y]
} else {
	if(Sansa){
	if(( COLS )){

};
	( ( ( COLS ) ) - -31 )
} else {
	Hodor *= TABLE[-88][ROWS * ( ( Hodor ) )] + bar(COLS,--ROWS - TABLE[( dog )][850.817],rule(-( ROWS )))
}
};
	44
};
	if(-0.83){
	( -TABLE[protect(bar(betray(rule(betray(620.39,rule(---y / mislead(( Stark )) * TABLE[TABLE[Jon][( 320.4 )]][-bar(TABLE[-destroy(TABLE[( 0.1 )][80],bar(COLS))][TABLE[-0.45][COLS]])],dog,( rule(Sansa,--foo(( 0.85 + -Sansa ),Ygritte,-1)) ))) - ( -ROWS ),-0.28),foo(Stark)),-0.45 / -protect(Arya)) + 0.61,0.26,--Stark)][( ( ( 1 ) ) * protect(destroy(),-protect(( -x ))) )] );
	rule(0.7)
}
} else {
	if(1){
	x += -48;
	mislead(rule(-560.856,--85),bar())
} else {
	Jon += 1
}
}
}
def mislead(y,Jon){
	if(( Arya + protect(protect(-destroy(dog),Ygritte,--( -44 ))) )){
	if(-TABLE[x][( -x ) / ( ( 1 ) )]){
	y;
	if(Arya - -0.52 / ( -x - -69 / TABLE[protect(---ROWS,Stark + -destroy(TABLE[( Stark )][-89],--protect() - ROWS / foo(y / -19,-( Hodor )) * protect()))][protect(--0.73)] )){
	if(( COLS )){

};
	if(( ( -TABLE[mislead(640.42)][x] ) )){
	if(protect(rule(mislead(bar(),( y ))))){
	Hodor *= COLS
} else {

};
	Ygritte -= ( x - protect(( Jon + -TABLE[-TABLE[--0.32][23]][41 - ( ( -dog ) )] ),-Arya) + dog )
} else {
	-1
}
} else {
	Ygritte *= destroy(-1,destroy(-Ygritte,COLS),Sansa);
	-( 0.36 )
}
}
};
	-mislead(y,foo(),1)
}
var Hodor = ( -41 )
def mislead(Arya,Stark){
	Arya /= ( ROWS + ( --dog / ( -93 ) * 0.82 ) * -74 );
	y -= -( -0.43 )
}
def TABLE[--4][j] {
	( 820.2 )
}
var Sansa = COLS
def TABLE[x][j] {
	y /= 0.1;
	if(( COLS )){
	Ygritte += ( ( Hodor ) )
};
	y /= 70 / -74
}
def TABLE[Ygritte][k] {
	y /= protect(TABLE[-Ygritte][---16],-100) + ( COLS );
	--85 + mislead() / 0.98 - --72
}
def TABLE[Arya][j] {
	if(ROWS){

};
	if(0.95){
	if(x){
	if(y){
	y += rule(Jon) + -( -mislead(---0.46,-Sansa) )
} else {
	Jon *= --98;
	if(foo(y * ( TABLE[62 + Hodor][Sansa] ))){
	if(--COLS - protect(Stark,COLS) / ( --35 ) - 39){
	if(--( -50 )){
	if(( foo() )){
	Jon += ( Ygritte );
	( ( ROWS + mislead(Jon,mislead(-0.4) * foo(-TABLE[COLS][Jon])) ) )
} else {
	if(-Hodor){

};
	( -( ROWS ) );
	dog
};
	ROWS
}
};
	Arya -= Hodor
} else {

}
};
	Hodor += -( rule(TABLE[-Jon * betray(x,Ygritte)][betray(Jon,rule(--TABLE[ROWS][( x )]))],( ( bar(-0.08,Ygritte) ) ),ROWS) )
} else {
	Hodor /= COLS
};
	if(0.14){
	if(TABLE[0.75 - -COLS][Arya]){
	x
}
}
} else {
	( Stark );
	if(Arya){
	if(Hodor){
	dog -= ( ROWS );
	mislead(rule(COLS / ( -Sansa + ( ( Ygritte ) ) )),TABLE[TABLE[TABLE[1][-1] * rule(bar(),( 1 ))][( ( ROWS ) )]][Stark / -190.467]) + ( 96 - -mislead(Arya,destroy(Arya,( -0.05 ) * y)) );
	TABLE[-rule(mislead())][( TABLE[( -TABLE[---( 65 - mislead(dog) * bar() + 41 ) + x][protect(400.9,protect())] / y )][-Stark - TABLE[( -TABLE[destroy()][--destroy(-Sansa,ROWS - ROWS * Stark) + foo(-850.553 - Stark) + COLS] )][COLS] * ( ( Arya ) ) / ( destroy(protect(Arya,Ygritte,mislead(bar(foo(-foo(-0.63))) * ( COLS ) * ( -Stark + -0.56 ))),--dog,bar(COLS,( mislead(Hodor) ))) )] )] + bar(y)
}
} else {
	Sansa;
	if(-TABLE[1][-Hodor] * betray(( 10.803 ))){
	TABLE[x][Stark]
} else {
	if(-TABLE[-840.29 * ( ROWS )][betray(-Hodor + bar())]){

} else {
	destroy(-ROWS + ( -protect() ),Arya) - -1;
	-betray();
	if(COLS){

}
}
};
	-( ( ( ROWS ) / 4 ) )
}
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[( x )][i] {
	betray(( ( Stark * TABLE[( -( Arya ) )][Hodor] ) ),TABLE[-5][( --760.34 )] * Stark,-60);
	if(dog){
	Jon /= Ygritte;
	if(Arya){
	0.08 - rule(( -16 - Arya ),-mislead(71 - foo(39,0.06),TABLE[( 0.71 / ---rule(-26 * -0.68,Arya) - Jon * Hodor )][bar(-COLS,COLS / -0.54,ROWS)]) / --protect(( Stark )) - betray(ROWS),TABLE[Arya][-58])
} else {
	Ygritte += y * ROWS;
	Arya += Arya
}
} else {
	if(-ROWS - bar(-Hodor) - ( Jon )){
	-bar();
	Jon *= foo(destroy(TABLE[destroy(-mislead() + ( Hodor )) + ( 12 )][Hodor]),Hodor);
	37
};
	protect(-( ( Hodor ) - ( Sansa ) ),( Sansa ));
	( 99 ) * -0.17
};
	COLS
}
def TABLE[-( Stark * y )][i] {
	if(-TABLE[0.56][( ( -100 ) )]){
	ROWS
} else {
	if(( -0.54 ) / foo(86,( 770.615 ) + ( -0.75 ))){
	Ygritte /= ROWS
} else {
	if(( 1 )){
	if(-ROWS){
	-foo(dog,0.04 - y,--410.82);
	if(-( -0.46 )){
	ROWS
} else {
	90;
	dog += ( ROWS - dog )
}
};
	if(TABLE[-0.17][-0.59] * bar(( -TABLE[( Hodor )][0.01] ),COLS)){
	if(x){
	if(destroy(destroy(TABLE[ROWS][x],ROWS),Stark,-COLS)){
	if(-0.61){
	y += -( -Stark )
} else {
	if(protect(ROWS)){

} else {
	if(Arya){
	( protect() )
} else {
	if(--y / Sansa){
	Hodor /= TABLE[destroy()][Ygritte]
} else {

};
	Hodor /= -ROWS / ( -ROWS )
}
}
};
	Jon += foo(96)
} else {
	Hodor *= foo(( Stark )) / ROWS;
	1;
	( x )
};
	( rule(Arya,destroy(( TABLE[( -370.254 * -59 + ( destroy(-69,-0.74,-COLS) ) )][-( x / protect() ) / dog * ROWS] ) * 7 * ( 68 ) + 6 + 0.89 - ROWS,TABLE[-1][ROWS / ( y )])) );
	foo()
} else {
	( COLS ) * ( ( Sansa * Ygritte ) * destroy(--rule(( ROWS ) / Sansa,x,--Ygritte + Stark),Ygritte) * -TABLE[Stark][y] ) + -1;
	Arya += ( ( destroy(COLS) + -Sansa ) );
	Sansa *= -1
}
} else {
	if(80){
	( ( ( -0.33 ) ) );
	COLS - ( ( Arya ) );
	Arya /= -( -COLS )
}
}
};
	-0.88
};
	if(dog){
	x *= ( ROWS );
	Arya *= -COLS + mislead(-1,destroy(ROWS,( 34 )));
	if(ROWS){
	ROWS;
	-0.29
}
}
};
	if(mislead(-ROWS,-destroy(-( 0.95 ) + COLS / Stark,44,y)) - dog){
	Arya += -14
} else {
	if(x){

};
	dog -= TABLE[Hodor][Arya] * ROWS;
	-( 800.48 )
};
	1
}
def TABLE[destroy(( -protect(( COLS )) ) * TABLE[39][bar(-19,TABLE[0][Sansa]) - 37] * COLS) * y][k] {
	Arya /= ( TABLE[( foo(-1,( y )) )][( 1 + y )] )
}
def TABLE[Hodor][i] {
	if(destroy(( Stark ),( -0.38 ) * TABLE[ROWS][1] / ROWS)){
	ROWS
};
	Jon *= Hodor
}
def TABLE[ROWS][k] {
	y += y
}
def betray(Hodor,Jon){
	if(130.873){
	if(foo(ROWS,ROWS)){
	if(y){
	Ygritte += 0.5
} else {
	( ---( mislead(-Sansa - y) ) - --1 + TABLE[COLS + 66][0.58 + COLS] )
}
};
	Ygritte += protect()
} else {
	if(-foo(Jon,Jon * ROWS,foo(bar(),protect(ROWS)))){
	y -= --0.72 - Jon
}
};
	TABLE[-COLS][-x];
	Arya *= ( ( mislead(( ( -0.81 ) )) ) )
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[-mislead(dog)][i] {
	Sansa -= ( rule(( -( 45 ) )) * --62 )
}
assert Sansa : "Nothing burns like the cold."
def destroy(x){
	if(-1 + -( 290.571 )){
	if(( --0.83 * -71 )){
	Sansa * -Arya * Jon;
	if(COLS){
	bar(-( -( ( mislead(( -0.45 ),foo()) ) * -x ) ),ROWS)
} else {

}
} else {

};
	Jon -= Sansa
}
}
def betray(dog,Arya){

}
var Ygritte = dog
var dog = COLS
var y = COLS
def betray(x,y){
	if(x){

} else {
	-0.48
}
}
def TABLE[Hodor][j] {
	Arya += y;
	if(( x )){
	Stark -= ( -0.29 )
}
}
def bar(y){
	Stark /= betray(rule(rule(( COLS )),( ROWS )));
	if(COLS){
	Sansa += bar(-0.31);
	COLS
}
}
assert Stark : "Nothing burns like the cold."
def TABLE[-0.33][j] {
	if(--mislead(betray(rule(( -( -750.99 - -COLS + Hodor ) ))))){
	if(-940.48){
	Ygritte;
	x -= rule(COLS,( --59 ));
	if(rule(foo(-37,Stark),-TABLE[--360.957][-0.27])){
	-0.33;
	Jon *= ( TABLE[COLS][TABLE[Arya][( 10 )] - Arya] )
} else {
	Arya -= --foo(-ROWS)
}
};
	-50
} else {
	ROWS;
	-foo(TABLE[-protect(rule(),y) * -mislead()][-x]);
	if(( -0.04 )){
	if(TABLE[82][TABLE[Stark][-ROWS] * protect(Stark,foo(--0.22,Sansa),-( ( TABLE[-x * rule(790.6,-ROWS * Jon,y) / protect(-17)][Sansa - ( --1 ) + ( ( mislead(Sansa) ) )] ) * protect(( mislead(Sansa,foo(-71)) - Hodor - -y ),Sansa) ))]){
	Jon += -700.02;
	if(COLS){
	Stark *= Ygritte;
	y /= -2;
	if(Sansa){
	Stark -= -ROWS
} else {
	dog /= -72;
	Hodor *= Hodor * ROWS
}
};
	dog -= Jon
}
}
};
	770.2
}
var Ygritte = ( ( TABLE[( ( ROWS ) )][betray(( -( ( 59 ) ) / destroy(dog,TABLE[-0.99][foo(Ygritte,bar(bar(Jon),( Ygritte )),1)],-mislead(-42) - ROWS / protect(y,destroy(ROWS,( ROWS ))) + bar(--Jon - dog) - Stark) / y + bar(-rule(),TABLE[-1][Ygritte] * Stark,-ROWS) + 0.82 ) / -89,betray(( ( ( destroy(--98) ) ) ),--TABLE[destroy(( ---23 - -60 ),destroy(),-TABLE[-380.54][450.25])][0.28]))] ) )
def TABLE[betray(-1,TABLE[ROWS][bar(TABLE[-bar(foo(-Jon,-0.82)) - ( Arya + ROWS )][60.9369],betray(foo(y,-0.75),Ygritte))])][i] {
	if(rule(foo(ROWS))){
	Stark;
	if(---Arya * 52){
	ROWS;
	Ygritte *= --foo(Hodor)
}
} else {

};
	Hodor += TABLE[y][y];
	if(Stark){
	( rule(-ROWS) );
	Hodor *= 66;
	y += -980.19
} else {
	( betray(-( rule() )) * Ygritte );
	Stark *= ROWS / ( dog );
	Jon /= Jon
}
}
assert 1 : "Nothing burns like the cold."
def protect(y,Jon){
	if(ROWS){
	if(( rule(-( ( -Ygritte ) ) + betray(1,-x) * ( protect(( -960.696 * -x )) ) - ( foo(x,( destroy(-0.96) ) * Hodor / -0.79) ) + ( mislead(rule(protect()) - -( COLS ) - ROWS,( Jon ) / -betray(1)) ) * -33) )){
	if(51){
	Jon -= COLS;
	39
}
};
	if(foo(-TABLE[---( -660.259 )][y] - destroy(( rule(protect(),Jon) )) - Sansa,protect(0.43,34,( protect(( Stark ),Sansa / protect() + COLS,Ygritte) / -51 * destroy(TABLE[( ( ( x - TABLE[COLS][TABLE[Stark][-( ( TABLE[( -61 )][ROWS] ) )]] ) - 0.62 ) - x )][-1],430.9,Stark) )))){
	if(Stark){
	protect();
	if(( bar(( betray() ),protect(( -Hodor ),1,Stark),rule(---80,destroy(0.95))) )){
	0.49;
	mislead(Arya)
} else {

};
	Sansa -= -26 / COLS - --TABLE[protect()][( TABLE[( ( Jon ) )][Arya] )] + Hodor
} else {
	mislead(25,-( TABLE[-45][Stark] ));
	if(( -rule() + ROWS )){
	if(TABLE[-protect(-Hodor,( Arya ))][Jon + -foo(Jon)]){
	ROWS
}
} else {
	430.74
}
};
	--990.0856
};
	if(Jon){
	Ygritte += 38;
	-( bar(( Ygritte )) );
	( ( -( Sansa - -( ROWS ) ) * ( --1 / COLS ) / -0.05 / COLS ) )
} else {
	-19
}
};
	-COLS
}
var y = protect(-5 * -Arya - mislead(-( foo(( ( rule(5) ) )) )))
def TABLE[( COLS )][k] {

}
assert -910.318 : "Fear cuts deeper than swords."
assert Jon : "What do we say to the Lord of Death?"
var Stark = TABLE[-betray(TABLE[betray()][ROWS] * TABLE[-destroy(x)][destroy()],-ROWS,mislead())][-rule() * Stark] * ( -1 * dog )
var Arya = betray(( -foo() ),betray(Jon,-98,TABLE[( Stark ) / y][ROWS]),330.8)
assert 690.04 : "One can not simply parse himself"
def TABLE[ROWS][k] {
	Sansa += -0.8
}
var Ygritte = Stark * ( protect(mislead(( 16 ),dog,-dog)) )
var Sansa = 51
def foo(){
	Arya -= -0.34;
	if(Sansa){
	protect(( 0.95 ));
	if(( ROWS )){
	Hodor *= Stark;
	if(bar(0.21,-490.0932,( protect(-810.2143) ))){
	-ROWS - ( ---y )
}
};
	-dog
} else {
	( -bar(Ygritte,-21 + mislead(bar())) )
}
}
var y = x
def TABLE[( ( ( mislead(Hodor,TABLE[-protect(-8,bar(-mislead(protect(( TABLE[-65][ROWS] )))))][TABLE[Stark][( ( 490.4 ) ) * Sansa]],foo(-ROWS,--30.1,31)) ) ) )][i] {
	if(-ROWS - betray(foo(-betray(Arya)),( --COLS ),1) / --40.3 + foo(Hodor,COLS)){
	Jon -= destroy();
	-y
};
	if(ROWS){
	Jon;
	-TABLE[Jon][ROWS]
} else {
	if(Stark){
	if(ROWS){
	x /= TABLE[-0.78][0.14];
	dog -= Sansa
} else {
	if(betray(COLS)){
	-COLS
} else {
	x *= mislead(0.78,betray(( betray() ) + ( dog - TABLE[( ( --COLS ) )][-ROWS] )),56)
}
}
} else {
	Ygritte * ( Jon - ( ( COLS ) ) ) * ( 71 )
};
	if(COLS){
	if(betray(-rule(foo(-25)),betray(ROWS,COLS,foo(-410.969,dog * Arya)))){
	Sansa *= ROWS;
	COLS
} else {
	rule(Jon);
	if(TABLE[-betray()][-270.7704]){
	-mislead(-28) / -( foo() );
	x -= Ygritte - ( ---0.34 / ( ( foo(Arya,( TABLE[( Stark )][1] )) * -44 ) * mislead() ) * TABLE[-foo(0.84,-0.19) * rule(protect(Stark,ROWS))][Ygritte] / mislead(ROWS,dog / ( -28 ),TABLE[( Sansa )][( foo(79 - -( ROWS )) )]) / x / Sansa )
} else {
	Ygritte /= TABLE[-Ygritte][-( ( -1 ) )] / ( ROWS ) * ( ( x ) );
	-0.22
}
};
	-TABLE[-bar() * TABLE[destroy(-ROWS,-COLS,rule())][( destroy(COLS,TABLE[( -1 )][( -0.27 )]) )]][-1 / ( dog ) + --( Ygritte ) + 0.91 + -( dog ) * -protect(x) - Arya]
} else {
	y *= betray();
	protect(-1,-rule(y / ( Sansa ) + foo(mislead())) * ( rule(47,bar(-y,-940.718 - ROWS - -80 * bar(ROWS,-Stark,0.45),betray(ROWS,---17)) * Jon) ))
}
}
}
assert bar() : "Winter is coming"
def mislead(Ygritte){
	x;
	--betray(TABLE[-0.41][0.92]) * -67 * ( Arya );
	Jon *= ( rule(x) )
}
assert 90 : "One can not simply parse himself"
def mislead(Jon){
	Ygritte /= -rule(foo(1,( ---0.19 / mislead(COLS) )),TABLE[rule(x / ROWS,y - x)][( -( ( mislead(-TABLE[Sansa][( --1 )],-0.07,50) ) ) )],Hodor) - 16 + -COLS;
	Stark *= ( ( 63 ) ) / ( Stark / Stark )
}
var dog = protect(-( protect() ) * ( 13 ),x)
assert ( ROWS ) : "Winter is coming"
var Arya = ( Sansa )
def destroy(){
	-Hodor;
	if(dog){
	Sansa -= Hodor;
	---72 + ( -970.752 )
} else {
	-( x ) / -TABLE[destroy(-37,( Ygritte ))][dog / protect(protect(TABLE[-Jon][-99 / Ygritte],-bar(( TABLE[Stark][Ygritte / COLS] ),-1)),-0.94,1)]
};
	-rule()
}
assert ( ( destroy(bar(( -x ),Arya)) ) ) : "Nothing burns like the cold."
var x = -Stark * x
def protect(x){
	foo(ROWS / -95,TABLE[0.25 * TABLE[19][Stark]][( foo(x,destroy(),1 + betray()) + TABLE[TABLE[Sansa][ROWS - foo(46)]][TABLE[( ROWS )][-38]] )] * ( rule() )) - TABLE[--( TABLE[Stark][-COLS] * destroy(Jon) - ROWS ) * COLS / ROWS][55];
	if(ROWS + bar(ROWS,--( ( -betray(( TABLE[Ygritte][TABLE[( -y )][( ( -y ) )]] ),rule(),( ( ( y ) ) ) - ( ( mislead() ) ) * ( ( -19 ) )) ) * ( -( TABLE[0.1][COLS] ) ) ) / ROWS / ( -Hodor ) / 1 * 0.85) - Ygritte){
	ROWS
} else {
	dog /= --57
}
}
assert protect(0.85,betray(Jon,( Sansa + ROWS ),-0.79) * ( COLS ),betray(-( Stark ),( Arya ),betray(Ygritte * -( y ),destroy(TABLE[Arya][-0.16 / Hodor / x / ( ( -( ( ( rule(TABLE[--0.75][foo(-85,--0.64 - COLS + ( -59 ))],-76,( mislead(bar(-ROWS + -ROWS / ( Ygritte ) * 1 * ( mislead(Jon) ))) )) ) ) / ROWS ) ) - ( ( TABLE[foo()][( TABLE[Jon - ( Stark )][-rule()] ) + -( -COLS )] ) ) )])))) : "One can not simply parse himself"
var Ygritte = protect(mislead()) + Jon - ( ( -( ( -210.599 ) ) ) ) / -Jon + COLS
var Hodor = y
assert -( TABLE[COLS][-( COLS )] ) : "What do we say to the Lord of Death?"
def mislead(dog,Ygritte){
	-0.82
}
def foo(Arya,Hodor){
	Hodor += COLS;
	Stark /= y
}
def TABLE[Hodor + --ROWS][k] {
	Ygritte += 1;
	if(( -Stark ) - ROWS - Hodor){
	dog /= ROWS;
	if(-8){
	TABLE[( ( x ) / rule(COLS,( ( 300.8 ) )) * -foo(destroy(( protect() )),( ROWS ),ROWS) )][rule(-COLS) / -0.83 - -0.79];
	Jon += ( ROWS - 0.8 )
} else {
	( mislead(1) )
};
	if(rule(-1)){
	-0.62 - betray(( COLS ),( ( -COLS ) / 830.0151 + betray(--ROWS - 0.57,ROWS,foo(( Arya )) + Ygritte) ))
} else {
	x *= TABLE[destroy() * ROWS][( ( ( ( 94 / -0.18 ) ) ) ) * destroy(-Ygritte / TABLE[( -foo(Stark) ) - ( ( -rule(COLS + TABLE[( TABLE[( COLS )][y] ) - -360.582 - -76][( Hodor ) + Arya],-Stark) ) ) * destroy(-86 * Hodor)][TABLE[-0.93 - ( dog / -35 )][ROWS]],bar(x),Jon)]
}
} else {
	if(( ( --0.09 + ROWS ) )){
	if(-betray(ROWS,1 / y)){
	if(-destroy(protect(( ( COLS - dog ) ),0.18 / ( Jon + 0.59 )),y * COLS / x)){
	COLS
}
}
} else {
	( dog );
	if(0.58){
	if(mislead()){
	Hodor /= 1;
	y;
	COLS
} else {
	( Ygritte );
	COLS + COLS * --( COLS ) + x * ROWS + 68;
	Sansa *= -Ygritte
}
} else {
	if(mislead(COLS,( --( COLS ) ))){
	( -1 / ( COLS ) );
	Hodor -= -1
};
	--820.1
}
}
}
}
def TABLE[protect(-320.9224,( Ygritte ) * ( 1 - -dog ))][j] {

}
def rule(Jon){
	y -= betray();
	760.6009
}
def TABLE[( dog )][k] {
	Ygritte;
	( 180.4 );
	if(-98){
	if(betray(y / -( ( bar(rule()) ) ) / destroy(protect(dog,-1) / bar(TABLE[Arya][TABLE[45][Hodor - ROWS]],Sansa),1),( ( Stark ) ) - TABLE[Stark + -Ygritte][-Stark])){
	betray(x,-( COLS )) / x
} else {
	Ygritte += -( -rule(Sansa,ROWS) * COLS + TABLE[bar(( betray(-foo(TABLE[-( TABLE[---foo(destroy(x,-y * COLS,x),ROWS / -0.34,( destroy(Arya,betray(1)) / TABLE[98][16] - ROWS - ( ROWS ) * -700.066 + bar(ROWS) ))][rule(betray(--destroy()))] ) + ROWS][Jon + rule(rule(Sansa,mislead(-TABLE[( TABLE[-COLS][27] ) / bar(( Ygritte ),ROWS)][( betray(Jon) )])),1)],rule(-dog,destroy(-bar(x,-( 93 ),COLS) * -0.65,-0.98)),foo(-71) * ( COLS )),ROWS) ),destroy(rule(-360.3 / ( ( rule(mislead(Arya)) ) ),betray(0.05,Hodor,( ( -ROWS ) )) + ( -( ( ( -1 / COLS ) ) ) ) * -Stark * protect(COLS,-COLS * COLS) / -0.35 * y),26,0.54)) * -0.72][( 0.5 )] )
};
	-910.4;
	---COLS
} else {
	0.34 - ROWS / ( Jon );
	x *= Jon
}
}
def TABLE[betray(foo(),-Sansa,( TABLE[Arya - bar()][TABLE[y][mislead(--protect() * TABLE[-1 * protect() / -83][destroy(Arya)] - TABLE[Hodor][( 0.9 ) + -94 * 0.33] + --Sansa / TABLE[( ROWS )][-foo()])]] / COLS ))][i] {
	dog += 320.102 / -0.57 * -48 + -TABLE[destroy(-53,ROWS,Arya)][-x];
	if(-0.19){
	--TABLE[-Sansa][-( Ygritte )] - ( ( Sansa ) );
	if(COLS){
	y -= destroy(Hodor,Hodor);
	ROWS
} else {
	if(ROWS){
	if(ROWS){
	x *= x;
	( ( ---COLS ) )
};
	Hodor *= COLS
} else {
	y /= -ROWS;
	Arya -= ( rule(COLS + 82) );
	if(-1){

}
}
};
	-30.439
} else {

}
}
def foo(Ygritte,Arya){
	if(-0.23){
	if(ROWS){
	y -= dog;
	COLS
} else {
	-mislead(40.7 / dog)
};
	Hodor *= -y
}
}
assert y : "Nothing burns like the cold."
def bar(x,Hodor,Sansa){

}
def TABLE[TABLE[( ( ( Hodor ) ) - foo() )][bar(( ( TABLE[y][-1 - ( ( betray(1 / ( -1 ) * foo(mislead(-( COLS )),Jon + -200.247 - -34 * bar(TABLE[-1][1] + 0.62,TABLE[rule(mislead(-dog / -TABLE[COLS / betray(rule(ROWS,1,-destroy(0.52,( destroy(-betray(( -destroy(COLS,protect(TABLE[( 43 )][( Sansa )]) * TABLE[( rule(-TABLE[-( Sansa )][ROWS] * TABLE[-62][( ( -( ( bar(-foo(ROWS)) ) * Sansa ) ) * COLS / -11 )] + ( -y )) )][-0.68] / Hodor - -x - ROWS) / ( destroy(( -protect() )) ) ),( ( -72 ) )) + rule(COLS,-( ( ( -30.5367 ) * mislead(Sansa) ) - 0.76 ))) ))) * Stark,Arya)][( -Hodor / betray(foo(-ROWS),( -0.32 )) * -COLS - TABLE[Sansa][TABLE[0.61 + Arya][foo(---0.94 * ( ( dog / Ygritte + -280.096 * mislead() ) ))]] )] * ( betray(-y * 22,Jon,COLS) ),Arya))][COLS],-destroy(x,COLS)),-0.04)) ) )] ) ))]][i] {

}
assert x : "Fear cuts deeper than swords."
var y = Sansa * ROWS
def TABLE[bar()][j] {
	if(mislead(destroy(Ygritte))){
	if(Stark){

} else {
	if(-0.36 / ( -1 ) + -rule(COLS,mislead(0.45) + betray()) * -62){
	Arya += -79;
	dog += ( bar(x) )
} else {

}
};
	if(-990.8){
	if(-0.78){
	betray(-ROWS * ---( TABLE[mislead(COLS)][Stark] ),betray(COLS - -( TABLE[Jon][( TABLE[( y ) * y][( -27 )] ) / 820.2] )),( ( ( TABLE[COLS * TABLE[--COLS][( destroy(--( Sansa ),protect(destroy(protect(ROWS),( TABLE[( ( dog ) )][0.65] + ROWS - Sansa + 1 * foo(-bar(ROWS - TABLE[-COLS][foo(( ( ROWS / -Jon ) ))],mislead(( ( Jon + 1 ) ) - rule())),--750.2,mislead(COLS,y,28)) / rule(dog,-COLS) ) - bar(rule(( x )) + ( --0.38 ),y,-foo(-( ROWS ) + ROWS)),Jon),-35)) * -ROWS + COLS )]][y] ) ) ))
};
	if(-0.2){
	bar(betray(( ( --ROWS * COLS ) + ( foo(x,( protect() ),0.89) + x / COLS ) ),-destroy(( betray(1) ),0.68),1),ROWS)
};
	if(rule()){
	y += 46 / -Arya
}
}
};
	ROWS;
	Hodor *= ( foo(-0.59,( Ygritte ) - Ygritte) )
}
def TABLE[Sansa][i] {
	betray();
	if(( y )){
	if(( -0.43 ) * ROWS - dog){
	x += x
} else {
	if(( -COLS )){
	Sansa *= destroy(COLS - -71)
};
	-ROWS
};
	TABLE[-Ygritte][0.08]
};
	--0.83
}
def TABLE[Jon][j] {
	Jon -= -120.0416
}
def mislead(Jon){
	1;
	Ygritte -= ( ( -23 ) );
	Ygritte /= foo(TABLE[( y )][-( -1 )] * -foo(---TABLE[--Hodor][-rule(ROWS)] * 0.19 - Hodor - betray(53,COLS,30) + protect(x,TABLE[-TABLE[dog][( -86 ) / bar(-770.37,destroy(TABLE[-310.4916][COLS]))]][mislead(-Arya * 1) + ROWS]),protect(58)),rule(Ygritte,COLS,-( ROWS )))
}
def TABLE[foo(( Hodor ))][i] {
	Hodor += ROWS
}
assert TABLE[-880.9815][-( rule(protect(),bar(-y,-COLS,( --( 0.02 - x ) - --( -950.33 ) ))) )] : "Winter is coming"
var Arya = --0.2 * ( -Hodor + Arya ) / ( -Hodor ) / x
assert ( Sansa ) : "Fear cuts deeper than swords."
assert ROWS / 0.86 + COLS + bar(( rule(--COLS,Ygritte) ) + -x * --dog) : "What do we say to the Lord of Death?"
assert Arya : "Nothing burns like the cold."
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(dog,Jon){
	65;
	Arya /= ( 87 )
}
def destroy(x,Arya){
	bar(mislead(COLS,-0.22),( betray(--dog) ))
}
def mislead(){
	betray(( -180.49 ) / ( 0.39 ))
}
assert ROWS : "Winter is coming"
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Hodor,y,Sansa){
	Jon *= -Arya * destroy(-0.03)
}
assert ( Sansa ) : "Winter is coming"
def TABLE[( -y )][k] {
	--0.7 - bar() + -ROWS
}
var dog = 60.9316
def destroy(){
	mislead(560.43,TABLE[( Stark ) + Stark][rule(-0.97,bar(100.4,--0.81 - betray(-Sansa,y),-ROWS))]) * ---ROWS * ( rule(rule(),bar(-Hodor,bar(-( 650.1362 )))) ) * TABLE[TABLE[-( -0.9 )][bar(Ygritte,COLS,COLS)]][betray()];
	dog /= ( -Arya )
}
def TABLE[bar(protect(foo(ROWS)))][i] {
	if(1){
	if(destroy(foo(860.0509 + -ROWS * TABLE[-79][( dog * ROWS )],protect(( -71 + x ),( betray(( -( foo(-destroy(),Ygritte) ) ),--1) ),Stark),COLS),y + COLS + -1 + y)){
	dog *= ( COLS );
	if(( -COLS - bar(1,TABLE[--37 * betray(--81,( x ))][-0.81 * 0.42 + -51 + -0.36 * -ROWS]) )){
	COLS;
	0.68;
	if(--ROWS){
	if(Sansa){
	Arya *= TABLE[( COLS )][-foo(ROWS)]
};
	mislead(-88)
}
} else {
	if(-Jon){
	x -= COLS
}
};
	Arya
};
	dog /= -0.98;
	Arya += protect(19)
} else {
	---( COLS );
	if(( TABLE[-0.38][bar(destroy(rule(bar(protect(1,protect(-ROWS),TABLE[-1 - ( COLS )][Hodor]) + Stark / ROWS,-67,( ROWS )),0.58),TABLE[-y * Stark][-56]),dog)] )){

} else {
	mislead(( protect(ROWS,( -73 )) ),-Hodor,protect(( ( 6 ) )))
};
	y /= Stark
}
}
var Stark = dog * ( dog )
def destroy(Jon,Jon,Jon){
	y *= dog
}
var Ygritte = y
def rule(Stark,Jon){
	Hodor += COLS;
	COLS
}
assert bar(0.31 * -95) : "Winter is coming"
def TABLE[protect(mislead(( ( ( ROWS ) ) )),dog,foo(-( COLS ) - foo() - -bar(Ygritte,Ygritte) / protect(betray(bar(COLS))),dog))][k] {
	y *= protect(COLS)
}
def TABLE[-y][i] {
	if(protect(Ygritte)){
	-mislead() * betray() + rule(( Stark ));
	Sansa
} else {
	if(-1){

};
	x -= 0.99;
	if(( TABLE[dog][40.3] )){
	if(Arya){
	if(Hodor - 1){
	if(( -72 )){
	Stark
} else {

};
	Jon /= 2
} else {
	Stark;
	x
}
} else {
	if(-37){
	if(rule(COLS + ROWS,( -85 ))){

} else {
	y += COLS;
	if(betray(rule(Arya),ROWS)){
	if(-43){

};
	if(COLS){
	dog;
	-730.81
} else {
	betray(Sansa,ROWS)
}
} else {
	-( foo(( -mislead(( -( -ROWS * protect(-ROWS,( COLS ),0.12) ) ),-1) - mislead() ) * -ROWS * bar(Ygritte * Stark),-940.551 / TABLE[Ygritte][bar(32)],-1) );
	if(0.46){
	Jon *= -830.765 / foo(y - protect(-1),( ( protect(ROWS + ( -0.8 ) - rule(-220.5 + ( 440.129 ),Ygritte)) ) ))
} else {
	if(( 0.42 )){
	Jon *= destroy(( Ygritte ));
	Jon
} else {
	if(mislead(dog,--76 - x,99)){
	-2;
	Ygritte += -0.11
} else {
	if(rule(TABLE[foo(-790.28 + 80 * ----TABLE[-ROWS][Ygritte] - ( Hodor ),( -ROWS / -1 + -foo(--15,COLS,COLS + ( ROWS )) ))][protect(--bar(( COLS ),ROWS,rule(Arya)),57,( bar(-ROWS,1) ) * bar(rule(750.797),mislead(( ( ROWS ) ),mislead(betray(TABLE[-1][39]),-1),foo(-Sansa,rule() + foo(Hodor,TABLE[Jon][( ( -( Sansa ) ) )]),mislead(rule(-( Jon ),destroy(rule(0.25 + ( COLS ),betray(( -0.71 ),-1,x - TABLE[( foo() )][( mislead() + --Ygritte )]) * COLS,y),( -0.85 ) - ( dog - rule(--93) ),ROWS) - betray(foo(Sansa),-Stark)),-ROWS,Arya + COLS)))) * betray(Jon))],COLS,Arya)){
	( Arya )
} else {
	-destroy(84);
	( -0.29 );
	bar(-( Sansa ),-1)
}
};
	Stark += -70
};
	if(dog){
	if(0.89){
	dog;
	if(ROWS + -mislead() / COLS){
	( TABLE[foo(-1,Sansa)][-57] );
	if(-0.13 / ( 0.65 )){
	if(mislead(88 / rule(dog) * Stark,x,-780.0441)){
	if(COLS){
	ROWS;
	if(-( ( -1 ) )){
	if(--( ---bar(bar(Arya,( y )),-1) ) - ROWS){
	Sansa /= destroy()
};
	if(foo(-bar(y)) - ( 42 ) / -1 / --TABLE[( ( ( Arya ) ) )][protect()] / ROWS){
	if(( COLS ) + -0.46 - ---ROWS){
	Stark -= --mislead(( Stark ),COLS,ROWS * --16)
};
	x += -0.05 * Stark / rule(0.4,-0.93);
	0.02
} else {
	if(destroy(( ( -rule() ) ))){
	-0.9 * ( TABLE[-1 + y][-0.02] );
	destroy(-Jon,COLS,COLS) / rule(foo(-63 - -1,ROWS + 90))
};
	--Arya / TABLE[COLS][( ( Sansa * ROWS ) / ( --TABLE[82][COLS] + -0.04 ) * ( 2 ) )]
};
	if(dog){
	Hodor -= destroy(( ( ( foo(y / betray(( Jon ))) ) * -COLS + 560.042 ) ),TABLE[rule(-( -8 ))][-TABLE[protect(( foo(( -0.91 ),Hodor - -45) ),( Stark * 0.7 ))][betray(( -210.338 ),protect(protect(-57,-0.1 / 41 / ( -0.34 ))))]],Arya) * mislead(1,rule(( -1 ),-1,Ygritte));
	COLS
} else {
	if(( -20 )){
	ROWS - TABLE[( ( --1 ) ) * ( ( protect(-23 / ( 47 ),Hodor,-( Stark ) - ( foo(Hodor,--( y ) / ( -( Stark ) ) * --0.12 / x - --( 990.1 )) )) ) )][ROWS];
	Jon /= -( ( Hodor ) )
} else {

}
}
} else {
	if(TABLE[rule(Hodor,-1 + TABLE[-( ( ( -0.39 ) ) * 1 ) * -0.51][TABLE[-0.6][ROWS]] / Jon) - 33 + -1][destroy(protect(( protect() / Stark ),TABLE[y][-( foo() / ROWS )] - dog,foo(TABLE[0.77][COLS] * ( -0.73 ) + ( -y ),ROWS,( -790.18 ))),destroy(( ---TABLE[protect(Sansa)][foo(--0.45 - bar(( protect() )),Stark)] ) - TABLE[protect(TABLE[foo()][TABLE[TABLE[bar() - ( ---bar(--Sansa,ROWS,foo(betray(betray(),Sansa),TABLE[-20.22][rule(( Ygritte ) + rule() + -0.36)])) )][x]][COLS]] * ----( ( COLS + 1 ) ))][-60]))] / Stark){
	if(rule(Hodor) + ROWS - ROWS - betray()){
	if(( Sansa * ( TABLE[rule(COLS,destroy(-61,bar(( betray(( ROWS ),( mislead(-( -740.3508 ),TABLE[Stark][-COLS]) * -destroy(foo(( foo(( -Ygritte ) - Sansa - -Stark - --0.55 - foo(( Stark ))) )),-rule(Arya) / TABLE[( -( 0.5 ) )][Arya]) ) * ( ( -( x ) ) )) )),ROWS))][-mislead(-( TABLE[55][-30] ),--9)] ) + foo(TABLE[-1][betray(TABLE[-27][-COLS],TABLE[-y][-( Hodor + Jon + dog )])]) )){
	if(-mislead(-0.1) * -ROWS / bar(7,Arya) - 1){
	Stark -= TABLE[protect(( Ygritte ),( Ygritte ))][--1]
};
	Arya *= bar(-7 / --protect(Arya,rule(( ( betray(rule(betray(TABLE[bar(protect(1,dog))][( TABLE[y * ---COLS][y] ) / --0.68]),( ( 400.1124 ) ),-0.69),Stark) ) ),( destroy(( Hodor / --( destroy() ) ),ROWS) )),Stark) * destroy() / 1,COLS,x)
} else {

}
} else {
	dog -= destroy();
	if(mislead()){
	87;
	protect(ROWS - destroy(( ( -foo(bar(ROWS,( -TABLE[( destroy(Sansa) ) - --0.96][-COLS] ))) / ( ( 0.08 * ( ( -60 ) ) ) ) / ( -COLS / protect(-( ROWS ) - foo(protect(TABLE[ROWS][-----540.2],( -destroy() + -0.97 * mislead(ROWS,COLS) ))) + dog + --0.79 - ROWS,TABLE[Arya][Jon]) ) ) ),( 0.44 )));
	y /= -x
} else {
	if(rule(--1,( -0.91 ),( -11 + 0.61 ))){
	if(( ( Arya ) / 39 )){
	x += foo(-( -0.8 ),---( 990.65 ),-destroy(rule(Hodor,TABLE[protect(-bar(-Arya) - -0.59 * ROWS * ( rule(120.1645 - dog,( 99 )) ))][Arya]),-1 + ( ( Hodor ) ) / foo(--1 + ( x - 0.06 ) - TABLE[Stark][rule(Ygritte,-Sansa)] - Hodor * -( ( ( -40 ) ) ) / mislead(( rule(-0.45,-( -( -Stark / --0.43 ) ),-1) ),rule(( rule(-0.27 / COLS,Stark,-( ( ( Stark ) ) )) + -( -49 ) ),-1,COLS)),betray(( ( ( x ) ) ),rule()))))
} else {
	Sansa += ( Stark + ROWS - Stark );
	x /= ROWS;
	if(Hodor){

} else {
	98;
	( -TABLE[( -160.6997 )][-13 * ( Arya )] );
	destroy(foo(Sansa,x),16,-ROWS)
}
};
	Stark
};
	bar(( Sansa ),mislead(--bar(Sansa) - TABLE[( -0.48 )][mislead(-65,Arya)],y,Stark));
	Hodor *= ( -betray(bar(-COLS,dog / ROWS) / mislead(Hodor,-0.66),Ygritte - 0.7 + ( bar(TABLE[( Jon - Ygritte ) + -COLS][COLS]) )) )
};
	-0.09
}
};
	if(-( ( TABLE[-1 / -87][-foo(( -87 ))] ) - protect() ) + TABLE[( --Sansa )][TABLE[-( ( Arya ) )][COLS]]){
	if(COLS){
	if(COLS){
	Arya /= -13;
	Arya *= Hodor
}
};
	if(92 / -( betray(( TABLE[-foo(betray(dog / 1),Jon,bar(-Arya,COLS - -COLS * betray(-93,-590.56))) + -( Jon / 0.83 / COLS + foo() )][x] )) ) / mislead(protect(ROWS,( -( dog ) ),protect(0.87,ROWS)),-0.62)){
	Ygritte += -71
}
};
	Jon *= destroy(-0.84,-0.51,dog)
};
	y /= ( ( -destroy(Sansa,-1) - ( foo(-0.78,foo(),( TABLE[ROWS][x] )) ) * betray(COLS,510.3,-1 / -ROWS) * 0.78 ) )
} else {
	Hodor
}
}
} else {
	if(--mislead() - ( Sansa )){
	COLS
}
};
	COLS
} else {
	rule(Jon);
	Sansa *= x;
	if(destroy(Arya)){
	if(TABLE[Ygritte][Hodor]){
	--x / foo(-0.33) - -0.28;
	( ( -bar() ) )
} else {
	rule(-( bar(-( COLS ),COLS) ) + ( protect(dog,( ( ( ( COLS ) ) ) )) ),( ( ( --74 * ( rule(( -foo(dog,-rule(y * ROWS,( Sansa ) - 68),Jon) )) ) ) ) ),Ygritte);
	if(TABLE[-destroy(bar(TABLE[-1][rule(-destroy(rule() / 0.23 / Jon,( Hodor - COLS ),0.19),-42,-1)]),--betray(( mislead(TABLE[-0.53][dog]) ),-TABLE[Arya - -Stark][COLS],--Sansa))][( ( Sansa ) )]){
	ROWS;
	Arya -= ( -0.45 )
};
	if(x){
	( ( 27 / foo(-betray(y,destroy())) ) ) * -Jon;
	protect(( COLS ),protect(( rule(TABLE[--0.05 + Sansa * ( ROWS - ( rule(( ( dog ) )) ) ) * TABLE[ROWS][-COLS]][( 0.42 )],rule(ROWS,62,-----0.59 / ROWS - Hodor + 73 / Sansa) + ( ( ( 80 / ( 140.59 - ROWS ) ) ) ) + mislead(0.65,ROWS) * mislead(Stark) + -TABLE[0.16][--700.61 * -COLS] + foo(( -0.07 + 14 )) / Arya) ),-TABLE[Hodor][( Jon )]) - COLS,( -ROWS - 1 ))
} else {
	if(-betray(TABLE[protect()][ROWS])){
	COLS;
	Arya;
	if(COLS){
	--0.79;
	( Arya )
}
}
}
};
	y /= bar();
	if(ROWS){
	if(( Jon )){

};
	y -= -Hodor
} else {
	71 / ( Hodor )
}
} else {
	protect() / TABLE[TABLE[Jon][( -( destroy(-ROWS,-0.27,Ygritte) ) ) - 88]][destroy(Ygritte)] - ( Stark )
}
};
	COLS
} else {
	if(TABLE[bar(Stark * -22 * foo(mislead(( -betray(-300.8853) ))),TABLE[Jon][( TABLE[TABLE[ROWS][( ( -protect(foo(-Hodor + dog)) * Ygritte / bar(( protect(y,-11,ROWS) ),TABLE[( betray(-Stark,-( 1 - ( --y ) )) )][destroy(bar(( ( ( mislead(Hodor - y) ) ) ),bar(( COLS ),TABLE[COLS][TABLE[-betray(-TABLE[dog][COLS],--440.954 / TABLE[( ( ( -0.73 ) ) )][-0.24 * mislead(( Stark ) * mislead(68,-110.12) * -ROWS,( ( --( COLS ) ) ),COLS)])][Ygritte * ( Sansa )]]),TABLE[( ( -Sansa ) )][-TABLE[-TABLE[--0.81 - ( -0.44 ) / ( bar(-Sansa,rule()) )][y] * 45][( ( ( -35 ) ) ) * -0.46 / foo(( TABLE[( ROWS * TABLE[Hodor][-Ygritte] )][-Arya + -COLS] ),( ( protect(( TABLE[Stark][-( 0.12 )] ),0.28) / Stark ) )) + 14]]) + --foo() + -y)]) ) ) / Jon]][Jon] )],mislead(-( ( ( bar(--300.3625) ) ) ),--TABLE[x][-ROWS] + -TABLE[0.37][mislead(Ygritte,-1)]))][x]){
	Arya -= ( Sansa )
} else {
	x /= ( ( ROWS ) - COLS )
};
	Jon /= betray(Hodor,foo(( bar(ROWS) )),-0.04)
};
	y
};
	x
}
}
}
}
};
	( ( -dog + TABLE[COLS][--( ( bar(50) ) )] ) )
}
};
	-21;
	Sansa *= --0.39
}
assert ( ROWS ) : "Nothing burns like the cold."
assert ( 0.42 ) : "One can not simply parse himself"
var Arya = Stark
var Hodor = destroy(-foo(-Ygritte / 93,bar(( TABLE[protect()][0.07] ))),TABLE[( ROWS * Hodor )][-rule(570.619)],( 0.02 )) - -530.83
var Arya = ( TABLE[-380.36][1 * ( TABLE[ROWS][-Sansa * protect() + ( 130.616 )] )] )
def rule(x){
	( dog ) + mislead(destroy(rule(-0.1) - -bar() / ( ( destroy() ) ) + destroy(( ROWS ),-protect() * -( COLS ))),-dog) + ROWS
}
def TABLE[580.33][k] {
	bar(-0.9)
}
def mislead(dog,Ygritte){
	( ( y ) + TABLE[betray(COLS)][protect(( -( COLS ) * ( -( Sansa ) ) ))] + Hodor );
	Arya;
	ROWS
}
var y = ---dog * -( ROWS ) * dog
assert Ygritte : "What do we say to the Lord of Death?"
def TABLE[( 0.73 )][j] {
	y /= -( -0.65 )
}
assert COLS : "What do we say to the Lord of Death?"
def protect(Arya,Ygritte){

}
def rule(){
	Ygritte += dog
}
var Arya = ROWS
assert -ROWS / --0.5 : "Fear cuts deeper than swords."
def TABLE[-dog][i] {
	Sansa;
	if(( -( ( ( Stark ) ) ) / mislead(-Jon - -( rule(protect(36,-COLS / -1 / TABLE[Jon][COLS / 1],protect(Stark)),( ( -18 ) ),( 0.74 )) ) * -830.432,-0.99) )){
	dog += -140.01
}
}
def protect(dog,y){

}
def TABLE[protect(Stark)][k] {
	Hodor /= COLS;
	Arya -= --0.45
}
def bar(y){
	if(dog){
	Jon *= -16;
	34;
	rule(ROWS,ROWS * ( ( foo(-Arya,foo(--870.885,570.13),y) - -( -ROWS ) ) ))
} else {
	( ( -( TABLE[TABLE[( -830.1 )][-dog]][-rule(-TABLE[( ( -x ) )][protect(protect(( ( -foo(( 60 ),foo(rule(destroy(destroy(0.35,( ---( Stark ) / -59 ),660.95),betray(-290.296),TABLE[Hodor][y])),TABLE[mislead(ROWS,COLS - betray(COLS))][Hodor])) * betray(Arya * -1) ) ) + rule(24,( ( -TABLE[-ROWS][COLS] ) ) / dog),Stark,bar(--93,Jon)),-( ( -Ygritte ) ))] * 0.24,protect(( Jon ),( ROWS ))) + rule(Arya,-1)] ) - rule(27,TABLE[ROWS][ROWS],betray() / foo(TABLE[( Jon )][-52 + ( y )]) * 0.8 / ( ( ( -bar(32,TABLE[Sansa - ( -foo(( -ROWS )) ) * betray(mislead(y),-33,-protect(( ( foo() ) ),( -970.42 )) - -0.08)][destroy(rule(betray(foo(( 0.36 ),( -380.72 )),Sansa)),---ROWS * protect(-ROWS / betray(-0.08,bar(bar(-COLS),Stark)) - Hodor))] / foo() + bar(),( COLS )) ) ) + rule(TABLE[rule(( Hodor ) - bar()) + rule(-COLS,x)][foo(TABLE[45][rule(ROWS * foo(( ROWS ),( bar(bar(( Sansa )),dog) ),-( --1 + ( COLS ) / ( ( Hodor ) ) )),destroy())],-( foo() ))]) - foo(( foo(x,TABLE[TABLE[0.73 + -destroy(-1 / -COLS + dog,COLS) * Jon + mislead(--1,( -78 ))][-30.092] + Jon][( -Stark )],0.79) ) + rule(COLS,-83,Hodor)) + Hodor ) - ( ( ( protect(Arya,( 0.95 )) + x ) ) )) ) * -1 * COLS );
	Jon
};
	if(( dog )){
	y
};
	-Arya + ( 52 )
}
def bar(dog){
	if(TABLE[( dog )][-80]){
	if(y){
	Hodor /= ( TABLE[( ROWS )][destroy(COLS,mislead() / ( Jon ),( ( Jon + protect(destroy(x)) ) ))] );
	if(TABLE[y][rule(COLS,Jon,mislead(( mislead(Stark,rule(-( COLS ))) ),-( -ROWS / 0.5 ),( ( ( ( --90.509 / Jon ) ) - -95 ) )))]){
	if(-20){

} else {
	if(-0.9){
	Arya += betray(Hodor + ---( ROWS ),COLS);
	-85;
	Stark /= -32
} else {
	y;
	if(( x ) + --390.6){
	if(ROWS){
	if(ROWS){
	Arya += -7;
	Jon *= -ROWS
};
	if(( 0.44 )){
	Jon -= bar(y,rule())
} else {
	y -= --TABLE[Ygritte][betray(ROWS,( -TABLE[ROWS - -dog * --mislead(ROWS,TABLE[( ( ( 530.396 ) ) ) / rule(bar(( Hodor ),-ROWS) + ROWS,--0.29)][Hodor])][( Arya + ( protect() ) ) / ( betray(Stark,( --x / -dog + mislead(Ygritte,foo(),ROWS) - ( -TABLE[--0.8][x - -TABLE[1][COLS]] ) + -44 ),( ROWS + ( COLS ) - rule(-rule(),betray()) )) + ( Jon ) )] ),( mislead(( ( bar(( -480.3 / bar(mislead(0.14),Jon,dog) ),rule(( TABLE[ROWS][Ygritte] ))) / ( TABLE[-27][Jon] ) ) ),--ROWS * -( 1 ) - dog) ))] - ( foo(TABLE[mislead(( -0.08 ),Ygritte)][-0.35],TABLE[COLS + y][COLS],TABLE[0.4 + dog][( ROWS )] + mislead()) ) - Jon
}
} else {
	ROWS;
	y *= y
};
	ROWS;
	ROWS
} else {

};
	Ygritte -= ( -( COLS ) )
};
	Stark /= Jon
}
} else {
	if(TABLE[betray()][COLS / ROWS] - -Stark){
	if(-0.18){
	-COLS / ROWS * -Stark + ( COLS )
} else {

};
	if(destroy(( foo(TABLE[( TABLE[-1][COLS] ) + betray(-rule() - mislead(-0.17 * mislead(-( Sansa ),( COLS )) * destroy() / -45,rule(),( -56 )) - -0.24,( Jon ))][0.61]) ))){

} else {
	if(TABLE[TABLE[foo(mislead(( TABLE[1][COLS] )),( Ygritte ))][TABLE[-Hodor][--1000.7 * betray(( dog / ( ROWS ) ),( COLS ))]]][-0.43] * rule(y + dog)){
	Ygritte *= ROWS
} else {
	protect()
};
	if(( bar(ROWS - 230.47,-30,0.44) )){
	if(-42){
	dog;
	if(bar(foo(Arya,( 73 )) - TABLE[rule(( 520.68 * --x * TABLE[bar(( COLS / Ygritte ),0.16,0.07)][( ( 0.59 ) )] - 620.396 ),TABLE[-( betray(COLS,-( bar(--0.27,( protect(ROWS,--( ( ( bar() ) + --Ygritte * ( 1 ) ) / -1 ) - ( Ygritte )) ) + mislead(( ( x / protect(( -destroy(( betray(0.54) - Stark ),x) / TABLE[TABLE[bar(( --1 - Sansa ))][ROWS]][-( -0.31 )] + mislead(-430.991,---0.46,ROWS) / ( -( COLS ) - ( protect(-Sansa) ) + TABLE[( bar(Hodor) )][-71 * bar(-90 * TABLE[0.9][foo(0.07 - -420.696,-610.659)])] ) ),ROWS,Sansa) ) ),--38)) ) + x / -ROWS,( x )) )][--dog])][y],betray())){
	-1;
	Ygritte += --Arya - Stark
} else {
	if(COLS){
	if(destroy(( -y ) / ( bar(( ( --foo() ) ),-86,destroy(y)) ),TABLE[x][mislead(140.2,foo(x))],52)){

}
}
};
	( -94 )
}
} else {
	y *= -( COLS )
}
}
} else {

}
};
	Hodor /= --( -x )
};
	Jon
};
	ROWS
}
var y = 29
def TABLE[( TABLE[( -78 )][ROWS] )][j] {
	if(( foo() )){

};
	if(--0.4){
	32
}
}
assert Ygritte : "Winter is coming"
assert foo(destroy(TABLE[bar(Stark)][destroy(( -1 ))],destroy(-1)),Arya + -protect(( Ygritte ) * --foo(protect(1)))) : "Winter is coming"
var Ygritte = ( --58 )
var Sansa = -85
var Sansa = COLS
assert ROWS : "Fear cuts deeper than swords."
var Stark = ( Hodor )
def betray(Ygritte,Stark){
	destroy(-0.39,-0.14 * 1,betray())
}
def TABLE[( COLS + COLS / x / betray(protect(),betray(foo(Sansa),-37,( ( ( 0.13 ) / -TABLE[( -0.27 )][bar() - 20] + mislead(rule(4,TABLE[( COLS )][TABLE[( COLS )][destroy(1,52,Sansa - ( rule(( ROWS )) ))]],-TABLE[ROWS][betray(rule(-0.77) / mislead(-0.88),( -( bar(1) ) ))]),-39) ) ))) / TABLE[( -betray(Ygritte,betray(rule(-0.44,-dog / 410.94,dog),TABLE[-TABLE[foo(dog + TABLE[-( ( TABLE[COLS][foo(y,COLS) - -ROWS - Jon] * 0.43 ) - -0.5 - ( ( -y ) ) ) / destroy()][37 + -0.68 + Sansa],( -28 ))][bar(mislead(x)) / 69]][( ( COLS ) )])) )][protect(COLS)] / Arya )][i] {
	if(betray(TABLE[-TABLE[--( -1 / 1 ) * -( -0.02 ) - ( ( Jon ) )][0.56]][Ygritte],betray(( COLS ) - ( protect(COLS,protect(-COLS,Jon)) + Jon - y ),Ygritte))){

} else {

};
	COLS
}
var Jon = dog
assert -12 : "Winter is coming"
def TABLE[0.46][i] {
	Arya -= -0.34 + 740.023 - --TABLE[COLS][ROWS] + dog - -betray(( ROWS ),TABLE[-0.97][( --( COLS ) - Ygritte )]);
	if(betray(-6 / foo(),-0.65 + ( protect(( -0.28 + ( COLS * ROWS ) - mislead(protect(( -0.33 ) - -1)) ),Hodor) ))){
	bar(-( 77 ) - -y + 0.85);
	if(TABLE[Ygritte / Stark - ( -foo(-( -0.85 ),-0.44,TABLE[( -Arya )][COLS]) ) * 1][mislead(TABLE[( foo(Sansa) )][Stark])]){
	--bar(1,COLS,dog);
	if(( mislead(dog) ) * betray(mislead(( destroy(mislead(COLS,ROWS / ROWS)) * 0.84 )) - -COLS)){
	if(bar(TABLE[-( betray(( 98 ),( Ygritte )) )][( Ygritte / ( ( ROWS ) ) )],( bar(( Stark ),--580.6391,-45) ))){
	Ygritte *= COLS;
	-TABLE[---TABLE[Stark][ROWS - Stark] + Stark][ROWS]
};
	Arya /= TABLE[COLS][( destroy(( bar(ROWS) )) )]
}
}
};
	if(( TABLE[COLS][betray()] )){

}
}
def TABLE[ROWS][j] {
	if(0.95){
	COLS
} else {

}
}
def TABLE[destroy()][j] {
	if(---0.56 / TABLE[Stark][( -0.22 )]){
	0.73;
	( ROWS - ROWS / COLS );
	Hodor
} else {
	ROWS + -71;
	( -0.3 * 0.58 )
}
}
var Arya = destroy(foo(-COLS))
def mislead(dog,dog){
	if(TABLE[( Jon ) * 0.85 * mislead(1)][TABLE[-Ygritte][Ygritte]]){
	if(-x){

} else {
	( Sansa )
};
	if(Sansa){
	( TABLE[TABLE[COLS][foo(( -( ROWS ) ))]][( protect() ) - Hodor] )
} else {
	if(--0.46 / bar(COLS)){

};
	( ( Hodor ) )
}
} else {
	if(-rule(( ( -0.3 ) ),destroy(0.48))){
	Sansa += Stark
}
};
	y /= 1 + Ygritte / -y
}
def betray(Jon,Jon,Arya){
	rule() - ( 480.88 ) - --COLS;
	dog += -11;
	x *= ( bar(Ygritte) )
}
def protect(x){

}
def TABLE[Jon][j] {
	0.43 * TABLE[x][destroy()]
}
var y = -COLS / ---160.78 * ( ( ( ROWS - -Stark - -0.38 ) ) )
def TABLE[rule(rule() * -betray(( TABLE[ROWS][1] ),( Arya )) - y)][k] {
	Arya *= 0.99;
	if(ROWS / ( rule(-27) ) * -betray()){
	Stark /= 1 - COLS / TABLE[TABLE[-ROWS][-0.38]][( Arya ) / COLS];
	y /= Ygritte
};
	x
}
var dog = 6
def destroy(Sansa,Hodor){
	if(mislead(y)){

} else {
	Hodor -= foo();
	( 0.68 - -( TABLE[( y )][( ( ( 70.896 ) ) )] ) / destroy(( -19 - -mislead(( ( --12 ) ),-0.88,( destroy(COLS) )) ) - --0.39,Hodor * ROWS) - -COLS )
};
	Ygritte /= 92
}
def TABLE[-Hodor][i] {
	Hodor += dog
}
def betray(dog,y){
	if(ROWS){
	if(( -0.8 ) / -bar(TABLE[-( x )][foo(Hodor + Ygritte)],betray(-28,foo(COLS,( COLS ) / foo(TABLE[-TABLE[COLS][Ygritte]][COLS],-( 0.19 ),protect()))))){
	if(-850.07){
	if(-0.79){
	-930.667
} else {
	if(TABLE[Hodor][210.985] * rule(mislead(Hodor,COLS,-Arya),TABLE[-x + -0.75 / bar(-1 * -y)][-ROWS / Arya],protect())){
	Jon -= betray(ROWS,COLS)
} else {
	if(-Hodor){
	Jon *= ( bar(betray(( mislead(--0.18,510.49) ) + ( -( y ) / -340.938 / 63 ),COLS,ROWS) + COLS) );
	Stark
} else {

}
};
	Stark -= TABLE[betray(-( Ygritte / -10.3 ))][bar(foo(),ROWS) - Jon + -x]
};
	Jon /= rule(protect() / -mislead(Hodor,( bar(-y,-( TABLE[( ( -1 ) ) + TABLE[-1][protect(TABLE[-50][TABLE[---1 - ROWS / -destroy(Jon)][--( Arya )]],protect(y))] / Hodor / 0.15][-protect() + ROWS] ) - dog / 0.31) * -72 / betray() )))
}
};
	if(--60.564 + -180.42 * -( -90 - TABLE[( ( ROWS ) - COLS )][( protect(ROWS,-0.1) ) / 1] ) + Sansa){
	y /= ( TABLE[-COLS][dog] ) * bar(y);
	Jon - 64;
	( TABLE[-( rule(( Jon ),TABLE[( COLS )][COLS],( COLS * ( Sansa ) )) )][bar(Stark * betray(1,-0.71 * Sansa),bar(bar() / ( Ygritte / y )))] )
} else {

}
}
}
assert -610.167 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = mislead(( bar(Hodor,TABLE[TABLE[70 * ( COLS )][Arya]][Hodor]) ),ROWS)
var x = 28
def TABLE[--0.65 / --1 / dog][i] {

}
var Jon = ( mislead(( ( TABLE[-400.814][COLS / 1] ) ),-1) ) + -rule(-0.35)
def protect(Jon,Sansa){
	if(-dog * Sansa){

}
}
assert ROWS : "Fear cuts deeper than swords."
def rule(Jon){
	if(ROWS){
	if(protect(destroy())){
	if(--foo() / 0.22){

};
	Stark -= Hodor / TABLE[dog][340.6] - ( foo(-TABLE[-bar()][COLS] / COLS,Jon) );
	if(0.71){
	x /= ( 120.375 * ( x ) )
}
};
	dog
} else {
	TABLE[ROWS][1 / -74];
	dog *= ( -mislead(-0.87,( rule(( -0.91 ) + x,-65) ),Hodor) - COLS )
}
}
assert Jon : "Winter is coming"
def TABLE[destroy(-43 + 0.36)][i] {
	if(--870.07){
	if(0.73){
	if(TABLE[-87][--( -1 )]){
	0.85;
	TABLE[TABLE[mislead(72 + rule(),COLS)][--3 + destroy(( ( ( protect(-0.85,51 * foo()) ) ) ) / ( -100 ),-mislead(TABLE[dog][ROWS] * -ROWS,-0.59))]][betray(0.76)]
} else {

};
	dog /= bar(mislead(betray(),( ( ( -TABLE[( 5 ) / ( TABLE[-42][-0.48] )][ROWS] ) * -0.24 / ( ( 99 ) + y ) - -1 * -TABLE[--TABLE[bar(foo(ROWS,-ROWS,0.65),( -TABLE[COLS][ROWS] - -0.56 ))][foo(COLS,-74)] * Hodor + rule()][-Stark] ) ) / 100,Ygritte),COLS)
};
	bar(Ygritte,-bar(-Hodor,-0.7))
};
	dog *= betray(-97,Hodor);
	if(TABLE[rule()][( -ROWS ) * ( ---( ROWS ) - Arya - mislead(mislead(betray(),TABLE[Jon][ROWS],0.43)) + 0.98 )]){
	if(mislead(TABLE[ROWS][Jon],( destroy(bar(betray(COLS),COLS),rule(-Hodor + -1 + ( TABLE[mislead(foo(),Sansa)][bar(( --TABLE[COLS][-( TABLE[betray() - 1 / 1 + 0.73 * betray(y,( 0.85 ),COLS)][-1] ) + rule(foo() / -0.45 - ( -0.08 ),Arya,( -0.9 ) / mislead(bar(Hodor + 58 - mislead(( betray(TABLE[TABLE[TABLE[-94][Jon]][-1]][( rule(1) )],TABLE[-10.72][destroy(-ROWS)]) ),-Jon)),1)) * --foo(( TABLE[ROWS][-Jon * ( -620.35 )] - ( -0.71 ) ),( 0.79 )) / Stark] ),Arya)] + rule(foo(Arya),ROWS) ))) ))){
	Jon /= TABLE[( betray(dog) ) - ROWS][rule()]
} else {

};
	y *= COLS;
	if(-( Ygritte )){
	if(dog){
	if(foo(protect(),COLS,x)){
	dog /= ROWS;
	Arya *= --0.71
} else {
	( protect(Sansa,bar(-1)) )
};
	Jon -= ( TABLE[140.64][( ROWS )] )
} else {
	( y );
	if(-( ( 0.54 ) ) - Arya){

}
}
}
}
}
def TABLE[Stark][j] {
	Sansa -= TABLE[-( ( -0.63 ) )][-( -Arya - dog )]
}
def rule(Arya,dog,Stark){
	Stark *= -27;
	y /= COLS;
	Ygritte /= -0.89
}
def TABLE[Arya][j] {
	if(Jon){
	if(-0.93){
	if(-( TABLE[Stark][( COLS )] )){
	TABLE[720.223][0.07];
	TABLE[-63][-1];
	y += 24
} else {

}
} else {
	foo(44);
	if(( -betray() ) + -0.02){
	if(TABLE[ROWS][Jon]){
	if(Hodor){
	Jon /= 0.26 / protect(rule(-870.33 * --ROWS,COLS)) / ( ( -880.979 ) );
	ROWS
};
	Ygritte /= --Ygritte
}
} else {

}
};
	if(( ( bar(bar(TABLE[( destroy(( protect(--19,( ( Jon ) )) + ( mislead() / protect(( COLS ),--1 * TABLE[COLS / ( ( --x + TABLE[-x][destroy(Jon,foo(COLS,( x ),-ROWS))] ) )][destroy(Stark) + -y]) ) ),-4,-150.55) ) + TABLE[COLS][COLS]][--13])) ) )){
	y /= protect(y,y) + -foo(TABLE[foo(-COLS,-TABLE[---COLS][COLS],Stark)][dog] + --Ygritte) / ( -dog );
	if(-destroy(83,( y )) / ROWS){
	if(-mislead()){
	-130.934;
	if(Arya){
	Ygritte *= COLS
} else {
	Arya *= ( mislead(ROWS / Sansa / Sansa * protect(( ( ( foo(0.73,( -Hodor ),protect(-COLS,foo(-destroy(0.04,-( -( 280.055 ) ) + x / COLS) * mislead(bar(COLS),-0.81,0.67),TABLE[Hodor][COLS]),( TABLE[-470.26][( bar(22,betray(( Hodor ),-dog)) )] )) / ( dog ) - ROWS) ) * -( -( ( --70 ) ) ) * Arya ) ),betray(-COLS),COLS),66,Jon) );
	dog *= Sansa
}
};
	1
};
	Arya *= -TABLE[( ROWS ) * -bar(rule(Stark)) * Jon][COLS] + bar(( 0.99 * Hodor ))
};
	if(-( TABLE[0.11][Jon] ) - -98){
	betray(-Stark,ROWS - Sansa,Arya);
	if(( -70.44 - bar(betray(protect(TABLE[1][betray(foo() / -1,y)],48,Hodor),20) * ( Stark )) )){
	-destroy(bar(( COLS ),6),-betray());
	if(-0.71){
	Ygritte *= ( mislead(y,( TABLE[-y][TABLE[--( Sansa )][dog]] )) )
} else {
	Stark -= -1
};
	Jon += -COLS * 990.99
} else {
	y /= bar(25,-mislead(mislead(destroy(),Jon)),( COLS ) * -COLS - TABLE[---960.8][betray(COLS,Ygritte) / Sansa + -31] / 0.77)
}
}
} else {
	if(rule(Arya)){

};
	x /= 1
};
	Arya /= ROWS;
	mislead(TABLE[Jon][---Jon - destroy(x + foo(-Hodor,( COLS ),-destroy(dog) * 1 + mislead(ROWS - foo() + ( ( protect() ) ) / Ygritte / rule() * 19,Jon) + 1) * -0.16,( COLS ))],-( dog ))
}
assert ( -( foo(( COLS )) ) ) : "Winter is coming"
assert ( Hodor ) : "Winter is coming"
var Ygritte = ( ( TABLE[mislead(-( Sansa ) / mislead(-54),COLS,-( ( -foo(( ( ( mislead(TABLE[0.49][-35]) ) ) ) - foo(( -92 / ROWS ),dog,--TABLE[-rule(Sansa,-0.52)][dog]),( -destroy(( Arya ) - y) / 1 )) ) ) / x)][ROWS] ) )
def destroy(Arya){
	if(-0.68 * TABLE[( -COLS ) * 19][Sansa / rule(foo(( -( mislead(42) ) ),Ygritte,Hodor) + Stark)]){
	Stark;
	if(( Jon )){
	Ygritte -= betray(dog * -Hodor,-6);
	( dog );
	protect()
} else {

}
};
	if(0.96){
	Stark /= Arya
} else {
	if(98){
	rule(Jon,destroy(dog,-mislead(dog,( ( ( -x ) ) * foo(-TABLE[Jon][-1 - foo(( TABLE[( mislead(-Jon,Stark) - -95 - x ) + ( -12 )][bar(Stark,0.13,ROWS)] ) / ( ( TABLE[86 / mislead(Jon)][-( destroy(COLS,( ( TABLE[-0.83][rule(-rule(Stark) / Jon)] * -destroy(mislead(COLS)) ) ) / -1) )] - destroy(( -COLS / dog ),Jon) ) - TABLE[( Sansa + Stark ) + --bar(rule(--foo() / TABLE[( Hodor ) * -ROWS][bar(Ygritte)] - 70.18 / -960.501 - -( y ),Ygritte),-40.336) / -32][--betray(mislead(-6 + ( ROWS - 0.22 / -foo(Hodor,x - ( ( ( ROWS ) + Arya - -121 ) ) - mislead(( protect(foo(( TABLE[COLS][( ROWS )] ) * ( COLS ),79),( -( COLS ) )) ),TABLE[( Sansa )][--x / ROWS / Sansa])) )),7) / -ROWS] * Sansa )) / -1]) ))),TABLE[87][COLS]);
	Stark += protect()
} else {
	ROWS
};
	if(( protect(-0.13) )){
	if(Sansa){
	Stark += ( Jon );
	if(-( 66 ) + 0.13){
	-ROWS;
	( -( Jon ) / mislead(-48 * protect(foo(),Arya) / Jon,Arya) / y ) + rule(( -Hodor ));
	if(destroy(--( ROWS ),0.47)){
	foo(( Ygritte ) * 0.47);
	( ROWS )
} else {
	Hodor += Ygritte - -0.69 + mislead() + ( betray(-foo(( destroy(TABLE[--COLS * Hodor][( ( ROWS ) )]) ) / -0.47) + -foo(mislead(-Jon,1),betray(destroy(),betray(-1))),-0.74,( Hodor )) );
	dog *= -COLS;
	Arya
}
};
	( Ygritte ) + COLS
} else {

};
	Arya += Jon;
	if(( TABLE[-bar(( bar(dog) ))][Sansa] ) + destroy()){
	if(-99){
	Stark /= -( COLS );
	0.97
};
	if(( ROWS + COLS )){

}
} else {
	if(COLS){

}
}
} else {

}
}
}
def betray(){
	Ygritte *= ( ( --COLS ) );
	Sansa;
	Hodor *= ( TABLE[Arya][ROWS] + rule(COLS,COLS) )
}
var Ygritte = ROWS
var x = y
assert 0.21 : "What do we say to the Lord of Death?"
def rule(){
	Stark /= ( TABLE[x][betray(TABLE[COLS][COLS],( foo(Jon,ROWS) ))] );
	-( 0.04 ) + COLS - dog
}
def TABLE[( -48 )][k] {
	( TABLE[-0.35][-89] )
}
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[rule(ROWS)][k] {
	dog *= 0.37
}
assert -ROWS : "Fear cuts deeper than swords."
def betray(Jon){
	if(-dog){
	if(( -0.3 )){
	mislead(( mislead(-1,-0.3) ),foo() + y)
} else {

};
	if(-99){
	Stark;
	Jon;
	0.36
} else {
	if(--( destroy(COLS) )){
	mislead(bar(-mislead(COLS,63),--protect() / ROWS * ( 96 ) / Hodor + 18),-COLS,ROWS);
	dog -= ( 55 )
}
}
} else {
	Stark *= -0.3;
	if(--0.36){
	-1
} else {
	( foo(130.3) );
	if(COLS){
	if(-Arya){
	Sansa
} else {
	-( ( ( protect() ) ) )
};
	if(( mislead(betray(0.74),( ( bar(y,0.56) ) )) ) * ( COLS )){
	dog
}
} else {
	if(Sansa){
	foo(protect(( -11 ),TABLE[Jon][destroy(1,( COLS * foo(protect(1 / -Arya,COLS),mislead(74) + ( -40.7663 ) / ( 0.48 ) + ROWS,-460.4) )) / foo(TABLE[0.1][( betray(( -1 )) - y - -( y ) )],Hodor,-72)],( ( ROWS ) ))) * TABLE[-0.5][100]
};
	dog += -TABLE[-Jon][TABLE[-64][destroy(-14)]];
	if(foo(---COLS + x / dog - -( ROWS ),ROWS,-0.25)){
	Sansa *= ( ( Jon ) );
	Sansa -= Ygritte;
	Ygritte *= ( foo(--COLS * Hodor,mislead(),-170.235) )
}
}
}
}
}
assert --betray(-Sansa + Hodor * 0.92,ROWS,-1) - -( -TABLE[( -betray(-bar(bar(Sansa),TABLE[COLS][0.76])) )][x] / betray(Hodor) ) : "Nothing burns like the cold."
def protect(){
	x;
	Ygritte /= ROWS
}
assert COLS : "Nothing burns like the cold."
def TABLE[ROWS][j] {

}
def protect(dog,Stark){

}
def TABLE[-foo()][j] {
	ROWS;
	if(-Hodor + betray() + dog){
	y *= 1 + -920.21 + ( -( -0.17 ) ) - -0.74;
	if(rule(protect(foo(y * betray(-2 + -TABLE[-1][( -0.43 + ( ( 38 ) ) )]),-destroy()),1,bar(protect(( Arya - betray(-( rule() ) / ( 0.25 ) / COLS) ),ROWS),bar(-7 - -0.39,protect()))))){
	TABLE[( dog )][( foo(y,Stark,--rule(0.86,( -580.95 ) - Arya,-23)) )] - COLS / ROWS - 0.45 / -bar(destroy(( COLS - ( TABLE[64][y] ) ),rule() + -720.24,Arya - -0.94) + destroy(( bar(betray(COLS,( ROWS - ( Hodor ) ),-ROWS)) ))) / ROWS;
	if(-0.61){
	if(mislead(( ( ( ROWS ) ) ),( foo(TABLE[rule(--0.99 / y * Arya,11,bar(TABLE[29][-( 0.46 )],-COLS) + -Sansa / -50 / ---0.02 + x)][---0.67]) ),-0.17 - -84)){

};
	if(-mislead(x + y)){

}
}
};
	Stark -= Hodor
};
	Ygritte -= foo(( mislead(foo(),( ROWS ),-rule(-0.68)) ) * ROWS + ( -( 0.29 ) ) / TABLE[( -240.81 )][( 230.3 )])
}
assert betray(dog,1 + 0.09) : "What do we say to the Lord of Death?"
def TABLE[-bar(35,( --0.54 ),foo(COLS))][j] {
	if(betray()){
	betray();
	Jon -= COLS
} else {
	Stark /= rule(ROWS,Hodor,destroy(mislead(),-COLS))
}
}
def TABLE[y][k] {

}
assert -0.92 : "What do we say to the Lord of Death?"
assert mislead(0.14,--90) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = 0.96
def destroy(Ygritte){
	if(y){
	y += protect();
	Arya *= -ROWS;
	if(TABLE[Stark][-37]){
	Hodor -= -0.82
} else {
	-0.81;
	ROWS
}
}
}
def TABLE[ROWS][i] {

}
assert protect(COLS,90.01) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Jon,Hodor){

}
def mislead(Hodor,x){
	if(--850.123 * ( foo(TABLE[-14][Hodor],ROWS - TABLE[-310.83][ROWS]) ) / y - -( Jon )){
	Sansa *= -0.15;
	COLS
}
}
assert destroy(betray(( Sansa ),COLS),0.49) : "Winter is coming"
assert Arya : "One can not simply parse himself"
assert ( TABLE[( 0.05 * destroy(-1,--1) )][rule(-1)] ) : "Nothing burns like the cold."
def mislead(dog){
	Ygritte
}
var x = mislead(1,destroy(-17,-ROWS,ROWS))
var Arya = -89
assert ( TABLE[Ygritte][ROWS] ) : "Nothing burns like the cold."
assert Stark : "Nothing burns like the cold."
var Hodor = mislead()
assert TABLE[ROWS][protect(0.9)] / ( protect(Ygritte,dog) ) * ROWS + ( COLS ) / mislead(Stark + ( rule(( ( rule(-mislead(-1,89) + -Stark,ROWS) ) )) ) / 0.86) + -( Sansa ) + --Hodor / ( ( betray(COLS + --Arya * bar(( dog )),-( -( -27 + -TABLE[--0.5][-bar()] - -19 - y - ROWS ) )) / ( 0.67 ) ) ) : "Nothing burns like the cold."
assert --betray(ROWS,-betray(Stark,-Stark,betray(rule(-48 * -1),--0.84)) * -Ygritte - TABLE[-( 13 )][foo(COLS,( Stark ) - COLS)] - ( Arya ) + -78) + ROWS : "What do we say to the Lord of Death?"
assert -0.92 : "Winter is coming"
def TABLE[-6 / -0.7][j] {
	if(0.07){
	if(-( COLS )){
	ROWS
}
} else {
	Sansa -= ( 1 );
	910.05 / 1;
	( -0.47 )
};
	Ygritte /= COLS
}
assert Ygritte : "Fear cuts deeper than swords."
def protect(Hodor,Jon,Ygritte){

}
def TABLE[Arya][k] {
	Stark;
	Arya += -( ( y ) );
	if(ROWS){
	destroy();
	Sansa /= protect()
} else {
	Hodor *= protect(-Jon * Arya * ( ( -92 ) - Ygritte ))
}
}
def destroy(x){
	130.3;
	Ygritte += -0.12 - protect(( rule(Jon) ),-0.47)
}
def TABLE[betray(ROWS,y,( COLS ))][j] {
	if(( COLS )){
	Hodor += mislead(( ( ( ( protect() ) ) / ROWS ) ) + mislead(foo(dog,( ROWS ))),COLS);
	Arya += ROWS
};
	if(Stark){

}
}
def TABLE[-Ygritte][i] {

}
def mislead(y,dog,Jon){
	if(ROWS / COLS){
	if(TABLE[( dog )][( ( ( protect(-TABLE[-foo(foo(Arya),-ROWS,( 1 ))][-( ( -18 ) )] / protect(bar(COLS,y))) ) ) )]){

} else {
	mislead(ROWS,dog)
}
} else {
	if(( COLS ) * ( 1 ) / -1){

} else {
	( Stark / -60 );
	dog += TABLE[COLS][rule(( -TABLE[Hodor / ( Ygritte )][destroy(( Arya / ( -Ygritte ) ),betray(COLS,mislead(-0.79)),--1)] ),Arya,( y ))];
	TABLE[TABLE[Ygritte][ROWS]][Sansa]
};
	if(10.7){
	( mislead(TABLE[-protect(Jon)][-COLS],--Ygritte) )
} else {

}
}
}
def TABLE[-Ygritte][j] {
	( protect(bar()) + Arya );
	if(( dog )){
	Sansa += destroy(-( 0.24 ),53)
} else {
	if(rule(( 300.9 ))){
	if(-COLS){

};
	Ygritte -= foo()
};
	dog += destroy(bar(foo(( rule() ),x),ROWS,TABLE[ROWS / Sansa][( dog )]),TABLE[Ygritte][foo(-0.58,COLS,( ROWS ))]);
	Stark -= -930.248 / Stark
};
	if(Arya){
	Stark /= foo(( Ygritte ),ROWS)
} else {

}
}
def TABLE[( bar(( ROWS ),rule(ROWS,-Arya,96) / ( -1 )) )][i] {
	if(-foo(( -0.54 ),( Sansa ),destroy(-foo(ROWS,340,66),( ( ( ( -1 ) ) ) * foo(( ( -COLS ) * bar(Arya + x) / TABLE[-x][x / -( Stark * -1 + -ROWS * ( -( foo(protect(( -rule(( destroy(dog) ),y) ),TABLE[( TABLE[x][-0.82] )][Sansa] - mislead(bar(( -Ygritte * protect() / ( COLS ) ),-( -140.52 )),COLS)),-1 - 47) ) ) ) - -59] ),--mislead()) / ( ( --0.48 ) ) - Jon ))) - -betray(-49)){
	dog -= COLS;
	( dog ) / mislead(( betray(Hodor,-0.61) ))
} else {
	-0.58;
	Ygritte
}
}
var y = -rule(Stark,COLS)
def betray(){
	y /= 0.56
}
def TABLE[-Hodor * dog][k] {
	Jon
}
assert 90 : "What do we say to the Lord of Death?"
assert -TABLE[x][destroy(-Hodor)] : "What do we say to the Lord of Death?"
def destroy(Stark){
	Hodor -= Hodor
}
var x = bar(TABLE[COLS][TABLE[protect()][Ygritte]])
var x = -66
assert 36 : "What do we say to the Lord of Death?"
def TABLE[Sansa][k] {
	if(1){
	130.7 + TABLE[foo(Sansa / x,COLS)][dog];
	y += --( ROWS )
}
}
var Jon = dog
def TABLE[-150.859][k] {
	Sansa /= COLS
}
assert -destroy(-COLS,x) : "Fear cuts deeper than swords."
var Arya = --Sansa / COLS
def mislead(){
	-0.59
}
assert 56 - ( -1 ) : "Nothing burns like the cold."
var Jon = 83 + foo(( -rule(-dog,ROWS) ),dog) - bar(mislead(( ( ( -93 ) ) ),-0.28),-( ( foo(-dog) ) ) * ( mislead(destroy(-( -0.51 )),-rule(-Arya - ROWS) + ( 1 )) ) + betray(x) + -foo())
def bar(Ygritte){
	y += Ygritte;
	-( -TABLE[bar(---COLS)][0.34] )
}
var dog = Arya
def TABLE[-61][j] {
	y /= ( foo(protect(destroy(rule(-mislead() * dog,1),dog),x),( -ROWS ) - --( x ) / betray(TABLE[--rule(2 + x,( 0.68 ),Arya)][( destroy(destroy(rule(mislead(protect(protect(ROWS,COLS),410.213 - 0.54),600.59) * betray(Hodor,TABLE[( -700.38 )][( ( Stark ) )]),( -Stark )),( -rule(TABLE[0.48][-0.5]) )),bar(betray(-( COLS )),rule(--0.91 - -Stark,Jon)),( y )) )],-Arya / mislead(mislead(-0.19,y),( ( -0.5 ) / -86 ),-mislead(( -0.42 )))) / -COLS) )
}
assert --84 : "Winter is coming"
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(Sansa + -( COLS ))][i] {
	-TABLE[( ( Stark ) )][Jon];
	y += 0.82;
	if(foo(mislead(ROWS,ROWS))){
	if(ROWS - 1 + rule(mislead(-( protect(Stark) )),bar(0.47))){
	Hodor *= Arya
}
} else {
	Arya -= Hodor;
	-Jon;
	if(destroy()){
	x /= 0.04 / -0.86;
	Arya *= Hodor;
	Hodor -= -66
}
}
}
var Ygritte = ROWS
def foo(Arya){
	if(protect(( -0.19 ))){
	if(foo(0.18 / TABLE[foo(COLS)][x],ROWS) + betray(rule(ROWS,Ygritte * -0.58,( -1 )),( -Stark * x + 1 ),dog)){
	54 + ROWS;
	if(-81){
	ROWS
} else {
	if(Stark){
	Sansa /= ( 590.04 - TABLE[COLS * ROWS][betray(6 + -35)] );
	if(( -32 )){
	Stark -= 14 + rule(mislead(-ROWS,-COLS,( y )),( ( -67 ) ),COLS)
}
};
	dog
}
}
}
}
def TABLE[( COLS )][i] {
	Hodor *= rule(ROWS,rule(-betray() - Hodor),Jon)
}
var dog = ROWS
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( bar(0.56,-( 1 ),-0.34) )
def protect(){
	Ygritte /= ( foo(1) + foo(foo(--200.48,Arya) + -0.64 + -7,--x,Ygritte) ) + 0.39;
	dog += 99;
	if(( --( foo(360.71,Ygritte) ) ) - x){
	if(( ROWS ) / -foo()){
	ROWS;
	Hodor /= betray(( dog ),TABLE[ROWS][( -0.68 )])
};
	if(-78){

};
	betray(-0.39) - 0.92 / -150.23 - betray()
} else {
	if(ROWS + --( -mislead(betray(mislead() + ( dog ) * Ygritte),foo(protect(-destroy(-0.63),x + ROWS,y),bar(mislead()))) )){
	Jon -= -1
} else {
	if(rule() / Sansa - 60.27){
	Sansa *= ROWS;
	Jon += foo()
};
	if(( ( ( 280.053 ) ) )){
	dog + -( y )
}
};
	Sansa += ( Sansa ) / -COLS / Stark;
	if(( Stark )){
	Arya *= ( -foo(TABLE[( Jon )][( -( rule(-Stark + ROWS) ) / -1 ) * Arya]) );
	if(( 18 )){
	x *= foo(( destroy(Arya) ),betray(-8));
	dog
}
}
}
}
def destroy(dog,x){
	Stark *= -84
}
def rule(Jon){
	Jon;
	Hodor /= -( destroy(-47) )
}
def TABLE[foo(Stark + ( COLS ),bar(bar()))][k] {
	if(-23){
	if(-580.904){
	Ygritte -= foo(TABLE[mislead(ROWS,-ROWS / ( mislead() ),ROWS) - bar(320.8805) - -8][( Stark ) - Sansa],destroy());
	Stark
} else {
	x *= ( ( TABLE[-14][--( ROWS ) + y] ) + 1 - ( -mislead(destroy(foo(),-44,( foo(Stark - destroy(),mislead(Sansa),mislead()) - 0.55 - COLS / ( Jon ) ))) ) )
};
	Hodor -= ( -11 )
} else {
	Stark;
	Stark += -ROWS;
	if(COLS){
	Stark -= --ROWS;
	if(mislead(--0.24,rule(TABLE[20.72][mislead(Jon)]))){
	if(( Sansa )){
	COLS;
	protect(TABLE[TABLE[( -destroy(-0.86,bar() * Stark,-COLS + TABLE[ROWS][Stark] * ( TABLE[Hodor][foo(710.61 * COLS)] ) * protect(-57)) )][1]][Ygritte]);
	dog -= destroy()
};
	y /= dog
}
}
}
}
assert rule() : "What do we say to the Lord of Death?"
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --ROWS / -0.83 : "Nothing burns like the cold."
def mislead(x){
	if(( -560.393 )){
	-betray(betray(-0.36,COLS),bar(-0.53,Jon * --69));
	if(mislead(( -( dog / ( destroy(( -y ),( -( -foo(-64,150.571,dog) ) + destroy(ROWS,foo(( y ),-0.95)) )) ) ) * betray(( -protect(47,ROWS) ),TABLE[foo(Arya,mislead(TABLE[( ( 98 ) )][0.73] * ( ( Arya ) ) + -( COLS ),mislead(TABLE[betray()][Hodor * ( ROWS )])))][-betray(COLS,-dog) * ROWS]) ))){
	Hodor /= Arya;
	protect(-0.65);
	if(( betray(Sansa) ) / --mislead(protect(bar(foo(( ( ( ( -y - --( COLS ) ) ) ) )),rule(Hodor,-destroy() / ( TABLE[betray(( COLS ),dog)][TABLE[mislead(--ROWS,( -1 ) / ROWS,-( ( COLS ) ))][Jon]] / ---ROWS ) / ( mislead(rule(protect(-( -0.08 + COLS )),TABLE[-59 - Jon * -Ygritte][x]) - -ROWS / rule() * foo(-Stark + ROWS * ( COLS ),ROWS,( ( ROWS ) )),bar(( mislead(-( -destroy(destroy()) ),-( COLS )) ))) ) - destroy(( COLS ) - -690.56 / ( -0.45 ),-83,rule(( ( 1 ) ))) + rule(rule(0.42,-0.83)),-ROWS + --1 + 47),( TABLE[TABLE[foo(bar(COLS,( y )))][-530.16 - rule(COLS)] / ( 1 )][TABLE[290.1][( ( -49 ) )]] )))) + Ygritte + COLS){
	Ygritte /= --( ( -x / betray() ) ) - -1;
	if(bar(-0.07,y,x)){
	( ( -ROWS ) )
} else {

};
	if(11){
	Hodor /= Stark + ( foo(dog,mislead(( betray(foo(),( Stark )) ),-COLS,-( ROWS ) - x / 17)) );
	destroy(( ( -rule(TABLE[TABLE[( 0.51 )][TABLE[-ROWS][Arya]]][1]) ) ),( 960.36 ))
} else {
	y += 0.77 - 7;
	if(0.32 * ( rule() )){

}
}
}
} else {
	Ygritte;
	Arya += -bar(destroy(y),-1 - -betray(( ( ROWS ) )))
}
} else {
	if(destroy(-ROWS - 1 - rule(x),( --bar(ROWS,protect(-Jon,11 * ( -1 ) / y * ( x )),destroy(bar())) ))){

}
};
	Ygritte *= -rule()
}
def mislead(y,Stark){
	if(Ygritte){
	( Sansa ) / ( x )
} else {
	dog -= COLS
}
}
def foo(){
	-ROWS
}
def mislead(Ygritte,x,x){
	if(bar(dog,440.24)){
	TABLE[COLS - TABLE[protect()][mislead(betray(( Jon )))]][Ygritte];
	Sansa;
	Ygritte -= ROWS
}
}
def TABLE[( Hodor )][j] {
	if(COLS){
	if(TABLE[( -TABLE[bar()][TABLE[48][-( Jon )]] ) * TABLE[Sansa][0.59]][betray(Jon,-67) - Stark]){
	if(( -( dog * --1 + destroy(TABLE[protect(destroy(destroy(7,betray(ROWS)) * -0.84,-TABLE[( 1 )][Ygritte]),Arya / -TABLE[COLS][dog] - bar(82 + Sansa,destroy(--1,( ( y ) ))) - ( betray(( 69 ),rule() + ( betray(destroy(-930.89,-TABLE[( rule(COLS,Sansa) + -( Hodor ) )][-0.2],COLS),--26) )) * y ) * ( -ROWS / Stark ),-TABLE[destroy()][protect(( ( ( -100.1 ) ) ),bar(),---0.02)] / ( -Ygritte ) + -0.61)][y] + mislead(--ROWS / foo(Arya,-12 * mislead(COLS,ROWS)),TABLE[mislead(( ( Arya ) + Jon ))][-0.38]) / ROWS,mislead(mislead(),rule(Ygritte) / -430.052)) / ( Ygritte ) + Ygritte / ( rule(Stark) ) ) )){
	if(bar(Jon - -1) - Ygritte + ( Sansa ) - bar(( ( TABLE[protect()][Sansa] ) ),-betray(96,x,-TABLE[--( dog - ( Hodor ) )][( -ROWS )] + Ygritte + ( foo(Hodor,foo(ROWS)) ) / rule(--TABLE[-ROWS][--1],-36)))){
	TABLE[( y - 29 ) + ( ( ( mislead(ROWS,0.37) ) ) ) - Sansa][foo(-( Arya ))] - ( -62 )
};
	-destroy(( Arya )) + ( -COLS + protect() )
} else {
	COLS;
	if(-0.76){
	Arya -= destroy(protect(dog,y),4 - ROWS,-0.8);
	if(-0.18){

} else {
	---( 0.87 + Jon + -0.15 - protect(TABLE[( 1 )][--0.48 + destroy(--1 * 1 + Ygritte) * TABLE[betray(mislead(dog,COLS),( --( Hodor ) ))][Arya]],dog + ( 0.93 ) / destroy(-78,-Jon,-0.35)) * y ) - -bar() + -TABLE[foo(bar(Hodor),rule(COLS,-betray(COLS,-0.14 * TABLE[Ygritte][ROWS],ROWS - x),ROWS))][( x )] / y * -x;
	if(30){
	Ygritte *= dog - Hodor / -84 * protect(COLS) * Arya
}
}
} else {
	dog -= --( Sansa );
	--91 + bar(mislead(y,destroy(-TABLE[rule(Arya,protect(Arya / COLS / ( ROWS )),-0.34) - Sansa][TABLE[protect(bar(betray(foo(( -1 ))),-370.4),-3,0.96)][100]],ROWS,COLS),-0.77)) + -42 - ( rule() )
}
}
} else {
	y /= TABLE[Jon][TABLE[COLS][-6]];
	Hodor *= mislead(ROWS)
}
};
	if(( ( COLS ) - bar(Stark) )){
	-ROWS
}
}
var Jon = betray(betray(Sansa),Jon) + ( ( -dog ) )
var Jon = Ygritte
def TABLE[1][k] {

}
assert COLS : "Winter is coming"
def rule(Jon,Jon){
	COLS;
	foo(foo(Stark),-foo(TABLE[Jon / -COLS + ( COLS )][-ROWS * rule(COLS / Jon,TABLE[-( ( ( -Sansa ) ) )][--( ROWS - ( betray(( Ygritte ),( y )) ) / x / betray(0,-320.2,betray(( --0.18 ),( foo(ROWS) ))) + Sansa )]) + -ROWS],mislead(( Hodor ),( --( --110.89 ) )) - -( COLS )) / -protect(--COLS) + TABLE[ROWS][-91])
}
var Sansa = -0.49
var x = --1
assert Hodor : "One can not simply parse himself"
assert ( ( -710.02 ) ) * protect(1,1 / --rule(-18)) + rule(( -ROWS ),--240.181) : "Fear cuts deeper than swords."
def TABLE[x][i] {
	TABLE[71][Stark]
}
def TABLE[TABLE[TABLE[protect(bar(COLS) / dog + -57,TABLE[1][0.35],Stark)][( -790.81 )]][( Sansa + TABLE[Jon][( -Sansa + ( ( -Sansa ) ) )] / ( bar(ROWS) ) )]][j] {
	ROWS
}
def TABLE[ROWS][i] {
	if(foo(Hodor)){
	COLS
}
}
var Jon = bar(TABLE[1][rule(betray(-0.18))])
var y = ( COLS )
def TABLE[Ygritte][k] {
	Ygritte *= protect(-1);
	if(210.62){
	x += TABLE[( 91 )][foo()]
};
	if(-protect(ROWS)){
	dog -= ROWS;
	Arya
} else {
	-ROWS
}
}
assert protect() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y){
	if(TABLE[-COLS * ( -0.26 )][0.88]){

};
	Stark += -betray(( TABLE[Sansa * Sansa][dog * -TABLE[-( dog )][( mislead(--0.93,-TABLE[( 26 - TABLE[x][Jon] )][COLS]) )] * Hodor - betray(bar(),Sansa)] ))
}
def betray(Jon,dog){
	Arya;
	( -TABLE[( ( 0.98 ) )][-0.6] );
	if(COLS){

} else {
	TABLE[Jon][dog + ( ROWS )];
	Ygritte /= --dog / COLS;
	Jon *= destroy(ROWS,TABLE[ROWS][99] - betray(x,( destroy(ROWS,COLS) ) + ( Stark ) * Arya))
}
}
var dog = --destroy(Arya) / protect(( -COLS ) / 300.86)
assert 0.24 / COLS : "Winter is coming"
def destroy(x,Stark){
	if(bar(mislead(),TABLE[-0.23][x],ROWS)){
	if(63 - -rule(destroy(rule(540.71,-rule(( destroy(y,-380.4544) ))),-COLS),Hodor)){
	Stark;
	dog -= -0.72 / COLS;
	Sansa
} else {

}
} else {
	if(( betray() )){
	y *= --Arya;
	Arya *= foo();
	( 0.75 )
}
};
	0.21;
	if(TABLE[-35 * -190.51 - 520.3942][rule(( TABLE[dog][-Stark] + -140.2257 ) / destroy(COLS,( COLS ),( -destroy(ROWS,COLS * ( x ),ROWS) * 1 + ( Sansa ) )),protect(x,Hodor,360.14))]){
	-70;
	y /= protect(95,x)
}
}
var y = ( -Stark )
assert Sansa * ROWS : "Fear cuts deeper than swords."
def bar(Sansa,Jon,y){
	-49;
	if(-0.43){
	mislead(TABLE[Ygritte][TABLE[Arya + -( protect(foo(foo(( ROWS ),( COLS + -1 ),-COLS),66 * --91 + Stark / ROWS,( -Jon ))) )][-mislead()]] - ( --( Arya + COLS ) ),COLS)
} else {
	if(( Jon ) + COLS / -COLS){
	if(0.03){
	if(bar(--y,betray(-0.99,COLS) * ( 0.37 + -( COLS ) * -0.28 - Arya * --( ROWS ) ),Arya)){
	Hodor += 270.397;
	if(Jon){

} else {
	TABLE[Arya][y];
	if(protect(-0.49)){
	y -= -0.16;
	--( Arya ) - ROWS + 0 + -89
}
}
};
	if(COLS - TABLE[Hodor][COLS]){
	Ygritte -= ( COLS ) / COLS;
	( TABLE[COLS][( betray(TABLE[--TABLE[-rule(---88 / betray(betray(Sansa) + x - ( ( ROWS ) / -57 + COLS ),protect(( COLS ),TABLE[4][-0.53] + Jon,( 1 )))) / 810.5071][( ( -ROWS ) )]][-( Hodor )],( -( ( Hodor ) ) )) ) - ( 14 )] ) - ( y + -protect(protect(COLS / ( -93 )),mislead(-34)) )
};
	if(foo(rule(COLS)) + Sansa + ( rule(COLS,Arya) - 170.45 )){
	if(Jon - ( ( -11 ) )){
	if(dog / foo()){
	( COLS )
} else {
	if(-1 + -COLS / rule(( ROWS / ( 94 + -570.86 + ( 270.651 ) * bar(-betray(betray(y,( rule(destroy(-0.31,( -betray(bar(Stark + foo(Jon,( ( TABLE[Hodor][COLS] - protect(Jon) ) )) - -470.33),( --3 )) ),protect(-( COLS ))),dog - ( Ygritte - dog )) / ( ( ( 36 ) ) ) )),TABLE[1][Sansa],protect()),( rule() / rule(COLS) )) ) * -COLS ))){
	TABLE[x * rule(-0.18)][rule(( ( ( ( -630.846 ) ) ) ))]
} else {
	43;
	( ROWS );
	dog -= Ygritte
};
	x *= ---y / rule(0.54) - ( -ROWS );
	TABLE[TABLE[Ygritte / COLS][Arya]][-28]
}
};
	if(bar(protect() / -Stark * -betray(( Stark ),( TABLE[( COLS )][-( -bar(-( ( Hodor ) ),-1) )] )) + --Sansa * mislead())){
	Arya += destroy(COLS,( COLS + Hodor * -Arya ),12)
};
	dog -= ROWS
}
};
	if(20){
	Arya += -protect();
	if(-destroy(-destroy(75,-x + Jon))){
	TABLE[Arya][-ROWS] + ROWS / -destroy(-0.08,-1);
	--1 * x + COLS / Hodor
}
} else {
	Ygritte *= betray(35,( Stark )) / ROWS / bar(-83,Arya);
	ROWS;
	Stark /= -350.631
};
	Jon += ( protect(( -35 ),Ygritte) ) / Hodor
};
	if(( TABLE[COLS][ROWS] )){

} else {
	if(( ( 0.67 / y ) )){
	dog *= Sansa + 1
}
}
}
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = Sansa
var Hodor = TABLE[( -( -protect(rule(Hodor,-0.98,mislead(ROWS)),8) ) )][TABLE[-570.6][Jon]]
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,Arya){

}
def mislead(Stark){
	-Ygritte
}
var y = destroy(mislead(bar(ROWS,( ( ( 1 ) ) / -rule(-dog,TABLE[y][ROWS]) - y ),-1 * Jon) * rule(COLS) * Jon,rule()))
def TABLE[Hodor][j] {
	if(-betray(-ROWS,rule()) - rule()){

} else {
	-Hodor + bar() + 0.77 / mislead(y,-COLS,-15);
	if(( TABLE[( mislead(mislead(),-1) )][-1] / ( -380.6512 / bar(-( ( ROWS ) * -destroy(-0.8,-( TABLE[( -( 0.6 ) + 21 / -31 )][--ROWS * Ygritte] ) / TABLE[--foo(Jon)][( x )] + Arya + 1 + destroy(-Hodor) / --COLS * COLS + ( x ) - Hodor) )) ) )){
	Arya *= mislead(x);
	0.57
}
};
	if(-490.3){

} else {

}
}
def TABLE[bar(x,COLS)][j] {
	dog += ROWS;
	if(rule(Arya,( --( ROWS ) - -ROWS ),( -56 ) - -Hodor - Ygritte) - COLS / -0.14 / ROWS){
	Ygritte -= TABLE[-3][ROWS];
	mislead(( -dog * destroy(--TABLE[mislead(protect(foo(y * 52),0.38),( ( ( TABLE[y][Arya] + bar(Arya,-1 / -( Stark ) + y) - ( x ) ) ) ) * x) / -TABLE[bar(COLS,-0.15)][-0.82]][dog - ROWS * -0.46] / 1,foo()) ),( -ROWS ))
};
	Jon *= -200.7618
}
def mislead(x){

}
assert COLS / 1 + dog + COLS : "One can not simply parse himself"
def TABLE[-( mislead(--0.41 / TABLE[-12][COLS + --destroy(bar(TABLE[( mislead(( destroy(bar(( rule(protect(ROWS,COLS,COLS),1) ) - x,dog,x),betray(TABLE[38][-Hodor] / y)) )) )][rule(( -y ))],COLS),COLS)]) * bar(( bar(ROWS,betray(-0.5)) ),rule()) )][j] {
	Ygritte;
	TABLE[( y )][foo(--TABLE[-destroy(ROWS)][Ygritte],( -72 ))]
}
def destroy(x,Sansa){
	betray(( ( COLS ) - ( --( mislead(( ( COLS ) )) ) * COLS / ( -COLS ) ) ) + -96,( TABLE[----COLS][1] ));
	if(( -rule(-0.75) )){
	Hodor /= ( -70 - ROWS ) / -0.55 - rule(Hodor) - -57;
	if(rule(7)){
	( ROWS )
} else {
	dog /= -Stark;
	Sansa *= ROWS - -( -0.32 );
	Sansa -= Ygritte / ( ( ( ( ROWS ) ) ) )
};
	( ROWS )
} else {
	Arya -= 1;
	if(-210.1 - mislead(mislead(foo()))){

} else {

}
}
}
def TABLE[-Hodor - -650.772 + Jon][i] {
	if(-dog){
	foo(dog,-1) / ( -( ( --Hodor ) ) )
};
	Stark += 1
}
assert COLS : "Nothing burns like the cold."
var y = TABLE[( ROWS )][mislead(TABLE[-Stark][protect(protect(),( Jon + TABLE[Arya][( 1 * rule(rule(dog,( rule(TABLE[TABLE[( y )][--Sansa + -0.53 / ( ( -49 ) )]][TABLE[protect(y)][-TABLE[-0.14][-Stark - COLS * Jon] + Hodor]]) )),Hodor / --0.85 + -ROWS / -Arya,TABLE[-x - ROWS][( x )]) )] ))],( --8 ),--Stark)] + destroy(COLS)
assert -destroy() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(){

}
assert 0.73 : "One can not simply parse himself"
def protect(Jon,Sansa){

}
def protect(y,Stark,Arya){

}
var Sansa = --Ygritte
assert --( TABLE[( TABLE[ROWS][foo(rule(Sansa,-0.28),x - --y / TABLE[1][x] * ( COLS ) - ( dog ),-860.044)] )][-rule(COLS + ( Jon ) - COLS,( COLS ))] ) : "One can not simply parse himself"
def rule(Jon,dog){
	y += protect(bar(betray(),-( Stark )) * x,-0.06);
	Sansa -= ( 73 )
}
def mislead(Ygritte,y){
	Jon += rule(( Jon )) - ( ( -betray(( Ygritte ),( protect(( COLS )) )) ) );
	if(( protect(protect(Sansa,30),COLS,-foo(Sansa,( Hodor ) * --140.431)) )){
	if(--foo(Stark) + ( ( destroy(foo(1 - ( ( -ROWS / x + ROWS ) ) * TABLE[COLS][( -protect(bar(bar(-97 / COLS,360.981,ROWS),betray(-y,-( -0.54 )) * betray(11,( --TABLE[ROWS * ( ROWS * -870.1 )][---0.42] + -( ( COLS ) ) )) + protect() - ( -0.27 )),foo(COLS,70.082)) )] * rule(17,ROWS)),-27) ) ) / ROWS){
	( Hodor ) / -1 / -61;
	if(-Arya){
	if(--0.65){
	COLS
} else {
	protect();
	-ROWS
};
	x /= 53 / rule()
} else {

};
	if(Hodor){
	-( foo(5,-2) ) - -1;
	-0.38;
	Stark
} else {
	Ygritte += ( ( 0.58 ) )
}
}
}
}
def TABLE[-( x )][i] {
	Arya /= TABLE[y][-COLS]
}
var dog = ROWS
def TABLE[1][i] {
	Sansa *= -0.02 + COLS;
	-0.46
}
def TABLE[y][i] {
	Jon /= foo(--foo(-Stark,( COLS ),( bar(-58) ))) + Stark
}
def mislead(Ygritte,Ygritte){
	if(( ( -34 ) ) * Sansa){
	if(destroy(-0.26,--dog,Stark)){

} else {
	( destroy(destroy(ROWS,-31,( y )),--1) );
	if(-destroy(-830.17,x,( ( ROWS / -bar(--0.57) + ROWS ) )) / Hodor * -640.055 / -0.12 - -740.54 * betray(-320.148) - TABLE[COLS][--0.54 * ---0.3 * betray(-37,y + ( ( TABLE[-960][-1] ) )) - Stark * 51] - -0.41){
	Hodor /= ROWS;
	Sansa -= Jon
} else {
	0.93
}
};
	Stark += ( -32 );
	if(TABLE[-y][x]){

} else {
	dog
}
} else {
	Jon *= -1
};
	if(12){

} else {
	x /= bar(-0.51,( ( ( -( COLS ) + -62 * -( 93 ) * bar(89,y) - betray(-18) ) ) ))
}
}
assert Sansa : "Fear cuts deeper than swords."
def TABLE[-ROWS][j] {
	TABLE[COLS][destroy(Jon) - Jon];
	dog *= ---( TABLE[foo(bar(ROWS),-COLS) - ( ROWS )][0.84] ) + 1
}
assert ( ( 1 ) - ( protect(destroy()) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( TABLE[( -Hodor + betray(ROWS) )][-72 * ( ( ( foo(protect(),0.35 - -( 1 ) + -Sansa,rule(Arya,( ROWS )) * COLS) / COLS * ( foo(-6 * foo(betray(Sansa) - -0.21 * -x,( -690.9 ))) ) ) ) )] ) : "One can not simply parse himself"
def betray(){
	if(--43 - betray(--98) + -80.89 / rule(TABLE[( ( 86 ) * -( ( Ygritte * -Stark ) ) ) - ( foo(y) )][-( COLS )],-0.25 - TABLE[-betray(protect(TABLE[mislead()][Stark],x * ( ( x ) )),y,-0.92)][-TABLE[--( protect(COLS / COLS) )][Hodor]] / 900.237) + Sansa * y / Ygritte){
	if(-ROWS){
	Jon += x;
	if(TABLE[destroy(dog,-COLS)][Sansa]){
	if(mislead()){
	if(-31){
	if(rule(( mislead(destroy(mislead(),100 * COLS,Ygritte)) )) + 980.49 * TABLE[TABLE[TABLE[foo(destroy(TABLE[( -Stark )][bar()],destroy(-( ( -( betray(( Jon )) ) ) ),--rule()) - -( Stark )))][-ROWS]][-COLS]][betray(dog,Stark - 0.2 - TABLE[0.85][1])] - ROWS){
	( TABLE[Arya + -180.08][Arya] ) * -destroy(bar(-0.4,dog,80.8),-30.065);
	if(-390.1){

};
	( TABLE[( destroy(TABLE[Sansa * betray(betray(mislead(( Sansa * 560.63 ),Jon / Arya,-Arya)),( --y + Hodor + Hodor ) - ROWS)][bar(COLS,Hodor)],COLS) )][destroy(89,ROWS)] )
} else {

};
	( COLS - COLS * Stark )
};
	if(rule(TABLE[ROWS][COLS + foo(79,Ygritte,-61)],COLS)){
	y -= mislead()
} else {
	Hodor
};
	-120.23
} else {
	dog;
	ROWS
};
	if(Sansa){
	Stark += -TABLE[-16][92];
	( -ROWS / rule() )
}
};
	Arya *= TABLE[rule(( -protect(COLS,Sansa) ) / bar(-x,290.804)) * ( Hodor - -ROWS * Ygritte / -ROWS )][foo(Stark * ( 66 ))]
} else {

};
	foo(-protect(( -0.59 )) - Ygritte)
} else {

}
}
def protect(Sansa){
	if(ROWS){
	if(TABLE[TABLE[COLS][-1]][-betray(( 71 )) + dog * -dog / -0.08 * ( TABLE[Sansa][90] )] / rule(destroy())){
	Ygritte -= COLS;
	if(y){
	if(-foo(ROWS)){
	bar();
	betray(( ( mislead() - -66 - 12 / rule(( -230.84 )) - COLS ) ),foo());
	if(-( ( -280.016 ) )){
	if(-bar(ROWS,-0.81)){
	if(protect()){
	( 0.74 );
	if(protect(-mislead(),-Hodor)){
	if(( ROWS )){
	x += --39;
	if(ROWS){
	x /= ( TABLE[-0.58][-0.91] );
	if(--510.4 + TABLE[( -72 )][60]){
	x /= Jon;
	rule(bar(-0.31,( -1 ),TABLE[x][Stark * dog]) * Hodor) * COLS
}
} else {
	( --destroy(( mislead(Sansa) )) ) * 930.21;
	if(-COLS * ( 0.99 )){
	TABLE[( COLS )][( ---0.79 )];
	bar(ROWS)
}
};
	if(( ---0.32 )){
	x += 0.05;
	y /= x
} else {
	dog *= protect() + TABLE[( 0.68 )][Hodor]
}
};
	mislead(Stark,1,betray(foo(rule()))) / y
} else {
	if(y / ( betray() ) / -10 * ( ROWS )){
	Stark *= -rule(rule(( destroy(TABLE[TABLE[ROWS][Arya * TABLE[( dog ) / TABLE[betray(ROWS,97 / -TABLE[x][-310.54])][rule(( ( ( 94 ) ) ),-protect(TABLE[Stark / TABLE[betray(Sansa,-( -Arya ) * TABLE[-foo(1 - 0.66)][( 8 )])][COLS]][( TABLE[Ygritte][0.6] )]) + ( ( foo(dog) ) ) / ( ROWS ) + -1,Sansa + x)]][-( protect() / -Arya )]]][-COLS],Stark) - TABLE[Ygritte][1] )) - ( 69 )) + 221;
	550.5031 + ( Ygritte )
}
}
} else {
	Ygritte -= ( bar() );
	if(30){
	if(( Jon )){
	if(bar(ROWS,Arya)){
	0.95;
	Hodor -= ( COLS ) + -0.26
};
	Stark;
	Jon += ( -protect(rule(betray(foo(-47,( y ))),rule(mislead(bar(mislead(-ROWS,-COLS,-( protect(x,( ( dog ) ) * Hodor) ) - ROWS) / ( rule(( TABLE[ROWS][( Sansa ) - -8] ),y) )),Jon),mislead(Ygritte,x))),rule()) )
} else {

}
} else {

}
};
	if(( -( betray(Sansa) ) / betray() / 780.1504 + ( 1 * ( -59 ) * TABLE[( x )][220.1] - x ) )){
	Sansa /= COLS;
	if(mislead(( ( -1 ) ),TABLE[destroy(--( TABLE[COLS][Jon - 0.5 - --betray(( 1 * ( x ) )) / 430.39 * -720.169 / 26 + TABLE[( TABLE[ROWS][destroy(ROWS,Jon,bar(ROWS,Jon,mislead(0.44)))] ) / ( 0.85 )][dog]] ))][-0.52])){
	x -= ( Ygritte );
	Ygritte /= -0.96
}
};
	-protect(( ROWS ))
};
	Jon /= TABLE[( rule(-ROWS * bar(( ---bar(( mislead(Arya) ),ROWS) )),TABLE[ROWS - ROWS][destroy(-0.36)] - rule(73,( mislead(x) ))) )][ROWS];
	Ygritte += COLS
}
};
	Sansa += Arya;
	if(protect(TABLE[TABLE[Hodor][foo()]][betray(-y)])){
	Hodor /= TABLE[destroy(-( protect(mislead(-( 490.9 * 66 ),--Stark + protect(-COLS,TABLE[0.63][-bar(-foo() * mislead() + betray(-1) / COLS * 35,COLS)]))) ),-COLS)][betray(bar(Sansa) + 160.3379,COLS)];
	foo(ROWS,-0.81 + bar(-1) / 0.48);
	( ( -10 ) )
}
} else {
	y -= Sansa;
	Sansa *= mislead(COLS,COLS,-Ygritte)
}
}
} else {
	-61;
	if(( -y )){
	if(TABLE[dog][destroy(( Jon ),Arya,590.7)]){
	if(TABLE[430.9 + mislead()][TABLE[ROWS][mislead(-0.39)] + --1 / ( foo(-130.2) )]){
	--ROWS;
	if(y){
	x *= -370.657
} else {
	( dog )
}
};
	dog *= TABLE[( ( ( -0.08 ) ) )][( COLS )]
} else {
	-0.71 * ROWS / -1;
	Hodor *= rule();
	if(-COLS){
	if(-Ygritte){
	if(TABLE[x][-( -110.44 )]){
	-( ( 0.07 / x ) ) - 0.03;
	Arya /= Ygritte
} else {
	Stark -= -rule(( ROWS ));
	bar(Stark,Hodor);
	protect(x)
};
	TABLE[( 0.45 )][-0.88 - ( ( ( betray(TABLE[-26][( Ygritte )] + COLS,Ygritte) ) ) )];
	foo(( COLS ),1 / COLS + ( 560.01 + ( COLS ) ),580.4664) - ( -46 / ( -0.2 ) )
};
	Jon /= rule(-500.85)
} else {
	Sansa
}
}
} else {
	if(Stark){
	Arya /= -44
} else {
	if(-ROWS / ROWS){
	Jon /= Stark
}
};
	( -10 )
};
	if(-y){
	y -= -TABLE[betray(-( ( 180.47 ) ),Stark - Jon / Arya)][( y ) - Sansa - TABLE[0.33][( COLS )]] / -( bar(betray(-830.3,85,foo(bar(-5,-58) - Jon,-Ygritte)),41,-420.525) ) / ( bar(-780.38,bar(( ( Ygritte ) / 0.48 - -650.5 / betray() )),COLS) )
} else {
	x *= rule(-( foo(bar(COLS,TABLE[( ROWS )][-0.4]),Hodor,( protect(( y ) / -protect(TABLE[foo(-95)][COLS]),TABLE[-0.92 * -120.94 / -1][( Hodor )]) )) ) * ROWS / ( Stark ) / -450.6866 - -( destroy(COLS,940.24) ))
}
}
}
assert ( ROWS ) : "One can not simply parse himself"
def TABLE[TABLE[-( ( TABLE[( -0.01 )][betray(-900.52 - y,protect(---91,( --91 ),ROWS)) + protect(foo(),COLS)] ) )][0.52] - -Arya][j] {
	--( Hodor * -0.79 );
	if(rule(COLS,foo(-84))){
	if(TABLE[( COLS * ( Hodor ) )][ROWS]){

} else {

};
	Jon -= 6
}
}
var y = 79
var Ygritte = mislead(TABLE[-foo(( -y ),--betray(( ( COLS ) )),( mislead(-betray(-rule(-1,ROWS),1),y,mislead(TABLE[Stark][y],betray(( COLS )))) ))][protect(-destroy(ROWS,ROWS),TABLE[protect() / dog][COLS])])
var Stark = Arya
var y = -96
var y = ( mislead(-Hodor) )
def TABLE[Stark][j] {

}
assert Jon : "What do we say to the Lord of Death?"
var y = -0.84
assert --0.36 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(x,Stark){
	Hodor * ( ( y ) )
}
def mislead(Jon,dog){
	Stark += 210.9025;
	foo(bar(-protect(),( betray(-rule()) )),TABLE[Ygritte][( ROWS )] + ( TABLE[y][Arya] ))
}
assert ROWS : "One can not simply parse himself"
var Hodor = --0.07
def rule(Ygritte){
	if(-460.3037){
	if(protect()){

} else {
	x /= -1
};
	if(TABLE[Arya][-COLS]){
	y += COLS;
	Stark -= 350.374
} else {
	Sansa += -84;
	Sansa *= -Arya
}
}
}
var Hodor = ( 0.82 ) + 8
def TABLE[--60.9776][k] {
	COLS;
	if(y){
	if(COLS){
	if(TABLE[Arya][TABLE[Stark][( COLS ) * TABLE[COLS][mislead(0.4,COLS)] / destroy(foo(betray(( ( TABLE[COLS][--bar(0.31 - -490.9946) * Hodor] - mislead(-0.24,destroy(9,protect(84)),0.5) ) ))),( TABLE[y][( foo(mislead(betray(-23,protect(ROWS)))) ) / 0.12 - protect(-bar(protect(-64,Ygritte),( COLS ),( 50.227 ))) - -0.55] + COLS ),-29 / bar(1,-0.32))]] / ( ROWS )){
	destroy(protect(-dog,y,--270.858) + -0.37,protect(-89,foo(-Jon * 600.108,-0.37)));
	if(-0.26){
	if(( Arya )){
	COLS
};
	if(--betray(bar(-TABLE[Arya][ROWS],dog,Stark),COLS) - ( 0.4 )){
	y -= Jon;
	if(--( Sansa )){
	if(Jon){
	if(Hodor){
	ROWS;
	Hodor += y + ( -59 )
} else {
	-TABLE[-0.54][-1] / Stark;
	Ygritte *= -( Stark )
}
} else {
	Jon;
	450.25;
	Hodor += 88
};
	-dog
};
	if(ROWS){

}
}
} else {
	if(dog){
	TABLE[COLS][( ( -destroy(0) ) )];
	TABLE[TABLE[bar(TABLE[-dog][foo(dog,Ygritte)],33,dog) / mislead()][1]][Stark]
}
}
}
} else {
	if(ROWS){
	if(destroy(-( dog ),Stark + 52 - dog)){
	if(( rule(dog,-0.59,protect(Arya,TABLE[Stark][Jon]) * -60 / ROWS) + -70 )){
	( 0.75 );
	Arya /= Jon
} else {
	--81;
	Stark *= foo()
};
	Hodor -= -690.6338
};
	COLS;
	y
} else {

};
	570.6;
	if(ROWS + -( ( -0.56 ) ) + TABLE[( COLS )][y + COLS * ( mislead() )]){
	Ygritte /= 0.73;
	x += rule(rule(COLS + -1 * -1 * mislead(mislead(-770.6,-bar(foo(-( ( -destroy(-800.42,7) ) ),( -( ROWS ) + protect(-( TABLE[Sansa][54] ),bar(Sansa,( dog )),( Stark )) ),TABLE[-1][-COLS * -0.65])) / ( protect(( ( ( --betray(TABLE[( -1 ) / COLS][( mislead(destroy(),foo(--1 * -1)) )],Hodor,-rule()) ) ) )) ) - -66),ROWS) * y,foo(-( destroy() ))),Arya)
} else {
	if(mislead(( ROWS ),ROWS)){
	Sansa /= TABLE[490.423 + mislead(Stark) - --( -1 ) - ( y ) + -0.89 - -52][-1];
	Ygritte += -0.03;
	if(Hodor){
	6 + Sansa;
	if(( -380.3 / ( COLS ) )){

} else {
	destroy(-90.4547)
}
}
};
	Sansa /= 0.69
}
};
	x -= COLS
};
	( -TABLE[ROWS][foo(rule(mislead(Sansa)),COLS)] )
}
var y = -1
var x = -1
def TABLE[( COLS )][j] {
	if(( rule(foo(( bar() ),81)) )){
	if(-0.34){
	destroy(mislead(ROWS * protect(( ROWS )),protect()),ROWS / -( -ROWS ))
} else {
	if(y){
	Ygritte *= dog;
	Jon /= ( ROWS )
};
	betray(rule(-0.29 / dog),-45,Stark)
};
	Stark -= COLS;
	-1 / -protect(-82,TABLE[-91 - ROWS][ROWS],-19)
} else {
	Sansa /= ( destroy(Ygritte) + -0.82 );
	ROWS
};
	if(x){
	if(betray()){
	Arya;
	Stark *= ( -( -0.8 * 640.28 ) * ( Stark ) );
	if(rule(bar(dog) * -betray())){
	if(foo()){
	y /= -x + mislead(-COLS,-0.01) * betray(protect(-COLS,betray(( COLS ),TABLE[1][-rule(16) - ( -dog / Arya / Arya - dog )])));
	Hodor -= bar(-Stark);
	Hodor /= dog
};
	dog *= -0.67
} else {
	if(Hodor){
	dog += ( --32 )
} else {
	if(foo(( ( ----Stark ) ),destroy(foo(Hodor / Jon),-69),COLS)){
	if(( 1 )){
	( ( -0.44 ) );
	Arya -= ( destroy(bar(betray(),mislead(COLS,Jon,-( ( bar() ) )) * -( ( -8 ) ),-destroy(foo(foo(-1,Stark) - Ygritte,600.2 / TABLE[-89 / 0.95 + -rule(COLS,-mislead(1,( ( destroy(-0.41) ) ),protect()))][Sansa])))) )
} else {
	Stark;
	COLS
};
	Sansa += Jon
}
}
}
} else {
	if(( Sansa + ( ( Ygritte ) ) )){
	-ROWS;
	if(-92){
	x += ( --0.86 )
}
}
}
} else {

}
}
var Ygritte = 97 + dog
assert Stark : "Nothing burns like the cold."
var Sansa = 0.53
var Hodor = -67
assert -( ( 4 ) ) : "Nothing burns like the cold."
def TABLE[mislead(( COLS ))][k] {
	-rule(49) * ( ( ( -betray(Ygritte,Hodor) * -20 ) ) );
	if(-( ( -dog + -( betray(-TABLE[-0.46][rule()]) ) ) )){
	dog /= -TABLE[Jon][bar()];
	( -98 )
} else {
	if(TABLE[( rule() )][protect(( dog ))]){

};
	-mislead(TABLE[80.2][( ( Jon ) )]);
	( TABLE[( destroy(( Stark - dog ) + ( ROWS ) / ( ( Stark ) ),( ( protect(-rule(bar(COLS,1)),TABLE[( 100.2877 )][x]) * y ) ) * -mislead(foo(-1,destroy(Arya,mislead(dog,-460.624))))) )][TABLE[810.3][Arya]] ) + ( -Arya )
};
	dog -= ROWS
}
def TABLE[( Hodor )][j] {
	y += -210.4;
	if(y){
	if(-bar(destroy(ROWS),protect(-1,Sansa),( -Jon * ( ROWS ) ) + dog)){
	if(Jon){

};
	if(ROWS){

} else {
	if(-ROWS){
	if(Hodor){
	Sansa *= TABLE[( y / destroy(TABLE[( protect(destroy(-7,Sansa)) )][--Stark]) * rule(-ROWS,-Ygritte / x,--67) )][1];
	if(Stark){
	bar(Stark,710.3) + mislead(( ( protect(( dog ) - ( ( foo(940.4813,rule(),( ROWS )) ) ),0.13,y) ) + ---94 ),ROWS)
} else {

}
} else {
	if(COLS){
	dog *= 0.93;
	Stark *= ROWS
};
	if(-COLS){
	Hodor /= ( Hodor )
} else {
	mislead(ROWS,Arya,( Jon ));
	if(Jon + ( Hodor )){
	x *= -Arya;
	Jon *= TABLE[dog][-ROWS] / -TABLE[-Arya][Stark] + ( ROWS );
	if(-bar(-620.065,rule(ROWS,-96),ROWS)){
	if(foo(( x ) + --Arya,x)){
	Stark /= betray(ROWS,--0.83);
	rule(-1,betray(),--870.68)
}
} else {
	y += rule();
	y *= -59
}
}
}
}
} else {
	dog /= ( -destroy(ROWS,ROWS,foo(-0.14,TABLE[-rule(Ygritte) * bar(mislead())][Hodor]) - COLS) )
}
};
	if(( ( Sansa ) )){
	Ygritte /= dog;
	Arya += 710.253;
	protect(COLS,21) - COLS
}
} else {
	mislead(mislead(( mislead(COLS,--dog - COLS) ),protect(( -y ) / Arya,ROWS)),--0.6,1)
};
	x *= ( foo(( Stark ),0.69) );
	if(( protect(Jon) )){
	Hodor += COLS
}
}
}
assert -( -0.78 ) : "What do we say to the Lord of Death?"
def TABLE[( COLS / Jon )][j] {
	if(( y ) / TABLE[0.92][foo(( foo(COLS / ROWS,--0.73 * Sansa,rule(Sansa,( ( --0.35 ) ))) ),-( rule(0,Hodor,ROWS) ))]){
	if(48){
	if(86){
	ROWS + ( Arya - bar() ) / destroy(( destroy(-Jon / betray(betray(),-( Stark ))) ) - -0.16)
} else {
	ROWS;
	dog /= -( -0.01 );
	dog += betray(x - --ROWS / betray(--7,( -Sansa )) - ( -COLS ) * ( TABLE[--Ygritte - ( 98 ) / y][COLS] ) - Jon * 0.8 * Jon / ( ( -TABLE[--Stark / Jon][( -Sansa )] ) ) + Jon,-bar(Stark,( rule(-( -( dog * dog ) ),--x + Stark) ))) + Arya
}
} else {
	Hodor /= --31 + -Sansa;
	ROWS;
	Stark += ( -destroy(rule(foo(0.47) / -23)) )
};
	y
} else {
	( -0.67 ) * 93
};
	if(ROWS + -COLS * dog - ( bar(ROWS) ) - ( ( -( COLS ) ) )){
	mislead();
	Stark *= TABLE[ROWS][-540.1];
	if(foo()){
	650.8;
	COLS
}
}
}
def TABLE[Arya * Arya][i] {
	Hodor *= ( -----460.032 )
}
assert ROWS : "Nothing burns like the cold."
var Ygritte = -( -mislead() - ( ( COLS ) ) )
assert COLS : "What do we say to the Lord of Death?"
def mislead(x){

}
def TABLE[COLS][k] {

}
def foo(Ygritte){
	-COLS / -( -940.311 )
}
assert Jon : "One can not simply parse himself"
var y = 96
assert ( Ygritte ) : "What do we say to the Lord of Death?"
def TABLE[Hodor][k] {

}
def bar(Arya,Arya){
	( 44 );
	foo(TABLE[-12][Ygritte],36)
}
def betray(Hodor){
	Sansa += dog;
	-0.47
}
assert 0.27 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(--Arya,( --950.78 ))][j] {
	Jon /= TABLE[bar(600.56)][-bar(dog,protect()) * mislead(56)];
	if(Hodor){
	if(COLS){

} else {

};
	y *= -0.44
};
	( ----0.43 )
}
var Arya = ROWS - ROWS
def destroy(Sansa,Ygritte,Ygritte){

}
def mislead(dog,Stark){
	Stark += -1
}
var Arya = ROWS
var x = ( y - 180.16 )
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 260.36 : "Nothing burns like the cold."
var Hodor = TABLE[destroy(0.66)][-1] - -610.3
def TABLE[y][j] {
	if(550.3){
	if(( dog )){
	dog;
	Jon;
	-( protect(( -betray(rule(-ROWS) / foo(),Sansa) ),TABLE[Hodor][-0.99]) )
} else {
	Ygritte /= betray(Stark * -dog,COLS)
}
}
}
def foo(y,Hodor,Arya){
	Stark *= destroy(TABLE[( ( destroy(betray(( dog ),mislead(betray(1,destroy(),( ( COLS ) )),betray()) - ( -0.56 ) / protect(-71,-0.71 - -bar(-( betray(Arya) ) / destroy(ROWS) - -0.18 - 1,( ( ( COLS ) ) - 0.46 ),foo()) * ( TABLE[COLS][-11 / ROWS - foo(( -( -1 ) ))] )) / ( y ) * -COLS) - -94,( COLS )) ) )][( Arya ) * -ROWS + ( ( rule(( dog ) * -( -1 / ( betray(ROWS) ) )) ) ) + Jon],betray(--( -( TABLE[-x][Stark] ) / ( ( Hodor ) ) + Hodor ),COLS,0))
}
def bar(Ygritte,Hodor,dog){
	( 1 );
	betray(dog,destroy(( 0.57 ),1));
	if(( 65 )){

}
}
var Jon = ( COLS )
def betray(dog,Jon){
	Ygritte -= ROWS
}
var Stark = ( mislead() - --( 43 ) ) + bar(-0.35)
assert ROWS : "Nothing burns like the cold."
def destroy(Hodor){
	Sansa -= 12;
	Stark /= Sansa;
	if(-foo()){
	Hodor - COLS;
	foo(x,Ygritte,0.04);
	if(( y )){
	if(Hodor){

}
} else {

}
}
}
assert mislead(betray(COLS,( ( rule(( ROWS ),( Hodor ) * ( ROWS )) ) ))) : "One can not simply parse himself"
def bar(Jon,Jon){
	Jon += 50
}
def betray(x,Arya){
	if(y){
	Ygritte;
	if(Sansa - --0.31 / -TABLE[betray(COLS,-dog + ( foo(87,ROWS) ))][( -270.1 )]){
	-protect(Sansa * -( ROWS ) / -( ( y ) ),rule(0 * COLS * Jon,-19 - destroy(TABLE[-rule(Sansa)][TABLE[Arya][Stark]],-( Stark ) + -betray(COLS,dog) - dog),mislead(COLS))) / 411
} else {

}
}
}
assert -460.759 / destroy(( ( Arya ) )) * 1 : "Nothing burns like the cold."
var Arya = --91
def mislead(){
	if(Stark){
	--foo(destroy(ROWS));
	if(( -70 )){
	( Stark )
}
};
	Jon += -0.63;
	Arya /= protect(-TABLE[-ROWS][( 1 )] + ROWS + ROWS,-0.75)
}
def TABLE[-1][i] {
	Jon + -( Arya + COLS ) / -0.06
}
assert -y : "One can not simply parse himself"
def foo(Hodor,Arya){
	Sansa += betray(Hodor,ROWS) * 1;
	if(Sansa){
	Ygritte *= rule(( -Jon - -Sansa ),--bar(bar(ROWS,-24) - dog,( COLS )),-750.96)
} else {
	if(ROWS){
	Arya -= protect(foo());
	17
} else {
	if(-TABLE[-destroy(-( ( Arya ) / -destroy() ),1)][1]){
	Jon;
	if(Stark){
	if(-betray(dog * ( Stark ),---94)){
	ROWS
} else {
	protect(0.05,( ( TABLE[TABLE[Sansa * mislead(-51)][-43]][1] ) ))
};
	Sansa *= TABLE[850.3046][( -dog )]
} else {

};
	Ygritte /= betray(betray(bar(140.7,y),mislead(TABLE[( -0.39 )][Arya],-0.25)),-1)
} else {
	Arya -= ( bar(( -70 - Hodor ),ROWS) ) + dog;
	Sansa -= ( betray(y) )
};
	Stark *= -( Sansa + -12 * TABLE[mislead(Hodor,( COLS ))][protect(ROWS) / -COLS] + foo(( TABLE[Stark + COLS - TABLE[foo()][0.99]][COLS / foo(89 / x - Sansa) + 74 - Stark] ) + COLS - ( --1 ),betray(bar(),( ( -foo(COLS,Jon + ROWS) ) ),bar(( ROWS )))) )
};
	( -( dog ) );
	-y + ROWS * ( -x )
};
	Ygritte -= 0.4
}
var Hodor = --720.241
def destroy(Jon){
	if(-bar(foo(-200.694) / Stark)){
	-0.88
};
	y /= 0.5 - ( -Jon ) - 53 - ( x ) + -0.38 - bar(Sansa);
	if(COLS){
	Ygritte /= Jon - rule() * mislead(( ROWS ));
	Arya += Jon
} else {
	Sansa *= -0.67;
	Arya -= COLS
}
}
assert ( ( dog ) ) : "One can not simply parse himself"
def TABLE[Arya][k] {
	dog -= rule(TABLE[Sansa][destroy(10,( y * x / bar(Stark,-foo(ROWS),-( -6 )) ) / Sansa) - x]) / foo(TABLE[mislead()][( dog )] + ( betray(---52 * COLS,mislead(( ( TABLE[-1][-COLS] ) )),ROWS) ),destroy(ROWS / --700.576,-69 - TABLE[0.12 / -TABLE[Ygritte * ( betray() )][0.32 + 0.69] * ( --TABLE[-0.25][x] * ( rule(x * Hodor * -dog,( COLS ),destroy(( rule(( 760.474 ),bar(betray(Jon),-( ( destroy() ) ) - -1,-x)) ),dog,-76)) ) * ROWS )][-TABLE[protect()][Jon]])) - ( betray(Sansa) ) / ( TABLE[ROWS][rule(-( 1 ) * -ROWS,COLS)] )
}
var Sansa = foo(ROWS - mislead(),-mislead(COLS) / rule(rule(Arya,64 + ( ( ( y ) ) ) - Stark * Jon),bar(-ROWS) / -0.94 - ( COLS )))
assert rule(betray(dog),rule(bar(),TABLE[Hodor][Hodor],ROWS)) : "One can not simply parse himself"
var Ygritte = ( -betray(-0.31 + bar(-13,ROWS)) + -1 - ( ( COLS ) ) / -Jon )
def TABLE[-Hodor][k] {
	Sansa += -ROWS;
	if(destroy()){
	if(destroy(86) + betray(16,7,( Jon ))){
	bar(( -ROWS ),COLS,( Hodor ) * ROWS + TABLE[( -51 )][x + ( Jon + Ygritte )]);
	1 - ROWS
} else {
	Jon /= -32;
	if(-1){
	ROWS / ( -0.6 - 0.11 / Sansa );
	( -0.47 )
} else {
	if(ROWS){
	Ygritte *= rule(Sansa + Arya / mislead(Ygritte,Ygritte * COLS,y / ( Ygritte )),0.66,( rule(TABLE[COLS][betray(Hodor,dog)],( rule(( ( TABLE[rule(( ROWS ) * -x,Jon)][-x] ) ),--betray(Sansa,( y )) / -64,-0.69) )) ));
	Sansa += -65
} else {
	if(Arya){
	if(-Ygritte){

};
	dog -= 43;
	-94
};
	Hodor;
	ROWS
};
	if(( Hodor + -dog )){

}
}
}
} else {

};
	x += bar(COLS)
}
def bar(Arya,y){
	x;
	Ygritte *= --31
}
assert -0.5 : "What do we say to the Lord of Death?"
def TABLE[ROWS - 810.22][i] {

}
def TABLE[-( COLS ) * protect(Arya,( foo(( -TABLE[y][( -destroy() )] )) )) - 76][j] {
	if(betray(0.69)){

};
	Jon *= dog
}
def TABLE[-ROWS][j] {
	if(protect(-( -( -Ygritte ) ) + COLS / 45,-( mislead(dog,x) ) + -rule(( COLS / ( ( ( ROWS ) ) * -0.27 ) ),( ( ROWS ) + ( x ) ),rule()))){
	y += ( dog + -Hodor )
}
}
def bar(Sansa,Sansa){
	if(protect(protect(0.75,-1),0.98)){
	if(Sansa){
	Stark
} else {
	if(-0.67){
	-81 / y
}
};
	y += rule(-mislead(--Hodor) - bar(-210.4) / ( dog ))
};
	if(-TABLE[Ygritte][-36] * ( 4 )){

} else {
	if(Ygritte){
	Hodor *= ROWS
}
};
	if(Jon){

}
}
def mislead(Arya,dog){
	destroy(-destroy(),bar(betray(TABLE[rule(1,rule())][TABLE[-COLS][-foo(TABLE[44][betray(-0.61 * --( 470.645 ),TABLE[COLS / 0.29][-1],rule(foo(foo(-betray(TABLE[( ROWS )][-COLS] - ( destroy(-x,( bar(x) ),bar(1) * 0.91) ),-97),Arya,-1))))] - -17 - COLS * ( foo(Sansa,( ( -Sansa / COLS ) + TABLE[( -Ygritte )][x] ) / Stark) ))] + 32 / ( Jon )],TABLE[-39 * 1][foo(( ( mislead() ) ),COLS)],-dog),( COLS ) * protect(TABLE[foo(-0.61)][( --( bar(ROWS,dog,-0.39 / TABLE[-x / ROWS * COLS][( -mislead(Stark) - y )]) ) / -( ( -betray(( COLS ),-1,destroy(-0.77)) * --0.26 ) ) )],( destroy(0.56,TABLE[bar()][bar(COLS)]) ))));
	x *= -53
}
assert -87 : "What do we say to the Lord of Death?"
var Hodor = y
var x = --0.22 + -bar(-26,TABLE[Ygritte][-20])
assert -COLS * ROWS : "What do we say to the Lord of Death?"
assert -( ( --0.75 ) * Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Arya){
	-22;
	if(0.51){
	Sansa += --45;
	TABLE[TABLE[ROWS][Sansa]][( -destroy(COLS,-TABLE[-Sansa / ( 1 )][-22],1 + Sansa) * 0.35 )];
	Ygritte /= TABLE[Hodor][( -( betray(( destroy(bar() / foo(-93,-17),-( rule(( Hodor )) )) ),TABLE[y - ( Sansa )][Arya],betray(foo(( -1 ),dog)) * dog + ( ( y ) ) - Hodor) ) * -( rule(300.86,--1) ) + 0.39 - y / -37 )]
}
}
var Stark = bar(rule(-( protect(TABLE[Ygritte - ( 820.837 )][COLS]) - COLS ),-Stark),rule(-dog,TABLE[0.03][--0.83]),Sansa / 24)
assert TABLE[COLS][Hodor] : "Nothing burns like the cold."
var Stark = ( y )
var Arya = foo(( dog ),ROWS)
def TABLE[COLS][k] {
	Ygritte;
	if(Sansa + -220.3253){
	if(Hodor){
	if(foo(COLS)){
	( -14 );
	--1;
	Ygritte += ( ROWS )
}
}
};
	36
}
def TABLE[-Jon - --250.696 / COLS][j] {
	if(-bar(( -y ),( 1 / Arya ),-63 / ( -ROWS + --foo(( ROWS )) ))){

} else {
	if(Stark){

} else {
	dog -= -( ( ( betray(-1) ) ) );
	Arya + TABLE[-Sansa][-0.89 + ( TABLE[TABLE[0.67][-1]][COLS] )];
	if(-( ( ( mislead(-TABLE[-0.12][mislead(Ygritte)] / y / -rule()) ) - Sansa ) - 0.35 ) + 350.4739){
	TABLE[930.019][0.97]
} else {
	if(ROWS){
	Arya /= -TABLE[betray(x) / dog - ROWS - -TABLE[mislead(( ( COLS ) ),( ROWS ))][dog]][bar(dog,-Hodor) + protect(COLS) * ( Ygritte ) + COLS] - Ygritte * COLS * -COLS;
	if(TABLE[-0.97][-y]){
	( bar(Ygritte + COLS) * COLS ) / -3;
	Arya += rule(bar(( bar(( -830.44 ),( -49 )) ),( Ygritte )),--bar(TABLE[ROWS / y][( TABLE[77][1] ) - 71],betray(--1,-( 0.66 ))) + COLS)
}
};
	Stark;
	-( rule(-dog) )
}
};
	Arya;
	if(-mislead(--25,--1)){

} else {
	if(Hodor){

} else {
	y *= ( ( ROWS ) );
	if(0.48){
	ROWS;
	Ygritte -= 0.34
}
};
	Arya *= -Stark
}
};
	( y );
	x *= -90
}
def TABLE[86][k] {
	if(( betray(foo(Jon)) )){
	if(protect(-( TABLE[destroy(Hodor,mislead(( TABLE[Arya][ROWS] )))][( ROWS )] - ROWS ))){
	y += mislead()
};
	--( TABLE[-140.4606 * -x - ( 750.928 )][TABLE[-( ( ROWS + -940.415 ) )][--1]] );
	if(-protect(ROWS,rule(TABLE[0.08][TABLE[Stark][Sansa]] / ROWS,mislead(Stark - mislead(62 / destroy(betray() / destroy(Hodor,1) - destroy(-29,destroy(rule(Sansa,-42))) / Ygritte),foo(1,protect(( -1 + 1 * 1 ) - Jon),-TABLE[betray(ROWS)][( 19 )]))),Ygritte + foo(-1)))){
	--67;
	Sansa /= COLS;
	Arya *= dog
}
}
}
def TABLE[-( Arya )][j] {
	if(x){
	if(-700.5419){
	-( foo() ) - -Stark - TABLE[-42][-TABLE[Ygritte][destroy(TABLE[( ( --( -dog ) * mislead(rule(dog,( ( COLS + ROWS ) ),--1),( ROWS ) - --0.51) / ( ( 0.58 ) ) ) )][-Hodor * COLS],-0.79) / ( Jon - ( -( ( mislead(( dog ),bar(( destroy(--1) ),( rule() * ( 36 ) ))) ) ) ) / Sansa )]]
} else {
	if(-x + COLS){
	destroy(( ( -COLS / ROWS ) ),-10,COLS);
	if(-COLS){

} else {
	if(( betray(( Hodor )) * -0.85 )){
	-0.78
} else {
	if(rule(TABLE[Stark][destroy(--COLS + -Ygritte)],ROWS)){
	TABLE[TABLE[-TABLE[protect()][-COLS]][mislead(mislead(ROWS),( mislead(( COLS )) ))]][( -73 )];
	y /= y;
	Hodor += Jon
};
	if(-370.6 * -1){
	-0.48
} else {
	Stark -= Sansa;
	x /= -COLS * -Ygritte;
	if(( -COLS )){
	if(x){
	x += foo(--COLS,protect(1));
	COLS * bar(Arya,Arya)
}
}
}
};
	Jon *= rule(32);
	TABLE[--( 23 )][( --TABLE[TABLE[-1][protect(TABLE[rule()][( foo(Jon,---920.57,COLS) - rule(-Hodor,38) + Ygritte )] * -0.68,74)]][-Ygritte] + x / 1 + ( -0.66 ) ) + 1 + -ROWS]
};
	dog /= 0.88
}
};
	Hodor
};
	mislead(Sansa,x * ROWS - ( --ROWS ))
}
def betray(Hodor,Arya){
	TABLE[protect(( TABLE[COLS][-0.72] ),-0.11)][rule(( TABLE[Jon][TABLE[10][TABLE[180.4][650.16]]] ),22)]
}
var Arya = -foo(COLS / destroy(--0.58,Hodor,( 85 )),COLS / -betray(( -1 * 0.48 * 570.67 ))) - ( rule(-y) )
def TABLE[COLS][i] {
	--y / ROWS;
	x += ( foo(--970.43 - TABLE[mislead()][Hodor],protect(TABLE[Stark - -560.6][-1],Arya),COLS) )
}
def protect(Hodor,Stark){
	if(22){
	Hodor -= 0.39;
	y *= -39
};
	if(bar(COLS * -betray(( 0.2 ),ROWS / COLS * -0.97),dog + -ROWS / x,-90.42)){
	Sansa;
	Hodor *= ( -Jon )
}
}
assert -410.9 + -destroy(Hodor,43) : "Winter is coming"
assert -660.9 : "Winter is coming"
assert rule(COLS,rule(-y) / betray(Ygritte,( ( ( 0.14 + Stark ) * -( ( 67 ) + -COLS / ( Stark / Arya ) + ( -77 ) ) ) )) * ( ( -9 ) * Stark ) + Stark,( COLS + TABLE[ROWS / -89][Stark] )) : "One can not simply parse himself"
assert COLS : "Winter is coming"
var Arya = mislead(( ( --( -0.94 + COLS ) * TABLE[( bar(betray(betray(-TABLE[COLS / TABLE[destroy(Stark,ROWS)][-91 / -1 + -53]][protect(--1)]) * -1)) )][-bar()] ) ),-rule() - Jon)
def TABLE[Sansa][i] {
	if(Hodor / -x){
	if(0.85){
	if(23){

} else {
	-Sansa * ---mislead(-33,( --TABLE[-( Arya )][-x - Arya - foo(destroy(destroy(-90,-x,-COLS))) / 6 * Jon] * foo(( ( -1 ) )) ));
	Ygritte *= Hodor / -( ( ( destroy(Arya + y,-Arya) ) ) / Hodor )
};
	-( TABLE[( ( ( y / Sansa ) + 1 / protect(Sansa + -Hodor) - -Ygritte ) )][0.18] )
} else {
	-39;
	Arya
};
	Stark *= bar(( 0.09 ),COLS,79 * Sansa) / COLS;
	Stark *= 63
}
}
def TABLE[( 1 )][i] {
	Arya += COLS;
	if(Hodor){
	TABLE[-COLS + 1 + ( -70 )][ROWS] + -( x );
	-1 / -( COLS )
} else {
	if(-300){

};
	if(ROWS){
	Stark *= Ygritte;
	( -48 )
};
	-47
}
}
var dog = TABLE[-670.1][foo(betray(( 780.16 / ---1 )),-1 + ( ( --Ygritte / ( --1 ) ) + Jon )) * Arya]
assert 0.85 : "Winter is coming"
assert 89 : "Fear cuts deeper than swords."
assert mislead(COLS) : "One can not simply parse himself"
def protect(){
	if(( -86 )){
	y /= -0.8 * ( 750.53 - -3 );
	( ROWS )
};
	Jon += -1;
	--190.226 * Ygritte
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[-ROWS][i] {

}
def TABLE[1][k] {
	dog -= ROWS;
	Arya -= -rule(-93,protect(-30,Sansa))
}
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = 0.1
var Arya = ROWS
var Arya = Hodor
assert --90 : "Winter is coming"
def betray(Arya,dog){
	if(Arya){
	Stark += 0
} else {
	Jon += ( COLS )
};
	x *= bar(destroy(( COLS ),-x - -( 540.792 ) - y),ROWS,( mislead(ROWS + COLS * ROWS + ( x ) * betray(-protect(( destroy(TABLE[Jon][---x / -( x )],ROWS + mislead(COLS / ( y ))) )))) ))
}
assert -mislead() : "Winter is coming"
def TABLE[foo()][k] {

}
def rule(Arya,Hodor){

}
def TABLE[-0.43][k] {
	Ygritte -= mislead();
	if(( COLS )){
	if(-Arya * betray(Jon)){
	( rule(x) ) * ( dog );
	40
} else {
	Stark *= TABLE[Jon][( -COLS )];
	Arya -= -660.6181
};
	Jon *= ( ROWS );
	Jon -= COLS
} else {
	-32
}
}
var Arya = destroy(( dog ),-1 + -0.55)
assert TABLE[betray(( ( 19 - Sansa ) ),Ygritte,COLS) - bar(rule(Arya,( COLS )),COLS) / 630.151][Sansa] * bar() * TABLE[mislead(ROWS,-protect(Jon,( -0.36 )) - rule(ROWS * 0.57) * -betray(foo(( -COLS ))),mislead(TABLE[( foo(COLS,( x ) * ( COLS )) )][( COLS - ( dog / -0.76 ) / -x )],-COLS,y))][-720.495] : "Nothing burns like the cold."
assert rule(27,-120.54,COLS - y) - Sansa / -60 : "Fear cuts deeper than swords."
assert ROWS : "What do we say to the Lord of Death?"
assert foo(( ( -1 ) ) / COLS) : "Fear cuts deeper than swords."
def destroy(){
	( betray(ROWS) ) - 3 * Sansa;
	Arya += ROWS
}
assert ( protect(( x ),-0.21) + ( COLS ) ) : "One can not simply parse himself"
var x = ( -TABLE[( ( Hodor ) )][ROWS] )
def TABLE[-betray() + ( Sansa / --( ( ROWS ) ) )][j] {
	if(TABLE[y][bar()]){
	if(Stark * ( --( bar(-0.64 + ( 1 ) * rule(ROWS,bar(COLS,520.47,-54 + -14 / --protect()) * mislead(( destroy(0.13,Sansa) ),0.43,ROWS)) * --1 * TABLE[0.88][TABLE[ROWS][TABLE[-TABLE[Arya][rule() + -0.14 - destroy(COLS,ROWS,TABLE[COLS / betray(Stark,--46) * Ygritte / 50.24][bar(( Sansa ) - -( --420.1 ),Sansa)])]][( protect(--52 * y,-( 28 )) )]]]) ) * Hodor )){
	Arya *= ( -9 );
	y += 39
} else {
	( y )
};
	39;
	ROWS
} else {
	Stark /= bar(protect(34),( --0.94 ) - Ygritte,( -( ( Jon ) ) / ( TABLE[x][destroy(-destroy(),( ROWS ))] ) ))
};
	bar(-0.28,y)
}
def TABLE[-COLS][j] {
	x += Hodor;
	TABLE[TABLE[-430.0741][( COLS )] - TABLE[ROWS * -0.06 / ( --Stark ) * --COLS - Stark * -Arya / ROWS][-Sansa]][0.7];
	if(Hodor * ( -COLS )){
	rule(-Stark,foo(ROWS),--1 + mislead(( TABLE[ROWS + 0.88][Arya] - COLS )));
	if(dog - Arya / ( --Hodor )){
	-Jon;
	Sansa
}
} else {
	( TABLE[( protect(TABLE[( ( destroy(( bar(-33 + 1) ) / COLS,ROWS) ) )][0.21 / -Stark],-340.738) / foo() )][betray(971)] * ( Ygritte ) )
}
}
var x = betray(dog,( -x * 1 * -betray(ROWS) ) + Ygritte)
var y = ( -bar(( --85 ) + Ygritte,ROWS / ROWS * -13 + Hodor * 1 / ( ( ( ROWS ) ) )) )
def bar(){
	Ygritte -= -400.678 - -TABLE[( -0.76 )][-30];
	if(-( COLS )){
	x += betray();
	0.54
} else {
	if(--1){
	Hodor /= foo()
} else {

};
	Arya -= --0.92
}
}
def TABLE[TABLE[ROWS / 5][COLS]][k] {
	if(ROWS){
	mislead(ROWS) / ( ( Sansa ) );
	if(destroy(-dog,Jon)){
	-1;
	Ygritte /= ( y + -74 )
}
} else {
	if(-dog){
	Stark
} else {
	Hodor *= Jon;
	Jon *= COLS;
	if(x){
	if(Jon){
	( 0.22 );
	450.9027
} else {
	Ygritte += ( destroy(COLS,-15) )
}
} else {
	Stark /= ROWS;
	bar(ROWS,Arya - x)
}
}
}
}
def destroy(y,Jon,Stark){
	Sansa -= ( foo(( Stark ),( mislead(TABLE[TABLE[dog][---( 840.281 )]][---0.34]) )) * mislead(( x ) - ( ROWS )) );
	if(( ROWS ) + ( -ROWS ) - y){
	COLS;
	if(dog){
	if(-1){
	Sansa /= ROWS;
	Arya /= dog / bar();
	--0.34
};
	Sansa += Ygritte;
	87
}
} else {
	y += ( Jon );
	( COLS );
	if(Sansa){
	Jon += -89;
	y -= TABLE[-Jon][dog]
} else {
	if(x){
	Hodor /= y
};
	if(dog + 36){
	if(Arya){
	y -= 1;
	Arya -= ( Jon - COLS );
	if(-Arya / ( COLS )){

}
};
	-COLS
}
}
};
	if(( x * Stark ) - -Sansa - rule(-Stark) * 470.6){
	if(-0.2 * Ygritte){
	if(-Stark){
	-36;
	Sansa += ROWS
} else {
	if(destroy(-ROWS,y)){
	x += Stark;
	Jon *= ( --0.05 )
};
	COLS
}
} else {
	Stark *= rule(810.4,( -0.54 + Ygritte ))
};
	if(-38){

} else {
	dog /= -( --0.28 )
}
} else {
	Jon /= COLS / -Jon
}
}
var x = -protect(Arya)
def mislead(Arya,Ygritte,Ygritte){
	if(ROWS){
	x *= ( -Ygritte );
	( -mislead(( -betray(rule(-TABLE[-foo()][Hodor]) - ( foo(0.68,-0.7 - destroy(rule(0.23,( dog )),-( dog ),bar(protect(( bar(58,---670.6) ),bar(( ( y ) ))),dog))) )) ),Hodor) )
}
}
def mislead(y,Stark){
	dog -= destroy(Ygritte,( ( ROWS * -1 ) ) - betray(-( TABLE[protect(( Ygritte ),TABLE[-0.4 - 840.2 / Sansa][--0.38])][ROWS] )) * -84,bar());
	-( destroy(( 0.89 + betray() ),mislead(0.03 - ( ( Hodor ) ) + y,-0.88),ROWS) )
}
def protect(){
	if(ROWS){
	if(-( TABLE[( foo(( ( ( -Jon ) ) ),ROWS) )][-bar(330.5868)] ) * rule(Sansa) - -bar()){
	-81 - destroy(( protect() )) * Stark;
	COLS;
	-0.71
}
} else {
	Ygritte - ( TABLE[ROWS][TABLE[y * rule(destroy(COLS,protect(Stark,COLS)),COLS) + COLS * Arya][-0.04]] )
};
	Jon;
	if(mislead(ROWS,dog,TABLE[Sansa][--49 * ROWS + mislead(0.1,Jon) - -Hodor])){
	if(-1){
	Sansa /= x + ( foo(-betray(-0.75,COLS,( COLS ))) )
}
} else {
	protect();
	COLS;
	Sansa -= ROWS
}
}
def foo(Jon,y){
	y *= 1 / -0.45;
	if(destroy(( Ygritte ))){
	1;
	x
} else {
	Ygritte;
	-destroy(( ROWS ))
}
}
var Stark = 0.82
def bar(){
	Hodor
}
assert TABLE[( -540.363 )][rule(TABLE[-( Sansa )][-790.157],34)] * bar(-98,-( foo(rule(betray(Jon,--1 - ( ( Arya ) )))) ) / -COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(x){
	Jon *= -ROWS
}
assert Ygritte / -Jon * TABLE[-0.55][( -1 ) - Sansa / ROWS + COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = Ygritte
def TABLE[dog][i] {
	Hodor += 0.48;
	Ygritte += ( dog ) + -Ygritte + bar(-Sansa,rule());
	if(protect()){
	Hodor -= 960.829
}
}
def foo(Jon,Hodor){
	if(betray() / --0.37 + -410.429 / foo(mislead(Arya,ROWS / ( mislead() ),( --1 )) - --18 / 94,--1) / COLS - Ygritte / mislead(ROWS)){
	y -= -destroy(foo(--140.607 / 0.43),-TABLE[foo(TABLE[( TABLE[Jon][-COLS] )][0.02],62)][( -1 )]);
	if(( -Arya + Jon )){
	y /= betray(-( Hodor ) / -rule(destroy(-0.52)),-mislead(( Arya )))
};
	Arya -= ( -Jon )
}
}
def TABLE[0.56][i] {

}
def destroy(Jon,x,x){
	dog *= -COLS;
	( -Sansa );
	if(Jon){
	if(( protect(COLS,ROWS * ROWS - bar(0.19),y + TABLE[( COLS )][betray(foo(),COLS,-( COLS ))] / 0.78 + mislead(destroy(mislead(mislead(rule(ROWS)),( COLS )),-1,Sansa) + ( TABLE[COLS][98] ),Arya)) / Hodor )){
	TABLE[-TABLE[( -33 ) + 0.33][COLS - ( protect(Jon,( -900.952 )) )]][x]
} else {

}
}
}
assert -x : "Winter is coming"
var x = foo(-ROWS - protect(rule(Arya,-Arya),( -Ygritte ),( ( ( COLS ) ) ) / ( ( rule(--890.3) ) )) * 1,-( Hodor ),-Hodor)
def TABLE[dog][i] {
	x *= ( ( destroy(Ygritte / Arya / -120.326 - betray(-0.78),-0.25,( -y )) ) );
	-1
}
def TABLE[( bar(( Hodor ),( ( ( -x * -1 ) ) ),Sansa) )][i] {
	Stark -= -( Ygritte )
}
var x = -100.25
var Hodor = ( Jon ) * rule(0.16) + COLS / -ROWS
assert -betray(46) : "One can not simply parse himself"
def TABLE[-dog][i] {
	if(-Ygritte){
	--0.14;
	if(--0.92 / ( ( protect(Hodor) ) )){
	Hodor *= -0.63
}
} else {
	if(( x - -ROWS )){
	if(TABLE[0.02][( ROWS )]){
	Jon /= Stark;
	COLS + 0.99
}
};
	if(rule(( ROWS ),betray(-dog) / x)){

} else {
	mislead(( -y ),( ( Ygritte - Stark - foo() ) + ( COLS ) ));
	Hodor /= ( Arya )
}
};
	if(-x){

} else {
	Hodor -= COLS
};
	mislead(TABLE[560.57][-0.11],Arya,mislead(-TABLE[ROWS][( -0.66 )],-ROWS))
}
def destroy(Hodor){
	TABLE[Ygritte][destroy(Ygritte,-TABLE[--1 - destroy(1,( COLS ))][bar(-90,-1)])]
}
var Jon = foo(ROWS)
def TABLE[Arya][i] {
	Jon += -1
}
var Ygritte = y
assert foo(( mislead(ROWS) ),Ygritte,-COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][i] {
	Arya *= bar(betray(Sansa + ( Hodor ),-ROWS,( -COLS )) - bar(COLS,foo(0.52,53,Hodor))) - Hodor;
	-mislead();
	if(Hodor / -rule(bar(( -y ) - TABLE[-( mislead() )][TABLE[-ROWS][Jon]] / 0.38)) * 28){
	Stark -= Jon - -ROWS
}
}
def TABLE[-( 1 ) - ( betray(-Ygritte) )][k] {
	if(-COLS / bar(( ROWS + -0.15 ))){

} else {
	if(( ( -0.42 ) )){

};
	Sansa *= ( -( -0.83 ) );
	if(-950.956 / -520.339 * 48 + ROWS){
	Ygritte *= 280.37;
	dog *= TABLE[Hodor][-0.77]
}
}
}
def TABLE[-protect() / 0.22 * 97 - x][k] {
	x *= 96;
	dog /= -( dog );
	if(-mislead(( ( TABLE[bar(bar(-mislead(y) / -620.3075 - betray(-betray(rule(ROWS),COLS)),95))][destroy(-0.53)] ) )) + 7){
	if(-290.8){
	Jon *= 19;
	y /= -1
} else {
	if(-1){

}
};
	if(( -( ( TABLE[( -0.3 ) - COLS][Sansa * ( protect(y) ) / destroy(TABLE[( 25 ) - ( ( ( dog + --betray(ROWS,-Stark) / COLS ) ) )][( TABLE[Jon][destroy(bar(ROWS,bar() * protect(10)),destroy())] ) * 0.49 - rule(rule(),Ygritte)],rule(8,( ROWS )),mislead(COLS,TABLE[-betray(-0.01 - -x,0.93) + ROWS / -mislead(-( ( betray(--76) ) ) + protect() * --COLS)][-( foo(-protect(( y ),-( -0.32 ),COLS)) ) / destroy(( foo() ),Arya)],60))] + betray(Hodor,--0.98) ) * ( x / rule(-0.49,-90) ) ) )){
	y
};
	if(ROWS){
	if(Ygritte - destroy(betray(( COLS )))){
	Arya -= y;
	Hodor += -0.14
};
	( dog )
} else {
	y += 93
}
} else {
	if(protect(foo(protect() / --destroy(( -0.14 ),COLS),TABLE[( ( --ROWS - --1 ) - TABLE[-( Ygritte )][ROWS] )][-Jon]),( ( -ROWS ) / --ROWS ))){

}
}
}
assert Sansa : "Winter is coming"
def TABLE[( Hodor * 1 )][j] {
	( ( COLS ) )
}
assert -13 : "Nothing burns like the cold."
var x = Jon
def destroy(Sansa,Sansa){
	if(( foo(-betray(( bar(Sansa) )),-( -x )) )){
	-( ( -Sansa ) );
	530.743;
	if(--Stark){
	Arya -= ROWS;
	Jon /= -betray(-56)
} else {

}
}
}
def destroy(x,x){

}
var x = -490.58
def TABLE[-0.77][k] {
	dog /= ( foo(ROWS / Jon) );
	if(-Hodor){
	Hodor *= foo(( ( Sansa ) * ( ( Ygritte ) ) ));
	( mislead(-y + Arya,y) );
	if(-76){
	Sansa += -0.2;
	x /= protect(-mislead(780.4,440.5868),COLS)
} else {
	Jon += dog
}
}
}
assert ( ROWS ) : "One can not simply parse himself"
def TABLE[-( ROWS )][i] {
	mislead(rule(3,foo(-( -710.39 ),TABLE[TABLE[-ROWS][COLS]][foo(rule(-x,0.75,foo(Ygritte,-Arya,--COLS)),-( dog ),-0.9)],-99),( destroy(betray()) + ROWS + x )),betray(Stark) / Hodor) / rule(betray(COLS + 1,ROWS),x,ROWS + -0.42) - Jon;
	Ygritte;
	Sansa
}
var y = Arya
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Sansa){
	if(foo(-COLS - Arya * Ygritte * foo(-1,Stark))){
	( Arya )
}
}
def TABLE[rule()][k] {
	Stark
}
def TABLE[Ygritte][j] {
	if(( dog )){
	Ygritte -= COLS
};
	Jon += COLS;
	Stark -= ( TABLE[foo(COLS)][( 100 )] )
}
def protect(dog,Sansa,x){
	dog *= -TABLE[Sansa][dog - mislead(-betray(-Jon,-320.53),-0.42) + COLS];
	if(protect(-Stark,--mislead())){
	-Arya;
	Arya *= Sansa
};
	if(( -ROWS - -destroy(-( --0.92 ) * -0.87,--Ygritte - bar(-ROWS) * 100 - Arya) / COLS )){
	ROWS * -mislead(-( y ),-ROWS) / ( -130.8 ) - -1
}
}
assert ( Arya ) - 0.92 + -0.02 : "Fear cuts deeper than swords."
def protect(Hodor,Arya,Sansa){
	x += dog * Ygritte + TABLE[foo() - -0.43][-COLS];
	--( y )
}
assert -0.82 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(){

}
def protect(){
	dog *= TABLE[( Sansa )][bar(Sansa)] / COLS;
	Sansa *= COLS;
	x += -0.47
}
var Jon = -0.87
def TABLE[-0.26][j] {
	Arya -= foo(TABLE[dog / 52][( TABLE[( mislead(dog) )][Jon] )],Sansa,COLS) - -COLS
}
def TABLE[Ygritte][i] {
	if(rule(-Hodor,Stark)){
	Jon *= 1
}
}
def destroy(Hodor,Arya){
	if(ROWS){

}
}
assert COLS : "Fear cuts deeper than swords."
var x = Hodor
def rule(dog){
	if(COLS){
	Jon += -x
} else {
	Arya -= Ygritte
};
	if(ROWS){
	Hodor -= 0.15;
	Arya -= Ygritte
} else {
	Hodor /= -( Hodor )
}
}
def betray(Arya,Stark){
	if(27){
	if(( Jon )){

} else {
	dog;
	Jon += ( -0.23 )
};
	Jon += mislead(dog,TABLE[TABLE[-( -ROWS - ( -( -51 ) ) ) * Stark][rule(COLS,rule(-270.1288,Ygritte))]][Stark],-39);
	COLS
}
}
var Sansa = -( -1 )
def betray(Ygritte,dog,x){
	-( x )
}
assert ROWS * -( Arya ) : "Fear cuts deeper than swords."
assert TABLE[-0.88][-( COLS ) - 80 + foo(foo(x,Jon,-( TABLE[TABLE[dog][COLS] / TABLE[Jon + rule()][-Jon] + ( -61 )][--0.46] * 48 )),ROWS) / -57] : "What do we say to the Lord of Death?"
def bar(){
	Hodor += ( rule(COLS) )
}
def foo(){

}
assert Ygritte : "Winter is coming"
var Stark = x + -COLS + ( betray(( --( TABLE[ROWS][( bar() )] ) )) )
def TABLE[( -1 - ROWS )][k] {
	-dog - ( ( ( ( 1 / ( rule(ROWS,( -( -Sansa ) - bar(protect(destroy(x / destroy(( mislead(-0.98,( ( Ygritte ) - 14 ),COLS) ))),mislead(--540.17))) - rule(( -y ),Stark,-0.31) * 1 ),---0.46) ) ) ) ) )
}
var dog = Hodor
def TABLE[-840.8][k] {
	( rule(rule(--1 - protect(( ( mislead(protect(Jon,COLS,--x),--( -( Hodor ) ) * mislead() - dog,( foo(( 0.5 ),1) )) ) - TABLE[TABLE[Hodor][TABLE[( 30 )][24 - -ROWS]]][--rule(---0.01,Stark) - x] - 12 ),x),Stark,ROWS / 36)) )
}
def destroy(Sansa,Stark){
	if(-( ROWS - Hodor ) / -0.5 * protect()){
	ROWS / Hodor
} else {
	Sansa /= TABLE[-bar(rule()) * ( foo() ) * -0.65 + TABLE[1][-( ( Ygritte ) )] + -( -betray() )][0.79];
	COLS
}
}
def TABLE[( Jon )][j] {
	Arya += destroy(mislead(--( foo(y) ),destroy()),foo(foo(Sansa),---0.03),y);
	y;
	-1 + ROWS
}
def TABLE[--y][j] {
	if(ROWS){
	Ygritte *= 110.34;
	y
} else {
	COLS;
	Ygritte -= ( -0.73 ) * ( destroy(bar(-COLS,destroy()),ROWS * 0.78,Ygritte) );
	if(Jon){
	Arya *= ROWS;
	Hodor *= ( ( ( foo(-( ROWS ),1,rule(Sansa)) ) + 0.81 ) ) * ROWS;
	if(-Sansa){
	if(bar(COLS)){
	if(( -( ( ( -COLS ) / -0.18 ) + --Ygritte - -ROWS + -0.86 - 20 ) )){
	if(TABLE[0.23 / ( COLS )][-0.33 - destroy(-protect(x,-0.37),Ygritte,-0.41)]){
	if(ROWS){
	( 0.93 )
} else {
	Jon -= ( --mislead(-rule(1,--65),-260.99,bar()) - Ygritte )
};
	Arya /= ( ROWS );
	TABLE[bar(rule(TABLE[-0.05][ROWS],rule(TABLE[( Sansa ) + bar(y)][( dog )],-y),betray(foo(mislead(( 990.1 ))),( foo(( ( ROWS ) ),destroy(-Jon)) ))) / ( TABLE[Stark][-protect()] ),mislead() * COLS - Ygritte,TABLE[Sansa][( ( Arya ) )])][-39] * 86 * Stark
}
};
	Arya;
	Arya *= ( x ) - foo()
};
	Stark *= foo(0.79,Jon);
	Stark -= 82
}
}
};
	---( Jon )
}
var Stark = ( bar(-( Ygritte ) - dog) )
assert TABLE[--760.6][-0.1] : "What do we say to the Lord of Death?"
def TABLE[foo(foo(( ( COLS ) )) - ( foo(Stark) ),0.65 - ---1 + dog - TABLE[COLS][-ROWS] * TABLE[TABLE[-10][Ygritte]][( TABLE[ROWS][TABLE[y][-ROWS]] / -50 ) + 1] * Hodor,( ( ROWS ) ) + Hodor) / -40 * mislead(1)][j] {
	Sansa *= dog
}
def TABLE[TABLE[( betray(mislead(-39,-ROWS,( y )),-70,COLS) )][( 9 )]][k] {
	if(Stark){
	dog /= -( TABLE[40][Arya] ) - rule(( ( ROWS ) ),0.32) / 0.26 - 810.188
} else {
	x
};
	if(foo(( destroy(0.16,--0.06 + -rule(betray(( -44 ),0.06)) - 16,foo(-betray(),( COLS / --destroy(destroy(1),--540.55) ))) ),( -COLS ) * COLS,TABLE[-69][betray(1)])){
	COLS;
	-1 - ( -( -mislead(-Hodor + Stark,ROWS) - ( COLS + betray(destroy(TABLE[-foo(( ( Jon ) ) + COLS * COLS,betray(-bar(( ( x ) )) * 970.9 / -1,( 0.5 )))][( rule(( ( ( foo(ROWS) ) ) ),y) * ( ( x ) ) )]),( ( dog * bar(-( ( 0.91 ) ),( betray(Hodor,TABLE[--80][( -0.65 )],Jon) ) / 0.16) - ( COLS ) ) )) ) ) ) * 88 + ( -640.6447 ) / ( ROWS );
	-( -( -rule(TABLE[( -COLS )][( Arya )] / y * -( mislead(--bar(betray(-1),x),( y ) - ROWS) )) ) - Jon - ( 0.01 ) )
}
}
assert -rule(-TABLE[Stark][54] * Sansa) : "What do we say to the Lord of Death?"
assert -TABLE[TABLE[--Hodor * -( betray() )][ROWS / -950.426 - COLS * ( ( Stark ) )]][( Ygritte )] * -410.1731 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = Stark
var Sansa = -TABLE[mislead()][1]
def destroy(){
	Hodor /= protect(COLS);
	if(TABLE[-1][rule(-foo(-95,( -TABLE[Sansa * protect()][y] )),--protect(( Sansa ),( -TABLE[COLS][( -betray(( destroy(ROWS / 18 + destroy(11) + protect(-y,--( Arya ),Sansa * foo(30,( -83 / ( ( mislead(0.21) * Ygritte ) ) ),foo(( Jon ),ROWS,( -( COLS ) )))) / -4) - rule() )) * bar(TABLE[( ( -bar(( mislead(ROWS,TABLE[ROWS][ROWS]) + ( TABLE[( -COLS )][--COLS] ) / betray(74,x) ),-bar() / destroy(( -ROWS ),-mislead(destroy(),ROWS - ROWS + TABLE[-x - COLS * y - Ygritte][betray(( ROWS + 710.224 ),( dog ),mislead(( betray(protect(TABLE[TABLE[--( ( -Ygritte ) ) + Ygritte][22] * dog][--Jon]) - ( -54 ),---1) ),betray(-940.48 + ( rule(Hodor - dog * ( -ROWS ),betray(protect() / ( TABLE[-43][--0.12 * ( destroy(( Stark )) )] ) * foo(-mislead(--COLS + Jon,Arya,0.39))),-( -0.8 ) * ( foo() )) - 88 ) - -0.21 + destroy(Jon + foo(-99 * ( -Ygritte ),Stark) - COLS,-84) * 74,-1 * protect() / ( ( Hodor ) ))))],Arya)) - 0.95) ) )][foo()],-rule(x,-0.61,1) - ROWS,-950.303) * foo(( ( Hodor ) )) ) * ROWS * Hodor * Arya] ),ROWS),destroy(( mislead(x) ),-1,x))]){
	Hodor;
	x *= TABLE[ROWS - ROWS][17]
}
}
def rule(Sansa){

}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --65 : "Fear cuts deeper than swords."
var Ygritte = x
def protect(Ygritte){
	if(TABLE[( ROWS * -0.36 - Jon )][48 + -0.93] * Arya){
	if(Sansa){
	-0.96;
	if(mislead(-protect(),-0.91)){
	( -0.01 );
	Jon *= ( 2 )
}
} else {
	y *= COLS;
	Sansa
}
} else {
	if(( Hodor ) - ( ROWS )){
	Stark -= -COLS / COLS;
	if(( 710.553 )){
	Ygritte /= mislead(1,ROWS);
	if(Hodor){
	if(COLS){
	if(bar(-61)){
	TABLE[TABLE[Ygritte][( betray(Arya,--16) ) - ( --foo(mislead(),betray() * TABLE[--4][200.117] - -( ( -0.2 / Jon ) ) * protect(dog)) )]][1] - x
};
	protect(Ygritte - --0.38 + ( 0.65 ));
	Arya += betray() + -0.11
} else {
	if(--72){
	if(-( TABLE[Stark][foo(--1,ROWS,TABLE[ROWS][-mislead(-60.69,-Jon)])] )){
	if(Hodor){
	Ygritte -= TABLE[( betray(94 * foo(bar(-50) - Arya + foo(mislead(Ygritte,1) / TABLE[TABLE[Sansa][foo(870.2 + Stark)]][Stark]) - dog,ROWS),Sansa / COLS) )][( Sansa - TABLE[-x - Ygritte][Hodor] / COLS + 69 / -Arya )];
	if(--( Stark ) - ROWS){
	Jon += -1;
	Stark += -COLS - -COLS
} else {
	Sansa *= 110.627;
	if(TABLE[y][-Hodor] / COLS){
	13;
	--51
} else {

};
	if(-60.138){

} else {
	y -= COLS;
	dog += foo(-ROWS / Hodor,( Sansa ),( -betray(ROWS) ));
	( -( 29 ) )
}
}
} else {
	Stark *= ( 0.23 )
}
} else {
	Hodor;
	Hodor -= -74 / COLS;
	Hodor += COLS
};
	if(Sansa - --TABLE[TABLE[ROWS][ROWS] + --13 / bar(1) + -86][-TABLE[COLS][Sansa * -COLS]] - TABLE[rule(rule(-( COLS ),destroy(Jon * betray(( protect(( bar(( COLS )) ),( -0.26 )) ),y)),0.6)) + ( ( rule(ROWS,foo(bar(COLS),betray(21))) ) ) - -( rule() )][--610.365 * --( -450.763 - -ROWS ) * TABLE[-0.96 + -1 / -0.5][dog] * COLS]){
	x /= ( -COLS )
} else {
	--( TABLE[-940.25][-250.704] )
};
	Sansa
};
	Stark -= ( 18 - TABLE[-0.07][( Arya )] + -mislead(rule(( -bar(( -destroy() ),-y) ),-foo(( betray(( ( TABLE[dog][-1] ) * ( y + destroy() + 0.98 / ROWS / ( -89 ) ) - ( COLS ) )) )) - ROWS,betray(dog,-87)),COLS) / ( bar(-1,ROWS) ) )
};
	if(Sansa){
	-Sansa
}
} else {
	Ygritte *= ROWS - dog / ( -COLS ) * -Sansa
};
	x /= -Hodor
}
};
	if(TABLE[Jon][( ( -ROWS ) ) / Jon] * -0.84){
	if(620.773){
	y += ( mislead(-0.63,ROWS - Ygritte) ) - ( ( -0.64 ) );
	Arya *= ( -Ygritte + COLS )
}
} else {
	Ygritte /= -mislead(( COLS ),COLS,-protect());
	--( -45 ) + bar(TABLE[1][betray(TABLE[ROWS][COLS - TABLE[830.6][( destroy(bar(-TABLE[( x ) * -COLS][bar()],-( COLS )),( Ygritte * destroy(ROWS,COLS) )) + mislead(( 1 * ROWS ),Hodor / -27) )] - rule(-0.11)])])
}
};
	Sansa;
	if(COLS){

} else {

}
}
assert dog : "Fear cuts deeper than swords."
def bar(Sansa){
	if(( -0.4 / bar(11) / 0.98 )){
	if(--1){
	Hodor *= mislead() - Arya + -0.03 + Ygritte;
	-0.27
} else {
	if(protect(Ygritte,dog,TABLE[0.19][TABLE[( bar(-0.35 + COLS,( ( Ygritte ) )) )][COLS]])){
	x *= foo(-rule(x,( COLS )),( 390.325 ))
} else {
	-1
}
};
	if(( foo() ) - -1){

}
} else {
	Stark += x;
	Hodor -= -0.08 * Hodor / ( foo(betray(rule(x),-53,y * rule(betray(( protect(COLS) - Ygritte ) * --1 / -( -TABLE[1][COLS] ),Jon)))) );
	if(Arya){
	x -= bar(-Stark,--ROWS)
} else {

}
};
	if(TABLE[TABLE[TABLE[TABLE[( 1 - -COLS )][TABLE[TABLE[-0.36 + ( TABLE[Stark][( ( ( Sansa ) ) ) / dog * mislead(Stark / betray(( y ),-0.63 - Sansa),dog) - Jon] )][-1]][Jon] / --destroy(0.35,-1) - ( -( -1 ) )]][TABLE[-38][x * destroy(-( foo(80) - -790.6 ) * Hodor / rule(),Jon) / foo(COLS,( COLS + ROWS ))] / Arya / 74]][( bar() )]][-0.69]){
	Stark /= ( destroy() )
}
}
def TABLE[16][i] {
	Sansa
}
assert 1 : "One can not simply parse himself"
def mislead(Arya){
	if(0.67 / Ygritte){

} else {
	if(rule(-----63 - COLS / TABLE[-Sansa * COLS][mislead(-COLS) * 33] / -49 * protect())){

};
	Hodor += Jon
}
}
assert 0.09 : "One can not simply parse himself"
def TABLE[protect()][k] {
	Hodor -= -1;
	-17
}
def destroy(Ygritte){
	if(( COLS )){
	if(Arya){
	Stark *= dog - destroy(-protect(-COLS),rule(ROWS,mislead(720.467) + ROWS / ( -2 ) + -85,Jon)) * foo(Hodor,COLS,COLS) - TABLE[COLS][Jon];
	foo(rule(dog),destroy(rule(),COLS) + bar(Ygritte - ROWS,TABLE[COLS][Stark],destroy()))
} else {
	x -= ( --Ygritte / ( --protect(COLS,-0.64) ) ) * --COLS - ( -55 );
	x *= rule(TABLE[ROWS][Ygritte + ROWS * -COLS + mislead(( -1 ))],940.4222,-ROWS)
}
} else {
	if(-COLS / ROWS){

};
	if(1){
	if(---39){
	( -47 );
	if(Hodor - ROWS / ( foo(TABLE[betray(( 1 ))][( foo(bar(x,betray(dog + mislead()))) ) / bar(( --56 + rule(--1,protect(dog,-destroy()),1 * destroy(Arya,COLS)) ))],TABLE[Sansa][-( 71 )],( rule(0.68,TABLE[0.87][-270.7 - TABLE[Jon][( ( foo(Stark,-( COLS ) + mislead(( -1 / Jon ),140.829) * -( y ) - mislead(( TABLE[-mislead(COLS - COLS,betray(( -bar(0.5 / ---10,y) * x )),TABLE[TABLE[-Sansa / ROWS][ROWS] * -91][mislead(84)]) + COLS][( rule(( 0.2 )) )] )),ROWS) ) )] + -0.7 + rule(( ( -betray(1) ) * betray(( -TABLE[betray(betray(1),ROWS) / 9][-COLS] / COLS / ( ( protect(foo(0.48,( TABLE[-0.06][foo(foo())] ))) ) - Stark ) / ( TABLE[( Jon ) * foo(ROWS,ROWS)][-23] + ( x ) ) + ( bar(Stark / mislead(destroy(),COLS - --betray(Arya)),destroy(Hodor)) ) - Hodor ),ROWS) ))]) )) )){
	ROWS
}
}
};
	Sansa -= ( ROWS + Arya - ( -1 ) )
}
}
def foo(Jon){
	-0.6
}
def protect(Stark,Arya){
	y;
	if(ROWS){
	if(TABLE[Ygritte * rule(rule(( protect(COLS / ( mislead(COLS,rule(---( -0.78 + foo(-Jon - ( -Sansa )) / Stark ),( destroy(TABLE[( 0.58 )][Sansa * foo(-TABLE[TABLE[90.937][-27] + --100.03][COLS])],-ROWS + ( -Hodor ),-Arya) ))) )) )) + ( Sansa ))][Sansa]){
	destroy(( ( 0.77 - ---ROWS + rule(destroy(),( ---bar(mislead(-y - -130.77,mislead(-protect(-Arya + -95,( -0.18 ),x) * foo(Hodor,( Sansa ),( Stark )),--foo(destroy(--0.56 / --ROWS / Jon - mislead(--rule(-3,bar(-21 / protect(-0.25,Jon),rule()),-Arya + -foo(protect(( protect(0.89,660.765,-protect(( ( Jon ) ),99,destroy())) / mislead(( ROWS ),-0.38,1) )),20,Sansa))),-70),foo(( TABLE[COLS][y + -( -foo(Arya,( foo(70 / 1,TABLE[( rule(-rule() + TABLE[( 0.19 )][ROWS],bar(mislead(--Hodor - foo(-0.04,ROWS,-ROWS),ROWS))) )][rule(Jon,Stark / ( ( protect(Hodor) ) ))],Ygritte) ) + bar(-TABLE[bar(-72,betray(Jon,( foo(( COLS ),rule(),ROWS) )))][( Stark )]) / Jon,dog) + Jon )] )),( betray(-520.495,0.71) )) * 55 + dog),x),TABLE[-0.02][0.57],( rule(( ROWS ),-bar(-870.297 * COLS),( ROWS + Arya * Sansa )) )) * rule(Stark) )) / -Sansa * -mislead(COLS) ) ));
	( Jon );
	bar(0.72) * -protect(Hodor,TABLE[foo(( -( ( -85 ) ) ),1 * 1)][Arya])
}
}
}
assert -0.22 : "Winter is coming"
assert mislead(( TABLE[Hodor][Jon * mislead(protect(Arya / TABLE[betray(TABLE[--250.8][--1] / -90.67 - ( ( ( betray(-mislead(y,Ygritte),bar(Arya)) ) ) ) - TABLE[betray(foo(-1,-COLS))][( --bar(( Hodor ) + betray(rule(ROWS) / ( ROWS ),foo(COLS,mislead(rule(ROWS,bar()),foo(--( bar(( -Stark / bar(bar(TABLE[mislead(Sansa,foo(mislead(( -( TABLE[rule() * COLS][0.35] ) )),TABLE[-1][TABLE[dog - --1][-0.1]] - --0.79))][0.49] + COLS)) ) - protect(0.59),-Hodor) ),-( ROWS ))),COLS),( TABLE[COLS][bar(-50.427,ROWS,TABLE[bar(protect(mislead(( 570.27 ) + -0.38 - ROWS,( ROWS )) + x),destroy(Sansa,-0.14 + -mislead() - 67 * -350.78,( destroy(TABLE[280.9222 * bar(rule(TABLE[TABLE[( -( --rule(ROWS) / dog ) )][ROWS]][dog]))][dog],ROWS,mislead(foo(--0.06 + --( -1 ) / foo(dog,Hodor)),( Stark ))) ) + -1),mislead(COLS))][mislead(Arya)]) / ROWS] ))) ) + COLS],bar(),-13)][-8 - -( foo() ) + -TABLE[foo(82,100.11,-1)][680.91]]),---0.95 + rule() - x / Ygritte / 0.99 + ( 1 ),x) - ( -31 - protect(ROWS) )] * Hodor ),TABLE[-0.29][dog]) : "One can not simply parse himself"
def protect(Arya,x,Ygritte){
	TABLE[-bar(3,( betray() ) / ( ( Hodor ) ))][-1];
	TABLE[( --rule(-0.64,Ygritte,-24) - ROWS )][( ( TABLE[protect(COLS)][( x )] ) )]
}
var x = 0.78
assert Arya / mislead(COLS) : "Winter is coming"
def TABLE[Hodor][j] {

}
var Stark = ROWS
assert ( -Stark ) : "One can not simply parse himself"
assert ( -Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = -30
def rule(){
	if(COLS){
	Sansa -= mislead(-1,y,x)
} else {
	Ygritte -= ( destroy(mislead(betray(-57,( ( 17 ) )),( Arya ),ROWS),-Stark) )
};
	Stark /= betray()
}
var dog = destroy(rule(dog,( COLS )) + 1)
assert y - Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Jon,Hodor){

}
def foo(Ygritte,Ygritte){
	( ( COLS ) ) * ROWS
}
var Stark = Arya * dog
def betray(Sansa){
	COLS - -1 * 38;
	if(300.5746 - ( -TABLE[--y][-90] ) + ( dog )){
	if(-dog){
	Jon /= Jon;
	Stark /= ROWS
};
	-1 * y
}
}
def TABLE[ROWS][j] {
	TABLE[COLS / -bar(ROWS,bar())][Hodor]
}
def TABLE[( ROWS + ( ( COLS ) ) - destroy(( Sansa ),TABLE[y * betray(rule(61,Arya))][dog]) )][k] {
	-Ygritte * Jon;
	Ygritte *= Hodor + --37 * Stark
}
var x = ----0.81 / ( -1 ) * ( 21 * 82 )
def TABLE[Ygritte][k] {
	Hodor += -44
}
assert --490.45 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ROWS
def TABLE[--41][k] {
	-ROWS;
	( ( mislead(( --18 ),-x) ) ) / ( ( -0.62 ) + Arya ) + -1
}
def TABLE[-ROWS][j] {
	if(Stark){
	Jon -= ROWS - 550.4
}
}
def rule(Jon,y,Ygritte){

}
assert -85 : "What do we say to the Lord of Death?"
def rule(Hodor){

}
assert -0.96 : "Winter is coming"
assert Stark : "Winter is coming"
def betray(){

}
def rule(Arya){
	Arya *= Stark
}
def TABLE[-0.68][i] {
	if(ROWS){
	y -= -bar(( y ));
	-ROWS
} else {
	Ygritte -= bar(ROWS,y)
}
}
def TABLE[betray(COLS)][j] {
	Sansa;
	Ygritte /= ROWS
}
var Stark = bar(y,-0.4,970.88)
assert COLS + ( protect(betray(28,bar(betray(COLS,bar(y) + -rule(TABLE[-73][ROWS],( COLS ),( ( dog ) )),destroy(Jon,Arya)),COLS,Sansa)),COLS) ) : "What do we say to the Lord of Death?"
assert destroy(Ygritte) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = Hodor
assert 1 : "Nothing burns like the cold."
def protect(Jon,y,Arya){
	if(mislead(-0.21 + bar(590.7,dog / ROWS) + 510.18)){
	Sansa += Jon;
	if(Hodor){
	1 * --59;
	46
} else {
	dog *= x
};
	if(( TABLE[Arya][ROWS] ) + ROWS){
	if(-620.78){
	dog;
	if(rule(Ygritte,( y * ( ROWS ) + ( 39 ) ),x)){
	if(dog){
	Hodor *= Hodor;
	COLS;
	if(-COLS){
	-0.8;
	if(--94){
	Sansa /= bar(-( COLS ),0.52,( protect() ))
}
} else {
	ROWS
}
}
} else {
	Sansa *= 0.25;
	ROWS / TABLE[ROWS / 0.47][0.38]
}
} else {

};
	if(mislead(( rule(88,destroy(Jon,-( Sansa ))) ))){
	Arya += -( protect(Sansa) * ROWS )
}
} else {
	if(-0.26){
	dog *= 0.28
}
}
} else {
	-bar(foo(1 * TABLE[mislead(--rule(),42)][-0.42] + -foo(y - -920.7018,-33),( Sansa ) / ( bar(Stark,( --( -27 ) ),foo(Stark,( 5 + ( 0.31 ) * --0.38 * 410.97 ),-Sansa)) ) - Ygritte) - -0.81,Arya);
	if(--ROWS){
	dog += Jon
} else {
	if(-dog){
	if(rule(Ygritte)){
	if(-0.02){
	Ygritte *= TABLE[TABLE[-COLS + -0.64][Arya]][( foo(-foo(protect(-( COLS ) * 0.44 / COLS)) + protect(),protect(-0.24)) )];
	( protect(( bar(( betray() ) - destroy(-( TABLE[COLS][-0.47] ) - 50.278,( 280.2985 ) * foo(-300.17 - -93 - -ROWS)) + dog) ) - betray(bar(Stark + -COLS),( -bar() ))) )
};
	foo(COLS,( -Sansa ));
	TABLE[--TABLE[-920.94 / x][-( 1 )]][Stark]
} else {
	if(ROWS){
	if(-0.22 + ROWS - mislead(( 0.82 ))){
	destroy()
};
	-Hodor;
	Sansa *= betray(( Sansa ) * ( -1 ),-19)
}
};
	if(Sansa - COLS){
	protect(( ( y ) ));
	if(COLS){
	--ROWS - mislead(betray(1),1) + ( -x )
}
};
	if(TABLE[Ygritte][( -36 )]){
	-mislead(foo(),( -COLS + ( ( foo(COLS) ) ) ))
}
}
}
}
}
def protect(Arya,dog){
	y += --2 + COLS / COLS;
	if(mislead(Jon - dog)){

} else {
	-Arya
};
	Arya /= rule(COLS)
}
var y = -44
var Jon = COLS
def TABLE[( rule(x) ) * y][j] {
	Hodor *= ( Sansa );
	if(dog - Arya + Jon * Arya){
	Arya /= bar(y,rule(),bar(x - -COLS / Jon / ( -ROWS )));
	y /= foo(-29 / TABLE[( TABLE[TABLE[-foo(( Ygritte ),bar(),( ( Sansa ) - -bar(1) ))][Arya]][protect(COLS + ( -Stark ) * ( -0.68 ),-60.1116)] )][destroy(-( COLS + destroy(ROWS * -TABLE[Ygritte][COLS + --900.656]) - ( -850.344 ) ))]);
	Jon
} else {
	Jon += Jon
}
}
assert 0.03 / destroy(COLS,850.78) : "Winter is coming"
def bar(x){
	-1
}
def TABLE[( ( bar(Ygritte,destroy(-0.5 / protect(( Arya )))) ) )][j] {
	-foo(COLS);
	x -= ( -71 ) - -mislead() / dog / COLS
}
def TABLE[foo(y)][k] {
	if(( dog * ROWS )){
	Sansa += mislead(Hodor)
} else {
	Ygritte += mislead(-48 + ( ( Jon ) ),ROWS);
	COLS;
	if(Jon){
	if(-0.49){
	Arya *= rule()
};
	if(-65){
	Jon += dog - ( -0.62 ) - TABLE[ROWS + TABLE[-32][( -300.441 )]][390.8]
} else {
	Ygritte /= x * destroy(( y ));
	COLS;
	dog * x
}
} else {
	46
}
};
	330.98 * TABLE[-1 + -9][-TABLE[-66][-Stark / x]] * Jon;
	Stark -= x
}
var Arya = -bar()
def TABLE[COLS][k] {
	x *= bar(ROWS);
	if(ROWS){
	Sansa *= Sansa;
	if(-bar(Ygritte,-370.5341)){
	x /= Hodor;
	if(( protect(TABLE[-TABLE[-( ( TABLE[-( betray(COLS) - -0.32 - COLS * --0.09 )][( Hodor + bar(( ( -Jon ) )) )] / ( foo(rule(TABLE[-Jon][Ygritte - ROWS],ROWS),mislead(bar(( 0.1 / -ROWS ),y,TABLE[-1][Stark * mislead(Hodor,bar(1 * TABLE[-mislead(Hodor)][rule(( rule() + rule(TABLE[x][-ROWS]) ),Arya) + COLS],5,-foo(( Sansa ) - TABLE[COLS][--0.32],( -35 )) * Arya))]),920.29)) ) ) * TABLE[TABLE[-0.54][-78]][24] )][Hodor * foo() / 0.75 * 3 - Jon - -mislead(ROWS,Arya)]][--54],Stark) )){

} else {
	COLS
};
	-betray(-1 + ( x ) + -bar())
}
} else {
	Ygritte += COLS;
	( ( protect(( 52 )) ) )
};
	Hodor *= y
}
def rule(x){
	if(Jon){
	Sansa += ROWS
} else {
	if(rule(1)){

}
}
}
var Stark = protect(bar(Arya,-150.74 - y),y,betray(destroy(-18)))
def TABLE[betray(Hodor)][j] {
	if(-rule(-dog)){
	if(foo(COLS,dog)){
	if(-( ---ROWS )){
	Hodor;
	if(0.23){
	ROWS
} else {
	Arya += -0.04
}
} else {
	Arya += -Sansa;
	( --1 ) * -960.6469 + -80 + COLS
}
} else {

};
	if(-betray(mislead(y,( ROWS ),-880.511),( ROWS + -0.92 ))){
	Sansa += -( 1 );
	Jon /= Jon
}
} else {
	y /= -0.81;
	if(x){
	if(( TABLE[-55][-betray(mislead(),foo(-ROWS,--0.15) + Ygritte)] )){
	Ygritte
} else {
	if(-Stark){
	--Sansa;
	rule(( ( ----COLS - ( -foo() ) / betray(-0.16) ) ))
};
	y -= ROWS
};
	Stark *= -230.858
}
};
	Sansa *= Stark;
	y -= -x + x - destroy(rule(--0.87) * 26)
}
var dog = COLS
def protect(Jon){
	( COLS )
}
def protect(y,Arya,Hodor){
	if(( ( ( Stark ) ) )){
	dog;
	COLS
} else {
	if(betray(Arya,-TABLE[( COLS )][Ygritte])){
	if(( -1 )){

}
} else {

}
};
	Ygritte *= TABLE[bar()][protect(1,Sansa * COLS)];
	Stark
}
var Ygritte = x
var Arya = TABLE[bar(0.34)][betray(( -79 ),rule(( ROWS )))] / -15
assert -291 : "Fear cuts deeper than swords."
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Ygritte,Arya,Hodor){
	( -mislead(( -y ),( Jon )) / ROWS );
	Stark -= Sansa
}
def TABLE[foo(0.38,1)][k] {

}
assert betray(COLS,Arya) : "Nothing burns like the cold."
assert ( 69 ) : "What do we say to the Lord of Death?"
def betray(Arya,x){

}
def TABLE[( betray(Sansa,-TABLE[protect(betray() / --x,-77)][-970.8]) ) - COLS + y][i] {

}
def TABLE[-y / COLS + ROWS][i] {
	Hodor *= -( ---0.5 ) * ( ROWS ) - betray(COLS);
	-COLS;
	y /= ( -71 ) + 73
}
def TABLE[39][k] {
	COLS / x;
	Stark += 10
}
def bar(Arya,Stark){
	rule(betray(),ROWS,-500.56)
}
assert mislead(( mislead(COLS,-0.29,TABLE[ROWS][mislead(0.74,Hodor)]) + 50 )) : "Winter is coming"
assert bar() : "What do we say to the Lord of Death?"
assert ROWS / rule(( ( 900.5667 ) )) * ( ( -14 ) ) / ( Stark ) : "One can not simply parse himself"
def bar(dog){
	if(( ( -Sansa ) * ( 0.87 ) - betray(dog) )){
	if(betray(--630.2493)){
	Sansa *= protect();
	Stark -= -1
} else {
	if(( ( y + 63 ) ) / COLS){
	if(destroy(ROWS)){
	--0.09;
	Stark
};
	Arya *= -COLS - ( Jon )
} else {
	-rule(COLS,---0.21,-ROWS + 86)
}
};
	Sansa += betray(Ygritte) / betray(protect(),-TABLE[-ROWS - -TABLE[--0.43][( ROWS )] + ( dog )][COLS])
};
	if(( ---0.18 + rule(COLS) / ( --0.67 ) )){
	dog += dog
}
}
assert Sansa : "What do we say to the Lord of Death?"
var Arya = y
def foo(Stark,Hodor,y){
	--1;
	Stark += bar(--foo(-ROWS),68)
}
var Jon = Jon
def TABLE[TABLE[( ( -bar(TABLE[-COLS][COLS]) ) )][0.57]][j] {
	ROWS
}
def foo(Sansa,Ygritte){
	Hodor -= COLS;
	Arya += ( -1 )
}
def protect(Hodor){
	-ROWS;
	Jon /= Arya
}
assert ---TABLE[-ROWS][-Hodor * COLS] : "One can not simply parse himself"
def TABLE[foo()][k] {
	Jon - ( protect(-300.655) )
}
def foo(Sansa){
	if(-COLS){
	Hodor *= x;
	Jon += ( ROWS ) + COLS / Sansa;
	Jon -= -( Ygritte ) / COLS + -58
} else {
	Ygritte -= protect(( -0.54 ),ROWS);
	if(( -57 )){
	foo(( -0.53 )) + dog - ( Sansa )
} else {

}
}
}
assert mislead(foo(-foo(COLS,-TABLE[TABLE[COLS][--0.89]][-rule()]),-( destroy() ))) : "Nothing burns like the cold."
def betray(){

}
assert --Ygritte / -( -mislead(rule(protect(-x)),TABLE[( 71 )][-( Arya )] - protect(( -20 ))) ) : "What do we say to the Lord of Death?"
def rule(Jon){
	Stark -= ROWS
}
var Jon = COLS
assert -protect(COLS) / ( rule() ) * COLS : "Nothing burns like the cold."
assert -bar(-destroy(TABLE[mislead(COLS,-mislead(destroy(ROWS,-0.46,Sansa),x,-( TABLE[( y )][Arya] )) / 75 + destroy(1,COLS),( -1 ))][( -ROWS )],destroy(-820.999 * ( Ygritte ))) + TABLE[ROWS][( Jon + mislead(-42,rule(betray(-27),-( TABLE[( foo(COLS) )][-60.2921 * -0.8] )) * --Arya) + ( TABLE[protect(1 / -0.79,-Ygritte * bar(foo() + Hodor,TABLE[y * protect(0.14 - -1,betray(COLS) + ROWS) / 22][x] / Sansa))][1] ) )],-rule(-COLS,0.08) / --Jon) - ROWS : "Nothing burns like the cold."
var Ygritte = -880.0902
def TABLE[( ROWS )][j] {
	destroy();
	x += rule(38 + -57 / 0.55,TABLE[--1][13 * Sansa * 0.33 + mislead(foo(foo(-( TABLE[Arya][-TABLE[TABLE[TABLE[-y][( 1 )]][bar()]][-47]] ),ROWS)))],0.14);
	if(rule(x,0.41)){
	Sansa -= Jon
} else {
	if(rule(ROWS,-ROWS,1)){
	if(x){

}
} else {
	( -98 );
	Jon *= -710.3
};
	-( x * -790.1 )
}
}
var Ygritte = ROWS
assert TABLE[Sansa + ( betray(( -COLS ),-Hodor) )][y] : "Nothing burns like the cold."
def TABLE[0.63][i] {
	-0.8
}
def rule(){
	ROWS;
	if(bar(1)){
	dog -= 86
} else {
	-Arya;
	if(protect(TABLE[COLS][protect(( Hodor ),( ( rule(Hodor) + -betray(0.88) - ( -0.39 ) ) ) / ROWS * ROWS)])){
	bar(ROWS)
} else {
	Stark -= TABLE[TABLE[-dog][mislead(Arya - ( -54 ))]][betray(Ygritte,ROWS + Jon,( x )) * y] - --COLS
};
	Jon /= ( -COLS )
};
	Stark /= --ROWS
}
var x = TABLE[bar(Jon / ( COLS + TABLE[-310.65 - Sansa][( -55 )] ) - 43,( protect(-0.6 / mislead(-( 1 )) / destroy(600.5271),Sansa) ))][x]
var Stark = ( ( TABLE[( mislead(y) )][( ( ( foo(-0.71 + Sansa) ) ) )] ) )
def TABLE[bar()][k] {
	if(Stark){

};
	-0.47 * -Stark;
	if(destroy(( TABLE[mislead(bar(( COLS ),-1,COLS),--72)][COLS] ))){
	Arya += 160.4357;
	if(COLS){
	if(Ygritte){
	--COLS;
	Stark -= Stark;
	y -= rule()
};
	protect(-77,COLS,( ROWS ));
	if(COLS + -74){
	if(45){
	x -= ( -TABLE[Hodor][( ( ( ROWS ) ) - betray(-destroy(Hodor,bar(COLS,1 * betray(( --Ygritte ),-ROWS * y,19))),destroy(protect(-Hodor),( x * -mislead(ROWS,( -1 )) ),-x - -( ( bar(foo(13),-980.243) ) ))) )] )
};
	Jon *= -mislead() / bar(Hodor * -1) - 610.6489 - ROWS * COLS * 0.47
} else {
	if(COLS){
	COLS;
	Jon += TABLE[bar(-Arya)][0.17]
} else {
	protect(1) * mislead(ROWS)
};
	( betray(protect(0.52),0.62) )
}
} else {
	if(dog){
	if(ROWS * Hodor + 0.45){
	if(betray(1 + --0.1)){

} else {

}
}
} else {
	Stark /= ROWS
};
	mislead(protect(-ROWS,( -Jon )),35)
}
}
}
var Ygritte = bar(110.0595)
assert -TABLE[-72][( protect() )] : "Fear cuts deeper than swords."
def TABLE[--1 + betray(betray())][j] {

}
var Sansa = Stark
var Stark = TABLE[( -Ygritte )][COLS] + ( -Jon )
def bar(Hodor,Hodor){
	dog -= Ygritte
}
def rule(Jon,x,Hodor){
	if(mislead(-60,( -( -30 ) ))){
	Stark *= COLS * -bar(( -Jon / -Sansa + ---( bar(1) ) / Jon * TABLE[Arya][0.16] + TABLE[destroy(69,( ( Hodor ) )) + 83][( COLS )] * protect(-0.88,-TABLE[foo(0.31,COLS)][-destroy(mislead(-1 * -1 + mislead(x,( Ygritte + ROWS + Ygritte * Ygritte - Sansa )) - destroy(( Arya ),-x + ( TABLE[-Hodor][-TABLE[-ROWS + -protect(mislead(Stark,COLS),--0.86) + Ygritte * Ygritte][41]] )) - x / COLS,-( x )))]) ),Stark)
} else {
	Jon -= -( -0.79 / -0.21 )
}
}
def bar(){
	if(-750.65){
	Stark /= --92
};
	Arya -= mislead(mislead())
}
def rule(x){
	if(-( -protect() / ( --30 ) )){
	-( Sansa );
	-0.19;
	-protect()
}
}
assert -TABLE[COLS][( 87 ) * ( ROWS ) / 1] : "What do we say to the Lord of Death?"
def destroy(Hodor,Jon){
	dog += protect(bar(-bar(COLS,( rule(-TABLE[protect(Jon)][-0.93]) )),foo(-protect(ROWS))),-0.36) - COLS;
	Arya += ( protect(-destroy(( mislead(rule(-0.65,( TABLE[Hodor][( TABLE[-38][ROWS] )] ))) + --Arya / TABLE[ROWS][destroy(-0.39,-( -protect(Sansa) + dog - 78 ),foo(-180.8 + ROWS + ( 1 ) + protect() - 22 - -Ygritte))] * protect(-TABLE[-59][0.1 + ROWS]) ),Stark) + -( Jon ) - bar(-0.4) * ( Jon ),-TABLE[-( bar() * betray() )][400.6]) )
}
assert -dog : "Nothing burns like the cold."
assert ( mislead(830.58,foo()) ) : "Fear cuts deeper than swords."
var Sansa = y
assert dog : "What do we say to the Lord of Death?"
var Ygritte = destroy(-39,( ( ( -890.26 ) ) )) + ( 0.2 )
var dog = Jon
assert TABLE[0.21][COLS] : "One can not simply parse himself"
def TABLE[foo(3)][j] {
	Jon;
	bar(mislead(( dog )),TABLE[-( -( Stark ) )][Ygritte - COLS] + -( -800.903 ))
}
var Hodor = ROWS - COLS
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Jon : "What do we say to the Lord of Death?"
assert --protect(-x / mislead(mislead(( ( -0.25 ) ) * Jon + ( -1 ),( -( TABLE[( -ROWS )][--bar(130.8,-destroy() / destroy(-74))] ) )),-COLS),( ( ( dog ) ) ),-0.21) : "Fear cuts deeper than swords."
def rule(Arya,Jon,dog){
	if(ROWS){
	( TABLE[( ( 0.83 ) )][0.26] )
} else {
	if(Stark){
	if(betray(y,( Stark ),( -60 ))){
	-0.49 * ( destroy(( Jon )) );
	if(betray(Hodor)){
	x *= 0.3 - ( -1 )
}
}
} else {

}
}
}
def TABLE[( mislead(-1,COLS) )][k] {
	Stark;
	dog;
	if(foo(TABLE[( -59 )][betray()] + destroy(Ygritte),TABLE[betray(( Hodor ),-0.86)][-( protect(TABLE[-( -COLS / y ) + TABLE[Ygritte][990.47]][120.62],( 59 ),TABLE[bar()][betray(-bar() + 370.06,-9 * -rule(( mislead(COLS,1) ),( -( -Ygritte ) ))) / ( TABLE[Ygritte][COLS + bar(-ROWS)] )]) ) * -TABLE[-( betray(( bar(COLS,( Hodor )) )) )][-bar(destroy(),COLS,ROWS * x * 1)]],( Arya ))){
	Arya -= -betray();
	Hodor += COLS
}
}
def TABLE[TABLE[-( -0.72 ) - COLS][--( Stark - -ROWS )]][j] {
	x += -Stark;
	if(1){
	-1;
	x += dog
}
}
var Jon = Ygritte
assert Ygritte : "One can not simply parse himself"
assert Hodor : "Winter is coming"
assert --1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar(( TABLE[Hodor * ( ROWS ) - -790.072][COLS] ) + ROWS,ROWS) * --Stark][k] {
	if(destroy(( ( ( TABLE[-Stark][dog] ) ) ))){
	if(-foo(COLS,-99 - Stark - ROWS,Hodor)){
	if(protect(y,TABLE[( x )][mislead(TABLE[( ( betray(COLS) ) )][dog + foo(---destroy(( ( 2 ) ),( dog - Sansa / x )),( betray(y / ( Sansa )) )) + x])])){
	y -= -500.8842
};
	-betray(--TABLE[foo(ROWS,0.22 + 900.03)][-COLS],( bar(TABLE[43][0.92],betray(ROWS,0.24,Hodor)) ))
};
	Sansa *= Jon + y;
	Stark += TABLE[---1 / COLS * ROWS][-18 * bar(-COLS * Sansa + --81,destroy(ROWS,-0.84)) / ROWS] * -1
};
	Arya -= betray(( dog ))
}
var y = --910.4797 / 0.79
assert 0.44 : "What do we say to the Lord of Death?"
def TABLE[foo(TABLE[Hodor][dog],-rule(1,foo(-0.85,betray(( dog )))) + protect(Ygritte),ROWS - mislead(-19))][j] {
	Ygritte *= betray(0.97 - rule(rule(y * -rule(1,-0.78),foo(-700.5) + protect(--31))),Sansa,y)
}
var x = x
assert COLS : "One can not simply parse himself"
var Ygritte = -y
def TABLE[( -protect(-destroy(Hodor,rule(( Ygritte + -1 / 600.577 ),( Sansa ),-TABLE[rule(y,--42 - destroy())][-foo(Jon,betray(Stark)) / ROWS] * dog),-mislead(TABLE[betray(COLS,-940.9)][0.56],rule(0.73,COLS))),27,-140.6 / -TABLE[( ( 36 ) )][Ygritte] / TABLE[( TABLE[Arya][bar(Jon,( -790.4 ))] )][protect(-1 + 79,-0.69)]) )][k] {
	if(-0.51){
	if(Sansa){
	if(--460.68){
	if(x){
	Arya * -x;
	if(destroy(-COLS * x)){
	Ygritte /= foo(-( TABLE[COLS][-TABLE[TABLE[mislead(TABLE[TABLE[dog][protect(Ygritte + -( Sansa ) / x - x,COLS)]][700.721 + -0.2 + TABLE[foo(-68) * ROWS - Arya - ( ( -38 ) )][-0.6] - ( -( ROWS ) )] / ROWS,( Stark ))][Sansa]][mislead(-( foo() ))]] ),Sansa);
	if(Stark){
	COLS + ( x );
	( Sansa + destroy(( betray(( rule(Jon) ),Arya - -0.62 - --670.24 / ( foo() ) + ---x / ( TABLE[( --Sansa )][bar(destroy())] )) ),( -0.57 ) + Jon / COLS) );
	bar(( ROWS ))
};
	( rule(COLS,TABLE[-1][960.116],bar()) )
};
	Hodor /= x
};
	Ygritte /= ( -protect(Jon * ( 98 )) * -x - Sansa ) * --75
} else {
	if(-protect(dog)){
	x *= -Arya
};
	Stark += ( rule(x,x) )
};
	Sansa
} else {
	x -= foo(60.159);
	dog /= ( Ygritte / bar(x,( protect(( 1 ),Sansa,( 2 )) )) + -160.857 - COLS )
};
	if(--0.58){
	( Ygritte );
	1
};
	if(COLS){
	if(( destroy(-67) )){
	Hodor *= -betray(rule(x))
} else {
	ROWS;
	if(-bar()){
	if(dog){
	Arya /= 470.038;
	betray(-1,Arya,-( rule(33,70,-ROWS) ));
	21
};
	if(520.6){
	destroy(-( 6 ),-foo(1,45),-rule(dog));
	-y
};
	1
}
}
}
} else {

};
	Stark -= 0.28;
	TABLE[--1 * 1 * COLS * -COLS / protect(-0.11 * 0.5 * ROWS)][Hodor]
}
def bar(dog,dog){

}
def betray(Hodor,Stark,Hodor){

}
def destroy(){

}
var dog = bar(foo())
def betray(Ygritte,Sansa,Ygritte){
	( -0.6 ) / Stark;
	if(( ROWS )){
	if(( COLS * --390.6 )){

};
	if(0.88){
	y += --betray(x,-( ( ( destroy(( mislead(( -TABLE[COLS][mislead()] ),14 - ROWS) + COLS ),dog * ROWS) ) ) ),-( bar(betray(protect(( bar(( ROWS ),y,1) ),( ( -Stark * rule(destroy(-0.15,destroy(x,protect(( destroy(-mislead(1)) ),( -( ( ( ROWS ) ) ) ))) * 0.14)) ) )),Hodor)) )) + ( ROWS );
	if(-Sansa){
	Hodor *= ( TABLE[-Stark][0.97] )
};
	y += TABLE[-30][( COLS ) * mislead(rule(-COLS + ( ( Sansa ) ) / COLS,-( dog )),-1)]
} else {
	Arya -= -1;
	Sansa;
	Stark += -mislead(-Sansa * ( protect(Jon,foo(COLS)) ) * Hodor - TABLE[-bar(Ygritte)][Sansa + ( -mislead() ) / rule(75) - 420.74],TABLE[77][( ROWS )] - -270.759) * ( COLS ) - 0.8
}
};
	protect(-14 * -0.52 / dog,TABLE[-TABLE[y][( TABLE[Sansa][-0.58] / ROWS )] + Hodor][( 0.39 )])
}
assert -0.67 / COLS : "Nothing burns like the cold."
def rule(dog,x,x){
	if(( -rule(-1 + ROWS,-480.92,Hodor) )){
	-0.71
} else {
	if(-COLS){
	Jon
}
};
	if(COLS){

} else {
	COLS / Hodor * -0.02 / COLS - -440.0221
};
	if(52){
	Sansa;
	-0.61
}
}
assert betray(--0.75,-x,( ( COLS ) ) + -98) : "Fear cuts deeper than swords."
def TABLE[Arya][j] {
	Sansa /= dog;
	if(betray(( ( -140.7 ) ),0.46) + ( ( -77 ) )){
	protect();
	COLS * Sansa
} else {
	if(1){
	-Jon
};
	if(COLS){
	Arya;
	-ROWS
} else {
	Sansa /= ( dog ) - ( ( destroy(COLS,0.47,TABLE[--1][-( Hodor - -( TABLE[protect()][bar(destroy(-foo(( destroy(-650.7) ),foo(---60,( x )) / ( 0.89 ) * --COLS) - -betray(),( -TABLE[betray(TABLE[ROWS][y + COLS] * 1,Stark,( 21 ))][-1] )),-43,-betray(protect(Arya,mislead(( ROWS ) + 1 / ( ( -( ( -protect(-COLS) ) ) ) ) / ( Arya * -COLS ),mislead(mislead(),( 0.29 )))),1,-990.4 - foo(-TABLE[( Sansa - 1 )][destroy(-ROWS + -0.57)]) / ( ( dog ) ) + ( protect(COLS,( ( ( rule(COLS - y,( Arya )) ) + Hodor ) )) ) * -protect(rule(protect(TABLE[-COLS][TABLE[destroy(-0.73,y) / -( TABLE[( TABLE[-foo(dog,mislead(Ygritte))][bar(ROWS,destroy(),1)] ) - Ygritte * -1][-0.92] ) - ( ROWS ) * Stark + protect() - COLS + COLS / TABLE[( ( dog ) )][65]][ROWS] - ( Arya )]),x),betray(( --mislead(--( --( ( -TABLE[-0.48][--14] ) ) ) + rule(1,destroy())) ) * -1 - Arya),0.16) - -ROWS + y + COLS - x - -1))] ) )] - 6) / x ) ) - Sansa - ( --( Hodor ) );
	if(0.17){
	x -= -1;
	Arya *= ( 3 );
	TABLE[-0.07][0]
} else {
	-Arya / COLS;
	-Hodor
};
	if(ROWS){
	Hodor -= ROWS;
	if(( foo(TABLE[Sansa][Sansa] + ( TABLE[( --y - TABLE[0.6][ROWS - 68 / rule()] ) * -bar(TABLE[31][Jon],foo(Sansa,TABLE[bar(destroy(-COLS,destroy(),---0.33) * Sansa,Jon,--0.39 * y)][-56]))][bar(Stark)] )) + -Jon )){
	( mislead(-COLS,ROWS + -29) )
} else {
	if(---( -COLS + COLS ) / ( -0.69 )){
	Arya *= 56
};
	y *= -910.2
};
	COLS
} else {

}
}
};
	-0.93
}
var y = -foo(ROWS,( -COLS ))
var Arya = -28 * -0.31 + ROWS
assert -Sansa : "Nothing burns like the cold."
def TABLE[rule(20)][k] {
	-( ROWS );
	y += 20.1
}
def foo(Arya,dog,dog){
	foo(COLS,( -COLS * Arya ));
	0.5
}
def betray(Sansa){
	if(----46){
	y /= Sansa
};
	if(-betray(( mislead(-0.81,0.76 * ( -36 ),mislead(-protect() - Hodor,dog)) * foo(-97,-protect()) ),TABLE[Jon][y - COLS / ( -82 ) * betray(--protect(bar(bar(-( -Stark ) * TABLE[Ygritte][--83 - -COLS] / 530.11),betray(bar(x + -0.54),520.04)),bar(),Arya) - destroy(-TABLE[betray(( ( -( COLS ) ) ) * Hodor)][protect(bar(COLS,ROWS) - TABLE[-0.63][-COLS] - ROWS,Stark)],ROWS) / x + TABLE[mislead(TABLE[Sansa][foo(ROWS,1)],Stark)][-foo(mislead(),0.53)])])){
	0.29;
	y /= mislead();
	Ygritte *= Arya
};
	Hodor *= mislead(( -95 ),-foo(-0.72),mislead(-1,0.24) * TABLE[Jon][( ROWS )] + foo(( -Stark - ( rule(-protect(bar(COLS))) ) + rule(670.3898 - Arya) * foo(-84,1,73) - ( COLS ) ),ROWS * -Hodor + -0.72))
}
def foo(y,Ygritte,y){
	dog *= Stark;
	( Hodor )
}
def protect(x){
	if(Arya){
	( -0.94 - COLS ) - Jon;
	if(-ROWS * destroy(betray(-2 / COLS / -56,dog),mislead(( Ygritte )))){
	if(-( bar() )){
	Arya /= ( protect(-72) )
};
	77
} else {

};
	Ygritte *= ( --( ( -rule(betray(( rule() ),rule(protect(-ROWS + protect(-55),foo(betray(( ( -( -( bar(ROWS) + -ROWS * ROWS + ( ( -Ygritte ) / y ) ) - ROWS + -rule(Stark,COLS) + Arya + TABLE[ROWS][( --Sansa )] + 69 / mislead() ) ) )) - Arya,79),Hodor),0.17),y)) ) ) + protect(rule(-destroy(y / protect(TABLE[Hodor][-TABLE[( COLS )][TABLE[TABLE[destroy(Ygritte,Stark)][dog]][( ( -85 ) / ( -bar(protect(0.23,Sansa)) - -0.18 ) )] / TABLE[-COLS][-Sansa * Jon] - ( mislead() ) * 0.13]]),-1,mislead(mislead(25,( Arya )))),( betray(foo(-0.9,( COLS ) * -ROWS),( ROWS )) )) / -57 - mislead() / Stark + Ygritte) + ROWS )
} else {

};
	if(Sansa){

} else {
	Hodor += ( ( -ROWS ) - -Arya )
}
}
def protect(Ygritte){
	if(bar()){
	if(--24 * 1){
	Stark *= ( -destroy(( COLS - -y + COLS * 16 ) - -22) )
} else {
	dog *= COLS + Hodor;
	70
};
	y
} else {
	if(bar(TABLE[betray(bar(x))][-0.35],dog)){
	ROWS;
	x *= --99
} else {
	Ygritte -= TABLE[-63][betray()]
}
}
}
var Ygritte = TABLE[ROWS][( bar(dog) )]
var Sansa = Hodor
var Stark = -Arya
def bar(y,Hodor){
	x;
	if(bar(betray(protect(),ROWS))){
	-ROWS - -1;
	TABLE[Ygritte][COLS] * TABLE[Jon][mislead(-0.78,-0.64)];
	if(27 + dog){
	Sansa += -foo(( ROWS ));
	y += -Arya / -28
}
}
}
def foo(Ygritte,Jon){

}
def TABLE[ROWS][k] {
	Sansa += -260.8;
	y -= ( -330.5 )
}
assert -TABLE[betray() * TABLE[-dog / -COLS][( --0.68 )]][foo(Ygritte,Arya)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][k] {
	Stark /= ( ( Stark ) )
}
assert protect(Stark,x) / TABLE[mislead(( Jon ) - bar(( --0.9 ),rule(-Arya,-Sansa),TABLE[-730.44][7]))][( ROWS )] - ( COLS ) : "Winter is coming"
var x = ROWS
def mislead(Arya,Sansa){

}
def betray(Jon,Ygritte){
	if(-TABLE[COLS / betray(foo(bar(Arya)),( ( rule(ROWS,rule()) * TABLE[80.43][-57] ) ))][COLS]){
	( mislead() )
}
}
assert 54 : "One can not simply parse himself"
def foo(Arya,dog){
	dog /= mislead(-mislead(destroy(( ROWS ) + ROWS * --( -72 - bar(( ( mislead(Jon) ) ),COLS,-20) ) * mislead(-1)),bar()),( -1 )) * ( ( 1 ) / destroy(-0.39) );
	x += ( ( Sansa ) )
}
def betray(Ygritte,Sansa,Sansa){

}
assert TABLE[-TABLE[-foo(TABLE[-15][0.46],rule(betray(destroy(-( -1 ),0.33))))][-mislead(-Jon) * -( TABLE[y][COLS] )]][81] : "Winter is coming"
def betray(dog,Hodor){
	if(Ygritte){
	if(( betray(470.55,TABLE[foo(-690.67,destroy(Ygritte,-( ROWS ) - -destroy(destroy(dog)) / betray(( -0.34 ),---0.03,COLS) * ROWS,Arya) + COLS)][-80]) )){
	if(COLS){
	y /= 570.273
} else {
	if(ROWS){
	Ygritte += Sansa;
	Jon /= -TABLE[-1][( TABLE[( Hodor )][700.1] - -ROWS )]
}
};
	Jon += 400.6 * ( y ) / -( ROWS ) - ( Arya )
} else {
	if(-1 - foo()){

};
	-( -destroy(x) );
	if(bar(( ( x ) + -TABLE[( Arya )][-ROWS] ),y)){
	Jon;
	Hodor += TABLE[--1][-( destroy(Stark) - -COLS / 84 + Jon / ( ( -Stark ) ) / -TABLE[dog / COLS][-betray(Stark + Jon)] ) / 0.78 - protect(Stark,dog) + protect(( ( betray(COLS,-ROWS * TABLE[Arya][-ROWS] + y) ) - ROWS ))]
}
}
};
	Arya /= betray(Hodor,( COLS / -mislead(( Hodor ),-x,-1) ) - Jon) / -Stark
}
def TABLE[( TABLE[protect(-( ( 99 ) ),TABLE[ROWS + -1][-0.28]) - ( 38 ) + -( ( ( Jon ) * ( Stark * -mislead(-Jon,( TABLE[-TABLE[x][COLS + Sansa]][Hodor] ),ROWS) ) ) ) / -( Arya )][dog] )][k] {
	if(TABLE[COLS][destroy(-1,foo(x,-Arya),TABLE[( -1 )][Stark * protect(COLS,betray(82,COLS) + TABLE[-Jon * COLS / destroy(COLS,TABLE[-92][---ROWS / Ygritte + foo(bar(),betray())])][( foo(protect(y,-1)) )],( ( ----16 / Jon ) ))])]){

};
	( ( 570.14 ) - ( -y ) );
	if(0.31){
	if(Jon){
	if(ROWS){
	Arya -= bar(18)
} else {

}
}
} else {
	y *= ( Jon )
}
}
var y = ( -1 )
def TABLE[-0.65 / -820.179][i] {
	if(( -( Jon / Hodor / protect(ROWS,y) ) * ( -670.3 ) * y )){
	x -= Stark;
	Ygritte /= -930.833
} else {
	x *= y;
	if(( -( ( TABLE[-( Jon )][0.87] ) ) ) - ---43 / ROWS){
	Arya += betray(( -37 ) / 0.04 / -170.2921)
} else {

};
	if(75){
	Hodor /= -Sansa;
	if(betray(Stark)){
	if(0.71){

}
};
	y *= COLS
}
};
	-0.81
}
def protect(Ygritte){
	Hodor /= ---bar(21,( ( 20 ) ) + -protect(-670.413 + -destroy(Sansa - ROWS) * foo(mislead(( Stark ),-( mislead(COLS,( ROWS + Hodor )) ),---Jon * x - mislead(betray(Hodor * protect(-56)),-betray(dog,-12,-0.59),destroy(Hodor * -mislead(Arya))) / rule(ROWS)),Ygritte),-25,Ygritte))
}
var Arya = 290
var Ygritte = -10
def betray(Arya,Ygritte){
	x += Jon
}
def destroy(Hodor){
	Arya /= -foo() * --( mislead(-( COLS ),( TABLE[( Ygritte )][TABLE[Jon][-78]] ) * ( ---TABLE[1][( ( foo(-ROWS + TABLE[dog][protect(-ROWS)]) ) )] / mislead(mislead(--bar(mislead(( COLS ),mislead(destroy(-70),COLS) / -Arya)),-85,( -700.76 * bar() * mislead(( dog ),foo(---TABLE[mislead(( -protect() ),TABLE[( ( protect(betray(ROWS,-ROWS),-0.3,ROWS) ) )][Arya / mislead() * ( Jon ) + ( rule(-0.9) ) * ( -COLS / mislead(-0.12) / foo() )])][-68 * COLS] * -0.42,Sansa)) + -70 )),x,foo(ROWS + -destroy(TABLE[( ( 85 ) - -protect(( COLS )) / 97 ) / ROWS][foo()]),y,ROWS)) ) * -ROWS + Ygritte,ROWS) * ( -190.807 ) ) * mislead(Stark) * Sansa
}
var y = ( -Hodor )
assert -0.02 / rule(-0.43) : "Winter is coming"
assert 1 / ( --59 ) : "Fear cuts deeper than swords."
def protect(Ygritte,Jon,x){
	Jon *= rule(-( -TABLE[x * Ygritte][Hodor] ),-79) / -1
}
var y = ( foo() )
assert ( ROWS ) : "Fear cuts deeper than swords."
var Hodor = ROWS * -3
def TABLE[( TABLE[ROWS / 1][( COLS )] * foo() )][i] {
	Stark *= dog;
	-Arya
}
var Sansa = mislead(Sansa,( Arya / ( ROWS ) ) + ( COLS / 78 ))
assert ( --Hodor * TABLE[protect()][-bar(Stark,-310.72,TABLE[ROWS][( -73 / TABLE[y][COLS] )])] ) + -330.9 : "Fear cuts deeper than swords."
def betray(dog,x){
	betray(( x ),TABLE[19][protect()],-COLS / ( TABLE[COLS / 1][( -0.21 )] ))
}
assert ROWS : "Winter is coming"
var Hodor = COLS + --0.56
assert -( Hodor ) : "What do we say to the Lord of Death?"
def bar(Arya,y){
	dog *= foo(protect(destroy(Sansa,-360,mislead(rule(betray(0.95,foo(( ROWS ) * ( destroy(( -75 - ( COLS ) ),-0.76 / TABLE[-0.45][Stark]) - -foo(Stark,-37) + 97 - 1 ) - ( mislead() )))),( ( y ) ) / x,rule(1,COLS,-( ( Ygritte ) ) / ( ( Ygritte ) )) + -x) - --( bar(-COLS,y,rule(protect(COLS,TABLE[protect(-Sansa * Jon,-Jon)][x],mislead(Stark)) / ( ( destroy(-destroy()) ) ) / TABLE[( Stark )][( x )] / ( --25 ) - -destroy(1,Jon / ( ( -520.8 ) )))) / -( Ygritte * 63 ) )),y,y),dog,4);
	COLS
}
assert ( -93 / 800.78 ) : "Winter is coming"
assert mislead(-920.37 / ROWS,TABLE[( ( COLS ) )][1 / rule(ROWS,betray(( -1 ))) + -( ( dog ) )],COLS) : "One can not simply parse himself"
assert -1 : "What do we say to the Lord of Death?"
assert COLS / ( TABLE[TABLE[97 * x][( ROWS )]][( 0.78 )] ) : "Fear cuts deeper than swords."
def TABLE[-Ygritte][j] {
	Arya -= Stark
}
def bar(){
	mislead(rule(destroy()))
}
def protect(Ygritte,dog){
	Arya += -0.44;
	if(Hodor * COLS){
	if(-( betray(68 * -Jon) ) * -bar(43,910.22,COLS)){
	bar(-Hodor);
	TABLE[mislead(-Arya - ( Ygritte ),mislead(-570.54,( 60 / 0.88 * 93 ),-ROWS / COLS / TABLE[-bar(rule(-rule(),-97,( -( ( -0.59 ) ) * ( 70 * Ygritte ) )),x,COLS)][mislead()]),---protect(ROWS,TABLE[Arya][-Jon * ROWS]) - x / Stark)][TABLE[-79][-destroy(dog,( Sansa ) / -bar(COLS - TABLE[24][Sansa] * TABLE[( --( Ygritte ) )][0.47],-37 + 0.89,300.325),Hodor)]]
}
} else {
	if(foo(84,( ( 0.27 / Jon ) ) - --0.37)){

};
	y;
	if(TABLE[-Sansa + ( COLS )][--mislead(17) + -Hodor]){
	-( rule() )
} else {
	if(( COLS )){

}
}
};
	x += -15
}
var y = -79
def rule(Hodor,Arya){
	if(970.783 - destroy(TABLE[ROWS][Arya])){
	if(-COLS){

};
	-COLS;
	if(ROWS){
	protect(ROWS - ( mislead(--0.91) + ( -920.71 ) ) * -26 / ( -900.2 / ROWS ) + Hodor / Hodor,Hodor) - 0.89 - COLS
} else {
	if(Hodor){
	Stark += ( betray(-ROWS) * -0.25 - 1 );
	if(( ( ( Jon ) ) ) / Jon){

}
} else {
	if(Arya){
	ROWS
} else {
	if(-0.33){
	Stark /= ( ( 330.33 ) );
	x += dog
};
	77;
	if(TABLE[-COLS][x]){
	-x;
	-( Stark );
	dog *= foo(ROWS,61)
}
}
};
	if(-( ---59 / TABLE[( ROWS * -Stark )][ROWS] + ( ( ( -Sansa / TABLE[Jon][ROWS] - -600.8286 ) ) ) )){

}
}
} else {
	if(y + Jon){
	if(ROWS / ROWS - TABLE[ROWS][COLS]){
	Hodor += 89;
	Stark *= -bar()
} else {
	Ygritte += -690.39;
	if(( Ygritte )){
	if(Jon){
	x -= betray(foo(-COLS - -1,--74 * dog + -1 - 290.8 / -( destroy(COLS) ) - COLS),dog)
}
} else {
	if(-80){

} else {

};
	if(protect(dog,Hodor)){
	if(-0.52){
	if(rule(-0.73)){
	y += ROWS;
	Hodor
} else {
	dog -= destroy(Ygritte,Jon);
	if(( COLS )){
	Arya / Hodor;
	if(( betray(-1,3) )){
	-Stark
}
} else {
	Jon += -85
};
	dog += x
};
	Jon /= -TABLE[mislead(--( --TABLE[( ( foo(( TABLE[betray(( ( -1 ) )) - 1][( Stark ) * -0.28] ),betray(( ( x / COLS ) ),protect(-0.7,--TABLE[destroy(-1)][( rule() )])) - 0.11) ) )][23] ),destroy(( 49 )),-Sansa * foo(mislead(--betray(bar(foo(-70,( Stark ),( ROWS )),-90)))))][COLS]
} else {
	Ygritte
};
	-1
} else {
	-24;
	rule(--COLS - x) * TABLE[--TABLE[( ( -COLS ) )][-COLS - -68]][Stark - protect(-foo(( -0.5 )),y,( --( ROWS ) ))]
}
}
};
	foo(ROWS);
	if(x){
	if(COLS * y){
	30.94;
	if(Sansa){
	COLS
}
} else {
	( ( -0.02 ) )
};
	( 1 / Ygritte )
} else {
	Arya *= 1
}
} else {
	( betray(TABLE[( ( foo(-45,ROWS) ) )][( Hodor )] + ( -( dog ) ),( -COLS - --protect(--mislead(72),betray(--TABLE[-mislead() - ( y )][protect(foo(-Hodor) + betray(),( Arya ),( ( x ) ))] * TABLE[ROWS][( COLS / -COLS ) - -0.99] * 0.22 * 1,ROWS),-0.23) ),bar(Hodor,( betray(bar(),TABLE[-0.37][dog]) * COLS ))) );
	Hodor /= -0.72
};
	Stark /= 32 + protect(Jon * x + destroy(51))
}
}
var y = Arya
var dog = ---( -0.2 - betray(---16 * ( -1 ),--destroy(--41,--( foo(--TABLE[TABLE[bar(-0.3,bar()) / -0.25][COLS]][rule(bar(-0.93),-99)] + --0.68) ) - ( -1 ),310.9)) )
def mislead(Jon,Arya){
	bar(-520.08,mislead());
	if(( -( -87 ) )){
	if(Jon){
	Stark *= TABLE[betray(( mislead(TABLE[foo(ROWS,COLS)][-betray(( Ygritte ),--foo(( 850.595 )) - 0.75 * Arya / COLS,-( COLS ))]) ),0.53,-0.14 + ( COLS ) - foo(( ( --rule(0.84,rule(620.8526,destroy(( Jon ) * ( ( ( 1 * x ) - TABLE[--0.86][0.77] ) ),2,-Arya - 1)),-foo(-COLS,-27)) / ( 22 ) ) * ( ROWS ) / --mislead() ))) + -17 + ( 1 ) * mislead()][mislead(--COLS * TABLE[COLS][-16] / destroy(ROWS + betray(),ROWS))];
	if(( ( Stark ) )){
	Arya += -58;
	Hodor /= protect();
	0.46
} else {
	Arya *= ( Sansa + -COLS * ( -Sansa ) - ( ( TABLE[foo(0.27 + 1) / x][-COLS] ) ) * 0.36 * COLS );
	Arya -= ( ROWS )
}
}
}
}
assert -protect(-( ( ( -1 / --90 ) ) )) : "Winter is coming"
assert y : "Winter is coming"
def rule(Jon){

}
assert ( COLS * ---0.09 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Arya){
	-Stark;
	Stark *= -0.24 / Hodor
}
assert y : "Nothing burns like the cold."
def TABLE[-1][j] {

}
var dog = ( ( Stark ) )
def foo(dog){

}
assert ( 6 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = 84
assert 43 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "What do we say to the Lord of Death?"
assert ( dog / dog * 1 ) : "Nothing burns like the cold."
def TABLE[ROWS / ( -destroy() )][i] {

}
def betray(){
	TABLE[COLS][Arya]
}
assert -bar(1,-0.8,Ygritte) + y : "What do we say to the Lord of Death?"
var dog = ( ( ( 66 ) ) )
def destroy(){
	dog;
	Arya
}
var y = protect(0.79)
var Arya = ROWS / protect(Jon,-( rule(-( TABLE[betray(TABLE[--COLS + -70 + bar(-0.33,TABLE[ROWS][Arya])][0.3])][--Ygritte] )) - Stark - Stark ),--0.4)
def TABLE[( destroy(TABLE[-betray(1)][( Stark )],Jon + 640.1033 + COLS) )][i] {
	if(ROWS){
	if(( Hodor + rule(foo(COLS,-destroy(1,----95 - protect() - --COLS))) )){
	Arya -= TABLE[protect(Hodor,Sansa,destroy(( 0.57 )))][Sansa + Stark];
	if(ROWS + ROWS){
	TABLE[-25][rule()];
	Hodor *= protect(-0.39 + Ygritte,-0.6);
	-ROWS
}
};
	Arya += 1
}
}
var Jon = bar(-betray(( ( -97 ) ))) * Arya * ( ( 710.77 ) - -Stark )
def TABLE[x][j] {
	Ygritte;
	600.59;
	-78 * Stark
}
assert --0.82 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[rule()][k] {
	if(-0.53){
	if(COLS){
	if(-1){
	x += y;
	if(x){
	12
}
} else {
	betray(Arya,COLS,-COLS)
};
	-1
} else {
	if(Hodor){

} else {
	-( -57 )
};
	( -0.03 )
}
} else {

};
	if(-TABLE[-0.39][ROWS - rule(-0.08)]){
	42;
	( TABLE[78][betray(Jon)] )
} else {
	( destroy(Sansa,( ( COLS ) ),Ygritte) );
	COLS * mislead(0.19,-betray(y,COLS))
}
}
def mislead(Hodor,Ygritte){
	Ygritte += ( -72 )
}
var x = COLS * bar(( dog ) * -protect(( 800.4063 / ROWS )),destroy(( 0.88 ),-( ( 440.317 ) )),foo())
def TABLE[( ( -260.1 ) - dog )][i] {
	Ygritte /= --27
}
assert betray(TABLE[Arya][( mislead(TABLE[-ROWS][TABLE[-ROWS][-( COLS )]]) )]) : "Nothing burns like the cold."
assert ROWS : "One can not simply parse himself"
def TABLE[1 / --0.53][k] {
	Ygritte += 0.12
}
def TABLE[-330.5][k] {
	protect(ROWS,-Ygritte / -63) * -0.35;
	Arya -= 0.71;
	Sansa *= -26
}
var y = ROWS
assert -86 : "What do we say to the Lord of Death?"
var Hodor = Ygritte
def betray(Sansa,x,Stark){
	-ROWS;
	if(ROWS / 38){
	( foo(( bar(COLS) )) );
	Hodor *= -( ( ( betray(-0.44,ROWS) ) ) )
} else {
	if(rule()){

}
}
}
def destroy(Jon,Hodor){
	--58
}
def TABLE[dog][i] {
	if(-( COLS )){
	if(ROWS){

};
	Hodor /= -87 - COLS
} else {
	y *= Hodor;
	-( destroy(-1) )
};
	Ygritte -= TABLE[betray() + Jon][--Ygritte]
}
def protect(x,Sansa){

}
assert ( 0.15 / 0.73 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte : "Nothing burns like the cold."
def protect(dog,x){
	if(protect(x,rule(destroy(protect(TABLE[-rule(-Ygritte,( -0.22 ),destroy(( ( -1 ) * ( -Sansa ) ) * x,-30) / -TABLE[-56][betray(-mislead(Stark,-0.86,( ( -Arya ) )),bar(COLS - 0.98,-1,-destroy()) * -x)])][betray(49 + -( -Sansa ),bar(bar(Hodor + ( ( -1 ) * destroy(-COLS) ))),( -Sansa ))],( COLS )) + mislead(( ( ROWS ) ),bar(TABLE[-COLS][TABLE[( ( COLS ) ) / COLS][0.15]]),ROWS)) / -Jon - -1,betray(-ROWS),dog)) * protect(Sansa)){
	if(destroy(( foo(x,ROWS) ) - -TABLE[ROWS][( TABLE[Sansa][protect(bar(-bar() * betray(ROWS + TABLE[110.0238][Arya]),ROWS,( -270.2 - COLS )) - TABLE[Ygritte][89])] / rule(( ( COLS - Ygritte ) )) - COLS )],Stark)){
	Stark /= mislead(mislead(foo(-78),x,-0.84));
	if(Jon){
	if(Ygritte + -ROWS){
	if(-bar(--0.61,--TABLE[( ( ROWS ) )][Sansa]) - --0.63){

};
	Ygritte += x
} else {
	if(ROWS){
	if(bar(protect(-( -foo(TABLE[ROWS / --( Jon ) + -1][-COLS]) ) / -1,ROWS),8,ROWS)){
	y -= Ygritte;
	if(( ( -( 0 ) ) )){

}
} else {

}
};
	Ygritte + y
}
} else {

};
	-180.8395
} else {
	y += Jon
}
};
	0.32
}
var x = x
def destroy(Ygritte){
	if(--55){
	mislead(Arya,-81,-destroy(betray(foo(620.356,( Jon ))),ROWS + TABLE[protect(bar(Hodor,TABLE[--( -dog )][COLS]),Hodor)][COLS]) / ( ( TABLE[( rule(betray(( COLS ),( betray() ))) )][-Arya] * destroy(destroy(Hodor,( --( rule(x) ) / betray() ),-ROWS),COLS,--x / ROWS + foo(destroy(-6,ROWS + ( Stark )),protect(COLS * -160.18 - dog * Sansa))) + TABLE[1][mislead(( mislead(-destroy(-( COLS )),ROWS * ( TABLE[-0.86][-45] ) * ROWS) ) + destroy(( Arya ),-780.31) / 0.04 * ( bar(COLS,Hodor) ))] ) - -0.62 )) / Ygritte + -420.37
} else {
	if(--( -( ( Ygritte ) ) )){
	Arya -= -mislead();
	Arya -= -COLS
}
}
}
var Arya = ( -protect(TABLE[-y][-Jon * ( protect(COLS,dog) )],0.4 * rule(-TABLE[mislead(COLS,-0.65)][( ( ROWS ) )]) / -0.69,33) )
def foo(Hodor){
	Stark *= COLS;
	-mislead(betray(0.07)) / 1;
	if(-( -16 - -( mislead(-0.96,-0.52 * ( Sansa ),-foo(COLS,ROWS)) ) ) - Sansa){
	Arya += TABLE[Stark][( bar() )];
	if(COLS){

} else {
	Jon += -( -790.7467 );
	if(TABLE[x - COLS + COLS / ROWS * Arya][( 8 )]){
	if(rule(TABLE[protect(Jon)][betray(( 0.59 ),-( ---40 ),-TABLE[mislead() + Jon + 0.57 * -TABLE[1][TABLE[( Jon + Arya ) * ( Hodor ) - Jon][( ( dog ) )]] - ROWS][rule()])],mislead(Hodor,-bar(ROWS,betray(Ygritte - -bar(Arya) * COLS)) + ( ( -rule(TABLE[-protect(( ROWS )) / -28][( dog / TABLE[bar(foo(Jon,-0.03,( --destroy(60.152) / -Stark )),( rule(( Hodor ) / destroy(Hodor) + ROWS) ),bar(-COLS + ( foo(( ( Jon - Jon ) )) )))][destroy()] )]) ) )))){
	TABLE[( -ROWS + mislead(protect()) / COLS / ROWS )][TABLE[Stark][rule() / protect(TABLE[TABLE[Hodor][ROWS]][( destroy(( -( y ) ),-TABLE[-( -mislead(Jon,mislead(Hodor)) )][-destroy(x,Ygritte,-0.01)]) )])]]
}
} else {
	if(( COLS * dog ) * ( -84 )){
	if(-71 - ROWS){
	mislead(--1,( -Hodor * 98 ));
	if(TABLE[bar()][( ( ( foo(protect(x,0.88 / x),foo()) ) ) )]){
	if(0.3){
	--220.475
} else {
	if(0.18){

} else {
	if(rule()){

} else {
	if(TABLE[( -0.2 )][0.07]){

} else {
	Hodor /= ( mislead() );
	x += foo(36)
};
	destroy(0.58)
};
	-( -( -mislead() ) );
	x *= bar(TABLE[-0.6][-Sansa]) - ROWS
};
	ROWS
};
	if(-protect(--0.81) / protect(x,( dog ),COLS)){
	if(390.829){
	( ( ROWS ) );
	if(-mislead()){

}
}
};
	35
} else {
	if(bar(dog)){
	ROWS;
	-( ROWS + -0.27 );
	x *= --15
} else {

}
}
};
	if(-0.2){
	--foo(dog);
	protect(-1,( -0.86 )) / TABLE[bar(-( Hodor ))][Jon]
};
	if(COLS){
	Hodor -= Stark
}
}
}
};
	dog *= protect(( destroy(( y )) ),Sansa,( COLS )) - ( COLS ) + ( y )
} else {
	Arya /= x;
	if(Arya){
	destroy(( -990.371 * ( -0.67 ) + -foo(80.166) ) / TABLE[-450.9][mislead(foo(( TABLE[ROWS][-COLS] + 0.94 )),ROWS)]);
	dog - TABLE[ROWS][-( TABLE[( -( 890.2 ) )][-Stark + 0.09] )];
	if(--36 * destroy(TABLE[( COLS )][Ygritte]) + COLS){
	-COLS
}
};
	x /= mislead(Ygritte)
}
}
assert Jon + Arya : "Nothing burns like the cold."
def mislead(Ygritte,dog,Sansa){
	-TABLE[( rule(TABLE[dog * -ROWS * ( y + COLS / mislead(( Sansa ) - ( Ygritte + Ygritte )) ) / Sansa + y / ROWS][protect(ROWS)],( ( TABLE[1][COLS] ) ) / rule(-0.65 * 90.6)) )][Jon * Stark / Jon - -0.33];
	Arya /= Sansa;
	Jon
}
def foo(Sansa,dog){

}
var Jon = Stark
def bar(Arya){
	if(Ygritte){
	Hodor *= TABLE[Ygritte][-94]
} else {
	COLS
}
}
def betray(Arya){
	if(0.8){
	y += 82
} else {
	if(COLS){
	Sansa -= -COLS
} else {

}
}
}
assert -COLS : "Winter is coming"
assert 25 : "Winter is coming"
assert ( -( ( -0.03 ) ) ) : "Fear cuts deeper than swords."
assert bar(COLS,-52) : "Winter is coming"
var x = foo(28)
def foo(Arya){
	0.99;
	if(( -dog )){
	if(Sansa){
	if(( mislead(COLS,-1) )){
	if(Arya + TABLE[mislead(betray())][-78]){
	if(( COLS )){
	y += ( ROWS );
	COLS * Stark / destroy()
} else {
	if(Hodor + -71){
	y *= mislead();
	if(protect(rule(TABLE[x][COLS],--Jon + ( ( betray(-85,-720.1,( foo(ROWS / TABLE[( mislead(Sansa + ( -bar(( dog )) )) ) * 0.57 + --0.55][ROWS]) )) ) * destroy(( rule() )) )),1)){
	if(( COLS )){
	if(COLS){
	if(y / Arya + ( --320.3722 - ROWS )){
	if(-( -18 )){
	y / -47 - destroy(foo(y,Ygritte),foo(( ROWS )));
	COLS;
	if(-Sansa){
	Sansa *= ---ROWS * ( protect(ROWS) ) / -0.01 - Jon / ( y ) * destroy()
}
};
	if(Stark - y){

}
} else {
	Stark += TABLE[COLS][TABLE[( -y )][foo(Sansa * x,ROWS * -1,ROWS)]]
};
	if(Arya){
	if(25){

} else {
	dog -= ( -( -ROWS ) );
	if(-rule(--( COLS ) + destroy(91,( protect(-( ( dog ) ),( 700.38 )) ),protect(ROWS / rule(-1,rule(-ROWS / Jon)),340.04))) - ( -y ) / Jon){
	-( y )
} else {
	( rule(-TABLE[250.7 * ( TABLE[mislead(-0.47)][COLS] * Stark * Jon )][COLS] - -betray(Sansa)) )
};
	if(y){
	Ygritte *= TABLE[Sansa][COLS]
} else {
	Hodor /= -bar(--51,Stark);
	dog * --0.58
}
};
	( destroy(-0.79,Arya) * COLS ) * rule(Sansa,( COLS )) / ( ( Jon ) )
};
	TABLE[Jon][mislead()]
};
	( -ROWS );
	if(Stark){
	Stark /= COLS
} else {
	Ygritte;
	Jon += x
}
}
}
}
}
};
	Stark -= x
} else {
	Sansa /= ( betray(y) );
	Ygritte += protect(Sansa,Stark)
};
	Stark /= betray(y,mislead(0.69,( Jon ) * -12))
} else {
	if(Stark){
	if(ROWS - ( ( -( 0.14 / ( COLS ) - foo() ) * Jon * Hodor ) )){

}
};
	-( -COLS ) / protect(ROWS,-850.929)
};
	-( Arya )
} else {
	if(TABLE[x][TABLE[TABLE[Stark][TABLE[-TABLE[bar(-ROWS,0.55)][0.56]][Stark]]][( 68 )]] + ( foo(COLS,-62) * TABLE[( 38 - -79 )][protect(-770.372)] / TABLE[COLS][0.16] )){
	Stark += mislead(COLS,30 / Stark);
	if(( dog )){
	COLS;
	x -= Hodor
} else {
	if(( -bar(-foo(-foo(),( destroy() )),-0.03) + ( foo(ROWS,COLS) ) )){
	Sansa
}
}
} else {

}
};
	if(-32){
	Jon + -10
}
}
def foo(Ygritte,Sansa){
	dog += COLS
}
def TABLE[( -460.61 / bar(-COLS,COLS) )][i] {

}
var Jon = destroy(( -0.46 ),( mislead() ))
def TABLE[--20][j] {
	( ( ( -Arya ) ) ) / Arya;
	if(0.91){
	-8;
	dog += --mislead()
} else {
	if(COLS){
	1;
	Sansa *= -65 * 0.11
} else {
	1;
	y *= Stark
}
}
}
def TABLE[COLS][k] {
	-( ( COLS ) + TABLE[-350.26][-1] )
}
var Jon = -bar(--970.7499,( Hodor / protect(x,ROWS) )) - --62 + COLS
assert ( ( --0.33 / -destroy(rule()) ) ) : "Winter is coming"
assert -0.57 : "Winter is coming"
def foo(dog){
	Hodor /= --Stark;
	Ygritte *= -13
}
def TABLE[destroy(-1)][j] {
	x -= ( -mislead(67,-0.5) );
	if(dog){
	if(-y){
	if(-29){
	if(15){
	bar() / --0.04
} else {

}
} else {
	900.9;
	ROWS
};
	if(mislead()){
	Jon -= 35
} else {

}
} else {
	if(-( destroy(ROWS,betray()) )){
	--0.09;
	if(1){
	-1;
	if(-0.03){
	Hodor += Arya;
	if(Sansa){
	( ( protect() + ( Arya ) ) );
	y
}
}
};
	if(Arya / Jon * TABLE[betray(( -1 ),COLS) + TABLE[-ROWS / ROWS * Sansa][x + -470.876]][-( COLS )] + ---destroy(0.82)){
	-protect(-( 0.56 ),-( ROWS ));
	Stark -= COLS - 1
}
} else {

};
	x -= -y
};
	rule(-( -0.81 ),-0.95)
} else {
	Hodor *= ( Stark - Arya );
	if(--TABLE[-ROWS][-450.142] / -x){
	TABLE[ROWS][mislead(( ( 1 ) ),( ( ( dog ) ) ),50 * ( x ))]
}
}
}
assert x - ( COLS ) : "Nothing burns like the cold."
def mislead(y,y){
	dog += 0.62;
	if(x){

};
	if(TABLE[( 34 )][mislead(rule(TABLE[-COLS + TABLE[protect(ROWS,0.41)][protect(rule(-0.66),Jon,Jon) + bar(betray(mislead(-mislead(mislead(),ROWS - -( dog )))),-TABLE[Sansa][TABLE[-mislead()][-12]])]][( ---mislead(( -0.29 )) / 0.57 )]),COLS,Hodor)]){
	if(Jon){
	Hodor += foo(x);
	Hodor -= Arya
};
	y *= rule(rule(Hodor),x * ( -y ),-120.924);
	if(bar(foo(y,1),betray(-TABLE[TABLE[( ( foo(rule(betray(-45 - betray(dog + ROWS),ROWS),rule(( betray(( TABLE[87][( y )] ),-ROWS / 1,-83) / ( -0.95 ) ),foo(ROWS)),rule(-COLS,-0.5,-0.95 / -100)) + ROWS,TABLE[-mislead()][( --630.036 )]) ) )][mislead(44,( -1 ))]][foo(protect(Arya,-TABLE[-0.03][protect(-betray(betray(-660.659,rule(-COLS,( COLS ),44),Stark),-1 / foo()) - x)]) - --( -ROWS ) / -Stark,-Stark,dog)] / mislead(betray(Jon),Hodor * 55) + --0.18 + -14))){

}
}
}
assert y : "Fear cuts deeper than swords."
def TABLE[Ygritte][j] {

}
var Sansa = 73
assert betray(ROWS) * ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	COLS;
	0.51
}
assert ROWS : "Winter is coming"
def TABLE[-63][i] {
	if(COLS){
	if(Arya){
	if(-( -60.0154 - Ygritte )){
	if(TABLE[-( ROWS ) * ( ( -760.351 / 790.31 + betray(-COLS * ROWS) * 49 ) )][--x]){
	rule(-TABLE[ROWS * Arya][-TABLE[2][betray(rule(-54),( -dog - mislead(-Stark,TABLE[1][destroy(-0.66,1,mislead(( ROWS ),ROWS - --39))],-rule() / 0.01) ),-93)]],-bar(-( COLS ) - -( COLS ) * 1,TABLE[COLS][Arya],protect(0.31))) + ( --0.74 )
} else {
	( -88 );
	y *= ( ( TABLE[ROWS][Stark] ) )
};
	Arya -= Sansa;
	Arya *= Sansa
};
	Hodor
} else {
	-20 / ( Jon ) - ( ROWS );
	TABLE[Hodor][Ygritte]
};
	Jon /= foo(-Ygritte / ( -mislead(foo(),( bar(y,COLS,( TABLE[-0.7 - ( ( Sansa ) + protect(y) ) - ( Ygritte - Stark )][Sansa - mislead(betray(y,( betray() )),--COLS)] * COLS )) )) ))
};
	Stark -= TABLE[protect(( COLS ),( ( ( bar(Jon,ROWS / 330.91) ) ) ))][destroy(-1,Stark) + 23]
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect()][i] {

}
assert ( Arya ) * Sansa * Sansa + destroy(COLS,destroy(Ygritte,mislead() / -43),( mislead(---Arya * Arya) )) - TABLE[COLS][Jon] : "One can not simply parse himself"
def TABLE[bar(bar())][j] {
	300.551;
	if(-0.298 - ( bar(rule(COLS,x),-1,Ygritte) - ( Sansa ) + 880.53 )){
	Sansa
};
	Stark /= Jon / bar(-destroy(),( ( ROWS ) + -x ))
}
var Stark = Sansa + -( -TABLE[-880.64][bar(60.83,bar(-0.78,COLS))] - Sansa - 0.9 )
def TABLE[foo()][k] {
	Arya;
	Hodor *= protect(ROWS,x / x);
	dog += COLS
}
def TABLE[-betray(( x ) / protect(TABLE[bar(( Hodor ),-51,bar())][-( ( -530.1 ) )]))][k] {
	if(--340.36 * COLS){
	if(-0.53){
	Hodor -= -Stark;
	if(TABLE[( Stark )][Sansa] / TABLE[( bar() ) * rule(y,y)][Arya]){
	x -= TABLE[rule(( -330.74 ))][-Stark - 0.37 + destroy(-TABLE[( -550.59 )][protect(y)],rule(TABLE[-95][( TABLE[--( mislead(( betray(( foo(TABLE[-TABLE[TABLE[--x][foo()] - x + TABLE[ROWS][foo(-foo(-TABLE[protect(-( -Arya ) * destroy(( Arya ),-( --93 )))][47]) + ( Ygritte ) * rule(( -( Arya + ( COLS ) * ( 34 ) + x ) - protect(--( dog ) - ( ROWS ) / y - destroy(( Stark + -1 )),protect(destroy(COLS),Jon)) )) - Stark,( ROWS - ( 0.15 ) ),ROWS)]][TABLE[COLS][Ygritte]]][destroy(TABLE[( -75 )][( COLS )])]) ),rule(Ygritte,x / Ygritte)) ) - mislead(ROWS / ROWS,mislead(y)) * 0.7,( Jon ) * 460.53,rule(betray(destroy(-710.441 * -foo(( ( TABLE[destroy(Ygritte,destroy(COLS - TABLE[-470.08][-Jon] / -40.87)) + Stark][0.73] ) ),-720.0194),Stark,foo()),1) * -( Stark ) / Ygritte)) * ROWS ) / 0.65 / Arya + betray(910.5,-85,COLS)][bar(( Jon - Hodor ),Sansa,-Jon - ( -Ygritte ))] )],-56,TABLE[TABLE[Sansa][TABLE[dog][Stark]]][( dog + betray(mislead(( ---ROWS * Sansa + -0.78 ),-( -720.1 ))) )]),COLS) - mislead(Sansa) / 850.6];
	protect();
	if(( protect(Stark,destroy(foo(-20 - rule(1 / rule(rule(),( protect() ) * ROWS),-destroy(7,rule(ROWS,-bar(0.32) - -Sansa)),dog)),( ROWS ))) )){

}
} else {
	Stark /= --780.836 - --COLS
}
};
	if(Arya - ( COLS ) * -( Ygritte ) + 0.84){
	if(rule(( -( betray() ) * TABLE[ROWS * ROWS][x] ))){
	Hodor *= ( 100.75 )
} else {
	if(Stark){
	1;
	( ( COLS ) );
	if(-1){
	if(ROWS * ( -0.46 ) / ( bar(1) )){
	--protect(-0.68) * ROWS / ( ( COLS ) )
};
	if(-( TABLE[Jon][ROWS] )){

}
}
};
	-( -protect(( -betray() / ROWS ),-Arya,Arya) )
}
} else {
	Jon -= TABLE[78][64] / dog;
	--( dog );
	dog += -betray(dog,TABLE[TABLE[( foo(destroy(-( ( ROWS ) ),foo(( -630.2723 ),13,TABLE[-ROWS / --0.13][rule(COLS,TABLE[-protect(Stark)][-Hodor] * TABLE[betray(-TABLE[-( TABLE[( COLS )][COLS] )][COLS]) * -mislead() * ---protect(-440.09 * -0.89) - x * -rule(mislead(Hodor) - -TABLE[destroy(0.95,--0.86,dog)][COLS] * betray(Sansa) + protect() / ( Arya ),protect(0.9,( COLS )))][-bar(dog - -Stark,-0.71) * ( COLS ) / -0.25])]))) )][-83]][rule(TABLE[83][( foo(170.2,rule(foo(protect(-bar(Ygritte,ROWS),( x - -Hodor + -1 - COLS + -45 ))))) )],foo(COLS,-TABLE[bar(TABLE[Hodor][-TABLE[-17][-210.39]])][ROWS],protect(x)))] / rule(ROWS + ( TABLE[TABLE[foo()][Ygritte]][-95] ),y,COLS))
}
} else {
	-20.6
};
	if(TABLE[Arya][Ygritte]){

}
}
def TABLE[( betray(destroy(( rule() + -0.63 ),Ygritte)) ) / COLS][i] {
	if(Hodor + destroy(protect(),y)){
	dog *= Arya;
	rule(-Sansa,-protect(TABLE[0.48 * Hodor][rule(ROWS,rule(-( -mislead(----( Stark )) )),-rule(x,Ygritte,y))]))
};
	x /= Sansa
}
def TABLE[Arya][j] {
	if(-mislead(protect(1,TABLE[-( betray(( Hodor ),( --82 ) + ( -rule(foo(-COLS),-Stark) )) )][protect(ROWS,rule())]),0.45,destroy(-Hodor,Hodor))){
	-betray(-TABLE[foo(ROWS,ROWS)][( ( x ) )]) - Ygritte
};
	if(destroy(protect(--560.8741 - foo(ROWS,COLS,-0.44) / Ygritte * ( Jon )))){
	Arya *= -( ( ( protect(( ----86 * Ygritte + -47 - ( --1 ) ) + bar(7 / dog,destroy())) ) - ROWS ) ) + COLS * -50 + COLS + y + -55 / -( 0.9 ) / 0.36;
	if(-570.9378){
	Ygritte *= betray(destroy(dog)) / ( COLS + TABLE[-26][Hodor] );
	if(TABLE[ROWS][mislead(COLS / rule(( -( --( Jon ) ) )),TABLE[-1][-24] / mislead(-bar(--COLS),dog),foo(protect(0.42,bar(-81),ROWS)))]){
	Stark /= COLS;
	if(y){
	if(Jon){

} else {
	Arya
};
	Sansa += ( dog );
	if(foo()){
	-( 870.379 );
	Sansa / Hodor
}
}
} else {
	if(-TABLE[betray(-dog,rule(TABLE[rule(10 - betray(Jon,COLS) * COLS,Jon)][-( -y )]),bar(--62 - -( destroy(-bar() + bar(dog + COLS,( ROWS ) - Ygritte) - -x,0.21 + betray(-0.51,-32,mislead(-270.92,---( Hodor ) + ( COLS ),-0.72))) ) + ROWS + destroy(( ( -rule() ) )),( y )) + foo(Stark))][730.44]){
	Arya *= foo(( ( -0.22 ) )) - -0.75;
	Jon += TABLE[0.99][COLS];
	if(42){
	Arya /= 0.96 / --0.7 / COLS
}
}
};
	Arya += -destroy(-670.936,-TABLE[( -( ( rule(rule(TABLE[-foo(foo(ROWS),( rule() ),43)][Ygritte],protect(Stark / COLS,rule(-x + -0.28,-700.9,Hodor) - -1 + ( ( destroy(( -( -( ROWS ) ) )) ) / --ROWS ) * 340.9),-x - foo(-betray(),COLS))) * dog ) ) - -( TABLE[betray(dog,bar())][( ( rule(mislead(betray(( ( 680.44 ) ),-1)),-0.5) + ( ROWS ) ) )] ) )][Arya + rule(Sansa,ROWS,-betray(mislead(TABLE[( destroy(destroy()) )][-foo(--0.66,x,80.076)]),Ygritte))] * ROWS)
} else {
	Stark;
	if(TABLE[TABLE[-63][-83]][-0.55 * y]){

};
	if(-0.97 * 300.99){

}
};
	if(-330.02){
	Arya /= -TABLE[ROWS][Sansa]
}
} else {
	( ( Hodor ) );
	if(-Sansa){
	y *= y
};
	Sansa += ----( -0.83 ) - --( ----ROWS )
};
	dog /= -COLS
}
assert --COLS / dog - ( 1 ) : "Nothing burns like the cold."
def TABLE[COLS - Stark][k] {
	x;
	Jon += ( ( -COLS ) )
}
assert y : "Winter is coming"
var Sansa = rule()
assert -85 / -Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Jon : "Winter is coming"
assert -destroy(--57,-Hodor) : "One can not simply parse himself"
assert y : "One can not simply parse himself"
var x = -( x )
var Ygritte = mislead(-1 * -foo(rule(( Stark / TABLE[Hodor][destroy(TABLE[( destroy() )][( ---1 )],protect(dog,-ROWS - -86 + -54) / foo() - -destroy(( -3 )) - -99)] ))),ROWS)
def TABLE[( -1 ) / ROWS + bar(protect(21),y,dog)][k] {

}
def TABLE[Ygritte][k] {
	if(foo(47)){
	Hodor *= 680.5;
	if(--37 + -0.27 * -0.49){
	-67;
	if(64){

};
	Ygritte /= 58
}
}
}
var Stark = Jon / -Arya
var Ygritte = COLS
def rule(x,Ygritte,Stark){
	-( ( -COLS * -13 * TABLE[610.77 - Hodor * Jon][rule(ROWS,( mislead() ))] / -dog / mislead(60) ) )
}
def protect(Sansa,Ygritte){
	if(Jon){
	Jon *= TABLE[foo(dog,-92,TABLE[( TABLE[--98][( ( ( bar(-1,( bar(0.83 + --( -Arya + -0.06 ),ROWS,protect(-930.165 - TABLE[Arya][( ( Ygritte ) ) / rule(1) * Ygritte],-72)) )) ) ) ) * Hodor / ( protect(bar(y,TABLE[0.63][( protect(-bar(-mislead(( Hodor ),( --ROWS ),x) / y,ROWS)) ) * destroy(bar(Stark),Jon - dog)],-1),dog + TABLE[x][( 0.96 )] + foo(mislead(( -0.19 ))) + -TABLE[( dog ) + ( -Hodor )][( TABLE[( COLS )][Arya] + TABLE[Ygritte / mislead(TABLE[Sansa][-75] / -COLS,x) - Hodor][destroy()] ) - ( ROWS ) * 0.93]) )] )][TABLE[rule(dog,72) / --Hodor - COLS - ( --destroy(( ( ROWS ) ) - x) / 1 * Sansa - protect(-Jon,89) )][( bar() )]] * TABLE[y * ROWS][Hodor] + -0.99 * ( -( foo() ) ) - TABLE[-( TABLE[TABLE[-50.43][1]][Stark] )][0.92])][Jon]
} else {
	x /= -30.6;
	TABLE[-betray(mislead(--Sansa,-( ROWS ),-35))][ROWS]
}
}
var x = ( --Stark * ( 62 ) )
var dog = ( TABLE[COLS * dog * COLS / x][Stark] )
assert destroy(COLS) : "What do we say to the Lord of Death?"
def rule(y,x){
	if(Sansa){

}
}
assert --0.71 / -y / -protect(( ---0.3 * --( ROWS ) + -290.89 + foo() * mislead(destroy(x),x,foo(-x)) )) / 1 : "What do we say to the Lord of Death?"
var Jon = -0.24 * ( ( -95 ) ) + 0.71
def TABLE[48][k] {
	Jon *= ( ROWS )
}
assert rule(rule(COLS),betray(Arya,Sansa)) : "What do we say to the Lord of Death?"
def mislead(Jon,Stark){
	Hodor
}
def TABLE[dog][j] {
	dog /= ROWS
}
def TABLE[destroy()][j] {
	Hodor *= Ygritte;
	if(-1){
	if(protect(Hodor)){
	if(Arya){
	Sansa *= protect(bar(-bar(-mislead(-57,protect()),( Stark ))))
} else {
	( protect(ROWS - ROWS - destroy(y,TABLE[( foo(( Ygritte ),0.03) - --Ygritte )][protect(COLS,TABLE[( TABLE[( ( protect(COLS) - -( foo(-y + ( protect(COLS - ROWS + Sansa) )) ) / foo(( -0.33 * 1 ),foo(( protect(ROWS,0.1) )),COLS) * -mislead(( -( Hodor ) )) - 1 ) )][( COLS )] )][COLS])]) * -( COLS ),y) );
	if(TABLE[-TABLE[Ygritte][( COLS / mislead() ) * protect(( -( 690.59 ) ))]][rule(ROWS * TABLE[TABLE[COLS][-0.47]][Hodor * y])]){
	if(Sansa * COLS){

}
};
	if(Arya){
	rule(rule(Stark,-1,COLS),-0.1,y)
}
};
	if(( -mislead(Jon / 1 + -75,-( -( Stark ) ) / --( TABLE[TABLE[ROWS][( ( -ROWS ) )]][( destroy(COLS,-1) )] ) / ( COLS ) / ( -30 - protect() )) )){
	if(dog){

} else {
	Hodor += ( 0.85 )
}
};
	( ROWS )
}
}
}
assert -COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy(foo(( Jon ),Stark),Hodor) : "Nothing burns like the cold."
def TABLE[Sansa][i] {
	if(x){
	if(( --ROWS )){
	-TABLE[Stark][-1] / mislead(dog);
	x /= 0.81
};
	dog
};
	if(-TABLE[0.02][ROWS] / 22){

} else {
	Sansa += ROWS
}
}
assert foo(23,( ( 52 ) )) + ( -COLS ) : "One can not simply parse himself"
var Arya = --betray(( COLS ),y) + -0.29 + mislead(-bar(( ( -rule(Ygritte) ) ),-( --0.83 ),-x + -950.274)) * -Stark
var y = -52
def TABLE[COLS / ( TABLE[( -COLS )][23 - COLS] )][i] {

}
assert ( -foo(foo(---( --( 290.7901 ) )) / ( -0.15 )) ) : "One can not simply parse himself"
var dog = ( -TABLE[0.07][0.31] )
assert -ROWS / -0.07 : "One can not simply parse himself"
def bar(Stark,Jon,Jon){
	( -0.65 );
	if(--rule(protect() / 1 * bar(( -1 ),foo(TABLE[Jon][-0.9] + COLS,( -bar(( Sansa ),-COLS) ) - -( Sansa )),COLS))){
	( ( foo(destroy(( rule(-bar(--6 - ( ( -mislead(-rule() + COLS,-( Arya - COLS * Sansa )) ) ) / Hodor),-( --0.42 )) ),foo(ROWS,-39)),ROWS,-( bar() )) ) );
	Hodor -= 2;
	mislead(dog,COLS,ROWS)
} else {
	-----1 - ( ---340.3 )
};
	if(Arya / COLS){
	if(( ( 23 / ( -1 ) ) )){
	y += -45;
	( foo(69,ROWS) )
} else {
	if(Sansa){

} else {
	dog;
	Jon /= Sansa
};
	-( 0.39 ) / betray();
	-Ygritte - -0.6
};
	Hodor + rule(Stark,88 / COLS - ( COLS ));
	Ygritte
}
}
def TABLE[y][k] {

}
assert ROWS : "What do we say to the Lord of Death?"
var Hodor = Arya
assert ( TABLE[ROWS][Jon] ) : "One can not simply parse himself"
var Jon = Jon
def TABLE[destroy()][j] {
	if(-( -Arya + -46 ) - COLS - Stark){
	Sansa -= -620.502;
	Arya
};
	dog -= COLS
}
assert ROWS : "Fear cuts deeper than swords."
def foo(Hodor){
	---COLS;
	Stark *= foo(-ROWS,-COLS - -67 * Sansa + ( ( ( -ROWS ) ) ) / 1,foo(( -Stark ) * ( -( 850.14 ) / x * -COLS ) - TABLE[( 0.7 )][( -1 )])) * COLS;
	if(( --COLS )){
	--830.2;
	if(mislead()){

};
	if(( -Ygritte / Arya )){
	x /= betray(COLS)
}
}
}
var Jon = -95
def rule(){
	Stark;
	x /= --29 + protect(( Stark * betray(---Sansa - x / 0.78,( -0.52 ) / Sansa) - ROWS ) + -95,-ROWS / -y) / x
}
var Hodor = COLS
def bar(){
	if(( 1 )){
	ROWS;
	if(0.35 + --( ( 990.34 ) ) + ROWS / ( -Hodor ) / -rule() - --foo(destroy(ROWS,-rule(Sansa)),TABLE[dog][TABLE[ROWS][( -0 + dog )]] / rule(TABLE[4][COLS]),mislead(bar(0.94,foo(ROWS,bar(( TABLE[570.5][betray(-dog - -0.13 * -0.76,-( -0.64 ))] ),protect(( ROWS ) * Stark,TABLE[Ygritte + ( y ) / -ROWS][foo(--( ( -bar() - Stark ) ),TABLE[protect(bar(foo(ROWS,Arya),COLS)) * -0.85 + 1][-TABLE[Jon][protect(( ---600.081 + foo(-( ( ( mislead(( ( ( protect(-0.66) ) + -bar(Sansa,0.75,mislead()) * -0.24 ) )) ) * ( -( -mislead(TABLE[-63][COLS],( -510.44 / ( foo() ) / -0.59 )) ) * bar(-580.869) / Jon ) * rule(-0.3 + protect(( bar(Jon) / ( TABLE[Stark][( ( -Hodor ) )] ) )),bar(-620.37,Arya)) ) ),foo() * mislead(destroy(dog),protect(-dog - ( Arya ) - -0.35)) + y * -TABLE[19][-0.31 / -0.27]) ) + mislead(-mislead(( TABLE[Hodor + ( protect() )][dog] ) + -440.29,TABLE[-ROWS * -36 + TABLE[destroy()][-( mislead(Hodor / -foo(),--810.675 - x) )]][COLS],3)),mislead(-1) * ( 1 ) - mislead() + -( -foo(bar(0.48,0.65,92) * -x,( TABLE[mislead(foo(( mislead(bar(protect(-0.94 / -COLS,bar(Jon,mislead(34 / ( Stark ),bar(ROWS)) * ( -x + ( -94 ) + mislead(Jon / TABLE[x][( 0.61 )] - -5) ) * TABLE[( ( protect(720.7 - x,0.84) ) )][COLS] + 90.1532)) - ( 78 ),-0.48 - Jon / 1,-( ROWS ))) )),620.83,x)][0.18] )) ))]])],230.4961)))),1,destroy(( -protect(ROWS,( TABLE[rule(mislead(( ( -ROWS ) )) * Stark)][( -0.98 )] - COLS ),-0.97) ),( foo(--destroy(bar(-Sansa,TABLE[97][( foo(( -20 ),TABLE[foo()][y] + rule(( ( -y + -73 ) - TABLE[COLS - betray()][rule()] ),-98)) )]),Jon)) ),foo(Ygritte,0.29)))) * 0.41){
	if(-66 * -( -30.244 )){

} else {
	-Sansa * -58;
	dog -= destroy(dog,-27) - 91;
	Arya
}
}
} else {
	y -= COLS;
	( bar(Arya,Stark,COLS * Arya) )
};
	x += ( Jon + ROWS );
	Sansa += dog
}
def bar(Jon){
	-1 - -COLS - ( protect() ) / 54 - ROWS
}
var dog = -bar(( -y ),-( -( -Ygritte ) ),rule(Ygritte,protect(0.04) / --Ygritte))
def mislead(Jon){
	Sansa /= Arya;
	dog /= -53
}
def TABLE[foo(COLS) - ---0.91 * -880.45][i] {
	if(betray()){
	TABLE[Hodor - protect(TABLE[140.442 / -ROWS][( Ygritte )])][Stark];
	COLS
} else {
	Sansa -= ( y ) + -22
};
	Ygritte -= COLS;
	bar(Stark)
}
var y = betray(foo(),Arya)
def rule(Stark,dog){
	if(--foo(betray(betray(-Sansa,bar(COLS)),( dog ) - ( TABLE[Ygritte][( Sansa / ( ( Arya ) * --y * 970.6853 / --0.4 / ( --0.93 / Jon - ( ( y ) ) ) ) )] ),COLS + --0.04 - rule(( bar() )) - -0.72))){
	Ygritte *= ROWS + 730.357
}
}
def bar(){
	if(87 / destroy(x,TABLE[Arya / 410.73 * dog][-ROWS] / y,x)){
	( x )
};
	Stark;
	if(TABLE[--( -360.843 ) * COLS][betray()]){
	Stark += ROWS;
	Jon *= 60
} else {

}
}
def TABLE[---79][j] {

}
assert Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "What do we say to the Lord of Death?"
assert Sansa : "Fear cuts deeper than swords."
assert COLS : "Fear cuts deeper than swords."
def destroy(Jon){
	Sansa *= Arya;
	Jon -= Jon
}
def rule(dog,y){
	y;
	if(( ( betray(ROWS * Sansa) + COLS ) )){
	if(Jon){
	if(-0.36){
	Arya - COLS
};
	foo(( Hodor ),Hodor);
	if(( -0.39 )){
	if(x){
	Jon;
	Sansa *= ROWS
};
	Stark += -1
} else {
	-( -Arya )
}
}
};
	-1
}
var Stark = Hodor
def bar(Hodor){
	if(-( ROWS )){
	dog /= bar()
} else {

};
	COLS * COLS
}
var Stark = foo()
def TABLE[destroy(-450.81,-0.04,( foo(-destroy(),ROWS) ))][j] {
	if(destroy(COLS,ROWS)){
	( -0.01 );
	if(bar(COLS / ( ( -( -0.54 ) - ( ( Sansa + -1 ) ) ) ),( Sansa ),TABLE[TABLE[-betray(ROWS,destroy(-betray(COLS,0.44,-Hodor))) - betray(TABLE[670.713][betray(TABLE[foo()][-betray(( Jon ),0.24,( bar(( ( Hodor ) ) + bar() + COLS * ( -y ) - destroy(-y) - COLS - 0.37) ))],( 0.18 ))],( -0.26 ) * rule(rule(-TABLE[protect(Stark)][TABLE[( betray(( ( Arya ) ),-0.76) ) - ( destroy(Arya,-29) ) / Stark][bar()]] * -( -45 ),protect(x,betray(bar(1),foo(ROWS + x * 21 * Sansa),TABLE[mislead(-( ROWS ))][1]) - ( mislead(-1,dog) ) / TABLE[destroy(Ygritte,rule(),destroy(ROWS + Jon + -47))][( Ygritte )],Arya * TABLE[0.44][-TABLE[mislead() * -390.1771 / Hodor][bar(Jon)]] + destroy()))))][-78]][COLS])){

}
} else {

}
}
assert -26 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -41
def betray(Sansa){
	destroy();
	dog /= 0.96 - --( -25 ) * Arya - --( ( ROWS ) ) / mislead(( ( protect(-( ( -600.17 ) ) / ( ( -y / Hodor / rule(( 0.92 + ( --0.28 ) )) ) ),Arya,-Sansa) ) ),ROWS) * TABLE[TABLE[( 270.7738 )][-1 * COLS]][COLS] + ROWS - 94 / TABLE[-0.89][-Sansa]
}
def TABLE[ROWS][k] {
	mislead(COLS,( Ygritte ));
	--6
}
def TABLE[y][i] {

}
assert -69 : "Fear cuts deeper than swords."
assert ( Arya ) : "Nothing burns like the cold."
var Jon = rule(( -290.201 ),COLS,TABLE[dog][46])
assert -0.49 : "What do we say to the Lord of Death?"
def protect(x,Ygritte){
	if(---protect(COLS - ( -ROWS ))){
	Ygritte *= ( betray(-( Hodor ) + Stark) - Jon );
	rule(y,Jon)
} else {
	if(( COLS )){
	if(( -56 - -rule(COLS,rule(( Stark ),-75 / destroy(),ROWS),-0.12) )){
	if(bar(COLS,15,0.72)){
	Ygritte *= dog;
	x += ROWS;
	if(---protect(ROWS,Jon)){
	protect(( -1 ) + ROWS,( Hodor - destroy(( mislead(( 0.86 )) ),protect(ROWS,foo(COLS - --Stark - -mislead(-35,( TABLE[TABLE[y][( Stark )] / -destroy(( foo(ROWS,-1) ),Arya * mislead(59 / -( Hodor ),39)) / Hodor - -( x ) * ( 0.28 ) / TABLE[COLS][( x / protect(( -protect(COLS) + bar(0.68) )) * TABLE[( Ygritte )][( bar(-0.21) * -( Jon ) ) - Arya] ) - -Hodor / Ygritte]][ROWS] ),TABLE[y][84]) / 0.35 * protect(y) - Hodor,betray(COLS) * -1,( Arya )))) ))
} else {
	Jon += ( -( ROWS + ( ROWS ) ) );
	if(COLS){
	( -0.4 );
	dog *= --0.57 - TABLE[-0.3][( -390.06 )]
} else {

}
}
} else {
	Ygritte += ROWS
}
} else {
	if(TABLE[-ROWS * betray(bar(-1,130.447),-Hodor)][0.97] + ( foo(Jon) ) / 0.89){

} else {
	if(ROWS){
	( y )
} else {
	x += y
}
};
	Jon *= ( COLS )
}
}
};
	Sansa -= ( -0.08 )
}
def TABLE[-Sansa][i] {
	920.16
}
assert destroy(-( -rule(ROWS,dog,COLS) - bar(Jon + destroy() * mislead(Sansa)) )) : "Nothing burns like the cold."
def TABLE[( --( TABLE[( ( -( COLS ) ) * destroy(rule(( rule(foo(---0.55,-75) + 0.55,COLS) ))) )][0.34] ) )][k] {
	-betray();
	Hodor
}
assert ( ( mislead(( -destroy(( y ),ROWS) ),protect(protect(Ygritte,( dog ))),Ygritte) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = -( mislead(--rule(-( -mislead(ROWS,--0.98) ),( -60 ),--0.85) + 1 - ( -1 ) / -mislead(-COLS),ROWS) )
def rule(Hodor,Sansa,Ygritte){
	y *= -0.55;
	( ( 0.18 ) )
}
def TABLE[-35 / mislead(Hodor + 0.5,( 87 ) * COLS) * ROWS][i] {

}
def foo(Hodor,Hodor){
	betray(Ygritte) - ( rule() );
	if(ROWS){
	x /= TABLE[Jon][mislead(-bar(-bar(11),( ( 460.27 - rule() ) ),-0.61) / ( ( -0.54 + COLS ) ) / Ygritte,( 0.03 + --14 / COLS + 1 * ( -0.86 ) ),COLS) - ROWS];
	COLS
}
}
assert Jon : "Winter is coming"
def bar(Jon,y){
	if(Arya){
	destroy() + 920.22;
	if(-0.02){
	protect(Hodor,-0.5)
};
	betray(protect(),-780.3)
} else {
	if(COLS){
	-62
}
};
	if(( COLS )){
	COLS;
	Sansa += -13;
	if(-5){
	y
} else {

}
} else {
	if(( 1 )){
	TABLE[-0.94][dog];
	Hodor += x
} else {
	Arya *= Arya;
	y += --Stark
};
	y /= 62 - bar(-( protect(( COLS )) / Hodor ),( mislead(--( -0.68 ),y) * TABLE[-COLS][destroy(--betray())] ),-0.03) * -mislead(( TABLE[( --0.81 )][-0.57] )) + mislead(-910.332,( -59 ),( mislead(( --0.7 * ( ( bar(rule(( -0.92 ),Jon),23) / COLS ) ) )) )) - foo(dog)
}
}
def betray(Stark,y,Sansa){
	dog += 0.88;
	if(destroy(-1)){

} else {
	x *= COLS;
	betray(y,1);
	if(0.71){
	if(--49){
	-87 / -destroy()
};
	if(betray(0.19)){
	if(rule(dog)){
	dog += rule(-COLS,( ROWS ))
} else {
	rule(( -0.24 - TABLE[rule(Hodor,-x)][--Arya - -protect(44 * -1 / 1 - -COLS / 0.52 / x / foo(destroy(),Hodor) - COLS * rule(TABLE[Jon][dog]) - ROWS,-560.97,( TABLE[x][( Stark )] ) + TABLE[33][( Hodor / ( Arya ) )]) * Jon - ( destroy(COLS) )] ) - 72,-destroy(-0.61)) + ( ( -50.2 ) );
	if(dog - COLS / 22){
	y;
	rule(mislead(bar(( COLS )))) / Hodor
} else {
	Sansa += COLS
};
	if(( mislead() )){

} else {
	Hodor += ( TABLE[COLS][( -( Hodor ) )] );
	( -35 );
	COLS
}
}
};
	dog -= ( 94 )
} else {
	Hodor *= -( Jon ) * Hodor
}
};
	if(COLS){
	Arya -= -COLS;
	if(( ( COLS ) )){
	( -protect(0.43,Stark) * y ) + ROWS;
	if(Arya / rule(TABLE[y][-600.005])){

} else {
	dog /= destroy(rule(0.1),-2)
}
} else {
	Ygritte /= destroy(Jon,( Jon + destroy(protect(bar(-mislead(destroy(( Sansa ),ROWS,-80.8679),-0.66 - TABLE[( ( 23 ) )][-49]),( ( -dog ) )))) ))
};
	Jon -= bar(betray(destroy(0.68,-destroy() / 0.81 - Arya - Jon),destroy(protect(-1) + Stark)) + Arya * ( ROWS ) * COLS)
} else {
	COLS * dog
}
}
def TABLE[TABLE[mislead(52) * -0.67][rule(protect(-1,-Hodor + -Hodor) * COLS)]][k] {
	Ygritte *= -0.17;
	dog *= Ygritte
}
def TABLE[TABLE[-80][75]][k] {
	if(1){
	Ygritte *= ROWS;
	if(( Ygritte )){
	if(-y){
	y += bar(ROWS) * x - Hodor * destroy(TABLE[-43][-88 / ( COLS / -0.5 ) + COLS],-destroy(COLS - --( -Arya ),-280.3,destroy(( --( 0.6 ) + -TABLE[-mislead(ROWS)][--( Sansa ) * COLS] ),COLS) / Arya)) + -x;
	Arya *= TABLE[( COLS )][destroy(COLS,( Sansa ))] - betray()
} else {
	if(Jon){
	rule(--0.92,COLS,-foo(-1,protect(0.41,Ygritte)));
	Ygritte += Arya;
	dog
}
};
	y += Sansa
} else {

}
} else {

};
	y -= -( -ROWS ) * -0.47 / ( -Stark + ( betray(--ROWS * ROWS + Ygritte) ) )
}
assert -990.47 : "Fear cuts deeper than swords."
def TABLE[-670.02 / mislead()][k] {
	Sansa /= betray();
	Hodor *= ROWS;
	if(( TABLE[-88][0.96] )){
	if(-y){
	Arya /= ROWS;
	Arya += ( Arya )
};
	if(0.36){
	if(0.64 + ( --790.6664 )){
	if(ROWS){

} else {
	Sansa *= Arya
};
	( ( ROWS ) );
	if(--1){
	Stark -= Arya;
	COLS
}
} else {
	0.15;
	Ygritte /= betray(( COLS ) / TABLE[--Hodor][-78])
};
	if(56){
	Stark;
	Sansa *= -0.78
}
}
}
}
def destroy(Sansa,Jon){
	Stark *= ( bar() );
	( COLS )
}
def protect(){
	if(( betray() ) / ( ( Sansa ) ) * bar(Ygritte)){

} else {

};
	x *= ROWS
}
var Jon = ROWS
def mislead(Jon,dog){
	( 3 );
	ROWS;
	if(foo(( TABLE[-1][-81] ),( dog ) * -1,Sansa)){
	if(1){
	--66;
	Stark -= Jon
};
	if(-0.54){
	y *= ( TABLE[Jon][--protect() - -( TABLE[-40.927][Hodor] / COLS ) - betray(120.8402,( Hodor / betray(rule(( -45 ),y,mislead()),ROWS) )) * mislead(0.67,COLS - destroy(),-0.76)] )
}
} else {
	if(Jon){

} else {
	Arya /= -830.8;
	Ygritte += 30 - ( protect(800.97) )
};
	Hodor += ( -90 / destroy(-0.28,TABLE[-0][-( TABLE[-0.99][y + Hodor] + dog )]) - Sansa )
}
}
assert -70 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Hodor){
	Arya -= ROWS;
	90.868
}
def destroy(Jon,x,Ygritte){
	-1
}
var y = foo(-COLS) - TABLE[x][Stark]
def bar(Jon){
	dog *= Jon;
	Jon -= Hodor
}
assert bar(betray(Ygritte,( Arya ),-ROWS)) : "Nothing burns like the cold."
assert y : "Fear cuts deeper than swords."
def TABLE[( betray(-0.85 + bar(-210.6171,0.98 / ( ( -Arya ) ) - -1 / y) + 0.33,( betray(dog,( mislead(Jon * 27,--bar(-930.2,-Stark,-Jon - ( Hodor )),( Ygritte - -Ygritte / -rule(( 0.42 ),Stark) - destroy() * ( Stark ) )) )) ),TABLE[COLS][destroy()]) )][j] {
	if(foo()){
	Ygritte *= ( ( bar(foo(y,-ROWS) / y) ) ) + 0.54;
	TABLE[( COLS )][-( foo(( -23 )) - -80.7 )]
};
	if(mislead(Sansa)){
	if(x){
	-( 330.62 );
	Jon -= Sansa
}
}
}
assert -( -( --( protect(x / destroy(( -0.95 )) + ( foo(bar(TABLE[-( Stark )][dog]),( -750.5 / TABLE[( ( rule() ) )][( Sansa )] )) + ( -COLS * COLS ) ) - mislead(-( 64 )),( ( ( --67 / foo(x,-0.72) - --500.23 ) ) )) * -( -betray(Sansa,( -TABLE[TABLE[bar(TABLE[680.689][-48])][-0.44]][COLS] / mislead(foo(-0.61) - 400.2543) ),( ROWS )) ) ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Sansa,Sansa,Stark){
	if(-protect()){
	if(y){

} else {
	Hodor;
	Jon *= -81
};
	Ygritte /= Jon
} else {
	-betray();
	Ygritte -= -Ygritte
}
}
def TABLE[-Jon - ( Sansa )][k] {

}
assert COLS : "Winter is coming"
assert betray(ROWS,Sansa) * -( ( ( Stark ) - ( 960.698 ) ) - ( ( destroy(bar(Ygritte,rule(destroy(1,protect(ROWS) + Jon / -( dog ),dog),betray(-23,( foo(-Jon,Hodor,TABLE[--1][rule(TABLE[Hodor][( TABLE[29][ROWS] )],-ROWS + TABLE[ROWS][--0.52] + x * COLS * foo(-87,ROWS))]) ))),Ygritte),-TABLE[ROWS][--COLS * TABLE[-TABLE[betray(ROWS)][-500.47]][( Arya )]] * 1,-840.57) - -1 ) ) ) : "Winter is coming"
var Hodor = -dog * -0.37
var Stark = COLS
def TABLE[x / -TABLE[bar()][COLS] - rule(protect(COLS,Arya),x) - mislead(( --54 ),-Jon + -1)][j] {
	Ygritte += x + foo(( -94 ),foo(destroy(-1 + ( Stark )))) + Hodor
}
def TABLE[dog][j] {
	if(-TABLE[betray(protect(-Ygritte)) / Arya][Arya]){
	y;
	y += -( --350.186 ) * -rule(COLS,bar(( --TABLE[Sansa / COLS * TABLE[22][-( ( y ) )]][41] ),Ygritte)) - bar(Jon)
} else {
	18;
	COLS
}
}
def destroy(Sansa,Ygritte){
	if(-270.91){
	if(rule(-( -0.01 ) * ( dog ))){
	Arya += dog
} else {

};
	( -1 )
};
	Arya /= 130.504 / ( foo(ROWS / -( ( Sansa ) ) + ROWS * mislead(--Sansa,rule(-COLS,---foo() + Jon * rule(0.46) + -0.03),TABLE[74][Ygritte])) );
	Arya += foo(( Sansa ),Sansa) + ( ROWS )
}
def TABLE[bar(bar(( ROWS * --96 )),bar(COLS,( Sansa )),protect(COLS,destroy(-0.34,( -dog )),--0.24 / -1 / protect(( ROWS ),Hodor))) / y][i] {
	if(betray(Arya)){
	COLS;
	dog += 1
}
}
var y = ( 0.44 )
def betray(Hodor,Ygritte){
	Hodor -= TABLE[bar(-TABLE[-900.327][TABLE[-betray(-dog - x,dog)][-y / 0.41]],( --Jon ))][-44];
	if(protect()){
	x -= ROWS;
	x /= ROWS + protect(dog,Ygritte,Hodor)
};
	Hodor /= --0.85
}
var Hodor = -30
var Ygritte = bar(COLS)
def TABLE[-( ROWS )][k] {
	Sansa *= -rule(foo(bar() * bar(rule(-rule()),rule(( ( 66 ) ))) * ROWS),COLS,y);
	if(destroy(( -COLS ))){
	if(Hodor - -ROWS){

}
}
}
def foo(x,y){

}
def destroy(){
	if(( ROWS - Jon )){
	if(COLS){
	Hodor;
	( protect() * ROWS )
};
	if(Hodor / -0.49){
	-680.386
}
} else {

};
	( ( 83 ) )
}
def TABLE[--0.24 - Stark][i] {
	Stark /= COLS
}
var dog = -82
def betray(){
	destroy()
}
assert -COLS : "One can not simply parse himself"
def TABLE[COLS][j] {
	Hodor /= ( COLS );
	if(( Ygritte )){
	y *= rule(Sansa);
	Jon += protect(ROWS * -Jon,( TABLE[--protect()][Arya] + ROWS * -0.1 * 720.37 + foo(( ROWS ),-0.85,protect()) / bar() - ( -( ( 480.1071 ) * -COLS ) / --Jon ) ),betray(-70 + -900.05,TABLE[Stark][--Jon / -( -Jon )]))
} else {
	if(-810.57 / foo(-1,protect(ROWS)) / bar(-foo()) + Stark - TABLE[Sansa][--88] * 66){
	y -= ( bar(--Sansa) * ( -37 ) )
}
}
}
assert destroy(Hodor) : "Fear cuts deeper than swords."
assert ROWS : "Winter is coming"
def TABLE[rule(( ( 99 ) ))][k] {

}
def TABLE[-35][i] {
	Jon += y
}
def TABLE[-TABLE[( Arya )][Hodor]][k] {
	destroy(( -( ROWS * Ygritte ) ),-betray(mislead(COLS,0.38),ROWS));
	Arya += 34
}
var x = bar(-88) * dog + 91
var Arya = --0.06
assert -79 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -destroy(1,( ( -72 ) ))
def TABLE[0.27][k] {
	if(protect(( Jon ),( ( ( COLS ) ) / dog * ( ( -0.39 ) - -ROWS * -97 - dog * --COLS / ( COLS ) / bar(Ygritte) + betray(dog,( -19 )) ) ) + -0.9)){
	Ygritte /= Jon
}
}
assert bar(-ROWS,-( -TABLE[( 850.8 )][ROWS] ) - COLS) : "Fear cuts deeper than swords."
def protect(Stark){

}
var Sansa = ROWS - -33 * Hodor * ( protect(-Hodor,( ( mislead(y,ROWS) ) ),ROWS) )
def TABLE[betray(ROWS,y)][i] {

}
def betray(){
	x *= Ygritte;
	Arya *= ROWS
}
var x = -COLS
assert -y : "What do we say to the Lord of Death?"
assert ( rule(-1) ) : "Nothing burns like the cold."
def TABLE[foo(Ygritte)][i] {

}
var Stark = ROWS
assert destroy(TABLE[-ROWS * 40.66][COLS],( -( -( ( COLS ) + -TABLE[-foo(-1)][rule(TABLE[-ROWS][Arya],800.0527,bar(COLS,COLS,-destroy(ROWS,x) / -foo(-570.7)))] ) ) )) : "Nothing burns like the cold."
def protect(dog,Sansa){
	if(( COLS )){
	Ygritte;
	Jon -= -1
}
}
var Jon = betray()
assert dog : "Fear cuts deeper than swords."
var x = COLS - --18
assert ( --betray(rule(-0.03) + -0.63,betray(-1,( -x )),( 97 )) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = 370.947
def TABLE[-35][j] {

}
assert -1 : "Fear cuts deeper than swords."
def bar(Stark,y){
	if(bar()){
	Hodor /= ( ( -betray(( destroy(--0.17,TABLE[ROWS][5 * x] * dog) ),-180.34,-COLS / 0.87) + TABLE[ROWS][mislead()] ) ) + 1
} else {
	if(betray()){
	( -Ygritte );
	if(( -Sansa )){
	if(mislead(rule(TABLE[( ROWS )][dog],( ( 64 ) )) - ( Stark / destroy() ) * -mislead(-TABLE[foo(ROWS)][Stark * ROWS],Hodor,TABLE[-foo(ROWS) - -COLS][TABLE[Stark][protect(COLS,x,( -betray(-70,ROWS / Jon) ))]]) + bar(Arya - mislead(x,Jon) + TABLE[-bar()][-75],betray()),930.646) + 67){
	y -= --0.36;
	Hodor /= ( --Hodor )
} else {
	1
};
	Stark -= mislead()
} else {
	Jon += ( dog );
	-0.5
}
} else {
	if(COLS / Arya){
	71;
	-mislead(-betray())
}
};
	if(-0.66){

}
}
}
var Stark = Arya
def bar(Jon){
	Arya /= betray(( 0.99 ) / COLS + -72,y)
}
assert --79 : "Nothing burns like the cold."
def TABLE[( foo(( betray() )) )][k] {
	if(mislead(ROWS,-COLS * ( -0.37 ))){
	if(destroy(bar(foo(-0.39),ROWS),Hodor)){
	Sansa += -foo(y,( Hodor ) + ( -Ygritte ))
} else {
	destroy(( -Ygritte / ROWS - Hodor / ROWS ));
	-COLS
};
	-( mislead(-0.6 - -TABLE[-7][betray(-0.12,( -Stark ))],COLS,--Stark) * Jon + -0.31 )
} else {
	y /= -1
}
}
assert rule(betray(COLS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( 1 )][k] {

}
def foo(y){
	x *= -54 / -ROWS;
	if(-Sansa){

} else {
	if(betray()){
	COLS;
	--0.85 - ( -1 )
};
	( ( rule(COLS,betray(3)) ) - ( mislead(490.34) ) )
}
}
assert rule(( -y ) - -TABLE[-COLS][rule(-9)]) * ( -30 ) : "Winter is coming"
def rule(Hodor,y,y){
	if(-( foo(( rule(-0.67 + --Hodor / -0.52 - x,0.68,--ROWS + Jon - TABLE[ROWS][destroy(mislead(1),( 91 ))]) )) )){
	if(mislead(protect(( ROWS )) - ( Sansa ) + 0.74)){
	if(( -( -COLS ) )){
	( ( Sansa ) ) + Arya;
	if(( COLS )){
	bar(( -y ),Jon,-betray(Jon * 0.56) + ( ( Hodor ) ));
	dog -= foo();
	if(( x )){
	x += COLS;
	COLS;
	if(--Ygritte + 0){
	y /= rule(( -0.5 ));
	( 940.201 )
} else {
	dog /= ( TABLE[mislead(betray(foo(-42),--Sansa))][ROWS] );
	Sansa -= TABLE[x][20]
}
} else {
	x += Jon;
	Hodor /= 50;
	if(0.33){
	x -= 18;
	y /= -bar(-0.19 * dog,ROWS) * COLS
}
}
};
	Jon /= TABLE[betray(( ( mislead(betray(( -12 - protect(-x + ( Stark ),ROWS,( y )) * rule(rule(--betray() / foo(COLS,-0.88),TABLE[-bar() * ( ---98 )][TABLE[--COLS][---ROWS]])) ),foo()) / -34) ) ),( Sansa ),Stark)][protect()]
};
	Jon -= protect()
} else {

};
	Arya += bar(-1,betray(),COLS)
} else {
	Ygritte += TABLE[mislead(foo(-1 - ROWS,COLS),-Jon) * ROWS][-200.01];
	Arya -= 0.92
};
	destroy()
}
assert ( ( mislead(( ( ( ( foo(ROWS,Ygritte,Hodor) ) ) ) ),-960.559,( --680.945 ) / 0.07) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --1 : "What do we say to the Lord of Death?"
def destroy(){
	dog;
	--0.39;
	y += ( ( mislead() ) )
}
def TABLE[Ygritte + ( x ) / -1][k] {
	betray(-bar(mislead(),( ROWS - TABLE[( ROWS )][COLS * bar(ROWS,ROWS + ROWS * protect(1 + Sansa,Stark),Jon)] ) / -0.03 * destroy(-Sansa),bar(dog))) / 0.47
}
def TABLE[( bar(-betray(-COLS * foo(Sansa)),COLS,betray(destroy(x),Jon)) )][k] {
	if(--( TABLE[-( Ygritte )][mislead()] )){
	if(( -COLS ) - 2){
	Stark -= -protect(( ---0.83 ),Jon,( -( ( ( destroy(rule(TABLE[( ROWS )][TABLE[bar(-ROWS * Jon - ( -24 ))][mislead(Hodor,Hodor)]],-82),mislead(),( -foo(ROWS,( TABLE[-1][betray(-ROWS,( ---( ( Hodor ) ) ),-( foo(1) ) / dog)] )) )) ) ) ) ));
	-x
} else {

}
} else {

}
}
def bar(Jon,Stark){
	if(85){

}
}
def TABLE[dog][k] {
	if(--0.1 * ( Stark )){
	Ygritte /= rule(-0.07,betray(COLS,--0.81),--ROWS);
	-mislead(------foo(foo() / COLS,-1))
}
}
def TABLE[ROWS][k] {
	if(betray(-57)){
	if(( ( COLS ) ) * dog){

};
	if(-74){
	-dog + -3 * COLS;
	-( ROWS - -98 );
	foo(--COLS + 760.705,-( destroy(rule(mislead(Sansa),mislead(Stark) - --4 / ( rule(Sansa,destroy(-( COLS ))) )) - 0.14,rule(1,1 + rule(TABLE[95][( ( ( -6 ) ) )],COLS))) ))
}
} else {
	if(--Jon - -97){
	if(bar(TABLE[-360.3][rule()],( -ROWS ) * ROWS) - -0.81){
	Jon *= ( Jon );
	Stark -= destroy(TABLE[y][ROWS],( ( destroy() ) - betray(destroy(dog,x,-ROWS) * COLS / -Jon,-23) ))
}
}
}
}
assert ( Stark ) : "What do we say to the Lord of Death?"
var Hodor = -( 0.85 )
def TABLE[-bar(y,--protect(ROWS),COLS)][k] {
	Stark -= COLS;
	Ygritte;
	if(0.14){
	dog *= -ROWS
} else {
	x += Sansa;
	if(--destroy(betray(),destroy(( TABLE[ROWS][betray(COLS)] )) - ( betray(( ROWS ),( ( TABLE[Arya][foo(bar(-protect(( ROWS ) * ( x ),-0.73) - TABLE[COLS][0.24],-bar(-51,0.85)))] ) + -890.32 ),Stark) )) * ( -Arya )){
	if(Hodor){
	if(--0.22){
	if(TABLE[---protect(Sansa)][COLS] / ( protect(( rule(1) ),-51) ) + 0.5){
	if(-foo(TABLE[Sansa][TABLE[-0.58 * -x][x] * COLS],--1,COLS)){
	Jon += Arya
} else {

}
} else {
	x += ( -ROWS );
	if(95){

}
};
	Arya += ( ( Ygritte ) )
} else {
	Arya += 1
}
}
}
}
}
def TABLE[-21][i] {
	-1;
	if(COLS){
	COLS;
	if(-0.05){
	if(( -1 )){
	( --TABLE[y][-960.174] + TABLE[Jon][foo(-ROWS + --ROWS / dog)] ) / -0.21;
	if(( --foo(( ROWS ),TABLE[rule(-1,-85)][-10],( 0.4 ) * ROWS + ( COLS )) * 0.19 )){
	COLS;
	dog /= -( -ROWS * ( --1 ) );
	Hodor /= -1
}
} else {
	ROWS - -( TABLE[( ( mislead(-20,COLS - dog,TABLE[Jon][Sansa]) ) )][-foo(( -mislead(x) ),dog,--ROWS)] ) / x;
	Hodor /= ( --dog + -Jon * ( 0.34 ) + Hodor )
};
	( COLS )
}
};
	Sansa
}
def mislead(y){
	Jon /= Hodor;
	foo(( Hodor ),mislead(( Stark )))
}
var y = destroy(mislead(-( ROWS ) + -140.8 - ( mislead(Sansa,( TABLE[TABLE[dog][y]][-0.1 / -90] )) )))
def TABLE[mislead(-COLS,0.34,TABLE[ROWS][rule(Ygritte,Sansa)]) - -protect(1,( TABLE[( ( ( COLS * COLS ) ) )][COLS] ))][k] {

}
assert -0.91 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = 0.26
assert ( -1 ) : "Winter is coming"
var x = ( COLS )
def TABLE[-79][k] {
	if(TABLE[78][( x )]){

} else {

}
}
def foo(Arya){
	x -= rule(310.25,( --1 + -150.131 ),( betray(-1) ) / -TABLE[-COLS][Jon]);
	Jon *= x;
	if(-87){
	TABLE[0.35][( ( -COLS ) ) + ( ( 820.95 - ( -0.96 + rule(foo(Hodor,Stark)) - -protect(COLS) ) ) )];
	Jon += -0.06;
	if(TABLE[mislead(-( -1 + ( -( COLS ) ) * ( ROWS ) - mislead(dog - 0.93) / ( Sansa + Stark ) ),dog)][dog] + -0.97){
	bar(-240.2654,Jon)
} else {
	if(destroy(-destroy(rule(ROWS,-0.23,( ( --COLS ) )) * ( -( rule(y,bar()) ) - ( -( ( 0.66 ) + Jon + 0.64 ) ) ) / 37) + Arya)){
	Sansa += -860.2827 * dog - -60;
	( COLS )
};
	if(-Ygritte){

} else {
	( bar(rule()) );
	Stark *= COLS
}
}
} else {
	destroy(y) * rule(-TABLE[protect(protect())][--70]) / -860.526;
	if(( ( ( protect(-foo(Jon,foo(( -Jon - 75 / ( -91 * ROWS ) ),ROWS * TABLE[( betray(-0.49) )][( -( ( ROWS ) ) )] + -bar(( x ) * ( 100 )) * COLS))) ) ) ) + -32){
	-1;
	Ygritte += Hodor
}
}
}
var Stark = 0.26
assert -Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( ( -1 ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Ygritte){
	if(( ROWS * Sansa / 0.72 )){
	if(COLS){
	y += COLS
} else {

};
	COLS
} else {
	if(1){
	Hodor;
	TABLE[83][destroy(-bar(0.34,destroy()) - foo(-COLS,-( --82 )) * --y)]
} else {
	1;
	if(bar(betray(( bar(-34 / rule(-0.49 * ( -0.3 ),---Sansa),( -bar(bar(ROWS,protect(36 * Hodor,-0.28,Arya)),-( -betray() / COLS )) ),( ROWS )) ),Ygritte)) * Jon){
	-dog
};
	if(-x * bar(foo(TABLE[Hodor][Hodor],( betray(ROWS) )))){
	--20.459
} else {
	if(-31){
	if(TABLE[0.96][( Jon )]){
	dog -= ( ( ROWS ) / TABLE[--70.3][COLS] );
	y /= ROWS + -0.03
} else {
	y += mislead(TABLE[TABLE[TABLE[---0.62][14]][TABLE[-( ( -ROWS ) )][mislead(COLS * -1,dog,ROWS)]]][-( -230.531 )],-TABLE[12][Arya]);
	-290.197
}
}
}
};
	---dog + -0.13 + 0.4 * ( protect(-34,COLS) );
	COLS + -( ( ( -1 ) ) )
};
	-970.41;
	x /= --betray(-ROWS,-810.711,foo(-rule(-580.363,dog),protect(TABLE[destroy(rule(Arya + 670.045))][Jon])))
}
def betray(){
	-690.5;
	--betray(y / protect(-1) * -1,0.02,-1) + -rule(97)
}
def protect(Arya){
	Hodor -= mislead(foo(( -COLS ) - ( rule(76,mislead(bar(mislead(),( -y + --42 )),( dog ) - rule() / ( 0.12 ) * mislead(mislead(77,foo(( -26 ),( ( -dog - ( ( ROWS ) ) ) ))),30.2) - TABLE[-51][--( -38 )]) / bar(( -COLS / ROWS ),betray(TABLE[( -1 )][TABLE[COLS][Arya]],x)) / rule(ROWS,( mislead() ))) ) * ( 20 / dog ),0.73),betray(foo(( TABLE[ROWS][-( TABLE[--1 - -( -910.474 )][-Stark] ) - -foo(Hodor,destroy(( foo(( ( -( rule(TABLE[Jon][protect(-( ( ( ROWS ) - ( protect(-foo(-( x ))) ) * -1 ) ),( 58 ) - destroy(betray(-ROWS),-8) + 0.32 + 0.15)] - bar(Sansa,dog,-( 0.31 )),-0.01,( --46 / -490.69 )) ) ) )) )))] ) / --foo(( protect(Ygritte,COLS,( ( TABLE[-( ROWS - COLS ) / -0.3][Sansa] ) )) ),TABLE[-mislead() + 1 / 15 / Hodor / TABLE[-( foo(-( foo() )) )][x - -52]][( -( rule() ) )]),-83),-( -destroy() )));
	Jon += -0.21;
	-COLS + bar() + Jon
}
var Stark = 1
var y = betray(( ( rule(Sansa,betray(protect(ROWS))) + 0.33 ) ),ROWS,rule(ROWS,Arya))
assert ( -0.4 ) : "Winter is coming"
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Stark){

}
def TABLE[( -280.5725 )][i] {
	y -= ( ( -y + 0.64 ) );
	if(betray(y,Jon,( ( mislead() ) ) - Sansa)){
	y -= Ygritte
};
	if(-87){
	( -dog - foo(-17,mislead()) + ( ROWS ) );
	if(( protect(28) )){
	if(TABLE[-betray(--240.09 - -150.034 + -0.87,-COLS,y)][y]){
	dog -= protect(( Jon ))
}
} else {
	if(ROWS){
	1
};
	Stark /= --1 + x;
	Jon /= 0.55
};
	bar(-mislead() + rule(TABLE[rule(( TABLE[ROWS][-4] ),TABLE[-COLS][( ( -1 ) )])][destroy(( ROWS * -36 ) / rule(Stark + Jon,TABLE[( ( ROWS ) / rule(-0.63,ROWS) )][1],dog)) / destroy(COLS,TABLE[y][Jon],Ygritte)]) + -0.05 - -80.839,COLS)
} else {
	if(Ygritte){
	-COLS / --protect(-1,( COLS ));
	y -= -580.43
} else {
	Sansa /= ---45;
	if(0.39){
	-x / rule() / COLS / Stark
};
	if(TABLE[TABLE[0.32][ROWS]][Stark * --x]){
	if(Arya){

}
} else {
	Hodor;
	if(( ( ( COLS ) - destroy(--0.32,TABLE[bar()][TABLE[mislead(COLS)][-1]] + TABLE[ROWS][COLS]) ) )){
	Stark -= dog - -TABLE[bar()][Sansa]
}
}
};
	if(COLS){
	TABLE[62 / destroy(( COLS ),betray(bar()))][ROWS]
} else {
	-64;
	dog -= -( Arya );
	( Jon )
};
	bar(96)
}
}
var x = -Stark - -( bar(x,( --betray(( -COLS - bar(45,bar(destroy(-0.29)) - -x) ),ROWS,TABLE[y][-Sansa]) ),-( Arya / -ROWS )) )
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Arya){
	Arya -= COLS;
	-45
}
assert ( ( ( -( ROWS ) * ---36 + ROWS / rule() ) ) ) + ( ROWS ) : "What do we say to the Lord of Death?"
var Stark = -79
def bar(Jon){
	Jon /= y;
	( rule(COLS,-COLS,-dog) )
}
assert ( rule(-43,( rule(0.65) ),( ROWS )) * -protect(( --380.1 ),Hodor * TABLE[5][-( TABLE[0.95][( COLS - rule(36,Hodor) - rule(mislead(( rule(Stark,bar(mislead(),( ROWS )),Ygritte * -450.1) ),Arya) / foo(--( ( -67 ) ) / destroy(),mislead(TABLE[destroy()][x],Sansa,rule()) / 1 * ROWS - ( ( Stark ) + ( -COLS - ---bar(TABLE[rule(y,-ROWS,1)][( ( ( -7 - 0.09 ) ) )]) - TABLE[-y][( -ROWS ) * -destroy(( --0.46 ))] ) )) - ( ( COLS / 30 ) ),( Hodor ),-0.44) - protect(ROWS) * -ROWS + y )] / -81 - -95 + ( -0.1 ) * Sansa - destroy(-1) )] - -310.5 * ( -( -1 ) )) ) : "Fear cuts deeper than swords."
def rule(){
	COLS / ( mislead(-Sansa) );
	if(-( Jon / -( rule(-1,( TABLE[TABLE[COLS][-y]][( ( COLS ) )] ),-( betray(rule(-COLS,ROWS),foo(Arya)) )) ) - COLS )){

};
	if(COLS * COLS){
	( destroy(( ( -( x ) ) ) * mislead()) - betray() ) - -Jon / ( --360.58 ) / 0.47;
	Stark -= -( ( ( dog ) ) ) * protect(0.94,x)
}
}
var Jon = ( ( -( bar(( Ygritte ),-1,-betray(( mislead(Sansa) ),COLS,-( ROWS ))) ) ) )
def TABLE[Sansa][k] {
	if(foo(TABLE[COLS][Sansa],( ( -0.88 + COLS ) * -71 ))){

} else {
	Stark -= Jon;
	Arya /= 0.65
};
	COLS
}
def rule(Sansa,Jon,Arya){
	if(TABLE[0.26][-98]){
	betray(mislead());
	-0.8
} else {
	Sansa -= ( rule(( ( foo(destroy(COLS,-Arya) / -1,betray(--COLS + ROWS,( y ))) - ( -( destroy(dog,mislead(---730.3 - -TABLE[mislead(-Jon / bar(( mislead(-protect()) ),( -dog ) / ( ROWS + -0.16 )),( ( destroy() ) ))][foo(( 76 ),1)] + ( Ygritte / mislead(-ROWS,Hodor,-0.51) ),Sansa - Ygritte)) + 420.89 - -COLS ) / dog ) ) * -1 ),COLS,-ROWS) );
	if(mislead(TABLE[-62][-210.311],Sansa,-TABLE[protect(rule())][betray(COLS) + Sansa])){
	Sansa += 34
} else {
	if(0.5 - rule()){
	y /= 0.63
};
	dog *= -1 / -780.73
}
};
	-94;
	if(--TABLE[-( dog )][protect(-69,bar(-70.4))]){
	Jon *= protect(660.29)
} else {
	Hodor /= Arya;
	rule(-mislead(COLS,( -y )) + mislead(( bar(0.64) ),destroy(8,--destroy(-ROWS,-ROWS),( -COLS )),foo()) + ( ( Sansa ) - bar(( ROWS ),-1) * betray(-( bar(-29,COLS + ( Stark + ( ( -Stark ) ) + ( protect(1) ) )) * COLS ),protect(y)) ))
}
}
assert COLS : "Winter is coming"
def TABLE[-71][j] {
	-( dog );
	( ( --990.3041 * 78 ) );
	COLS
}
def rule(Arya,Arya,dog){
	protect();
	bar(280.23,Arya)
}
def rule(y,Sansa){

}
def destroy(Hodor,y,y){
	COLS;
	Arya *= ROWS;
	if(( 90 )){
	Jon /= -Hodor;
	if(-Ygritte - betray(-30.1237)){
	if(-0.98){
	Stark += ( ( ( -60 ) ) )
}
};
	Jon
}
}
assert 40 : "Nothing burns like the cold."
def TABLE[-( ( Stark ) )][i] {

}
def foo(Stark,Ygritte){
	Jon *= Hodor
}
assert mislead(-( 68 ),betray(Arya,COLS) - -0.25,61) * ( ROWS - ( -( rule(bar(-1),370.08,mislead()) + -90 * COLS ) ) ) * ( protect(TABLE[foo(-mislead(--TABLE[destroy(-ROWS)][( ( Hodor ) )],0.33) + protect())][TABLE[x][-Sansa * COLS]]) ) + ( ( mislead(destroy(-0.87,COLS),38,betray()) ) ) + COLS - ( ( 9 ) ) / -x : "One can not simply parse himself"
assert destroy() : "Winter is coming"
def TABLE[Hodor][k] {
	Sansa *= ( bar(rule(),-70) );
	if(Sansa){
	if(ROWS){
	Jon -= Stark
}
}
}
assert -TABLE[rule(( TABLE[foo()][TABLE[foo(810.24)][1000.41]] ),ROWS)][-0.75] : "One can not simply parse himself"
var Ygritte = -1
def TABLE[Sansa][k] {

}
var Sansa = x
def mislead(Jon,Ygritte){
	Stark
}
def TABLE[mislead(-0.09,ROWS) / Jon][i] {
	rule(-( TABLE[TABLE[-73][( ( -66 ) )]][-480.478] ),--protect(destroy(-0.21,( -( -0.32 ) ),Hodor)) / x * -foo(( -destroy(-Hodor + y + -440.81 + bar(( -140.527 ),99 * ( ( Arya * -0.23 ) * -0.65 ),bar())) )));
	-( Jon ) * TABLE[bar(( ( Hodor + ( dog - COLS ) / Stark ) ))][bar(( mislead(-mislead(TABLE[COLS][Hodor],mislead(--12,COLS / Ygritte)) - rule(Ygritte / bar(-( -0.85 )))) )) - foo(( TABLE[-0.14][( Stark )] ))];
	betray(( Arya ) + rule(-( rule(x) )) / y,-COLS,foo(960.859 / Sansa,bar(TABLE[( 1 )][--( mislead() ) - bar(ROWS,-COLS / ( bar() )) + 600.267]) + betray() * foo(0.8))) * protect(foo(y,( ( ROWS ) / mislead(y,destroy(-Hodor,( destroy(COLS) )),-( destroy(destroy() + -520.517 / x,dog) )) - 350.5 )),mislead(-rule(x)),mislead(ROWS))
}
var dog = --800.1
assert 0.11 : "Nothing burns like the cold."
var y = bar(1,( ROWS + --rule(-( ( ( TABLE[-x][betray(Hodor,Ygritte)] ) ) )) - dog / -720.5 + -( COLS / -betray(-64,-34) ) - ROWS ),mislead(( Arya ),x))
def protect(Stark){
	-0;
	Ygritte /= x
}
def rule(){
	x -= 70
}
assert -1 + -Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(TABLE[Stark][Ygritte]) - -ROWS + TABLE[TABLE[65][ROWS]][( ( -72 ) )]][j] {
	if(--18 / ( -Jon )){
	if(--Arya){
	--0.2 - -betray(( Ygritte ),0.77) * COLS;
	Stark;
	84 - ROWS
} else {
	Jon -= ( Jon )
}
};
	if(COLS){
	0.34
} else {
	Sansa;
	if(-( bar(-( TABLE[9][rule(COLS,-0.73,Hodor)] ) / --rule(ROWS) * ( Ygritte )) )){
	0.7 / Jon / ( -( mislead() ) + ( y ) - -27 / -COLS / mislead(betray(COLS * ( protect(14) )),-0.9) ) / betray(( Jon ),-93 + ( -TABLE[( ( -1 ) )][--destroy(x,foo(Ygritte,21,Jon))] ) * ( ( betray() ) ),betray(( rule() ),( -Hodor ) + 85 * ROWS) - -0.18);
	if(dog){
	if(( TABLE[97][( ( 93 ) )] * rule(COLS + Sansa) )){
	if(bar(-( -ROWS ),( -43 )) * ROWS){

};
	Stark /= COLS;
	if(( Stark )){
	-1
}
} else {
	if(-COLS - -betray() / -( -Arya )){

};
	ROWS
}
} else {
	Jon -= -betray(TABLE[( 1 )][Hodor],--1)
};
	if(destroy(COLS / Sansa)){
	Ygritte += TABLE[rule(ROWS,( --ROWS ) - dog,bar(( dog ),( TABLE[( y )][( COLS ) / -( ( TABLE[Arya][-COLS] ) + rule(Arya,Hodor) ) + Jon] )))][Sansa]
} else {
	Hodor += COLS;
	if(-0.8){
	if(--37){
	0.63
} else {
	Ygritte += -TABLE[y][330];
	y
};
	-COLS;
	Hodor *= ( Sansa )
};
	if(( Jon ) + foo(betray(( ( mislead(( ---1 - Hodor + ( ( betray(Sansa,-8) ) ) ),-COLS) ) ),mislead(( ( ( ( ( bar(-destroy(Hodor * --( ROWS ),ROWS,-1)) ) ) ) + -Arya ) ),x)),0.19)){
	if(destroy()){
	1
}
} else {
	if(--betray(-( Arya ) / protect(( TABLE[( ( ---TABLE[x][-mislead(ROWS - COLS * Stark,( foo() ))] / protect(-0.78 + TABLE[y][betray(destroy(-13,-rule(--destroy(Arya,-y - destroy(COLS,dog),betray(( bar(1,betray(betray(( protect(COLS) ),( Arya )))) ))) + 51,Jon)),ROWS,-80)],-100.246 * ( rule(COLS,0.53,x) )) + ( -( -betray(mislead(foo(COLS) / -86,( ( TABLE[( COLS / -0.51 / ( -foo(dog) ) ) / Stark - COLS / Hodor][betray(dog,protect(( rule(COLS,COLS) ),--ROWS * ROWS,destroy(Arya)),0.14)] ) )) - rule(TABLE[TABLE[betray(-( 0.59 ),COLS / -56,ROWS)][( Ygritte )]][---( Ygritte ) * Stark + ( -betray(-29 * ( dog )) ) - TABLE[-y][TABLE[destroy()][-0.73 - 0.15 - ROWS]] - ( ( ( 89 ) ) ) * COLS]) - 0.52,33 - TABLE[-0.38][( dog )]) / COLS / -310.8 ) ) - protect(-TABLE[( TABLE[Ygritte - -destroy() - Arya][COLS * mislead(TABLE[( ( ( TABLE[-COLS][--( -0.77 ) * 12] ) - Ygritte - ( mislead(-380.12,( protect() ),TABLE[protect(-0.79,TABLE[Ygritte / x][( ( Sansa ) )])][Jon]) / x ) / TABLE[destroy(0.27,( -COLS ) * Ygritte) / ROWS + TABLE[rule(COLS,bar(-Hodor,dog),foo(--( -0.03 )) - -1 + betray(( -protect(( -ROWS ),( Jon )) / --rule(Jon) )) + --( ( TABLE[580.271][COLS] ) * ( Ygritte ) * TABLE[--destroy(( betray() ) * mislead(-0.36,COLS,Stark))][TABLE[-Arya][Arya] * Arya] ))][ROWS]][-TABLE[( ( -x * ( COLS ) ) )][( ( ROWS ) )]] ) )][TABLE[( Jon + rule(Sansa,-( mislead(rule(-TABLE[Sansa][--( -Sansa )])) - Stark )) )][Jon]] - -330.9 + -5,destroy(destroy(TABLE[-Ygritte][Arya]),COLS,-COLS * betray(-11,dog,betray(--97,-690.647)))) - ROWS * betray(y,( rule(Jon) ),-x)] )][0.2],y,-Stark + -destroy(ROWS,y,--mislead()) + destroy() + --1 - ( foo() ) / -protect(ROWS) * Sansa) ) )][0.98] )),TABLE[COLS][( COLS * dog / protect(0.17,betray(foo(-8,--destroy(TABLE[-1][TABLE[-foo()][( foo(foo()) )]],--COLS / -0.65,-1) - 72),( mislead(Stark,-rule(37,mislead(( ( --( ( protect(mislead(bar(Arya)),63 - mislead(rule(( 0.07 * --660.18 ),0.84),---0.41 / -( -0.59 ) + mislead(Jon))) ) ) ) )),60.3921),-COLS) ) + ( -( Hodor ) ),-y * --( 1 * Sansa ) - Jon)) )] + ( protect(-Hodor,0.73,-20.6) ))){
	Arya *= ( -bar(Hodor) );
	Stark /= ( dog );
	if(---COLS - y - -( ( betray(Sansa,protect(foo(),ROWS / -( ROWS )),protect() - -81 + -Sansa) ) ) * dog){
	if(Ygritte * Sansa / -Hodor){
	bar(Sansa);
	if(--destroy(foo())){
	if(COLS){
	Ygritte += 0.54
} else {
	0.86;
	Hodor += COLS - Hodor - -protect(Arya,3,dog) - 290.76 * ( ( -1 ) );
	bar(bar())
};
	Arya += Arya / rule();
	Sansa /= Ygritte
} else {
	if(bar(-mislead(protect(ROWS,Stark)),betray(0.12))){

} else {
	if(bar(--740.9 * -foo(destroy(mislead(-COLS,990.7),-foo(-Hodor / ( -0.28 ),( ( -1 ) ) * -14)),83),( ROWS ))){
	if(860.929 - 0.55){
	mislead(1) / ( betray(-520.06,( TABLE[ROWS][( ( dog ) ) - COLS] )) )
} else {
	if(Arya * -TABLE[TABLE[TABLE[TABLE[( ( COLS * ( COLS / ROWS ) ) )][-( bar() ) - ( 44 )]][Hodor]][-Jon]][Stark] / 0.07 + -TABLE[destroy()][COLS]){
	ROWS;
	x *= --ROWS
}
}
};
	Ygritte -= COLS;
	if(COLS){
	if(ROWS){
	( Stark );
	( ( x ) )
}
}
};
	if(--( Arya )){
	if(0.99){

} else {
	Jon *= 0.54
};
	if(( y * COLS ) / -0.84){
	Stark /= Jon
} else {
	Hodor += rule(Arya,( -bar(( foo() ),Sansa) / betray(( ( ( x ) ) )) ),-COLS)
}
} else {
	if(-TABLE[COLS][( dog )] / ---0.57 + -1){
	Jon -= COLS
} else {
	Hodor += TABLE[dog][rule(--TABLE[-( ( -( dog ) ) )][COLS])]
};
	Sansa /= rule(TABLE[Ygritte - ( destroy(-150.108,-87) ) / --0.59 / Ygritte - ( -170.48 ) / mislead(( y ))][Ygritte])
}
}
}
}
} else {
	COLS
};
	if(0.45){
	if(COLS){
	x /= ( mislead(-Jon) );
	if(bar(mislead(rule(( ROWS ),-0.05),y,dog),rule(---730.6 + destroy(),y))){
	if(destroy(Arya,-( ( ( --COLS / ( rule(COLS,Ygritte,protect()) ) ) ) + ( ( ( y ) ) ) ))){
	-mislead(TABLE[Ygritte][TABLE[( 250.836 )][dog]],x);
	x += 78 / ( -1 / betray() )
} else {
	-foo(destroy(Ygritte,( 53 )),dog,TABLE[ROWS][rule(-( -1 ),ROWS,( TABLE[-( dog )][-TABLE[-( destroy() )][foo()]] ))] - ( ( -Jon / -0.78 ) ));
	Sansa += -protect(46);
	if(y){
	if(x){
	if(x){
	if(COLS){
	Hodor -= Jon;
	if(-84){
	if(COLS){
	34
};
	if(TABLE[470.91][68]){
	bar(-22,--45 * COLS);
	if(-460.7918){
	dog
}
} else {
	if(COLS){
	y *= --ROWS + COLS + COLS + ( -0.9 );
	if(Hodor){
	if(( -1 * 0.76 / --0.61 )){
	Sansa /= 0.36;
	x *= betray(-betray(rule(( destroy(TABLE[foo() - ( -ROWS * TABLE[-0.45][-810.85] )][COLS],destroy(( foo(COLS) ))) ),Arya,( COLS ))),rule(ROWS,dog),-foo(0.44)) + -Ygritte;
	if(( -1 )){
	if(protect(mislead(COLS,-96,0.61),-1 - --( 0.43 / -( -0.11 ) ))){
	if(( ROWS ) * -bar(betray(),-51)){

} else {

}
} else {
	-ROWS + -Hodor * bar() / ( TABLE[( -0.42 / x / 1 )][Stark - foo(ROWS,Hodor)] );
	destroy(destroy(( dog / 0.63 )),protect(( Jon ),Jon,Ygritte),TABLE[0.36 - ROWS][foo()]);
	bar()
};
	Jon += ( foo(ROWS) );
	Hodor += ( -0.95 )
}
} else {
	if(TABLE[bar(x)][-1]){
	Sansa += --910.2 / x / -0.99
};
	Ygritte /= foo(bar(-COLS,Stark,-betray(0.83,-120.8)),-( mislead() ))
};
	Ygritte /= -COLS + foo(TABLE[COLS][Arya])
};
	dog -= rule(y)
};
	Hodor /= bar(protect(( -TABLE[x][( ROWS )] * ROWS - TABLE[-Sansa / TABLE[-bar(-1 * -0.94)][TABLE[rule(Jon)][rule(destroy(( ( -48 ) * TABLE[( betray(mislead(COLS),-( destroy(-Arya,( -65 ),protect() + -560.63) / COLS ) + -COLS) ) + -COLS + rule(-0.13,Arya)][foo(-mislead(bar(mislead(-destroy(( ( betray(foo(x)) ) ) * ( ( ( rule(ROWS / ROWS,betray(ROWS,-82,0.56)) ) ) )) - COLS),TABLE[--Arya][destroy(0.35)],Arya)),ROWS,x)] )),Jon) - Stark]] - COLS][-0.72] + -( Sansa ) + -rule(Jon,bar(protect(mislead(bar(),-1),rule(y)),bar(Jon - foo(( 1 )),betray() * Ygritte / ( y ),0.83),y)) * ( COLS ) ),-1),mislead() / COLS);
	y
}
}
} else {
	Jon *= x;
	if(-0.25){
	-44;
	Ygritte += Ygritte
};
	Arya /= COLS
};
	if(( -COLS - mislead() )){

} else {
	Arya / Sansa
}
}
} else {
	y += -1
};
	( 480.654 )
} else {
	Ygritte += destroy(mislead(660.1,-TABLE[--48][TABLE[--0.55 / ( ( -1 ) * ROWS )][--ROWS - ( --140.3572 ) * TABLE[-y][( COLS )]]],mislead(( -TABLE[betray(640.76)][--560.1] ),foo(0.91,foo(bar(-x,-1,Ygritte)),-990.22),-0.85)),Arya)
}
};
	if(COLS){
	Hodor / ROWS + 88
} else {
	0.6;
	x /= -protect(( 0.48 ),-8 / -TABLE[destroy()][-mislead(protect(-1,220.645,( -betray(TABLE[-59 + TABLE[-ROWS * ( Stark ) + y][0.63 - --950.282 / -Stark]][ROWS],( ( TABLE[mislead(protect(TABLE[-0.13][COLS],COLS),ROWS)][( ROWS )] ) )) )))] * ( ( destroy(ROWS,protect() / ( Ygritte )) ) ))
};
	1 - Arya
} else {
	dog
}
} else {
	Jon * rule(mislead(Hodor),( rule(( Jon ) - ( Arya * ( 0.09 ) ),-Sansa / -Arya + ( protect(dog) )) + x * 0.07 ) * ROWS,-0.76);
	-( destroy(betray(),( betray(protect(-TABLE[-870.02][-71],( ( Jon ) ),Sansa) + 0.79 + ( Hodor )) ),destroy(0.07,-81 * ( --( -y - -( -Jon ) / TABLE[-54][( Stark )] ) ))) - TABLE[Sansa][Sansa] )
};
	Hodor += mislead(betray(TABLE[-Arya][destroy()]),-1)
} else {
	if(bar(y,destroy())){

} else {
	-TABLE[( -bar(betray(-1 - Arya / --0.6 * --( -TABLE[0.28][rule(-rule(-Ygritte,0.46,TABLE[91][10.42]),-220.9449)] ),-( mislead(-0.8) - --dog ))) - mislead(TABLE[-1][TABLE[-Hodor][( TABLE[-TABLE[-destroy()][( ROWS )]][Ygritte] )]],( TABLE[( destroy(Ygritte,( COLS ),TABLE[-0.22 * ( ROWS )][Sansa]) * TABLE[Ygritte][-COLS] )][( Stark )] + Arya ),ROWS) - ( ( destroy(690.61) * --0.53 ) ) / -90 )][30]
};
	if(protect()){
	( COLS );
	Jon -= -rule()
}
}
}
}
}
};
	if(-( Stark )){
	Stark *= Jon;
	( -( ( ROWS ) ) ) - ROWS;
	if(ROWS){
	Jon;
	if(0.42){
	betray(-0.21) + TABLE[1 * ( Ygritte )][COLS];
	Jon += -0.4
}
} else {
	if(--y){
	y += Stark;
	22;
	Stark += rule(--Stark) / -Stark * TABLE[protect(-foo(COLS,( ROWS ) + Hodor),( protect(destroy(-( -TABLE[-Ygritte][rule() - Arya + -0.19] ),x,-COLS)) * destroy(( protect() ),( ( x ) ),( -1 )) * 1 ),-( ( Sansa ) ))][0.4] - 0.9
}
}
} else {
	ROWS
}
}
var Hodor = mislead(-0.26,34,( ROWS - y ))
var Sansa = ( betray() )
def bar(Arya,Sansa,Jon){
	x /= bar(betray(y,x) * y);
	47 * TABLE[1][-( -( --1 ) )]
}
def mislead(Ygritte,y){
	Arya *= rule(-ROWS,betray(),ROWS);
	if(Ygritte){
	if(-59){
	COLS;
	Arya -= mislead(ROWS,-470.78,Sansa) - 0.25
};
	if(( x )){

} else {
	if(y){
	if(bar(-49 * -1)){
	dog += ( Ygritte );
	Jon
} else {
	ROWS;
	y += ROWS
};
	betray(( COLS * mislead() )) / ROWS;
	Arya / -4 / Stark
} else {
	-bar(betray(),COLS);
	if(( TABLE[destroy(-( bar(dog,COLS) ),betray())][x] )){
	if(foo(0.18,TABLE[-0.18][-1])){
	if(-dog){
	y += betray(( Jon + protect(-ROWS,-59 * Hodor * protect(0.29 / -180.41,dog) + mislead(Sansa,--19,TABLE[( ( -( -betray() ) ) )][( COLS ) / dog + ( ( betray(( -880.4 )) ) )])) ));
	Ygritte -= TABLE[Ygritte][bar(ROWS / foo(-( 0.33 * ROWS - ( Stark ) ),TABLE[TABLE[--0.14 - x][Sansa]][-1]))] / COLS
};
	dog += Jon
}
} else {

}
};
	Arya -= ( -Stark )
};
	if(-TABLE[Sansa][-COLS]){
	dog + ---4 * Ygritte;
	Hodor += dog;
	x -= ROWS
} else {
	Hodor -= -y
}
};
	Hodor /= -400.835 + -rule(TABLE[7][--ROWS] + Hodor + -0.15) / foo(dog)
}
def destroy(Jon,dog){

}
def mislead(y){
	Hodor += COLS - 1;
	( mislead(-97,Jon) );
	if(0.05){

}
}
assert destroy() : "One can not simply parse himself"
var x = COLS
def TABLE[mislead(( ( ( TABLE[rule(Ygritte,protect(( TABLE[ROWS][( ( 43 ) )] ),0.44),ROWS)][dog * rule(-52 / -( -destroy(foo()) ) * mislead(( TABLE[destroy(( ( TABLE[ROWS][Ygritte] ) )) - ROWS][Stark] ),rule(foo(( ( x ) )),TABLE[1][99] - protect(-bar(( ( -( -destroy(Sansa,Arya) ) ) ),-1) * ROWS))))] ) / destroy(( Sansa )) ) ),( y ))][k] {
	Sansa *= y
}
def TABLE[x][k] {
	-Jon * 53
}
def mislead(x,y){
	ROWS;
	if(-0.35){

}
}
def rule(dog,Jon){
	( foo(foo(COLS),--Sansa) );
	TABLE[COLS][-0.66]
}
assert ( dog ) : "What do we say to the Lord of Death?"
assert --Ygritte + --( -1 ) + -dog * -930.4211 - COLS * ( rule(( ( ( -Ygritte * -TABLE[rule(-49)][0.62] ) ) - x ),destroy()) ) * ( protect(Jon,Sansa,-dog * TABLE[Ygritte][0.96]) ) : "Fear cuts deeper than swords."
def TABLE[32 - COLS][j] {
	if(protect(COLS,--41 * 0.22)){
	Stark += -24;
	if(( 27 )){
	x;
	Sansa /= ( ROWS + destroy(0.09,Sansa) / 0.98 * Arya )
}
} else {

};
	-44
}
assert Ygritte : "Nothing burns like the cold."
var Ygritte = Ygritte
var Arya = mislead(110.184,bar(( -bar() ),( ROWS )))
assert Stark : "Nothing burns like the cold."
def protect(x,dog){
	-48;
	x -= -COLS;
	Stark += ( destroy(COLS,COLS / destroy(13)) ) * rule(( destroy(betray(0.2)) * COLS ),dog)
}
def TABLE[x / -96][i] {

}
def TABLE[( -ROWS )][j] {
	( ( rule(( -ROWS * TABLE[COLS][Stark] * foo(COLS,-( ROWS )) ),( foo() )) ) );
	( ROWS + rule() )
}
def destroy(Sansa,Stark){
	if(0.49){
	if(x){
	if(--Hodor){
	TABLE[Jon - ( ROWS ) / -( x - COLS ) + TABLE[---( ( ( Stark ) ) / TABLE[x][destroy(COLS)] - -0.87 ) + rule(-0.98,Arya)][protect(Stark * TABLE[TABLE[protect(COLS,71)][( Arya )]][foo()] - Ygritte * -890.994)]][( -mislead(( bar() )) / TABLE[-0.29][TABLE[ROWS][betray()]] )]
} else {
	if(( ( Hodor ) )){
	--0.77
} else {
	64
};
	if(Sansa){

} else {
	if(--0.91){
	if(-0.6 + COLS){
	if(( destroy(-dog,TABLE[TABLE[y / ( -( foo(COLS) ) - ROWS ) * -bar(--COLS,dog + mislead())][bar(TABLE[protect(-foo(( -620.0054 ) * ROWS,COLS,1),ROWS - -60 - rule(COLS,COLS) + -18 * destroy(rule() - betray(ROWS * rule(-0.86,ROWS + 990.942),-1),TABLE[--( ( --protect(--ROWS,destroy(-x,TABLE[mislead()][( COLS )],-Jon)) * --y / COLS + TABLE[destroy(COLS)][55] + ROWS ) )][TABLE[( foo() )][( 79 )]]))][( -Stark )],bar(-1)) * -( Ygritte ) + ( -TABLE[ROWS * --1][( destroy(( COLS )) )] )] - 130.3761][TABLE[dog][0.3]],mislead(foo(ROWS,ROWS),ROWS)) )){
	if(-TABLE[-( -betray(-26 + Hodor) )][Hodor]){
	--0.94;
	Ygritte /= --x - mislead(COLS)
}
} else {
	Ygritte += ( --ROWS );
	if(-50.33){
	Sansa += ROWS - protect(dog / Sansa) - ---0.79 * destroy(protect(( betray(betray(TABLE[destroy()][( foo(-( betray() ),y * COLS,( destroy(( COLS ),x,rule(-( -5 ),-930.584) * 0.84) )) )] - TABLE[-1][rule(ROWS)] - -0.09),TABLE[-( ( ROWS ) )][12]) ),betray(-( Stark ))));
	if(( ( foo() ) )){
	if(( -( --ROWS ) * -( 780.5 ) + COLS )){
	if(bar(-500.1,mislead(( 280.75 ),Hodor),mislead(-Stark,0.53,destroy(( -TABLE[-720.51][Sansa] ),890.269 + 0.06 + ( foo(Hodor,-0.25,mislead(-( foo(1,COLS,Hodor) ) + COLS - ( COLS ),-1,--44)) ))))){
	if(3){
	0.03
} else {
	-bar(( ROWS ) + -Stark)
};
	y /= COLS + destroy(-0.63)
}
};
	Jon /= mislead(1,TABLE[22][Sansa * --COLS]);
	if(betray(Ygritte,-440.19,1)){
	if(COLS){
	69
} else {

};
	Sansa -= -20 / -y / TABLE[( -Ygritte )][-1]
} else {

}
} else {
	if(protect()){
	dog *= protect();
	Ygritte
};
	if(( ROWS )){

} else {
	y /= -30;
	Ygritte /= protect(ROWS);
	rule(-970.856,---29)
}
}
}
};
	if(( -1 - 380.494 - ( -foo(-Stark) ) )){
	if(( Stark ) - Hodor){
	rule(COLS,-TABLE[COLS][Sansa]);
	ROWS
} else {
	( ( Stark * 55 ) / ROWS );
	if(COLS + Arya / betray()){
	if(COLS){
	if(430.44){
	if(--Hodor - Sansa){
	if(Jon){
	if(Arya){
	Arya -= 53 + COLS;
	Arya -= ( Arya )
} else {
	-ROWS;
	mislead(( Stark - ( -----77 ) ),protect(ROWS));
	if(( -protect(foo(0.02)) )){
	dog;
	y += 60
} else {
	COLS;
	protect(( 19 ))
}
};
	Hodor /= ( rule(TABLE[( COLS )][rule(ROWS,-0.18)],TABLE[--Hodor][COLS],bar(--60.99,dog,( 15 ))) )
}
} else {
	TABLE[TABLE[protect(ROWS)][( TABLE[COLS][dog] )]][rule()]
};
	if(-ROWS){
	if(ROWS){

} else {
	Ygritte += Ygritte;
	bar(-ROWS)
};
	if(( mislead(( -0.3 )) )){
	-( -foo(x,-rule(( Sansa ),( 0.8 ) - -bar() / mislead(-mislead(--53),Ygritte),( dog )),Jon * 0.44 - -Ygritte / Arya) );
	if(ROWS){
	if(-dog / foo(-dog + ( ( 720.291 - ( mislead(Hodor) ) ) ) - rule(1) / -ROWS,-0.64)){
	Stark
}
} else {
	if(Sansa){
	if(Jon){
	protect(COLS,-( Jon ) - 0.71)
}
}
}
} else {
	if(protect(0.09 / foo(-Sansa + -970.2),COLS,TABLE[COLS][( destroy(ROWS,foo(rule(1 / protect()),rule())) )])){
	Hodor;
	if(----0.38){
	-dog
};
	y *= COLS
};
	if(mislead(0.06,( --0.54 / -mislead(protect(dog,( COLS ))) )) + 1){
	1
}
}
} else {
	if(protect(betray(-TABLE[TABLE[-48][destroy(foo(foo()))]][( ( --190.425 ) )]))){

};
	if(( -y )){
	if(-( TABLE[TABLE[destroy(protect(( ( destroy(-0.34) ) ),( y )))][y]][( -10 )] ) + ( Ygritte )){

};
	y *= 0.03;
	Jon *= Sansa
}
};
	y *= 85
};
	--COLS * -21 - -0.13
};
	if(foo(-0.65)){

};
	--ROWS
}
}
}
} else {
	if(( -COLS * ( -ROWS ) - ( ( Arya ) - TABLE[COLS][protect(rule(-ROWS + ( 0.66 ),TABLE[-TABLE[TABLE[( TABLE[( -53 )][TABLE[protect() * dog][TABLE[-0.73][foo(Arya,TABLE[-foo(200.5)][TABLE[-0.5 / -rule(foo(( COLS ),Arya,-mislead()))][-0.86]] + Ygritte)]]] )][( ROWS )]][rule(( COLS ),mislead(-1,-( ( dog ) + ( ( 1 ) ) + --foo() / TABLE[-Sansa][0.75] / --71 ) * -protect(y,y,mislead(( protect(foo(52)) / betray(ROWS) ),y / betray() - --1)),30))] / ( Jon )][-20.55]))] ) )){
	x /= ( TABLE[ROWS][ROWS] );
	-Jon / -91 + ( -( ( foo() ) ) )
} else {
	Jon;
	x / Jon / -y + -1 * betray(protect(Hodor),COLS)
}
};
	( ( ( -0.86 ) ) );
	COLS
} else {
	-1
};
	y += ROWS
}
};
	if(betray(COLS)){
	if(ROWS){
	if(TABLE[-0.82][Hodor * betray(0.57 - COLS + rule(y + -dog,-0.39),ROWS)]){
	0.42;
	TABLE[-700.31][( ( COLS ) )] - 220.691 - TABLE[destroy(bar(protect(0.74,0.88) * ROWS))][rule(mislead(protect(( Stark ) - Arya * --( -Jon ),( betray(790.4715) ),-TABLE[rule(--30)][Arya])),( ( -Ygritte ) + -foo(destroy(COLS,-0.22,-770.754)) + mislead(-260.55) ),-x)] + betray(COLS,-0.16,betray(ROWS - 60,-Hodor));
	TABLE[mislead(foo(-( destroy(0.92,TABLE[-96][( -protect(-( ( TABLE[-betray(-Hodor)][y] ) - -1 )) )]) )))][ROWS] - ( -Sansa ) / -0.63
};
	if(Stark){
	if(( Jon )){
	-y + ( ROWS );
	if(destroy(ROWS)){
	Arya /= -( Sansa );
	Arya -= 0.43
}
};
	0.01;
	Ygritte += 69
} else {
	x += ---( TABLE[( 30 )][( ROWS )] )
}
} else {
	Hodor *= ( COLS );
	if(( ( destroy(COLS + ROWS * -ROWS + mislead() * --( Ygritte )) ) )){
	if(-0.57 * ( -( Sansa / ( mislead() ) - Sansa * -Sansa + protect(( -38 ),ROWS,( 1 )) ) * -1 - -88 - 0.01 ) / Stark){
	-54;
	-0.09 - Stark + -34 + --0.97 - --330.452 - -COLS - COLS;
	bar(-27,-290.0161)
};
	if(ROWS){

}
} else {
	dog /= COLS;
	if(mislead(( ( ROWS ) ))){
	if(-rule(( -26 )) + ( ( ( COLS ) ) ) + rule(--Hodor,( ( -0.9 ) ),Ygritte) + -90){
	foo();
	if(COLS){
	ROWS
}
} else {
	Jon *= ( COLS )
}
}
};
	y *= Jon
}
}
};
	Sansa *= TABLE[Hodor][COLS]
} else {
	bar(destroy(TABLE[COLS][--0.54],-dog),protect(protect(ROWS,TABLE[0.23][y]),Jon,870.6529)) + ----ROWS + ( COLS ) - ( bar(( 0.35 )) )
}
}
var Arya = ( Sansa )
assert 29 : "Fear cuts deeper than swords."
def betray(Ygritte,Sansa){

}
def betray(Jon,Hodor){
	x *= -Arya * 1;
	x *= destroy(COLS,ROWS / rule())
}
assert ( betray(--98) - ( mislead(-1) ) ) : "Nothing burns like the cold."
var Ygritte = -foo(( -betray() + foo(TABLE[mislead(-46,foo(TABLE[ROWS][Stark]),( 0.22 ) - -ROWS)][-protect(y,0.38)],y * ( ( rule(( -68 ) / mislead(-TABLE[0.78][0.63],Jon),Ygritte / Arya,foo() * -0.64) ) )) * ROWS - x ),--1 / foo() + -0.69)
var y = ( -TABLE[COLS][( -0.24 )] )
def TABLE[TABLE[( ( y * protect(-0.01,bar(Stark,( mislead(( ( ( ( -mislead(mislead(bar(dog,Stark),19 - y - dog)) ) ) ) ) * ( -y / ( ( COLS ) ) ),TABLE[-1][( betray(0.65,-44,0.33 + foo(Stark,Arya)) ) - mislead(--betray(protect(---820.474,rule()),-COLS) / --1 * -4 - -1 - Jon * 1 + -1,--ROWS - destroy(COLS,Stark,COLS))]) ))) * ROWS ) )][destroy()]][k] {
	if(TABLE[ROWS][36] - mislead(COLS) / ROWS){
	protect(( Hodor ));
	dog += TABLE[-ROWS][( ROWS )]
}
}
var Stark = rule(( Arya ),-( Hodor ),-( Jon ) + COLS - x)
def protect(){
	if(y){
	if(-0.33 - Hodor){
	Ygritte /= 0.52
};
	y += 0.62;
	Stark += -87
} else {
	y += -0.96 - x
}
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--1 * -0.48 - -foo(-0.09,( ( ( -COLS + ( ( Arya ) - ( dog ) ) * ROWS * ( -( protect(-ROWS) ) * -COLS / -930.82 ) / -COLS ) ) ))][k] {
	if(TABLE[-( Arya )][ROWS]){

}
}
var dog = rule()
def TABLE[--x][k] {

}
def foo(Arya,Sansa,Sansa){
	Ygritte /= ( --Stark )
}
assert Jon : "Nothing burns like the cold."
def TABLE[Hodor][j] {
	if(--0.41 / bar(-ROWS,ROWS * -1)){
	Ygritte /= ROWS;
	Hodor *= 0.91
}
}
def TABLE[foo(( ROWS ),mislead(340.05) - TABLE[bar()][-0.54])][i] {
	-Ygritte;
	if(bar(COLS)){
	--58;
	dog /= -43
} else {
	if(rule(( dog * y ),-ROWS)){
	--COLS;
	Hodor += -protect(--COLS) - COLS - -y
} else {

};
	if(-betray(mislead(31,destroy(-y),destroy() / ( TABLE[-( 7 )][TABLE[-( COLS )][Arya]] )),1)){
	if(Sansa){
	-79;
	ROWS
};
	-510.2009
}
}
}
var dog = Stark
var dog = Sansa
var Jon = -77
def TABLE[( TABLE[bar(ROWS)][-0.51] )][k] {
	Jon /= ( -foo(-28,ROWS) * -71 - foo(x,-2,-29) + y ) - betray(COLS,rule(--Hodor))
}
var dog = ROWS / -73 / 0.58
def foo(x,Sansa){

}
assert -bar(rule(0.03 - Jon,TABLE[920.818][( -COLS ) * foo(230.94)]),-0.81) : "Fear cuts deeper than swords."
def TABLE[COLS][i] {
	ROWS / ( protect() )
}
var y = 17
assert Arya : "Fear cuts deeper than swords."
assert TABLE[-Stark][37] : "Nothing burns like the cold."
def TABLE[-88][j] {
	dog /= TABLE[-1][ROWS + TABLE[Stark][1] - ( TABLE[-foo(-31,destroy(),y + 52 / -ROWS) * -0.61 / ( ( ( dog + TABLE[foo(Stark - Arya + --22 - ROWS - Ygritte * ( Stark - -ROWS ),-destroy(bar(-Hodor,-0.26) * dog * -TABLE[ROWS][TABLE[TABLE[ROWS][mislead(-( ROWS ))]][( -y )] / bar() / destroy(-15,x,TABLE[-19 / 980.0115][1]) / betray(0.02)] - ROWS / Jon,ROWS))][( ROWS )] + y ) ) - Arya ) * -TABLE[870.09][TABLE[TABLE[ROWS][destroy(( ( 40 ) ),-0.31)]][( destroy() )] / Jon / dog]][( TABLE[rule()][ROWS * destroy(-mislead(-0.68 / ( ( betray(( -y ),1,y) ) ) * --78,betray(-TABLE[COLS][mislead(TABLE[ROWS][TABLE[-TABLE[TABLE[-0.65][destroy(Jon,COLS)] - COLS][( COLS )]][87]])],TABLE[TABLE[( ( ( COLS ) ) )][( -( ( ( y ) ) ) ) - ( ( ( 480.795 ) ) / COLS ) * -0.49]][TABLE[destroy(( betray(( -710.646 ),destroy(-rule(-970.8))) - -destroy(-TABLE[--600.3][-( COLS ) + x]) ) / foo(0.43,( -dog )))][foo(destroy(-560.951,-( 35 )),-0.64 / -y,TABLE[-21 + Ygritte][( -45 )])] * -( ( -81 ) + betray(betray(( ( destroy(ROWS,COLS * -17) ) ),Sansa),Sansa,--ROWS - ( 0.19 )) + bar() )])) - -0.21) + dog] + Sansa )] )];
	if(ROWS + 0.84){

} else {

};
	Hodor /= rule(Jon,y)
}
var Hodor = ---Jon
def TABLE[Stark][i] {
	if(Ygritte){
	Hodor *= 81 + 27 - Arya;
	if(( TABLE[betray(rule(TABLE[( -1 + 0.95 )][TABLE[290.6][0.22]],-destroy(betray(-TABLE[-betray(--COLS * ( -1 ),Hodor)][( protect(Hodor,betray(( ( ( x ) + -590.396 ) ),y)) )],betray(protect(Ygritte)))) + foo(-730.37,foo(rule())),bar()),COLS)][y] )){
	Stark += -Stark;
	protect(( ROWS / Hodor ),( -0.44 ))
} else {
	dog += protect(TABLE[( 22 )][--0.36],19);
	Sansa /= ( TABLE[Hodor][Sansa] )
}
}
}
def TABLE[( ROWS ) * --820.9][j] {
	-1
}
def TABLE[( foo(Jon) + protect(( Arya / COLS )) )][k] {
	Arya /= 0.59;
	if(990.8){
	if(-protect(-Arya + ROWS)){
	if(-foo()){
	COLS;
	y /= 36
} else {
	if(-39){
	--foo(-1,-dog) / TABLE[bar(-ROWS)][destroy(Ygritte,-0.79,( -mislead(rule(),Ygritte + ( Sansa + rule(dog,( ( bar(Sansa,mislead(-0.4)) ) - y ) * ( protect(--0.98,-rule(ROWS)) + Sansa )) ) - 0.46,-y) )) * ( -Ygritte / ( 0.47 - 1 ) - ( 78 ) ) / -dog * -1 + ( rule() ) + Sansa - -foo() - ROWS];
	if(-1 - -( ( COLS * -x - -11 ) ) / ROWS){
	--0.02 * Ygritte;
	y *= protect();
	Sansa *= mislead(( foo(dog,( -ROWS )) ),protect(TABLE[-Jon][-47],( y ),TABLE[-0.38][TABLE[ROWS][Ygritte]]))
};
	destroy(dog)
};
	foo(destroy(-destroy(COLS,ROWS) / -71,Arya),rule(93,mislead(( x * ( COLS ) )),Hodor));
	-Hodor - Ygritte - -foo(COLS,-0.53) + Ygritte + -destroy(TABLE[bar(-0.92 / ROWS)][( -y )],( ( mislead(( 0.38 )) ) * -ROWS ))
}
} else {
	ROWS;
	y *= rule(-46,-0.91 - -Hodor * 970.018)
}
}
}
assert COLS : "Nothing burns like the cold."
var Ygritte = --mislead(( -Hodor ),Ygritte - -99)
def rule(y,Ygritte,Jon){
	Jon += 970.1;
	if(Hodor){

} else {
	Jon += destroy(ROWS);
	if(--( betray(-Arya + COLS / ( Arya )) )){
	Hodor *= COLS;
	-950;
	( ( TABLE[-0.82][foo() / TABLE[Stark][foo(( Stark ),( destroy() + COLS ))]] ) + Sansa )
}
}
}
def foo(){
	x /= -27
}
var Stark = ( TABLE[bar() / ( -( 1 ) ) * 330.914][Hodor] )
var Hodor = protect(betray(( TABLE[betray(COLS,-( 81 ) + Arya)][Jon] ),rule(COLS * TABLE[0.93][destroy(rule(x + y,( -99 ) * ( ROWS * ROWS ))) - betray(COLS)],( TABLE[-TABLE[-1][( -ROWS - Hodor )]][-rule(( Stark + COLS ),( ( COLS ) ) * 640.31)] ))))
assert 0.02 : "What do we say to the Lord of Death?"
def protect(Hodor,Stark){
	-7;
	if(y){
	Ygritte *= -( TABLE[( 42 )][ROWS] )
}
}
def TABLE[-45][j] {
	if(3){
	--( 1 * TABLE[Sansa][ROWS] / bar(Hodor) );
	-4 / TABLE[Jon][betray(( --1 - destroy(-1 - ( --Stark ) * y) ) / 0.19,( ---85 - -foo(( TABLE[Stark][( dog ) - betray(-rule(Arya,1,---( ROWS )))] / -betray(490.17,foo(Arya)) - ( Arya ) - bar(-6,-rule()) / dog )) * TABLE[( -180.216 + rule(COLS) * -99 )][( betray() )] ))]
};
	Hodor /= -0.53;
	if(( ROWS )){
	( -( foo(TABLE[220.6744][y / ----83],COLS,-TABLE[TABLE[ROWS][rule(( ( Sansa ) ),-COLS) + -29]][Hodor * Jon]) * ROWS ) )
} else {
	if(1){
	if(1){
	if(-betray(TABLE[TABLE[foo(dog,ROWS)][foo(bar(dog))]][--22 * ( ROWS )])){
	if(--6){
	dog /= -COLS
} else {
	betray();
	Hodor += ROWS - ( -1 ) / ( ( 0.78 ) );
	-900.549
}
};
	0.53;
	Ygritte += ( ( Stark ) )
};
	Jon *= y
} else {
	y += ( ( Hodor ) )
}
}
}
var Sansa = COLS * --dog / Ygritte
var x = ( bar(y,( ROWS ),-rule(betray(-destroy(),destroy(x * -COLS,( rule(( dog ),COLS) ))) - -1,( -1 ))) )
def mislead(Jon,y){

}
def destroy(){

}
def protect(Sansa,Arya){
	( -( -TABLE[TABLE[Stark][TABLE[Hodor][Jon]]][1] ) );
	if(protect(TABLE[( foo(rule(betray(-x + 0.39,ROWS,-destroy()))) )][mislead(bar(-ROWS,Jon) + ( TABLE[bar(1,-Ygritte - -y,bar(( -1 ) + COLS - -Ygritte - ( ( ( Jon ) ) ) / ( ROWS ) + ROWS,-( COLS )))][foo(9,TABLE[mislead()][Sansa])] * Sansa / Jon ) / ( COLS ) * ( ( ( COLS ) ) ))],COLS)){
	if(Stark){
	if(TABLE[TABLE[Sansa][-COLS]][destroy(COLS / Jon) + ( ROWS )]){
	if(Sansa - ( Arya - Arya )){

}
};
	if(protect(( -0.18 ))){
	Arya;
	if(Jon - -Ygritte * Sansa){
	Ygritte /= -( y );
	if(( ( ( COLS ) + ---( rule(protect(),( Jon )) ) - Stark ) - y )){

} else {
	if(ROWS){

}
};
	if(( protect(x,mislead(-71,( Jon ))) )){
	( bar(destroy(-dog)) + mislead(-rule(--destroy()) - 90,TABLE[y][Ygritte]) );
	destroy(destroy(-0.77,Hodor,--0.48))
} else {
	Jon *= COLS;
	Sansa *= x
}
} else {

};
	if(ROWS){
	if(Hodor){
	22;
	if(-Sansa){
	dog -= -betray(x,( --20 ));
	320.62;
	if(-58){

} else {
	if(Ygritte){
	if(-1){
	Arya *= ( COLS );
	if(TABLE[x][TABLE[( -10 )][-( -11 ) - protect(ROWS)]]){
	( Stark ) / ( --( x ) + -870.434 );
	if(--0.97){
	if(ROWS / -( 360.2 )){
	if(( dog )){
	dog;
	82
} else {
	-( ( COLS ) ) - TABLE[-ROWS][( 0.92 + Jon )] / TABLE[Ygritte][betray() + 86]
}
} else {
	if(Hodor){

};
	if(rule(( 0.87 ))){

};
	COLS
};
	Stark += ( bar(( --ROWS )) );
	Jon -= rule(Stark)
} else {
	Jon /= Sansa;
	dog /= ( --860.09 )
}
}
} else {
	y *= TABLE[TABLE[-1 + ( foo(-foo(TABLE[rule(rule(mislead(--( COLS )),-19,ROWS),ROWS)][340.58]) / Hodor) )][TABLE[( rule(( foo(COLS) ),destroy()) ) + foo(( destroy(ROWS / --destroy(( ( -TABLE[( ( -0.95 ) )][( Jon )] ) - x )),-42 + mislead(690.51,1),0.4) ))][betray()]] / 390.043][-39];
	Arya *= ( ( 11 ) ) * protect(Stark,--1,( -COLS + dog )) * ROWS;
	Ygritte -= -Sansa - bar()
}
}
}
} else {
	betray(( -5 ),betray(rule(),COLS),-Arya)
}
}
}
} else {
	Arya += Stark;
	dog /= x;
	Ygritte /= dog
};
	Sansa -= 980.89
};
	if(-0.83){
	25;
	Sansa /= Ygritte
}
} else {
	if(-0.19){
	TABLE[ROWS][-TABLE[y][TABLE[y][( -ROWS - protect(11) ) - -ROWS]] / protect(COLS)];
	Sansa /= -( y )
};
	dog
};
	x *= COLS
}
assert protect() : "Nothing burns like the cold."
var Hodor = 0.65
var Sansa = -dog
assert ROWS + protect(y) : "Fear cuts deeper than swords."
var Arya = --1
def TABLE[Hodor + -0.13][k] {
	Ygritte -= COLS * TABLE[COLS][( COLS + ( destroy(-0.39,( ( ( 0.73 ) ) ) * -71 + Arya,-22) * -Sansa ) )] + -foo() * COLS - COLS;
	Arya *= -destroy(( ( ROWS ) ),1 - -betray(-( COLS ),( bar(-TABLE[bar(y,bar(),( ROWS - ( -x ) ))][COLS] - 17 / --0.32,COLS) / ( Stark ) - -COLS )));
	x
}
assert -ROWS : "One can not simply parse himself"
assert COLS : "Fear cuts deeper than swords."
def foo(){
	( -0.78 / ROWS );
	x += Ygritte
}
assert TABLE[Jon][( ROWS )] : "What do we say to the Lord of Death?"
var y = --85
var Ygritte = COLS
def TABLE[TABLE[TABLE[-0.1][-0.3]][0.68]][k] {
	ROWS
}
def mislead(Hodor,Hodor){
	dog -= Ygritte;
	if(( ( ( rule(( --( ROWS ) - ( 360.95 ) )) ) + -110.59 ) ) + -ROWS - Hodor){
	Ygritte -= bar(790.4,ROWS);
	-( betray(TABLE[TABLE[53][COLS]][Sansa]) )
} else {
	Sansa *= ( TABLE[ROWS][ROWS / rule(Stark)] ) / ROWS / -950.1608;
	-COLS
};
	if(-betray(ROWS * Hodor,COLS,-y)){
	if(foo(mislead(Hodor),TABLE[0.51][-0.91])){
	x += ( y ) - 0.22 + mislead(ROWS,0.84)
} else {
	if(( Ygritte + ROWS )){
	-( ROWS );
	Hodor /= TABLE[betray()][destroy(-( ---Hodor * y * ( -( 0.3 ) ) ),-Sansa)] - destroy(23 * ROWS,protect(-33,-0.39,( ( ( ( 550.5 - dog ) ) ) )) + COLS - -56) * Jon;
	-1
}
}
} else {

}
}
def mislead(){
	if(destroy(destroy(( --0.83 / ( y ) )),Arya)){
	ROWS;
	COLS
};
	if(1){

} else {
	( Jon );
	if(-ROWS){
	-TABLE[-630.5994][-( y )];
	Sansa /= ( COLS ) * --1 * -0.91
} else {
	if(( -540.828 / dog )){
	if(-1){
	Stark += -( Hodor );
	if(-( ( -540.7 ) )){
	x -= ( -( y ) / -1 );
	if(( mislead(y,40) )){
	y;
	Hodor += -0.15
} else {
	Stark += -COLS;
	0.59
}
} else {
	9;
	betray(dog,COLS)
}
};
	if(-bar(-destroy(--rule(y,COLS),Sansa - ( y )))){

} else {
	Stark /= 550.1;
	COLS;
	Stark -= COLS
};
	( 0.01 )
} else {
	Sansa /= -COLS;
	dog /= Arya
};
	-TABLE[protect(4,betray(( --( -640.61 ) )),COLS)][( ROWS + ROWS )]
};
	Arya += protect(Ygritte,ROWS,foo(-Arya,( -90.56 )))
}
}
def TABLE[TABLE[bar(42,COLS - TABLE[x / TABLE[bar()][-32]][--Stark])][1 * -0.21]][j] {
	protect(-ROWS);
	if(( -mislead(Stark) + dog + TABLE[bar()][COLS] )){
	--Stark;
	x
} else {

}
}
def TABLE[dog][i] {
	ROWS;
	-0.54
}
def bar(Ygritte){
	y += ( -1 + Stark - Arya )
}
assert --30.62 : "Nothing burns like the cold."
def mislead(Ygritte,Hodor,Hodor){
	-mislead(betray(Arya + ROWS,-( foo(-Hodor,COLS) )),-( TABLE[mislead() - 66][-19] / ( Jon ) ) + ( ROWS )) - TABLE[COLS][bar(( -( ( ROWS ) ) ))] * foo(COLS,-Arya);
	Ygritte += Jon
}
def TABLE[--( mislead(( ( -foo(( COLS ),foo(-57)) ) )) - ( Stark ) )][j] {
	if(-0.29){
	Stark -= -0.3;
	-71
};
	Hodor *= ROWS / Hodor
}
def TABLE[( 0 ) / 54][i] {

}
def TABLE[Stark][i] {
	if(protect(0.97)){

};
	if(x){
	if(-ROWS){

} else {
	Arya -= Hodor
};
	--( Stark ) - ROWS;
	if(( destroy() ) + COLS){
	Sansa /= -TABLE[TABLE[COLS][rule(bar(COLS,--( rule(440.89,-0.91) ),Sansa))]][x] * --50 - 80.9621
}
}
}
def destroy(Hodor){
	if(( -( -Jon ) )){
	-38 - --COLS;
	Hodor += ROWS
} else {
	Arya -= y
};
	if(-Hodor){
	y -= Jon
}
}
var Hodor = ( ( TABLE[( TABLE[ROWS][0.08 - -85 - ( -810.809 )] )][TABLE[x][-0.7]] ) + ---COLS * COLS )
def bar(){
	Hodor *= protect(-y,-0.91,-TABLE[dog][Stark]);
	Sansa += TABLE[-0.99][-1];
	y -= COLS
}
def TABLE[-960.89][i] {
	bar(TABLE[x][Arya] + Hodor,destroy(75)) * COLS;
	Sansa *= mislead(ROWS,ROWS,protect(bar() * 0.1))
}
assert ( -10 ) : "Nothing burns like the cold."
def TABLE[( ROWS )][k] {
	Arya /= Stark;
	x
}
def foo(Jon){
	if(bar(-Jon,mislead()) - ( --990.764 ) * ( TABLE[ROWS][-y] )){
	if(mislead(( --ROWS ),( -( 0 ) - COLS ))){

} else {
	Hodor;
	if(rule()){

}
};
	Hodor += -0.84
}
}
var Arya = Ygritte
def TABLE[( -Arya / 53 )][j] {
	Stark;
	TABLE[-dog][foo(( 0.27 )) + COLS]
}
var Sansa = ( ROWS )
def bar(dog,Ygritte){
	if(mislead(( destroy() / ( 46 ) + -( bar(rule(( -0.61 ) * dog,-mislead(( ( -ROWS ) ),Hodor))) ) ),( -( -dog ) - --y / Stark / COLS ))){

} else {

}
}
assert -ROWS : "Winter is coming"
assert ( Stark ) : "Winter is coming"
var Sansa = x * COLS
def TABLE[COLS][k] {
	ROWS;
	if(--COLS / ROWS){
	---rule(y)
} else {
	Sansa *= COLS;
	betray()
}
}
var Jon = -ROWS - foo(Arya)
var Sansa = mislead(TABLE[-protect(1,ROWS,( x - Arya / ( -( protect() ) ) ))][COLS],( -48 ),protect(63))
def rule(Ygritte,Arya,x){
	Arya;
	--44 * -28
}
def TABLE[--0.05][i] {
	y /= ( --( foo(0.98,1) ) )
}
var Stark = -4
def foo(Hodor){
	x *= -ROWS * ( COLS / -790.759 - TABLE[( Jon )][Hodor] ) / rule(---Sansa * -0.07 / foo(rule(-Jon + -Sansa)),mislead(COLS),mislead(-Ygritte,ROWS)) - -Ygritte
}
assert COLS : "Fear cuts deeper than swords."
var Ygritte = ROWS
def mislead(){
	dog *= mislead(--720.437);
	( ROWS );
	dog /= Hodor
}
def TABLE[y + -23][k] {
	Sansa
}
assert -70.25 : "Nothing burns like the cold."
def TABLE[( mislead(Jon) ) * -( rule(( Jon )) / mislead(-mislead(COLS,x) / -( -0.92 ) / bar() + betray(--59) - 20 + dog * -ROWS - ( 40 )) + y ) / betray(COLS) - COLS + -1 / Sansa / dog][i] {
	TABLE[mislead()][-( ( 530.86 ) )];
	if(-foo(Arya,protect(ROWS - Sansa))){
	if(Ygritte){
	---dog * protect(( destroy() ),Jon / -Jon);
	Sansa += -26
} else {
	Sansa
};
	y += -0.22;
	Hodor /= Hodor
}
}
def TABLE[foo(COLS) * ( x )][k] {
	destroy(320.939,13);
	foo(--( ( ( dog ) ) ),0.08) * --0.93 - -42 * -Arya;
	-1 + Jon
}
def TABLE[bar(-( -( ( -30 ) ) ),Sansa)][k] {
	if(Jon){
	Stark /= -rule(( 680.749 )) + TABLE[ROWS][ROWS] + ( 0.62 )
}
}
def TABLE[-TABLE[( ( COLS ) * mislead(-( ( 96 ) ) + ( -bar(-rule(destroy(),( -( ( -470.7437 * -1 * -46 ) ) )),0.58,destroy(Sansa,y)) ),-betray(-( -0.39 ),-TABLE[-490.3][( ( ROWS ) )] * Ygritte) * -1) + Ygritte )][COLS]][k] {

}
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[COLS][j] {
	y -= foo(destroy(),ROWS,x);
	dog;
	dog -= betray(-75)
}
def TABLE[-1][j] {

}
def TABLE[( COLS )][j] {
	Arya += destroy(Sansa)
}
def TABLE[( bar(ROWS,( Stark ),( dog )) )][k] {
	x -= --1 * --y - 110.8;
	Jon /= foo(rule(),--1,ROWS)
}
def TABLE[COLS][i] {

}
def destroy(dog,Sansa){
	--10;
	Jon -= ( -ROWS + -65 );
	TABLE[-43][Hodor]
}
var Jon = Stark
assert Arya : "Winter is coming"
var x = COLS
def protect(Stark){
	betray(x - --Sansa,( ---0.67 + COLS ),betray(betray(bar(x)),ROWS) + TABLE[rule(y)][-29]) - 620.5968;
	x;
	Sansa * TABLE[---85 + Arya][-79 * Arya - -0.52]
}
assert -mislead(-1) : "What do we say to the Lord of Death?"
def TABLE[foo(( x )) + -( -1 )][j] {
	if(( --destroy() / ( COLS ) ) - TABLE[-( -0.59 - 23 )][( y )] / mislead(-0.8,-betray(),-TABLE[protect(Stark / bar(ROWS,-1,-65 - destroy(( --1 ))))][TABLE[-destroy(TABLE[Hodor * ( Stark ) - protect(COLS) - COLS][( dog )],x)][--1]] + Ygritte) * -ROWS - betray(--Sansa,55,0.25)){
	Arya /= -( x + -62 - 42 * Sansa );
	Arya
};
	x += -TABLE[( 0.68 )][5] * ( mislead(( ( -Hodor * -( ROWS ) - ROWS - foo(-betray(TABLE[TABLE[( Sansa )][-destroy(( ROWS ),-0.78) * Stark - dog * -Stark]][bar(( TABLE[foo()][410.301] ) * ( -1 + ( ( ROWS * ( 1 ) ) ) ))],1,( y ))) * Stark / -1 + -Jon * foo(TABLE[ROWS][Sansa],mislead(( bar(x + 98 * -0.71 - Jon) * ( 1 ) ),Jon),y) * ( -1 ) ) ),-25) )
}
def TABLE[x][k] {
	if(( rule() ) - -25){

};
	if(27){
	( TABLE[( ROWS ) / ( ( protect() ) ) + -Arya][-33] )
}
}
var y = ( rule(-( -68 - ( ( TABLE[( ( ( COLS ) ) )][bar(( ( rule(COLS) ) - ROWS ),Hodor)] ) ) )) )
def TABLE[210.46][i] {
	ROWS;
	Stark + TABLE[COLS][protect(-y)]
}
def foo(dog,dog,Hodor){
	( -0.52 )
}
def rule(Jon,Stark){
	foo(11,-1)
}
var Jon = -1 + -betray(-( TABLE[-protect(0.08,( ROWS ) * -1)][y] ),TABLE[( ( protect(( Arya ),bar(ROWS,0.7) * rule(( COLS )),Jon) ) )][foo(ROWS)],rule(( Arya ),( -( ( ( ( COLS ) ) - rule(rule(dog)) + foo(protect()) ) ) * ( Sansa ) )))
def bar(Sansa,Arya){
	Hodor += -( -130.34 )
}
def protect(Arya,Arya){
	TABLE[protect(TABLE[-( destroy(Arya) )][Arya] / COLS + ( -bar(-Stark,( Arya ),destroy(rule(Sansa * Sansa))) / 0 ),protect(--TABLE[( -66 ) / dog][( rule(destroy(( ( --dog ) / 0.96 ),foo(-0.02) + destroy()),( -protect(-bar(ROWS,( --destroy() ))) )) )] / -ROWS / -60.18 - ROWS,( rule(55) )))][ROWS];
	if(--830.7){
	Hodor *= ( Ygritte + -0.53 + ( -( -COLS ) ) );
	if(( -rule(0.77,x) * 1 )){
	if(ROWS){
	if(ROWS){

} else {
	if(( Ygritte )){
	COLS - COLS
} else {
	( -protect(COLS,foo(-1)) );
	Jon *= Sansa
}
};
	y;
	Arya /= betray(foo(650.2319))
} else {
	Sansa += -Hodor;
	ROWS
}
}
}
}
assert 57 : "What do we say to the Lord of Death?"
var Stark = ( TABLE[ROWS][( dog + --TABLE[Jon][( Jon )] + ( destroy(-630.2,( COLS - 0.42 - ROWS ) + ----330.622 * -4 * dog + -1,-0.63) ) )] ) * x
assert -( y ) : "Winter is coming"
var Stark = -650.45
def bar(dog){
	( Arya )
}
def TABLE[Jon][i] {
	dog -= -310.0283
}
def TABLE[-860.4][k] {
	if(Jon){
	dog /= betray(-1,COLS / --0.01);
	Sansa - ( x )
} else {

}
}
def TABLE[-Arya][i] {
	Stark += protect(( 0.71 ),TABLE[Jon][( ROWS )],-0.11)
}
var Sansa = bar(Hodor,y,COLS)
assert COLS : "One can not simply parse himself"
var Sansa = ROWS
def TABLE[56 + ( 24 )][j] {
	if(-1){
	if(-Stark){
	protect(Sansa);
	Sansa += -protect()
};
	if(-84){
	if(( -Jon )){
	65
} else {

}
} else {
	if(-( ( ROWS ) )){
	ROWS;
	( destroy(( 0.89 ),y) )
} else {
	if(Stark){
	( ( -0.37 ) );
	if(TABLE[-Stark][( ( Arya ) )]){
	y;
	Hodor -= COLS
}
};
	if(dog){
	0.66;
	if(destroy(TABLE[640.25 * destroy(--73,--1 + ( 0.55 ) - COLS + ( COLS ) / betray(( COLS )) + dog)][Jon]) / ROWS){
	if(betray()){
	78;
	COLS
}
} else {
	if(-y){
	y /= -foo(( bar(( dog )) ),TABLE[protect(COLS)][-46 * ( destroy(( ( mislead(betray(-1)) ) ),Hodor,( 550.82 )) )]);
	Stark -= -45;
	Jon /= -0.34
}
}
}
};
	Hodor += foo(-0.2,ROWS)
}
} else {
	Arya += ROWS;
	x
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	Stark
}
def betray(dog,Arya){
	TABLE[-TABLE[rule(( ( -45 ) )) + betray(TABLE[--COLS][( 47 )]) + -mislead(( -23 )) / bar(-rule(-190.911,720.14 - TABLE[Stark][0.82] * TABLE[-( 46 )][-20] / Stark),destroy(-62))][0.91] + ROWS][-Hodor];
	destroy(ROWS,( -0.93 ))
}
def rule(Sansa,Ygritte){
	if(( rule(bar(destroy(rule(COLS),( Stark )),-0.7 + ROWS) / ( 16 ),( Arya )) )){
	if(-COLS){
	Ygritte *= mislead(-( ROWS ),( ROWS ),( COLS * Arya ))
} else {
	if(( -rule(-COLS,TABLE[( ROWS ) - foo(betray(TABLE[( -0.78 )][ROWS],1,dog),( 0.96 ))][destroy(-670.6,foo(--0.08,-78,-1))]) )){

} else {
	if(--0.87){
	Stark *= -59
} else {
	--( -( TABLE[Sansa][3] ) )
}
};
	if(-rule(-0.41)){

};
	if(protect(foo(( -COLS ),mislead(),Ygritte),-0.09,-550.912)){
	if(--47 * rule(Hodor,( -1 + TABLE[-1 / ( 11 ) / 310.123][Hodor] ))){

};
	Stark -= ( TABLE[COLS][( 0.39 )] )
}
}
}
}
var Ygritte = y
def mislead(Sansa){
	if(foo(( 0.19 ),Stark,-TABLE[mislead(foo(-TABLE[-TABLE[Hodor][( mislead(foo(Sansa,TABLE[36][protect(COLS,Sansa)]),Hodor) * 50 - TABLE[-TABLE[TABLE[TABLE[ROWS][( --22 * ( -Hodor ) )]][Ygritte - -0.4 * x]][-( x )] / Ygritte][rule(TABLE[360.3][-y])] / -protect() / --Jon - ( ( x ) ) )] * COLS][TABLE[-0.21 / Ygritte][940.061]]))][COLS]) + protect(-1,ROWS)){
	y -= ROWS;
	Stark -= -1 * foo(mislead(destroy(foo(0.31)),-0.85),mislead(Hodor))
};
	if(( TABLE[Ygritte][0.28] )){

} else {
	Hodor += -0.13
}
}
assert rule(COLS,-foo(COLS * ( -330.4 ))) : "Nothing burns like the cold."
assert Hodor : "One can not simply parse himself"
assert y : "Fear cuts deeper than swords."
def betray(Jon){

}
var y = --0.53
def TABLE[COLS * Sansa / ( -1 ) / COLS][k] {
	if(COLS){
	Sansa *= --betray(Ygritte,Sansa) - COLS * -34 * 0.25
} else {
	0.14
}
}
assert -dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-78][i] {
	foo(TABLE[mislead(ROWS) * Arya * -COLS - rule(( mislead(( -bar() )) ))][x],mislead())
}
var dog = ROWS
def rule(Arya,x){

}
assert -( COLS ) / ( ( -1 ) ) : "Fear cuts deeper than swords."
var Sansa = TABLE[Ygritte][mislead(0.29,( -0.81 - --dog ),protect(-TABLE[25][Ygritte])) + rule(y,-89 / ( --bar() + TABLE[330.204][mislead(ROWS)] ))]
assert -TABLE[-24][rule(-ROWS * COLS + -ROWS * -420.4,( 0.63 ))] / -0.02 : "Winter is coming"
def mislead(Hodor){
	-( Ygritte );
	if(Ygritte){
	if(0.13){
	if(COLS){

} else {
	COLS;
	dog;
	--rule()
};
	if(0.98 + 54){
	Ygritte
} else {
	dog *= rule(Arya) / -11;
	y *= destroy(betray(0.5,Hodor / 350.73));
	Ygritte + betray()
};
	Arya += Hodor
} else {
	if(( -0.1 )){
	Ygritte += -0.43
};
	Hodor += ( -foo(COLS) )
};
	if(-1){

} else {
	y += ( -0.53 )
}
}
}
var Ygritte = destroy(-Hodor,COLS)
var Sansa = mislead(-47)
def TABLE[y][j] {

}
def TABLE[Hodor][i] {
	Hodor += -( COLS )
}
var Hodor = -Jon
def TABLE[ROWS][j] {
	-( mislead(rule(Jon)) )
}
def bar(Stark,dog,Stark){
	if(0.38 * rule(betray(mislead(betray(dog,ROWS)) / COLS,-0.12 - Sansa))){
	Arya;
	x /= dog
} else {
	Arya += COLS
}
}
var x = 0.84
assert ( Arya ) : "Winter is coming"
assert foo(( Arya ),( ( mislead(x,1) ) )) : "One can not simply parse himself"
def destroy(Jon){
	if(mislead(98,( COLS )) + 1){
	x *= ( foo(Ygritte,ROWS,mislead(Sansa,TABLE[foo(betray(( -55 ),0.56 + -Stark / ( -65 + Sansa ),Sansa),( -900.323 ) / ( betray() ))][protect(Sansa,870.03,ROWS - -0.57)],Ygritte) / 0.87 + 4 + Stark * rule(Hodor,TABLE[COLS * -destroy(foo(mislead(x,COLS,rule(Stark,0.56,COLS) / ( x ) / ROWS)),-48,x)][bar(65 + foo() - -28,--( TABLE[destroy(1,-( Jon ))][bar(( ROWS ),1,COLS)] ) * TABLE[630.422][--1])],rule())) )
}
}
var Sansa = Stark
def foo(Ygritte,x){
	if(( ( ( ( -( COLS ) + ( -COLS ) + -Hodor / protect(-28 - 1,ROWS,( -510.1 / Stark )) ) ) ) )){
	if(-( TABLE[-0.45][-1] )){
	Hodor /= 5;
	-COLS + ( dog )
}
} else {

};
	if(TABLE[destroy()][bar(rule(TABLE[710.55][( -betray(( -foo(-( COLS ) - dog,dog) )) / COLS - ( -30.0144 ) + -0.96 )],( foo(COLS) ),-75)) / 26]){
	x -= ( ROWS );
	( Sansa )
} else {

}
}
def TABLE[Stark][k] {

}
def protect(Jon,Sansa,Ygritte){
	dog;
	dog
}
def TABLE[foo(( mislead(44,Jon,( ROWS )) ),-0.05) - -( 24 ) / 0.07][k] {
	if(-0.22){
	( -ROWS )
} else {
	x += bar();
	if(19){
	if(ROWS * ( COLS )){
	x += COLS;
	Jon -= ROWS;
	if(y){
	Jon += -COLS;
	( 0.42 );
	x /= ( COLS )
}
};
	y -= Stark
}
}
}
def TABLE[( destroy(TABLE[-0.42][-( 41 )] * protect(( ROWS ),60),0.02) )][k] {
	if(y * rule(( -1 ))){
	Jon /= COLS
}
}
def TABLE[( Stark )][j] {
	TABLE[betray(-220.24 + Jon)][mislead()] / -80;
	if(-0.28){

}
}
def TABLE[bar(-95)][i] {
	if(-380.67){
	if(250.35 * --( Stark ) - y * 0.12){
	Ygritte;
	dog * ROWS
};
	if(destroy(destroy(Ygritte),---Sansa - -ROWS / COLS * bar(370.2867 * foo(-1,-Jon),x) + TABLE[rule(-0.8)][-0.56])){
	protect() - ( --mislead(-1) ) - protect(x,( foo(Hodor,-0.05) ),Hodor);
	dog /= ROWS;
	-mislead(73)
};
	Ygritte -= Ygritte
};
	y *= Ygritte
}
def TABLE[Ygritte][k] {
	if(-1){
	x
} else {
	Sansa *= COLS * ( TABLE[protect(Arya,( destroy(0.52) ))][Jon] );
	1
};
	0
}
var dog = COLS
def TABLE[-0.34][i] {
	( ( ( ( destroy(betray(-( y )),ROWS + COLS) + ---y / --( ( Jon ) ) + ( Sansa ) / -Ygritte * ( 0.62 ) ) ) ) );
	if(( -COLS )){
	Jon += ( Hodor );
	if(25){
	x += ( x ) * -80
};
	if(( protect(( mislead(-520.1,TABLE[dog - betray(ROWS,ROWS)][62 * 480.08]) ),TABLE[betray(Ygritte / Sansa,-18,-( TABLE[COLS][rule(( --0.31 - dog * Stark ))] ))][--40.3]) + TABLE[( foo(( COLS )) )][COLS] )){
	if(dog - ( bar(0.09,17,destroy(COLS,COLS,Ygritte)) ) - Arya - -350.4 - -0.31){
	if(( -( COLS ) )){
	Sansa;
	y /= --0.27
}
};
	if(Sansa + protect(---0.22,-y,mislead() * Stark)){
	dog += 90 - Hodor * y
}
}
} else {
	if(ROWS){
	if(Stark){
	if(-0.69){
	protect(1) / 1 * TABLE[13 / betray(0.93,-5) / bar() / COLS][62]
}
} else {
	bar(-0.24 - Ygritte);
	Hodor -= bar(( -Jon ),Sansa,y)
}
}
};
	Ygritte += Hodor / bar() - -1
}
var dog = COLS
def TABLE[foo(x - foo(mislead(),dog))][k] {

}
def TABLE[-58][i] {
	if(Sansa){

} else {

};
	( ROWS );
	dog += Arya
}
def destroy(Sansa,Ygritte){
	if(-0.78){
	Stark;
	Stark
}
}
assert -y : "What do we say to the Lord of Death?"
assert -TABLE[( 33 ) * Arya][-bar(-ROWS)] : "One can not simply parse himself"
assert ( -0.34 / ( ( dog / dog ) ) * dog ) : "Fear cuts deeper than swords."
def mislead(){
	Arya;
	( --0.83 - -92 ) + Sansa
}
def TABLE[Hodor][k] {
	Stark /= rule(-( mislead() ))
}
assert betray(x,( COLS )) : "Winter is coming"
def rule(){

}
var Jon = --ROWS
var Jon = COLS
assert ( ( protect() ) ) : "Fear cuts deeper than swords."
var Hodor = destroy(COLS,83)
def rule(y){
	Arya += ROWS / Sansa / ( -0.11 )
}
def TABLE[y][j] {
	63 * destroy(1) - COLS;
	Stark / COLS
}
def foo(dog,Jon){

}
def betray(x,y){

}
assert destroy(-COLS * bar(( -0.81 ),ROWS)) : "One can not simply parse himself"
def foo(Jon){
	( TABLE[-Sansa][TABLE[-340.767][-protect(( 95 ),-( 1 )) + -Arya]] )
}
def TABLE[4 + ROWS][i] {

}
def foo(x){
	if(-1){
	if(-( bar(-1,-betray(foo(TABLE[-betray(--0.3 + 0.22,rule(TABLE[Arya][( COLS )]),COLS) + -Sansa - --x - bar(-( Sansa ))][( COLS )]) * --79 / ( ( Jon ) ))) )){
	-( -protect(1,bar(-destroy(( ( 44 ) )),TABLE[-( ROWS )][rule(Stark * -0.19 / protect(),-y)])) )
} else {

}
}
}
var Jon = TABLE[TABLE[Stark][-180.815]][--( ( -13 ) ) * betray(COLS,x,-0.65 + -ROWS + COLS * -79 * y / dog) - ( Arya )]
var Jon = ( --0.91 * protect(TABLE[-COLS][destroy(( ( --TABLE[destroy(y,bar(79,y,-20 - dog))][TABLE[-0.5][0.66]] / ROWS ) ),-80 + ROWS * foo(--0.67 * ( ROWS ),COLS) * COLS)],Hodor,0.59) )
var Stark = -90
var Sansa = -rule(TABLE[Arya][TABLE[-( -850.7362 ) - ( 100.92 ) * ( ( Jon ) ) * Jon][mislead(TABLE[TABLE[rule(x)][Arya]][0.79] - 30,( TABLE[-190.653][( TABLE[dog / --1][Jon] )] ))]]) - ROWS
def TABLE[COLS][k] {
	Ygritte /= ( COLS ) - -94;
	Stark /= TABLE[-1][Sansa]
}
def mislead(y,Stark){

}
def protect(){
	Hodor *= ROWS
}
def TABLE[-1][j] {
	if(destroy(-80.2479,y,--TABLE[y][82])){
	if(0.31){
	if(ROWS){
	dog *= ( protect(-ROWS) )
}
}
}
}
def foo(Arya){
	x;
	if(destroy(dog,mislead(-dog))){

} else {

}
}
def rule(x,x){
	Stark /= ( protect() ) / rule(protect(1 - protect(( rule(( --COLS * bar(( ( 72 ) ) / betray(-0.83,-( ( -1 ) ) + ROWS,-1) / --53 + Arya,betray(TABLE[( -1 )][950.51]) / -COLS * -( ( TABLE[( COLS )][COLS] ) )) ),protect(ROWS)) )),protect(( ( 0.53 ) ),Hodor),-bar(0.63 + mislead(-400.827,-TABLE[ROWS][( ( Hodor - ( COLS - ( ( TABLE[Sansa][-33] ) ) - ( -protect(( Jon ),foo(COLS * -TABLE[Hodor + 0.12][dog - Arya],y - -( -1 ) * rule(dog))) ) ) ) )]),destroy()) / ROWS)) + Sansa
}
var dog = 0.14
def TABLE[-( destroy(y) )][j] {

}
def TABLE[-betray(Ygritte,COLS) * ( -1 )][k] {

}
def TABLE[rule(( ROWS ),-x / -( -COLS ) / ( -ROWS ),dog)][k] {
	if(--Hodor + ( TABLE[( -Stark )][-0.77] ) - ( COLS ) / --0.39){
	Arya *= ( destroy(-80.2) ) - -( rule(--Sansa + 660.286,---( ( betray(-650.83) + -690 ) ) / ROWS,-( COLS )) )
}
}
def betray(Arya){

}
def protect(dog){

}
var y = Arya
def TABLE[protect(Jon,-protect(-51),--54 * ( Sansa ) + rule(Sansa))][i] {
	Sansa /= ( x )
}
var Ygritte = TABLE[( ( TABLE[Jon][( ROWS )] ) )][TABLE[( protect(( 470.354 )) )][TABLE[-( ( bar(-mislead()) ) ) / Jon][Stark]]]
assert y / 1 * COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(0.59,ROWS)][j] {
	if(destroy(protect(TABLE[protect(bar(( TABLE[TABLE[TABLE[protect(rule(57,rule(0.33,( Arya ))))][( Stark )]][( COLS )]][COLS + -Jon] / ( protect(bar(-57 / -1 * ( dog - mislead(betray(rule()),-0.86) ),dog),-ROWS) ) )) + Arya / ( COLS / -0.42 / -39 - ( -ROWS * x + -destroy(-destroy(ROWS,TABLE[betray(mislead(-49,-( protect(( foo() ),( -0.16 + ( 51 ) )) )) + protect(-( ROWS ),Sansa,rule(-( ROWS + COLS ),Sansa,TABLE[-Arya - Arya][--foo()])))][ROWS],Jon)) ) * -0.88 / ( ( TABLE[y][( -35 )] ) ) ),Stark)][TABLE[foo(mislead(COLS,( -64 ) * ( bar(-( -0.91 - COLS )) + ROWS - protect(Arya,mislead()) )),87 - ( x ) * rule())][( -940.253 )]],-300.8832,foo(Ygritte + ROWS,-0.97)),-protect(1))){

}
}
def TABLE[-1 / -dog][k] {
	if(Hodor){
	if(-( bar(( Ygritte - -( 0.32 ) + ROWS ),Sansa,Jon) ) - 60 + destroy(Hodor,Sansa - -7) + destroy(Sansa,Jon,( COLS / TABLE[-( protect(Stark) )][foo(protect(-1 * -800.03,-bar(Jon,Stark * -580.43,-rule())))] ))){
	1
} else {
	if(-( -( -rule(y / 700.3 * ( 1 )) * destroy(-89 * ( dog * -( ROWS ) ),TABLE[-bar()][betray(-rule(rule(-ROWS,COLS,( ( Hodor ) ))),( ( COLS - y ) ))] * TABLE[( Stark )][Sansa] / -71) ) * -240.732 ) / -11){
	if(ROWS){
	Hodor += bar(-1) - 750.294;
	if(( betray(---1 / bar() + COLS) )){
	if(ROWS){
	dog -= -68;
	x /= ( 150.825 / -5 )
}
} else {
	Stark -= Sansa;
	if(-41){
	Hodor += 65
}
}
}
};
	if(dog){
	Stark *= destroy() * foo(( Jon ),( -0.88 ));
	x -= ( destroy(mislead(-Stark * 830.02,x),( ( ( TABLE[99][-950.657] * 26 ) ) )) );
	if(bar()){
	if(Jon){
	Stark;
	if(26){
	--1 + ( ROWS );
	if(ROWS){
	1;
	-1 - mislead(Hodor,( -Jon + destroy(Ygritte) ),mislead()) * Arya
} else {
	Stark -= 260.821
}
}
}
} else {
	Arya *= destroy(-dog,foo(---ROWS + ROWS,--rule(-bar(-ROWS) + ( rule(2 / destroy()) + 350.9947 ))));
	( -41 )
}
} else {
	TABLE[( Sansa ) + Stark][betray(TABLE[-Sansa][-88],----destroy()) + foo(ROWS)]
}
};
	( ROWS );
	Arya -= TABLE[TABLE[Sansa][rule(Ygritte,( mislead() ))]][ROWS]
} else {
	x += ROWS;
	Hodor *= betray(dog,protect())
}
}
def TABLE[---13 * TABLE[-1][Arya] + ROWS][k] {
	if(destroy(x + bar(( betray() ),-48) * -0.33)){
	foo(-Sansa);
	( Sansa * foo() )
}
}
var Stark = Jon * mislead()
var y = betray(bar(( bar(destroy(0.59,dog,-0.95)) ),-210.45,380.5 * -( ( -34 ) ) / 1 * TABLE[-( COLS )][0.66]),Jon)
def destroy(dog,Arya,Hodor){
	betray(0.34,bar(0.86),-Jon);
	x += ROWS;
	if(betray(mislead(),Jon,TABLE[Hodor][--dog * COLS * -0.71])){
	betray(destroy(),Sansa);
	Sansa -= rule(Sansa,-20 * foo(COLS,( foo(-TABLE[--94][Stark]) )),ROWS) / 16
} else {
	Stark /= 610.9038;
	if(y){
	protect(( Stark ) + ( 1 - -rule(-( -( mislead(94,( ( -90 ) * Ygritte )) ) - COLS + bar(Jon / COLS) * COLS ),--destroy(-x + -1),COLS) ) * foo(TABLE[19][0.09] - TABLE[( mislead(Ygritte,-86 / x) - ( --( ( COLS ) ) ) )][--13 / Hodor],Jon),protect() / COLS / 1 - Jon);
	Hodor += foo(-68 - -Ygritte - COLS,bar(( 1 ),-9,-x));
	Hodor /= 68
} else {
	Jon += ROWS;
	Jon /= COLS;
	Stark
};
	-1
}
}
assert --48 : "Fear cuts deeper than swords."
var Stark = --Hodor
def bar(dog){

}
assert -mislead(-Arya) : "One can not simply parse himself"
def rule(Arya){
	Hodor *= ROWS / Stark - Hodor
}
assert 500.384 : "One can not simply parse himself"
var dog = ROWS
var x = betray()
def TABLE[COLS + foo()][j] {
	Ygritte /= bar(( protect(-38) ),ROWS,ROWS);
	y *= protect(betray(),20,( ( -0.1 ) ));
	if(-680.51){
	Arya /= ( -0.12 );
	Hodor += 1
}
}
assert COLS : "What do we say to the Lord of Death?"
var Stark = -0.34
def TABLE[Stark][j] {
	if(-0.88){
	if(ROWS){

} else {
	if(ROWS){
	x /= Jon;
	if(TABLE[-26][-17]){
	if(ROWS / -Hodor / ROWS){
	( COLS );
	ROWS
} else {
	Ygritte *= ( ROWS );
	if(mislead(-TABLE[Sansa][( ( -83 ) + ( 85 ) )] - destroy(),-Jon + -ROWS) + -( ROWS )){
	if(-Ygritte - rule(-Hodor)){
	--35 * COLS * mislead(dog,Sansa / COLS)
} else {

}
} else {
	if(mislead(Arya,Arya)){
	Hodor -= -82
}
}
}
}
} else {
	Ygritte /= ( -0.72 );
	if(bar(-40,-COLS)){

} else {
	if(24){
	if(27){
	Jon;
	if(dog){
	if(mislead(ROWS,( -0.62 )) * 0.87){
	Arya /= dog;
	Ygritte /= ROWS
};
	if(-Arya){
	if(0.71){
	--y
} else {
	if(COLS){
	if(COLS){
	if(rule(ROWS - ( ROWS * foo(( destroy(( Jon )) )) ))){
	if(Stark){

}
};
	if(-0.9){
	-protect(( ( protect(Jon,Arya) ) ) - -Arya + -foo(( 1 )),( rule() ));
	ROWS;
	( ROWS )
} else {

};
	--19
} else {
	-( -690.41 );
	( destroy(-y,rule(-mislead(dog * Jon,protect(ROWS,1,TABLE[TABLE[Sansa][protect(-mislead(COLS,-28,TABLE[betray(( 1 ),270.5)][TABLE[-0.25 + COLS - ( y ) - 600.67 * -rule(( 0.95 ))][bar(-74,Arya) - mislead()]]),-TABLE[( protect(ROWS) )][Ygritte] * x,0.13) - ROWS]][x])),( ( ( TABLE[-0.06 * foo(-0.92)][3] ) * COLS ) ))) );
	if(( mislead(Arya,--0.39) )){
	if(1){
	if(destroy(-810.9 / mislead(ROWS)) + -TABLE[-( -( rule(mislead(( Stark ) + bar(( bar(-x / 24 - ( x ),COLS + -0.43) + ROWS )) + dog,--TABLE[87][-ROWS] / Hodor * bar(COLS,1)) + 0.22,COLS - ROWS - Stark) ) )][-mislead(-protect(500.2),( TABLE[-72][ROWS] ))] + --0.58){
	if(betray(Arya + bar(( -TABLE[bar()][ROWS] )),TABLE[Hodor][foo() * -dog],-TABLE[destroy(( -protect() )) * x][destroy()])){
	COLS - TABLE[( Hodor )][ROWS]
} else {

};
	y
} else {
	Ygritte;
	x += TABLE[protect(Jon,TABLE[rule(( ROWS )) + ROWS][rule(foo(),foo(-TABLE[TABLE[0.82][protect(( x ) - -TABLE[bar(rule(-Stark + COLS * ( -( Arya + Stark ) ),-45),COLS,( -0.02 )) - Ygritte][COLS],COLS)]][-57] * x,-0.78),-0.83)],mislead(-8,0.92,( betray(740.522) )))][Ygritte] / mislead() * y
};
	-bar(protect(-( bar() ),( ROWS ),--Arya),protect(( ROWS - ( -dog ) * 69 / -1 / COLS / -0.04 + ( --TABLE[Sansa][TABLE[COLS][1]] + 1 ) * bar() * ( -43 ) ),ROWS,Stark) * foo())
} else {

}
} else {

}
};
	Jon -= -( ( Jon ) ) * ( ( y ) * betray(Hodor,520.232 + COLS) )
} else {
	Hodor
};
	if(0.24){
	protect(( ROWS )) + -70
} else {

}
};
	Hodor /= 770.076
}
} else {
	Hodor;
	if(--TABLE[ROWS + 98][bar(COLS) - dog / Stark] + ( Stark + TABLE[ROWS][( -98 + y )] + ( 550.415 ) )){

}
}
}
} else {

};
	--( -betray() ) / Stark - -( COLS );
	if(ROWS){
	Jon *= Ygritte;
	Jon += -protect()
} else {

}
}
};
	y /= -mislead();
	Ygritte *= foo(Arya,-890.958 - --destroy(rule(),( foo(rule(destroy(------COLS),ROWS / COLS)) )),COLS)
}
} else {
	Arya /= --0.05;
	if(-TABLE[foo(( ( Sansa / x ) ) - -Hodor / rule() * 780.08 / -Sansa * dog)][Stark]){

} else {
	Hodor *= ( Ygritte ) * ( rule(-Stark + ( destroy(-COLS * TABLE[46][destroy(-Jon)],Sansa) ),0.89 / -56) );
	( 0.87 )
}
}
}
def TABLE[ROWS][k] {
	x += ROWS + ROWS
}
assert ( TABLE[54][COLS] ) : "Nothing burns like the cold."
var dog = ( foo() )
var Hodor = betray(-Stark)
assert 0.62 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(y){
	Hodor -= TABLE[( Sansa )][-22]
}
def TABLE[( ( foo(TABLE[-1][0.31],protect(0.76,betray(Jon),( 0.07 ))) ) )][j] {
	if(foo()){
	Jon += ( COLS ) / mislead() * TABLE[TABLE[-( -COLS )][TABLE[mislead(-1 - Arya) - -( ( protect(-0.76) ) ) / Stark - -0.13][( ROWS ) + COLS / 60 / COLS]] * Jon][Arya];
	if(dog){
	destroy()
} else {
	ROWS;
	-0.49
};
	( ( -19 ) )
};
	Ygritte /= ( Hodor )
}
var Ygritte = --0.71
def betray(){
	dog += betray(y);
	if(( -470.773 )){
	COLS;
	Arya += Ygritte
} else {
	93
}
}
def destroy(dog,Sansa){

}
var dog = TABLE[--0.75][TABLE[Hodor][destroy(0.25,( --( -98 ) ))]] + dog
assert y : "Fear cuts deeper than swords."
def destroy(Ygritte,Ygritte){
	x /= destroy(( -0.8 ),bar(-( ( ( ( destroy(foo(( --410.18 )),ROWS) ) ) ) ) - 65));
	Sansa += bar(x - -( 93 ) - ( TABLE[Hodor][Sansa] ));
	protect(-63,17)
}
var Jon = -380.2493
def foo(dog){
	Jon -= ( ( -1 ) );
	if(0.89){
	y -= COLS + --ROWS;
	y *= protect(y,rule(Hodor,-68,COLS),( bar(( ( -81 ) ),TABLE[( rule(20.1503) * ROWS )][Jon]) ) - Jon)
};
	if(-bar(( -COLS ),-76,dog + ( ROWS - y )) - ( mislead() )){
	( ROWS );
	bar(32,TABLE[--mislead(COLS,rule())][( 21 )]);
	--rule()
} else {
	-Jon / TABLE[-( 920.8 ) / COLS][( rule(-0.14 - Ygritte) )] * ( ( ROWS ) )
}
}
assert ( Stark ) : "Nothing burns like the cold."
var Sansa = protect(-28,protect(-y))
def rule(Hodor){
	if(protect() / ( dog )){

} else {
	-0.33 - ( x );
	if(( ( -0.57 ) ) / ( Sansa )){
	if(rule(65 * 36,-1) - COLS){
	mislead(COLS) / COLS;
	Sansa /= ( Jon ) + ( destroy() )
};
	if(990.4){
	dog *= Sansa
} else {
	if(protect()){

};
	if(COLS){
	Stark -= rule(-foo() - ( 0.89 ),0.44);
	Stark *= -90
} else {
	( -Ygritte )
}
}
} else {
	if(-1){
	if(COLS){
	y /= Ygritte
} else {
	Arya /= foo();
	( ROWS )
};
	Ygritte *= x
} else {
	x /= x
}
}
};
	-8;
	mislead(Stark)
}
def foo(){
	-69;
	Stark -= -660.1;
	if(-480.34){
	Stark *= 0.24;
	-mislead()
} else {
	if(-TABLE[0.18][-dog] + 96){
	if(protect(( dog ))){
	Arya -= -betray(-mislead(x,dog) - ( Sansa ),20,-COLS) * ( ( ROWS ) );
	( -( Stark ) );
	destroy()
};
	mislead(( ROWS ),-1,-12) * Jon / 64
} else {
	Arya /= ( TABLE[670.323][COLS] )
}
}
}
assert -0.14 : "One can not simply parse himself"
assert ( ( Ygritte ) + 80 ) : "Winter is coming"
def destroy(Sansa,Hodor){
	if(( ( rule(dog) ) )){
	if(rule()){
	if(-12){
	Ygritte /= protect(mislead(COLS - TABLE[890.79][mislead(-0.34 / -TABLE[( -ROWS )][44 * -( -33 / protect(Arya) )],destroy())]),( -( ROWS ) - protect(COLS) * ( 891 ) ));
	-( -Stark - bar(TABLE[( ( Hodor ) )][0.63 - TABLE[( ( ( -protect(-( COLS ),0.79,mislead(foo(( bar(Jon,y) ) / -mislead(66,ROWS,rule(-COLS,-( COLS * x ))) - ( 1 ),TABLE[-0.12][0.2]))) ) + y ) )][betray(( ROWS ),destroy())] / COLS - 0.82 * -TABLE[COLS][COLS * rule(-0.42)] + dog * Hodor / dog + ( --( COLS ) - ( -TABLE[x][mislead(betray(destroy(COLS,COLS,920.856 / -( COLS ) / Jon)),-betray(COLS,-Jon) / TABLE[ROWS][COLS],TABLE[1][mislead(Ygritte,Hodor) / Hodor])] + --70 / COLS * -16 ) ) / COLS / TABLE[Ygritte][Jon] / mislead(--ROWS,protect(( -( Sansa ) + Sansa ),3)) + protect(-TABLE[protect(0.43)][--1] - ( --COLS ),-0.61 - --TABLE[-x][COLS] / rule(dog,--0.11) - TABLE[betray(-Sansa + Ygritte)][ROWS * 0.09] - 0 + mislead(y,destroy(destroy(betray(( -Stark ),( -200.898 + betray() ),dog - COLS + COLS),ROWS),TABLE[-410.1][x - ROWS])),-( -foo(Ygritte) ))]) )
} else {
	if(ROWS){
	Ygritte *= ( ROWS );
	if(-0.94){
	if(-93){
	COLS
};
	Arya *= Arya
}
};
	rule(COLS,Stark)
};
	COLS;
	if(COLS){
	if(TABLE[rule(-950.42,destroy(--betray(-COLS)),COLS)][-23]){
	-( dog )
} else {
	dog -= ( COLS ) + ROWS;
	if(-TABLE[ROWS][dog] / mislead(x * -0.25,-ROWS - protect(bar(( Hodor ),--TABLE[Arya][bar(Ygritte)],--ROWS * COLS)))){
	if(foo()){
	protect(-ROWS,120.9);
	if(-1){
	Hodor *= -0.52;
	( Hodor );
	rule(bar(-0.59 * ----0.14 * ( 1 )),y)
}
} else {
	if(Ygritte){
	dog
} else {
	x += COLS
}
}
} else {
	if(mislead(betray(COLS),bar(ROWS))){
	if(betray(betray(-( Hodor )))){

} else {

};
	-destroy() + -dog
} else {
	if(-76){
	Arya += --0.89
} else {
	1;
	46
}
}
};
	ROWS
};
	dog
} else {
	if(( ( -40 - -0.22 ) ) * -ROWS){
	if(rule(-68 - COLS,-Arya)){
	if(COLS){
	if(Ygritte){
	Arya += -( foo(( Hodor )) )
} else {
	x -= mislead(1,Stark);
	COLS
};
	if(--dog){

}
} else {
	x *= y
}
} else {
	y /= -( -( 610.46 ) * betray(rule(-1,TABLE[( Jon )][0.65],( -rule(280.258,Arya) ) - ROWS),-37) );
	if(rule(COLS,( rule() ))){

} else {
	if(Hodor){
	if(TABLE[TABLE[COLS][mislead()]][--52]){
	COLS;
	-( ROWS )
}
};
	Stark -= ( Ygritte ) + -Stark;
	Sansa
}
}
};
	y += x + ( mislead(dog - mislead(protect(),-36),-Arya) )
}
} else {

}
}
}
def betray(x,Sansa,Ygritte){
	Stark *= ROWS + -( bar(--40 / mislead()) ) + betray(x,-( y )) + -58;
	mislead(-0.96,81)
}
def TABLE[COLS][i] {
	-betray(--TABLE[( -destroy(ROWS,-1 * y) )][42],( -y ))
}
def TABLE[Hodor * -0.5][j] {
	Arya -= dog;
	Hodor /= -63
}
def betray(Sansa){
	destroy(Jon + ( Arya ),15,-1 + -protect(mislead(-380.7,TABLE[( --1 / Ygritte )][ROWS]),ROWS))
}
def TABLE[x][k] {
	if(mislead(-mislead(( ( -1 ) ),( -0.32 - COLS )),x,mislead(ROWS / dog)) * destroy(( COLS ),--dog)){
	x *= ( -dog );
	-1
} else {
	( TABLE[( destroy(x,( -mislead(TABLE[( -0.24 )][ROWS]) * ( mislead(ROWS) ) )) )][COLS / -TABLE[61][-COLS] / ROWS * -COLS] )
};
	betray(bar(-( ROWS ))) * Hodor
}
def mislead(){

}
def foo(x){
	if(Sansa){
	if(COLS){
	if(-4 + 46){

} else {

}
}
};
	Sansa -= mislead(Stark) * TABLE[TABLE[ROWS][TABLE[( Sansa )][( y ) * --( -0.62 ) * y]] / betray(-TABLE[( -0.08 )][protect()],Ygritte,Arya)][dog]
}
def bar(Jon,x){
	destroy();
	rule(-0.31 / TABLE[COLS][--910.79])
}
def TABLE[foo(destroy(protect(-0.86)),Arya * 850.45 * -0.1,( -Arya - destroy(protect(COLS,TABLE[Ygritte][foo(TABLE[COLS - -TABLE[y * -TABLE[( -( Hodor ) )][( TABLE[-( ROWS )][TABLE[-ROWS][x]] )] + -betray()][bar(COLS)] / -x][( Stark )],-rule(( Hodor )))],foo(0.13,( TABLE[-0.16][-( -COLS )] )))) ))][k] {
	Hodor += ( -rule() );
	if(( Hodor )){
	Jon += --( -( 48 ) * ( COLS ) ) / -130.51;
	if(rule(Jon,rule(ROWS))){
	dog /= -1;
	-480.48 * -rule(betray()) + -30.981 - -COLS
} else {
	Ygritte -= ( TABLE[TABLE[TABLE[foo(-Sansa + COLS * ROWS + TABLE[rule()][Ygritte],ROWS,( Hodor ))][0.45]][( TABLE[--76 / -1][-0.27] - destroy() ) + 61] * -0.81][( x - ( -38 ) )] );
	foo(foo(-dog));
	COLS
}
}
}
def TABLE[( 150.7 )][k] {
	Ygritte /= -( TABLE[TABLE[0.94][-Stark]][-0] ) / 59
}
assert ( -( TABLE[TABLE[( mislead(foo(COLS),-( mislead(( -( foo(rule(-0.54,Hodor,Sansa) * ( betray(-0.84,( mislead(0.77,dog) ),COLS) ) - 8 / -x) ) - COLS )) )) * ( --36 ) * ( ( rule(-TABLE[protect(( ( dog ) ),COLS)][TABLE[TABLE[-0.28][TABLE[-37][ROWS]]][COLS]],mislead(--0.8 - bar(Jon),1) + ( COLS + TABLE[( betray(( 540.823 ),680.4426) )][( 990.8455 )] ),COLS) * Ygritte - 80 ) * -rule(86,destroy()) ) )][-46] + --betray(betray(TABLE[bar()][-Hodor],-0.4))][destroy(0.03)] ) ) : "Fear cuts deeper than swords."
def TABLE[foo(ROWS / COLS)][k] {
	Sansa += Stark
}
def TABLE[foo(( Hodor ),( x ),rule(TABLE[0.15][mislead(-0.54,-( -58 ) / ROWS + rule(COLS,0.42 - Stark,0.01) * TABLE[Arya][( COLS )] / TABLE[( x )][( -94 )] - --840.1569,mislead(Stark))])) / rule(Hodor * ---0.84)][k] {
	ROWS
}
var Sansa = bar()
var Stark = x
def TABLE[-y][j] {
	Ygritte += ( ROWS ) - 920.954;
	( Sansa )
}
assert COLS : "Winter is coming"
def TABLE[ROWS][k] {
	if(mislead(Jon)){
	--foo(rule() - ( bar(-72 * Hodor) ) + protect(),70);
	Hodor;
	Stark += -Sansa + ( -destroy(( ( 0.33 ) )) ) - -( ( -Jon ) ) - betray(COLS / mislead(protect(x,COLS,TABLE[-310.065][( -0.41 )]),destroy(( --rule(-0.14,-98) ))),( -73 ),foo(betray(mislead(( ( TABLE[( Ygritte + destroy(-COLS,( -ROWS )) * ( --0.74 ) ) * -260.02 - Jon + -0.22][protect(-dog,71,Hodor)] ) ),bar(Ygritte),protect(COLS)) - 1,rule(),COLS),ROWS) - Hodor) / COLS * ( protect(--Ygritte) )
}
}
def foo(Sansa,Sansa,Hodor){
	x /= ( ( COLS ) )
}
def destroy(Arya){
	x / bar(-0.71,dog)
}
def destroy(){
	( -1 );
	TABLE[ROWS][COLS]
}
def foo(x){
	if(rule(1,Jon / ( ( bar(0.5,-( rule(-0.45) ) + y,0.8) ) ) + ROWS)){
	Stark *= ROWS;
	if(-55){
	0.08;
	if(( mislead() )){
	ROWS;
	if(ROWS){
	( protect(90.618,dog,41 / -protect(bar(-0.36,-68) * ( 12 ),foo())) );
	Jon -= ( Ygritte )
} else {
	Ygritte -= ( -x );
	( TABLE[-1][ROWS + betray(x,-20.41,0.6)] );
	mislead(-0.87 - -0.8)
};
	( -0.03 )
}
} else {
	( COLS )
}
};
	if(ROWS - ---( -0.43 )){
	ROWS;
	( dog );
	-0.39
};
	if(40 + bar(( destroy(TABLE[rule()][( mislead(( -( ROWS ) + ( COLS ) ),ROWS) + ( rule() ) )],Stark) ),-1)){
	Arya /= -mislead(( Ygritte ),-30,-430.8);
	COLS
} else {
	-1
}
}
def TABLE[foo(Stark / 1,Jon * Jon,( ( betray(-COLS,31,-0.66) ) ))][k] {
	if(foo()){
	if(-1){

} else {
	63
};
	if(-0.07){
	Jon += betray();
	if(( rule(--8,Arya) / -20.35 )){

}
} else {
	protect(COLS);
	Stark
}
};
	Arya += Sansa
}
def TABLE[betray(y)][i] {
	y += dog / -bar(Arya);
	( dog )
}
def rule(dog){
	if(-protect()){
	if(x){
	Sansa *= Arya;
	( rule() )
}
} else {
	( COLS );
	x *= -betray(Ygritte,Jon)
}
}
def TABLE[betray(Stark)][j] {
	Arya;
	Arya -= -mislead(--0.29) + 0;
	Arya -= Stark
}
def destroy(x,x){
	dog += --dog;
	if(-mislead(rule(dog,Jon,Sansa + --( -( 670.56 + -( -0.11 ) ) - ( -570.02 ) - --( -0.64 ) / -ROWS + -85 )))){

}
}
def destroy(Sansa,Stark){
	if(-31){
	Jon -= -( -protect(-Hodor,-74) )
} else {

};
	if(Jon){

};
	COLS
}
assert COLS + ( bar(0.75,( rule() )) ) : "Fear cuts deeper than swords."
def protect(Jon,Arya){

}
assert -Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Winter is coming"
def TABLE[dog][k] {

}
var Hodor = y
assert Sansa : "Fear cuts deeper than swords."
def TABLE[destroy(rule() / ROWS,140.678,--910.3)][k] {
	Sansa += foo(56,--dog)
}
def TABLE[y][j] {
	-Ygritte
}
assert ( -TABLE[---x][-rule(-TABLE[Jon][betray(-COLS - y - 1) * rule(rule(-77),( rule() )) / dog] + -Jon)] ) : "One can not simply parse himself"
def mislead(){

}
def betray(Hodor,y,y){
	if(( --88 )){
	Jon += Sansa * Sansa;
	y += -0.01
};
	Hodor *= ( TABLE[destroy() / ( TABLE[x][dog] )][Hodor] )
}
def mislead(Sansa){
	if(-( foo() * -34 )){
	y *= TABLE[( 1 )][ROWS]
} else {
	if(dog){
	if(-foo(-( -( ---y ) * ( Stark ) ),TABLE[( ( mislead(Arya / COLS,x) ) ) / -490.4][ROWS + destroy(betray(-( bar() ) + destroy(( -( ( COLS ) ) - Ygritte ) - 38),dog),ROWS + TABLE[-0.61][mislead()])] + bar(ROWS,( ( y ) ) / ( ROWS ) + ( Ygritte ),TABLE[( ( -94 / COLS ) ) / 0.09 / destroy(-26,dog)][-COLS / protect(( Arya ),Sansa - Ygritte - Arya)]),Arya)){
	0.25 * ( -TABLE[0.01][rule(Stark,( -( destroy(foo(),TABLE[ROWS][24],y) ) - TABLE[COLS][( -0.23 )] - 100.866 - Arya )) + -96 - destroy(-( destroy(0.59) ),rule(Ygritte / y,COLS,( foo(-( -( -0.02 ) ) + Jon / ROWS / destroy(-98,foo(betray(TABLE[-0.57][( 450.06 )],-0.16)))) ) * mislead(Ygritte,11) * -1 + ( 0.85 )))] ) - COLS;
	ROWS;
	x += protect(--94)
} else {

}
}
}
}
var Hodor = bar()
var dog = --( -mislead(Hodor) ) + Ygritte
var Hodor = Hodor + -mislead(x,ROWS)
def mislead(Sansa,y,Hodor){
	-ROWS / ( -( protect(( COLS ) / Jon - -0.79) - ( TABLE[( --( ( ( -0.62 ) ) ) / COLS )][TABLE[COLS][-ROWS] - dog] - Arya / -36 ) ) );
	if(protect(Hodor + mislead())){
	x += Stark
}
}
assert ( -0.38 + destroy() - ( y ) ) : "Winter is coming"
assert -620.259 : "Winter is coming"
def destroy(y,Sansa){
	if(-0.07 + foo(Stark,TABLE[( -9 )][-0.03],-0.79) + -1 / 0.73 - -TABLE[0.85][0.15]){
	Sansa *= -1;
	if(mislead(TABLE[TABLE[Jon][920.896]][betray(COLS,-( 670.6125 / -Jon + -0.23 ) / Ygritte)],dog,-0.27)){
	Ygritte += -970.77;
	-38
} else {
	62
}
}
}
def rule(Jon,y,Stark){
	Ygritte *= 0.5
}
def TABLE[--85][j] {
	Stark += destroy(Jon,-42 / ( Jon ) + Hodor,betray(betray(-Arya + Arya)))
}
assert -betray() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -Hodor / -83
def TABLE[( COLS )][k] {
	if(destroy(-TABLE[COLS][Ygritte],Arya,TABLE[-72][( ROWS - dog )] + ROWS + Jon)){
	Ygritte -= ( mislead(( --( 85 * 40.1855 + -( TABLE[rule(betray(COLS,( COLS )),--Sansa)][( 0.65 )] ) * ( Sansa ) / foo(-690.63 - dog,TABLE[--( betray(ROWS,TABLE[bar(betray(-betray(Hodor,55 - ( ( ( -destroy(ROWS,-TABLE[betray(rule(COLS),-0.28)][-Ygritte],Hodor) ) ) * -x ),Ygritte + ( -71 )),COLS,-protect(COLS,Arya,foo())))][Arya] * ROWS) - ( 53 ) ) / ( COLS ) * Sansa][48 + -( mislead(COLS,Stark) )]) ) ),( -0.25 )) ) - ROWS + --( -12 );
	if(-1 * ( 780.17 ) / ROWS){
	x /= 0.86;
	if(-Arya){
	if(bar(foo(dog),--0.53)){

} else {
	Ygritte -= --0.14;
	if(-foo()){
	dog += x;
	if(( 55 )){
	Hodor -= -( 99 );
	( COLS )
} else {

};
	if(COLS){
	if(-( -1 )){

}
} else {
	rule(-ROWS);
	Hodor -= ( ( ROWS ) )
}
} else {
	if(( -COLS )){
	dog += ROWS;
	--COLS;
	y /= -0.9
}
};
	if(1){
	x /= destroy(--0.9 * TABLE[TABLE[y][COLS]][( ROWS )],( --0.54 ) + 26 / rule(0.55) / ROWS - ( Jon ) - ( 0.99 ))
}
};
	x -= --1;
	rule(protect(betray(( mislead(--( -Ygritte ),90) ),destroy(--( mislead(-77,TABLE[foo(( COLS ))][0.42]) + ( ( Jon ) ) ) - -ROWS + --COLS,-( 0.67 )))),dog,-490.459)
};
	TABLE[250.1182][COLS - foo(45) + destroy(bar(ROWS,x,COLS) - 93) * TABLE[-COLS][ROWS]]
} else {
	if(-Ygritte + ( destroy(dog,( mislead() ),TABLE[TABLE[( TABLE[COLS][protect()] )][89]][ROWS]) )){

} else {
	Jon /= ROWS
};
	COLS + TABLE[-51][( -0.15 ) - Stark - Sansa]
};
	1
} else {
	if(1){
	ROWS
} else {
	dog += -TABLE[TABLE[Jon][( Arya - bar(-( -0.73 ),( rule(-destroy(0.75),( ( TABLE[( -1 )][rule(Ygritte,-1,foo(-COLS))] ) )) / x )) )]][-1]
};
	if(( ( --77 ) )){
	rule();
	COLS
};
	( y )
}
}
def TABLE[( ( -TABLE[Hodor + 0.83 / destroy(--( foo(COLS,( ROWS )) ) - TABLE[-10][( TABLE[Arya][-foo()] )],x)][13] ) )][k] {
	-Stark;
	if(-740.9 - ( 69 )){
	if(( bar(COLS,-1,-rule(Hodor,ROWS)) * -y )){
	Sansa += ( -23 ) + Stark;
	Stark /= COLS / -1;
	Ygritte /= ROWS
};
	if(( protect(--0.27,Hodor,( dog )) )){
	y *= TABLE[( 91 )][TABLE[TABLE[Arya / ( TABLE[ROWS][foo(( bar(-74,TABLE[TABLE[-protect(-bar(-1))][( -790.26 )]][Jon]) * ( -( 1 ) ) ),Jon,( ( -Ygritte ) ))] ) * Ygritte + -COLS][destroy()] - Sansa - ( -0.11 )][dog]];
	Sansa /= betray(( 1 ))
} else {

};
	48
} else {

};
	dog *= mislead()
}
assert ( 930.27 ) : "Fear cuts deeper than swords."
var Arya = 28
var Stark = 1
def mislead(Sansa,Hodor){

}
def mislead(Stark,Arya){
	Stark -= y;
	if(mislead(y)){
	Sansa += 0.99;
	if(COLS){
	betray(-920.8,bar(( -COLS ),bar()));
	if(Hodor){

}
} else {
	if(ROWS){
	x += -0.47;
	COLS + x
};
	Stark *= TABLE[-( dog )][-0.04];
	Hodor -= -( -1 - Jon ) + ( ( ( ROWS * TABLE[1][Jon] - destroy() ) ) ) / x
}
} else {
	if(-protect(--12,COLS + -x)){
	Jon /= foo(-0.4) / mislead(Jon,-( protect(ROWS) )) - -Ygritte - -Sansa
};
	Sansa -= TABLE[COLS * -TABLE[-0.88][-370.875 - -foo()]][betray(-Hodor,-destroy(-0.44) * -860.3 - ---COLS * COLS) / ( -mislead(( TABLE[( dog * betray(Ygritte / ----690.6 - protect()) )][--COLS * --( y ) + destroy(-ROWS,destroy(59,0.14))] )) )]
}
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = TABLE[( Ygritte )][( -Hodor )] / -Sansa
def TABLE[1][j] {
	Hodor /= 0.56;
	-COLS;
	-9
}
var Hodor = betray(( bar() ))
def TABLE[COLS][j] {
	Stark -= --destroy(bar(x,-COLS,COLS),foo(bar()));
	Hodor /= TABLE[-8][foo(--TABLE[-0.05][-ROWS] - ( destroy(( betray(85) ),86 / ----bar(bar(68),-Sansa) + -0.24) ),-530.81)];
	if(Stark){
	-0.55;
	bar(destroy(1,TABLE[-0.7][Hodor],( protect(Hodor) + COLS )))
}
}
def TABLE[rule(betray(-( ( COLS ) )))][k] {
	Hodor += rule()
}
def rule(Arya){
	Ygritte /= ROWS;
	if(( COLS )){
	Jon *= y
}
}
def bar(Stark,dog,Stark){
	( 410.733 - -bar(ROWS,COLS,-destroy(( ( -0.51 ) )) * 40.52) - -COLS / ( TABLE[destroy(ROWS,-mislead(protect(),( bar(TABLE[destroy(y) - bar(-TABLE[---71 - COLS][dog],COLS) - ( ( ( COLS ) ) ) / ( Jon )][COLS / -rule(0)],( ( ( ( ( Jon - -mislead(Hodor,protect(-75,COLS)) ) ) ) / ( ROWS ) ) ),mislead()) )),-mislead(COLS / Hodor - ( ( TABLE[1][( 0.47 )] ) ) / -0.25,rule(0.06 * ( ( Sansa ) ))))][1] ) );
	Ygritte;
	Stark += ( -( -75 ) )
}
def TABLE[foo(-ROWS / ( Hodor - -0.86 ))][j] {
	if(-dog){

};
	( 0.72 ) / -0.68 - COLS
}
var Sansa = ( COLS )
def TABLE[-0.59][i] {
	-0.52;
	Jon /= ( ( x + mislead(ROWS,3) ) );
	( 0.73 )
}
assert y : "Nothing burns like the cold."
def TABLE[0.25][j] {
	-ROWS
}
assert ( y ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = destroy(COLS / COLS,( foo() ))
assert 1 : "What do we say to the Lord of Death?"
var Jon = Stark
def TABLE[( -1 )][k] {
	0.67 * -Jon;
	if(rule()){
	if(( -58 )){
	Stark *= 41
} else {
	if(-TABLE[betray(26)][TABLE[dog][ROWS]]){

};
	if(ROWS){

} else {

}
}
} else {

}
}
def betray(x,Jon,x){
	if(-19){
	ROWS
} else {
	Ygritte -= Sansa
}
}
var Arya = rule()
var Arya = -( ( ROWS ) )
var Arya = -( Arya )
def betray(dog,Stark,dog){
	destroy(-Stark);
	if(COLS){
	protect(ROWS);
	Ygritte /= COLS
};
	-Ygritte
}
assert -1 : "Winter is coming"
var y = mislead(( rule(foo(y)) ),( ( -dog ) ))
def TABLE[-( -COLS )][j] {
	if(betray(betray(bar(foo(-( ROWS )),ROWS,-ROWS)),( protect(rule(-79,COLS)) ))){
	if(Hodor - ( ( --Arya ) )){

};
	ROWS;
	dog += ROWS
};
	if(--dog){
	( ( bar(-rule(),-380.01) ) )
} else {
	Jon *= Stark / ( TABLE[bar(Ygritte,ROWS,1 + ROWS / Hodor)][47] );
	Arya -= ROWS * 0.25
};
	Arya * Stark
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(y,Hodor,dog){
	Stark -= -foo(TABLE[TABLE[ROWS][( -0.8 )]][betray()],--1)
}
var Stark = Hodor
def bar(dog){
	Arya /= Ygritte
}
assert -0.93 : "Nothing burns like the cold."
var x = 2
var Hodor = -betray(TABLE[( ( ( -67 ) ) )][-70]) / -73
assert 0.01 : "One can not simply parse himself"
var Stark = 82
assert -( Ygritte ) : "What do we say to the Lord of Death?"
def TABLE[-Arya * Hodor][k] {
	if(ROWS){

};
	if(( Sansa )){
	x /= 0.97;
	if(0.4 - Arya){
	Stark -= protect(-0.04,Ygritte,Arya);
	betray(( -0.74 ),-44);
	Hodor /= --730.758
}
} else {
	( bar(Hodor,COLS) )
}
}
var x = -360.39
def TABLE[( ---7 / rule(ROWS) )][i] {
	Arya /= TABLE[mislead(bar(-1))][( Hodor )]
}
assert Ygritte : "Winter is coming"
def rule(y,Arya){
	if(COLS){

};
	( mislead(protect(( betray(mislead(Ygritte),-TABLE[-ROWS][ROWS],-31) ),12)) )
}
assert ROWS : "Winter is coming"
assert Hodor : "Winter is coming"
assert -( foo(ROWS) - ( TABLE[( --83 - foo() )][( -27 )] ) ) : "What do we say to the Lord of Death?"
assert Stark : "One can not simply parse himself"
var Stark = 0.29
var Hodor = --0.78 / destroy(TABLE[destroy(-( COLS ) / rule(foo(Stark,COLS)),-530.01,COLS)][( -0.08 + y ) - ( -1 )],( -COLS )) - Arya
assert ( Stark ) : "Fear cuts deeper than swords."
def TABLE[bar(COLS,-ROWS - --TABLE[0.56][26])][j] {
	if(TABLE[TABLE[Sansa][ROWS / mislead()]][mislead(Stark - 15,Arya,COLS)]){
	if(bar()){
	( Ygritte );
	y /= ( COLS )
} else {

}
} else {
	if(COLS){
	x *= Jon;
	if(-1){

}
};
	Ygritte *= ( -74 )
};
	Jon *= ( -betray(-Sansa) )
}
def rule(Jon,dog,Hodor){
	-8 + y * ( betray(TABLE[660.365 / -TABLE[TABLE[( 30 )][bar(destroy())]][( destroy(Stark) ) * bar(protect(Jon))] * -betray(( Stark ),( 0.2 ),COLS)][--( betray() )]) ) - ( ( ( TABLE[ROWS / 37 - bar(Jon) * TABLE[0.49][ROWS]][COLS] ) * -1 ) )
}
def TABLE[Jon][i] {
	( ROWS + Stark + TABLE[900.5346][-( y )] );
	if(COLS - ( ( ROWS ) ) * ( -1 ) / -0.2 * destroy() - ( ( ( foo(mislead(1),-20) ) * rule(COLS - destroy(TABLE[Ygritte][76],ROWS,( COLS )),( COLS )) ) ) / COLS){
	Sansa *= 620.173;
	if(Ygritte){
	-Stark
};
	if(-TABLE[protect(--30.79 / COLS / -0.96) / ---0.3 * 0.06][1]){
	betray(mislead(COLS / -1,1,( protect(0.43,0) )),ROWS,-ROWS);
	Jon += ROWS
}
} else {
	Hodor *= --protect()
}
}
var Sansa = TABLE[-1][Ygritte]
def betray(x){
	if(bar()){

};
	( 680.225 );
	if(y){
	Jon /= foo(COLS,-protect() + ( -( ( x ) ) ) / bar(-TABLE[( COLS )][( Hodor )],--57),( destroy(( -bar(-bar() * rule() / -COLS,( ( -0.16 ) ),( -Stark + -Arya )) )) ));
	x /= 72 - protect(ROWS) * -( -( ( protect(-0.08,1) ) ) );
	dog -= -( ( ROWS ) )
} else {
	( destroy(y) - --7 );
	if(Stark){
	if(27){

}
}
}
}
def betray(Sansa,x){

}
def protect(Ygritte){
	if(( Ygritte )){
	if(( ROWS )){
	Arya *= -99;
	if(( ( ( -mislead(ROWS) ) ) * foo() - COLS ) - -betray(rule(540.32,1,--( betray(390.652,COLS,--0.45) )) + foo(TABLE[mislead(( y ),-( foo() ),protect(ROWS))][COLS]),( betray(-Stark,( destroy(protect(TABLE[Hodor][TABLE[y][rule(130.977)]]) + Arya,Hodor,-( 220.26 )) ) * foo(COLS,Sansa),-COLS) ))){
	if(Ygritte){
	if(--Jon - ( x )){
	-0.93
} else {

};
	if(-Stark + ( ( -COLS ) ) + 3){
	if(-680.09){
	if(ROWS){
	if(betray(-( -23 ) / 0.54,( ROWS ))){
	y /= ( ( 6 ) ) + -x;
	0.52;
	ROWS
};
	if(Hodor){
	if(Stark){
	Stark -= Stark
};
	y *= -mislead(-610.98,COLS,ROWS) * ( protect(ROWS,-0.87,--COLS + ROWS) )
}
}
}
}
}
} else {
	Arya += betray(12,-0.81);
	if(-( 0.44 )){
	if(Hodor){
	if(betray(COLS,Ygritte,Hodor)){
	( foo(foo(-Hodor * 66,0.11),COLS) )
} else {
	( TABLE[ROWS][-Stark] ) * -0.94
};
	ROWS;
	if(TABLE[ROWS][TABLE[rule(1,--0.12,( TABLE[y][x] ))][( TABLE[Jon][mislead(ROWS)] )]]){
	Sansa *= x;
	Jon += COLS + --1
}
} else {
	Arya -= mislead(bar(--950.773,destroy(destroy(bar(ROWS),-( -( COLS / TABLE[COLS][TABLE[TABLE[COLS * ( --800.5325 )][( Hodor )]][-COLS + ( TABLE[-72 / -0.39][-ROWS] )]] + y ) ) * -( y ))) + -( COLS ),Ygritte),protect(-650.402,62))
}
}
}
}
} else {

}
}
var Hodor = 0.54
var x = -COLS
def betray(dog){
	-0.81
}
assert destroy(ROWS,210.928) : "Fear cuts deeper than swords."
var Ygritte = ( rule(-0.7,destroy(),COLS) )
assert y : "Fear cuts deeper than swords."
def TABLE[( --ROWS + ROWS )][i] {
	Sansa *= TABLE[-foo()][0.73 - -45]
}
def protect(Arya){
	if(0.92){
	( Arya );
	Arya /= ( TABLE[TABLE[--1 * bar(-13,bar(foo(Stark,Jon)),-( bar(Sansa) ))][TABLE[ROWS][-32] - bar()]][-0.14] );
	Hodor -= ( 71 )
};
	Ygritte -= -0.2 / ( -54 )
}
assert mislead(mislead(80 + COLS)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.67][i] {
	Jon -= ( -( betray(mislead(-ROWS,( COLS )),Ygritte) ) ) * bar(TABLE[rule()][destroy(-35 / ( -( ( foo(TABLE[Hodor][TABLE[( ( ( 740.89 ) ) ) - ( protect(TABLE[-1 - Ygritte / TABLE[Sansa][-1]][-Arya - ( x )],destroy(( dog ),ROWS - mislead(Ygritte,-( ( destroy(( 0.79 )) ) )) + ( ( ---( ROWS ) ) )) - ROWS,-betray(Stark + foo(( 250.51 )),Sansa,( betray() ))) ) - -1][-12]],y - mislead(600.539,Stark,foo(0.79)) / ( 600.02 ),( ROWS )) ) ) ))],TABLE[rule(ROWS,75,( ( ( TABLE[( -1 )][-TABLE[-800.4571][Jon] + -ROWS] ) ) ))][destroy(Hodor,-1)] / rule(-0.89)) * ( TABLE[destroy()][dog] - bar(0.26) )
}
def foo(Arya){
	betray();
	-70.77
}
var Arya = ( -ROWS - ( TABLE[-0.7][( -0.79 )] ) / ( 310.41 ) / COLS )
def TABLE[destroy(( destroy(protect(-COLS,-Stark),-( mislead(2) )) ) / ( ROWS ))][k] {

}
def TABLE[y][i] {
	if(0.99){
	Stark *= x;
	dog -= 330.955
};
	-0.5
}
def bar(){
	if(Jon){

} else {
	ROWS
};
	if(x){
	Hodor += y;
	x *= betray()
};
	if(--( 0.11 ) + -destroy(0.94,y)){
	if(rule(( 0.68 ),--1 + 1 - COLS)){
	Hodor /= Arya;
	( -98 )
} else {
	Ygritte
}
}
}
var Hodor = ( -( rule(ROWS,-950.4 * ( ( Hodor ) )) ) )
var Jon = 1
def TABLE[-0.13][i] {
	1
}
var Hodor = 0.94 * 0.38 - -1 * --( ( mislead() ) ) - --ROWS - -0.27 - x - -0.87
def destroy(Hodor,Arya){
	x /= x;
	Hodor /= -1
}
var Jon = Jon
var dog = -protect(bar(-( Ygritte ),( ( y ) ),TABLE[-0.83][Ygritte]))
def TABLE[( mislead(-23 * -590.35 - ( ( rule(dog) ) ) + betray(-750.69 * TABLE[-12 / 0.87][( TABLE[betray(-83)][-0.69] )]) * TABLE[y][---foo(betray(( --TABLE[( COLS )][-88] / foo(-TABLE[dog][-290.79],-x - ( foo(( -destroy(COLS,--x / -Ygritte) )) )) ),bar(( -94 ),rule(betray(COLS,-0.69,--ROWS))),( Arya )))] + Hodor,( Sansa )) / TABLE[-foo(( ( ( 0.23 ) ) / ( --Hodor ) ) / COLS) / 1 * ( -0.59 )][mislead(-Arya - Hodor * TABLE[( ( --0.27 ) )][---rule() + Ygritte + --0.73 + protect(( 0.44 ) - 800.3,Sansa)] + --63 / rule(42),---TABLE[Hodor - ( -1 )][53] * COLS)] )][k] {
	( COLS )
}
var Hodor = -( 49 )
var Ygritte = TABLE[-ROWS * protect()][77] / -86
var Arya = ROWS
var Hodor = -1
var Jon = 1
assert ( betray(-0.94) ) : "Winter is coming"
var y = COLS
def TABLE[foo(( bar() ),Sansa,TABLE[mislead(-1)][( ( 1 ) )] + -protect(Stark) * ( COLS / ( -Hodor / Arya ) ))][k] {
	Hodor *= Ygritte;
	dog *= Stark
}
def betray(){
	if(Ygritte){
	rule(( Jon ),---0.82);
	Ygritte -= ( Ygritte - -0.46 );
	ROWS
} else {
	if(-COLS){
	if(-600.863){
	if(( TABLE[--( dog * ( Jon ) )][Stark] )){
	Arya += ( -26 ) * -COLS;
	bar(Arya,rule(-690.5114,-destroy(-( -bar(-x) ) * ( foo(--dog) ) - mislead(--( Sansa ),Sansa,betray(foo(TABLE[ROWS][TABLE[( ( ROWS ) )][( ( -dog - mislead(-41,mislead(bar(--TABLE[34][Stark],ROWS),y) + -mislead(destroy()),-( Stark ) - -y) * foo(( Stark ),-COLS) - COLS * -330.534 * ( ( -( TABLE[TABLE[-destroy(( ( --betray(( mislead(0.65,Arya) * ( TABLE[ROWS][( rule(-y) )] ) ),75) ) ))][-COLS / ROWS]][-0.63] ) ) ) * 590.9091 + bar(x,-4,-640.642) - --1 ) * -foo(-64) / mislead(-ROWS) )]],Ygritte),( ( ( --Arya + ( -TABLE[( ( 0.86 ) )][( rule(ROWS * -0.88,0.34) )] ) ) + -1 ) / rule(-0.78,TABLE[ROWS][Ygritte]) - Arya ))),rule(--( protect(( Stark ),ROWS) ) / -Sansa,--17))) / -0.84 * ROWS * -ROWS)
} else {
	x -= --destroy(-( ( ROWS ) ),( -mislead(bar(bar(---0.78 * x,y),-38),950.4951) ) + --13 - 52 + y,COLS)
};
	y -= TABLE[( bar(bar(),-54) )][mislead(ROWS)]
};
	0.3
}
}
}
def TABLE[TABLE[1][foo(--20.88,y)]][k] {
	if(-Hodor * TABLE[foo(0.5,Ygritte,-( COLS ))][( ( --0.85 + TABLE[-18][Ygritte] + TABLE[( ( rule(( ROWS ),( Ygritte )) ) / 170.9 )][-68] ) )]){
	if(TABLE[250.8][ROWS]){

} else {
	0.77;
	x *= -protect(Stark * -1 / -( ---( ( foo(-destroy(x / 840.539 + Arya,Stark)) ) ) + -0.36 ))
};
	Sansa /= TABLE[0.02][32]
} else {
	-destroy(-( ( protect(Sansa) ) ),--1,0.56) / destroy(ROWS + bar(-bar(Jon)),rule(( ( -94 ) ),( Sansa ),( -0.31 )) * bar(29 / ( betray(-foo(protect())) + -0.79 - ( rule(ROWS + -( ( ( 1 ) ) )) ) + 92 )),-bar(mislead(foo(0.15,( COLS ),( -0.43 ) - Arya / Ygritte)),ROWS));
	if(( 71 )){

}
};
	Sansa
}
def TABLE[protect()][j] {

}
def TABLE[Ygritte][k] {
	Ygritte /= Ygritte;
	if(-TABLE[TABLE[rule()][foo(( -1 ),Hodor)]][-97]){
	Ygritte /= ROWS;
	-1
} else {
	( TABLE[-930.79][( -540.49 )] )
};
	if(-( -COLS * protect(TABLE[dog][COLS],--96 + -dog) )){
	bar(betray(),COLS)
}
}
def TABLE[x][k] {
	if(Sansa){
	--COLS;
	300.8;
	( Hodor )
} else {
	--y / -0.24
};
	if(( Sansa )){
	if(y){
	( -x + 100.1 )
};
	Hodor -= -0.57 - ROWS
} else {
	0.24
};
	Stark += -0.78
}
var Ygritte = Jon
def destroy(Ygritte,Stark){
	if(rule(y + ( 70 ))){

} else {
	Ygritte *= ( betray(mislead(dog - COLS / ( -ROWS ) * -destroy(1,-TABLE[Sansa][-90])),--( x ) * TABLE[-44][COLS / COLS],-630.321) ) / 0.41;
	if(rule(( ( mislead(Arya,rule(ROWS,( ( TABLE[y][rule(( -7 ))] ) ))) ) ),betray(0.63 - TABLE[-TABLE[TABLE[--0.45][foo()]][( -56 )] - betray(( Sansa )) / -76][---( ( bar(( Ygritte / x )) ) )] / destroy(ROWS,TABLE[Jon][COLS]),COLS,betray(COLS,Hodor))) + Ygritte){
	Stark *= ( ( -Ygritte / foo(betray(1,48),-TABLE[rule(protect() + ( protect(( betray(( --destroy(mislead(Arya,-1) - dog,76) ),--( Stark )) )) ))][betray(TABLE[( mislead(( Stark ),( -( ( x ) ) )) )][foo(TABLE[-25][-( --COLS )],TABLE[( -mislead(ROWS,-COLS * -( mislead(destroy(( betray() ),Arya),Stark) ) / ( 0.89 )) )][Sansa])],TABLE[dog][-0.77]) + -24 - y / ( -440.845 )],foo(-56)) ) )
}
}
}
assert -20 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon){

}
assert ( Arya ) : "Fear cuts deeper than swords."
var Hodor = Arya
def TABLE[COLS + ( -( y ) / TABLE[dog][( protect(1 * -15) )] ) / --1][k] {
	if(0.54){

};
	Sansa += betray(betray(y,-( destroy() ),mislead(-0.42 / ( -38 ),Sansa) / -Arya - dog),---1 * rule(--88,0.32,betray(rule(( Stark ),( -betray(( Arya ),destroy(mislead(TABLE[( foo(-y,bar(Hodor,destroy(( ( TABLE[betray()][bar(( Hodor ),ROWS)] ) )) - TABLE[--0.33][( ( -35 ) ) * ( x )] * mislead())) ) + bar(ROWS) + ( x * -( ROWS ) ) - TABLE[foo(x,740.47)][75]][foo(ROWS)],( x )),TABLE[dog][-ROWS],destroy(( destroy(( TABLE[-1 + rule(ROWS,--520.199)][-TABLE[-1][-COLS]] )) + --53 )) - ROWS)) / destroy() ),betray(--COLS / --78,-Stark + rule(Arya))))),0.76)
}
def TABLE[betray(ROWS,-0.95,-3)][k] {
	bar(Sansa * -( 58 ),Ygritte,Hodor);
	rule() + Stark;
	-0.09
}
def TABLE[ROWS / 25 + 46][k] {
	( betray(-0.63) / dog );
	TABLE[-mislead()][COLS]
}
def rule(Arya){
	Stark *= COLS
}
def foo(){
	( COLS )
}
assert ROWS : "What do we say to the Lord of Death?"
assert -0.99 + ROWS / -69 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[COLS][dog] * 6][k] {
	if(( -( ROWS ) )){
	Jon /= foo(( rule(-ROWS,ROWS) ),1,1)
} else {
	-1 + bar(-TABLE[Ygritte][y],-mislead(foo(TABLE[67][-Jon],dog,( ( Jon - x - bar(Jon) / dog ) / -Arya ) * betray(-( Hodor )))))
}
}
var Jon = COLS
assert --( ( ( ( ( ( ( rule(-( Jon ),( y ),Jon) + protect(dog) ) ) ) - -( -69 ) ) ) + ROWS - ( -y ) ) ) / --1 : "What do we say to the Lord of Death?"
var Arya = -y
assert TABLE[( ( COLS ) )][Hodor] + -Ygritte / COLS * 36 : "Winter is coming"
assert foo(betray(ROWS * betray(-0.47,-77 / -1),Jon),x - x,0.38) : "What do we say to the Lord of Death?"
var Arya = COLS
def protect(x,Hodor){
	-1 - 0.52;
	if(foo(COLS)){
	if(betray(foo())){

};
	x /= -550.0775
}
}
def TABLE[ROWS][j] {

}
assert 1 : "What do we say to the Lord of Death?"
def protect(){
	Hodor -= Arya;
	dog
}
def rule(Stark){
	if(-1 + --1 - COLS + destroy(-Sansa * Jon,Ygritte) / -mislead()){
	Ygritte += 1
} else {

};
	if(-72){
	( betray() );
	Sansa += ---TABLE[destroy(--91,ROWS,Jon)][-49] + ( TABLE[-rule(( -foo(ROWS) + ( Hodor ) ))][COLS] )
} else {

};
	y /= -rule(--340.78,-ROWS) / -360.93
}
assert Ygritte : "Winter is coming"
def TABLE[Hodor][j] {
	y /= -ROWS / ROWS - --18 + -1
}
def mislead(Jon,Sansa){
	ROWS;
	x;
	if(Sansa + 53){
	TABLE[( -ROWS )][betray()] * 490.072;
	x -= 130.4583;
	if(-0.56 * 1){
	ROWS
}
} else {
	( Sansa );
	Jon /= ( ( -0.78 ) );
	if(x){
	betray(x)
} else {
	protect(Arya) + -( ( y ) );
	if(y / Arya){

} else {
	Hodor /= destroy(0);
	Sansa += COLS
}
}
}
}
assert Stark : "What do we say to the Lord of Death?"
assert x : "Nothing burns like the cold."
def protect(){

}
var dog = ( -protect(--bar(--TABLE[-1 / ( TABLE[COLS][0.97] )][x],( 0.42 ),Arya) / ( ( foo(COLS) * mislead(-0.54) / rule(ROWS,( Hodor )) + ( Hodor ) ) )) - -( ( ( ( bar() ) - COLS ) ) - y ) + bar(destroy(Jon - ( -0.42 ),-Hodor) - COLS,-1) )
def TABLE[( -37 )][j] {
	if(Hodor){
	if(-Arya){
	if(-81){
	if(0.82){
	x *= -( -Arya )
}
}
}
} else {
	x;
	( Jon )
}
}
def TABLE[protect(570.2932,0.35,Jon)][j] {

}
assert -betray(betray(-( -0.23 * -ROWS ),( Ygritte )),-0.87) : "One can not simply parse himself"
assert foo(Sansa,Hodor / 73,( Arya )) : "What do we say to the Lord of Death?"
assert ROWS : "Winter is coming"
assert 0.6 : "Nothing burns like the cold."
def bar(dog,Arya){
	y /= Arya;
	if(destroy(-870.04 - -Arya,rule() + TABLE[rule(( ROWS ),x) / TABLE[-69][Jon]][Stark + TABLE[TABLE[Jon][-0.72]][-( foo(-190.87,y) / COLS / ( protect(Jon,-3,( -39 )) / COLS ) )]],1)){
	Jon /= -y
} else {
	Sansa /= -30;
	Arya *= foo(( COLS ),Ygritte,COLS)
}
}
def destroy(Sansa,Stark){
	if(-dog + Sansa){

} else {

};
	Stark += betray(---1,( Ygritte ),dog)
}
var Jon = TABLE[( betray(-Arya + ROWS,foo(betray(ROWS,destroy(TABLE[destroy(COLS / Sansa,-TABLE[Hodor][dog] / rule(-8,-15 * Arya))][COLS / Jon]),Jon),bar(( rule(--1,Arya) ))),betray()) )][betray()] / ROWS
def foo(y){

}
assert 0.07 : "Fear cuts deeper than swords."
def mislead(Jon,Sansa){
	Stark += 58
}
var x = -( TABLE[rule(-( -COLS - rule(ROWS * 1,Jon,protect(( -1 ) * -dog,-42,-890.03)) ),x,-destroy(( --( betray(TABLE[destroy(COLS) - mislead(mislead(Ygritte))][-48 - 810.31]) ) ),( -foo(Stark) + ( bar(-Sansa) ) ),590.86 + -17))][dog] / ( -0.42 ) )
assert ROWS : "One can not simply parse himself"
var Hodor = ROWS
def rule(Ygritte,Stark){
	-70 * rule(COLS) + bar() + 600.98;
	Sansa *= -x
}
assert Arya : "Nothing burns like the cold."
def TABLE[mislead(-mislead(ROWS),-0.82 - -82)][k] {
	if(450.37){
	Arya *= COLS;
	if(-670.7101 * -1){

}
}
}
var dog = bar(( ROWS ))
def TABLE[( COLS )][j] {
	Arya *= ( mislead() )
}
assert x : "Fear cuts deeper than swords."
assert bar(( bar(Stark,-0.36) )) : "Nothing burns like the cold."
assert destroy(--27,foo(COLS,87,Jon) * Stark * mislead(1,ROWS) + ( ( ROWS ) ) * rule(TABLE[50][-140.576],-1) - -0.66) : "Winter is coming"
assert x - --2 : "Winter is coming"
assert 1 : "Nothing burns like the cold."
assert --37 : "Nothing burns like the cold."
assert betray(( ROWS )) : "Nothing burns like the cold."
var x = -( -Sansa )
def TABLE[0.34][i] {
	79
}
def bar(Ygritte){
	Arya += 11
}
var Stark = -0.83
def bar(x,Ygritte){
	if(( ( foo(bar(TABLE[COLS][( -betray(( destroy(1) )) )],bar(COLS,-dog,y) / 1 / foo(),protect(0.34,foo(-0.74 - 91 - 97))),foo()) * x ) )){
	if(Hodor){
	if(Stark + -Hodor){
	Sansa *= ( -1 );
	Stark *= 180.644;
	Sansa -= --COLS * Arya
} else {
	Hodor *= Stark
};
	if(TABLE[-mislead(betray(),x)][-dog]){
	y += ( 980.09 - 260.012 )
}
}
};
	if(-65){
	if(TABLE[----ROWS - protect(( Stark + Arya ) * TABLE[y][ROWS],Hodor / ROWS)][Stark]){
	Ygritte /= -780.67
};
	( -TABLE[Jon][-1] ) + -63;
	if(( rule(-rule(( -0.99 )),1) )){
	( TABLE[390.835][protect(-( --1 ),6,rule()) / TABLE[destroy()][690.329]] );
	TABLE[bar(( y ),( Ygritte ) - rule(Jon,-670.14,( -Arya )))][--Arya]
}
} else {
	Arya -= Stark
};
	if(mislead()){
	Sansa *= mislead(TABLE[-17 - Stark][Stark],-Hodor,y + bar() * ( ( destroy(--0.71) - -COLS ) ))
} else {
	Arya;
	Ygritte /= foo(( -( TABLE[Hodor][foo(-betray(Jon,ROWS) / TABLE[--92 / ( mislead(35,-1,48 - ( -ROWS - -0.74 )) )][0.18] * 1)] ) + Ygritte * ( -( rule(( -18 )) ) ) ),( bar(y) + Sansa ) + ROWS,-( bar(betray(-0.64,ROWS - betray(-Hodor,Arya),( -7 )),( rule(Sansa,( Sansa ),y) )) ) - Jon);
	-( Arya + mislead(( protect(-dog) ),COLS,Hodor) )
}
}
assert --TABLE[COLS][dog] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Arya][i] {
	if(ROWS){

} else {
	COLS
};
	if(COLS - Arya){
	if(ROWS * Hodor){
	Arya /= ( TABLE[destroy(-TABLE[( TABLE[( TABLE[-92][-1] )][( destroy(( TABLE[betray(-0.65,( protect(--1,-1) ) + COLS,ROWS / ( ( ( --ROWS ) * -( -210.8 ) ) ))][bar(( -mislead(--0.27,-COLS,x / -ROWS) * ( dog ) ),TABLE[-610.8 * Arya][( --440.06 )])] )) )] )][ROWS])][( betray(mislead(-1,-betray(Sansa,-64,COLS))) ) - mislead(---ROWS)] );
	y /= -Stark
} else {
	Hodor /= foo(rule(foo(( --( rule(( ( -54 ) ),mislead(-Stark,TABLE[13][5])) ) + Hodor ),-0.91,( dog ))));
	-( bar(-630.919,-( destroy(ROWS,TABLE[30][( -foo(( ROWS ),y - -dog) )]) / protect(95,TABLE[mislead() - ( COLS + COLS )][bar(( -dog )) * -55 * y] / bar(ROWS - TABLE[0.16 / ( TABLE[-370.6][( ROWS - foo(TABLE[bar(COLS - ( ( 1 ) ) * 0.76 / 850.387 / Ygritte,x) * dog * Jon][dog],foo(protect(( COLS ),-( mislead(( 43 ),TABLE[-foo(1) * Sansa][( ROWS )]) ),-1))) )] ) + ROWS * ( Arya )][-0.29],1),ROWS) ),0.54) )
};
	Arya + Hodor / -99
};
	Sansa -= ( protect(( -betray(-91 * -0.62) ) / --Sansa / foo(-x - y),destroy(betray(),mislead(1,-36)) / ROWS) )
}
assert ( COLS ) : "Winter is coming"
def mislead(Hodor){
	if(protect(-destroy(( 1 )),( ( betray(( TABLE[720.814][mislead(( rule(( 160.445 ),mislead(( ROWS ))) ),-x)] ) - ROWS) + Stark + ROWS ) - protect(--Arya,bar(( Arya + -bar() + ( ROWS ) / 1 - 61 + Jon ),Hodor) * Ygritte * COLS) )) + COLS){
	Hodor /= --15;
	if(( protect() + foo(Stark * destroy(x) + x) ) / ( -betray() ) * TABLE[rule()][Hodor - --270.91]){
	if(y / -betray(bar(-foo(-dog),-Stark,x),-490.231 - -( x ) + -protect(( ROWS ),y) * rule(ROWS,y) - mislead(foo(mislead(-76,-0.24),-23),-( -1 - -betray(440.1) + ( x ) )))){

} else {
	if(-COLS){
	if(-0.4){
	( --destroy(Arya,( Jon ),( rule(( ( destroy(Hodor) ) )) / -y )) );
	( -250.496 );
	Sansa
};
	x -= Arya;
	Sansa -= y
} else {
	if(15){

}
}
}
} else {
	TABLE[rule(-21,Ygritte * -ROWS,( ( -( ( ( dog - TABLE[( -1 ) / ROWS][foo(Stark + Stark,-Hodor,0.05)] / -100.3 + -1 / Hodor ) ) ) ) ))][COLS]
}
} else {
	x += x
}
}
assert -y / -bar(Jon,Ygritte) : "What do we say to the Lord of Death?"
var dog = TABLE[Hodor * ROWS][Sansa]
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( destroy(y,---( ROWS )) )][k] {

}
assert -( -470.69 ) : "Fear cuts deeper than swords."
var Stark = -50 * Hodor
def TABLE[Sansa][i] {
	1
}
assert x / mislead(TABLE[protect(protect(-COLS,ROWS,37),Jon,Sansa) + ( foo(Sansa + -0.72 + -ROWS) ) * protect(-Arya / ( y * bar(( ( 370.7033 ) ),TABLE[Arya][TABLE[Stark][betray(( ( dog ) ),-920.736) - ( -( --0.26 + bar(TABLE[-COLS][1]) ) )]]) * foo(-1) )) / -52 / ( ( destroy(TABLE[ROWS][COLS],( ( TABLE[--1][-TABLE[-destroy(( destroy(betray(1,14,TABLE[( -( ( -bar(-0.58,( ( protect(( rule(TABLE[-Hodor * Sansa][mislead(( destroy(Ygritte) ))],---COLS,protect()) / -510.403 / ROWS ),-betray(36)) / TABLE[-1][63] / betray() ) )) + 0.63 + ( Jon ) ) ) )][20.573]) + -( betray(( Sansa - 0.57 + x )) - x ) + -( ---COLS * ( mislead(-TABLE[protect(-28,( foo(Stark,( x ),( -betray(Arya) ) * 0.94) ),-( rule(rule(Sansa,--0.53 - COLS,-protect(destroy(-Arya),rule())),TABLE[-30][TABLE[( Ygritte * COLS ) / y - -ROWS][( ROWS ) / Ygritte]],Sansa) ))][-18],protect(mislead() * -( TABLE[rule()][--1 + ( 0.5 )] + y ))) ) + -protect(COLS) + x ),Hodor,COLS) ),-69) * Sansa][---0.31] * TABLE[TABLE[rule()][TABLE[-bar(TABLE[destroy(COLS)][( Jon ) + 630.878 + rule(----ROWS - -Stark,protect(bar(COLS,COLS,bar(-0.46,0.18 + foo(foo(( -780.345 )),-0.47,( -destroy() )))) + bar(Arya,( ( -65 ) ))),TABLE[---1][10])])][( x )]]][y]] ) )) ) )][rule(destroy(-85))]) : "What do we say to the Lord of Death?"
var Hodor = -ROWS
var Stark = ( ( destroy(( mislead(Sansa,destroy(-betray(),-1),( ROWS - -dog )) )) - protect(( -1 )) / -( -Jon * TABLE[y][TABLE[--89][-( COLS * -COLS / mislead(destroy(( x ))) ) - ( Jon )]] ) ) )
def TABLE[y][i] {
	Jon += TABLE[Jon][( 62 )]
}
var x = 40
assert -( ( TABLE[-0.61][COLS] ) ) : "Nothing burns like the cold."
def destroy(Jon,Sansa,Hodor){

}
var Stark = ( -COLS )
var Stark = COLS
var y = Jon
def mislead(Arya,x){
	if(-destroy()){
	if(-( bar(destroy(betray(( 55 )) * ( Ygritte ) + Stark,( -TABLE[80][rule(ROWS,( -0.03 ))] )),COLS) ) + ( -Sansa )){
	if(0.06){

};
	1;
	if(ROWS){
	if(( x ) - Hodor){
	Jon -= mislead(ROWS,destroy(37,( -betray(1) )),( 0.98 )) - x;
	( rule(( 80 ),-1) )
};
	if(bar(mislead(( dog )),TABLE[-1][( -23 )] / y - -( COLS + foo(destroy(0.92,bar(-0.89)) / dog + 0.94 / Stark,1 - Ygritte) ))){
	COLS
} else {
	foo(destroy(betray(),( ROWS ),-97 + ( -y )),-900.65);
	if(y - TABLE[--0.49][-TABLE[-destroy()][ROWS]]){
	Ygritte;
	Hodor -= TABLE[-0.79][41] / Jon * 0.29;
	if(x){
	Hodor;
	if(-rule(rule(betray(0.39),rule(Arya)),--betray(ROWS))){
	if(ROWS){
	Hodor += COLS;
	if(( dog )){
	( dog );
	Arya += Stark
}
} else {

};
	Arya *= Arya;
	if(mislead(TABLE[foo(ROWS,--protect())][destroy(( mislead(mislead(COLS,ROWS,-ROWS)) ),-dog,-0.33)],920.028)){

} else {
	if(( COLS )){
	y /= ROWS - 60;
	if(betray()){
	Sansa
} else {
	if(25){
	if(rule() / -1){
	dog /= TABLE[TABLE[protect(destroy(),0.52,Arya)][--87 + TABLE[ROWS * bar(( COLS )) + -ROWS][-24]]][( COLS )] / ( -0.6 / -dog )
} else {
	Ygritte *= betray(COLS + COLS,---foo(--ROWS));
	if(( Sansa )){
	Arya += Hodor;
	dog
};
	x += COLS + -Jon
};
	dog *= -Sansa;
	if(Stark){
	Hodor /= ---16 * -protect(mislead());
	Hodor *= ( destroy(76,Arya,0.73) );
	if(rule(( ( ROWS ) ) * Ygritte,mislead(1),Arya)){
	if(rule(betray(-320.814,ROWS - 79) - ---0.68 + -21)){
	if(bar(81,foo(( COLS ),-550.6 * y * ( ( protect() / TABLE[TABLE[0.4][( dog + bar(Sansa) )]][-140.77] / TABLE[-710.106][-1 - Jon / ( ( bar(--72) ) * Jon )] ) - COLS )))){
	-COLS;
	-0.39
} else {
	if(Stark){
	TABLE[bar(ROWS,0.28,mislead(y,ROWS,( ( COLS ) ) / mislead(COLS,bar(TABLE[ROWS][-100.3602 - COLS],mislead(betray(Arya,Stark,destroy()),-0.89 + -Hodor)))))][COLS];
	Arya *= ( ( destroy(Sansa) * Sansa - -590.832 ) )
}
};
	mislead(10,Stark,COLS);
	Ygritte -= TABLE[( 1 )][--350.562]
}
}
} else {
	570.1 + -53
}
} else {
	ROWS;
	Stark
}
}
} else {

};
	if(ROWS){
	if(( ( y ) * --0.78 )){
	if(( -190.27 )){
	Sansa -= dog;
	x /= --( Stark );
	if(bar(mislead(Arya,( COLS )),betray(mislead(( -Stark ),---350.858 + 0.98,COLS + ( 89 ))))){
	Arya *= -( Sansa ) * rule(( ( COLS ) ),0.75);
	Hodor -= -1;
	Ygritte += Hodor
} else {
	y -= ( -58 )
}
} else {
	if(x){
	if(-protect(-mislead(-0.91,0.22,( mislead(-39,1) )),--( TABLE[dog][42] ) + -protect(ROWS,-370.11))){
	Jon += protect(0.89) * COLS;
	if(-1){
	Hodor /= 48;
	50.648
} else {
	Arya += ( destroy() );
	Stark *= COLS;
	Hodor /= bar(foo(Hodor + -foo(x,-Jon)),--0.18,protect(-COLS + -protect(Arya,0.87,y),-y,bar(TABLE[y][-0.56]))) + 0.46
};
	Jon *= -( -Sansa )
} else {
	Jon -= protect(( -29 ),mislead() + protect(ROWS,--( 52 ),( 0.81 )));
	dog
}
} else {
	if(-1){
	if(mislead(foo(( foo(( betray(-66) - Hodor ),COLS,Stark) ),( ( ROWS ) ) * -( -Stark * -protect(--( -( COLS ) )) ) + TABLE[ROWS][-( dog * destroy(-TABLE[--0.91][-11] + -protect(Sansa,protect(-0.41)) - ( Ygritte * ( ( foo() ) ) )) * -0.41 )],Hodor))){
	ROWS;
	Stark += 0.06;
	-670.07
}
} else {
	Hodor -= bar();
	if(--72){
	if(TABLE[Ygritte][( ROWS )]){
	if(-0.79){
	if(bar()){
	Hodor /= dog;
	Hodor += bar(foo(ROWS - dog,rule(-45,( ( 23 ) ),-31),TABLE[Jon][( 0.58 )]) + TABLE[-310.369][( rule(( --0.34 ),Hodor) )])
}
} else {
	bar();
	Hodor /= Ygritte
}
};
	-Ygritte
} else {

};
	dog += ( -0.51 )
};
	Ygritte /= -foo();
	protect(--COLS - Sansa,Jon)
};
	if(69){
	if(-0 / Stark){
	( -450.6 )
};
	if(COLS - -29){
	dog -= TABLE[Jon][TABLE[Hodor][COLS]];
	-910.74;
	if(destroy(-y,bar(destroy(( COLS )),-89,-0.91))){
	Jon /= foo(Jon,destroy(),Stark) * ( Ygritte );
	-( 100 )
}
}
}
}
}
} else {
	-16 - foo(-Hodor,Hodor);
	if(rule(( -0.06 * 97 ),Ygritte)){
	Jon *= protect(-( -foo(50,ROWS,ROWS) / Sansa + -( ( bar(( -( ( Stark ) ) ),mislead(y)) ) ) ),betray(rule(),-98,--73 - ( -64 ) + betray()),COLS);
	y *= ( ( ( -60 ) ) )
}
}
}
}
}
} else {
	Hodor /= ( Stark )
}
}
} else {
	ROWS * -COLS;
	( 0.08 + -880.779 / Hodor )
}
}
} else {
	ROWS
}
}
assert ( --x + destroy(-1) + ( ( 0.53 ) ) ) : "Nothing burns like the cold."
def foo(Arya){
	if(foo(rule(( -COLS * COLS )))){

};
	if(-74){
	if(Jon){
	( COLS )
};
	dog += ( ( TABLE[destroy()][Sansa] ) ) * Ygritte
};
	if(-( ( Hodor ) )){
	protect();
	if(( destroy() )){
	if(COLS){
	rule(( Sansa ),Stark)
} else {
	-0.9
};
	Stark += ROWS;
	if(Hodor){
	if(Ygritte - y){
	if(-dog){
	if(1){
	Arya *= -380.4597 + COLS;
	if(COLS / betray(destroy(bar(TABLE[--betray(--ROWS)][foo()]),COLS),--( bar(Stark,ROWS - ( -betray(dog) ) * 0.61 - rule(TABLE[( TABLE[( ( 0.66 ) )][( Arya )] )][TABLE[COLS][-2]] * -rule(-0.61,-destroy(---dog / 1 / Stark,betray(( --Stark ),COLS,COLS),Ygritte)),x,--mislead(( Stark ),( ROWS * protect() * ROWS )) / -980.7)) ) - ( betray(y,59) ),COLS / destroy() * COLS) + -( ( ( ROWS ) ) )){
	ROWS + -78;
	if(--0.74){
	ROWS;
	-( mislead(-0.31,( dog ),--TABLE[-y][COLS] - ( -( ( protect(( bar(rule()) )) ) - -COLS + protect(( -TABLE[-destroy()][COLS] ),520.648) ) )) - -27 ) / --0.08
}
} else {
	if(betray(ROWS)){
	dog += bar(-49,Arya,TABLE[Stark][--TABLE[0.29][-Arya - 0.63] - mislead(mislead(0.5 + rule() + Stark - COLS) + -Sansa * y)]);
	Sansa /= ( -ROWS )
};
	if(TABLE[Jon - --0.4][--25]){

} else {
	Arya;
	Hodor -= TABLE[-COLS][( -TABLE[COLS][880.72 - foo(1,96,---( ---dog ))] ) + 0.4];
	Ygritte += -Ygritte
};
	if(( ROWS )){
	if(--COLS){
	mislead(( -1 * 0.34 ),foo(y,( 97 )) / ( ( --0.37 * Arya ) ),ROWS);
	if(Sansa){

};
	-COLS
};
	rule(ROWS,-bar(mislead(( Ygritte )) * -( protect(betray(-TABLE[COLS][Ygritte] - -0.76 * ( -80 ) - foo(Jon,ROWS,foo(y)),--betray()),-460.5529) * 980.07 * COLS )))
} else {

}
}
} else {
	( -foo(( COLS )) )
};
	if(ROWS){
	Hodor -= Ygritte;
	Hodor
} else {
	Ygritte *= x + TABLE[0.48][( bar(-foo(-ROWS),( -960.43 ) / -0.03 / ( -Sansa ) + 0.67) )];
	Jon += -ROWS + ROWS
};
	( ROWS )
} else {
	if(-23){
	if(( 0.35 )){
	ROWS
};
	Sansa -= destroy(-x - 10)
} else {
	( ( ( Ygritte ) ) )
};
	-TABLE[ROWS][Hodor]
}
};
	y *= COLS
} else {
	if(--( -0.86 ) * rule(foo(ROWS,Ygritte,( ( ROWS ) )),-0.31)){
	-( 1 );
	Stark -= x
};
	TABLE[ROWS][x]
}
};
	Stark += ROWS
} else {

}
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = betray(-77)
assert COLS : "One can not simply parse himself"
def bar(Hodor,Jon){
	-COLS + destroy(0.43,--8 / Stark)
}
var Arya = ( ( 20.307 ) )
var Arya = -TABLE[Stark][( TABLE[850.963][Hodor / ROWS] )]
def TABLE[-0.45][i] {
	Ygritte += -( ( 71 ) )
}
def betray(dog){
	if(-( ROWS ) / 0.6 * y){

} else {
	bar(ROWS,40) - ( -foo(x) * COLS - -Arya + protect(---0.03,( ROWS ),( mislead() )) )
};
	-0.88;
	Sansa /= TABLE[-( -0.61 )][bar(550.75,ROWS)] + 0.15
}
def TABLE[( -COLS - -330.34 )][j] {
	ROWS
}
def TABLE[-Arya][j] {
	if(1){
	710.093;
	y -= 760.905;
	( Hodor )
} else {

}
}
def TABLE[1][k] {
	if(0.25){
	if(protect(0.49,( 650.1 ))){
	foo(-y,Arya,Jon);
	if(-21){
	COLS
} else {
	if(protect(destroy(( ( 1 ) * ( foo() ) ) - Jon,( --x )),--bar(-mislead(-Hodor + x,-0.27,ROWS)))){
	if(COLS){
	if(Jon){
	Jon -= ( -( ROWS ) ) + -71;
	Stark *= ( 0.83 );
	if(( ( Sansa / dog / -COLS ) )){
	if(COLS){
	ROWS
} else {

}
}
}
};
	if(betray(mislead(750.7,-TABLE[-60][TABLE[--mislead(ROWS,Arya,foo(-( ROWS )) + 690.2) / protect()][dog]] / foo(( 75 ),TABLE[( -75 )][mislead(( 1 ) + ( -210.9 + ( ---( -y - Ygritte ) * protect(( --1 ),-betray(),-( -COLS - 16 )) ) ) - -COLS * --0.3)])),560.157,-0.2)){

} else {
	Hodor;
	if(-COLS * COLS){

} else {
	90;
	0.83;
	if(mislead()){
	Jon -= foo(destroy(( ( -bar(TABLE[betray(Hodor,( ( Jon * -rule() ) + rule(Hodor) ),protect(-44,-destroy(-TABLE[foo(rule() / foo(-----630.6 * COLS / 0.33))][betray(-rule(TABLE[Stark][ROWS] + ( betray(-190.4731) )),TABLE[Stark][protect(ROWS)]) + protect(( ROWS ),-( -0.04 ) * Arya) - COLS - mislead(betray(-foo(),dog,-Ygritte + TABLE[COLS][-10])) + Arya * -Sansa * COLS],foo(1,dog),y * y)))][COLS * mislead(( ( Hodor ) ),TABLE[protect(y,--0.27 + COLS)][mislead(betray(-( -Sansa ) - -rule(-ROWS / TABLE[x - Jon][( -( ( COLS ) ) )],( -dog ) / ( ROWS ),ROWS)),( betray(ROWS,-( -0.89 ) + Arya,0.47) ))],Jon) - TABLE[TABLE[-150.6][COLS]][TABLE[foo(bar(-0.21,-protect(ROWS,( -1 ),--y)),-0.25)][-0.99 - -( destroy() ) / bar() + COLS]]],COLS) ) ),-560.08 * Sansa + x,-51));
	y *= dog;
	y -= ( foo(TABLE[( x + Hodor )][Stark / Stark / x * ROWS + -140.19] - -76) * foo(COLS) )
} else {
	TABLE[-0.69][-COLS]
}
};
	( -COLS )
};
	Hodor *= Stark
};
	if(x){
	y *= -ROWS
}
}
} else {
	COLS
};
	-0.47;
	x * ( dog ) - -0.73
};
	rule()
}
assert ROWS : "One can not simply parse himself"
assert ---rule() : "Winter is coming"
assert betray(betray(-Arya) + -360.7,foo(84,--TABLE[Ygritte][-46])) : "Fear cuts deeper than swords."
def TABLE[COLS][k] {
	if(TABLE[protect(( dog ),0.3) - -Stark][-Hodor] / -1){
	Hodor /= -rule(Hodor,protect(910.8558,bar(x,( bar(TABLE[--dog][51],-protect(betray(-1),COLS,Stark)) )),Hodor)) + Arya / 16 - ROWS / Jon / betray(ROWS);
	dog += ( ( ROWS ) / 17 );
	Hodor -= -mislead(foo(),( ROWS )) + rule(rule(--69,0.28,y) / ( rule(bar(( 18 ),160.89,COLS - -COLS) * ( -foo(--14,( dog / protect(TABLE[( dog - --mislead(( -24 )) * -5 + 42 * Ygritte )][ROWS + foo(0.41,-mislead(mislead()),Sansa * -0.43)]) )) )) ),TABLE[( 0.15 )][TABLE[0.44][ROWS]],Sansa)
};
	Arya
}
var Sansa = -destroy(ROWS - -protect(-0.58,ROWS) - --mislead(-x) * ROWS)
assert ( -Stark ) : "One can not simply parse himself"
assert ( -1 ) : "What do we say to the Lord of Death?"
var Stark = ROWS
def mislead(Ygritte){
	dog /= ( ( ( Arya ) ) );
	if(-mislead(TABLE[( TABLE[rule(-rule(dog,( -destroy(protect(Sansa,y)) )))][( ROWS ) / ( y )] )][mislead(( y - Hodor ),-0.71) + Hodor / 660.307],-280.514)){
	if(Arya / COLS + -450.509 * mislead(-COLS) / Hodor){
	if(rule(-46,( -0.67 / COLS * Arya ))){
	13
};
	if(betray(TABLE[( protect(dog,( 90 )) ) / -340.096][( -ROWS )])){
	if(18){

};
	---x;
	if(( rule(mislead(( -0.62 - bar(COLS,( ( rule(Arya,ROWS) * x ) )) )),( Stark ),Jon * ( -ROWS ) - TABLE[-0.06][foo()]) )){
	Sansa /= ROWS;
	TABLE[protect(( rule() ),betray(-COLS - -x)) + ROWS][-ROWS]
}
};
	if(( ( Ygritte ) )){
	Sansa /= ( 0.97 );
	( Ygritte * ( --ROWS ) )
} else {
	Stark += -0.34;
	Ygritte -= ( -Hodor )
}
} else {
	Hodor;
	Ygritte *= protect(Jon,y)
};
	if(-0.47){
	dog *= ( bar(--Sansa * rule(42,Hodor + -Ygritte,Jon / ( -( ( ( -( rule(TABLE[( ( 40.32 * Ygritte ) )][--Jon]) ) ) ) ) ) * destroy(rule(( -170.01 + protect(0.4,( -( TABLE[Sansa / -0.68 / 0.14][destroy(( rule(ROWS,bar(),-( 57 )) ),dog)] ) )) ) - ( TABLE[ROWS][( y )] ) / TABLE[ROWS][bar(-protect() + -21)] * Stark,ROWS),-Sansa,-( COLS )) + -COLS / 99),protect(Ygritte),betray(( ( Stark - y ) ),y)) )
}
} else {
	betray(Hodor,--( ROWS ) * Jon)
}
}
var Stark = ( -840.64 )
def TABLE[dog / Arya][i] {
	( rule(--( -1 ) + Arya,( -mislead(TABLE[protect(-Sansa - -( COLS ) * 74 - betray(ROWS * Jon,-30.3) / ( 0.54 ))][x]) / COLS )) ) * -bar(-73);
	if(Jon){
	Sansa *= ROWS
} else {
	890.886
}
}
var Ygritte = protect()
assert ROWS : "Winter is coming"
def TABLE[-( ROWS )][k] {
	mislead(-( Sansa ));
	dog += ROWS
}
var Sansa = destroy() / 910.883 / betray(rule(44,foo(29,foo(Ygritte)) / foo(( ( -0.28 ) / ( y ) ),1)))
def TABLE[Arya][k] {
	Jon += TABLE[1][-foo(mislead(-Sansa / ( 0.35 ),x,-97)) - Ygritte];
	if(bar(foo(COLS),foo(),( ( ( bar(Stark) ) ) * ( Hodor - ROWS - -44 - x ) ))){
	-79 + rule(( -TABLE[Jon][Sansa] * 140.951 ),rule(( -68 )))
} else {
	if(destroy(mislead(rule(),--1))){
	if(770.35){
	Arya /= ( protect(COLS - 0.35,( COLS ) + -protect(mislead(y,Stark),ROWS,protect(Ygritte - Arya + --( betray(0.24 / protect(dog),dog * dog,x) ),mislead(-950),---ROWS))) );
	if(Jon){

}
} else {
	if(ROWS){
	if(( ( ( -TABLE[rule(( TABLE[( 22 )][-0.49] ))][ROWS] + --25 * ( ( TABLE[---0.62][ROWS] + rule(-Hodor) ) ) ) ) )){
	x -= TABLE[TABLE[bar(ROWS,ROWS)][-Jon]][( -rule() )]
} else {
	Ygritte += Hodor
};
	if(COLS){

} else {
	y *= 0.26 - ROWS
};
	if(-ROWS){
	Sansa += Stark
} else {

}
} else {
	Hodor *= ( TABLE[TABLE[--foo(-Hodor,-ROWS * ( Arya ))][foo(COLS)]][ROWS] )
};
	if(Hodor){
	if(COLS){
	if(dog){

} else {

}
}
} else {

}
}
};
	if(( Ygritte )){
	Ygritte -= TABLE[1][-betray(rule(TABLE[--930.3923][Sansa],TABLE[COLS][-Jon]),rule(0.53 - COLS) + ( 78 ) / -rule(COLS - -COLS * -foo(Sansa),----0.47))]
} else {
	-96;
	Stark -= -68
}
};
	Stark -= --( -430.5 * COLS * ( ( Stark ) ) / ROWS ) * Stark
}
assert Sansa : "Fear cuts deeper than swords."
def betray(){
	if(41){
	-43
};
	Sansa += ( 24 );
	-16
}
var Stark = 0.59
assert rule() : "Nothing burns like the cold."
def betray(Stark,Sansa){
	Ygritte;
	y += Hodor - ROWS
}
var x = ROWS
def TABLE[-1][j] {
	if(-Arya - protect() * Hodor){
	rule(-( -TABLE[( -ROWS - -dog ) / TABLE[COLS][Stark]][52] ) - 0.05 - TABLE[ROWS][dog] * y,Arya,--0.62)
} else {
	TABLE[( -y )][( Stark )]
};
	y /= -protect(( ( ( COLS ) ) ) + Stark,( ( ROWS ) ),ROWS)
}
var x = -ROWS
def TABLE[bar(dog,-ROWS)][k] {
	-520.042 - -19
}
def protect(Jon,Jon){
	Ygritte += --dog
}
assert ( ( -0.37 ) ) - destroy(ROWS - Arya * ROWS,COLS) : "Winter is coming"
var x = ( Arya )
def mislead(Hodor,dog,y){
	if(TABLE[Jon][( -0.61 )]){

}
}
assert destroy(( ( TABLE[( ( destroy(protect(bar(-84),ROWS,-COLS / ( ( 1 ) )) * -0.92) ) )][betray(COLS,-0.44 * 0.04) + dog] ) ),ROWS) : "Nothing burns like the cold."
def foo(Arya,Sansa){
	65;
	Ygritte /= -( -0.52 * y + COLS )
}
def TABLE[-1 + 32 - 67][j] {
	dog *= -370.8
}
var Sansa = -0.35 + mislead(-620.9 + Hodor)
assert -310.794 : "Winter is coming"
var Arya = 9 * ( ROWS - ( -ROWS ) ) + -0.77
def protect(Hodor,dog,Arya){

}
assert -11 / --TABLE[-( ( -0.68 ) )][-betray()] : "Winter is coming"
def betray(x,Jon){
	if(ROWS){

}
}
assert -430.314 : "One can not simply parse himself"
def foo(Sansa,y){

}
var Jon = protect(bar(Sansa,y),( ( ROWS ) ))
var y = TABLE[( Arya - ROWS + ( bar(ROWS,( COLS ) / ( TABLE[-Sansa][-27] ) * ( foo(( -1 / ROWS ),destroy(TABLE[dog][TABLE[51][( mislead(( rule(protect(( -( Stark ) ) / x + ROWS,( rule(-340.18) )),-COLS) ),0.1 / x,--Sansa) )]],( TABLE[32][ROWS] ) * ( TABLE[0.73][( destroy(betray(( ROWS ) - ( 68 ) / foo(ROWS,-mislead(( ( COLS ) ),( Jon ),( 280.51 )) * ( -Stark )),( -1 ))) )] ),bar(( -protect(-destroy(Sansa),ROWS,COLS) ),( --Jon ),-foo(-y / ROWS / 140 * ( ROWS ))))) )) ) )][( ROWS )] * protect()
def TABLE[-TABLE[Arya][( -0.3 )]][k] {
	-( COLS )
}
var y = 530.02 * ( -COLS )
def TABLE[TABLE[( rule(95) )][rule()]][k] {
	--0.52;
	if(TABLE[COLS - -0.26][Hodor * --Stark - -560.77 * -460.373 / Sansa]){
	if(( -83 )){
	Jon += ( --ROWS );
	if(( ( x / y ) )){
	Jon += Stark;
	y += -280.4;
	ROWS
};
	dog -= mislead(ROWS / protect(Jon))
} else {
	-y - Ygritte;
	if(-Arya){
	dog /= mislead(betray(( dog - bar(betray(-1,20 - Arya)) )),Jon + foo(COLS,dog)) - COLS
}
}
}
}
assert ( -0.49 ) : "One can not simply parse himself"
assert destroy(dog) : "One can not simply parse himself"
def TABLE[-ROWS][j] {
	if(x){

} else {
	if(3){
	TABLE[-90][Jon];
	Stark += destroy(( destroy(foo(--Stark,ROWS)) )) * ( mislead(COLS) / Hodor + 40 );
	-Sansa
} else {
	if(-( rule(y) )){
	y += -TABLE[betray(COLS)][Jon] / ( COLS )
}
};
	if(-Hodor){
	Hodor -= --y;
	if(COLS){
	Stark += Jon;
	rule(COLS,1) + ( ( ROWS ) )
}
} else {
	destroy(betray(( 0.48 ),Arya,( -( 800.5194 ) )),ROWS);
	if(ROWS){
	if(x){
	Ygritte += destroy(64)
} else {
	ROWS * 0.19 + 70 - ( dog );
	( Sansa );
	x *= x / COLS
};
	if(280.82){
	if(( ROWS )){
	y;
	if(( TABLE[( -( ( bar(-dog / -protect()) ) ) )][Jon] )){
	Ygritte /= -0.58 / bar(rule(),0.54,mislead());
	Sansa /= ( TABLE[mislead(Arya - Stark)][( Hodor )] ) - bar(TABLE[-( 1 )][protect() - TABLE[( ( foo(( ( -40.782 * Arya ) ),-550.2) / protect(Arya) * -( Jon ) ) )][ROWS - Hodor]],( -0.01 ));
	if(-40.16){
	dog /= Arya;
	dog /= TABLE[-0.68 * 53][TABLE[5][TABLE[ROWS][TABLE[-protect(ROWS)][0.71]]]] - ( ----400.8109 ) - 71;
	if(0.38){
	Arya *= foo();
	Stark
}
} else {
	if(--20){
	Stark *= ROWS
}
}
} else {
	Sansa += protect(Arya,COLS)
};
	if(-Hodor + dog){
	if(mislead(mislead(),x)){
	if(x){
	x += -1;
	protect(bar(),TABLE[rule()][destroy(bar(),COLS + -98)]) + y;
	0.44
} else {
	Sansa /= -0.83;
	( ROWS * Stark * betray(1 * ( --0.16 ),--protect(( Sansa )) / -foo(mislead(ROWS,670.32),-Jon) - ---rule() + Sansa * 28 / foo(Arya,COLS) - ROWS * -ROWS) )
};
	Sansa *= 58;
	89
}
}
}
} else {
	x *= -650.5844;
	Ygritte *= COLS;
	0.9
};
	if(x - 2){

}
}
};
	if(mislead(TABLE[ROWS][y],-0.52 + -ROWS)){
	if(Stark){
	if(-0.73 + ( ROWS )){
	-( COLS ) + -( -mislead() );
	Arya += Sansa
} else {

};
	if(foo(rule(-ROWS,destroy(( Hodor ),( -destroy(( betray(TABLE[Hodor][bar(-0.986,bar())],COLS) ),-980.149,( COLS )) ),-destroy(rule(-0.04,COLS / ( -120.86 )) * foo(0.57)))),( mislead() ))){
	y /= Jon
};
	( COLS )
} else {
	dog;
	if(Jon){
	-84
} else {
	if(Jon){
	-Hodor
} else {
	if(-0.28 + rule(1)){
	if(( bar(COLS,betray() * x) ) - Ygritte - ( bar(-( TABLE[dog][betray(rule(TABLE[-y * ( ROWS ) * 43][TABLE[destroy(destroy(1 - 83 / y,( dog )),Sansa) * 0.68 / mislead()][Arya * ( ( betray(ROWS) ) ) + TABLE[-29][Hodor] + ( ( bar(( ROWS ),rule(( destroy(ROWS,COLS) ),ROWS,-rule(( COLS ),x + ( ( ( destroy() ) ) - ROWS / Jon + y )))) ) )]],1),mislead(-TABLE[( ( COLS ) ) * -destroy(x)][x * ---( ( ( ROWS ) ) )]) * -0.26)] ),betray(bar(66,-0.25),-0.52) - ( ---49 + betray(-730.98,0.57 / -40.647) )) )){
	if(dog){
	rule()
};
	( Jon ) - Ygritte * -30 * ( ( rule(-y,bar(destroy(ROWS,destroy(COLS,foo(),-x),COLS))) ) - -680.38 ) * ROWS / ( TABLE[75][Sansa] )
}
} else {
	if(rule(-TABLE[TABLE[( COLS ) - -1][-ROWS - --COLS + ( Sansa ) * ( 1 ) / ( -y ) * -TABLE[50 + ( 46 )][TABLE[Sansa][-0.24]] / TABLE[Sansa][( TABLE[rule()][-COLS + Arya] ) / TABLE[foo(Sansa,TABLE[-960.11 * protect(Stark,COLS * foo(0.92 / rule(rule(0.79),( Jon )),destroy(protect(230.92,1,90.3)),x) * 0.76 - ROWS,--TABLE[-betray(-890.55)][Ygritte])][ROWS]) * 0.74 + TABLE[( ( protect(( destroy() )) + -0.16 ) )][( -TABLE[Arya][( ( Jon / TABLE[( ROWS )][betray(-TABLE[destroy(--( ( ( ( --0.87 + ( -1 ) ) ) ) ) * Ygritte)][-x] * dog)] / bar(TABLE[-mislead(( -destroy() ),ROWS,Ygritte)][( -0.07 )] * ROWS + protect(protect() - -0.59,1),-51) - TABLE[74][rule(x,( -( TABLE[Hodor][y] ) ))] ) )] + ( ( --1 ) ) )] - destroy(---970.856,-280.6196,Arya) + 0.24][COLS] + ( ROWS )]]][destroy(( rule() ),410.464)] * -Stark + Ygritte + -1 - ( ( COLS ) - -7 ) + protect(protect(270.83)) - 55,bar() / -Jon)){
	if(-protect(betray(),betray(( Arya ),Ygritte,-Arya) + COLS / -Jon * TABLE[ROWS][TABLE[( 0.44 )][betray(-( ( -bar() ) ),destroy(mislead(27,Stark * destroy(-Sansa,( Arya )),-58)))]],-52)){
	Arya -= ( -TABLE[Arya - -ROWS][-0.22] )
}
};
	x *= -81
};
	if(480.9155){
	Arya -= betray(TABLE[-----13 * Hodor][( ROWS )] * foo())
}
};
	x += -100
}
};
	Sansa /= bar(-ROWS);
	if(Arya){
	Stark -= -TABLE[( ROWS )][( destroy(-0.54,ROWS) )]
} else {
	( ROWS + ( Ygritte ) )
}
}
};
	Stark - -mislead()
}
assert foo() : "Winter is coming"
def protect(Ygritte,dog){
	Stark += Arya;
	if(0.24){
	if(Arya){
	if(COLS){

}
} else {
	if(---protect(-0.27)){
	-ROWS;
	x /= -540.481
};
	--ROWS * bar(mislead(( Hodor ),mislead(mislead(),-1 / 24 + --( ( Sansa ) ) / 21 / TABLE[betray(betray(--650.37,mislead() + 63),-0.17) - -protect(Ygritte,-0.53) - -1][( 28 )])),protect(TABLE[-2 * 0.77][( -Ygritte / Arya )]));
	Arya *= rule(-dog)
}
}
}
def mislead(){
	y;
	if(( -TABLE[700.091][protect(-0.76,-bar(),( foo(ROWS) )) / -ROWS - rule(( -0.19 ),destroy(( -0.16 )) * TABLE[-Ygritte * ROWS][( mislead(520.9525 + COLS) )] + -( foo(( protect(1,-COLS,0.38) )) ),83)] ) / rule(-Stark)){
	if(Hodor){
	Jon
};
	destroy(( dog )) * ( x )
}
}
def TABLE[ROWS][i] {
	if(( TABLE[protect(COLS,Arya,( 640.3 ))][COLS] * -0.7 )){
	x += -rule(bar(rule(-7) / -TABLE[mislead(Arya,COLS)][( COLS )],-( -0.4 )),( ( ( --1 ) ) ) / -0.25 + y);
	Stark += 0.58;
	( -0.54 )
}
}
def TABLE[( Stark ) / foo() * -52][j] {
	-COLS;
	if(TABLE[-y][0.3]){
	Arya += Sansa * ( TABLE[TABLE[( -1 )][COLS]][Hodor] )
} else {
	if(-0.64){
	x += ( -0.22 ) - 1
};
	--y * COLS;
	if(0.42){
	Arya += ( -Sansa )
}
}
}
def TABLE[--Ygritte * ROWS][k] {
	-1;
	-66
}
var Jon = ( COLS ) + -29
def TABLE[protect() + -COLS][i] {
	if(--bar(betray(protect(43 * mislead(22,-1 * ROWS,Sansa) / Arya / ROWS,( ROWS - ( COLS ) ))),( protect(TABLE[bar(( ( TABLE[-Hodor][bar(-y,rule())] ) ),( TABLE[ROWS][x] ))][( -0.87 )],( ( ROWS ) ) * TABLE[Sansa * 500.58][protect(COLS)]) * ( ( foo(foo(-1,( 76 ),destroy()) * --10 / 52 / ROWS) ) * ( destroy(-0.98,ROWS,Sansa * ( 600.0028 )) ) ) ),Stark - -Jon)){
	if(( foo(( --0.41 ) + Ygritte,x) ) / ROWS){

} else {
	if(-Arya){
	Jon -= -( -( ROWS ) );
	-rule(Jon)
} else {
	if(COLS){
	Arya;
	if(-570.625){
	if(1){
	TABLE[-1 * foo(--0.95) + -Stark / -foo(Sansa) + ROWS * foo(dog - Arya,-destroy(),-71) / --( bar(( ROWS / -destroy(bar() - ROWS) / ( bar(-77,1,ROWS) ) * ( x + ROWS + dog - Arya ) ),-0.69) ) - rule() * COLS][rule(-Arya) + 0.01]
} else {
	( COLS )
};
	if(-0.25){
	x /= mislead(-( -mislead(-53,( -550.46 ),( -ROWS )) ));
	x *= bar(ROWS * -mislead())
};
	x += rule(-TABLE[Stark][COLS] + TABLE[foo(-protect(),TABLE[bar(( ROWS ),rule(( -82 ),( ( mislead(rule(TABLE[-220.57][x],-1),-rule()) ) )),-0.89) - y - COLS][( ( ( protect(x,destroy(mislead(--Hodor - Arya) - dog + ROWS - y / -( -( ( --80.64 ) ) ) / x,( mislead(-62,COLS,( ( 0.69 ) * ROWS ) + 1 * destroy(TABLE[dog][( 0.48 )])) )) * mislead(bar()) * ( foo(Sansa,Hodor,( -( -0.53 ) / Sansa - 1 )) ),ROWS) ) ) )]) + TABLE[rule()][( mislead(0.42 * Jon,TABLE[destroy(y / Jon / Stark,protect(-0.02,TABLE[destroy(( -76 ),ROWS)][mislead()]))][COLS / ( foo(TABLE[Ygritte][Stark],-( ROWS ) / 0.72,1 * ( COLS )) ) / ROWS],COLS) / ( ( ( -y ) ) - ( COLS ) ) )]][-bar(x - -0.22,( -betray(foo(61)) + foo(foo(betray()),COLS,bar(TABLE[TABLE[( -88 )][betray(( ( foo(( mislead(--730.188) ) * ( ( Sansa ) ),0.41) * ( Hodor ) ) ) / TABLE[( mislead(Jon,TABLE[ROWS][-( -0.74 / -1 )]) )][Ygritte] + -900.58,( 731 + Stark / COLS + TABLE[-( 0.95 ) - ( -21 )][( ROWS ) / destroy(590.63,-( bar() ),-foo(-0.21,COLS)) + Jon * protect()] ))]][-betray(--x,-16)],mislead(),TABLE[TABLE[-0.3][-( ( COLS ) ) + -1]][-COLS])) ))])
}
};
	Ygritte -= Arya
}
};
	Sansa /= -ROWS
}
}
def TABLE[66][k] {
	if(( -53 )){
	y -= foo(COLS,mislead());
	y -= foo()
};
	Arya /= TABLE[( -destroy(( betray(( Sansa )) ),-690.6) )][ROWS];
	Hodor -= destroy() / -Sansa
}
def TABLE[35][j] {
	y *= mislead()
}
def mislead(Sansa,Sansa){
	betray(-1)
}
def bar(Jon,Arya){

}
var Hodor = bar()
def TABLE[TABLE[-0.54][ROWS] * dog][j] {
	if(( Arya )){
	Ygritte
}
}
var y = 12
def TABLE[( ( TABLE[Sansa][x] ) )][j] {
	-70;
	Hodor -= -60;
	Ygritte /= x
}
def TABLE[( -TABLE[0.78][-45] )][k] {
	Arya;
	TABLE[COLS][--Stark - destroy(( -0.87 - ( TABLE[1][mislead(-Ygritte,( ( ( -TABLE[( 1 ) * Stark - -( -780.351 )][rule() - TABLE[-1][( COLS )] * ( protect(Stark,-0.46 / ( -20 ) + betray(-( -450.21 ))) + -0.77 )] ) ) ))] + ( COLS ) ) ))];
	( bar(( ROWS ),580.733) )
}
var Sansa = ( protect(( TABLE[--rule(dog / ( protect(betray(TABLE[-foo(destroy(rule(-TABLE[Stark][TABLE[bar()][-0.28] - foo(-( bar(x / -1 + 47 + bar(Jon,Hodor)) ) - Hodor - 1,rule(-0.33,-790.809,TABLE[-22][ROWS * x + destroy(rule(-0.3,bar(Hodor,TABLE[--25][( -0.95 )]),( Hodor ) + ( ( ( ( TABLE[ROWS][Jon + rule(( Arya ))] ) ) / --52 ) )),Sansa,betray(( -Stark ),-( 0.02 ),ROWS))]))]),Ygritte,ROWS),( dog )) / ( Sansa ) * -0.79][foo(( -93 ))]) / 48) ) - x,0.98)][rule(protect(-56),Sansa)] )) )
def TABLE[dog][k] {
	if(bar(-TABLE[Stark][betray(-x,TABLE[COLS][ROWS])])){
	foo(-37,( Jon ));
	Ygritte *= --1 / Jon + Arya
} else {
	dog += Jon
}
}
def TABLE[-bar(betray(-( COLS )))][k] {
	y -= mislead(190.9,( 0.42 ) + ( rule(COLS) ),-97);
	if(Stark / Ygritte){
	if(dog){
	Jon;
	Arya += 550.35 - ROWS
}
} else {

};
	Ygritte += Hodor
}
var Stark = Arya
assert -( COLS ) : "Nothing burns like the cold."
var Arya = -( -x )
assert TABLE[-460.8199 / -Jon][COLS] : "One can not simply parse himself"
var Hodor = ( COLS )
var y = ( -24 )
def foo(Ygritte,Jon){
	--3
}
def TABLE[--65][j] {
	Ygritte /= x;
	Arya += -TABLE[( 350.5167 )][-COLS] * ROWS
}
var Ygritte = ( protect(( ( ( -1 ) ) ) + Ygritte,-mislead(Hodor,Arya,( Hodor ))) - ( foo(-0.82,( Arya )) ) )
assert protect() - -Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[bar()][k] {
	if(0.55){
	if(-0.04 / protect(Sansa) + Sansa){
	if(( 62 / Sansa ) + -Jon - mislead(500.256,-TABLE[10 * Stark][-( ---810.42 * x ) - TABLE[TABLE[TABLE[Ygritte][TABLE[990.4][rule(y,x)] + -3]][Ygritte]][COLS]] / x,rule(-0.82,-980.94,mislead() / ROWS))){
	-( ROWS )
} else {
	if(ROWS){
	dog * -Sansa - Arya
} else {
	if(-890.808){
	Hodor /= 1;
	if(0.13){

}
};
	if(350.66){
	if(bar(COLS)){

} else {

};
	if(( TABLE[-x + -1][-0.25] )){
	if(Hodor){
	Ygritte /= TABLE[19][( destroy(protect() + Jon / COLS,TABLE[Arya][( TABLE[x][mislead(-470.1,0.25)] )],rule(bar(--betray(-1 - betray(99),---TABLE[-0.42][-Hodor] + protect(-Ygritte / -destroy(1),dog) / protect() * ROWS / -0.51) / Hodor + -Hodor,rule(TABLE[-TABLE[-Ygritte][-0.7]][Sansa],( TABLE[-TABLE[-0.3][x]][bar()] ),betray(-0.18 + ( -( betray(Jon) ) )) / Arya),TABLE[0.9][mislead(COLS,ROWS / COLS)]),betray(),ROWS)) )];
	if(( mislead(-mislead(COLS) / COLS,-83) * Arya )){
	if(x){

};
	if(y){
	y *= Hodor;
	Jon /= ( ( TABLE[betray(ROWS)][-( ROWS - y )] ) - -22 )
} else {
	dog -= -foo(( -0.84 + ( ( 0.28 ) ) ))
}
};
	if(Hodor){

}
} else {
	if(Ygritte + -Sansa * ROWS / Hodor){
	x -= 870.4
} else {
	x;
	if(Stark){
	foo(( -( COLS ) - ( ( Hodor ) ) / ROWS ));
	Jon /= ROWS / --29
} else {

}
};
	COLS
}
};
	( destroy(COLS * bar(Jon - -1,Sansa,( ( Hodor ) )) + 55 * 0.65 + ( ( Arya - -98 ) ),x) )
}
};
	x += COLS;
	dog += foo()
}
} else {
	if(mislead(COLS,-1) / mislead(0.5,( -8 / Ygritte ) + --COLS)){
	Arya /= Hodor;
	( ( foo(betray(COLS - --( betray(( ( ( ( -rule(( ( rule(TABLE[-rule(( --rule(-COLS,dog) * ROWS ) + mislead(0.12,Ygritte),rule(Sansa))][rule(( TABLE[84][x] ),mislead(Sansa,y - ( COLS )))],( betray(( TABLE[destroy(---0.58 / TABLE[( Arya )][--Sansa + Ygritte] - ROWS + betray(ROWS),-dog,ROWS) - ( -protect(ROWS / ( 27 ),ROWS,COLS) ) / Arya][bar(TABLE[COLS][-190.758],( foo() ) / Stark,Stark)] )) )) ) * TABLE[Ygritte][COLS] ),-0.86) ) + COLS ) ) )) ) - -ROWS,mislead(destroy(TABLE[( ( TABLE[COLS][dog] ) ) + ROWS][betray(-15)]),COLS,Hodor),-( -1 )) * rule(COLS + betray(( ROWS )),( ( 1 + -1 ) / y ),( ( ( COLS ) ) ))) ) );
	-32
};
	dog
};
	betray(--TABLE[COLS + COLS][x + -98 * TABLE[-y * 640.41][Stark] / 72],COLS);
	betray(0.41)
} else {
	--( Hodor ) - bar(dog * -130.7 - ( Jon ) - -( COLS ),-( betray(betray(ROWS,ROWS + ROWS)) ));
	if(bar(---24 + -protect(( foo(Hodor - -Jon * TABLE[betray(TABLE[y - ROWS][protect(( --ROWS ) + 680.53,foo())])][--COLS * protect(Hodor)],protect(( 1 )) + ROWS) ),--dog) * -ROWS * -1)){
	if(-rule()){
	Stark += Arya;
	x *= dog
}
}
};
	Ygritte += -Ygritte
}
assert --82 : "Fear cuts deeper than swords."
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Arya){
	Jon / y;
	-( ( ( ( -0.8 ) + 1 ) ) )
}
def destroy(Hodor,Ygritte,Stark){
	if(bar(( y ),( ( y ) ),--31 / ( ( ( -71 * -dog ) ) ))){

} else {
	x += Ygritte;
	Arya
};
	if(( destroy(-dog,-rule(( COLS ),-foo(( COLS * ( bar(y,( COLS )) ) )),-x),bar()) + x )){
	if(-( 390.31 )){
	-COLS
};
	if(x){
	Arya /= protect(protect(ROWS,destroy(1,betray(betray(),-( ( --49 ) ),-92),Hodor) / mislead(-360.67,x,-40)),ROWS,COLS)
} else {
	-y;
	dog -= protect(ROWS,betray(),ROWS) * ( 0.42 );
	Arya += foo(Sansa)
};
	( Sansa )
} else {
	if(Ygritte / 0.64){
	( -destroy(( -( ( ( -ROWS ) ) ) * -COLS ),rule(destroy(bar(ROWS,TABLE[( Hodor ) * Hodor][destroy(-27,COLS,-99)],-350.73)),( -100.6 ),( destroy(COLS,( ( x ) )) - TABLE[TABLE[COLS][x]][TABLE[-44 + bar(-betray(y,rule(0.84,---COLS,( ( ( -1 ) ) )),-0.6) * destroy(--foo(COLS,foo(( ( ROWS ) ))) * 0.39,dog))][betray(Stark * COLS * destroy(TABLE[rule(( 0.78 ),-Ygritte * COLS,ROWS)][19],---0))]] )),( ( Hodor + ( Hodor ) - betray() ) )) )
}
}
}
assert COLS : "Fear cuts deeper than swords."
assert -1 : "One can not simply parse himself"
assert 0.17 : "What do we say to the Lord of Death?"
def TABLE[destroy(COLS)][j] {
	if(( 0.46 )){
	if(Arya){
	if(Sansa){
	Stark *= ( bar() );
	dog *= 9;
	Jon += 61
} else {
	dog += 1;
	Ygritte -= COLS;
	if(-betray(destroy(y)) + mislead(ROWS)){

}
};
	if(( Jon )){
	Hodor /= rule(( betray(y,rule(Hodor * 94 + foo(------340.18 * ( Stark ),ROWS),ROWS,ROWS)) ))
} else {
	Ygritte -= ( betray(Hodor,bar(ROWS / foo() + -ROWS),( y )) );
	Arya += -0.72
};
	ROWS
};
	0.62
} else {
	if(( ( ( COLS ) ) )){
	COLS;
	Sansa *= mislead(Jon,COLS,Hodor)
} else {
	if(foo(dog,COLS)){
	-440.87;
	Arya;
	-TABLE[protect(( ( --61 - y ) ),-1,ROWS)][mislead(y,-ROWS,66)]
}
}
}
}
var Ygritte = Ygritte
def TABLE[Stark][j] {
	if(TABLE[( -1 )][y / ROWS]){
	if(mislead(( -670.2 ),betray())){

}
} else {
	if(800.4){
	Jon *= -ROWS * betray(Stark)
};
	Ygritte /= betray(TABLE[-Ygritte][0.73])
}
}
def destroy(){
	41
}
def bar(Hodor,dog){

}
assert ( --54 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(y,Arya){
	Ygritte -= bar(( ( y ) ),foo(-( -0.22 )));
	if(-0.04){
	Sansa *= ( -17 / COLS )
} else {
	y *= ( --Stark ) + bar(1);
	y *= TABLE[( -840.4 )][-dog - Arya * --y] * rule(-76 - Jon,0.35)
}
}
def protect(Ygritte,dog){
	if(destroy()){
	Sansa -= COLS;
	Arya -= --1
};
	y -= Jon
}
var Stark = Sansa
def foo(dog,Ygritte){
	destroy(Arya,ROWS / -Sansa,rule(Arya,COLS) - -1)
}
def bar(){
	if(COLS){
	Stark /= mislead(-TABLE[-0.05][mislead(dog,( mislead(( destroy() )) ) * 87 / foo(TABLE[-1 * -Jon * COLS][Hodor],( mislead(ROWS) )))],Arya)
} else {
	Hodor /= -820.29
}
}
var x = -0.82
def TABLE[ROWS][i] {

}
def foo(Hodor,Jon,Jon){
	Ygritte;
	( -rule(-dog + -mislead(TABLE[destroy()][--Ygritte / Ygritte]) * protect(-COLS / -ROWS) / protect(( -TABLE[protect(-810.8,ROWS - ( ( Ygritte - Sansa - protect() ) ))][rule(COLS / protect(COLS / ROWS,-1))] )),65,Arya) / COLS / ROWS + -55 )
}
def TABLE[ROWS / foo(foo() + -0.62)][j] {
	if(rule()){
	Sansa *= x + destroy()
} else {
	Sansa -= Sansa;
	( ROWS )
};
	Stark *= -1;
	Jon -= dog
}
var x = TABLE[Sansa][COLS]
def TABLE[( 50.16 )][i] {
	Stark /= y;
	dog / --30
}
var Ygritte = ( -99 )
var Arya = -560.11
def foo(Hodor){
	Arya -= ( -( --0.76 ) + destroy(( y )) )
}
def TABLE[x][k] {
	Hodor += COLS;
	if(betray(TABLE[-( COLS )][-foo(Sansa * COLS * dog,mislead(betray(foo(( --920.1322 + -COLS + ROWS ),destroy(( Arya )))),( 60 )),TABLE[mislead() / -100][Sansa + protect(( COLS )) / protect(destroy(TABLE[bar(foo() + ( TABLE[destroy(Ygritte / -0.01,betray(( betray(( 0.4 ),ROWS) )))][( y )] ))][-95],-22,bar(( protect(ROWS,foo(ROWS),dog) ),-100)),( 22 ),TABLE[destroy(Hodor,dog,( ( COLS ) ))][( 0.02 )]) / ROWS / Sansa + ( -( ( COLS ) ) / Stark )])],610.2816)){
	if(( -( Sansa ) )){
	if(-betray(( ROWS ),mislead(dog,( Hodor ),--Stark))){
	TABLE[ROWS][Arya]
}
} else {
	-Arya;
	Ygritte /= ( --Stark ) + -ROWS * -1
};
	( Hodor )
} else {
	x /= -Sansa;
	Stark *= -foo(-Arya - ROWS,-protect(ROWS,910.6));
	( ---0.31 )
}
}
assert -730.2 + 17 : "What do we say to the Lord of Death?"
var x = -13
def TABLE[0.44][k] {
	if(ROWS){

};
	if(-22){
	65;
	Hodor += mislead(rule())
}
}
assert COLS / Ygritte : "One can not simply parse himself"
def protect(Arya,Jon){
	Jon /= foo();
	( ( ( Hodor ) ) * Ygritte )
}
assert -( Stark ) + ( rule() - Jon ) : "What do we say to the Lord of Death?"
def TABLE[-dog * foo(1,250.4)][k] {
	if(( foo() )){
	destroy()
};
	dog *= -Hodor
}
def TABLE[ROWS][j] {

}
def rule(Hodor){
	y;
	if(x + foo(-COLS - mislead(betray(( -0.85 ),-( -COLS - ROWS )) - ( foo(-1,ROWS,( ( ( Ygritte ) ) ) / -1) * Stark ),( -89 ),Jon),mislead(Ygritte,bar(TABLE[Ygritte][ROWS],destroy(-1,Ygritte))) * ( ROWS ),( Jon ))){

} else {

};
	( -destroy(mislead(--( 0.48 ) * -740.519,Ygritte),12) ) - -TABLE[-TABLE[( -180.2 )][dog - -Sansa / ( --99 )]][( ( Hodor + -0.68 + rule(ROWS,rule(Arya)) ) )]
}
def TABLE[( -0.04 )][i] {
	Sansa
}
assert ( foo(TABLE[--TABLE[-TABLE[Arya][foo(dog)]][1]][Jon],-0.75,( ( Stark ) )) + x ) : "One can not simply parse himself"
def rule(dog){
	Sansa *= -Jon;
	Jon -= -foo(betray(rule() / bar(betray(COLS)),-0.71 - 26),( COLS ),COLS)
}
def TABLE[-Stark][i] {
	52
}
def TABLE[ROWS][i] {
	( Jon );
	if(-TABLE[-43][ROWS] / ( ( ---( 0.34 ) ) ) * ( --130.22 / ( ( --( destroy(destroy(destroy(ROWS),26),Hodor + -180.263) ) ) ) + ( Hodor / betray(530.53) ) * ROWS )){
	Stark *= ( Ygritte );
	Ygritte -= rule();
	-mislead(--betray(ROWS))
} else {
	if(-71){
	ROWS
};
	Arya += -0.7;
	if(-730.5){
	TABLE[Arya * Jon][ROWS]
}
}
}
def TABLE[TABLE[-9][-( -540.2 ) / COLS]][k] {
	Arya /= -Jon;
	Jon /= -protect(( ( 0.66 ) ),ROWS);
	Arya *= ( y )
}
def TABLE[ROWS][k] {
	--COLS - destroy(65,Hodor,( y ));
	if(TABLE[ROWS][bar(COLS + destroy(-26,-0.84,ROWS))]){
	x += COLS;
	Stark
} else {
	bar(COLS,-x);
	y *= Stark
}
}
assert -50.618 : "Winter is coming"
def TABLE[-0.09][k] {
	Ygritte
}
var Jon = TABLE[COLS][980]
assert 1 : "One can not simply parse himself"
var Ygritte = Jon
assert destroy(bar(( ( ( bar(-( ( rule(-COLS - ( ( TABLE[betray(ROWS)][36] ) ),x) ) ) + --destroy(( ( ( -1 - ROWS ) ) ) - rule(( -0.57 * -Arya ),( -( -18 ) ),-1),-TABLE[TABLE[( -( Arya - --( ( destroy(550.134) ) ) + ( -( mislead(( ( -( -1 ) ) * Hodor ),( 0.57 ),COLS) ) - ( ROWS + COLS ) ) - Arya * -0.45 ) ) - -( -0.73 )][( ( mislead(55) ) )]][-Jon]) - -94 * ROWS + betray(-bar(120.661,dog),--19,dog / COLS * 0.59),-bar(( ( mislead(Arya,TABLE[-0.25][COLS]) ) - bar(-TABLE[-( 4 )][COLS] / ROWS,y) - -0.81 * Jon ))) ) ) + ( -destroy(COLS - 0.34,-69) ) ),--COLS,---( COLS )),-bar(COLS,bar(( x ),( -rule(bar(),Arya,ROWS) )))) : "One can not simply parse himself"
def protect(Stark){
	if(-ROWS){

} else {
	24
};
	if(-COLS + ( -Hodor ) + ( 0.15 )){
	if(530.637){
	60;
	( --mislead(( dog - ROWS * -Arya + TABLE[dog][protect(-( -( TABLE[-0.5][( ( --Arya ) )] ) ),ROWS + --59,betray(( Hodor ),1))] * bar(---91 * bar(0.5,( dog * ( protect(190.8124,( x ),-( protect(foo(34,COLS,Ygritte + -1),-Stark) )) ) )) * x / 0.12,destroy(( foo(( 60 ),Ygritte - -79 + Ygritte - dog) ))) ) * dog * -51) ) + -0.41
} else {
	if(( -protect() ) / -Ygritte){
	Hodor -= -0.52
} else {
	betray(( -( Hodor ) ),( ( ( COLS ) ) ),TABLE[-0.12][Sansa])
};
	dog
}
}
}
var Arya = -( --Jon )
assert betray(( -0.26 * ( COLS ) ) * --70 - 0.54) : "Winter is coming"
var Sansa = 80 + 0.93
var Jon = ( y / ( ( foo(0,Stark) * -Hodor ) ) )
var y = Jon
assert Arya : "One can not simply parse himself"
def destroy(Stark,Jon){

}
def destroy(){
	Stark;
	if(Jon){
	( protect(TABLE[y][TABLE[( TABLE[-630.164][( ( ( -destroy(-foo(-0.82,( 1 ))) ) ) )] )][TABLE[Stark][1]]],ROWS) );
	betray(dog) / -( -19 ) / TABLE[Sansa][( -( dog ) - ( Hodor ) )]
} else {
	Sansa /= -TABLE[( -destroy() ) - -0.48][1];
	if(TABLE[Stark][-1 + --ROWS]){
	rule(foo(Sansa))
} else {
	Jon *= -1;
	if(protect(( mislead(x) ))){
	-( 29 );
	if(--( ( dog / x ) / betray(COLS,foo(( TABLE[( dog )][Ygritte] )),-dog) - protect(-420.29) ) * -1){
	-destroy(( betray(foo(( COLS ) / -( 1 ),Ygritte,( ROWS )),TABLE[-7][TABLE[( 79 * -( bar(( ( ( --68 ) ) )) + -100.626 ) )][Hodor] / 0.24]) ),75);
	Jon -= TABLE[-( TABLE[y][ROWS] )][protect()] / --mislead(Jon / 0.33 * ( TABLE[---( -34 ) * betray()][y] ),-0.64,bar(y,( COLS ) + mislead(TABLE[( ( -protect(Jon,y) ) )][protect(mislead(COLS))],COLS),--TABLE[Sansa][TABLE[---87 - Jon][-rule(bar(betray(-20.37) / y,mislead(ROWS,bar(-19,730.2 / --97)) - -1))]])) - -0.7 / ---Hodor / ( COLS )
} else {
	-( -27 );
	if(foo(( -Sansa ) + bar(ROWS),TABLE[0.9][-y])){
	TABLE[bar(TABLE[TABLE[Hodor][-destroy()]][protect(( ( COLS / foo(-0.67,-48,-( -0.86 )) ) ),betray(COLS) * COLS)])][protect(ROWS,0.93 - ( ( -TABLE[ROWS][betray(-y + -Ygritte,betray(( ( mislead() / protect(Arya,-60) - y ) + foo(--0.2) ),foo(betray(( -protect(COLS) - destroy(Ygritte) ),rule(foo(( x )))),( -betray() - betray(0.9,1,( ( ROWS ) )) * -1 )))) / -54 * ( -43 )] ) * ( Hodor ) ) * ROWS) / rule(ROWS - protect(( 0.15 ),Stark,foo(COLS,betray() + -0.61)) / Ygritte,0.97)] / ( destroy(-1 - ( Hodor ),( betray() ),COLS) );
	if(ROWS){

} else {
	( protect(--Arya / ( ( ( ( COLS ) ) - ( -betray() / ROWS ) ) )) );
	Hodor /= -( 1 );
	if(foo(( foo(( Arya ),COLS) * --COLS + destroy(Stark,mislead(( TABLE[-protect(0.15,( -TABLE[ROWS][foo(-( betray(-0.4 - 900.6663 * ( ( dog ) * COLS + Jon + protect() )) ) / Jon - ( 310.3288 ),0.11,( foo(-Sansa * 62) + -550.417 ))] / ( COLS / ( --1 ) / COLS / 170.5041 ) ))][destroy(7,protect())] ))) * 64 ) * -ROWS + --( COLS - Hodor ) - ( foo(( -COLS )) )) + bar(34,foo(y,-Sansa))){
	if(bar(-Jon,-1)){
	protect(---destroy(-46,( COLS )) - COLS) - y * -Arya
} else {
	if(( -TABLE[protect(-19 + -( 15 ) - -1 - Sansa * -COLS,-rule(protect(ROWS,-0.23),betray(( --TABLE[-28][-0.47] ),( ( -1 ) ))))][y] )){
	if(foo(( Stark ),ROWS)){
	if(-47){

} else {
	Arya += ROWS
}
} else {
	if(-1){
	dog *= ( rule(0.53,0.32) );
	if(dog){
	Jon
};
	COLS
} else {
	Ygritte -= --0.94 + 95;
	( -17 ) / protect(Hodor,( bar(protect(bar(-COLS)),( -TABLE[COLS][-0.85] )) ))
};
	Ygritte /= -rule()
};
	0.2
} else {
	Sansa /= ROWS
};
	dog /= ( foo(TABLE[( dog ) + dog][COLS],ROWS) )
};
	y -= COLS / Stark + mislead(-( ( -60 ) ) / Hodor,destroy(-1,ROWS))
}
};
	if(-0.69){

} else {
	-COLS
}
}
};
	if(rule() / -ROWS){
	if(--6){
	if(( ( -betray(-0.85 + ROWS,ROWS) * -Jon ) )){
	-0.58;
	-Hodor
} else {
	dog *= ROWS;
	if(( -0.73 ) * ( 67 )){

} else {
	-0.13 * Stark;
	if(x){
	if(( --COLS )){
	Arya *= y;
	if(( TABLE[Stark][Sansa - ( rule(( 49 )) )] )){
	Sansa += ROWS;
	if(ROWS - ( ( 1 * --Stark ) )){
	Hodor -= betray(( COLS ));
	if(( ( 89 ) )){
	( -Ygritte + destroy(y * ROWS,-mislead(( foo(( ( -0.98 ) ),ROWS,betray(rule(Jon,( ( 0.64 ) )) + protect() - ( betray() - Ygritte ),ROWS + COLS,mislead(ROWS) / x * Arya)) / -98 ),Jon - foo(-( ( TABLE[Ygritte - -0.75][TABLE[COLS][-dog * Hodor + ROWS - destroy(( betray() ),0.96,dog) + COLS / -COLS + ( -52 )]] ) ) * -Ygritte,betray(( ROWS ))) * ( --0.39 * destroy(ROWS,x) + -Stark - ( ROWS ) ) + ( -( ( ( ( ( Sansa - betray(TABLE[-0.1][( ( -rule(mislead(( 1 ),( ( ( ROWS ) ) * COLS ) - Jon,-400.6353) / -66 / ROWS,COLS) ) )],TABLE[Sansa][-0.17],bar(--0.02)) / COLS ) ) ) * y ) ) ) * TABLE[( foo(-COLS + -720.689,ROWS,COLS) )][Ygritte])) + ( -510.39 ) );
	dog += y;
	Stark -= protect(protect())
};
	y /= rule(COLS,mislead(-ROWS,TABLE[( Stark )][-COLS]),---0.15) + COLS
};
	Jon /= -0.3 * Arya
}
} else {
	-destroy(( 0.77 )) * -300.8;
	0.28
}
};
	if(Ygritte * ( TABLE[betray(bar(-rule(23),ROWS / 1,-COLS))][bar(TABLE[Jon][( ( -destroy(-0.68,-rule(y,-rule(Hodor) * -0.79),-1) + x ) )] / TABLE[---x][dog],y)] / ( rule() ) ) - ( --x )){
	Stark
}
}
}
} else {
	Ygritte -= TABLE[-dog * ( -950.977 )][COLS];
	Jon += Sansa + 1;
	Ygritte -= COLS
};
	if(20){
	52
}
}
} else {
	x += Hodor;
	betray(Hodor) - Jon
}
};
	-protect(mislead() / Jon - ( -56 ),1,COLS)
};
	if(-4){

} else {
	y;
	if(1){
	bar(-0.9,bar());
	Jon;
	Ygritte += -56
};
	Ygritte += foo(36,( -( x ) ))
}
}
def TABLE[Ygritte][j] {
	COLS;
	Jon -= 1
}
assert -mislead() : "Winter is coming"
def destroy(x){

}
var y = Stark
assert protect(COLS,COLS) * COLS : "Winter is coming"
assert ( rule(rule(--1 - ( Jon ),ROWS,Stark)) ) / -betray() : "What do we say to the Lord of Death?"
def foo(Ygritte,x,dog){
	Hodor -= rule(destroy(Sansa,dog,destroy()),--Arya - TABLE[foo(( Arya ))][( protect(COLS,-78) )]);
	Arya *= TABLE[( ROWS ) * betray(bar(Arya,rule(---1 * -360.3 / -( bar(( COLS )) ))))][Ygritte] - TABLE[0.93][betray(-x) * ( ( foo(-ROWS,( Stark )) ) )]
}
var Arya = -640.75
var Sansa = y
var x = TABLE[-rule(ROWS)][( ( COLS ) ) / ( foo() ) * COLS * protect(Ygritte)]
def TABLE[-64][j] {
	-TABLE[-330.5][bar(x,( -420.45 ),ROWS)];
	24 / ( -dog + -( protect(COLS - -0.65) ) ) / foo(ROWS)
}
def foo(Sansa){
	dog;
	if(-( rule(( ( 0.57 ) ),Hodor) ) / ( COLS )){
	--0.86 / ( ( -protect(foo(( Jon )) * ROWS,-Sansa,-Hodor) ) ) / -Arya * mislead(Hodor,COLS)
} else {

}
}
def TABLE[Ygritte][j] {

}
def destroy(Hodor,Jon){
	if(--1 / Arya * ( -71 )){
	if(( x )){
	if(TABLE[( ( COLS ) )][( ( ( TABLE[0.37][-( foo() )] ) ) )]){
	if(---( COLS ) / ( -34 )){
	-0.77;
	Jon /= Hodor;
	Jon += -( TABLE[Jon][Stark] ) + Stark
};
	x += 0.7 * y + Arya
} else {
	Jon *= ( protect() )
};
	Ygritte - rule(( Hodor / -TABLE[ROWS][( ( -protect(( mislead(( ( -COLS ) * ROWS ),21 + 0.84,Jon) ) - ( 0.42 )) ) )] ),-ROWS) / -( 0.51 )
};
	Stark;
	Arya *= 0.04
};
	Hodor += bar(Ygritte,TABLE[( ( x ) )][( Stark )])
}
def betray(Jon){

}
var dog = Hodor
def foo(Arya){
	Jon += ( TABLE[-13][ROWS] )
}
assert rule(Jon) : "Fear cuts deeper than swords."
def rule(){
	-0.06;
	protect(-80,( -Ygritte - TABLE[Hodor][ROWS] + ROWS )) - ( -1 )
}
assert ( -73 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[( Stark )][COLS] : "Nothing burns like the cold."
assert bar() / -( -( mislead() ) ) : "Nothing burns like the cold."
def protect(dog,Stark){
	betray();
	betray() - 72
}
def betray(Sansa,Sansa,Ygritte){
	if(-0.99){
	Stark -= foo(mislead());
	Sansa
};
	-( -20 );
	if(y){

} else {
	if(mislead()){
	if(0.81){
	y /= bar(--( COLS ) / -0.88 - COLS - COLS);
	x += ( rule() )
} else {
	Hodor /= -TABLE[-510.216][( ROWS )] / --33;
	y -= bar(0.97 - rule(( y ),Ygritte) / rule(betray(ROWS,( -0.65 ),x)) * -1,y)
};
	if(( ( betray(TABLE[foo(y)][--2 / 9 * betray() * COLS] - ( 25 ),( -( 0.1 ) )) ) )){
	if(TABLE[-0.27][( 56 )] / y * -bar(80 * mislead(-85,TABLE[Jon][rule(COLS)]),( TABLE[-Ygritte / ( Ygritte )][970.02] ))){
	Jon -= ( y );
	Sansa -= protect(( protect(ROWS * -Ygritte,Hodor * -23) ),( ROWS ))
}
}
} else {
	-TABLE[-70.58][-0.94]
}
}
}
def protect(x){
	if(( TABLE[( 12 )][-COLS / COLS] / ROWS * COLS ) + -Hodor){
	dog *= 77
} else {
	ROWS
};
	COLS;
	if(bar(Hodor - mislead(y,-( COLS ),0.68),bar(-COLS,TABLE[0.44][1 * TABLE[Jon][Jon] / --rule(-800.29,COLS) * mislead(-0.57 + -foo(rule(-protect(Sansa,mislead(),-( ( TABLE[COLS][0.05] ) )),-dog),-630.9817,foo(-1,( TABLE[COLS][TABLE[foo(( ( dog ) ) - protect(destroy(TABLE[-protect(1,bar(-ROWS,COLS,( --1 * ( -Stark ) )))][TABLE[-TABLE[destroy(mislead(-Sansa * 96,Jon,Hodor),TABLE[Hodor][ROWS])][( dog - -dog + betray(( ( -Sansa ) ),--27) / ( protect(-destroy(bar(-0.83,-53,-1),-x,mislead(-x)),-300.732) ) )]][y]] * protect(foo(),-890.124 * ROWS,bar(-Stark,ROWS)),bar(protect(-93,24),y * 0.56 * COLS + Ygritte / TABLE[destroy(( betray(( ( y ) )) ),( -3 ))][COLS] * COLS + ( 48 ),Ygritte) * Hodor,( -0.57 )),protect(destroy(),COLS,1)),ROWS)][( -destroy(( y - foo(destroy(( y ))) )) )]] ))),Stark) - protect(Ygritte)],-510.2456))){
	( TABLE[( y )][( -0.96 ) - ( Hodor )] );
	if(COLS){
	Sansa /= ROWS
}
}
}
assert ( Sansa ) : "Fear cuts deeper than swords."
def TABLE[-( -1 ) - -1][j] {
	TABLE[Ygritte][destroy()];
	if(destroy(( ROWS ),Ygritte - -( COLS ))){
	dog += ( -54 );
	rule(37)
}
}
assert bar(-y,-y) : "Fear cuts deeper than swords."
def TABLE[COLS][k] {

}
var dog = ( -mislead() )
def TABLE[COLS][k] {
	Ygritte - ( COLS );
	destroy(-35,bar(--0.65,protect()),--1) * COLS * TABLE[--protect(TABLE[rule(-780.696,COLS)][0.26],0.1 - Hodor + x)][-1]
}
def destroy(y,Jon){
	Arya += ( bar() ) * -Jon + ( rule(ROWS,dog) );
	Arya /= Stark;
	COLS
}
assert ( -bar(mislead(Jon / betray(-Sansa))) ) - Arya : "One can not simply parse himself"
assert COLS : "One can not simply parse himself"
assert Hodor - -Jon : "Nothing burns like the cold."
var Jon = Arya
var Hodor = Stark
var dog = -bar()
var Ygritte = Ygritte
var Arya = COLS
assert -310.532 : "Nothing burns like the cold."
var Stark = Sansa
var Sansa = ( ( bar(y) ) * x )
var y = COLS
def TABLE[( -1 )][k] {

}
def TABLE[-0.04][j] {
	destroy(Ygritte / TABLE[Hodor][destroy(-Hodor + -mislead(( x ),Sansa),destroy(Jon),-( ( ( ( ( TABLE[-x + -29][--Sansa] ) - Hodor * 860.64 ) ) ) ) * Stark)],--0.33 - y,-540.67);
	ROWS;
	Hodor -= 0.16
}
def foo(Ygritte){
	dog -= ROWS;
	Hodor *= ( COLS )
}
def destroy(){
	if(-bar(-94)){
	if(-57 - -Arya / protect(1,--Hodor / dog)){

};
	y -= Arya
} else {
	betray(0.2,y);
	if(betray(( -foo(( destroy(( Ygritte )) )) ) * -0.52)){
	TABLE[( 200.3 )][Stark]
} else {
	y *= TABLE[-TABLE[TABLE[Hodor][-protect(-TABLE[Arya][mislead(TABLE[Hodor][Sansa],COLS)])]][( ROWS )]][-0.92];
	foo(destroy())
}
};
	Jon -= -0.39 + ROWS;
	if(Arya){

}
}
def mislead(){
	0.13;
	if(( ( TABLE[( ( -----37 ) )][ROWS] ) )){
	if(--54){
	Jon /= -0.31;
	betray(bar(TABLE[TABLE[bar(Ygritte,Stark)][0.57 + ROWS]][-rule()],COLS),mislead(COLS) / Ygritte)
} else {
	if(destroy(mislead(( 390.969 ),--0.92),-Stark - rule(),-0.97) + ROWS){
	-47;
	y *= -0.99
} else {
	rule(Stark);
	if(Ygritte){
	x -= --ROWS;
	y -= -x + -foo(-( -0.03 ),--COLS * dog,( 600.1 ));
	Jon /= bar(dog) * TABLE[Hodor][( mislead(-Stark) / 23 * destroy(66,TABLE[dog * Sansa][COLS]) )]
} else {
	Stark + ( Ygritte );
	Stark -= Hodor;
	rule(--16)
};
	if(COLS){
	dog /= x
} else {
	if(---1){
	TABLE[Jon][0.01]
};
	COLS
}
};
	Ygritte /= -Hodor + -1
}
}
}
def TABLE[Arya][j] {
	Arya -= Jon;
	x /= mislead(COLS,COLS)
}
def destroy(Stark,Hodor,Stark){

}
def destroy(y,dog){
	--140.788 - ROWS;
	Hodor -= TABLE[-0.33 * --( -Jon )][( COLS - --74 )];
	if(-COLS){

}
}
assert -0.14 : "Winter is coming"
def rule(Jon,y){
	if(Jon + TABLE[( COLS )][-1 / TABLE[mislead(-0.02,--TABLE[mislead()][-COLS],( COLS + protect(Hodor,destroy(( bar() ),----ROWS + mislead(-0.4,-50),( 1 / ROWS + foo(( ( ROWS ) ) / betray(protect(68,betray(),COLS))) ))) ))][-TABLE[( rule(Sansa) )][Stark]]]){
	if(Arya * TABLE[foo(-TABLE[-0.32][( 640.099 ) + --1] + betray(Ygritte,( -0.17 ),protect(1 / destroy(protect(-COLS / rule() - ( Ygritte ) + ROWS,protect(( -0.02 ) + mislead(y,( -foo(Hodor) ),-Stark * 1))) / -0.92),COLS)),TABLE[-( -Jon - -0.16 )][-0.84])][-y]){
	if(x){

};
	if(( Jon )){
	if(Stark){
	( COLS ) + y;
	Jon *= -0.55 + 0.85 - ( ( 1 ) );
	Ygritte
} else {

};
	x -= 810.545
}
};
	bar(110.2749);
	Ygritte -= ROWS
} else {
	Stark += -TABLE[foo()][-( destroy() )]
}
}
var Hodor = TABLE[( ( Sansa ) )][COLS]
def destroy(Stark){
	foo(dog,COLS,y);
	Ygritte *= Arya;
	0.91
}
def TABLE[( 230.47 * ( 56 ) * Arya / 64 )][k] {

}
var Arya = 0.92
assert rule(--620.09,COLS) : "Fear cuts deeper than swords."
def TABLE[mislead(--0.18 - 0.92)][i] {
	Hodor += ( dog )
}
assert ( -bar(COLS,rule()) ) : "Winter is coming"
var Hodor = 85
var Ygritte = COLS
var Jon = 390.6 * -ROWS
def betray(dog){
	if(ROWS){
	if(1){
	TABLE[( ( destroy(( -( dog ) * ( 1 ) / TABLE[-1][mislead(Ygritte / mislead(-betray(y,( ( betray() ) ) + ( ( -920.4 ) ),ROWS) + -( -( ( --( ROWS ) ) ) ) + destroy(foo(-COLS,-460.9)),betray(Sansa,Ygritte,ROWS / TABLE[-78][( ROWS )])) - -1 - ( Hodor ) * y,destroy())] + 920.2801 * -destroy(ROWS) / TABLE[( -98 )][TABLE[destroy(ROWS,52)][betray(-x) - ROWS]] * ROWS )) ) ) / bar() * dog][Ygritte];
	Stark - -1;
	if(COLS){
	Sansa /= ( -destroy() + ( ( COLS ) ) );
	-1
}
} else {
	if(COLS){
	Sansa /= ( -76 )
};
	Hodor -= bar(0.05);
	if(93){

} else {
	-dog;
	Hodor += Ygritte;
	67
}
};
	if(ROWS){
	if(ROWS + -57){

};
	if(x){
	x -= -40.154
} else {

}
} else {
	Ygritte
}
};
	( Jon );
	Stark /= --betray(( ( -20.921 ) ))
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[940.71][j] {
	if(( destroy(-Hodor - -37) )){
	y *= rule(( -COLS ))
}
}
var Ygritte = --25
assert ROWS : "One can not simply parse himself"
def rule(y){

}
assert destroy(Jon) : "What do we say to the Lord of Death?"
def TABLE[( ROWS * 47 / TABLE[( -2 - Ygritte )][-( -1 - -27 - -5 + ( ( TABLE[-98][( Arya ) + -380.2699] ) ) * TABLE[( COLS )][0.26] )] )][j] {
	if(( ---bar(ROWS,-TABLE[betray(750.052)][COLS]) )){
	Sansa -= -Jon;
	if(84){
	if(ROWS){

} else {

};
	y *= 820.55
} else {
	Stark
}
}
}
var y = foo(-betray(x,COLS,betray(-0.86,-( --0.32 ))),ROWS)
var dog = ( -650.867 )
assert 1 : "One can not simply parse himself"
assert Arya : "Fear cuts deeper than swords."
assert protect(TABLE[( ROWS )][foo(-0.53)]) : "Fear cuts deeper than swords."
def TABLE[0.3][i] {
	Hodor *= -930.7
}
assert ( ROWS ) : "Winter is coming"
def bar(x,Arya){
	x -= Sansa;
	if(rule(TABLE[-820.68][( ( Sansa ) )] * 230.5,bar(-Stark / x / -ROWS,COLS),Stark)){
	if(destroy()){
	ROWS
}
} else {

};
	-COLS
}
def TABLE[--91][j] {

}
assert -ROWS - ROWS : "Winter is coming"
var Sansa = -COLS - rule(-3)
assert -0.38 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[ROWS * ROWS][0.78]][j] {

}
var Stark = ROWS
var dog = ROWS
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Arya,Arya){
	Jon
}
assert Jon : "Fear cuts deeper than swords."
def destroy(Jon,Ygritte){
	( --0.84 );
	mislead(ROWS)
}
assert TABLE[-0.83 * ( -0.78 ) * TABLE[destroy(bar(-bar()),TABLE[Jon][Jon],--27)][ROWS]][TABLE[ROWS][bar(protect(( ( ( ( rule(-( --betray(( ROWS )) / 87 ),-( ( ( -( TABLE[betray(betray(dog,Jon),TABLE[Arya][ROWS],COLS)][( 0.32 )] ) ) ) )) ) ) ) ) * -50),-1)]] : "Nothing burns like the cold."
def TABLE[0.7][i] {
	if(-TABLE[dog][protect(-0.86 + -dog / ( ( Jon ) ))]){
	-20.713;
	Sansa += -0.43
};
	Hodor += 0.54 * 1
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[( protect(( foo(COLS,65) )) )][j] {
	Jon *= mislead(Stark,-( Ygritte ),x);
	if(( ( -( -0.15 ) ) ) / 0.09){
	TABLE[-COLS][92];
	Arya * 0
};
	if(Stark){
	if(( Sansa )){
	Jon *= --Hodor + ROWS - y
} else {
	Jon += dog;
	if(bar(-TABLE[( bar(( ROWS ),destroy(( foo(-COLS) ),-COLS,-foo(--COLS,ROWS))) )][ROWS],( TABLE[-bar(-0.58,( ( ( -110.764 ) ) ))][COLS] + 950.5523 + Jon ) * 250.43)){
	-ROWS
} else {
	-TABLE[( Stark ) * mislead(--mislead(-COLS) - COLS,foo(-( -0.88 ),1)) - TABLE[-1000.689 * foo(-7)][Stark]][73 / betray() * -1 - -1] - ROWS
}
};
	-bar(COLS)
} else {
	if(( destroy() )){
	0.48;
	if(0.28){

} else {
	-0.19 / 0.74;
	Ygritte /= ( Jon )
}
} else {

};
	foo(890.7874 / ( bar(( destroy(0.5) )) + mislead(mislead(destroy(0.5,TABLE[-y + 89 + -23][Jon])) / ( -0.92 - mislead(betray() / COLS,86) )) * --COLS - ( Ygritte ) / Jon ));
	if(TABLE[betray(Jon,--x)][mislead(-( TABLE[( --mislead(mislead(-62,( -1 ) + bar(foo(( ( TABLE[-y][ROWS] - COLS ) + -Sansa + dog + ROWS ))) + x)) )][protect(-Ygritte,foo(COLS - mislead(-ROWS),Ygritte,TABLE[bar(( ( Ygritte ) ),( 37 ))][0.56]))] ),1)] - bar(-7)){
	Jon / Sansa;
	if(-COLS){

} else {
	rule(18,foo(protect()))
}
} else {
	Stark += -dog;
	y -= ( Stark )
}
}
}
var Sansa = foo(Arya)
def betray(y){
	0.67;
	x
}
assert betray(Hodor,Arya,bar(( COLS ),TABLE[--Jon][x * ( protect() )] / 0.54,( -1 )) + COLS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ( -ROWS * y )
def TABLE[-Sansa][j] {

}
def TABLE[rule()][k] {
	if(-1){
	y *= protect(-0.33,31,( -80 ));
	Hodor *= -Ygritte
};
	COLS
}
def TABLE[( ROWS )][i] {

}
def TABLE[( -0.1 )][k] {
	-94;
	Arya += COLS
}
assert destroy(19,( betray(destroy(protect(( -0.04 ),Hodor),destroy(COLS))) ),destroy(COLS)) : "What do we say to the Lord of Death?"
def destroy(Sansa,Stark){

}
def bar(){

}
def TABLE[destroy(y,( 68 ),--protect(rule(mislead(COLS,-( ( -ROWS ) ) / foo(-Hodor,( TABLE[x][( --31 )] ),ROWS - betray(Jon))) / -Ygritte)))][i] {
	if(-betray()){
	if(98){
	Jon;
	y /= foo(1) * -1 + y
};
	( -76 )
}
}
def TABLE[( ROWS )][i] {
	Ygritte += dog;
	if(ROWS){

} else {
	if(protect(52)){

} else {
	y;
	y *= COLS
};
	--COLS
}
}
def destroy(Ygritte,x,Arya){
	y -= protect(bar(TABLE[-( -0.6 )][bar(x,COLS)]),betray(( y * TABLE[( Stark )][Sansa] ),mislead(-COLS)))
}
assert rule() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[TABLE[Arya][TABLE[-33][x]]][j] {
	if(mislead(( 0.76 ))){
	dog /= ( ROWS - ROWS );
	Jon -= ROWS
} else {

};
	if(betray(Ygritte,( dog ),-51)){
	Hodor -= TABLE[1][-( rule(foo(dog / betray(( betray(-0.61,protect(-COLS) - 0.27) ) - bar(Stark,TABLE[( ( COLS ) )][( x )]),COLS)),COLS,-76) ) - -Arya * 1];
	Hodor /= -1;
	ROWS
} else {
	if(TABLE[( ROWS )][bar(TABLE[rule()][x],bar(-740.3),-0.12)]){
	if(COLS){
	Sansa /= betray(-( -( TABLE[ROWS][ROWS] / Arya ) ) * Hodor,ROWS);
	if(1){
	-0.96
};
	if(-TABLE[foo()][0.02] + ( -780.314 )){
	if(-71){
	--( foo() );
	Jon *= ROWS
} else {
	y *= ( -COLS );
	Arya -= ( protect(COLS,-TABLE[-Arya][-40],( -74 )) )
};
	Ygritte += TABLE[dog * ( TABLE[( --( -dog * COLS ) / Hodor )][TABLE[-0.3][94]] )][dog]
}
};
	if(ROWS){
	if(990.6032 + ( ( ( destroy() * ( ( ( 0.85 ) ) ) * -mislead(-mislead(ROWS),300.884,TABLE[( ROWS )][0.63 * Ygritte]) ) ) )){
	if(mislead(-0.02,-bar(-foo(0.08)))){
	x -= -Stark;
	if(-0.82){
	x -= Arya;
	Stark += Stark
}
};
	if(-1){
	if(( bar(0.25,380.52 / -TABLE[--COLS * Jon * -900.09 - ( bar(-0.14,ROWS) )][y],TABLE[( -0.69 ) + ROWS / x][-Hodor]) + ( ( ( destroy(COLS / -1 + -900.646 + ( Sansa ),x) ) - -TABLE[( ( 51 ) )][Sansa + Jon] + betray(y,ROWS * destroy(-Ygritte,-mislead(bar(( ( betray(87,COLS,COLS) ) - --TABLE[destroy()][-0.25 / bar(protect(85,-TABLE[--y * -TABLE[x][-1]][( mislead(-betray(-Stark)) )] / Stark,1) / -120.2946,Jon)] * 490.18 - ( Hodor ) )) / 0.86)) + ( betray(-( -42 ),0.78) ) - -protect(-0.25,-63)) ) / y ) )){
	if(betray(390.71)){

}
};
	-protect(TABLE[bar(( ( TABLE[ROWS][-Ygritte] ) ),Ygritte,TABLE[0.27][-mislead(ROWS)])][-0.82] + ROWS - Jon + Hodor * -( y ) - TABLE[( COLS ) - ( Arya )][-protect(--83,Ygritte)]);
	Ygritte /= ( TABLE[foo(( Sansa ) / ( --0.16 ))][( Ygritte )] )
}
} else {

};
	dog += Stark
} else {
	Sansa += 0.12
}
};
	Hodor += TABLE[( -0.34 )][0.81 / -Sansa / Sansa]
}
}
var Sansa = -1 * mislead() - foo(( --0.98 )) * -( ( -0.81 + protect(mislead(-TABLE[( Ygritte )][38],520.002,-x / COLS),-( protect(Ygritte,betray(Arya,TABLE[Stark][-foo(COLS,foo(-destroy(( -0.01 ),COLS,( 0.11 )),( ( destroy(-0.54,dog) - protect(TABLE[bar(( bar(--24) ),Sansa)][-Stark / Hodor],( -0.8 )) ) )))]),-1) )) ) + ( protect(protect(),-1) ) / -0.59 * -43 - x ) - COLS
var Ygritte = COLS
assert 83 : "Winter is coming"
def TABLE[( -( betray(( Jon / COLS * ( betray() ) / -680.56 ),Sansa) ) )][k] {
	1;
	Arya /= -ROWS;
	Ygritte += Arya
}
def rule(y){
	betray();
	dog *= 750.53 + destroy(ROWS,COLS / betray(-destroy(-( ROWS )),( -TABLE[foo(mislead(-betray(mislead(x,rule(),-ROWS),ROWS)),y,Arya) * 0.63][TABLE[COLS][-0.48]] )),COLS)
}
def bar(Hodor,y){
	y -= 58
}
var Ygritte = TABLE[ROWS][--TABLE[-Sansa][( foo(bar(-( ( --44 ) ),Arya,( -TABLE[protect(y,COLS * 400.696)][--0.47 * ( -15 )] / ( rule(Ygritte) ) )),( ( TABLE[( ( foo(Jon) ) ) / ( ( -x + mislead(-7) ) ) * --1 * COLS + ( ( ( COLS ) + ( -bar(ROWS) - ( protect(dog) ) ) ) ) - ROWS][-TABLE[-ROWS][mislead(-41,( -22 ))]] + foo(destroy(-0.34 / ROWS,( 1 ),Jon)) ) - COLS ),rule(1,( protect(ROWS) ),foo(COLS))) )] / y]
var Stark = Hodor
var Stark = --0.66
def destroy(Ygritte){
	COLS
}
var Jon = mislead()
var x = dog
var x = -1
assert dog : "What do we say to the Lord of Death?"
assert COLS + 63 : "Winter is coming"
def TABLE[Ygritte][j] {
	-11
}
var Ygritte = --( Ygritte + TABLE[80][Stark * -( -COLS )] )
def protect(Ygritte){
	COLS;
	if(( ( dog ) ) + ( ( ( --Stark * foo(--foo(( ( ( -( TABLE[0.55][--dog] ) ) / TABLE[( bar() )][( COLS / -Hodor ) * x] / destroy(Sansa,( ( COLS ) )) + ROWS / -59 ) ) / -COLS,bar(0.98 + destroy(COLS,-220.7,550.5),( ( ROWS ) ),-rule(-x)) / bar(TABLE[( Jon )][( ( ROWS ) )] + ( ( COLS - ( ( -57 ) ) ) ) + -83,foo(ROWS,( Stark - bar(foo(ROWS,dog)) )) - ( y ) + Stark)),-COLS) + ( -1 ) * -0.74 / bar(-76) ) ) * ( -( foo(Hodor,COLS) ) ) / -1 - dog )){
	Arya /= -Sansa;
	ROWS;
	Sansa += destroy(( destroy(Hodor,rule(COLS,destroy())) ),( COLS )) * ( 0.54 ) - -Hodor
} else {
	Arya += foo(protect(-( ( protect(-ROWS) ) )));
	Stark /= COLS
};
	if(--1 - Arya){
	if(foo(ROWS)){

} else {
	x /= Stark;
	if(Jon){
	if(( ROWS )){
	( Arya );
	Ygritte *= 0.68;
	if(( protect(COLS + ( -ROWS * 0.14 ) + Sansa / -bar(TABLE[ROWS][1 - Sansa])) )){
	if(-ROWS){
	if(17){
	TABLE[Stark][0.92];
	if(dog){
	if(COLS){
	foo()
} else {
	-1 + TABLE[ROWS][( -49 )] / ( -( -0.76 ) ) * betray() - Stark + x / -77;
	Arya -= 28;
	-( -560.77 * 460.6 ) - ( -ROWS / ( Stark ) - Hodor / ( ( -0.66 * Ygritte ) ) + bar(TABLE[ROWS][protect(----dog)],Hodor - COLS,( TABLE[destroy()][--0.72 / TABLE[-betray(betray(),26 * ( destroy(COLS,TABLE[Hodor][Sansa]) - mislead(-590.2 * -0.54 - -84) )) - -0.65 + 38 * ( destroy(ROWS,-40.86) ) / ( ( -foo(TABLE[destroy(1,x,( 670.49 ))][ROWS]) ) )][COLS] - ( COLS ) * -700.3] )) / ( mislead(( dog )) ) )
};
	ROWS
} else {

}
} else {
	-( -2 );
	Sansa -= --0.84 - Sansa
};
	Arya -= ( Arya )
} else {
	0.97 * ( -0.07 );
	Stark += COLS
}
}
} else {
	if(destroy(( 1 ))){
	( TABLE[ROWS][y] )
}
}
}
};
	if(( Arya )){
	Sansa -= COLS;
	if(-( ( -( Hodor ) - destroy(-Sansa,-( Jon )) ) )){
	dog += --94
}
}
}
}
assert COLS * -0.36 / Hodor : "What do we say to the Lord of Death?"
def foo(Hodor){

}
def rule(Hodor){

}
def TABLE[COLS][i] {
	dog += y
}
def TABLE[protect(---( --1 ))][j] {

}
def TABLE[( ( ( 0.21 ) ) )][k] {
	x *= TABLE[dog][0.46];
	dog *= COLS
}
def TABLE[foo(ROWS)][i] {
	betray(17)
}
def betray(Sansa,Ygritte,Stark){

}
def TABLE[mislead(COLS,COLS)][k] {

}
def TABLE[Stark * -( Arya ) * ( Jon )][j] {

}
var dog = rule(dog,( 3 ))
def TABLE[bar()][k] {
	ROWS;
	Stark -= TABLE[Arya][betray(-Hodor * ( ( -COLS ) ),ROWS - foo(betray(1,TABLE[Sansa * ( COLS )][protect(ROWS,dog + 0.08) - -1],-( ( COLS ) )),x,0.01) + COLS,Jon)];
	if(--Hodor){
	y /= ( ( ROWS ) )
}
}
def TABLE[( protect(TABLE[7][ROWS],-560.58 / 1 + protect(Hodor - ( ( Sansa + y ) ) + protect(-( y ),-rule(-7,Hodor),foo(800.15,( destroy(-0.73) + Stark ))) - ( ( Arya ) ),---12),( ( ---( COLS ) ) )) )][i] {

}
var Arya = 460.838 / ROWS
def rule(y,y,Arya){
	y += -Arya + 330.54
}
var x = -TABLE[( rule(Jon,-TABLE[94 + ROWS][TABLE[betray(-4,Stark)][( ( -mislead(ROWS * 14) ) )]]) )][Hodor]
def mislead(){
	Jon;
	if(dog){
	if(betray(dog,400.013)){
	TABLE[( -destroy(protect(-11,TABLE[ROWS][-( COLS )])) )][( -61 )];
	if(( 67 )){
	-0;
	TABLE[-74][betray() - bar(380.9,( betray(( mislead() + -COLS * ( ( 0.96 ) ) ),ROWS * ( foo(mislead(ROWS + ( -0.3 ))) )) ))];
	x /= COLS
} else {
	Stark *= COLS;
	if(-1){
	Sansa /= ( -( bar(foo(---39 / TABLE[0.11][-( ( betray(( -ROWS ),TABLE[( protect(-Sansa,ROWS) )][0.97]) ) ) / foo(( Sansa ),-0.22)],y,foo(COLS)),ROWS) ) )
} else {
	y /= x
}
}
} else {
	x /= -1;
	if(Stark){
	if(destroy(-( protect() - -ROWS - -810.67 ),x)){
	if(-1){
	Hodor;
	COLS
};
	Stark -= y
} else {
	if(( -y - -0.19 ) / ( mislead(x,Jon,Sansa) )){
	( 1 );
	Arya -= ( protect() );
	730.7
} else {

}
}
} else {
	( ( COLS ) + TABLE[foo()][1] )
}
};
	if(( --( ( TABLE[protect(( ( dog ) ) - ( protect(-( TABLE[( -dog )][( y ) * Sansa] ),rule(-82 + ROWS,x)) ))][TABLE[-12][( betray(( COLS )) ) + Sansa]] * -TABLE[-41][-840.2] ) ) )){
	if(TABLE[( -62 )][0.5]){

};
	Stark += -1
};
	Hodor += ( ( Jon ) )
} else {

};
	if(-COLS){
	Stark /= dog;
	-0.36
} else {
	x /= -1;
	Stark /= --49
}
}
var Jon = protect(Ygritte,destroy(ROWS,( ROWS ) + COLS,TABLE[-0.21][-COLS] * -0.48),( ROWS ))
def TABLE[bar()][i] {
	Ygritte += mislead(Jon) / COLS;
	0.39 * 1;
	if(COLS){
	Jon - bar(( destroy() / -dog ));
	--0.83
}
}
def bar(Jon,Arya,x){
	if(60){
	if(dog){
	Stark -= rule(destroy(-protect()));
	y += --52;
	if(-foo(destroy(( 5 )))){
	Sansa += COLS
}
} else {
	Hodor -= betray()
};
	Ygritte *= y * -0.39;
	-rule(y)
} else {
	-0.3;
	if(-580.4 * ( Hodor ) - 32 * Arya / 0.39 - ( destroy(( -67 )) )){

} else {
	COLS
};
	ROWS
}
}
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(y,Arya){
	-ROWS;
	--bar(( -COLS ),( TABLE[( ( -63 / dog + protect(( -protect(ROWS) ),protect(dog)) ) )][0.36] )) + ROWS / 30
}
def betray(){
	x;
	x;
	if(dog){
	Arya *= TABLE[( --0.01 ) * 0.02][bar(Ygritte,foo(destroy(Ygritte,--84,( --COLS )),530.45))]
} else {
	bar() - ( -Jon );
	--21
}
}
assert ( ( TABLE[Jon][Hodor] ) ) : "One can not simply parse himself"
var Jon = --bar(( ( y ) ),( ROWS ))
var x = Jon
def bar(Sansa){
	if(( Arya )){
	y -= ( bar(( ( -83 ) ) - ( -protect(ROWS) )) ) * --protect(protect(0.82,( Sansa )))
}
}
var Arya = 1
assert destroy(-110.3817,--COLS) : "One can not simply parse himself"
var y = COLS
assert bar(TABLE[( ( bar(-10.4,( -0.9 ),-y + ( 970.9 )) - ( ---0.15 - 0.36 ) / TABLE[foo(bar(betray(Jon,TABLE[TABLE[ROWS][ROWS] - -mislead(Ygritte / ( x ) + ( -84 )) + ROWS][protect(betray(-destroy(mislead(-0.99),( bar() )),-50),--x + ( 29 ))]),0.23) - ( betray(0.52) ))][Ygritte] ) - ( ( betray() ) ) / betray(COLS) - betray() + Sansa * ( --( 60.79 ) * 46 * ( dog ) + COLS ) - protect(ROWS) )][bar(foo(TABLE[( -130.51 )][1],( -( ( ( x ) ) + x ) )))]) : "Fear cuts deeper than swords."
var Sansa = COLS
def TABLE[ROWS][j] {
	( 0.37 )
}
def TABLE[COLS][i] {
	y += 0;
	if(destroy(y,-mislead(( bar() ) - ROWS))){

} else {
	0.44;
	TABLE[-foo(ROWS)][destroy(ROWS)];
	Arya += Arya
};
	if(COLS - -TABLE[TABLE[x][COLS * -( rule(betray(x,protect(--67,y,x) - -bar(-( ( ROWS ) ),protect(( COLS )))),-800.098,TABLE[( rule(-COLS) )][-Stark]) )]][TABLE[mislead()][ROWS]]){
	bar()
} else {
	-x
}
}
def TABLE[-dog][k] {

}
var Sansa = COLS + ( ROWS ) + Hodor
def TABLE[mislead(-Ygritte,Ygritte,( Stark )) + ( Hodor )][i] {
	if(bar(Hodor)){
	Ygritte /= ( -920.2 / betray(-44) * rule(Stark,( -( -0.8 ) )) );
	foo(y,0.56)
};
	if(ROWS){
	if(-ROWS - 80){
	foo(foo(360.26 - foo()) * destroy(( x ),Sansa,ROWS + -betray(( -64 ),310.38,( rule(( TABLE[Hodor * ( TABLE[-rule(protect(--COLS + ROWS)) + Ygritte][-73 / TABLE[TABLE[( dog - y )][-Sansa]][rule(Arya,Jon)] - COLS] )][0.65] / -betray(( betray(-86,0.45) )) - ( mislead(( -0.18 ),99 * Arya) + y ) ) + Arya,COLS) ) - -( COLS ))));
	Sansa * --1
} else {
	Hodor -= ( foo(ROWS,( TABLE[---1][--mislead(betray(-Arya + -( ROWS )),dog - -0.68) + 42] )) );
	if(TABLE[bar(-ROWS / COLS - ( ( 51 ) ),TABLE[ROWS][mislead(( ( 500.267 ) ))])][( x )]){
	-COLS;
	if(ROWS){
	dog /= Stark / -0.57
} else {
	if(1){
	if(( rule() )){

};
	if(Sansa){
	if(-190.197){
	-0.83;
	if(COLS / 0.641){
	( Jon ) + Arya;
	Sansa * 0.54 + protect(-0.3 - --rule(( ( 13 ) ) / TABLE[Hodor][-0.85],270.5,-( ( dog ) ) / ( -TABLE[-0.77][( 1 ) - Hodor] )))
} else {

};
	if(--6){
	Arya -= Arya
} else {
	if(( TABLE[( COLS )][COLS] )){

} else {
	( ( COLS ) )
};
	( ( 84 * -Hodor ) ) / ( ( Stark ) )
}
};
	dog
} else {

};
	-x
};
	Hodor += ( ( -0.64 ) )
}
} else {
	( betray(( ( COLS ) )) )
};
	if(COLS){
	0.47;
	if(betray(-390.9,-( ( ( -0.45 ) ) ),-0.79)){

} else {
	y += -( bar(( Arya )) )
}
}
}
};
	Arya /= TABLE[y][mislead(-24,COLS)]
}
def foo(Arya){
	if(( TABLE[TABLE[640.4][ROWS / -0.52]][-Jon] )){

};
	Ygritte /= Sansa
}
assert --0.76 : "One can not simply parse himself"
def TABLE[-0.87 + rule(-dog,-25 / 0.94) - COLS][j] {
	( ROWS )
}
assert protect(Sansa * -77) : "Winter is coming"
def TABLE[-Jon * ( ( -49 ) )][i] {

}
var Arya = TABLE[TABLE[TABLE[protect(COLS)][-Sansa] + 20][--16]][-( ---( rule(dog,( -71 )) ) )]
var Ygritte = ( Arya )
var x = -( Arya )
def rule(Stark,y,Ygritte){
	if(betray(-16)){
	if(-26){
	if(mislead(( ---dog ),rule(foo(rule(bar(( destroy(-58 / 0.4,TABLE[COLS][Sansa]) - 0.38 ),( destroy(COLS,rule(rule(TABLE[y][--foo(TABLE[TABLE[TABLE[COLS][y]][-0.26]][betray(8)] * ( ( TABLE[betray(ROWS)][COLS / 300.974] ) ))] * -60.76))) ))),Hodor + Hodor),y,( ( 0.84 * rule(--39) ) )) / ROWS + ( ( ( -( x ) ) ) ) + rule(Jon) * ( -TABLE[-1][COLS + Hodor / rule()] / ( ( x ) ) ),betray(TABLE[-( bar(TABLE[-1][rule(-TABLE[betray(x) - bar(COLS,destroy(),( -77 )) - betray()][foo(-ROWS)] * mislead(TABLE[Ygritte][x]) * COLS,foo(),( ROWS ))]) ) / COLS][-COLS],mislead(( destroy(-71) ))))){
	if(( --0.49 ) * x){
	COLS;
	COLS
} else {

};
	Ygritte *= ( ( Hodor ) )
} else {

};
	if(Ygritte){
	betray(49 - -( --7 * Jon ) / dog)
} else {
	Arya *= --930.17;
	x -= dog
}
}
}
}
assert ROWS / ( -( ( Sansa ) ) ) : "Fear cuts deeper than swords."
def TABLE[0.95 + ROWS - -21][i] {
	if(TABLE[( y ) * -rule(( Hodor ))][rule(-56 + COLS + 59,-destroy(betray(betray(0.99 * TABLE[70][( x )],Stark)) * -0.84,-150.204))]){
	if(46){
	if(Sansa){
	Hodor /= y;
	Stark
} else {

};
	370.317;
	if(( COLS )){

}
}
}
}
def foo(Ygritte){
	Sansa += Stark
}
var Jon = rule()
var Ygritte = ( -83 )
def TABLE[Hodor * ( ( 0.82 ) )][j] {
	protect(0.81,TABLE[( foo() )][-( --TABLE[1 / ( --TABLE[protect()][( protect() )] ) / -Stark][COLS] - bar(-280.3031) )] - betray(66) * Hodor) / mislead(TABLE[-COLS][( rule(( -( TABLE[protect(COLS)][( -82 )] ) + ( ROWS ) ),( TABLE[Stark][--29] )) ) - -ROWS * Ygritte + -( -1 / ROWS )]) * ROWS - 0.3
}
assert y : "Fear cuts deeper than swords."
var Sansa = ROWS
def TABLE[x][i] {

}
def TABLE[----( -COLS )][j] {
	Sansa / -560.55 - ROWS;
	if(-1){
	if(Stark){
	-18 + TABLE[( Jon )][-destroy()] - betray(-y) / ( -( -72 * bar(ROWS) ) )
};
	if(Arya){
	Ygritte += ( -ROWS * -betray(y,destroy()) );
	Hodor /= --61;
	dog -= ROWS
} else {
	if(dog){
	-COLS - 63 * -1;
	if(mislead(--1 * 70 + -69,Arya + -TABLE[-betray()][( -bar(82) )] + mislead(( ROWS )) + dog + y - 0.24 - ( -1 )) * -( Sansa )){
	98;
	if(protect(Ygritte,( protect(Jon,betray(TABLE[Ygritte][( ( bar(COLS,ROWS) ) )] - TABLE[( -Stark ) * ( ( ROWS ) )][-Ygritte]),( -1 )) ))){

} else {
	Arya -= betray(Sansa,-ROWS,--( destroy(COLS,x,COLS) ));
	if(bar(-Ygritte)){

} else {
	if(TABLE[TABLE[( 26 ) / Ygritte][bar(( -9 ))]][rule(TABLE[0.39][-( ( Jon ) * ROWS )])]){
	dog *= ( ( dog ) ) - Jon;
	Jon += protect()
}
}
}
}
} else {
	-19
}
};
	if(Ygritte){
	if(dog){
	if(protect(-51)){
	Ygritte
};
	Jon /= 690.739
} else {
	( 0 )
}
} else {
	x /= -foo(ROWS,Ygritte,COLS)
}
} else {
	ROWS;
	y += -protect(-40,protect(( -foo(ROWS,( ( bar(-85) ) )) + foo() ),Arya)) - mislead(( ROWS - Stark ),( 690.9846 )) * ROWS
}
}
assert ( x ) : "Nothing burns like the cold."
def TABLE[( COLS / ( ( 1 ) ) - y * Arya - --1 )][k] {
	( ( COLS ) )
}
def TABLE[protect(( -0.56 ) * -810.9048 + -( --rule(-0.48,COLS) / 320.59 )) + ROWS][k] {
	( 0.33 )
}
def foo(Jon){
	if(( --0.16 - mislead(betray(betray(y)),Ygritte - ( ( ( -Ygritte ) * mislead() ) )) - ( -95 ) )){
	dog /= -foo() * 500.537 * ( TABLE[COLS][0.85] );
	if(Stark){
	if(destroy(( -rule(( dog * ( -24 ) ),TABLE[COLS][Jon],--( Arya ) - -1) ),ROWS,mislead(x))){

}
} else {
	-protect(93)
}
} else {

}
}
var Hodor = ( rule(x,rule(1),bar(( ( Jon ) - TABLE[ROWS][COLS] ),( 1 )) / 0.81) * -0.82 / Hodor - rule(Sansa) )
var Jon = Ygritte - ( Arya )
assert y : "One can not simply parse himself"
assert foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte : "Nothing burns like the cold."
var Stark = mislead(( TABLE[rule(-14 / ( 0 ) + -Ygritte + Sansa,ROWS,bar(bar(),-ROWS * Ygritte) / 0.09 - TABLE[( 37 )][TABLE[Arya][Sansa]])][COLS] ),ROWS * TABLE[COLS][17],x / Arya)
assert -foo(-Sansa * Stark - Arya,-260.9) : "Winter is coming"
def TABLE[ROWS][j] {
	( foo(-850.4465,Arya - bar(-280.16,mislead(-57)) + betray(0,bar(( ( -1 ) ),Ygritte + -1) - 330.98),betray(COLS)) );
	-( COLS )
}
def foo(Hodor,dog){
	if(Sansa){

};
	Ygritte *= foo(COLS + 77,-( y ))
}
def TABLE[( --61 )][k] {
	if(-94){
	Sansa
}
}
def TABLE[-Ygritte][k] {
	if(Stark){
	dog /= Sansa;
	Ygritte *= ---( TABLE[destroy(y,rule(COLS / Hodor,( -1 )) / -0.02) / ROWS][TABLE[protect(( -0.92 ))][( 0.22 ) - -0.55]] )
} else {
	Hodor /= -TABLE[-Stark][Jon];
	bar(ROWS,-( -0.3 ))
};
	ROWS
}
assert ROWS : "Winter is coming"
def bar(){
	Arya *= 0 / foo(--Hodor / COLS * ( ( TABLE[( Ygritte )][protect(( Ygritte / Ygritte ),TABLE[( Ygritte + -76 )][150.6])] ) ));
	x
}
assert -protect(TABLE[ROWS - ( ( -42 ) )][( ROWS )]) : "Winter is coming"
def mislead(Stark){
	if(TABLE[( 700.32 )][-TABLE[betray() * TABLE[protect()][protect(bar(( -( ROWS ) ),-Arya),-Arya + -0.33,-( x ) + -71 + TABLE[Jon][-0.81 * TABLE[-bar(130.804)][dog]])]][-0.41]]){
	if(( ( 1 ) )){
	if(( protect(bar(Sansa,rule(destroy(-1,Hodor),-0.54)),84) )){
	Hodor += foo(Sansa,41);
	x += bar(( COLS ))
} else {
	-foo(protect(ROWS));
	x
};
	Stark /= -foo(( -410.27 )) + Sansa / betray(--( -Arya ))
} else {

};
	y /= -( x ) + -0.09 - protect(( -64 ));
	if(-1 / ( TABLE[-0.84 / -TABLE[ROWS][86 + 0.52 * 14 + --0.11 / COLS] * ROWS + -COLS][( Jon )] )){
	if(( x )){
	Jon /= ( ( ( -0.89 ) ) ) - ROWS;
	if(betray()){
	( 65 ) * ROWS;
	if(x){
	1 - Ygritte - -240.323 / -1;
	Stark += y;
	x *= COLS
}
} else {
	if(-dog / foo(( -0.23 * ( TABLE[Hodor][COLS / ROWS] ) ),betray())){
	-TABLE[-( 99 )][foo(( COLS ))]
} else {
	if(foo(protect(foo() - TABLE[83][COLS],-5,Stark),( ( ( ( ROWS ) ) ) ))){
	Arya += ( -Ygritte );
	if(COLS){
	rule(0.21,-54);
	rule(-protect(( ( ( --0.04 ) / y - -( betray(TABLE[COLS][Ygritte]) * -destroy(-72,( bar() )) ) * rule() ) ),rule(0.08,-1)) * x + mislead(0.73,COLS),380.3);
	-ROWS
} else {
	protect(rule(ROWS,-TABLE[Sansa][-370.329 * TABLE[-Arya - -0.19][( ( -0.1 - destroy(betray(ROWS),( ( 85 ) ),TABLE[-( ( 0.25 ) ) * Hodor][Sansa]) / ROWS ) )]],--30),TABLE[foo(COLS,-( foo() ))][-rule(0.31)],77);
	if(( ( ( Stark ) ) )){
	( -1 + Hodor );
	Stark += ( bar(450.17,--0.72) ) / ( -1 ) - betray(ROWS,( destroy(Ygritte,Stark,( ( ( protect(COLS) + Sansa ) * bar(-betray(),-( -( ( rule(Ygritte + bar(0.775,( ( mislead(( 16 )) / Sansa ) )) / ( Hodor + bar(( Arya ),57) ),Jon) ) - x ) ) + ( rule() ) + ( --0.98 )) ) )) ))
}
};
	Hodor
};
	x += ---1;
	rule(-0.55)
};
	Jon /= TABLE[0.99][( bar(ROWS) )];
	x -= ( -Hodor )
}
};
	if(rule(protect(mislead(Sansa,320.9206),0.7 / ROWS + betray(( ( destroy(-protect(Arya,-390.5949,Hodor) - --COLS * --bar(-0.85,( --Jon )) + Hodor * -foo() / COLS + rule(),( -COLS )) ) ),TABLE[mislead(Stark,0.18)][COLS])),Arya,bar(( 4 ),-1,( TABLE[Stark][-( rule() )] ))) / --bar()){
	dog -= Ygritte / -Ygritte / Jon / ( -TABLE[( Jon )][( rule(( protect(34) ),rule(--0.76,Ygritte),( betray(foo(TABLE[-59][-ROWS] * 0.9)) ) * ROWS) )] * mislead(( ( dog ) ) - Hodor + -620.24,( 65 )) );
	( mislead(dog / COLS - ROWS + --Ygritte - -46 + COLS - ( foo(( ( ( COLS ) ) ),-0.49,Stark) ) * -Ygritte + destroy(-16,( 0.66 * dog )) / Arya / Stark / Stark + -TABLE[Hodor][rule(COLS,ROWS)]) )
}
}
};
	( x )
}
var dog = dog - ROWS
assert foo(( ROWS )) : "One can not simply parse himself"
def foo(Jon){
	if(Arya - ( 1 )){
	if(( -16 )){

}
};
	if(( 1 - -( -24 ) ) * ROWS / -COLS){
	if(TABLE[foo(mislead(-protect(ROWS)),ROWS)][COLS]){
	Ygritte /= TABLE[450.126][-( 74 )]
};
	Sansa *= Arya;
	if(COLS){
	Arya *= ( Stark )
}
} else {
	--980.1;
	if(TABLE[2][5]){
	-protect(Arya,2)
};
	if(destroy(29) / COLS){
	Hodor *= -1;
	( ( 93 ) );
	y -= -0.11
}
};
	if(TABLE[Arya][Arya + TABLE[rule(1,COLS,-protect(--74 * Arya) * ( -( ( -Jon ) ) ))][-Sansa / y]]){
	TABLE[rule(-Jon * -foo(),-ROWS,rule(Sansa - dog + ROWS,( foo(protect()) )))][33];
	dog += TABLE[dog][betray()]
} else {

}
}
assert -87 : "One can not simply parse himself"
var Arya = ( mislead() )
var Sansa = TABLE[( --1 + Jon )][Hodor]
def mislead(x,y){
	if(ROWS){

}
}
assert --630.4 : "One can not simply parse himself"
def TABLE[Jon - ROWS][j] {
	if(TABLE[( ROWS ) * betray()][( COLS )]){
	COLS
}
}
assert --0.54 : "Nothing burns like the cold."
var Ygritte = -( --1000.407 ) - 0.04
assert Sansa - 1 : "Fear cuts deeper than swords."
var y = mislead(COLS)
var Stark = Stark
var Arya = TABLE[-0.44 - rule()][ROWS]
def TABLE[-1 / 48 + -4][k] {
	COLS;
	if(( -TABLE[--destroy(destroy(1,-( TABLE[mislead(y)][( foo() )] ) * Stark),TABLE[protect(( -22 ),-COLS) * protect(destroy(--21,COLS) * bar(Sansa,( -( Ygritte ) ) + 1),Hodor)][betray(betray(COLS,TABLE[( TABLE[( ROWS - TABLE[-Stark][-Hodor] * COLS - betray(( 93 ),TABLE[-rule() / ROWS][y] / 0) )][y] )][ROWS]) + ( protect(33,Stark / mislead(( protect() ) - COLS - -1,-destroy(-Stark),( ROWS )) / ( -y ),( 1 )) ),Stark)])][bar(( ( 1 ) - protect(Ygritte,-destroy(0.53 / dog,6 * ( Stark ))) ),bar(-41))] / --35 )){
	if(foo(protect(1) / ( ( ( ROWS ) ) - Jon ),ROWS)){

};
	dog += 50
};
	-Ygritte
}
var Arya = ROWS
var Arya = -62
assert ROWS : "What do we say to the Lord of Death?"
assert foo() : "Nothing burns like the cold."
assert COLS : "What do we say to the Lord of Death?"
def rule(Hodor,Hodor){
	if(( bar(( --550.488 ),-( -destroy() ) - -( 10 )) )){
	Jon /= destroy() * destroy() - Stark
} else {
	ROWS;
	97;
	dog
};
	y -= -28;
	if(-1 * ( -Arya )){
	if(( -0.31 )){
	dog
}
}
}
def TABLE[3 + ROWS][k] {
	if(Hodor){

};
	if(-( x )){
	x /= ( mislead(-( ( ( ( destroy(-46,-710.4744 - protect(foo(--0.46)),y) ) ) ) ) * betray(betray())) );
	if(Hodor){
	if(-56){
	x += foo();
	( bar(-1 - betray(-0.29) + TABLE[---( foo(( ( ( ( 0.91 ) ) ) ) * Sansa * --Sansa - 90 / protect() * Jon,-0.97 * 230.02,( -TABLE[( COLS )][TABLE[Arya][-protect(-( destroy(( mislead(0.46,betray(47,x) - Ygritte,( --COLS )) ),-0.37) ))]] )) )][1 - 0.61],ROWS,COLS) );
	COLS
} else {
	y += ( protect(Stark - destroy(ROWS / Sansa - ( betray(-protect(-( 15 ),Sansa,foo())) )) + TABLE[destroy(-0.64,( ( y ) ),COLS) - 1][-( ( destroy(COLS) ) ) + -710.3862],-( protect(ROWS) * destroy(( -TABLE[betray()][0.65] )) ),dog + 0.89) );
	if(destroy(--TABLE[( foo(betray(ROWS,y)) )][Jon],Arya)){
	--1;
	Sansa += -3
} else {
	Ygritte -= -630.3138
}
};
	Sansa;
	if(destroy(41) / ( ( ( -rule(TABLE[--foo(0.48) + dog][mislead(TABLE[Stark * ( ROWS )][-0.94],Hodor)],( TABLE[Ygritte + COLS - Ygritte][-0.31] )) / -19 + Arya ) - ( -protect(y,Hodor / ( ROWS )) ) + ( 63 ) ) )){
	rule(( Ygritte ));
	x *= 0.35 / ( TABLE[0.35][( -910.6 )] ) + Jon;
	Jon -= -1
} else {
	if(Ygritte){
	--19 * -ROWS;
	-0.67 + ( protect(-ROWS + ( ( ( 1 - -1 ) ) ),--mislead(protect(TABLE[Jon][0],ROWS),( -bar() + ( -67 ) )) * ( ( ( ( rule(----310.6,-foo(32,-1) + ROWS - rule(foo(COLS,-y),-mislead())) ) ) ) )) )
};
	if(-Ygritte - Arya){
	if(0.86){
	Jon /= ROWS
}
};
	mislead(COLS,( COLS ))
}
} else {
	Ygritte /= ( COLS )
};
	dog *= 0.85
}
}
def TABLE[( 0.72 )][j] {
	( Stark + TABLE[ROWS][-Stark] - ( ROWS / ( COLS ) + foo(-990.276,mislead(),--73) ) );
	1
}
var Hodor = ( 84 )
def foo(Stark){
	( -770.6214 * ( 1 ) )
}
var Arya = 0.46
assert ROWS * protect(COLS,x) / foo(( -foo(COLS,900.96,ROWS) )) : "One can not simply parse himself"
var y = mislead(( COLS ),-destroy(rule(destroy(--0.89) * mislead(( betray() )),Hodor),( -( ROWS / y ) ),mislead(990.533,-ROWS)))
def betray(y){
	if(dog){

};
	if(-( 480.89 )){
	if(protect(Hodor)){
	Arya += -0.18;
	if(Jon){
	if(mislead(0.46,x)){
	if(-mislead(-( COLS )) - ( ROWS )){
	destroy(protect(250.3249,-31),-( Sansa ))
} else {
	if(-ROWS){
	if(rule(Ygritte,( dog ))){
	y;
	if(-( ROWS )){
	if(foo(0.55)){
	if(( foo() )){
	--41
} else {
	Hodor /= Ygritte;
	Arya *= mislead(( ( --40 + -destroy(TABLE[ROWS + ( destroy(-Sansa,-foo(-0.19,( ( Sansa ) * destroy() ))) )][Stark],( ( COLS ) ) + -( foo(ROWS,Jon + ( protect(mislead(mislead(--protect(--0.49,TABLE[rule()][-mislead(TABLE[ROWS * ( protect(TABLE[-Stark / ( COLS )][( y )]) + 47 ) * Sansa][TABLE[-55 * -530.497 - 620.916][x]],440.675,32)],( bar() )) * x)),Jon + -destroy(-( 99 ) + 0.44) - rule(( -Jon )),rule(TABLE[foo(-46,( ( y * ( foo(48) / COLS ) + -Arya - -ROWS ) ) * ( ( rule(COLS,betray() - protect(bar(( destroy(( -73 ),0.16 / ( -( Jon ) + -970.36 )) ),-7) / --mislead(),Hodor,-1)) - ( ( 38 ) ) / --Sansa ) ),-ROWS)][destroy(--1)]) - betray(( ROWS ))) ) + foo(( rule(0.71) )),TABLE[COLS][protect(bar(0.24,0.15))]) )) ) - rule() ) / rule(),Stark,-0.37);
	Sansa -= COLS
};
	if(foo(destroy(-ROWS) + ( protect(-290.864,ROWS) ),bar(-( -bar(-900.02,betray() * x) + ( Sansa ) - destroy(790.695) * bar(betray(ROWS),COLS) )))){
	if(0.38 + ROWS){
	rule();
	if(( COLS )){
	COLS;
	--TABLE[rule(97)][-640.45]
}
} else {

};
	Jon -= ( -39 );
	if(-0.82 - betray()){

} else {
	if(x){

};
	if(( TABLE[1 * 0.9][betray(-0.96)] )){
	Sansa;
	y *= ROWS
} else {
	dog += -betray(-betray(( -foo(-( protect(( -580.569 )) ),( 71 ),( 78 )) ),mislead(),--COLS + foo(protect())),y)
}
}
}
} else {

};
	-1
} else {
	y *= COLS
}
} else {

};
	if(dog){
	if(-bar(( TABLE[betray(x,Arya)][( ROWS )] ),( betray(-16 - -61 - TABLE[ROWS][Ygritte / foo(TABLE[-36][betray(TABLE[betray(ROWS,destroy(( 0.95 ),( Jon )))][0.24],( -( foo(-( destroy(( Ygritte ),-910.4 / bar(TABLE[COLS][destroy(( Arya ),-rule(Hodor,( Ygritte + ( -rule(ROWS * -15 / ( ( -Stark ) / destroy(foo(bar(TABLE[1][--( destroy(destroy(y),ROWS) - 730.566 )] / --20 / TABLE[TABLE[-betray(-1,Hodor,COLS / ( -0.98 ))][mislead(foo() / ( -73 ))]][-270.579],bar(rule(ROWS),( ( -TABLE[TABLE[( betray(( 810.843 )) )][COLS / ( Arya )]][-0.04] - Ygritte ) ))),( destroy(Hodor) ),-800.26 - ( ( 86 ) * 36 ) * 0.41 + x),( betray(( -rule(rule(-0.21,( -protect(( -foo(-110.11,TABLE[-1 * ( Sansa )][52],-1) )) ) + -0.83),-0.27) * foo(( 1 )) / bar(10 / dog,-1) + TABLE[( ( Ygritte ) )][-0.67] )) )) * -1 * x - protect(Stark,0.38) ) + ( -2 ),( COLS ),Ygritte) ) + ( ( ( dog ) ) ) ),COLS),-TABLE[COLS][TABLE[dog][( ( TABLE[--23][Hodor] ) )]]) + -Sansa]) * 0.66) )) ) )) / -96],Stark)] * protect(protect()),protect()) ) - -0.49,Ygritte)){

} else {
	Hodor += 0.28;
	Ygritte;
	Hodor *= destroy(-0.31)
};
	-0.38
} else {
	if(y){
	if(dog / -40){
	Jon;
	Hodor
};
	foo(--0.8 / ( -Stark / Hodor * Stark - -mislead(bar(destroy(bar(COLS,-bar() + -47 + 34,-Arya + ( ( x + Hodor ) ) + -Stark),---450.09,Stark),Arya),660.655) ) - ---750.023 + bar(Jon,-Hodor) * -( 0.22 ) / -34 - ROWS * -Ygritte / protect(foo(( ---betray(Arya,Hodor,COLS) )),Stark,( Arya ))) * ROWS;
	dog *= foo(ROWS - ( bar(-Jon,bar(-37,-( -0.5 - -900.7 ))) ))
};
	Stark += -0.97
};
	if(Hodor){
	if(-( Hodor )){

};
	Hodor *= Arya;
	if(( -60 )){
	Sansa += ( 34 );
	x *= TABLE[-( -0.54 )][TABLE[( dog * --66 ) / -0.94][( -Hodor * -foo(1,rule(-( -460.92 )),-Jon) )]];
	COLS
}
} else {
	Arya /= Arya
}
};
	dog -= ROWS;
	Ygritte += ( TABLE[-COLS][TABLE[-0.15][-550.33]] )
};
	TABLE[mislead(-TABLE[0 * rule(mislead())][rule(-0.58,TABLE[0.04][Hodor])],TABLE[foo(-0.04)][-TABLE[-( -( 1 ) )][-1]] * Stark)][Arya]
}
}
}
} else {
	Sansa -= Arya;
	Ygritte -= ( -640.2937 ) * ( x );
	if(-Hodor - TABLE[betray(0.38)][1] / TABLE[betray(-0.46,-( --490.33 ),( 0.03 ))][-COLS]){
	Jon
}
}
}
assert -0.73 : "Fear cuts deeper than swords."
assert -870.514 : "Winter is coming"
var Hodor = -COLS
def TABLE[0.17][j] {
	75
}
assert 990.084 : "Nothing burns like the cold."
def foo(dog,x){
	Ygritte *= Ygritte;
	Sansa += 1
}
def betray(Arya,Arya){
	y
}
assert --62 / 850.2181 : "One can not simply parse himself"
assert ( -betray(( 5 )) ) : "Fear cuts deeper than swords."
var Arya = TABLE[protect(TABLE[TABLE[destroy(protect(),TABLE[x][COLS],( y ))][-0.81] * ( Ygritte )][protect(-1,rule(y),-( ( COLS ) - ( -0.91 ) + ( -betray(-Stark,-( x ),-ROWS) - ( ROWS ) + dog - -( ( 1 ) ) * ( 1 ) / 1 ) )) - ROWS]) / ROWS][ROWS]
var Stark = ( x )
var Sansa = x
assert x : "Fear cuts deeper than swords."
def foo(Sansa){
	if(0.36){
	-0.25;
	Hodor -= ( foo(Stark,Hodor) );
	90
};
	if(( --98 )){
	if(ROWS){

};
	Hodor *= ( Ygritte );
	Sansa += COLS
} else {
	-64;
	Arya -= foo(-( Jon ))
};
	Arya
}
var Ygritte = 0.7
var Hodor = ( Arya ) - Jon
def TABLE[x][j] {
	if(--protect(bar(),protect())){
	-dog
} else {
	x *= -240.2;
	if(TABLE[-0.84][-0.65]){
	if(y){
	Jon += TABLE[Arya][--85]
};
	if(x){
	( protect(-2,TABLE[ROWS][ROWS]) );
	Sansa *= 260.825
} else {
	-0.9;
	x *= ( -1 ) + ( Ygritte ) / -x
}
}
};
	( 1 )
}
var Hodor = dog
var y = ( x )
var Ygritte = -Ygritte
def TABLE[mislead(( 690.59 ),-COLS)][j] {
	if(( -1 )){
	if(Arya){
	1
};
	Ygritte /= y / foo(-0.75,( Ygritte )) / -ROWS;
	Sansa += ( 0.07 * Ygritte )
}
}
def mislead(y,Arya){
	Jon /= -1;
	if(( --Sansa )){

} else {
	Arya /= Ygritte;
	-ROWS - bar(--82 + ROWS,foo(( -TABLE[( ( bar() ) )][y] )));
	if(y){
	x *= -betray(ROWS / betray(0.14),780.79)
} else {
	Arya /= ( 0.49 )
}
}
}
assert -680.24 : "What do we say to the Lord of Death?"
def foo(dog,x,dog){
	Hodor += ( 63 );
	Arya -= ( ---( dog ) )
}
var Sansa = betray(( ( foo() ) ))
def rule(Hodor,Arya,Sansa){

}
var x = 0.39
def protect(y){
	if(--0.13){
	if(-( -91 ) * Stark - --( destroy(-( mislead(TABLE[Hodor][( ROWS )],----180.04 + -protect(),Ygritte - dog) ),53) - ROWS ) + -mislead(( 44 )) * --protect(Hodor,Jon / rule()) / 390.296){
	if(88){
	COLS;
	ROWS;
	if(TABLE[y][-0.35 - ( Arya )] / dog){

} else {
	if(( ROWS )){
	dog *= ( dog ) * ----rule()
} else {
	Arya;
	-( -210 / ( betray(--( Sansa ) * COLS - -1 + ( ROWS )) + x ) * TABLE[ROWS][protect(-50,--40)] ) + 1
}
}
} else {
	x /= ---0.3;
	Ygritte -= ( COLS );
	Jon *= -410.445
};
	x -= -1
} else {

}
} else {

}
}
def TABLE[Sansa][j] {
	Ygritte += -COLS + ( ( x ) * TABLE[Hodor][COLS] );
	Jon -= mislead(( dog )) - ( ( bar(-1,-( Stark )) ) * Stark * -( Arya ) )
}
assert -mislead(rule()) : "One can not simply parse himself"
assert 8 : "Nothing burns like the cold."
def TABLE[--( Jon )][j] {
	Sansa -= 1;
	Ygritte -= TABLE[TABLE[-1][( Sansa + ( ( -66 ) ) / betray(TABLE[( Hodor )][( -( dog ) / TABLE[mislead(ROWS,ROWS)][Jon] )]) - betray() / rule(-57) - COLS )]][--250.935];
	if(--Stark){
	if(Hodor){

} else {
	TABLE[Ygritte][COLS];
	-9 - TABLE[77][ROWS];
	Jon += ROWS
};
	Jon /= dog
} else {
	if(---( dog - 0 ) / -ROWS){
	if(mislead(TABLE[( --1 * ( ( mislead(Hodor,-220.979) ) ) )][foo()],COLS)){
	( ROWS );
	( destroy(1,COLS,ROWS / bar() / bar(rule(-Stark,-1),( -betray(( dog ) - ( ROWS ) * x - -0.84,protect(( -86 - foo(COLS) * ( ( -COLS ) ) ),x)) ))) )
}
};
	destroy(Jon,-Sansa - COLS - Hodor,rule(x * TABLE[destroy() / Jon][TABLE[TABLE[-( -1 )][ROWS - 0.34]][( 400.557 )]],TABLE[x][COLS]));
	mislead()
}
}
def TABLE[( ROWS )][j] {
	-ROWS * Stark;
	70.19
}
def protect(Sansa){
	x *= -0.62;
	y
}
assert ( ( COLS ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][j] {

}
def rule(Arya,Hodor){
	if(-destroy(destroy(--( --( ( ( ( -( ROWS ) ) ) ) ) )))){
	if(COLS + COLS){
	Stark /= -Arya / x;
	if(--620.08 + betray(rule(COLS,TABLE[-( Arya )][-( -rule(( dog )) )]))){

};
	Jon *= ( ( --ROWS ) )
};
	if(y){
	if(( 400.1403 )){
	dog
};
	if(Jon){
	if(Jon){

};
	if(-foo() - TABLE[-0.67][Stark] * COLS + -betray(-50,0.34)){
	--foo(betray(( ROWS )),( --0.02 - betray(-16) ));
	Jon += TABLE[-79 + 0.35][destroy(destroy()) - ( bar() )]
} else {
	COLS;
	Ygritte /= ROWS
}
}
} else {

}
} else {

}
}
def betray(Ygritte){

}
var Arya = -5
def bar(){
	1 + --rule() * -destroy(( -0.83 ));
	if(( -0.61 )){
	mislead(Ygritte)
} else {
	Sansa *= ( Hodor ) - ---ROWS / ( -( y ) );
	if(ROWS){

} else {

}
}
}
def foo(){
	x += protect();
	if(dog + 0.87){

};
	x *= ( Arya ) + destroy(( rule(-18,48) ),Arya,-bar(protect() - Arya,-Arya) + TABLE[-( -( x ) )][x]) * COLS
}
var Arya = ( ( TABLE[bar()][-0.76] ) )
def foo(Hodor,x,y){

}
assert ( -COLS ) : "Fear cuts deeper than swords."
def bar(){
	if(Ygritte){

}
}
def TABLE[750.1][j] {
	y *= --Hodor * protect(bar(-0.34,90),dog)
}
assert ROWS : "Nothing burns like the cold."
def TABLE[Sansa][k] {
	if(y){
	if(Sansa){
	if(Ygritte){
	TABLE[-( -Ygritte )][x];
	--TABLE[-93][( -610.593 )]
};
	Arya /= 0.36
};
	dog;
	if(protect(( ( mislead(0.03) ) ),y)){
	if(-ROWS){
	-Ygritte
};
	ROWS
} else {
	Stark -= rule(( ROWS ));
	if(protect()){
	if(89 / dog * COLS * TABLE[destroy(COLS,-0.11,-1)][1] / protect(-750.34,destroy())){
	x;
	--77 + mislead(bar(( foo(protect(ROWS,0.98),ROWS,Hodor) ) / x),0.74,-Sansa);
	foo() / protect(TABLE[( betray(700.83,-ROWS) )][-0.92])
};
	Arya -= Jon;
	Stark -= mislead(--Jon + -Stark)
}
}
} else {
	-0.7;
	( betray(Arya,( 1 )) ) / rule(Ygritte,( -0.16 ))
};
	x += 0.59
}
var y = -39
def destroy(Sansa){
	Arya -= ( destroy(COLS) )
}
assert COLS : "Nothing burns like the cold."
def TABLE[-0.43][i] {
	Jon /= rule(TABLE[160.711][--y]);
	45 / TABLE[( foo(( ( -x ) ),x) )][TABLE[Stark][260.816]] + COLS + ( ROWS )
}
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Arya,x){
	x /= ( -destroy(-y * foo(( TABLE[( 0.65 )][COLS] / -( ( foo() / x ) ) ),--( -77 )),ROWS) )
}
def foo(y){
	mislead(COLS)
}
var Arya = Hodor
var Stark = ( 0.07 ) / COLS * -rule(( protect() ),TABLE[-foo(81,COLS,Jon) * ( ROWS )][protect(ROWS,TABLE[COLS][COLS],destroy(destroy(-0.82,-20),-ROWS / 0.91 + betray(COLS,destroy(-TABLE[( TABLE[( Hodor ) - -850.1][59] )][( betray() ) + Arya],destroy(-580.45)),-47) - ( 13 )))],-mislead(Stark,91,-( ROWS ))) + betray(40.08) * -COLS
assert ROWS : "Winter is coming"
def rule(dog){
	Jon *= -TABLE[0.86][-rule(Hodor,-TABLE[x][( Stark ) - COLS + dog])] + -ROWS;
	if(86){
	if(( -Sansa )){
	-protect(rule(mislead(),protect(),TABLE[700.3728][mislead()]));
	if(-mislead()){
	( ( mislead(-1,91) * TABLE[-TABLE[0.24][y]][TABLE[Jon][-ROWS]] + y ) );
	if(( Arya )){
	-dog
};
	Ygritte *= dog
};
	Stark /= rule(ROWS / foo(TABLE[-COLS][COLS]),TABLE[( destroy(( Hodor )) )][y],ROWS) * ( ROWS )
}
} else {
	if(TABLE[ROWS][-33]){
	Sansa
}
}
}
def protect(y,x){

}
var Jon = COLS
assert -49 : "Fear cuts deeper than swords."
def destroy(){
	if(betray(( -160.95 )) - TABLE[----( ( TABLE[COLS][ROWS] ) ) + -( --330.47 )][-Jon]){
	Arya *= 970.38;
	Jon -= protect(290.5 / 0.99);
	Hodor *= y
} else {
	if(COLS + ( betray(betray(ROWS,ROWS),-foo(-( -8 + ( Stark / --47 ) * -1 ) / -0.85,COLS * Hodor / Jon),--7) )){
	Arya -= TABLE[-( -COLS - -betray() )][TABLE[( --80 / --1 )][bar(-1,bar(--0.73,-0.37,ROWS),( ( ( rule(--destroy(mislead(COLS,destroy(Arya,TABLE[Ygritte][TABLE[( ( -0.9 ) )][COLS]])))) ) ) ))]] / bar();
	Hodor *= ROWS
} else {
	if(Arya){
	( TABLE[( -COLS )][-Sansa] )
} else {
	if(( ( -Stark - Sansa ) )){
	if(-1){
	Arya *= ( COLS * -y + Sansa * ( ( --1 ) * ROWS ) );
	if(destroy(protect(-foo(( ( -betray() ) ),( -Stark * -1 * bar(ROWS,-( -( Sansa ) )) / --( Hodor + -ROWS ) ),( Arya ))))){
	if(Hodor){
	if(Ygritte){
	if(betray(destroy(-13,COLS,-Stark * -ROWS))){
	--Jon;
	y /= y;
	( -y )
} else {

};
	dog -= --( -( -97 ) ) / ROWS * -85;
	320.032
} else {
	--0.82
};
	y -= TABLE[( Sansa )][ROWS]
};
	840.927
} else {
	ROWS;
	( ( mislead(--40,1,-betray(COLS) + mislead()) ) );
	( -betray(( ( ROWS ) ),( -42 ),-670.61) ) - ( TABLE[-1][( foo(dog * Sansa) ) / mislead(ROWS * Arya) + Jon] ) - -bar() - -( 0.47 )
}
} else {
	if(-0.91){
	( ( destroy(-1) ) / Jon ) / ( -rule(-TABLE[( -0.77 )][Ygritte],32) )
}
}
}
}
}
};
	if(-betray(foo(0.18)) * Jon){
	( ( Hodor - -1 ) );
	-670.9;
	y *= 170
} else {
	if(-TABLE[( ROWS )][mislead(rule(mislead(-TABLE[ROWS][--1 - -10]),0.17),COLS)]){
	if(270.742){
	Hodor -= 47;
	Arya -= -( rule() ) + -ROWS
}
}
};
	0.9
}
def betray(y,Ygritte){
	Jon -= protect(-1 * x * --0.46 + -68 + Hodor);
	dog += 120.88;
	Hodor
}
var Sansa = TABLE[x][( 1 )]
def TABLE[-protect() / dog / foo(x,destroy(x,-1)) * ( y )][i] {
	Ygritte -= Ygritte
}
def TABLE[TABLE[( Sansa )][-ROWS / -y + Ygritte]][j] {
	TABLE[TABLE[rule(( 1 ),foo(-COLS - -94 / 0.4,protect(( ( ( ( --( ( TABLE[ROWS][--foo(x + ROWS,destroy())] ) ) * Sansa / ( -0.82 ) ) ) ) ),-62 - -Stark,bar(destroy(),( destroy(( 450.6 ),ROWS,Stark) )))))][Stark]][( ( Jon ) )];
	Arya += COLS
}
def TABLE[( --betray() )][k] {
	Hodor /= ( ( ( --TABLE[1][dog + -TABLE[Jon][COLS]] + mislead(Sansa / COLS - 1,TABLE[TABLE[betray(--540.137) / -1 + dog][10 + Stark]][TABLE[foo()][--550.5 - Sansa - Hodor] + rule(y,( 1 ))]) / ROWS ) ) )
}
assert betray(-52) : "What do we say to the Lord of Death?"
def TABLE[TABLE[( COLS )][16]][j] {
	Arya += COLS + -590.88 - -COLS
}
def betray(Sansa,Ygritte){

}
var Stark = 26 - ( ROWS )
def destroy(dog,Hodor,x){
	( x + 1 );
	-destroy(-( betray(-0.98) ))
}
def TABLE[( Sansa - rule(( COLS + betray(y,( protect(-y) )) ),rule(Stark),COLS) + x )][j] {
	Hodor /= -1
}
assert TABLE[-( -y )][y] : "One can not simply parse himself"
def TABLE[( -82 - ( -Stark ) )][j] {
	if(COLS){
	Sansa
} else {
	x += TABLE[Stark][-ROWS];
	if(dog){
	y -= --1
} else {

}
};
	if(bar(-( Ygritte ))){

};
	Jon *= ( Jon - Sansa + -85 * TABLE[Sansa][----0.61] )
}
assert 0.09 : "One can not simply parse himself"
var dog = COLS
def TABLE[--( -0.33 ) / mislead(91,( destroy(COLS) )) / Arya][j] {
	Ygritte -= --0.36
}
def protect(Ygritte,Arya,Arya){
	( ( Hodor ) );
	if(( rule(betray(Arya)) - ( 0.78 ) )){
	ROWS
}
}
var Hodor = -mislead(( -( ( -76 ) ) ),COLS,( -betray(0.65,( -0.33 )) * -COLS + protect(( 66 ),COLS) )) - x
def betray(x,Ygritte,Ygritte){

}
def bar(x,y,Arya){

}
def destroy(x,Ygritte){
	if(ROWS){
	Jon * COLS;
	if(x){
	0.1
}
} else {

};
	Arya += ( ( ( Ygritte ) / 0.51 ) )
}
def TABLE[ROWS][k] {
	if(( COLS - betray(-( Stark )) )){
	( destroy(rule(),COLS,COLS + --COLS + destroy(ROWS + TABLE[TABLE[( -13 )][( ( -foo(-350.993,betray(-68,dog,x),-70.08) ) ) / --28] + mislead(( ( y ) ),foo(Arya))][110.7],TABLE[( ( ( -79 ) ) - COLS + destroy(( Hodor ) - bar(( ( -55 ) )),COLS) )][destroy(( -63 ))],-1 * 600.142)) );
	if(x){
	Stark += --1 * COLS;
	x /= Jon;
	Arya += destroy(Ygritte,y,-90)
}
};
	if(ROWS){
	if(x){
	if(foo(ROWS,( COLS ),betray())){
	if(-( y )){
	if(ROWS){
	if(TABLE[-( --1 / ( -1 ) )][--10.3]){
	Sansa /= ( x )
}
} else {
	rule(-79);
	-dog - Ygritte + -0.41 - COLS
}
} else {
	if(COLS){

};
	dog /= -57
};
	if(-28){
	( bar(-( -Arya ),0.36,ROWS) )
} else {
	Arya -= -70
};
	if(TABLE[( ( ---( -66 - 1 ) ) )][mislead()]){
	if(y){
	Stark -= COLS
} else {

}
} else {
	( -protect(-420.0759,( betray(( -260.342 ),Hodor) / ( -dog - Hodor ) )) ) * ( ( x ) );
	x /= ( --0.65 )
}
};
	Ygritte /= 0.4 * -33
} else {

};
	if(-0.24){
	if(protect(( -rule(COLS) * 0.18 + -protect(Sansa) + TABLE[-1][-protect(-57 + betray(( ( mislead(( -mislead() )) ) + 0.77 )),Hodor)] - betray(Hodor,Sansa * -0.52) - TABLE[bar(-mislead())][destroy(63,-( ROWS ) - ( foo(-TABLE[-Hodor][Arya]) ))] ))){
	Hodor -= ( ROWS );
	if(-0.31){

} else {
	if(dog + ( Ygritte ) / ( Arya )){
	Ygritte /= y
}
};
	x -= ( ( ( COLS ) ) )
} else {
	Jon *= ( Sansa );
	Stark;
	Jon /= ( protect(bar(18,--0.84,foo(-COLS,1))) - foo(Hodor,Ygritte,-87) ) - ( -( destroy(( betray(Stark,rule(destroy(destroy(( protect(Hodor,-rule(Ygritte,( ( ( Arya ) ) ),0.65)) ),-660.584)),870.5574)) )) ) ) + -TABLE[ROWS][1]
};
	Jon -= TABLE[COLS][bar()]
}
} else {
	-1;
	if(x){

} else {
	TABLE[x][( COLS ) * TABLE[( COLS )][TABLE[( ( Hodor ) )][( Ygritte )]]]
}
}
}
assert ---79 : "What do we say to the Lord of Death?"
assert 200.256 : "What do we say to the Lord of Death?"
def TABLE[( --mislead(Arya,ROWS) ) - destroy(foo(-( -( foo(bar(),ROWS,0.83) ) - ( ( -160.213 / ( ROWS ) ) ) )),-Arya,rule())][j] {
	if(41){

} else {
	if(1){
	if(betray()){

}
};
	( TABLE[870.48][Stark] ) - -68 * TABLE[( --( -y / -360.143 ) - ( -( betray(Jon,-660.75,-destroy() - TABLE[( -0.58 )][bar(-0.26)]) ) * ROWS ) )][-0.1] + Arya / -0.05
};
	Arya *= ( -Ygritte );
	if(x - ( bar(-( ( x ) ),TABLE[-64][TABLE[foo(( bar() ),y)][---( destroy(bar()) / betray(mislead(-COLS),foo() + ( TABLE[-25 * 1 / Stark - --( ( --0.75 ) ) / y - COLS][TABLE[-510.751][--99]] )) ) / -COLS]]) )){
	x /= betray(70.071,rule(27,--( -ROWS ) / 71));
	if(TABLE[ROWS][ROWS]){
	Ygritte -= x + Hodor
}
}
}
var Sansa = -foo(foo(Arya,--mislead()))
assert ( TABLE[( 0.84 * ( COLS ) )][TABLE[( ( -( 1 + ( foo(COLS + COLS,-destroy(( 1 ) + -62 * 0.9)) + ( ( 1 ) ) ) - -( ( protect() ) - 47 ) - -dog / y ) + Jon + foo(rule(( ROWS )) + -betray(destroy(--81,-0.71),( protect(( ( Jon ) ),-( Sansa )) / 29 ) + mislead(-0.24,( mislead(protect(COLS,-1),bar(( -Arya ),( --34 )),( ( Arya - -Hodor ) ) * ( y )) )),rule(bar(Arya),bar(-mislead(ROWS,0.15)),rule(0.86 - Stark)) + -betray() * destroy(bar(),-Jon)) / rule(( -foo(rule(ROWS,protect(62),Sansa),Ygritte + Stark) ),Jon)) - ( COLS ) - TABLE[0.59][( dog - ROWS ) + -mislead(Hodor,protect(COLS)) + 740.0924] ) )][( -x )]] ) : "Fear cuts deeper than swords."
def mislead(Stark,Hodor){
	COLS;
	if(-ROWS){
	if(-0.69){
	if(( -210.027 )){

}
};
	if(-y - 350.068 * ( ( COLS ) )){
	Stark
} else {

}
};
	if(32){
	if(TABLE[1 * Sansa][-betray(COLS)]){

} else {

};
	foo()
}
}
def TABLE[Jon][i] {

}
assert --( 71 ) : "What do we say to the Lord of Death?"
def protect(Jon,dog){
	Hodor /= ( -( foo(destroy(foo(ROWS,-91,TABLE[y + betray(Ygritte) * 1][TABLE[-5 * COLS * protect(Stark,Hodor) / mislead(Arya)][COLS + -0.44] + -betray(( ( -( --TABLE[-Jon][Ygritte] ) - Hodor ) ))]))) ) ) - 0.34;
	Arya += ( mislead(Hodor - -TABLE[Ygritte][x],ROWS,TABLE[( ( y ) )][( Jon ) * COLS]) );
	if(destroy()){

}
}
var Ygritte = y
var Stark = bar(( protect(y / foo(( y ),TABLE[--mislead(--( -1 ) / rule(rule(COLS,( ROWS + ROWS / 0.07 )))) * TABLE[-( 28 )][56] - -COLS][mislead()]) * -0.58 * betray(),( Sansa ) + COLS) ),rule())
assert mislead(ROWS) : "Winter is coming"
assert Sansa : "Fear cuts deeper than swords."
assert ROWS : "Fear cuts deeper than swords."
var dog = --protect(betray(bar()) - --0.29 / ( betray(Jon) ),Ygritte)
def TABLE[betray(-Stark * foo(-0.44),Ygritte)][i] {
	if(( TABLE[-( Jon ) * Sansa][ROWS] )){
	y += ( ( ( Jon ) ) );
	Arya += -protect(-41,-( ( 0.15 ) ))
};
	if(Arya){
	COLS
}
}
def destroy(Ygritte,Hodor){
	( COLS );
	if(Stark){

} else {
	COLS
}
}
def TABLE[73][j] {

}
def TABLE[ROWS][j] {

}
var Jon = --0.35
def TABLE[68][k] {
	-( ( ( ( COLS ) ) ) * -( foo() ) );
	x
}
def rule(x){

}
var dog = Ygritte
def TABLE[-1][i] {
	Stark
}
var Sansa = ( Jon )
def destroy(Jon,Ygritte,Arya){

}
def mislead(){
	if(( x )){
	Jon -= ( ROWS )
} else {
	( ( --( foo(27,ROWS) - -( ROWS ) ) ) );
	dog += TABLE[ROWS][0.55]
}
}
var Sansa = -destroy(-Ygritte) * ROWS
var Jon = ( ( Sansa ) )
def rule(Jon,y){
	if(( -0.55 )){
	if(-36 - -0.01){
	if(x * 160.5792){
	880.091;
	if(( Jon )){
	y /= ( x + -( ( -dog ) ) - ( -2 ) )
} else {
	Hodor *= x;
	TABLE[rule(bar(-----0.42,-64,( Sansa )) * -3,ROWS + --0.93 * ( -1 ))][Sansa];
	if(mislead()){
	if(-0.21){
	if(-ROWS){
	protect(rule(-COLS,( betray(0.72) )),0.12 / --TABLE[COLS + 0.37][ROWS] - COLS,TABLE[-Ygritte + ( -betray(x) * 1 )][TABLE[-destroy(( Hodor ) / dog,-TABLE[Sansa][-0.18])][-16]]) + ( --130.833 ) / ROWS
}
};
	if(dog){
	dog *= betray(protect(COLS,( ( ROWS ) )))
} else {
	( ( Stark ) );
	-3
}
} else {
	ROWS
}
}
} else {
	if(( ( Arya ) )){
	TABLE[( Jon - ( ( ( ROWS ) ) ) )][TABLE[Arya][Stark]];
	protect(rule(( COLS * -1 ) - COLS / -x + ROWS - TABLE[Jon][Hodor],510.93 / COLS)) / betray() - -90.407;
	y *= Arya
} else {
	if(-betray(Hodor,ROWS)){
	dog /= Stark
} else {
	if(TABLE[( -( y ) - ( ( COLS ) ) )][-970.769 - COLS]){

} else {
	y /= ROWS;
	y += Arya;
	-31
};
	COLS
};
	Hodor
};
	COLS
};
	Arya /= Ygritte * --protect(COLS,-0.2,--mislead(Sansa,-49,69 + TABLE[( -1 )][-350.1781]) - ROWS) + COLS;
	y *= ROWS + destroy(-COLS)
} else {
	Jon /= -dog
};
	if(-Stark + -Stark + -bar(bar(COLS),180.72,Jon)){
	Sansa /= foo(1 - COLS)
};
	Jon /= ( ( -28 ) )
};
	( 600.4429 )
}
def TABLE[TABLE[bar(rule(foo(0.75,( TABLE[--TABLE[-( TABLE[ROWS][betray()] )][0.77]][Hodor] )),0.74),COLS)][( ( TABLE[bar(-560.3)][betray(Ygritte) - Stark * ( -ROWS )] ) )]][i] {
	x
}
var Stark = ROWS
def TABLE[Jon][i] {
	if(Sansa * ( ( -( 0.44 ) ) ) * -79){
	24
};
	if(-740.24){
	if(0.29){
	x += Jon
} else {
	TABLE[-( protect() )][TABLE[protect()][-0.9]];
	Sansa /= -72;
	Ygritte
}
} else {
	ROWS
}
}
assert ( ( COLS ) ) : "What do we say to the Lord of Death?"
def TABLE[COLS][i] {
	-betray(1,Jon - 1)
}
def TABLE[( -rule() )][i] {
	COLS;
	Arya;
	Stark -= 570.2
}
def destroy(Jon,Sansa){
	Arya *= dog;
	betray(63)
}
assert TABLE[mislead(COLS,-1 / ( bar(--71) ) - TABLE[TABLE[( mislead(rule() + Sansa,ROWS) )][COLS]][-( ( -TABLE[-910.63][0.19] ) )] - ROWS)][Sansa] : "Nothing burns like the cold."
def TABLE[foo(ROWS - -COLS,-69,x)][i] {
	Jon /= -COLS;
	Arya /= -210.22;
	dog -= Jon
}
assert ROWS - -( TABLE[-50.666][bar(0.74)] ) : "Nothing burns like the cold."
var Sansa = 36
var Ygritte = ROWS
def bar(dog){
	if(betray(ROWS)){

}
}
def TABLE[( --foo(bar(-protect(COLS,( Stark ),destroy(( ( ROWS ) )) + Ygritte + Stark) - 0.02 / bar() / -dog + 0.59 - destroy(dog,TABLE[-0.32][( ( x ) ) - mislead(bar(COLS,( COLS )))]) - Arya - COLS / -0.79,-1)) )][k] {
	Arya -= mislead(-( rule(( Arya ),ROWS,x + TABLE[( Hodor )][-360.3141]) ) / Arya * -bar(981,-Sansa + y) * -ROWS / COLS - 1 + bar(0.76 - --0.66,( -0.53 ),destroy(( ( ( Sansa ) ) ),-110.54,bar())),-( ROWS ) * ( -43 ));
	bar(( protect(--( 73 )) ),-COLS)
}
assert 160.55 : "One can not simply parse himself"
var y = 450.8
var Sansa = rule(rule(),-770.638,rule())
var Hodor = ( ( dog ) )
var Stark = -( ( -TABLE[( ( rule(y,Sansa) ) )][x] ) )
def TABLE[1][k] {
	x *= -41
}
var Sansa = protect(( --0.28 ))
assert -ROWS * ROWS / 46 : "Winter is coming"
def TABLE[ROWS / 0.15][i] {
	-ROWS / betray(destroy(( betray(( 11 )) ),mislead(260.47 * protect(( -y ) * rule(),-64 / TABLE[-ROWS - x][0.39] * Stark))),350 * rule(( ( 1 ) )),-380.7);
	( TABLE[COLS][Sansa] )
}
def destroy(){

}
def protect(y,Stark,y){
	if(( ( y - dog ) / -0.99 * Stark - mislead(bar(0.4,( -ROWS * ( Sansa ) )) + destroy(61,0.27)) )){
	-0.38
}
}
def rule(Jon){

}
def betray(){
	-0.86 * -bar(ROWS,bar(-0.24))
}
var Arya = ROWS
assert -y : "One can not simply parse himself"
var Hodor = Jon
var dog = 1
assert ( -0.14 ) : "Winter is coming"
var Jon = ROWS
def protect(x,Sansa){
	if(-0.71){

};
	Jon *= ( COLS )
}
var dog = TABLE[protect()][-0.31]
assert -0.37 : "Fear cuts deeper than swords."
def TABLE[Arya][k] {
	Arya *= Sansa;
	Jon *= 0.47
}
var Hodor = ( betray(0.31,0.81,mislead(0.51)) )
def destroy(Arya){
	if(( ( Stark ) )){

} else {
	-7;
	-0.83
}
}
def TABLE[( TABLE[protect(COLS,--Sansa,1)][( ( -TABLE[y][betray(bar(y,( bar(protect(COLS,110.4767) * -0.49 * Sansa,bar()) ) - ROWS / mislead(0.46),Arya),Ygritte) / betray(Arya)] ) )] )][i] {
	Sansa += ( Jon )
}
var dog = bar(1)
def TABLE[Arya][k] {

}
def foo(y,Hodor,Hodor){
	Ygritte /= COLS;
	if(17){
	( Sansa );
	if(destroy(( ( foo(y + foo(( Arya ))) ) ) / protect(dog,Jon,ROWS),-foo(mislead(--TABLE[foo(( ( TABLE[-1][19] ) ),( ROWS ),Arya)][Jon],( y ))))){
	dog -= -13
}
}
}
var Sansa = 64
def rule(y){

}
def TABLE[--COLS][i] {
	Jon += Arya
}
var Sansa = Ygritte
assert bar() : "One can not simply parse himself"
def rule(Jon){
	Hodor;
	Ygritte /= ( destroy(-1 * ROWS,( TABLE[( TABLE[( Ygritte - Arya )][TABLE[--bar(dog,ROWS) / ( 36 ) - -150.6218 * COLS][-53]] )][ROWS] ),-Stark) )
}
var dog = ( -1 )
def TABLE[betray(mislead(x * 860.3193,TABLE[Jon][Sansa],1))][i] {
	if(--COLS){
	-93
} else {
	Sansa -= ( betray(( protect(protect(),x) )) );
	-61
};
	--93
}
def betray(Arya){
	Ygritte *= mislead(destroy(Stark) + Hodor);
	( ( -0.32 ) ) - COLS;
	if(mislead(mislead(TABLE[--rule(-0.75) * ( ( --24 ) )][( -33 + -betray(x) - ( y ) * ROWS * ( -COLS ) )]))){
	if(Jon){
	if(( COLS ) + destroy()){
	TABLE[protect(-200.64,( -29 )) + destroy(ROWS) + ROWS / ( ( -0.94 ) - -53 )][-0.63];
	-( mislead(640.97,bar(0.68 / COLS,Hodor)) )
}
} else {
	Arya /= -mislead(bar(),( ROWS ),( -protect(COLS) + 1 )) * 350.9 / -x;
	--destroy()
};
	if(( COLS )){
	rule(TABLE[-0][COLS]);
	ROWS;
	Sansa += COLS
};
	dog -= COLS
}
}
assert betray(0.89) : "What do we say to the Lord of Death?"
def TABLE[foo()][j] {
	if(Arya){
	Hodor *= --840.078;
	-TABLE[( Hodor )][-0.13]
} else {
	Jon *= rule(TABLE[destroy(bar(betray(870.14,protect(( foo(COLS) * -66 ),Ygritte)),foo(63,-( rule(-87) ) * -foo(COLS),74 / foo(-dog * ( ( -y ) * ROWS ))),TABLE[Stark][Ygritte]),-( -21 ))][x],TABLE[-rule() - -0.14][TABLE[0.06][COLS]],foo());
	-( -540.6 )
}
}
var dog = destroy(( ROWS )) / destroy(Sansa,betray())
assert -87 : "Nothing burns like the cold."
def bar(Stark){
	if(Sansa){
	-1;
	y *= bar();
	if(( 0.11 ) - -COLS){
	( COLS );
	-( ( ( COLS ) ) );
	if(( --foo(( TABLE[protect(TABLE[COLS / --COLS + -Ygritte][bar(--880.37)])][( dog ) / ROWS] ) - destroy(protect(Sansa,COLS))) + ROWS - betray(Arya,( ( -( foo(x,Stark) ) + COLS ) )) * ROWS )){
	Hodor += bar(Sansa,( ----COLS / COLS ) / TABLE[240.94][-Arya - ( -Arya )] - -y / 68 / Arya)
} else {
	Jon /= ROWS
}
}
} else {
	rule(Sansa,foo())
};
	y /= 38;
	-33
}
def protect(Sansa){
	-ROWS
}
var x = destroy(TABLE[-bar(34,Ygritte)][-2],0.32 * dog,COLS)
var y = -0.82
def TABLE[-Ygritte][i] {
	Stark /= COLS
}
def TABLE[-betray(( betray() ))][i] {
	-ROWS
}
assert ( ROWS ) - ROWS : "Nothing burns like the cold."
def TABLE[-9][i] {
	Jon *= ROWS;
	Hodor -= x
}
def betray(Sansa,dog){
	y /= COLS;
	ROWS;
	ROWS
}
def TABLE[7 / TABLE[( dog )][0.71] / 160.7693][j] {
	Jon /= -bar(1,ROWS - ROWS,( destroy(x,1 * -foo(foo(( ( rule(foo(0.63),-ROWS) ) )),-y,69) * ( TABLE[Arya][TABLE[-0.19][foo(Ygritte) - Hodor]] ) / -80 - TABLE[bar(-0.77)][COLS]) ))
}
var Ygritte = -0.67
def TABLE[0.88][k] {
	if(-TABLE[x][Hodor]){
	if(( ( -ROWS ) ) * y){
	-( -bar(-COLS) )
} else {
	Jon += destroy(-Ygritte);
	y
};
	Jon /= dog * ( COLS )
} else {
	Ygritte /= betray(Sansa);
	dog /= foo(ROWS);
	ROWS
}
}
def TABLE[-ROWS][j] {
	if(-0.66){
	COLS;
	if(dog){
	6;
	if(0.98){
	Jon -= Arya
}
}
} else {
	Ygritte -= ( COLS )
};
	if(( ( COLS ) )){
	Sansa += ROWS;
	x *= mislead(COLS) + Sansa + rule()
}
}
def rule(){

}
var y = --( ( -destroy(( -( ROWS ) ),-x,---0.43) ) ) / -( -dog * protect(( dog ),-protect(bar(-mislead()) - COLS - mislead(ROWS),-( 6 + betray(500.8208 / COLS * -66 * mislead(COLS),( ROWS )) ),( ( Arya ) )) + destroy(1)) ) + TABLE[y][( TABLE[220.1][ROWS] )] + ( destroy(( rule() ),destroy(),bar(-2,TABLE[y][bar(Arya,mislead(( 0.43 )))])) )
assert protect(dog) : "Nothing burns like the cold."
def destroy(dog,x){
	Hodor
}
var x = destroy(COLS)
def TABLE[-0.34 / -mislead(-( ( ROWS ) ) - 61)][i] {

}
assert destroy(-ROWS) : "What do we say to the Lord of Death?"
var Arya = -0.83
def protect(y){
	betray(COLS * 1,betray());
	if(( -0.1 ) / Sansa){
	rule(( y - Sansa ));
	dog -= 1 * -0.97 * -72 / COLS
}
}
var Stark = -( rule(( destroy(x,rule(-220.9,COLS * Arya,( ( ROWS ) + -ROWS * protect(-Sansa,-0.64) )) - x) )) )
var Arya = ROWS
def TABLE[bar(betray(Sansa),COLS,( -0.8 ))][i] {

}
var Ygritte = --12 / ( ---ROWS / ( TABLE[ROWS][Arya] ) + Jon )
var y = --Jon
def betray(y,Sansa){

}
var dog = -0.43
var x = Hodor
def foo(Stark,Jon,Hodor){
	if(rule(bar(-0.06,TABLE[1][Arya]),ROWS)){

}
}
def TABLE[destroy()][k] {
	Stark
}
def TABLE[( -Hodor + mislead() + destroy(COLS + COLS / ( ( --870.4719 + ( ( protect(-86 / foo(dog,-Ygritte,--( -betray(Sansa,-ROWS / protect(rule(TABLE[( TABLE[COLS][74] - -0.49 )][bar(dog,( -0.97 ))],mislead(-dog,protect(ROWS))),mislead(bar(( -mislead(Sansa) / betray(( Stark )) )),ROWS + Ygritte)) - Stark) )),-ROWS) ) ) ) )) )][i] {
	y += ROWS;
	x *= Jon
}
def TABLE[49][k] {
	foo(ROWS,1)
}
def rule(){

}
assert bar(rule() / 18 / Stark,-0.96) : "One can not simply parse himself"
def TABLE[TABLE[-dog][-870.96]][k] {
	dog -= ROWS;
	Hodor -= ( foo(-TABLE[foo(( 350.6 )) + mislead(ROWS,ROWS) + ROWS / destroy(-dog + --0.71 + destroy(COLS) - -0.66,Stark) * y / -60 - ( y - destroy(( betray(( betray(bar(foo(ROWS,--foo(( rule() ),83),73),-( bar(( ---COLS ),-protect()) ))) ) - 97) ),mislead(COLS,dog)) ) * destroy(TABLE[ROWS - -89][-TABLE[COLS][( ROWS )]])][destroy(rule(--( ( COLS ) / COLS * Arya * bar() ),( -0.14 ),( -1 )),COLS)] - ( -Ygritte ),ROWS,( dog )) );
	-foo(( 40.34 ),( mislead(( -320.515 ),COLS,rule(-TABLE[( COLS )][( 430.9 ) + COLS])) ))
}
var y = mislead(COLS)
def protect(){
	TABLE[TABLE[bar(ROWS) + COLS][TABLE[( -91 )][x] + 14]][COLS];
	if(Ygritte){
	bar(-1)
} else {
	foo(bar(--36,--0.97 / ( ( -0.34 ) ) - -Ygritte));
	if(-y){
	-TABLE[TABLE[y - Hodor][ROWS]][( ( --( TABLE[-protect(--110.24)][ROWS] ) + ( ( x ) ) * x * ( COLS ) - ( ROWS ) ) )];
	Stark *= betray(0.61,( -0.95 ) - 670.68)
} else {

}
};
	dog += ROWS - COLS
}
assert -0.05 : "Fear cuts deeper than swords."
def foo(Ygritte,Arya){
	y *= 45;
	if(0.68){
	if(COLS){
	Hodor
} else {
	Jon /= Stark;
	Stark /= 32;
	Jon += 0.8
};
	bar(COLS)
};
	if(-0.12){
	160.34 + -TABLE[Arya][ROWS]
} else {
	TABLE[81][mislead()];
	Ygritte /= -COLS
}
}
def destroy(Sansa,dog){
	if(Stark){
	if(-50 * Sansa){
	if(Sansa * y / Ygritte){
	if(-1 + protect(-Sansa * ( ( TABLE[TABLE[TABLE[COLS][COLS]][dog]][-COLS] + ( ( ( mislead(Arya) ) - TABLE[1][-620.07] ) ) ) ) - 870.028,( Jon )) + --0.99){
	( Hodor );
	dog -= bar(-Sansa,Hodor);
	-Ygritte
} else {
	y /= Ygritte
};
	if(destroy(( -75 ))){
	if(10.306){
	Jon += mislead()
};
	if(rule(( -destroy(TABLE[foo(TABLE[Sansa][-1 + Sansa],0.13 * ( --Jon + y ))][-destroy(ROWS,foo(protect(destroy(x + -( ( destroy(mislead(-y)) ) ) + -85 - ( protect(x,ROWS,mislead()) )) * COLS)),bar(--foo(mislead(foo(Stark,bar(COLS,-COLS / Hodor)),--Sansa / ( Ygritte )))))],dog) ) * -Ygritte,0.48,--1)){
	dog -= ROWS
} else {
	dog *= ROWS
};
	if(-0.53){

}
} else {
	Ygritte /= -x
}
} else {
	x *= -1
}
};
	if(mislead() * COLS){

} else {
	if(-0.82 / --( betray(mislead(Sansa)) )){
	Sansa *= 41;
	if(( betray(Stark) )){
	if(210.514){
	if(TABLE[( mislead() )][-59 / 40] - rule(Arya * bar(bar(-TABLE[75 + x / ROWS][( ( --0.96 ) )],0.78),-27 / -COLS),destroy(COLS,-1),protect(rule(bar(-490.05))) * TABLE[ROWS][betray(( ( -6 * TABLE[protect(-( 18 )) * ROWS][-( ( rule(Stark * Jon) * Stark ) )] ) ),Sansa,ROWS)])){
	Ygritte -= COLS;
	-TABLE[1][Stark] / betray() * ( ( y ) );
	0.45 + ( -ROWS )
}
} else {

}
} else {
	Sansa -= ( Ygritte ) * Hodor
};
	Jon *= COLS
} else {
	if(TABLE[foo(COLS,ROWS)][-Hodor]){
	y /= ROWS
}
}
}
} else {
	if(-Jon){
	dog += ( 0.8 );
	rule(-77,destroy(Stark,x) + bar(( ( rule(--mislead(----COLS / TABLE[Stark][mislead(Jon / ( mislead(( -78 ),mislead(x,-bar(rule(),COLS))) ) * 75)],( -320.68 ),y / x + -TABLE[COLS][( dog )]) + dog - destroy(dog * foo(-protect(TABLE[rule()][Hodor],( 0.92 )) + foo(( ( -0.36 ) + 250.443 * 1 - ROWS ))),( Hodor ),-mislead()) * -( COLS ) + betray(betray(foo(),rule(dog))) * COLS - TABLE[Hodor][-0.93],dog) ) )),Hodor);
	if(( destroy(Ygritte) )){
	Stark += betray()
}
} else {
	if(TABLE[betray(( rule(( mislead() ) / bar(-0.05,foo(ROWS,-COLS,Jon))) ) / mislead(COLS,0.98),protect(-destroy(mislead() / -( COLS ),ROWS * dog,( Stark )) / -TABLE[ROWS][ROWS],-rule(17,0.43,( foo(( x ),( --1 - --y )) )) * COLS),-0.87)][betray(destroy(rule(),bar(-destroy(( -destroy(( --630.18 )) * Arya * bar(Jon,ROWS) ),( ( -500.728 ) + destroy(foo(-28 - -bar(--TABLE[-1][bar(Hodor)] - -83 / -COLS),( ( Ygritte / COLS ) / ROWS ))) / bar() * ROWS ),( COLS - betray(Stark) )))),-33,( protect(85,x,TABLE[Ygritte][-( dog )]) ))]){
	y /= mislead(-0.37,1 / TABLE[( y )][x],Ygritte);
	foo(betray(protect()),-0.65,-82)
}
};
	Stark -= COLS
};
	--1 * bar(-dog,TABLE[betray()][Jon])
}
assert -0.52 : "Nothing burns like the cold."
def mislead(Sansa,Sansa,Ygritte){
	Jon *= COLS;
	if(-Arya){
	Ygritte -= foo()
}
}
var Jon = mislead(( ( Arya + rule(-( foo(rule(Sansa) + -( rule() ) / ( mislead(Jon) ) / ( protect(Arya,ROWS,ROWS) - -Stark * ROWS - COLS - destroy(ROWS,( bar(bar(Arya,( COLS ))) )) + -78 * mislead(---75) / betray(0.14,( ---Hodor ),foo(foo(x,Sansa) / foo(48),-1)) * destroy(590.8,ROWS / -760.01) + -70 ),destroy(Stark * 38,foo(220.757,destroy(dog,-840.481,protect(mislead(( Arya )),( Hodor )) + ( -destroy(TABLE[rule(( foo(bar(110.7,-760.5,( Ygritte + mislead(85) + mislead() ))) ))][Stark],--( ( -1 ) ),( ROWS ) - ( ROWS + foo(ROWS) )) ) - destroy(5,-14))) + -Jon - ( -16 ))) ),1,Sansa) ) ))
assert --Hodor + ( ROWS ) / 1 * TABLE[( ROWS )][--0.41] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = rule()
def TABLE[( mislead() * ( Sansa ) )][j] {
	if(destroy(Stark)){
	Ygritte *= COLS;
	if(TABLE[( Ygritte ) / 0.11][TABLE[( Ygritte )][-Arya + Ygritte]]){

} else {
	TABLE[-TABLE[-betray(-1)][( -Stark - foo(-( mislead(protect(y,ROWS * ( bar() ) * ROWS,bar(Sansa)),rule()) ),y,930.089) )]][foo(-Jon - -1 + COLS,COLS,TABLE[mislead(( TABLE[-0.36 - ( -1 )][COLS] / dog ),--0.01) * ( TABLE[1][49] )][-0.62] * mislead(35))];
	if(( -mislead(-66,-y,-79) )){
	( ( ( ( ( COLS ) ) ) ) )
} else {
	if(( Hodor )){
	y += 9
};
	dog
}
};
	if(--Hodor - 1){
	if(( foo(Hodor) * ROWS )){
	if(( bar(mislead(),-49,( 330.6 )) )){
	if(TABLE[dog][foo()]){
	Jon /= 0.64;
	Hodor *= 1
};
	if(( bar(COLS) - x )){
	-0.31 / ROWS;
	Sansa /= -( ( Ygritte ) );
	if(Sansa){
	--27
}
} else {
	if(Jon + -COLS - -1){
	if(TABLE[rule(( ROWS ))][( -69 )]){
	dog -= ( ( 250.2 ) - betray(foo(y,protect()),Ygritte) )
} else {
	if(-( ( 96 ) ) * foo(760.9125)){
	ROWS;
	if(-35){
	y *= ( y );
	-( Ygritte )
};
	-74
} else {
	Stark /= --bar(-72);
	if(bar(--foo(( 24 )),( -( 0.28 ) ))){

} else {
	Sansa -= destroy(350.93,x,betray(( 72 ),ROWS));
	if(-87){
	if(720.3538 + foo(Hodor)){
	x -= -( COLS );
	destroy(TABLE[( -x )][( -1 )],mislead(TABLE[ROWS * TABLE[TABLE[-( ( COLS ) )][COLS]][-( ( -0.02 + COLS - ( --COLS ) ) ) - -betray(-1,bar(ROWS,Jon)) - destroy(-foo() * --y,( y ),-59) * ----x]][( COLS )] * --COLS / betray(( x ),-( foo(destroy(-Arya,( protect(( betray(-( destroy(ROWS,88,( destroy(TABLE[--Ygritte][ROWS],Sansa,-protect()) )) ),foo(COLS,0.27,dog / -ROWS * TABLE[COLS][( 0.8 )])) )) ) - -Arya,0.82),( ( ( bar(-destroy(ROWS)) ) ) ) * ( rule() ) * betray(-bar(ROWS,-85 - rule()),protect(-bar(( -protect(Sansa / ROWS) ),--70),-protect() * dog))) ) * 43)));
	Ygritte
}
} else {
	if(y / TABLE[( ( TABLE[COLS][( foo(Hodor,x) )] ) ) + TABLE[( rule(-Sansa / Sansa,-betray(ROWS)) )][TABLE[64][ROWS / ROWS]]][-0.68]){

};
	Hodor -= Jon;
	if(rule(protect(mislead(COLS,dog)),-COLS - Sansa)){
	if(rule(80.48 - COLS,rule(-TABLE[ROWS][( 1 )] / rule(-Arya,ROWS),protect(--COLS,COLS,1)))){
	Sansa *= -rule(-21,ROWS);
	Jon += --foo(COLS,bar(Hodor - foo(-690.4835,-( ROWS )),Jon));
	if(( ROWS / ( destroy() ) + ---ROWS + --( COLS ) )){
	if(COLS){
	Hodor += TABLE[COLS - ( -dog )][Hodor];
	Jon -= ROWS
} else {
	if(0.03){
	if(( ( -0.37 ) )){
	-( COLS );
	if(1){
	dog -= Jon
} else {
	Arya += -0.58;
	0.06;
	Arya
};
	-betray(TABLE[-0.98][TABLE[betray(Stark,-390.96)][Jon] + COLS])
} else {

}
};
	y -= ROWS
};
	Ygritte -= 88
} else {
	if(foo(76)){
	if(rule(-Jon,-rule(),0.06)){

};
	if(betray(protect(-( ROWS * -1 * --1 - TABLE[ROWS][ROWS] ),-0.38),1,mislead(-Jon - x - rule(--mislead() * -84,-Arya - COLS / -( ( -( ( x ) ) * --26 ) * ( 0.97 ) ) * rule(( ROWS ),-0.54,protect())) - y,y) - Jon)){
	TABLE[Jon][--COLS + bar()];
	if(-destroy(-570.71)){
	dog *= ( -COLS );
	-0.7
} else {
	Stark += foo(Ygritte,( --390.47 ) + bar(x,800.774 - -COLS),( -0.63 / protect(-15,ROWS,( Jon * ROWS / COLS )) ));
	dog;
	-0.92
}
};
	( 710.917 ) / destroy(21) / ( Stark ) * Sansa
} else {
	y += ( --betray(0.92) / betray(mislead(mislead(-mislead())),-26 - y) - Sansa / ( betray(-90) ) - -Sansa )
};
	COLS
}
} else {
	-0.46;
	Arya *= ( TABLE[y][Stark] )
};
	if(destroy(TABLE[dog * --COLS][-x],TABLE[-mislead(bar(COLS))][-60],--430.2)){
	Stark *= Sansa;
	-( -destroy(TABLE[TABLE[Jon][foo(( destroy(-38,720.57 * -TABLE[rule(ROWS,destroy())][-0.28] / bar(620.73) * -53 + -84 + TABLE[Jon][47],TABLE[--Jon * Stark * Sansa][COLS]) ),protect(Hodor),COLS)]][--rule(( -290.05 / Sansa + rule(protect(protect(),betray(rule(y)),-57)) + ( ( ( ( Arya ) ) ) ) * ROWS ))]) )
};
	Sansa *= TABLE[-( betray(x,-95,protect(protect(ROWS,( 0.34 ),( foo(( TABLE[COLS][Ygritte] )) )) - ROWS,( -380.663 + Hodor ),TABLE[( betray(Arya) )][Ygritte])) )][( rule(ROWS,0.14) )]
} else {
	if(protect(0.86)){
	Arya += dog
};
	Sansa += -Stark - ROWS;
	if(x){
	ROWS
} else {
	( 63 );
	if(-dog){
	if(ROWS){
	if(( mislead(destroy(--protect(Jon),-COLS),Ygritte / Ygritte,( -670.43 )) )){
	if(COLS){
	if(( TABLE[COLS][( ( Arya - --foo(-860.6) * TABLE[-protect(-87,740.791)][Ygritte] ) )] )){
	if(--230.14 * foo(-rule(( 94 ),COLS,-Sansa),bar(13,dog / ( ROWS ),-0.86))){
	y /= -1 / ( --0.09 * protect(protect(),Hodor,ROWS + dog + 0.7) * Arya + protect(Hodor + ROWS) - Ygritte * ---0.8 * foo(( --240.5527 ),( -0.03 / ( bar(-920.4677) * ( -19 ) + mislead(Jon) ) + 350.3 + Ygritte ),foo(ROWS) + Hodor * ( 730.71 )) );
	Stark -= COLS
};
	1 - -0.56
};
	if(-rule(COLS * ( y ))){
	if(mislead(-0.05,( ( dog ) ))){
	x += TABLE[( -dog / -50 )][( 0.45 )];
	ROWS
}
} else {
	TABLE[foo(-mislead(protect(TABLE[-protect(TABLE[-( mislead(bar(1,bar(18)),( y * COLS ),58) + -70 ) + foo(-22) - ROWS / -( TABLE[( -mislead(mislead(COLS,dog),y,( ( 0.51 ) - COLS )) )][-770.49] ) + -0.65][( ROWS )])][betray(ROWS)])))][-1] * -rule(-TABLE[-1][1 + 170.14] / -81)
}
} else {
	Jon /= -50;
	TABLE[980.04][--0.85]
};
	Sansa -= ( Hodor )
};
	Sansa /= destroy(dog)
} else {
	Hodor += -ROWS - --rule(COLS)
}
} else {

};
	if(Arya){
	53;
	COLS
} else {
	( ( Stark ) )
}
}
}
}
}
};
	if(-( --( foo(( -19 * x )) ) )){
	bar(mislead(COLS),--250.0941);
	Hodor -= protect()
} else {
	if(-protect(Ygritte)){
	mislead(-1,dog,( foo(destroy(rule() - -0.06,rule(( COLS - Arya ))) * TABLE[protect(x)][-0.84] + -x) )) * 0.89 + ( TABLE[Arya][( protect(-( mislead(( destroy(( ( ROWS ) )) )) ),-COLS / y / --( --COLS ) + ROWS - ( Hodor ) + ( 1 ) + 0.12) + Hodor * -0.86 )] )
} else {
	( Arya )
};
	dog /= -Stark
}
};
	Jon += -foo(--0.13)
}
}
}
} else {
	Sansa /= --0.24;
	Jon *= Jon
}
} else {
	Hodor -= COLS
}
} else {
	Jon *= ( ( TABLE[ROWS][bar(-1,--0.6 + Hodor) + mislead(destroy(-( ( Arya ) ))) - 44 + ( ROWS )] ) )
}
}
def mislead(Sansa,dog,dog){
	if(COLS){
	y += bar(mislead());
	x *= -16
} else {
	Sansa /= mislead(-( ROWS + -0.13 + ( Stark ) ) + COLS,1,TABLE[Ygritte][-rule(--rule(),( ( betray() ) ))]) * protect() / COLS
};
	Sansa += COLS;
	Hodor /= destroy(-Arya - ( COLS ) * protect(),ROWS,COLS)
}
def TABLE[ROWS][i] {

}
def TABLE[( Hodor )][k] {
	---41 * -( TABLE[bar(destroy(mislead(-0.08,TABLE[( Jon )][Hodor]),TABLE[dog][dog * ( Arya )],--1),Stark)][protect(mislead(( 3 ) - Jon),-dog,( y ))] );
	x -= TABLE[x][Ygritte * ( ( COLS ) )]
}
def protect(Sansa,x,Sansa){

}
def TABLE[-( mislead(TABLE[COLS][TABLE[( -betray(ROWS,----13,Ygritte - ( -x )) )][Ygritte]],destroy(bar(Ygritte),-200.297 + -200.397 / 990.71 + ( 4 + Ygritte ) * destroy()),Jon) )][j] {
	if(( ( -29 ) )){
	Ygritte *= 38;
	-( ( Stark ) )
} else {
	Sansa;
	Stark -= ROWS;
	Jon -= -( ( y ) ) + Hodor
}
}
def destroy(Hodor){
	Jon *= foo(-0.25);
	-Stark
}
var Stark = 33 / ROWS
var Jon = destroy(( -ROWS - Arya ),ROWS - protect(0.62,Sansa)) - 1 - -betray(--bar(-10,destroy(),0.83),-ROWS)
assert --( 64 ) * -0.99 : "One can not simply parse himself"
def protect(y,Hodor){
	Ygritte /= -Sansa;
	Sansa += -59;
	Stark *= 94
}
assert ( 740.59 ) / -ROWS / 1 * -ROWS * -87 : "Fear cuts deeper than swords."
def TABLE[-1][j] {
	dog /= x
}
def TABLE[COLS][j] {
	if(--0.72){
	if(1){
	Jon *= -foo(-40)
} else {

}
} else {
	bar() / ROWS + Hodor;
	if(TABLE[--1][Stark]){

} else {

}
};
	y
}
assert -mislead(ROWS,-Hodor / Stark) : "Winter is coming"
assert -87 : "Nothing burns like the cold."
var dog = betray(foo(protect(TABLE[foo(( ---COLS + ( -( Ygritte ) ) ),COLS)][dog],--79,COLS)),-100)
def TABLE[-TABLE[Jon][( TABLE[-790.456][destroy()] ) - -( ROWS )]][i] {
	foo(betray(( -Arya ) - Sansa,0.42),( ( 18 ) ),ROWS);
	Sansa
}
assert ( ( Hodor ) ) : "Fear cuts deeper than swords."
assert ( 0.02 ) / 0.03 - -0.93 : "Fear cuts deeper than swords."
var y = COLS
def TABLE[mislead(rule(),-34) + foo(foo(-72) * foo(Sansa,( x ) * Jon - -0.65,( protect() )),protect(0.89) / ( 0.04 + ( -rule(-53) ) * -0.81 + 1 )) / rule(--92,0.83)][k] {

}
assert ( --mislead(-490.4589,betray(-760.8367,Arya)) ) : "What do we say to the Lord of Death?"
def mislead(){
	if(Arya){
	x;
	x *= ( ( x ) - Stark )
};
	if(COLS){
	if(-29){
	y *= Sansa;
	Arya /= betray(--34)
}
}
}
def TABLE[COLS][j] {
	if(Jon){
	-43
};
	( ( ( y ) ) )
}
def destroy(){
	if(-Arya){
	Ygritte * TABLE[foo(( -Ygritte ) - bar(( dog )),( TABLE[Sansa][-54] ),TABLE[-530.8 / protect(-80.5237,dog) + -1][mislead(0.26,Arya,-( -52 / Ygritte - COLS ))])][( -0.24 ) * x + Arya]
} else {
	dog -= COLS
};
	( 1 )
}
assert ( ROWS ) : "Nothing burns like the cold."
var Ygritte = betray()
var x = --( ( Arya - 15 ) ) - COLS + -TABLE[destroy(( ( 0.48 + ( ( ( betray(-83) ) ) ) ) * protect(destroy(--( COLS ) - 84,-Hodor,COLS),COLS * Sansa,-x / COLS) ),TABLE[Arya][Ygritte],( COLS ))][Jon / ( 70 )] - dog / ( 120.5 )
var y = destroy(( ( COLS ) ) + COLS + 0.67,ROWS,( COLS )) - -( protect() )
def TABLE[-1][k] {
	if(protect(--0.45)){

};
	if(rule(--( ( --290.91 ) ),( COLS ) + 640.95)){
	foo()
} else {
	if(-TABLE[protect(protect(destroy(),-destroy(TABLE[80][-Sansa],( TABLE[1][Stark] )),ROWS))][---( --Stark ) - -1 * 1] + COLS){
	Stark -= --( -COLS )
} else {
	if(-Hodor){
	Jon += Ygritte
}
};
	Sansa -= ( protect(betray(dog,1 / Hodor),---0.72) )
};
	if(foo(destroy(COLS,1))){
	protect(( TABLE[ROWS][COLS / Hodor] ));
	-bar();
	if(-x){

}
}
}
def TABLE[foo(-COLS,-Hodor / COLS) + ( ROWS )][i] {
	( --( --foo() + -( ROWS ) - Ygritte + Sansa / -80 / ( ( betray(-( -66 / betray(-0.77) + COLS )) ) ) ) * bar(( ( --860.0712 ) )) ) - -Ygritte;
	-29
}
def rule(Stark){
	dog *= ( ( -82 ) ) / -67;
	Ygritte;
	rule(ROWS,protect(bar(Ygritte - protect(-0.75)) - ( ROWS )))
}
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy()][k] {
	Arya /= COLS;
	Hodor /= 1
}
def TABLE[( -Sansa )][i] {
	if(ROWS){
	Sansa += x;
	if(-2){
	if(-150.5){
	if(80){
	if(x){
	Arya /= -Sansa;
	if(( -COLS )){
	if(COLS){
	ROWS
}
} else {
	Hodor -= COLS - --0.61;
	Hodor
}
}
};
	y *= -Hodor;
	if(Sansa){
	if(TABLE[58][---( ROWS )] / ROWS){
	y += foo(( ( ( dog ) ) + bar(COLS,1 * Stark,-38) ));
	-0.81;
	if(protect(-( Sansa ),TABLE[Jon - ROWS - -mislead(( 1 ))][-betray(ROWS)],bar(Hodor,-protect(mislead(-0.36,protect(( -11 ),--0.15,ROWS)),ROWS / -78 / -Hodor + ( -0.74 ) * ( ( -0.58 ) ),( Stark ))))){
	if(( y )){
	if(30.7){
	( -0.18 )
} else {

};
	TABLE[-68][-COLS]
}
}
} else {
	COLS
};
	Arya -= -550.6538 + y
}
} else {
	rule(protect(-1),1);
	if(( 0.03 )){
	if(--66){
	if(1){
	Jon;
	ROWS;
	bar(Sansa)
} else {
	COLS
}
} else {
	Hodor += -66 + --70;
	0.31
};
	y *= protect(rule(),-( mislead(foo(betray(( TABLE[27][bar(foo(ROWS,-1),-TABLE[COLS][-0.12])] ) - ( protect() ) / -720.907,ROWS,ROWS / destroy(mislead(),destroy(TABLE[( ( destroy(( -0.86 )) * destroy(( foo(( COLS ),ROWS) )) ) )][( ( ( Arya + y ) ) )] - Jon,( -ROWS )),Hodor) * ( ( Arya ) )),( Hodor )),10) )) * 31;
	if(-foo(( betray(( ROWS ),destroy(-( 0.02 ),TABLE[-y][TABLE[67 - betray(ROWS,-protect(( -520.01 )))][---( -( ( betray(-45) ) ) )]] - -0.43),y - ROWS) ))){

}
} else {

};
	Ygritte *= foo()
};
	ROWS * ROWS + ---y * protect(TABLE[Stark][( Arya )] / ( x )) + -TABLE[-protect(470.91)][bar(--destroy(-mislead(( mislead(mislead(ROWS),( 1 )) ) + ---52 - 35,0.23 * -800.35 / TABLE[COLS][--0.49 / TABLE[rule(( -0.87 )) / --1 * 0.25 - destroy(-11,rule(( Arya ) - -1,( COLS / 92 ) / COLS) / protect(TABLE[Sansa * -ROWS * 0.02 + Arya][rule(---rule(-COLS) / ( 0.44 ) * ( Arya + 1 ) / destroy(foo()) + -Sansa,-( -0.71 ) * foo(Ygritte,--0.79 - -dog),protect(-dog,Stark))]))][950.731]],y),protect(Hodor)) + Jon,-( protect(COLS,Arya - -( -62 + bar(Ygritte * ( ( ROWS ) ),TABLE[ROWS][TABLE[y * --COLS][( protect(-1) * Arya )]],-( Ygritte * -0.11 / COLS - destroy(ROWS + ( y * TABLE[( Jon )][( Jon )] ),-0.72,1) )) - x )) - Hodor ),bar() - ROWS)] * -Hodor * Stark
}
} else {
	Jon += ROWS / ROWS
};
	if(( Ygritte ) * ( Arya )){

} else {
	Arya -= Hodor
};
	ROWS
}
assert x : "Fear cuts deeper than swords."
def betray(){
	Sansa /= -TABLE[( bar(( protect(-1) ),COLS) / x )][-( ---Arya - 71 + ROWS ) / ( protect(Ygritte,-( -ROWS ),COLS) * Sansa )]
}
def destroy(Jon){
	if(--12 - Jon){
	bar(-1 * protect(-( 1 ),Sansa));
	foo(70 / Jon,( -y - ( rule(-0.46,protect()) ) ))
};
	if(rule()){
	if(COLS - ( betray(( betray(TABLE[( 1 )][-0.33 / betray(( --( ( Ygritte ) ) ),dog)],Stark,y) )) / -TABLE[Sansa][Hodor] )){
	Jon += 0.41 / bar(mislead(41));
	foo(--Arya)
};
	Stark *= -0.06;
	y /= -Arya - ( Sansa )
}
}
assert ( -( 0.63 ) + Ygritte * --destroy(Sansa,TABLE[Hodor][TABLE[( dog - 0.37 )][Ygritte] * COLS * dog]) - -( COLS ) * betray(0.21) / foo(-( ( -( -26 / -Hodor / TABLE[-dog - Sansa][foo(( destroy() ),rule())] ) ) ) / y + foo() / ( x ) * mislead(),-rule(foo(900.4917,-0.69,foo())) / -44 - ( -dog ),-( Jon )) - 40 * COLS - betray(mislead(dog,-830.14,betray(--COLS + 55,betray(76,-0.17) / rule(( ( 0.34 ) ))))) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = -betray(700.98)
def TABLE[0.66][k] {
	if(-0.1){
	COLS / mislead(Sansa,-50.88) - rule(rule(( -160.593 / -82 ),foo(x * -y - Jon / 970.5) * -Jon,mislead(COLS / betray(),Ygritte,39)),foo()) / betray()
}
}
def destroy(Hodor,Ygritte){
	mislead(TABLE[TABLE[rule(Sansa)][protect()]][-( dog )])
}
def TABLE[0.15 + Jon][j] {
	bar(( -Sansa ),0.5);
	Ygritte += mislead(( COLS ))
}
def TABLE[-rule() * y][k] {
	if(( -COLS )){
	foo(Stark);
	y /= ( -betray(( COLS )) )
};
	-0.01;
	COLS
}
def TABLE[-88][j] {

}
def destroy(dog){
	Arya /= rule(foo(),mislead(-( ROWS + 3 )));
	if(Stark){

};
	Arya /= mislead(destroy(x,0.21 * --TABLE[mislead(750.5)][Sansa - Stark]),mislead(-Sansa,x))
}
def bar(Stark,Jon,dog){
	if(bar(Sansa,dog)){
	TABLE[bar(-19)][-580.1977]
};
	if(-1){
	-100.31
} else {

}
}
assert foo(COLS,( ( -protect(17,TABLE[92][COLS]) ) )) : "Nothing burns like the cold."
def betray(Jon,y){
	dog *= Hodor - ( -160.922 );
	Arya /= TABLE[TABLE[COLS][COLS * 30.86]][-17 + x]
}
var Stark = -ROWS
assert ( ( -betray() + -ROWS ) ) : "Fear cuts deeper than swords."
def betray(Ygritte,Hodor){
	if(TABLE[1][Sansa]){
	if(destroy()){
	COLS * y
}
} else {
	if(( dog )){
	x *= -Jon + -( -y + -0.24 / Jon / -0.17 )
}
};
	if(( -1 )){
	Sansa *= x
}
}
var y = COLS
def TABLE[Sansa][k] {
	-COLS;
	( protect(( ( COLS ) / -90 + -COLS ) - -0.18) )
}
assert TABLE[rule(( -( ( ( -0.29 ) ) ) ),TABLE[29 * 36][COLS])][TABLE[1][( ( Hodor ) - protect(COLS + destroy(Jon),-TABLE[-rule(-Ygritte,-mislead(COLS,--0.91),-( ROWS ) + bar(Arya,TABLE[-( ( TABLE[-47 - -1 - 0.43][dog] + -0.95 ) )][94] / Ygritte) - 0.79 / 0.93 * foo(foo(( -COLS )),protect(betray(y,x,0.74),( -62 )),---( Arya / x - Ygritte ) / 0.88 + mislead(( COLS ),( -Ygritte * ( -2 ) + COLS ) * Sansa,-COLS)) + ( Arya ) / ( ( 100.838 ) + TABLE[-0.62][-1] * -protect(Stark) + Ygritte / Arya ))][-94]) + -1 ) * 1]] : "Winter is coming"
def betray(Hodor){

}
def TABLE[rule()][j] {
	( COLS );
	COLS
}
assert COLS : "One can not simply parse himself"
def protect(){
	if(ROWS){
	dog *= 0.12
} else {
	4
};
	87
}
def foo(Jon,dog){
	Hodor *= protect(-mislead(-1));
	dog *= ( Jon );
	if(27){
	-19;
	Arya += 1
} else {
	if(--98){

};
	if(--96){
	-87
} else {
	( rule(0.5) );
	if(( -x )){
	if(COLS * -ROWS - Stark){
	Jon += mislead(0.53,-0.83,Hodor);
	Sansa * ( ( ROWS ) );
	if(ROWS){
	Sansa -= Hodor
} else {
	0.55
}
} else {
	-protect(y,mislead()) - -rule(( bar(-30 - dog) ),Stark);
	x -= Arya;
	if(mislead(COLS / ( -Ygritte - -6 * rule(-Ygritte,( -COLS )) ) + mislead(1 * ROWS,( ( -0.7 ) ) + Stark) * --68,-( Hodor ),( Ygritte ))){
	if(( ( COLS ) )){
	Arya /= Jon * TABLE[protect(betray(( ( Stark ) ),( COLS ))) - destroy(COLS - foo(--destroy(Hodor,( --( ( -50 ) * protect() ) )),1),bar())][-1];
	--rule(Sansa,0.55 + -0.39,rule(Ygritte) * Ygritte)
};
	-1;
	Jon
}
}
} else {

}
}
}
}
assert ( -Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(Arya) : "Nothing burns like the cold."
assert ( ROWS ) : "Fear cuts deeper than swords."
def TABLE[Sansa * 8][j] {
	if(250.208){
	Ygritte *= --0.13
};
	dog *= ( -0.67 )
}
var Jon = Hodor
assert ( ROWS ) : "Fear cuts deeper than swords."
assert TABLE[-890.21][dog] : "One can not simply parse himself"
def destroy(x){
	Stark
}
def protect(Sansa,Stark,x){
	if(1){
	if(-( -betray(COLS) * Stark )){

};
	if(( Sansa )){
	y -= 1
} else {

};
	Sansa *= Ygritte
};
	if(rule(betray(770.3766,( ROWS ),Jon))){
	if(-ROWS){
	if(dog){
	Stark /= betray(mislead(destroy(-93 * ( COLS )),foo(TABLE[-0.89][( ( protect() ) )],( --8 * ( -610.46 ) * ( betray(( TABLE[-foo(COLS)][ROWS] ),COLS) / Ygritte ) * bar(-480.119) ))),Arya);
	COLS
};
	if(Arya){
	Ygritte /= ( bar(y / ( x )) );
	if(Stark){
	if(0.96){
	Hodor += bar(-0.92,COLS);
	y
}
};
	Arya *= ( ( destroy(Ygritte) + -COLS / ( ( x ) ) * COLS ) )
} else {
	Sansa -= ROWS;
	if(( -0.06 )){
	if(( betray(-( ( -0.59 ) ),foo(mislead(( COLS )),rule(destroy(-ROWS,0.97),-( Jon ),1),mislead() * Ygritte) + TABLE[Sansa][( ( ( -betray() ) ) + foo(( protect() ),-protect(dog) * bar(foo() + ( ( ( -5 * TABLE[440.568][protect(bar(TABLE[mislead(-1,0.79)][foo(-ROWS)],( protect(( Jon )) )) / -0.55 * 0.34 * --4 * foo() - ( 0.37 ) - ( -46 ),destroy()) * ( ( ( ROWS / --( ( 0.81 ) ) ) ) + mislead(x) )] - Stark * -( ( --0.86 ) ) / ( -protect(ROWS) ) + TABLE[Jon / Jon][TABLE[COLS][( betray(TABLE[Arya / x][foo(-foo(33,( TABLE[-99][TABLE[-0.11][COLS / -foo(-0.24,COLS,( -Jon / -270.7416 ))]] * -0.52 * ( bar() ) * TABLE[foo(27,foo(--( destroy(mislead(betray(COLS,ROWS,-y) + Jon),COLS) ),bar(-Ygritte * Jon)) * COLS * protect(86),0.45)][ROWS - 61] ),( -( -0.09 ) ) * --4))] * y / ( ( --280.87 ) ),-Jon,( bar(COLS,0.04 - -0.73) )) )]] ) ) )),41) )]) / -Sansa ) + ( 60 )){
	if(ROWS){
	if(Jon){

} else {
	if(1){
	foo(-0.92);
	( -COLS )
}
};
	TABLE[-COLS][Sansa]
} else {
	Hodor -= ( --( ( bar(COLS,--0.51) ) ) );
	y /= COLS
};
	-betray(ROWS,--0.26);
	y *= Sansa
} else {

};
	Sansa -= --0.83
} else {
	Sansa *= Ygritte
}
};
	-ROWS
}
}
}
assert bar(y,COLS) : "What do we say to the Lord of Death?"
assert ( -68 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = ( -( ( -0.03 ) * destroy(x,TABLE[-TABLE[330.492][destroy(COLS / Stark,bar(-TABLE[COLS][protect(COLS,930.617)]) + 0.41)]][TABLE[ROWS][betray(Stark,TABLE[160.8][rule()])]]) - ( 100.75 ) ) )
def foo(Stark){
	TABLE[-94][-( Arya )]
}
def TABLE[-60.851][j] {

}
var y = -78
var Ygritte = ( Arya / Stark )
def mislead(dog){
	if(ROWS){
	x *= destroy(ROWS);
	dog += -COLS
} else {
	COLS;
	Jon -= y
};
	COLS;
	destroy(bar(--( -( COLS ) ),-0.87))
}
def TABLE[( COLS / ( rule(COLS) ) )][i] {

}
def TABLE[TABLE[destroy()][ROWS]][j] {
	-ROWS
}
def TABLE[betray(-0.62,destroy(0.33,ROWS),-protect(-ROWS))][j] {

}
def TABLE[--90][i] {

}
def protect(Sansa){
	if(Stark){
	( mislead(( ( 74 - dog ) )) );
	if(-0.33){
	Stark *= 72
}
};
	if(( ( ROWS ) )){
	--( x ) - Arya - -Jon + Sansa;
	if(destroy(ROWS + destroy(destroy() * -ROWS,-bar(COLS)) / ( -830.526 ),( 0.42 + ( dog ) )) / -300.28){
	Arya *= -0.48;
	if(-Ygritte){
	y -= --12;
	protect() / protect()
} else {
	( -550.028 );
	Arya += -90.23
}
};
	Stark /= Jon
} else {
	Arya *= 1;
	Jon *= 1
};
	TABLE[-TABLE[Jon][TABLE[destroy(( ( destroy(25,( -53 - -Ygritte ),Arya) ) ),-11)][-Hodor]]][Stark / -74]
}
def mislead(Ygritte){
	x *= 58;
	if(0.35 + -rule(--Hodor)){
	--destroy(rule(destroy(Stark,-destroy(COLS,( Arya ),ROWS / --1 * Jon) + x,( protect(--1,-0.74 * ( -Sansa ) - 1 - destroy(( -( x ) + TABLE[-foo(( ROWS ))][-70] - ( COLS * -40 / -73 ) + ( y ) ),Hodor,0.92) + ( 260.284 * --95 ) * ( ( ( -1 / -0.5 ) ) )) )),y))
} else {

}
}
var Sansa = bar(( 45 - ROWS ),-( -2 ))
assert ( -bar(betray(Hodor,-( COLS ) * rule(TABLE[-Sansa][protect(bar(--40,Hodor),Hodor)],COLS) + -100.93) + ( -74 ) * ( COLS ),--1) ) : "Nothing burns like the cold."
var Hodor = ( TABLE[( rule(-0.57 * protect(30.1) - protect(0.99,( -Stark ),rule(--ROWS)) + bar(-440.483,-50.042,0.09)) + y )][--1 + COLS] )
def TABLE[Ygritte][j] {
	Sansa /= COLS / TABLE[37][destroy(x)];
	if(dog){
	----( TABLE[x][--mislead()] ) * mislead(Stark,1 * -94) / ( -( ( ( ( --ROWS * destroy(0.46 - 1) ) - Jon ) ) ) / destroy(( -Jon ),COLS,-dog) / ( ( Jon ) ) )
}
}
def betray(x,Arya){
	if(-( Ygritte ) * bar(-68,COLS)){

};
	if(foo(( y ),protect(-foo(y,Hodor,COLS),-Sansa))){
	Sansa *= ROWS;
	if(-55){
	y += Hodor
} else {
	0.52
}
};
	Jon
}
def protect(){
	Ygritte *= -y
}
var Sansa = mislead(ROWS) / rule() - -0.87
var dog = ROWS
assert -79 : "Nothing burns like the cold."
def TABLE[0.76][k] {
	if(Hodor - --Sansa - COLS / 1){
	Hodor -= TABLE[destroy(bar(Ygritte),1)][Jon];
	Ygritte *= -dog;
	x += -20
} else {
	-dog;
	Ygritte += mislead(( ( COLS ) ),dog + 0.59);
	dog /= 140.279
}
}
assert ---mislead(-Sansa / -0.24,TABLE[0.21][( betray(--foo(-1),-67) ) * destroy(Ygritte)],ROWS - -1 + -( destroy(TABLE[destroy(-ROWS,( 0.16 ),destroy())][---( Ygritte )] / ( mislead(( betray(dog,mislead(-0.14 * destroy(ROWS,Sansa))) ),COLS,( -ROWS )) / 66 )) )) : "One can not simply parse himself"
def TABLE[foo(( dog ),TABLE[60][Jon])][k] {
	Jon /= -( ( -89 ) )
}
var y = ( ROWS )
var Hodor = ( foo() )
def betray(){
	0.07 + 68;
	if(-0.19){
	if(betray(Stark,--bar(foo(),Arya))){

}
}
}
assert Ygritte : "Nothing burns like the cold."
assert -36 : "What do we say to the Lord of Death?"
assert protect(TABLE[Sansa][dog] - COLS - TABLE[( ( -betray(60 + ROWS,-( 1 / TABLE[-430.283][Arya] ),-13) ) )][( -COLS ) * COLS / Arya] * COLS * ---170.9 - COLS / Jon / -58 + protect() - ( -( ( -35 * ( ( protect(COLS) ) ) + -1 ) ) )) : "Nothing burns like the cold."
assert -destroy(Ygritte,x,( TABLE[( -0.73 * Arya / COLS + -y )][-250.32] ) / -60 * Arya - --1) : "What do we say to the Lord of Death?"
assert ( 810.162 - 740.13 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( TABLE[-( protect(-320.39,Arya,x) )][rule(protect(protect(Hodor),foo(-98 * x,( ( 1 + -foo(bar(COLS,-75) + ( ( 0.74 ) ),TABLE[-1 * -TABLE[-rule(-Arya,-TABLE[foo(TABLE[-880.724][( protect() )] / TABLE[y][protect(1 / -23)],84)][TABLE[-0.86][0.95]])][--76 * 52 * bar(COLS) * betray(dog / 0.16)] + ---Jon + -Ygritte * ROWS / foo(-77,TABLE[TABLE[( -Arya * dog / 1 )][ROWS]][-mislead(TABLE[--49 - betray(bar(-( ROWS ),Jon),Sansa) / protect(1,ROWS - -920.28)][0.11],foo(( COLS ),destroy(Sansa,Ygritte,( bar(( -90 ) / ( -1 - protect(( -TABLE[rule(y,destroy(x,Arya),-1)][bar(foo(-0.87,-destroy(ROWS,betray(protect(34,--( TABLE[y][-0.72] ) + y)),61) * bar(-Ygritte) * -betray(ROWS + mislead(-0.12,( mislead(Jon,32) ))))) * COLS] * mislead() )) / x ),rule(rule(mislead(0.93),Ygritte,bar()))) )),--0.8),y) + ( Stark ) - ( -0.66 ) - TABLE[TABLE[1][Hodor]][( Hodor )] * -0.24] + -1) * -0.97 / Stark + ( -1 )][Jon / rule(ROWS) - Stark + ROWS / bar(ROWS,COLS)]) + ( 0.95 * -76 ) * rule() - TABLE[mislead(1)][--( ( rule() ) )] - ( x * destroy(-betray(y,----1 + COLS - Ygritte) + ( COLS ) / Arya) + Stark ) / COLS ) )),-mislead(-19 + -82,( ROWS ),ROWS)) - ROWS / ( destroy(destroy(-0.38),-COLS) ))] ) : "Winter is coming"
var x = ROWS * ( mislead(-1) )
def TABLE[( betray(-y * destroy(COLS)) )][k] {
	if(-20){
	x /= ROWS
} else {
	COLS;
	Sansa
}
}
assert ( -1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = 17
assert -1 + foo(y,TABLE[-1][ROWS]) : "One can not simply parse himself"
def TABLE[-( ( Sansa ) )][i] {

}
assert TABLE[mislead(Ygritte)][ROWS] : "Winter is coming"
assert ( --0.59 * protect() ) : "Fear cuts deeper than swords."
assert -ROWS : "Fear cuts deeper than swords."
def betray(){
	Sansa *= foo(--ROWS,Arya) / ROWS;
	ROWS;
	( --Arya * -destroy(-TABLE[x][-260.01]) - TABLE[betray()][dog * 0.03] / TABLE[( -bar(rule(( ( ( -TABLE[( -betray(COLS,-ROWS - -( COLS )) ) / bar(dog)][destroy(-1)] ) ) ) - Jon),ROWS) - 0.22 )][40] )
}
def TABLE[destroy(rule(--( ---Sansa ) + ( -bar(Hodor) )) - 40) / ( betray() ) * -betray(TABLE[--69][destroy(-( --0.36 ),Ygritte - -27)],-770.77)][i] {
	Jon -= -48;
	rule(( Stark ),foo(( dog )))
}
assert -1 : "One can not simply parse himself"
def foo(Arya,y){

}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[ROWS][i] {
	if(Arya * protect(-57,COLS)){
	Sansa / betray(COLS);
	if(COLS){
	Stark -= Ygritte
} else {
	dog += x
}
}
}
def TABLE[-40 * 0.23][j] {
	if(( -y ) - COLS){

}
}
def betray(y,Jon,Sansa){
	if(--( -ROWS ) * TABLE[-0.73][( 68 )] / TABLE[Hodor * -COLS * betray(420.95,COLS)][--0.49] + bar(( 0.11 - -1 ))){
	if(-( 0.48 )){
	if(( ROWS )){

}
};
	if(rule(Sansa,Stark)){
	if(( 0.59 )){
	y += -Sansa
} else {
	-( betray(-COLS / rule(foo(Hodor,0.6,protect(Stark) - -COLS - 1),( COLS ),-destroy(rule(---Ygritte / rule() + mislead(dog) * COLS),-570.12,-1 + -betray() - COLS)),COLS + ROWS - ( y ),-1) )
};
	if(ROWS){
	if(-45){
	if(COLS){
	Jon *= x;
	if(--bar()){
	Stark
} else {

}
} else {
	foo(destroy(mislead(COLS),-( TABLE[y * 86][Hodor + ROWS] - ( Ygritte ) * ROWS / rule(protect(---foo(TABLE[-TABLE[COLS][Sansa]][bar(0.9)])) / ( 1 ) * -Jon,-( Hodor )) )),TABLE[-0.98][bar(-1 / -0.77)],--81);
	if(-COLS){

} else {
	( ROWS );
	Stark *= bar(bar(COLS,foo(10,destroy(mislead(Ygritte * -38,bar(mislead(Ygritte)) * bar() + ( --60 / Sansa / 50 / ( ( -Stark / -COLS * destroy(( Ygritte ) * TABLE[rule()][300.304] * foo(foo(-Ygritte,TABLE[protect(-72,( COLS ))][mislead(-0.63,( ( COLS ) ),COLS)],dog / protect(rule(740.46)))),x) ) ) / 0.25 / COLS ),( ( -1 ) )),-19,x))) + -foo(7,( 180.2392 )));
	if(( x )){
	Stark *= Jon
} else {
	destroy()
}
}
};
	y;
	Hodor -= Stark + mislead(-62,( x ))
}
} else {

}
};
	Ygritte -= --310.2111 - -( betray(88,foo(COLS)) )
} else {
	if(-0.33){
	Stark += -TABLE[Jon][-Jon]
};
	protect();
	dog -= -destroy(ROWS,TABLE[-0.46][-bar(( Sansa ))]) * -560.63
};
	Arya /= TABLE[ROWS][rule(destroy())]
}
def foo(){
	1;
	if(COLS){
	TABLE[-Stark][Stark]
};
	-0.2 / bar(COLS,---foo(240.7) + protect(-90)) + dog - Sansa
}
var y = -( -0.23 )
def rule(dog,Hodor){

}
var Hodor = ( --dog )
def betray(){

}
def TABLE[( ( COLS ) )][k] {
	ROWS
}
def foo(Sansa){
	if(( COLS )){
	Ygritte /= TABLE[-dog * -0.66][protect(( -( ( TABLE[--TABLE[-90 * destroy()][COLS] - Hodor + Jon][betray(COLS,( ( bar() ) ))] ) ) + Hodor * -betray(foo(-0.89),--( betray(Ygritte / Stark - ( 0.8 ) + Arya,( -1 ),foo(( ( -1 ) ),ROWS)) ) / TABLE[bar(Arya * 31 - -83,( -( ( betray(( ( Jon * COLS ) + -0.26 / -Stark )) ) ) ))][-1]) - 0.64 ))];
	Arya += 0.98;
	if(-COLS){
	if(( -600.5 )){
	Arya -= ----TABLE[83][-TABLE[( -x )][dog * -3]];
	if(COLS){
	dog *= ROWS + ROWS - -protect(TABLE[bar(bar(TABLE[-y][ROWS],-56))][ROWS],ROWS * ( -( mislead(bar(( x ),-0.73,foo(( TABLE[0.09][betray(-y - ROWS - y)] ),-0.08)),COLS) * protect() ) )) - Stark * destroy(ROWS) / TABLE[y][( -0.96 / ( Jon ) + ROWS - ( bar(dog / --53,Sansa) ) * 600.4975 )] - ( 500.139 * COLS * ROWS + -37 / -y + ( Hodor ) ) / ( -1 ) * ( ROWS ) - -( -150.665 ) / Jon;
	if(TABLE[mislead(mislead(dog),TABLE[( -Jon )][y],TABLE[( destroy(COLS) )][-530.46])][mislead(1)]){
	if(destroy(-TABLE[-89][TABLE[-5][Ygritte]])){

} else {

};
	Sansa
} else {
	( -Hodor )
}
};
	y /= rule(Arya,( ( 89 ) ))
} else {
	if(y){
	( ( ( -foo(-0.37) ) - ( COLS ) ) ) + ROWS;
	if(destroy(( COLS ),41 * -2 - Ygritte / ( dog ),TABLE[-destroy(ROWS,( -( -Hodor ) ))][( foo(( destroy(Hodor,dog) ),bar(-1,COLS / TABLE[350.64][( COLS )])) )] * -1 * mislead(ROWS)) - 320.788 / -( ROWS )){
	Arya
}
} else {
	Hodor;
	if(-Stark){
	( -0.58 );
	-Stark;
	foo(1,Sansa)
}
};
	if(--0.37 + bar(( bar(Sansa) ),COLS,-44)){

}
};
	x *= betray(---COLS / mislead(-96) * ( foo(69 / ( betray(-( -( -protect(-ROWS + --y) ) - COLS ),destroy(( -COLS / bar(-50,COLS) )),foo(Jon,( ROWS ))) ) / Stark) ),COLS,protect(TABLE[Sansa][-1],TABLE[bar() - Jon][TABLE[( ( -68 ) )][-x] * ( ( -0.73 ) )]))
}
} else {
	-1
}
}
def mislead(){
	-destroy(-( -TABLE[85][---foo(Stark - betray(-1,-( 1 )) - TABLE[y][ROWS],Jon) - 990.579 * rule(Arya,( --0.75 * --ROWS ),( --1 )) - 16] - ( Hodor ) ));
	0.71;
	( ROWS )
}
def TABLE[bar(y)][i] {

}
def protect(Ygritte){
	-0.97
}
def protect(Hodor,Hodor){

}
assert 0.36 - ROWS : "Winter is coming"
assert ( Stark ) : "Nothing burns like the cold."
var Arya = COLS
def TABLE[-betray(( ( -( -150.19 * ( ROWS ) ) ) ),ROWS / ( COLS ),-( ROWS )) + Jon][i] {
	if(Arya){
	Arya += -1;
	Stark /= -58;
	if(TABLE[-TABLE[0.12][COLS]][-76]){
	if(( rule(( TABLE[( ( 900.8 + -( -( 95 ) ) + -( protect(COLS,TABLE[( ---0.25 * --7 )][COLS]) * mislead(90.745,-84) ) * -TABLE[0.25][Ygritte / 1] ) ) / rule(y,rule(Hodor,ROWS)) + ( COLS - Stark + COLS )][ROWS] ),mislead(( foo(( -58 ) + --( 60 ) + ROWS,( bar(TABLE[( ( ( -84 ) ) * Stark )][-( dog )],Sansa) ),( dog )) ))) + -COLS )){

} else {
	( -1 )
}
} else {
	TABLE[Stark][-0.08];
	if(-ROWS / Arya){

}
}
};
	( ROWS ) * ROWS * ( Stark - -rule(Ygritte,betray()) )
}
def TABLE[bar(-400.698,-1)][k] {

}
var Ygritte = COLS
def TABLE[TABLE[foo(Arya,Stark,0.47)][Ygritte]][k] {

}
def TABLE[--0.46 / -( COLS ) * TABLE[TABLE[( COLS * mislead(-0.9) - TABLE[--dog][-foo(--TABLE[0.36][( foo(620.14) )],mislead(-( ( COLS ) ),Sansa))] )][ROWS]][Stark]][i] {
	Sansa += Ygritte;
	if(-( y )){
	if(-0.89){

}
}
}
assert COLS : "One can not simply parse himself"
def TABLE[ROWS][j] {
	y += rule(( ROWS ),TABLE[( -Arya * -0.96 + mislead(bar(Hodor,protect(Arya))) ) - bar(-45,bar(0.55)) * -Sansa + 0.02][-Hodor]);
	betray();
	0.46
}
def TABLE[protect(( ( -( -ROWS + ( Ygritte ) ) - 1 ) * Stark - foo(( ( 0 ) * 690.6812 ),( ( --94 ) )) * -0.23 ) * protect()) / -foo(mislead(( TABLE[-0.24][-ROWS] ),-( Hodor )))][k] {
	( ROWS - --0.59 )
}
var Sansa = betray(Ygritte,ROWS)
var Sansa = mislead(-protect(-Stark))
def destroy(dog,y,Hodor){
	if(( --rule(Ygritte,destroy(bar(( x ),mislead(-90,0.23),COLS),770.197),-ROWS) )){
	if(ROWS / TABLE[-60.64][ROWS - -( ( bar(-8) ) )]){
	if(Arya){
	if(x * -720.72){
	if(bar(ROWS,protect(),protect(( ( dog ) ) + -74))){
	if(-mislead(ROWS,--0.51,Stark) / Arya){

} else {
	rule(Sansa)
}
} else {

}
} else {
	x -= -20.1
}
} else {

};
	Arya;
	Jon /= rule(mislead(TABLE[-TABLE[Hodor][rule(Sansa,( -21 + Arya ))]][destroy()]),( Jon - ( bar(( 0.08 )) ) ))
}
} else {

}
}
def TABLE[-28 / --ROWS / ---0.78 - Sansa][k] {

}
def TABLE[-13][i] {
	if(Hodor * COLS){
	dog -= ROWS;
	if(( -1 )){
	if(( ( ( ROWS ) ) + -ROWS - COLS * ( Sansa ) + -Hodor * -ROWS )){
	y += ( -( ROWS ) + bar() )
}
} else {
	Jon -= destroy(-rule(COLS),COLS)
}
} else {

};
	Ygritte -= protect(destroy(-0.04,-TABLE[rule(-Jon) + 6][x]))
}
var Ygritte = 25
var x = TABLE[-ROWS][foo(0.55)]
def TABLE[protect(foo(47),( ROWS ))][i] {
	y
}
def TABLE[dog - -protect()][i] {
	COLS
}
def TABLE[0.23][k] {
	Jon -= -ROWS
}
def bar(x){
	Ygritte *= Stark
}
assert 410.4784 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = ROWS
def destroy(Arya,Stark){
	Jon -= -Hodor;
	if(1){
	x
} else {
	if(-( -1 ) + Hodor){
	Jon /= -( 60 )
} else {
	Sansa -= Jon
}
};
	Jon /= --( COLS )
}
def mislead(Sansa,Jon){

}
assert ( -TABLE[COLS][mislead() * TABLE[-41 - dog - Ygritte][x]] ) - -x * protect(( -TABLE[0.59 / ROWS][dog] )) : "Winter is coming"
var Hodor = ( Ygritte ) - -( COLS )
var Jon = ( destroy(Hodor,Jon,-0.64) ) * -( ROWS )
def TABLE[COLS][j] {
	y;
	Hodor /= -( ( Jon ) ) - mislead(TABLE[( ( protect() ) ) * -Sansa / -1][1])
}
def TABLE[Stark][k] {

}
def TABLE[rule(-1,69,Hodor * ROWS)][k] {
	--Hodor
}
def destroy(x,Stark,dog){
	if(( Arya )){
	( foo(Arya * ROWS * rule(y),6) )
};
	if(-( ---mislead() / 1 + Arya )){

}
}
def rule(Sansa,Jon){
	Arya *= ( TABLE[--betray(-1,x) * -0.87][ROWS] );
	( Stark )
}
def TABLE[TABLE[Sansa][-Jon + ROWS]][i] {
	rule(( y ),betray(COLS,y,( foo(-ROWS,TABLE[rule(( TABLE[dog][y] ))][( rule(-foo() * TABLE[80.577][COLS] * 20.9303) ) * 9]) )) / COLS);
	( -ROWS )
}
assert -protect() : "Fear cuts deeper than swords."
var y = destroy(-0.58,Ygritte,betray(TABLE[0.55][bar(-rule(--( ---740.3914 ),COLS,x))],Ygritte + TABLE[Jon * ( foo(-0.04) ) + -32][-betray(foo(( ( Ygritte ) )))]))
var Sansa = Jon
var Arya = 16
assert foo(( Hodor ),--( -140.7347 )) : "Winter is coming"
var Arya = y
def TABLE[( bar(rule(-bar(-0.52),-COLS),--bar(protect(-0.06)),--83 + x) )][i] {
	( 0.83 );
	Hodor /= ( -COLS ) - -83
}
def TABLE[1][k] {
	TABLE[destroy()][-( ( -protect(Arya,x) ) / Hodor )]
}
var Jon = --0.94
def betray(){
	x /= Stark
}
def betray(){
	if(foo()){
	Jon *= ( COLS )
};
	if(Jon){
	dog += 0.38;
	betray(-x,---0.05 * 0.44 / y)
} else {
	if(-0.1 * y){
	-( 91 )
} else {
	x;
	Sansa *= ( ( -890.64 - -Arya ) )
};
	mislead(-COLS);
	if(ROWS){
	Stark += TABLE[betray()][-47];
	y /= COLS
}
}
}
var Arya = mislead(bar())
var Sansa = bar()
var Arya = 0.6
def TABLE[x][i] {
	Stark += -0.3 - ( bar() )
}
def TABLE[rule(-0.84,( protect(foo(),-bar()) ),x)][j] {

}
var Sansa = destroy(Stark + TABLE[x * mislead(bar(0.33,( 31 ),( Arya )))][( 0.37 ) * -COLS * --1 * y],foo(mislead(Jon,TABLE[rule(-82,foo(COLS,foo(COLS,destroy(Sansa,bar(y,-dog / ROWS - ( 1 ))),destroy(( ROWS ),( COLS )))) * ( -41 - -10.938 ) / ( destroy() ) * ROWS - -TABLE[COLS][( 58 )] / COLS,( -92 ))][0.59],Hodor),rule(mislead(-COLS,TABLE[( -9 ) - Jon][( destroy() )]))))
var Arya = Hodor
def betray(){

}
var dog = 44
assert Jon : "What do we say to the Lord of Death?"
assert 1 + foo(-0.66 * ( y ),TABLE[COLS][-0.5],rule(--0.47 * destroy(( ROWS )) - -1,COLS,mislead(ROWS,-1 + ( ( destroy(--920.4,-Stark) ) ) + TABLE[bar(TABLE[-30.97][Ygritte - ( Stark )],( -Arya + destroy(Sansa) ))][Hodor]))) / y : "What do we say to the Lord of Death?"
def TABLE[( TABLE[COLS][-TABLE[-ROWS][0.86]] - -1 )][j] {
	Stark *= bar(rule(Jon),-destroy(1,Sansa),( mislead() )) / 560.1008
}
def foo(Jon){
	bar(-1) / Stark;
	if(Sansa + bar(-foo(ROWS + mislead(-protect(2,( -0.11 ) * protect(-280.607,-42) - Sansa))) - TABLE[-570.52][69],destroy(0.52,-bar(dog)))){
	x /= ( ( -betray(Ygritte,74,Arya) ) );
	if(Ygritte){

} else {
	if(ROWS){
	Ygritte -= COLS;
	if(ROWS / ROWS){
	y -= y;
	-( dog ) - Stark
}
};
	if(rule(mislead())){
	if(0.17){
	Ygritte -= ( ( ( 4 ) ) );
	( TABLE[Stark][0.36] )
}
} else {
	if(Sansa){
	Hodor -= 1;
	if(( rule(Ygritte - ( --0.8 ),-betray(y,-COLS)) )){

} else {
	if(foo()){
	y += --mislead(0.7 + --dog * ( destroy() ),( -480.3723 ),x) * betray(( -86 ),-0.39)
};
	mislead(Hodor,Arya)
}
}
};
	Hodor -= ROWS / -27
};
	if(( ( ROWS ) + ROWS )){
	Sansa /= destroy(0.48 - Stark,x,TABLE[-1][-ROWS])
} else {
	if(( -( Ygritte / -0.72 ) )){
	if(Jon){
	Hodor *= -0.45;
	mislead()
} else {
	if(TABLE[TABLE[-80][destroy(ROWS)]][0.42]){
	if(-Ygritte){
	Ygritte -= bar(y);
	ROWS
} else {

};
	Jon -= ( COLS );
	destroy(( ( ( ROWS ) ) ) + -57,foo(-Arya + -( ( -y ) ) / -37 - rule(),-92),--280.21)
} else {
	if(rule(-0.94,550.77,rule(600.098,( -0.56 ))) / --0.39 / COLS){
	Stark;
	Arya /= -foo()
} else {
	dog *= -47
}
}
};
	--23;
	0.57
};
	Jon += -foo(betray(),-76);
	Jon -= 29
}
} else {
	x *= TABLE[---30 * 3][( -COLS )];
	if(x){
	if(bar(-0.75)){
	dog *= -1;
	if(Arya * ( ROWS )){
	if(-0.31){
	if(--Jon){

} else {
	if(-betray(Ygritte)){
	if(-betray() / betray(0.51)){

};
	TABLE[0.94][foo(foo())]
};
	x *= ROWS
};
	if(( destroy() ) + COLS + betray(( -COLS )) + Ygritte - ( ( rule() ) ) / -310.1356 / --1 - betray(0.93,foo(),betray(-foo(( ( COLS ) ))))){
	betray(-21,bar());
	if(-0.33 / protect(Ygritte) - -foo() - ( ROWS * destroy(( Hodor )) * mislead(y,TABLE[1][-( TABLE[( ( ( -y ) ) * COLS )][--0.94 - x] )],foo(mislead(( TABLE[0.5][TABLE[protect(( -TABLE[17][rule(( Jon ))] / -protect() * 0.79 + y )) + x][-19]] )))) )){
	Stark *= rule(0.99);
	-( destroy(protect(foo(foo(-Sansa)),( -44 ),Ygritte * foo()),1 + betray(( betray(y,1,-89 - -( 700.08 )) ) / 450.04,-2 / -850.99,380.94) + bar(mislead(betray(),--0.69,-( COLS ) + ( y )),( COLS ),( -foo() ))) )
};
	if(foo(( COLS ),( bar() / ( rule(y * ( ( Stark - 0.71 ) ),betray()) ) ))){
	if(( betray(Ygritte + -0.59) )){
	if(--0.65 / betray()){
	y += ROWS;
	Jon /= -12
} else {
	if(0.62){
	if(1){
	Jon *= 11;
	Hodor *= betray() + COLS * ( 0.82 )
};
	rule(betray(0.51,mislead(-ROWS)) * Sansa - x + ( -y ),77,0.63)
};
	Ygritte /= y
}
} else {
	Sansa -= Ygritte;
	TABLE[bar(COLS / foo(( -bar() / -( -( COLS ) ) * y )) - ( COLS * bar(COLS + ( -230.82 )) ))][mislead(( -1 ),y)];
	if(rule(---290.3457 + Hodor * ROWS,x,y)){
	if(x){
	if(-x){
	if(TABLE[( rule(-Sansa,-dog) )][( ROWS )]){
	( ROWS )
} else {
	( rule(-63) * TABLE[-36][-1] - -0.84 * ( ( TABLE[TABLE[TABLE[Sansa][mislead(ROWS)]][Arya / Jon - --94]][-60.47 - -betray() / ( ---y - Jon )] ) ) ) / foo(-0.27 - -1,y) / destroy(TABLE[rule(y)][ROWS]);
	( bar(--( -( -4 ) ),-0.07) );
	Hodor -= Ygritte
};
	if(( Ygritte )){
	if(betray()){
	if(x - Stark){
	dog -= ( ROWS );
	( dog );
	if(-30){
	Jon /= bar(( ---ROWS ));
	dog -= -Hodor
} else {
	mislead()
}
};
	if(-( 1 )){
	x += betray(( protect(protect(-1,Sansa)) ),COLS * --98,-Ygritte + betray(destroy(protect(-19,0.05))));
	if(destroy(betray(-98,betray(78,ROWS,mislead(destroy(Ygritte,Jon),Ygritte,dog) / bar(0.61))) / Stark)){
	y /= ( 0.99 );
	ROWS;
	( 660.01 )
};
	Arya + ( protect() - -bar(-870.9,-89) )
} else {
	dog *= COLS;
	1
}
};
	Hodor += ROWS;
	Jon *= --Sansa
} else {
	Arya -= y
};
	dog *= -0.3
} else {
	if(Hodor){
	if(-TABLE[TABLE[COLS][( Sansa - Jon - ( y ) )]][TABLE[-TABLE[ROWS][betray()] * Hodor + ROWS * destroy(( ( COLS ) ))][( --( ( 0.67 ) ) )]]){
	-0.24
}
} else {

};
	y /= Ygritte;
	dog /= foo(( -destroy() ))
}
} else {
	if(---810.56){
	-x / -0.31;
	Sansa += 900.197
} else {
	if(-ROWS / ( ( 0.68 ) )){

} else {

}
};
	if(( ( ROWS ) )){
	COLS;
	dog += Sansa
} else {
	y *= -( 1 )
}
};
	TABLE[TABLE[0.9][rule(rule(Sansa))]][betray(COLS)]
}
};
	Ygritte;
	if(( TABLE[ROWS][-41] )){
	if(-( -1 ) + Stark){

};
	if(Ygritte){

} else {

}
} else {
	Sansa
}
} else {
	if(Arya){

} else {
	dog *= ( -0.32 + 0.7 )
}
}
} else {

};
	44
} else {
	Ygritte *= -91;
	-0.1
}
}
};
	Stark += --bar(( -ROWS - ( ROWS ) * TABLE[-ROWS][-( -( 970.1207 ) )] * rule() + -Stark * TABLE[ROWS - destroy() * ( rule(15) ) / bar(ROWS,ROWS)][-29] ),( 0.89 ));
	Arya += -0.31
}
};
	if(Jon){
	x -= rule()
} else {
	if(foo(TABLE[-( ( -ROWS ) )][COLS / -1],73,( 0.7 )) + mislead(--1,Stark,COLS) - -540.61){
	if(-0.13){
	Stark *= -1;
	x *= destroy()
};
	0.98 / -0.88
} else {
	Jon *= 710.528 + ROWS;
	if(( 55 )){
	-Hodor + COLS;
	-1
}
};
	if(( 0.05 )){
	Hodor += COLS;
	x *= -destroy()
}
}
}
def TABLE[0.29][i] {
	--73;
	Sansa /= -TABLE[-COLS][( Stark )]
}
var x = 0.12
var x = COLS
assert betray(COLS * -rule(),56,Stark) : "One can not simply parse himself"
assert COLS : "Nothing burns like the cold."
assert ( -0.33 ) / ( ( protect(mislead(( foo(y,Sansa,bar(--( -bar(Ygritte) ) / destroy(mislead(Jon,-TABLE[( 21 )][COLS],TABLE[( --0.1 )][-0.16]) + ( 0.99 )),( Ygritte * ( --Stark ) )) - 0.41) ),x)) / -( -COLS ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(-( -( -0.44 ) ))][k] {
	COLS;
	y
}
var Stark = COLS
def mislead(Ygritte){
	protect() * -Hodor + ROWS;
	dog += 320.8
}
var x = ( COLS )
def TABLE[( ROWS )][k] {

}
def bar(Ygritte,Sansa,x){
	if(Arya){

} else {
	( TABLE[Arya][-foo(bar(ROWS,( foo() )))] );
	y /= 27;
	--1
};
	if(( -Stark )){
	if(x){

};
	x *= dog;
	if(protect()){
	Arya -= -( betray(ROWS) )
}
} else {
	Arya -= 0.96;
	( -x - -88 + protect(Arya) / -protect(mislead(),bar(Arya,COLS,Jon + Jon),destroy(-1 / -( foo(--1,y) ) + rule(7 + -COLS,--Jon * COLS * 0.76,0.05) * -( destroy(-( 1 / 0.14 ),Sansa) )) + ( ( COLS ) )) * bar(TABLE[ROWS][COLS * -( COLS / 78 ) / protect(( -protect(0.81,Hodor) ))]) )
};
	if(COLS){
	destroy(COLS / COLS,bar(Stark) + rule(Arya));
	x -= -0.37 + ( -foo(-destroy(x + -TABLE[betray(( ( 720.2047 * -1 ) + -1 * -mislead(( -370.52 )) ))][TABLE[COLS][Sansa]] * ( -( y ) / COLS ),ROWS),-83,ROWS * Stark * -350.2616) * ( COLS ) ) - 25 - TABLE[( -Hodor )][Ygritte]
} else {

}
}
assert -COLS + Sansa : "One can not simply parse himself"
def bar(Hodor,x,x){
	Arya -= ROWS;
	Hodor -= 85
}
def mislead(){
	Arya
}
def TABLE[foo(Stark,mislead())][j] {

}
assert bar(protect(foo(TABLE[-36][0.84]) / dog * Stark)) : "Nothing burns like the cold."
var Sansa = TABLE[0.98][protect(betray(foo(( -( -TABLE[( foo(( -1 ),bar(ROWS + 210.471,-ROWS - mislead(( -Stark ),36 / ( Jon )),-0.82)) )][-destroy(rule(destroy(foo(-0.98)),ROWS),-190.556,830.118)] ) ),( -TABLE[( -( ( 0.12 ) ) )][ROWS] )),55 / rule()) - ROWS)]
assert ROWS : "One can not simply parse himself"
var Stark = ( -58 )
var dog = -( ( -0.91 ) )
def bar(Hodor,Jon){
	if(ROWS){
	y += Ygritte;
	-bar(COLS - ( y ))
} else {
	if(betray(TABLE[y][0.4])){
	dog * dog + -( foo(21,-270.953) );
	Ygritte /= Ygritte - -0.38
}
};
	if(-ROWS){
	if(-0.05){
	if(( COLS )){

} else {
	if(-y - Hodor){
	Ygritte -= TABLE[x][-( ROWS )];
	Arya -= -bar(Sansa,( betray(bar(mislead(( Ygritte )),ROWS)) ))
};
	ROWS
}
};
	Stark *= ( ROWS ) / ( ( protect(destroy(( ( COLS ) / Stark ),-86 * TABLE[65][ROWS]),mislead(),-y) ) ) / ( Hodor ) + TABLE[bar(-( Stark ),betray(( ROWS )))][--bar(-58)]
} else {
	Arya -= Arya;
	dog -= mislead(destroy(-bar(Arya,Sansa) + -1,mislead(--0.02 * -( 37 ) * bar(destroy(-63,protect(-Arya * TABLE[x][-mislead(foo(-Ygritte,-protect()))]),x - y + TABLE[-90.768 / -840.62][( --( ROWS ) )]),-ROWS),Stark)),--bar(-TABLE[-( ROWS )][0.9 + y]),foo(( -0.67 ),-0.93,( Arya ) / destroy(-ROWS / ( ROWS ),86)))
};
	if(ROWS){
	-90.13;
	dog -= 70.4047
} else {

}
}
var y = ( ROWS )
assert ( destroy(betray(rule(( 0.75 ),-COLS,-400.26),( COLS ),-mislead(( --96 * x * -( bar() + ROWS ) )) / Stark + COLS)) ) : "Nothing burns like the cold."
var Sansa = -1
var dog = ( COLS )
assert ( ROWS ) : "Nothing burns like the cold."
def TABLE[Sansa][k] {
	y += ( COLS * ( betray(x) ) + -1 ) * protect(-Ygritte + -160.5 / 96 - -y - y + -( betray(x,( ( COLS ) )) ) / Arya,--Jon / -protect(mislead(-0.67),( ROWS + COLS + ( ROWS ) )),Arya) + TABLE[x][Arya]
}
assert x : "Fear cuts deeper than swords."
var Ygritte = -0.96
def TABLE[-0.27][j] {
	Hodor += mislead(0.64,COLS,0.03 + protect(--destroy() + ROWS))
}
def TABLE[-betray(dog,( ( Stark ) ) + dog * y / foo(betray() * -6))][j] {
	y /= TABLE[rule(-( protect(Ygritte,COLS) ),( bar(COLS + Arya / 1 * -40,TABLE[COLS][Ygritte],-( -Stark / betray(-0.44,Sansa,destroy(( ( Arya ) ),ROWS) - ( ( rule(-Ygritte,ROWS / COLS,ROWS) ) ) / ( Jon )) )) ))][x];
	--y
}
assert -62 : "Fear cuts deeper than swords."
var Jon = ( ROWS )
var Arya = Ygritte
def TABLE[Ygritte - 0.15 + -protect(-85,-( 0.42 ))][k] {

}
var Hodor = ( COLS )
var x = ( COLS ) + y
def TABLE[86 / -Arya][j] {
	TABLE[-( protect(( x ),bar()) )][( -520.65 )];
	if(TABLE[1][-COLS]){
	Sansa -= -920.014;
	-230.279 - -( 43 )
} else {
	if(COLS){
	if(( mislead(COLS / ( ( ( Arya ) ) ),-y) ) * ( -dog )){
	Arya /= dog
};
	-97 - ( destroy(COLS,Stark) );
	if(-ROWS){
	y *= -720.711;
	-33 + ( ( -450.945 ) + 1 );
	--58
}
} else {
	Hodor -= -TABLE[COLS][--730.772];
	rule(( -0.01 ) * y / mislead(),ROWS)
};
	Stark *= -0.45
};
	-( --0.31 )
}
assert ( dog ) : "What do we say to the Lord of Death?"
var y = 6
def TABLE[-Sansa][j] {
	-TABLE[COLS][Jon];
	if(93){
	if(ROWS){

};
	if(-Arya){
	if(-( -( 0.4 ) ) - Hodor + bar(ROWS)){
	dog += rule(destroy(( rule(rule(( -destroy(( -0.02 ) + ROWS) - -82 ),-0.95),dog,TABLE[( foo() )][Sansa]) )),--( -97 ),TABLE[Ygritte * -0.15][Jon])
};
	Stark -= Stark;
	y += 99
};
	if(COLS){
	if(( ROWS )){
	Stark + ( -Hodor )
} else {
	-x - Stark
}
}
};
	-0.29
}
var Ygritte = destroy(y,--580.8683)
var y = destroy()
def betray(Ygritte){
	TABLE[-0.87][-COLS]
}
def bar(Sansa,Jon){

}
def mislead(){
	Ygritte += Sansa;
	if(( -13 )){
	Jon /= TABLE[( 1 )][TABLE[( x ) / destroy(( --( COLS ) ) * 27,ROWS,-75 - -x * 0.87 - ROWS) / betray(bar(Jon) * Jon)][35]]
} else {
	ROWS;
	if(bar(destroy())){
	( Ygritte );
	ROWS
} else {
	if(-COLS){
	( --9 );
	Jon += y;
	( protect(ROWS) / -TABLE[ROWS][51] )
} else {

};
	if(( ( ( -0.15 + ( ( Stark / --7 - ( bar(0.75 / -( Sansa ) / ( -1 ) - ( TABLE[-0.67][betray(foo(-( COLS ) - COLS,foo(),Stark))] ) + protect(ROWS,-0.28) + betray()) ) ) ) ) ) )){
	Ygritte += rule(-x)
}
}
};
	-1 / Hodor
}
def TABLE[ROWS / ROWS][k] {
	if(-1){
	y *= 1
};
	if(( x )){
	x -= 1 * -betray(--97,( 0.92 ))
} else {
	COLS;
	if(Jon){
	Hodor -= COLS
} else {
	destroy(-( protect(( Ygritte ),bar(18,mislead(ROWS,-ROWS)) + bar(960.24)) / ( 0.85 ) + 70.795 ),ROWS,0.03 - ( ( ( dog ) ) ) / y) / ( ( ( foo() ) ) ) - foo(4,( -0.66 + ROWS ),-61);
	x *= ROWS
}
}
}
assert -( ( -140.51 ) ) / COLS : "What do we say to the Lord of Death?"
def TABLE[( -COLS )][k] {

}
assert destroy(betray(TABLE[COLS * COLS][TABLE[y][ROWS] / -1 - COLS]),Sansa) : "What do we say to the Lord of Death?"
def TABLE[rule(foo(),Sansa)][k] {
	Arya -= ( x );
	if(x){
	if(( rule() )){
	if(830.1087){
	-COLS
} else {
	if(mislead(TABLE[( 0.34 * ( COLS ) / 93 )][COLS],870.8023)){
	if(( rule() )){
	( Sansa );
	Stark += 64;
	15
} else {
	--Sansa;
	Sansa /= -x;
	-x
};
	y /= COLS / 0.59
} else {

}
}
};
	Stark *= Ygritte
} else {
	if(Jon){
	Sansa *= ( Sansa )
} else {
	TABLE[destroy(rule(-ROWS,Jon,COLS + Ygritte))][35];
	--( TABLE[-Arya][COLS / -1 * ( ( ( Stark ) - ( Jon ) ) )] ) - ( foo(Jon,810.129,-0.8) );
	( Stark )
}
}
}
def TABLE[TABLE[foo(COLS) - y * ( 380.189 ) + protect(0.88 - mislead(-( Ygritte ) / COLS,( Arya ),0.39),mislead(-( -x / COLS ),-1,COLS / bar(49,-560.5) + Hodor + rule(-Stark) - foo(--foo(--TABLE[--Hodor][--TABLE[-TABLE[( Arya / Ygritte - TABLE[Arya][y] )][( Stark )]][foo(( --0.3 ) - -1 / destroy(betray(rule(y / betray(ROWS),( -( -0.04 - mislead(( bar(( ( ( ---0.14 + ( mislead(x,TABLE[-52 + 130.855][( ( Stark ) ) * ( bar(COLS) )]) ) + ( -1 ) ) ) ),-bar(y,mislead(( --310.253 ),-x - protect(-x,0.17))) + TABLE[Hodor][destroy(--81)]) )) + TABLE[-1][Arya] ) * COLS / -0.72 ))),-( COLS )),-0.19 + mislead(-Ygritte,Arya))]],ROWS,-0.58)))) + 42][Ygritte] + 27][k] {
	if(x){

} else {
	Jon
};
	TABLE[( 1 + TABLE[ROWS][mislead()] ) + -30][Arya]
}
assert --TABLE[( --( TABLE[TABLE[COLS][0.57]][TABLE[0.24][ROWS]] ) / -1 - COLS )][( dog )] : "Winter is coming"
def TABLE[ROWS / TABLE[dog][( ( ( ( Sansa ) ) ) )]][k] {

}
def TABLE[betray(6,-( -560.2 ))][k] {
	( -0.99 ) - destroy(--Jon + rule(dog) + -Arya / Jon / COLS * -11 + bar(Stark,Hodor));
	if(betray(dog,COLS)){

} else {
	if(( ( Stark ) )){
	( COLS ) + betray(-20) - -18 + 800.564
};
	99;
	Arya -= TABLE[bar(TABLE[-7][Arya])][( 830.8 )]
};
	if(COLS){
	Ygritte += ( --Jon )
}
}
def bar(){
	-( -29 );
	y += COLS
}
def bar(Jon){
	Arya += bar(ROWS,protect(--protect(1,Ygritte) + ( mislead(-( 16 ),--37) * -destroy() ),-0.48,TABLE[-( --0.14 ) / ( Ygritte )][-y] * -protect(( Arya ))),-( TABLE[0.93][( ( COLS - ( 1 ) ) ) - Arya] ));
	if(( --( COLS ) / COLS + foo(-dog,1) * ( ROWS ) + ( ( COLS / -protect(( -( COLS ) ),370.793) ) + betray(Stark) ) )){
	Jon /= 63;
	dog *= COLS
}
}
assert mislead() : "One can not simply parse himself"
def TABLE[( ---betray(9,-0.24 / 22) * betray(mislead()) )][i] {
	Stark *= -0.07;
	if(destroy(-94)){
	if(( bar(( ( rule(( ( ROWS ) )) ) / destroy(-( ( Hodor ) + -Arya ) + ( ( -61 ) - ( TABLE[ROWS][Ygritte] ) ) / foo(( --1 )) + ( ROWS )) )) / x )){
	--ROWS + ( bar(betray(( bar(-rule(1,-40.85 * Ygritte * COLS + TABLE[destroy(-Hodor,( TABLE[rule()][mislead(Arya)] ) * 54 / destroy(),-790.46) * 0.06][-protect(0.03)]) / 0.37 / Arya / -( COLS )) ),mislead(TABLE[rule()][Stark]) - 39 - ROWS),bar(foo(( rule() )))) );
	Sansa /= COLS / 0.89
} else {
	if(-12){
	y;
	if(COLS){
	if(betray(-13,--0.48)){
	61;
	if(y){
	if(0.31){
	( -0.5 );
	x -= -280.9809
} else {
	Sansa /= TABLE[ROWS / destroy(TABLE[-COLS][TABLE[-foo(TABLE[( ROWS )][-COLS],-64)][x]] / bar(66 * -0.64 + TABLE[--0.24][0.56] - rule()))][COLS];
	Arya *= ( -Stark )
}
}
};
	Stark /= protect(0.93,-0.25) - y + ---9 * ( -COLS / -520.37 ) / COLS * ( destroy(-85 / COLS,-0.71) ) / -( ( protect(x + COLS + -13,-( rule(bar(-0.83 / -Stark,( 190.785 + -1 )),( ( TABLE[-72 * -bar(( TABLE[Sansa][TABLE[0.43 - -0.13][-dog]] )) + -Arya * COLS / ( ( bar(y) ) + mislead(betray(destroy(),5),0.83,-destroy(-620.9254,( protect(y,bar(ROWS)) ),destroy(y,rule(-rule(--Ygritte * -0.4,-0.46) - ( ( 740.8 ) ),-betray(( ( -0.81 ) / -foo(ROWS) ),Ygritte)) / -( betray(30,y) ) * Arya))) )][TABLE[( -( bar(-1 - 0.49 / dog,Hodor * x) ) + -0.6 / ( foo(x) * COLS ) * --( -rule(-ROWS,ROWS) - Arya - -dog - mislead(51,bar(ROWS,destroy()),TABLE[( -( ROWS ) )][-ROWS]) ) )][COLS]] ) ) / COLS,Ygritte / -dog * COLS) )) - Ygritte ) )
} else {
	Arya += mislead(Jon);
	Sansa -= Hodor
};
	if(mislead(TABLE[( -100 )][Sansa])){
	if(( Sansa )){
	Ygritte += 1;
	Ygritte *= -COLS;
	x *= ( foo(ROWS) )
}
} else {
	if(TABLE[-97][--1]){
	if(destroy(-1)){
	if(protect(100 + ( COLS ),COLS) * destroy(-85) * ROWS){
	Stark *= -Ygritte / ( rule(920.8045) )
} else {
	mislead(ROWS);
	Stark *= protect(TABLE[-Sansa][( --destroy(Jon,destroy(),mislead() - ( ( -COLS ) )) - -Arya )])
};
	if(COLS){
	if(ROWS * -TABLE[--67][( ( ( Ygritte ) ) )] * ROWS){
	rule(( mislead(dog) ),betray(-35,89,y))
} else {
	if(COLS){

}
}
};
	if(0.06){
	if(-ROWS * COLS){
	dog *= -69;
	Hodor *= ( x )
};
	Arya
} else {
	---70;
	if(Arya){
	COLS;
	y /= ( -( ( --32 ) ) );
	if(TABLE[-foo(COLS,ROWS) - ( 84 )][COLS]){
	dog *= Hodor
}
} else {
	destroy(Jon);
	if(( ( ( y ) ) )){
	if(ROWS){
	-47
} else {
	if(x){
	Arya /= -97 - --rule(foo(),mislead())
} else {
	if(COLS + ( 200.57 )){

};
	x *= protect(( 630.3861 - ( -15 * -2 ) ),1)
}
}
} else {
	if(-destroy(( y )) / ROWS){
	-mislead(ROWS,Hodor)
}
}
}
}
} else {
	if(-TABLE[ROWS][780.2662]){
	Stark -= -840.73;
	-( -44 - y );
	Sansa *= Hodor
}
};
	if(foo(-TABLE[foo(COLS,50)][Hodor])){
	Stark -= dog;
	Arya += ( ( -0.26 ) )
}
};
	TABLE[1 - ( Ygritte ) + --Ygritte][ROWS]
}
};
	Hodor
};
	TABLE[protect()][COLS]
}
}
def rule(x,Hodor){
	foo()
}
def protect(Arya,dog,Sansa){
	--TABLE[( COLS )][0.19] - rule(( -protect(-91,--( COLS ),-mislead(y)) ));
	y += -COLS + ( 350.69 );
	if(Ygritte){
	Stark
} else {

}
}
var Ygritte = bar(Hodor,( -y ))
var Hodor = x
var Ygritte = -bar(( --0.77 ))
assert COLS : "Winter is coming"
def TABLE[-COLS / -Sansa + COLS][i] {
	if(Sansa){
	x += ( Arya )
}
}
def TABLE[( ( 0.53 ) ) / x][k] {

}
def TABLE[Hodor][i] {
	-390.4;
	Arya -= --ROWS;
	if(( 0.24 * ROWS )){
	ROWS;
	protect(y / -0.63);
	dog *= 0.89
} else {
	Stark -= ( destroy(TABLE[( betray(destroy(foo(0.93,( bar(0.62) ))),-TABLE[protect(TABLE[( --( -85 ) )][( TABLE[destroy(ROWS,( betray(betray(( TABLE[-1][( x )] ),dog,---COLS - 0.77),--( Jon )) ),220.88) * dog][COLS] )],destroy(( -COLS ),1)) * ( -330.353 )][0.58] / 83) )][-0.27]) );
	ROWS
}
}
def TABLE[Stark][k] {
	if(-Arya){
	( -0.7 );
	if(TABLE[TABLE[dog][( rule() ) * Ygritte]][( -mislead(x + ( protect(COLS,1) ),foo()) )]){
	Hodor += Sansa;
	Jon += -390.733 / foo() + -betray(-Hodor - 40) + x * ( 650.99 );
	Sansa /= x
}
};
	if(--Sansa){
	Stark -= ( rule(-440.833,-bar(destroy(-( rule(destroy(),( Jon )) ),-rule(-( ( COLS - ( ( COLS ) ) ) ) * ( TABLE[Jon][6] - ( ( ( -ROWS ) ) ) * Hodor - Jon ),-( -COLS ) * ( mislead(Ygritte,TABLE[protect(( Stark ),( -0.99 ),COLS)][ROWS]) ),Hodor) - TABLE[( -( protect(protect(rule(( bar(-betray(COLS) + mislead(--79,--destroy(-( dog ),mislead(-betray(y),Ygritte)) + Hodor,bar() + ( mislead(Hodor * betray(x)) ))) )))) ) )][( COLS )]),x),ROWS * COLS) );
	-0.67;
	dog
};
	-----70.37
}
def betray(dog){
	( TABLE[destroy(Stark,-59)][( -750.8587 )] )
}
def TABLE[-0.93][i] {
	Jon -= ( 0.6 ) / -66;
	Sansa += Ygritte
}
assert ( -950.788 / -COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Sansa){
	if(Ygritte){
	x;
	if(-440.7826){
	Stark += ( COLS )
}
} else {

};
	( COLS );
	x *= protect(--TABLE[-TABLE[0.3][Hodor]][Hodor - bar() / ( ( --87 - Arya ) ) - -Ygritte] / Ygritte + -1)
}
var Jon = ( betray() )
def TABLE[-99][j] {
	-( 1 ) - TABLE[Ygritte][destroy()]
}
def betray(Jon,Arya){
	if(x / ( Hodor )){
	dog -= TABLE[-destroy(x) - ( x )][-dog / Sansa];
	( ( rule(TABLE[Jon][ROWS],Jon,protect(-590.2,rule(foo()))) ) ) - ( dog ) - ( destroy() )
} else {
	Ygritte
};
	ROWS;
	TABLE[-65][-( protect(mislead(95) - TABLE[COLS][destroy(protect(COLS,x) - foo(),protect())],( protect(COLS * betray(-0.79,( -760.5 ))) )) )]
}
def TABLE[( Jon - -rule(COLS,Arya) )][j] {
	Stark;
	rule(-1)
}
assert COLS : "Nothing burns like the cold."
def TABLE[-0.68][j] {
	Arya += betray();
	Arya -= -( ( 410.0347 ) )
}
var y = 1
var Hodor = ROWS
def rule(Sansa){
	if(COLS){
	-72;
	if(( -94 / TABLE[TABLE[-betray(-TABLE[ROWS][y])][COLS]][ROWS] )){
	Ygritte -= Hodor;
	Ygritte
};
	x -= ( -Stark ) + -( 0.37 )
};
	if(Stark){
	0.26 - 0.74;
	if(TABLE[x][dog]){
	-TABLE[mislead(-79,Arya,destroy())][-1];
	dog /= COLS;
	ROWS
} else {
	ROWS
}
} else {
	if(-foo(1,100 - ( betray(-11,-x) ),--0.53) * bar(COLS) * ( Jon )){
	Hodor *= x;
	COLS / -0.1
} else {

};
	if(-mislead(( y + ROWS / 44 ),foo(ROWS))){
	if(--Ygritte){
	if(Jon){
	if(Ygritte){
	y /= foo(-( ( TABLE[Hodor][1] ) ),0.71)
} else {
	foo();
	Stark -= 0.66;
	if(ROWS){
	if(-92){
	dog += rule(-110.7415,Hodor);
	17
}
} else {
	Jon /= rule(Hodor,-( COLS ));
	if(rule(-TABLE[bar()][( bar() )],rule()) / ---180.39 / Jon){

} else {
	if(y){
	if(-mislead(Stark,Sansa)){
	if(-82){
	( ROWS );
	protect(-TABLE[TABLE[COLS][COLS / --y] / 990.9407][-TABLE[foo(Sansa,COLS * -71,TABLE[destroy(-Arya)][ROWS] * destroy(Arya,-Sansa))][foo(1,7)]]);
	x *= Hodor
} else {
	if(Arya){
	Hodor *= COLS * TABLE[-80 * protect(ROWS)][ROWS]
};
	if(( ( ( ( ROWS ) - -0.32 ) / 1 / 81 * ( COLS ) / -1 ) )){
	if(x / 76){
	-bar(-0.63,bar(-7,1) + TABLE[Jon][Arya] * ( -rule(COLS * -15,x) ),( x )) * ( y );
	if(Hodor){
	-dog;
	Sansa /= Stark
} else {
	ROWS;
	( y - TABLE[Hodor][( Hodor * -72 )] )
}
} else {
	x /= ( -TABLE[betray(0.97,x + Sansa / y + dog)][--0.71] );
	Sansa += ( mislead(Jon,y) )
};
	if(Arya){
	if(Arya){
	Arya += Sansa;
	if(1){
	x += foo(-78,TABLE[-( TABLE[y][betray(COLS)] )][ROWS] + Ygritte)
} else {
	if(COLS){

} else {
	if(COLS){
	if(Arya){

} else {
	x /= Arya;
	( -60 * ( ROWS ) * ( COLS ) / Stark ) * Sansa;
	if(32){
	Stark *= x;
	Jon -= 0.17
}
};
	Jon *= foo(-( -Stark ),35,TABLE[Jon][rule(19 + ( ----TABLE[( -COLS )][Ygritte] * -25 * ( TABLE[mislead(protect(-Ygritte,-Ygritte / -17))][foo(Arya)] ) ),-Arya,-1 + -0.74) + -0.56]);
	Stark /= ( foo(dog) ) - ( rule(-78,Hodor,2) * -y ) / Jon
} else {
	Jon += -rule(COLS) - COLS;
	Ygritte += betray(( ( Stark ) + ( Sansa ) )) * -Jon
}
};
	if(-( ( ( Arya ) ) ) * y){
	x
};
	Sansa -= ( -TABLE[-( ROWS )][-foo(-0.91)] ) + mislead(protect() * x)
}
} else {

};
	ROWS
} else {

};
	if(--5){
	0.64;
	TABLE[-( --COLS ) + TABLE[98 * TABLE[( ( ( --( ----COLS ) / TABLE[ROWS][Hodor] ) + TABLE[-Sansa][( COLS )] / -foo(( ROWS ) - ROWS * destroy(),x) + -( ROWS ) ) )][( Jon )]][-230.5]][-( ( ( -ROWS ) ) )]
}
}
}
};
	y += -x
} else {
	if(Sansa){
	y += ( ( -----36 / COLS * ( COLS ) / rule(bar(--Arya / dog)) - 0.81 ) )
}
}
}
}
};
	-91
} else {
	( -0.77 / y );
	if(Stark){

} else {
	Ygritte *= COLS
};
	if(Stark - Hodor - Hodor){
	-140.177 / COLS;
	if(-1){
	if(( --bar() ) - Jon){
	Sansa -= --Hodor * TABLE[COLS][COLS];
	if(TABLE[( 0.76 )][dog]){
	if(( -600.11 )){

} else {
	if(-0.37){

}
};
	if(Hodor){
	y += -1;
	--foo(59,destroy(56,( ( -1 ) )))
} else {
	if(-60){

} else {

}
}
} else {

};
	if(( --bar(protect(-dog) + mislead(--foo(dog),mislead(( COLS ),( -1 )) / Hodor - 1) + Sansa,COLS,TABLE[foo(TABLE[( mislead(TABLE[0.17][--( ( -bar(TABLE[( betray(ROWS,betray(( x - -46 - bar() + Ygritte ),-21 / -y,( ( ( foo(100.78 * ( -( ( ( --Jon + ( mislead(( y ),foo(Jon / mislead(y),mislead(( dog * ( foo(( 0.45 - Ygritte )) ) ),-5,mislead(23,ROWS))),16) - -Jon ) ) ) ) ) - protect(ROWS),( ( -32 / destroy() ) * ( destroy(TABLE[-6][betray(ROWS)],Arya + ( protect(TABLE[TABLE[-190.8][-27 * 1 / Ygritte]][TABLE[---0.8][Jon]] + bar(),protect(( protect(protect(-y,ROWS,rule(-1 - COLS - COLS)),mislead(destroy(Sansa,-( x )))) ),bar(-mislead(-480.078),6),foo(TABLE[betray(COLS)][-20.95])),( ( 80 + destroy(Sansa) ) )) )) * -( betray(x / ( TABLE[TABLE[Stark][TABLE[( Jon - destroy(( -ROWS ),COLS) )][mislead(dog)]]][( -0.58 )] ),( ( betray(Jon,-0.33) ) ),-Hodor) ) ) )) - foo(protect(mislead(),Ygritte)) + -46 - -49 ) ) ))) )][dog + foo() - ( betray(destroy(protect(-( 70.245 ))),( 1 ),betray(( destroy(-150.48,Sansa * 54 / bar(--590.259)) )) / ROWS) )],-260.058) ) ) / ( TABLE[( ( dog ) )][rule(-750.08,290.53)] * 86 )] * 0.74) )][Jon],ROWS)][-( ( 33 + TABLE[Sansa][dog - mislead() / ( foo(-mislead(--Jon * -( ( -1 ) ))) * Sansa + TABLE[Hodor][690.96] )] + foo(y) ) )]) )){
	y += ROWS / -COLS;
	( -88 )
} else {
	0.58 * --( mislead(--y,Sansa) )
}
} else {
	protect(COLS * 40.504 - mislead(-protect(COLS,Ygritte)) / ( ROWS ))
};
	-ROWS
}
} else {
	Arya += Stark;
	Sansa += ( bar(-COLS + -ROWS) );
	mislead() * ROWS
}
}
} else {
	if(COLS){
	if(-protect(-140.51) - x){
	Hodor *= bar(mislead(rule(COLS,-destroy(ROWS)),-0.39,y),Hodor);
	( ROWS )
};
	if(-TABLE[ROWS][betray()]){
	bar(Hodor);
	x /= -1
} else {

}
} else {
	rule()
}
}
}
}
}
assert -0.73 : "What do we say to the Lord of Death?"
def rule(y,Arya){

}
var Ygritte = ( COLS )
def TABLE[rule(Stark)][j] {
	-ROWS - TABLE[-ROWS * ( ( betray(foo(-42,-890.9536,Sansa)) ) ) * TABLE[540.6583][COLS]][-0.44] * ( ( ---47 / 72 ) );
	if(rule(( --( Ygritte ) + ( -( -0.82 ) ) - 1 / TABLE[-rule(32,( destroy() ),foo(TABLE[Hodor][ROWS]) / -1 + ROWS)][bar(( Sansa ),Stark / betray(--( TABLE[ROWS][mislead(( -790.4333 ))] ),COLS,-Stark))] ) - -bar(ROWS,Arya,-1) * Jon / Hodor / Hodor,( TABLE[1][Arya] ))){
	Sansa *= -1 * -COLS;
	Jon -= ( 88 * ( -Ygritte ) );
	Jon /= ( betray(ROWS) )
} else {

}
}
var Stark = Hodor
assert Ygritte : "Fear cuts deeper than swords."
var y = bar(ROWS - --betray(0.02,( foo(Sansa,mislead(--( ( Arya ) * dog ) - ( 7 ),( TABLE[( Arya )][rule(TABLE[y][Jon],( ( TABLE[( -0.49 )][Stark] ) ) / TABLE[( -0.4 ) - ( mislead(( -( 0.63 ) ),-460.11 - TABLE[Stark][-mislead(( COLS ),( COLS / betray(950.63) ))],( COLS ) / ( TABLE[--TABLE[( Arya )][-79] * -95 / ( bar(-810.31) + 180.07 )][TABLE[-TABLE[--470.6539 * 0.65 + ( -5 )][-4] * -Sansa][TABLE[betray(-TABLE[( ( ( -( Hodor ) ) ) )][( foo(Stark) )],-86)][-95]]] )) )][y] / -y,destroy(--52 * ( COLS ) / ( COLS ) * rule(ROWS * ( betray(-protect(-Ygritte) * --690.617 + dog,-Arya) ),-0.95) - -0.1 / ( ( COLS ) ) * ( 380.795 ),betray(( Jon ),-0.87)))] ),x),( rule() )) )))
def destroy(y,dog){
	if(x){
	Stark -= protect(rule(COLS));
	Ygritte -= -( ROWS - TABLE[-540.964][COLS] * -0.93 ) - ROWS
};
	y
}
assert Hodor : "Nothing burns like the cold."
def TABLE[protect()][j] {
	if(-( -betray(0.6) ) / ( ( --0.89 ) ) / dog * y - -23 + Ygritte){
	TABLE[-mislead(22)][Hodor] - rule(COLS)
};
	Hodor /= 0.63;
	COLS
}
def mislead(){
	Ygritte -= --Ygritte;
	ROWS;
	-29
}
var Hodor = betray(51)
var Ygritte = 0.79
var x = ( -400.69 )
assert ( ( ( ( TABLE[Sansa][TABLE[Stark][ROWS]] ) ) / ( -Sansa ) / TABLE[Ygritte][Jon] ) ) : "Fear cuts deeper than swords."
def TABLE[( 96 )][j] {
	-( dog );
	Arya /= ROWS;
	Arya *= ROWS
}
def rule(Stark){

}
def destroy(x){
	Ygritte /= destroy(( TABLE[--Arya][-13] ),COLS)
}
var y = bar(ROWS / ROWS)
assert ROWS : "Winter is coming"
var dog = 0.58
def rule(Jon,dog,Hodor){
	x -= Ygritte
}
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[--Stark][k] {

}
def TABLE[( ( y ) ) - Stark][j] {
	Ygritte
}
def betray(Arya,Stark){
	Sansa -= -Stark;
	Stark -= Ygritte + --0.42 - COLS
}
assert ( Ygritte ) : "What do we say to the Lord of Death?"
def TABLE[x][j] {
	if(-( -( 0.43 ) + COLS )){
	if(( ROWS )){
	Arya *= -( -rule(rule(( Stark ),0.83),bar(COLS,36) / ROWS + -dog,betray(TABLE[-810.6761][Jon])) );
	if(Sansa){
	y += -0.41;
	-81;
	if(( -( mislead(--y - --0.56 + -y - ( COLS ) - ---44,( y ),mislead(TABLE[TABLE[x][( Jon ) + -( -0.93 ) * ( y )]][Stark])) * x ) )){
	Ygritte /= TABLE[Ygritte][Arya];
	dog /= ( destroy(( foo() ) * 0.27 * protect(( -7 )) / destroy(COLS),( ( ( -0.32 ) ) ) + dog) )
}
} else {

}
};
	if(COLS){
	0.11;
	Stark -= mislead(COLS + Stark)
} else {
	foo(( -Hodor ),-dog * --y * -1) * destroy(ROWS,( ROWS / ---16 + 1 * 1 ),x) - -( TABLE[TABLE[( --betray(TABLE[-350.67 + Jon][-62],-( -1 ) + Sansa / COLS,Arya) / COLS )][protect(--51)]][( 1 )] );
	protect(64,--6 + TABLE[rule(-Sansa / 5,dog,43)][880.639])
}
};
	-1;
	if(( betray(TABLE[protect(-( mislead(TABLE[betray(-ROWS - 1,Stark,ROWS)][-0.89]) ),rule(-80.0472,-( -0.88 )))][( -ROWS )],Ygritte) )){
	if(Ygritte){

} else {
	if(-13 - Sansa){
	y += --280.9;
	Sansa -= 100.67
}
};
	if(Jon){

}
}
}
def TABLE[-ROWS + ( ROWS ) - -COLS][i] {
	Ygritte -= x * -mislead() * -1 + foo(0.85,TABLE[TABLE[TABLE[COLS][COLS]][-77]][destroy(destroy(COLS,--1000.984))]) + ( Sansa ) + x;
	-TABLE[( betray(0.8) ) + betray(mislead(),dog)][850.7]
}
def TABLE[mislead(ROWS,rule(-0.13 / Jon - COLS,-dog))][k] {
	x += -0.75
}
var dog = Ygritte
var Hodor = -99 + bar(foo(Ygritte,0.13 + Sansa,-0.96),COLS,destroy(Jon + foo(betray(990.5) + ( ( -0.83 ) + destroy(-( TABLE[--Stark * -ROWS][0.01] ),-29) ) * TABLE[mislead(mislead()) / -Stark * protect(dog + -destroy(betray(dog,Jon)) / 0.3)][( x )]))) - rule(bar(Sansa),dog,( ( destroy(0.52,TABLE[Arya][( --92 ) - Ygritte / ROWS]) ) ))
def TABLE[-rule(( COLS )) - dog / --( -ROWS ) / destroy(COLS + -x / -( COLS ),1)][i] {
	destroy(( ROWS ));
	Jon
}
def foo(y,Sansa){
	-COLS / destroy();
	if(ROWS){
	-( ( 82 + ( -ROWS ) ) )
} else {

};
	if(-COLS){
	-760.1 / ( -rule() * ( ( -Sansa ) ) )
}
}
def TABLE[( 18 )][i] {
	( destroy(( TABLE[( foo(-----( ( -0.08 ) ),COLS) )][TABLE[foo(( -25 ),Arya)][-( Stark )]] * ROWS )) );
	Ygritte += COLS
}
assert protect(Arya) : "Winter is coming"
assert -16 : "One can not simply parse himself"
var Ygritte = rule(Jon)
assert rule(betray(-0.94),dog) : "One can not simply parse himself"
assert dog : "Winter is coming"
var Ygritte = -38 * dog - -TABLE[Hodor][--( COLS - Hodor ) - bar()]
def bar(Hodor){
	-TABLE[dog * -640.377][ROWS];
	if(foo()){

};
	x += ( ( 1 - ( foo(Ygritte,TABLE[COLS][( -Arya )]) ) ) )
}
var Hodor = destroy(betray(( -220.967 ) - ( betray(( -1 ),ROWS,COLS) ),TABLE[( mislead(rule()) / Stark ) / -210.22 * ( -destroy(-0.82,-87,--betray(( ( Ygritte ) ),TABLE[( -( Sansa ) ) / TABLE[-( ( --COLS ) )][x] - protect(40.504)][x],bar(-mislead(( ROWS ) / y / y,( mislead(( betray(foo(-0.45 / Stark,-y - mislead(-0.68))) )) )),ROWS,COLS))) * -58 )][bar(rule(ROWS / -660.892 / bar(27),mislead() - -54 * ( 0.42 )))]),COLS + ( -COLS )) * 20
assert betray(mislead(( -Ygritte ),bar())) : "One can not simply parse himself"
def TABLE[-( ( TABLE[x / Hodor][--Ygritte] ) - TABLE[76 / Arya][ROWS] )][i] {
	mislead() / COLS
}
def foo(){
	if(Ygritte){
	rule(( TABLE[-destroy()][-TABLE[y][Hodor] / ROWS - Ygritte] ))
};
	if(rule(x)){
	if(53){
	if(COLS){
	mislead() * TABLE[Hodor][( 860.774 ) / betray(( 0.3 ) / ( Ygritte ))];
	Stark -= -betray(ROWS,( -bar(y,--protect(( protect(( protect() ) * dog,( ( --34 ) )) )),( ( ( 0.91 ) ) )) ),( foo() ))
} else {
	x *= mislead(ROWS,-y)
}
} else {

}
};
	x
}
assert -0.41 : "Fear cuts deeper than swords."
var Stark = protect()
def TABLE[100][j] {
	-y;
	( -( -( ( rule(Hodor) ) ) / TABLE[-0.42][rule(560.86 - 0.41)] - Jon ) );
	if(-foo(0.01,---0.81)){
	x /= bar(COLS);
	Hodor /= destroy(protect(TABLE[-( ROWS ) / ( Hodor ) * -0.4][rule(-dog + ROWS + dog) - protect() + Jon],( ROWS ),Stark * COLS + Ygritte),( ---1 * --Sansa ),protect(-COLS))
} else {
	x += ( ( mislead(80,Hodor,-Hodor + foo(COLS,-COLS,1)) ) / Ygritte );
	Stark -= ( ( ( Arya + Hodor + betray(-( mislead(( ( protect(bar()) / Jon ) )) )) * -COLS ) ) )
}
}
def TABLE[-foo(--91)][i] {
	if(x){
	if(( COLS )){
	if(--5 + 0.28 / rule(-( ( ROWS / mislead(destroy(),Sansa) ) ))){
	if(--TABLE[Sansa][-1 / -0.81]){
	if(rule(0.8)){
	if(0.29){
	0.08;
	Hodor /= ROWS;
	dog /= -0.17
} else {

};
	x -= -70.981;
	if(foo(rule(1,-680.79),rule(foo(Sansa)))){
	Stark + -mislead(destroy(y),rule());
	Sansa += Ygritte
} else {
	if(( betray(destroy(--0.59)) + Hodor - -0.75 )){
	Stark /= TABLE[Sansa * betray(Jon,( foo(-380.5) ) * Jon) + ( COLS ) * Stark][-( mislead(-Sansa,Ygritte) )]
} else {
	Jon
}
}
};
	if(bar(TABLE[Sansa][rule() / -( betray(betray(bar(y,0.04),-COLS - TABLE[ROWS][ROWS]),--1) )],-COLS,TABLE[-( y )][1]) - ROWS - TABLE[ROWS][820.992 * 0.7]){
	Hodor += Arya
}
} else {
	protect(--rule(55,x))
};
	Ygritte + TABLE[bar(ROWS + -Hodor,y)][-1 + 360.52];
	y /= ROWS
}
};
	Ygritte *= bar()
};
	if(Jon + -0.43){
	y;
	1
}
}
var Hodor = ROWS
def TABLE[Jon + destroy(--foo(-420 + Jon,4),84,( ( foo() ) )) - 13][i] {
	-ROWS;
	1;
	ROWS + COLS
}
def protect(){

}
def rule(Sansa){
	if(( COLS )){
	Hodor
};
	TABLE[mislead(TABLE[Arya][-Stark],TABLE[35][( COLS * COLS )] * ( 0.3 * ROWS )) + -Ygritte][21]
}
def protect(dog){
	-( Hodor )
}
def mislead(Hodor){
	Sansa -= 0.68
}
var Hodor = y
var Jon = -91
var x = betray(-TABLE[( x )][( COLS )],( dog + ROWS + -( ( Sansa ) ) * COLS + ( mislead(y,--bar(--TABLE[betray(rule(ROWS + ROWS * foo(( ( -0.78 ) )) - rule(y,rule(),( -ROWS - -1 / protect(( ( Jon ) / foo(-8,TABLE[-Ygritte][COLS]) * -1 )) + rule(( -21 )) ))),-160.9,-1)][( Ygritte )],ROWS,( 0.37 )) - ( COLS )) ) ) / Jon,( --( TABLE[foo()][-0.35] ) + --0.21 ))
var Arya = -Hodor
def TABLE[COLS][i] {

}
assert TABLE[-Jon][protect(TABLE[-280.2377][Jon])] : "Fear cuts deeper than swords."
assert destroy(-y) : "What do we say to the Lord of Death?"
var Sansa = ROWS + ( bar(TABLE[--0.09 / protect(destroy(COLS * --34,COLS),protect(( Stark ),-1))][ROWS - -( ( x ) )],( TABLE[ROWS][( ( -16 ) / ( dog * 90.1 ) / Sansa )] )) ) - Hodor
var y = bar(x - Stark - TABLE[( ( bar(-TABLE[bar(( 170.642 ),ROWS + Sansa,mislead(-0.39,Ygritte))][ROWS]) + 49 ) )][foo()] * Jon,370.7249)
def mislead(y,Jon){
	750.17 * 0.26
}
var Sansa = Stark
var dog = ROWS
var Ygritte = betray()
def betray(Ygritte){
	Stark -= -( destroy() )
}
def TABLE[-( Arya ) / ROWS][j] {
	Arya += Jon;
	Jon += ROWS;
	Jon -= -TABLE[bar(bar(--( ( -640.13 ) + ROWS ),Hodor))][foo(( rule(TABLE[COLS][y + -16],ROWS,foo()) ))] * -ROWS
}
var Ygritte = --( COLS ) / COLS * Arya
assert ( y ) : "Winter is coming"
def foo(x,Hodor){

}
def mislead(x){

}
def TABLE[--46 / -0.82 - Sansa][i] {
	Hodor;
	Stark -= ( COLS );
	Ygritte /= ( TABLE[Arya][-( -destroy() / Sansa / -62 * destroy(Jon,Ygritte * -x,( ( betray(-0.28,TABLE[y][-Arya + -x]) ) )) - ( -COLS ) - -1 )] )
}
var y = betray()
var Jon = ( y ) * destroy(ROWS - ( 1 ) * betray(( -mislead() ) / ( ROWS ),-0.11 / Arya / destroy(-0.69,Arya,-630.79)) + bar(( 5 ),( TABLE[COLS][bar()] )) - ( mislead(mislead(---30,-( ( TABLE[-0.23][-( rule(( dog ),( -destroy(protect(Arya)) / bar(COLS,destroy(-0.79),--15) )) )] ) ),betray(y,y))) ) * ( destroy(-2) ),Sansa / Stark)
def rule(){

}
def TABLE[protect(ROWS / -220.4)][k] {
	if(-0.36){
	Stark -= -( -betray() );
	Hodor
} else {

};
	Ygritte
}
def TABLE[Jon][j] {
	dog /= ( Sansa );
	if(mislead(betray(dog,betray(Stark) - -0.86,-50.974))){
	destroy(destroy(( ( 920.629 ) )),-x);
	if(0.82){
	Jon /= rule(-y,betray(Jon,-Stark))
};
	Sansa += ( ( ROWS / COLS ) )
}
}
def TABLE[-( destroy(Ygritte) ) / -( -0.6 ) - ( destroy(Hodor) )][j] {
	rule(92,rule())
}
var Sansa = x
def protect(dog){

}
def foo(Ygritte,x){
	Stark *= ( ( TABLE[( -0.15 ) - ( COLS ) / ( mislead(COLS,Arya * mislead(( -Ygritte ),-destroy(COLS,-0.29,( ROWS ))),0.68) ) - dog - mislead()][-2] ) )
}
def TABLE[-COLS][i] {
	x -= --( ( destroy(ROWS,-dog) ) ) + ( ( 0.49 ) ) + Hodor
}
def bar(y){
	( protect(-41,-700.31 * TABLE[betray(-96)][dog]) ) + dog / -( --bar(( x )) ) - Sansa;
	x += Sansa;
	--( ( -740.344 ) )
}
var Hodor = -COLS
var Sansa = -foo(ROWS,TABLE[protect(0.26 + -30.667 - y)][COLS],( mislead(COLS,480.36,-0.3 * dog - ROWS) / y )) * 0.94 / ( Jon )
var dog = rule(( foo(ROWS,-1) ),protect(( Stark * --( 410.7316 ) )))
var Stark = foo(( ( betray(( -1 ),Stark,TABLE[1][( ( Ygritte ) )]) ) ) + ( -0.8 ))
def TABLE[Hodor][j] {
	-ROWS;
	Hodor -= Stark;
	if(TABLE[( Hodor )][Ygritte - COLS]){
	-79;
	7 / Hodor;
	if(ROWS){
	Stark -= --850.8849;
	if(Jon){
	if(TABLE[-COLS][-( mislead(-1,( -64 )) )]){
	Arya += Ygritte
}
}
} else {
	if(480.919 - ( ( betray(COLS) ) )){
	-0.98;
	Jon += -250.38;
	Arya *= ( -0.11 ) * mislead(40) / ( ( COLS ) - -930.031 )
} else {
	if(destroy(-80)){

};
	foo(bar())
}
}
}
}
def bar(Hodor,Sansa){
	Arya;
	( -87 / Hodor );
	if(x){
	if(-( -COLS )){
	( -840.606 );
	if(betray()){
	if(-1){

} else {
	Arya += TABLE[( TABLE[( -( ( -COLS ) ) + TABLE[Sansa][( TABLE[TABLE[TABLE[46][1]][-58]][TABLE[ROWS][destroy(-Ygritte,-( destroy(-0.11,( dog ),Ygritte) ) / ( dog ))]] ) * ( ROWS )] + Ygritte * -foo(( x ),-y / ( ( foo(-570.428,Sansa) ) )) )][86] )][mislead(Hodor,-betray(ROWS,destroy(53,ROWS,TABLE[ROWS / ROWS][-Hodor - ( ( ROWS ) )]),0.49) + COLS)];
	Ygritte -= -ROWS * -( protect(-1,-Ygritte) ) / -0.37
};
	Ygritte -= y
} else {

}
} else {
	dog /= -1;
	if(Sansa){

} else {
	if(rule(-( -TABLE[-dog][bar(protect())] ),0.21)){
	Jon *= destroy(460.6914,Jon)
} else {
	Hodor -= dog;
	--1
}
};
	Hodor *= -13
}
}
}
var Jon = -TABLE[-52][-x]
assert Hodor : "Winter is coming"
var Jon = Sansa
def destroy(x,dog){
	( x )
}
def rule(x,y){
	Arya += Ygritte;
	if(0.52){
	y -= Hodor
} else {
	if(destroy()){

}
}
}
def protect(Jon,Arya){

}
def protect(Hodor){
	( bar(COLS * ( ( ( y ) ) - COLS ) + ( -0.34 )) * 1 )
}
var Hodor = -0.28
assert ROWS * Jon : "Fear cuts deeper than swords."
def bar(x,Hodor,Ygritte){
	Stark *= ( -0.41 + ROWS );
	if(TABLE[( rule() )][( ( -protect() ) )]){

} else {
	foo(Arya + ( x ),Hodor)
}
}
def TABLE[Jon][i] {
	if(mislead()){
	if(( Arya )){

} else {

}
}
}
var x = ( ( y ) )
def TABLE[y][i] {
	-0.81;
	46
}
def TABLE[730.1373][i] {
	if(ROWS){
	y /= -( ( 50 ) );
	Stark *= -0.59 + Jon;
	Stark /= -67
} else {
	COLS * -TABLE[betray()][protect(( x ))] / -Hodor / Sansa + Stark - rule(-( ( ( Arya ) ) + mislead(( Hodor )) - 88 ) - ( -1 ));
	y /= ROWS
}
}
def TABLE[betray(( x )) / mislead(COLS,ROWS)][i] {
	Sansa /= ( 1 )
}
def betray(Stark){
	dog /= betray() / 75
}
def TABLE[( -protect(ROWS,-mislead()) )][j] {
	dog *= -Hodor * 1;
	if(Sansa){
	Ygritte *= ( TABLE[-COLS][Jon] )
}
}
var Stark = Hodor
def TABLE[--70][j] {

}
def TABLE[COLS - COLS][j] {
	x -= -TABLE[rule()][( TABLE[bar(1,-x,-ROWS)][370.48 + -Jon * -1] )];
	x += ( ( x * 0.32 ) )
}
def TABLE[( -( -bar(TABLE[-( ( ROWS / y ) ) * COLS][--COLS],--rule(-0.56)) ) / ( x ) )][k] {
	x += ( Stark * Hodor )
}
assert mislead() : "Winter is coming"
def TABLE[-410.6][j] {
	if(1){
	COLS;
	Arya /= ROWS
} else {
	if(-0.45){

};
	Sansa *= Sansa
};
	Jon
}
def rule(Stark,Jon,Arya){
	if(TABLE[x][-ROWS - -( Stark + Arya ) / Ygritte]){
	Ygritte += bar();
	destroy(( ( foo(x,( ( COLS ) )) ) ),ROWS);
	if(-30){
	mislead(( -ROWS / mislead(COLS,Arya) ))
} else {
	y -= 0.44;
	ROWS - Stark
}
} else {

};
	( ROWS - 0.45 / --0.43 )
}
assert 90.3691 : "One can not simply parse himself"
assert -( -protect(( ROWS ),Hodor) ) : "What do we say to the Lord of Death?"
var Hodor = ROWS / COLS * Jon - -130.6191
def betray(dog,x){
	x *= -76 - mislead(-rule(),( ( ( rule(-Stark - Ygritte / 3) ) * -rule() + destroy() ) ))
}
var x = protect(ROWS,( -0.58 ),-0.33)
def rule(Hodor){
	Jon /= ( y );
	y
}
var Hodor = -Sansa
assert Ygritte + ( -Hodor ) : "Fear cuts deeper than swords."
def TABLE[Arya][i] {
	if(( -28 / COLS * --Ygritte )){
	Arya += foo(( -COLS ),Stark,0)
}
}
def foo(Sansa){
	x *= ( betray(destroy()) );
	if(-Hodor){
	( -protect(--0.95) + ROWS - COLS );
	x /= ( betray(ROWS * 0.54,( ROWS ),47) - -( ( -( protect(Stark) + dog ) ) ) );
	-mislead(TABLE[-200.764 / -0.36 + Jon][Stark])
} else {
	Ygritte /= COLS;
	destroy(foo(-destroy(),TABLE[( ( 1 ) )][--5]))
}
}
def destroy(dog){
	Stark;
	if(0.12){
	Jon += rule(Hodor)
} else {
	if(destroy(Arya) + destroy(( -67 ),( -Arya ) + rule(-78,480.22),-rule(mislead(0.21,TABLE[Hodor][( -ROWS ) / Sansa])))){
	if(rule(-Ygritte,ROWS)){
	-14
}
} else {

}
}
}
def foo(Sansa,Arya){
	Arya -= ( ROWS );
	if(dog){
	if(( COLS )){
	Hodor + -1
} else {
	Hodor -= bar(-( ( COLS ) * betray() ),0.63);
	Ygritte += rule(betray(mislead(destroy(-foo(),-( -43 * ( bar(COLS,72 / ( -1 )) ) ) + 970.0072 / -Jon),COLS),-0.34))
};
	if(( -77 )){
	-( foo(COLS) )
};
	Stark += ( ROWS / TABLE[( bar(Stark) ) / protect(protect(),Arya) / x / dog - ( x )][mislead(mislead(-700.139,protect(COLS,-TABLE[170.6][ROWS - mislead(600.72) * -76 / --ROWS],bar(TABLE[Arya - -TABLE[-64][y] + mislead()][Arya]))))] )
} else {
	-( Sansa ) / 610.98;
	if(-0.89){

};
	Ygritte *= Stark
}
}
assert mislead() : "One can not simply parse himself"
var Hodor = y
def betray(Stark){
	protect() / 21
}
var Sansa = 1
assert -13 : "Winter is coming"
var dog = Sansa
var y = rule()
def TABLE[( COLS + 370.49 ) / -( y ) / rule()][k] {

}
def TABLE[COLS][i] {
	-46 / ROWS
}
var Stark = -0.13
def foo(x,dog){
	if(( Arya )){
	if(---TABLE[TABLE[mislead(Arya,-69,( ( x ) )) * -y][Arya] - mislead(-58) * -betray(( -45 ))][-350.9]){

} else {
	-( -1 ) - -73 * -89;
	rule(-( mislead(( Hodor )) ),ROWS)
}
};
	-73
}
assert ( -( -Ygritte * Stark ) ) / betray(bar(destroy(bar(protect(( --TABLE[( ( betray(( --95 ),-0.75) ) )][COLS] * -0.68 / 0.09 * ROWS - TABLE[( ( Stark ) )][( betray(( -290.624 )) )] )) - -COLS)))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Ygritte,Sansa){
	Ygritte /= 50
}
def TABLE[ROWS][j] {
	Jon += COLS
}
var Jon = Ygritte
def protect(x,dog){
	mislead(-y - Hodor,dog,81);
	dog *= y
}
assert foo(Sansa,rule() + -( Hodor )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = mislead(x,210.661,23 * Arya) - Stark
def betray(){
	if(-880.41){
	Ygritte /= bar(( mislead(73,betray(protect(),( 580.088 ))) ),--TABLE[protect(foo(-( foo(( rule(-0.97,destroy(-( dog ),40.89 / ( -0.34 + foo(-1) ))) )) )))][( ( ROWS / ROWS ) )]) / 41;
	if(-foo(-( Arya ),TABLE[-foo(( ( 0.25 ) ))][Hodor]) - 24){
	if(-28){
	if(420.0318){
	Jon += destroy(protect(-x),TABLE[-( -Arya )][1]);
	protect(-ROWS - -21)
} else {
	-( foo(mislead(protect(-rule(TABLE[ROWS][160.868],-( COLS )) / Arya),Ygritte) * -( Stark ) * TABLE[rule(--( protect(y) ),dog)][Hodor]) )
}
};
	--( TABLE[destroy(ROWS / ( Ygritte ) * ( ( destroy(( Hodor ),dog) ) ),( -0.73 ))][--13] * ( mislead(ROWS) ) )
} else {

}
};
	Ygritte *= ( -( 37 ) )
}
def foo(Ygritte,Stark){

}
def destroy(Jon){
	Ygritte *= ( ( -betray(destroy(Hodor)) ) );
	if(( 790.1 )){
	if(ROWS + -destroy(-33,680.69) - ( Jon )){
	x *= destroy(x) * -0.49
}
} else {
	Jon -= betray(ROWS);
	if(TABLE[TABLE[-ROWS][-0.12 * ( ( rule() ) ) / dog - rule(Sansa,Hodor,rule(( -67 ),x))]][-bar(-0.88,( Arya ) + betray(Ygritte,dog))]){
	if(TABLE[bar(destroy(Stark),-betray(-mislead(( rule(destroy(-22),x) ) - 0.03,betray(Stark,Sansa),Sansa) - COLS) / -220.03 * foo(protect(betray(-0.6,mislead(-0.22),Ygritte * ( TABLE[destroy(x)][-8] )) - protect(----0.68 * -0.97 + Arya / Sansa,-1,TABLE[( foo(TABLE[1][( destroy(Jon) )]) ) / destroy() + mislead()][840.3]) + ( -46 ) / foo(-dog * foo(dog,-Sansa),36,protect(( -87 ),( rule() )) - mislead(COLS + --1,-protect(-640.9,rule(betray())),ROWS) / -COLS) * 0.99 + Arya,( COLS ) + 0.73,Sansa)),COLS)][( TABLE[rule(23)][dog] )] / Jon * Jon){
	Jon -= ( -97 + Jon + foo() )
} else {
	if(rule(1,foo(ROWS,( ROWS ),mislead(0.82)))){
	if(foo()){
	if(Ygritte){
	Sansa -= -1;
	Ygritte -= -TABLE[rule(x,( y + Jon ),-1)][( COLS )]
} else {
	if(mislead(-mislead(ROWS,ROWS + mislead()),destroy(-COLS,TABLE[COLS][protect(destroy(-0.44,bar(-740.62,rule(( dog * Stark )) + betray(( ( COLS ) ),77,COLS),( ROWS ) - ROWS) - bar(x,( Sansa ))),1) * 0.46]),dog)){
	Sansa
} else {
	COLS + ROWS;
	if(Stark){
	if(TABLE[TABLE[( -1 ) / -0.59][COLS]][( betray(protect(Ygritte),-( -1 / x )) )]){
	( foo(TABLE[Arya][-38 + -93]) );
	Hodor /= ( ROWS ) + ROWS - protect(-rule(rule(-( protect(-COLS,ROWS) )),TABLE[-1][( 1 ) - mislead(-( destroy(-ROWS) + rule(-TABLE[( COLS )][--x],protect(bar(ROWS),( 190.54 )),95) * -( -1 ) - -450.8802 ),( -Arya ),Jon) * COLS + destroy()],( dog ))) * ROWS - -destroy(-57)
} else {
	Arya += destroy(( ROWS ))
}
}
};
	if(dog){
	if(-TABLE[Arya][( ( COLS ) )] - rule(( Stark ),y) - 0){
	if(COLS + destroy()){
	x -= y
}
}
};
	if(destroy(rule())){
	if(Hodor){
	if(TABLE[COLS][rule(33 + ( ROWS ),ROWS)]){
	Stark += --0.16
} else {

};
	Jon /= ( Stark );
	Arya += -Sansa
} else {

};
	if(-( 1 )){
	if(-TABLE[-ROWS / rule(-( 0.76 ),y)][-Jon] * -0.9){
	Sansa /= -0.58
}
} else {
	if(( ROWS )){
	foo(rule(y - 680.1649,protect(foo(TABLE[Hodor][( betray(---bar() + -ROWS - Ygritte / protect(y) - --1,-dog) / ( COLS ) )] + TABLE[COLS][-rule(-0.59,COLS)],COLS)),ROWS))
} else {
	if(foo(x,0.75)){
	COLS
};
	dog -= Ygritte
};
	Stark -= TABLE[Sansa][--780.1] + Ygritte - dog + rule(-y);
	dog /= -0.34
}
} else {
	if(COLS){
	if(x){

} else {

};
	x -= destroy(bar(betray(-Stark,-ROWS)))
};
	Ygritte
}
};
	( -ROWS * Jon )
}
} else {

};
	x += mislead()
};
	33 / bar(--95,x) * ( TABLE[0.34][COLS] );
	dog
} else {
	dog -= ( ( -44 ) )
}
};
	600.98
}
assert -TABLE[-0.62][Arya] : "Fear cuts deeper than swords."
def TABLE[1][i] {

}
var Jon = Jon
assert rule() : "Nothing burns like the cold."
def destroy(Arya,Jon){

}
var Arya = betray(( 180.4 ),dog * TABLE[ROWS][protect(-destroy(--0.42),TABLE[foo(COLS,bar(TABLE[( ( ROWS - Jon * -( Sansa / 0.49 ) / Sansa ) )][-60.6],Stark),( -37 - destroy(-0.93,91) ))][TABLE[destroy(( -210.4677 ),( 1 ))][-1]],--670.76 / ---0.3 / ( ( ( ( --0.23 ) ) ) ) - Sansa) / dog])
def mislead(y,x,Stark){

}
var Stark = protect(ROWS)
def TABLE[( -96 + ROWS ) / -( -Sansa - ( -0.07 ) ) - -0.64][j] {
	TABLE[Stark][--x / protect(0.52,( TABLE[( ( COLS ) )][0.58] ) / x,---730.56)]
}
def TABLE[COLS + -( dog )][j] {
	COLS - ROWS / -89
}
def TABLE[COLS][k] {

}
assert foo(-1,( COLS )) : "What do we say to the Lord of Death?"
assert foo(-COLS,( dog ),( ( -protect(Hodor) ) ) + Stark) : "Winter is coming"
var dog = y
def TABLE[y][j] {

}
assert -( foo(-1,bar() / Stark) ) - x / mislead(rule(betray(-18)),Sansa) : "Fear cuts deeper than swords."
def TABLE[Arya][j] {

}
def protect(Jon,Sansa){
	ROWS;
	( mislead(-( ( ROWS ) - TABLE[( Stark )][( ( 1 ) )] + ( Sansa / Jon ) )) )
}
def foo(){

}
assert -TABLE[-ROWS][mislead(destroy(-0.64,1,ROWS)) + ( Arya )] : "What do we say to the Lord of Death?"
var x = ( --61 )
def TABLE[TABLE[TABLE[-dog][Hodor]][rule()]][k] {

}
assert TABLE[Hodor][x] : "Fear cuts deeper than swords."
assert COLS : "One can not simply parse himself"
assert 1 : "Fear cuts deeper than swords."
def TABLE[TABLE[( -ROWS )][1]][j] {
	if(foo(( ROWS * -protect(600.99,rule(( Ygritte )),---0.96 - 0.27) * TABLE[Arya * ROWS + ( -99 ) / mislead(-( COLS ) + -( ROWS ) * ( --COLS / TABLE[-Jon][--Jon] )) * Stark + TABLE[y][( mislead(( ROWS ),mislead()) )]][95] ),Ygritte,bar(TABLE[--98][betray(-TABLE[TABLE[TABLE[--0.22][Sansa]][( -rule(-COLS) )]][Sansa - destroy(mislead(-Arya / -destroy(mislead(( mislead(--( y )) ) * betray(),440.73)),rule(ROWS,76,-TABLE[y][destroy(( ( ROWS ) ),( destroy(COLS,bar(( 960.18 ))) )) / -bar(COLS)])),-Stark)]) * protect(COLS,Hodor,COLS) - -Hodor],-( -protect() )))){
	if(dog){
	y += TABLE[820.25][-betray(x)] * COLS / Arya
}
};
	Ygritte -= -720.093 + --0.19
}
var Hodor = TABLE[-destroy(Ygritte)][COLS - ROWS + -1 / --0.8 - protect(ROWS)]
assert dog : "Fear cuts deeper than swords."
def destroy(x,y){
	if(mislead(-x,TABLE[y][( dog )]) + TABLE[-0.86][Jon]){
	ROWS;
	if(betray(foo(-0.65 * ROWS,( ROWS + TABLE[foo(980.39,bar(( ROWS / ( ( protect(Sansa) ) ) )))][-( bar(( -0.56 )) )] ),( ( -rule() ) )))){

}
};
	Hodor;
	x += 35
}
def TABLE[-TABLE[-14][( ( destroy(ROWS) / ( TABLE[-ROWS][COLS] ) ) )] - COLS][i] {
	Jon += -bar(TABLE[( ( -26 ) )][-( Hodor )] + 0.3,-330.539)
}
assert -( rule(rule(),x) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(Ygritte){
	Hodor *= ( betray(-mislead(0.44 - -50,bar(COLS)),protect(-69),rule(--100,( 64 )) - COLS) / COLS )
}
assert Hodor - bar(ROWS) / -0.44 : "Winter is coming"
assert protect(foo(Hodor / COLS,( mislead() ),dog - -Sansa * ( ( TABLE[( x )][COLS] ) )),Jon,( bar(Stark,TABLE[Stark * foo(betray(TABLE[mislead()][COLS],TABLE[-1][-400.78],betray(x)),( 830.906 ) * COLS)][protect()]) )) : "What do we say to the Lord of Death?"
def destroy(Arya,Jon,y){

}
def TABLE[ROWS - ( Ygritte )][i] {
	dog -= -1 + --1 * dog;
	Ygritte += -( -protect(protect(bar(destroy(( -COLS ))))) + foo(betray(-protect() * ( -( TABLE[( COLS )][betray(( betray() ))] ) ),foo(( bar(( -30.9 ) * -COLS,foo(TABLE[Sansa][-490.53],bar(destroy(dog,TABLE[-mislead(-0.58,( ( Jon ) + Arya ) * -COLS)][TABLE[( 74 )][-74]],Sansa)))) ),Sansa)),x) * --rule(( foo(-93 - COLS) ),( ( ( Stark ) / Jon ) - -13 / -150.1 + ( 1 ) + -75 - Arya / -COLS / ---7 )) / -ROWS )
}
assert Hodor : "Winter is coming"
def TABLE[-( TABLE[TABLE[x][-830.89] / -0.1][destroy(protect(Jon,57)) / 0.4 * 45] )][i] {

}
assert -ROWS : "One can not simply parse himself"
def TABLE[TABLE[protect(-66,0.06) - -Ygritte][bar()]][i] {
	if(betray(TABLE[dog][53])){
	if(protect(-1 + Stark,bar())){
	if(Jon){
	Jon *= protect(ROWS)
}
} else {
	-Stark - mislead(protect(0.92),destroy(( mislead(foo()) ),--0.7) - protect()) / -ROWS / -ROWS / 0.9
}
} else {
	y *= -151 * -60;
	-33
}
}
assert ---( -( 44 ) / --380.125 - bar(rule(0.34)) ) : "Winter is coming"
assert betray(-( ( bar() ) )) : "One can not simply parse himself"
def TABLE[x][i] {
	if(Ygritte){
	Hodor += -( Ygritte );
	Hodor -= 22
};
	if(( -TABLE[ROWS][protect(mislead(),bar(COLS,rule(( foo(ROWS,foo(Jon,( Stark ))) ),( TABLE[ROWS][destroy(-mislead(),( -1 ))] )))) / COLS] )){
	bar(-70.525 - -( ( TABLE[--33][96] ) ) / -310.26,-820.572,( -1 ));
	if(( destroy() )){
	if(-( ROWS ) * ( ( destroy(TABLE[( TABLE[--300.56][( Sansa )] )][-350.266],-690.09,protect(-( Hodor )) - --90 * protect(Ygritte)) - --Sansa - -Hodor / -x ) )){
	( ( mislead(COLS,--1) ) );
	y += -bar(-ROWS) + ( mislead(-COLS + 99 / --protect(-1,foo())) ) + -y
} else {
	if(ROWS){
	if(COLS){
	Jon
};
	Hodor *= 0.03
};
	if(mislead(1 + -x,-COLS / bar(( TABLE[-mislead(-( betray(-bar(protect(ROWS,protect(( ( ( 630.569 ) ) ),-rule(-1 * protect(ROWS / TABLE[32][destroy()])),( Stark * protect(TABLE[( --COLS + Jon )][mislead(( ( -1 ) ),x,TABLE[-0.86][ROWS])]) ) * -55 - ( bar(COLS,( -ROWS ),-51 - ( Stark - -Arya )) ))),-destroy(dog)),-( ROWS ) + --protect(21),-dog - destroy(y,ROWS)) ))][rule()] )) * foo(COLS),0.79)){
	Sansa += Arya / TABLE[( destroy() )][43 * y * foo(610.6438,bar(ROWS / COLS - -0.47 / COLS,-56))] * --0.91;
	ROWS
} else {
	betray(TABLE[-ROWS][COLS - ( x )],Hodor + Sansa) + ( ( 0.4 ) );
	dog += ROWS
};
	if(y){
	Stark /= TABLE[destroy(-19,betray(rule(-rule(x - -mislead(betray(( ( ( ( ( Hodor ) ) ) ) ) / betray(foo(COLS,0.4)))),-360.4),( ( -30.2931 * TABLE[--0.31 * -( dog ) + protect(( TABLE[--( ( 1 ) ) * ( rule(( COLS ) * ROWS + Sansa) )][Ygritte] )) * 0.44][-dog + -20.15] - -ROWS ) ))),betray(Jon,-Jon))][betray(( betray() ),( -0.61 ),betray())];
	TABLE[( ( rule(betray(y,( protect() / Sansa / mislead() / --ROWS )),mislead(-1,-( rule(TABLE[0.11][1]) + -9 - ( TABLE[ROWS][( Arya )] ) * betray(-1,0.16) ))) ) )][dog];
	if(destroy(bar(Hodor - --betray(y,-( ( --0.63 ) ))))){
	if(COLS * ( ( Arya ) ) * ROWS){
	Stark /= destroy(-ROWS);
	50.5274;
	Ygritte -= rule(( -0.86 + betray(64) ),mislead(-TABLE[rule(dog,destroy(( ( -( COLS ) ) ),-destroy(-850.69,66 / destroy() - -64)))][TABLE[Jon][( --1 )]]))
}
}
}
};
	Sansa += 1
}
} else {
	ROWS;
	x -= ( ( 190.67 ) )
}
}
def TABLE[-790.432][j] {
	if(y){
	Hodor -= ( ( rule(Arya) ) )
};
	if(betray(COLS)){
	Jon *= ( ( Hodor ) );
	if(-68){
	x /= -0.71 - ROWS;
	y += betray(bar(-0.69) + 540.8655,destroy(dog))
} else {
	if(betray(( rule(Sansa,( ( x ) )) / destroy(( y ) * ( ( -410.51 ) ),-( -( -0.77 ) ),1) ),-4,0.39 * rule(-Stark) - --rule(--1) / -ROWS + mislead(-( bar(Jon) ) * rule(21,( ( -( -0.57 ) ) )),protect(bar(rule(mislead(-( -( -0.8 ) - Jon ),( Arya ) / ( bar(Arya,-Hodor) )) - 17,COLS),-410.3353),-59)))){
	if(destroy(mislead(),-ROWS) + ( ( --destroy(TABLE[betray(60) * foo(bar(-1) + -betray())][ROWS - -0.85 / 66]) / --13 - Arya ) )){
	COLS / x;
	60;
	if(( mislead(-1) - mislead(Jon,( ROWS )) - 1 )){
	betray(Arya,( ROWS ))
} else {
	TABLE[( COLS )][mislead(ROWS,-540.74,COLS)];
	( Sansa * ( --820.83 ) + y + protect(bar(30,-Stark / destroy(( Sansa ),-x / mislead(Stark)),Hodor),( dog )) / x / mislead(protect(Stark,protect(-27,Sansa),Jon),Hodor) );
	--0.09
}
} else {

};
	if(bar(Stark)){
	if(rule(4) - -ROWS){
	( TABLE[0.56 / foo(Stark,-1)][Ygritte] );
	if(TABLE[TABLE[bar(( -bar(( destroy(COLS,-COLS) ),Ygritte) ))][-0.79 - -( -0.2 )]][( -0.66 + 79 / protect(foo(destroy()),-( ( TABLE[rule(y)][-640.69] ) )) )]){
	if(--85){
	if(mislead(--0.79,foo(ROWS))){
	-0.79;
	if(TABLE[destroy(( foo() ),y) / ( 0.52 ) * ROWS][( Stark )]){
	if(-bar()){
	if(foo(TABLE[0.13][COLS - ( y + ROWS )],-x)){
	TABLE[-( -13 - ROWS )][( y )];
	if(( x )){
	Stark
}
} else {

};
	x
} else {
	Jon -= 0.55
};
	Arya /= ( betray(COLS,-( dog )) )
} else {

};
	if(Stark){
	if(Sansa){
	dog;
	if(-rule(0.34,protect(y,( -0.63 )))){
	dog /= TABLE[Stark][( ( -( -0.93 ) ) )];
	-( ( -1 ) )
} else {

}
} else {

};
	( betray(( ( ( ( COLS ) ) ) ),Hodor + 8 / ( foo(x) ) * -TABLE[bar()][x]) / ROWS - protect(TABLE[Stark][rule(ROWS)] / 0.38,( ( -protect(( ( betray(( mislead(destroy(mislead(),1,( y ))) )) ) ),630.76) / destroy(protect(1,-( destroy() ) * foo(Arya,y,( ( -TABLE[-590.36 / ---510.9194 / -COLS][mislead(( -90 ))] / -Arya ) / --ROWS + ( 52 ) )))) * -( -( Arya ) ) ) * y )) * ( ROWS / bar(-betray(0.59) - Hodor / y,0.44) ) )
}
};
	Sansa *= ( ROWS * COLS );
	y -= -rule(0.83,11)
};
	if(-0.12){
	mislead(-1 - -ROWS * --( bar(( -1 ),( foo(-TABLE[COLS][foo(( ROWS ),( TABLE[dog][0.48] ))],mislead(COLS)) )) ));
	-Arya;
	if(protect(y,y)){
	Sansa - mislead(COLS,bar(),490.3629)
}
} else {
	Hodor += ( -58 * --ROWS - -( -Stark ) );
	Jon /= x;
	Jon -= TABLE[-94][Arya]
};
	foo(COLS,protect(Sansa,dog,Sansa),( COLS ))
} else {

}
} else {
	71;
	ROWS
}
} else {

};
	Ygritte += ( Hodor )
} else {
	Stark += ( protect(( mislead(930.5494) ),TABLE[--0.39 + ( -COLS )][ROWS]) )
};
	( -1 )
}
} else {
	if(-COLS){
	if(mislead()){
	if(( COLS )){
	Stark -= COLS;
	Ygritte *= betray(TABLE[---0.64][Arya])
};
	Hodor += ( -Sansa );
	x -= -( -0.23 ) * -dog
}
};
	betray(ROWS,y)
}
}
def foo(x,Hodor,Sansa){

}
assert Stark : "Winter is coming"
assert -protect(-0.15,( -0.38 ) + COLS) : "Nothing burns like the cold."
var y = -protect()
assert ( -destroy() - 71 ) : "Winter is coming"
assert bar(63) : "One can not simply parse himself"
var y = ( Jon )
assert ( rule(foo(destroy(( --betray(( Jon + betray(ROWS) * 1 ),-0.17) ),rule(y,Hodor))),-y * -530.5 - Ygritte) ) : "Winter is coming"
def TABLE[bar(-ROWS - ( -640.535 + ( foo(rule(dog,Sansa)) ) ),( 70 ))][i] {
	if(TABLE[-36][destroy()]){
	if(TABLE[-0.92][( COLS )]){
	Ygritte *= ( ROWS );
	dog;
	y *= --1
}
} else {

}
}
def TABLE[-1][k] {
	if(( -0.25 )){
	x += TABLE[( ( bar(ROWS) ) )][rule(protect(Ygritte + --( 320.1738 / Arya ) / -75 + TABLE[protect(( ( -( COLS ) ) )) - Stark][TABLE[-Stark][Ygritte + -1]]),-82)];
	Hodor += TABLE[Arya / mislead(-24)][-52]
} else {
	x += 0.65;
	if(( 96 )){
	x -= Arya - Jon - -510.7 * Arya;
	870.91;
	if(y){
	Sansa /= ( -x )
}
};
	Sansa -= -800.186
}
}
var Arya = -( -TABLE[Hodor][protect(betray(( Sansa ),( ( ROWS ) )))] )
var x = ROWS
var Stark = ( y )
def destroy(y){
	if(bar(Hodor,Sansa,TABLE[Ygritte][Stark - mislead(Sansa,TABLE[( -Stark )][-foo()] / -COLS * rule(mislead(y,0.5),Stark,--1) + COLS,TABLE[TABLE[protect(protect(protect(520.25)) / Stark,ROWS - ROWS)][Arya]][( 440.968 )] - bar(( TABLE[TABLE[( y )][-Jon / Stark]][0.65] * ( --78 ) ),--foo(( mislead(ROWS) / Hodor )) * x / mislead(COLS)))])){

};
	if(-( Ygritte )){
	Arya += bar(--Stark) - ROWS
} else {

}
}
assert ( -0.16 ) : "Nothing burns like the cold."
def betray(){

}
def TABLE[---Hodor][k] {

}
def bar(dog,Arya){
	rule()
}
assert -0.42 : "Winter is coming"
assert rule(bar(betray(TABLE[--destroy(dog,betray(ROWS,TABLE[mislead(-Arya)][TABLE[-foo()][destroy()] - 71])) + TABLE[( y )][-Hodor]][( -50.89 )],Jon),COLS,( betray(rule(dog,y),0.04) )),ROWS * -0.18) : "Fear cuts deeper than swords."
assert mislead(-0.67,Stark) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert protect(Sansa) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	x /= destroy(-1 + ( Stark ),470.56,20);
	betray(TABLE[Hodor][( TABLE[1][COLS] )])
}
def betray(Ygritte,y,x){
	if(bar()){
	Ygritte;
	y
}
}
assert TABLE[mislead(foo())][( foo(34,x) ) + ROWS * betray(-10) + Jon] * x : "What do we say to the Lord of Death?"
var y = destroy()
def TABLE[( ( ( -betray(( rule(-destroy() - 3) + TABLE[( ROWS )][Arya / COLS] ) * ROWS + TABLE[destroy()][-Jon],protect(-Jon,--44)) ) ) )][i] {

}
var Arya = -Arya
def rule(Arya,Jon){
	bar()
}
assert bar(y,foo(-( -88 ))) : "What do we say to the Lord of Death?"
def TABLE[90][j] {
	y += --betray(betray(Jon),betray(-( -30 ) / rule(),ROWS))
}
assert -bar(Sansa - ( foo(ROWS) * Sansa / -foo(bar(0.3),foo(ROWS,140.48)) ) / betray(),rule(TABLE[COLS][x],( 861 ),( ROWS )) * -69 - --Hodor) : "What do we say to the Lord of Death?"
def TABLE[-ROWS][i] {
	Ygritte += TABLE[( ( betray() ) )][( ROWS )]
}
assert --0.3 : "Winter is coming"
def TABLE[-68][k] {
	COLS
}
def protect(){

}
var y = ( 810.07 )
def destroy(Stark,Arya){

}
var Ygritte = ( TABLE[ROWS][y + ( dog )] + mislead(-480.9,-31,mislead()) )
assert ( ( ( protect() ) ) ) : "Winter is coming"
var Jon = Ygritte
def TABLE[72][j] {
	Jon
}
def TABLE[-Stark + destroy() + Sansa][j] {

}
def foo(y){
	if(( Arya )){
	if(TABLE[-Arya][-Sansa]){
	if(destroy(-Ygritte)){
	bar(bar(ROWS,-y),( mislead() ))
};
	Stark -= betray(( TABLE[dog][-36] ))
}
} else {
	y /= ---ROWS - -protect(Sansa - ( ( 860.5667 ) ) / -ROWS,-620.35,( ( ( Sansa ) ) )) * --destroy(-dog,foo(61 * ( -y ),ROWS) - dog) * ROWS;
	Hodor *= 0.27
};
	if(-980.84){
	if(( COLS - bar(-0.55,COLS + ( 19 )) - TABLE[Hodor][( -COLS )] - Jon * protect(0.39,y) - -Jon / ROWS )){

} else {
	12;
	dog -= Hodor + -Sansa;
	-( -COLS )
}
} else {
	---1
};
	TABLE[x][foo(foo(y,dog))]
}
def destroy(Sansa){
	dog *= Arya;
	dog += ( 45 )
}
def TABLE[Stark][i] {
	dog;
	bar(mislead(Arya,Ygritte,( --1 * Hodor ))) * x
}
assert TABLE[-0.56][bar(0.63,( foo(ROWS) ) / TABLE[betray(40,destroy(TABLE[0.7][betray(COLS,TABLE[--mislead(y,bar(-bar(Arya) + Ygritte) * TABLE[bar(-0.17,bar(TABLE[-rule(( TABLE[-0.81][----( TABLE[( ROWS )][170.26] ) + mislead(Sansa,1 + betray(Sansa,( ( rule(( COLS ) - ( ROWS )) ) ))) / -300.01] ),1,ROWS)][foo(-( -ROWS - TABLE[0.48][COLS] ),Sansa - -Hodor + Jon)],( ( mislead(Arya / -protect(),--( 73 )) ) ),-1) + mislead(rule(TABLE[foo(0.27 - 0.07)][protect(COLS)],( TABLE[-Hodor][Stark] ) - -( ( Jon ) )),( COLS )))][mislead(TABLE[( ( -y - protect(-betray(( Stark ),dog,ROWS),2) * mislead() ) + TABLE[bar(( ( ROWS ) ))][Jon] ) + protect(-0.28,( betray(690.7,protect(TABLE[COLS / destroy(Sansa,dog) * ( -( -TABLE[--0.03][x] ) ) / ( COLS + Ygritte / 0.52 / destroy(mislead()) )][-8],mislead(1,( -1 )))) ))][-0.15],foo(---0.82 + y,COLS),( 0.77 ))])][ROWS],foo(( -bar(--x,betray()) ))) / -0.97] + -( TABLE[-0.81][destroy(dog,-87)] ),--230.5),rule(94 * -590.672))][dog],-ROWS)] : "One can not simply parse himself"
var Jon = ( bar(0.48,-Hodor) ) - Stark
def TABLE[-6][k] {
	TABLE[( x )][( COLS )]
}
assert 1 : "Winter is coming"
def protect(x){
	-0.29;
	if(TABLE[x][( 1 * Arya )]){
	ROWS
} else {
	Hodor /= -4
}
}
assert rule(Ygritte,destroy(bar(Hodor,Arya,-42)) - x,-89 / destroy(TABLE[x + ( bar(( foo(--( TABLE[-1][betray(-COLS * destroy(COLS,( Ygritte )),ROWS / -COLS,mislead(Arya,---970.51,Jon))] )) )) )][TABLE[( Stark )][rule(destroy(0.88,ROWS,-( ( --59 ) )))]])) : "Nothing burns like the cold."
var y = dog
assert -protect(ROWS / -destroy(TABLE[ROWS][Sansa],-ROWS,-( Arya ))) - betray(-dog) : "What do we say to the Lord of Death?"
assert betray(TABLE[-mislead() + destroy(x,protect(betray(48,-COLS)),TABLE[bar(( ( y ) ),TABLE[-1][y],ROWS - -Jon + TABLE[( 840.809 )][rule(( ( COLS ) ))] + -0.45)][-1])][-0.14],-( ( destroy(protect(-mislead()),COLS + -mislead(),--( 590.8 )) ) ) + --x,( -ROWS )) : "Nothing burns like the cold."
def rule(Hodor,Ygritte){
	--53 - 0.02
}
def TABLE[-0.61][i] {
	if(TABLE[destroy(mislead(mislead(),dog,mislead(0)))][--COLS + 980.569 / ( Jon )]){
	y += bar(destroy(Ygritte) * -Arya)
} else {
	Hodor += ( betray(( COLS ),-0.58) )
};
	if(mislead(( betray(-1) ),destroy(foo(-( ( y ) ) / y / x * -Hodor,( ( bar() ) )),TABLE[dog][( -destroy(-( Jon ) - ROWS) )]),ROWS)){

};
	Hodor += -ROWS
}
def betray(y,Stark){
	Arya;
	1
}
var Ygritte = TABLE[1][y]
def TABLE[Jon][i] {
	if(( TABLE[betray(COLS,-betray(ROWS * --( mislead() ) * COLS,-24) + ( Arya ))][( ( -800.4011 ) ) / ROWS] )){
	1
}
}
def TABLE[( ( protect(rule(-( ROWS + -( TABLE[Sansa][( 0.34 )] ) ) + -( TABLE[-COLS * Stark * -COLS][--160.6 / 7] ) / ( ROWS + destroy(foo(mislead(TABLE[bar(( dog ),Sansa,dog)][( rule(rule(-Jon)) )],-TABLE[( ROWS )][ROWS] - ROWS,protect(rule())))) - rule(foo(Sansa) / ROWS) ) - ( 90 ),betray(y),1),-Ygritte) ) )][j] {
	if(Sansa){
	if(Arya){

} else {
	-0.36;
	--ROWS
};
	Sansa /= Jon + TABLE[-TABLE[Ygritte - foo(-83)][y] - dog][foo()];
	( COLS + Ygritte )
}
}
def TABLE[ROWS][k] {
	dog -= ( dog ) + bar(( betray(-TABLE[( Jon )][0.25],foo(--1) / TABLE[COLS][-( Jon )]) ) / ( ( Arya ) + Ygritte ) + 0.5,-bar(foo(protect(Ygritte))),( 0.1 ));
	betray()
}
def TABLE[( ( y / protect(-Hodor) + TABLE[( ( 28 ) )][-0.16] ) )][i] {
	-43
}
def destroy(Ygritte,Ygritte){
	if(ROWS){
	-0.25;
	--0.55;
	x /= Arya
}
}
assert protect(-64) + ( --( 970.169 ) ) * 0.23 : "Winter is coming"
assert -23 : "One can not simply parse himself"
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = foo(( ( bar(Hodor,rule(-Stark + Hodor),-70) / destroy(rule(ROWS,Jon)) ) ),( -COLS ))
assert ( ROWS ) : "Fear cuts deeper than swords."
var y = ROWS
def TABLE[-890.1183 / x][i] {
	Arya -= ROWS;
	if(dog){
	if(bar(TABLE[ROWS][-destroy(ROWS) * 500.3],290.9087)){
	y -= -( -COLS - ( -ROWS ) + -85 );
	Arya -= ROWS
} else {
	Hodor;
	if(( COLS )){
	Arya += Ygritte;
	Hodor /= mislead(( Arya ),COLS,-( destroy(--77 / ( y ) * 840.63,Sansa - destroy(-ROWS) * Jon,( TABLE[( ( COLS ) )][Ygritte] / Jon ) * ROWS) ))
}
};
	if(protect(79)){
	if(( bar() )){
	foo(Sansa,-42);
	-( protect() )
};
	10
}
};
	Ygritte /= 1
}
def TABLE[Ygritte][k] {
	if(-( foo() )){
	if(x - foo(-( y / Hodor ))){

};
	betray(1,COLS) / betray(( COLS ),destroy(TABLE[rule(-0.12)][Hodor + ROWS]))
} else {
	COLS;
	Jon += TABLE[Stark][( Sansa )]
}
}
def bar(Hodor){
	if(( Ygritte )){
	x /= Sansa;
	Sansa /= foo(Jon) / Hodor
};
	if(( betray(betray(-0.17,-ROWS,dog) + -0.25 / 25,y) )){
	Jon /= COLS / -COLS;
	if(Ygritte){
	if(---( y ) - COLS * Ygritte - 0.13 / -Jon - betray(COLS,COLS) - mislead(Sansa * --65) + foo(x,Stark)){
	y += --betray(ROWS)
}
}
} else {
	Arya *= -Sansa;
	Hodor -= mislead(mislead(Stark) * -mislead(( Stark )) / 41)
};
	if(( TABLE[dog][TABLE[-0.17][-Ygritte * -TABLE[TABLE[rule(-( COLS ),ROWS)][TABLE[protect()][( -1 / 0.47 )]]][ROWS]]] )){
	x *= y
}
}
assert -TABLE[Hodor][( ( ( -0.89 ) ) )] : "One can not simply parse himself"
var Arya = mislead(Stark * mislead(( 0.74 ),mislead(( ( foo(-0.81,TABLE[foo(-0.2)][ROWS],( x )) ) ),protect(betray(Sansa - ( Arya * -1 )),Stark,TABLE[dog / 1][( x )] - 92),Arya)))
var Stark = Stark
def protect(){
	Arya -= dog
}
assert destroy(Arya,920.12) : "What do we say to the Lord of Death?"
var Arya = COLS
def TABLE[COLS][j] {
	COLS
}
assert ( --0.09 ) + 0.33 + ( Stark ) + -1 + TABLE[COLS][---( betray(rule(dog,TABLE[( ROWS )][COLS])) ) + ( -( ( protect(-( -( 1 ) )) ) ) )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy(Jon)][j] {

}
def mislead(x,Jon){
	if(x){
	x *= y;
	x *= COLS
};
	-1;
	-Sansa
}
def bar(){
	dog += TABLE[y][Arya];
	rule();
	dog *= 0.04
}
var Stark = TABLE[( -foo() )][bar(COLS)]
var Ygritte = -Arya
var Sansa = x
def mislead(Stark){
	COLS;
	if(ROWS){
	if(COLS){
	-0.68 * -0.1
};
	if(-ROWS){
	if(-1){
	( ROWS );
	Stark -= bar(Jon / -( --0.62 - -betray(( TABLE[650.1451][-1] ),69) ))
};
	Ygritte /= ROWS
} else {
	if(Arya){
	Sansa *= Sansa;
	Hodor -= --rule(betray() / ROWS,( 0.69 ) * Jon / -Stark);
	if(-17){
	1
}
}
}
}
}
var Hodor = mislead(-destroy(450.7985,-0.09) - -bar(bar(1),--Arya,COLS) * ( 87 ),Ygritte - ( TABLE[( foo(TABLE[-0.86 / ( ( ( --240.98 / ( Arya ) + -Hodor ) ) )][COLS]) ) - -1][betray()] ) + ( 0.35 ) * bar()) * betray(COLS,( Jon ),-( x ))
var Jon = TABLE[bar()][( -( COLS ) * -mislead(( ( ( destroy(TABLE[-83][rule(ROWS,ROWS)]) ) ) ),-67,Ygritte) ) * -610.95 / rule(-y)] / -TABLE[y][-( -COLS ) / -betray(( -Ygritte ) * ( ( bar(bar(-16,Arya - 89 + COLS)) * -86 - ( 0.17 ) - protect(--0.24) ) * ( -440.04 ) - --1 / ( -1 ) )) * COLS - -COLS]
var Ygritte = -TABLE[( protect(protect(),-dog) )][ROWS] / 86
def TABLE[--41][k] {
	if(( TABLE[( Jon )][foo()] )){
	if(ROWS){
	Jon /= -110;
	( ( ROWS ) )
} else {
	Sansa += -250.8
};
	Jon -= --ROWS
}
}
assert 47 : "Nothing burns like the cold."
assert bar(rule(-0.06,ROWS),mislead(),foo() + ROWS - Jon) : "One can not simply parse himself"
var y = 1
assert -63 : "One can not simply parse himself"
var Hodor = --57 + ROWS
var Stark = x
assert ---Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -11 * ( Hodor )
assert 0.95 : "Winter is coming"
assert -0.5 : "What do we say to the Lord of Death?"
assert 0.96 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Sansa ) : "One can not simply parse himself"
var dog = ( ROWS )
var Sansa = rule(COLS)
assert dog : "Winter is coming"
var dog = Hodor
assert dog : "Fear cuts deeper than swords."
var y = Stark
def destroy(){
	if(( -TABLE[-0.37][440.41] )){
	Arya -= COLS
};
	ROWS
}
assert foo(rule()) : "What do we say to the Lord of Death?"
var Jon = -980.029
assert ( foo(Arya,-Sansa) / ROWS ) * ROWS + -1 * 400.99 + protect(dog) - TABLE[destroy(Jon,( -( mislead(( Jon )) ) ) / -( -30.1 ) - ROWS - ( -0.55 ))][-foo(-----( Sansa ),protect(),Sansa) - betray(( COLS ),1,( ( TABLE[TABLE[-1][betray(Arya,( Stark ),-1)]][Jon] ) ))] : "One can not simply parse himself"
assert ( --ROWS + Jon ) : "Fear cuts deeper than swords."
assert -( ( ( ROWS ) ) ) : "One can not simply parse himself"
def TABLE[ROWS][i] {
	dog += TABLE[--dog][ROWS];
	Ygritte *= -Arya;
	Hodor += -350.155
}
assert ROWS * COLS : "One can not simply parse himself"
def TABLE[Sansa][k] {
	Hodor -= COLS;
	if(Ygritte){
	x;
	dog -= -0.22
} else {
	bar();
	if(50.167){
	( ( -71 ) );
	if(TABLE[-0.55][Jon]){
	-COLS;
	dog -= destroy()
} else {

}
} else {
	-600.247 * ROWS + Sansa;
	mislead(( destroy(--0.97 / -0.95,-67,TABLE[-0.1][y]) ) * bar(-13,-1 - -( TABLE[TABLE[betray(--( 61 ),ROWS,Sansa)][( Hodor )] * Arya][( 0.78 )] ) * 90.1),( ( -0.96 ) ),-1)
};
	-0.39
};
	-( -1 ) / Jon
}
assert Arya : "What do we say to the Lord of Death?"
assert TABLE[( Hodor )][( 540.704 )] / -ROWS : "Nothing burns like the cold."
def TABLE[ROWS / -mislead(( destroy(Jon,-27) )) / ROWS][i] {
	Stark *= Stark;
	y += x + COLS / -( ROWS )
}
def TABLE[x / -6][j] {
	if(ROWS){
	0.59;
	Sansa += -1
};
	if(--destroy(-82) + protect(-foo(),-( ( COLS ) * Hodor / y + 4 - ( -7 ) * -490.3 ))){
	if(Sansa * rule(620.9,foo(-Jon))){
	if(COLS - TABLE[bar(( Sansa ),-Sansa,ROWS - rule(ROWS,dog,-Hodor - TABLE[0.44][( ( bar(( betray(--foo() * -150.15,mislead()) ),77) ) + -( 0.59 ) / --0.69 - betray() - -1 )]))][-TABLE[TABLE[bar(0.18,Hodor,protect(-TABLE[-25][ROWS]))][Stark]][x * -dog + ( betray(( -Stark * ( -dog ) ),rule(( --TABLE[x][-16] / ( Ygritte ) ),( 34 )) / rule(foo(COLS,( ( -x ) )))) )]] + Ygritte * TABLE[( Ygritte )][ROWS] * ( TABLE[TABLE[TABLE[dog][y]][protect(( bar(( -82 )) - ( ( foo(ROWS) ) * -( -0.57 ) ) ),COLS)]][y] )){
	if(Arya){

} else {
	0.26;
	if(( Stark )){
	if(COLS){
	if(TABLE[mislead(Ygritte,Hodor)][mislead(COLS)]){
	Ygritte /= -9 - Ygritte;
	x += ( mislead(( -bar(y,ROWS) ),Arya / -Arya) / ROWS );
	destroy(ROWS / ( ( ROWS ) ),Arya)
} else {

}
};
	if(-( 99 ) - Arya){

}
} else {
	Stark += ( -Arya );
	x -= destroy(destroy(ROWS,mislead(-10.2613) - 0.04),ROWS * ROWS,Hodor)
}
}
};
	dog += 63
}
};
	if(( ( ROWS ) )){
	-0.84 + rule();
	protect(TABLE[-Arya][rule(--bar(( -mislead(85 - 79 - ( -Sansa ) - 0.42,y) )) - mislead(Sansa,-1,COLS),( -80.12 ))],foo(( Sansa - -55 / ( ( y ) ) )))
} else {
	Arya -= 62
}
}
assert rule(COLS,ROWS) : "What do we say to the Lord of Death?"
assert 18 : "One can not simply parse himself"
var Arya = ( x )
var Jon = COLS / foo(COLS,-61) / -4
assert ( -( --98 ) * -bar() ) + foo() : "What do we say to the Lord of Death?"
assert Stark : "Nothing burns like the cold."
def betray(Ygritte,Sansa){

}
def bar(x){
	-64;
	-COLS
}
assert Hodor : "Fear cuts deeper than swords."
def rule(x,Arya,Stark){
	if(Hodor){
	Stark += ( ( Hodor ) )
} else {
	Hodor
}
}
def foo(Arya,y,Ygritte){
	Jon += COLS
}
var Arya = -( -Hodor ) * TABLE[ROWS][-0.16 + -0.61]
def TABLE[( 21 )][j] {
	( dog )
}
def TABLE[( y ) - --0.76][k] {
	if(COLS){
	if(protect(y * y + -x,56 - -protect(ROWS))){
	Stark;
	if(Ygritte){
	Hodor *= foo(( mislead(( destroy(( -COLS + protect(foo(dog),-x,( Stark )) - -TABLE[-( -1 )][bar(mislead(ROWS,foo(-COLS,--Arya - -340.432)))] * ( Stark ) ),66) ),Hodor) - TABLE[ROWS][dog * ( -dog )] ),Sansa);
	Ygritte -= -23;
	Hodor /= dog
}
}
};
	Stark /= -0.86
}
var Hodor = Jon
assert --COLS * -480.0698 : "Fear cuts deeper than swords."
assert ( y ) : "What do we say to the Lord of Death?"
assert Jon - -( ROWS ) : "Winter is coming"
def TABLE[ROWS][i] {
	Sansa += 1;
	mislead(-27)
}
def protect(Sansa,Hodor){
	Ygritte *= rule(0.55)
}
def TABLE[-COLS][k] {
	if(-TABLE[TABLE[COLS][bar(Arya)]][COLS] * 50 + Arya){

} else {
	if(--( ( -21 ) )){
	Jon += bar(0.71 + ( Jon ),--rule());
	protect(betray(-Hodor))
};
	dog *= COLS + COLS + 470.8735;
	Arya -= ( TABLE[ROWS + -0.95][( TABLE[-0.1][rule(bar(41,1,-Ygritte))] )] ) * Jon
};
	Sansa -= ( -0.98 )
}
var y = -1 * TABLE[TABLE[1][Arya + ( Stark )]][( 280.674 )] - ( ( -x ) )
assert mislead() - y : "Nothing burns like the cold."
assert 38 : "Fear cuts deeper than swords."
def TABLE[0.53][i] {
	if(-Stark - -( 0.37 )){
	-70
} else {
	if(ROWS){
	-82;
	COLS
};
	0.11
}
}
assert ROWS : "Nothing burns like the cold."
def destroy(x,y){
	bar(protect(( ( ( -y + mislead(ROWS,73 * 1 * Hodor,TABLE[0.83][( ( -destroy() ) )]) ) ) )) - 88 / -( ---1 ));
	dog *= 0.49 - Hodor - --53
}
assert -----88 : "Fear cuts deeper than swords."
var Ygritte = betray(-0.82,Hodor)
def foo(y){
	dog /= COLS
}
def rule(x,Sansa){
	mislead(ROWS - Sansa,Sansa);
	if(ROWS){
	Stark *= Stark;
	Jon += 42
} else {
	if(Jon){
	( -2 )
} else {

};
	---1 - Hodor
}
}
var Stark = -44
def TABLE[dog][k] {
	Stark;
	Sansa;
	dog += -59 + Stark
}
def destroy(){
	if(-rule(mislead())){
	Stark /= ( ( ROWS - 0.89 - Jon ) );
	if(ROWS){

} else {
	ROWS;
	x *= ( -Arya - Jon * mislead(( -( -TABLE[( Arya )][( Sansa )] ) + TABLE[1 + 1][1] / dog ),TABLE[Sansa][( protect(( betray(mislead(300.76,--bar(TABLE[COLS][( ( COLS * mislead(-COLS - 1,Sansa,mislead(--45 * COLS + ( y ) / 1 - 44)) ) )],Jon - ( -y * 65 ),mislead()))) ) + COLS,protect(ROWS)) )],-0.21) );
	Hodor *= COLS
}
} else {

}
}
def bar(dog,Ygritte,x){
	( --rule() )
}
assert ROWS : "Winter is coming"
var dog = ( rule() )
def rule(){
	ROWS;
	Ygritte *= ROWS
}
var Sansa = x
var x = 0.99
def TABLE[y][j] {
	-1 + mislead(( --0.58 + --470.95 - mislead(-0.91,mislead(( Stark ),-ROWS)) * ROWS ))
}
assert -Arya : "Nothing burns like the cold."
def TABLE[-bar()][k] {
	if(( Jon )){
	if(ROWS){
	if(1 * bar() + ROWS){
	ROWS
};
	-56;
	( TABLE[betray(-59)][Arya + TABLE[TABLE[-170.3][dog / ( bar(betray(TABLE[-Jon][bar()],ROWS * ( protect(-ROWS) ),Stark),( ( 84 ) )) / COLS / bar(Stark) )] * --270.6643][Stark] / destroy(y,( ( x ) ))] )
}
} else {

};
	if(-0.88){

} else {
	Arya *= foo(ROWS,Stark)
};
	-dog
}
var Hodor = 6
def TABLE[betray()][k] {
	if(-betray(--COLS / 220.5,TABLE[Sansa][-1]) * 55 + COLS){
	Sansa /= -y
} else {

}
}
assert -0.99 : "What do we say to the Lord of Death?"
var Sansa = COLS
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[rule(91,( ( x - betray(ROWS * TABLE[-( -( ( protect() + ( ( -x ) ) ) ) ) / TABLE[( mislead(mislead(( TABLE[-0.94][destroy(( --Hodor * Ygritte + y ) - ( Stark ))] ),-COLS + -0.03 / foo()),bar()) )][-TABLE[COLS][Stark * -ROWS + foo()] * ( Stark ) - TABLE[--87][-1]]][0.12],0.12) * --bar() ) ))][j] {
	Sansa *= ( mislead() );
	( ( ( ( Stark ) ) ) )
}
def protect(Ygritte){
	0;
	if(( foo(( 58 / rule(TABLE[dog][( ROWS )]) * -mislead(9,-1) ),betray(14 * -0.22,ROWS * 82),( ( TABLE[( -ROWS * bar(ROWS,foo(ROWS,-54)) )][Stark] / --Jon - -Jon - COLS / Sansa ) )) )){
	-( ( rule(TABLE[-( bar(x,( protect() )) + -0.28 - COLS / ( bar() ) * ( Stark ) )][COLS]) ) );
	if(TABLE[92][( TABLE[TABLE[ROWS][( 0.2 )]][-TABLE[-( 0.8 )][betray(COLS,bar(mislead(( ( TABLE[Hodor][( ROWS )] - foo(Sansa,-1) ) )),-y))] + ( rule() )] - -760.55 )] + Ygritte){
	Ygritte -= Hodor;
	if(--1 * mislead()){
	if(TABLE[COLS][Ygritte]){
	protect(( mislead(-y - 850.07) ),( COLS ));
	( Sansa );
	-1 + destroy(( -80 ),0.99 + -y / dog,-betray(foo(---0.82,( ( -Hodor + ( ( -destroy(y) ) ) + 70.394 - 0.15 ) ),Sansa)) + COLS + TABLE[ROWS][TABLE[-110.3][dog]] - ( rule(Stark + -0.41,0.63) ) / ROWS)
} else {
	if(bar(protect(TABLE[( y ) + -dog * COLS][1],bar(96) + TABLE[( destroy() )][dog],destroy(-ROWS,rule(-y,ROWS))),-protect())){
	ROWS
};
	dog += mislead(( protect(0.82) ),-ROWS)
}
}
}
}
}
def foo(){
	if(-x){

} else {
	Ygritte - ROWS;
	destroy(( Stark - ( betray(ROWS,destroy(ROWS)) ) * COLS ),670.07) - -ROWS - COLS;
	-( -69 )
}
}
assert ( -Sansa ) : "Nothing burns like the cold."
def protect(y){
	dog += 0.35;
	-ROWS / mislead(COLS,--COLS) - ( rule(-1) ) * ( -1 )
}
assert 230.2455 : "What do we say to the Lord of Death?"
def TABLE[( ( bar(0.18,Sansa + -ROWS - 0.14 + Arya - -protect(( bar(( betray(( ( Jon + Jon / 6 ) )) ) / betray(ROWS + COLS)) ),foo(betray()))) ) )][j] {
	( protect(----( Arya ) - -0.58 * ( TABLE[-7][Ygritte] + ( ( protect(-Jon) ) ) ),--Ygritte / -69 - ( -77 )) );
	if(( COLS )){
	bar();
	if(-67){
	Jon += Ygritte;
	if(68){

} else {

};
	( TABLE[0.48][dog] + y )
}
} else {
	Jon -= ( x );
	rule(-COLS - ROWS,-Sansa);
	if(COLS){
	mislead(COLS,Stark) + COLS
}
}
}
def TABLE[TABLE[-destroy()][1] / Sansa - rule(-0.19)][k] {
	y += -250.616
}
def protect(dog,Ygritte,Stark){
	0.91
}
def protect(Jon){
	foo(-Arya,860.721);
	y -= -Hodor + --1
}
var y = -y
assert rule(( -850.117 )) : "What do we say to the Lord of Death?"
var Hodor = destroy(betray(TABLE[TABLE[86][Arya * -690.551]][-13]) - -9 + -1 * --x,rule(-y,-( destroy(880.77 - 1,Arya) ) + -Arya,Stark / foo(-0.82 - ( y ),( ( 0.51 * 1 ) + 0.89 ))))
def betray(){

}
var dog = COLS
var Ygritte = dog
var dog = -300.9
var Sansa = y
assert -TABLE[( protect(betray()) )][( Sansa )] * x : "Winter is coming"
def foo(x){
	if(y){
	Ygritte *= Stark;
	if(( ROWS )){

} else {
	( 1 )
}
};
	if(bar(ROWS,( x * Stark ))){
	Jon /= ROWS;
	if(17){
	if(y){
	Arya *= COLS;
	Jon /= Arya;
	if(TABLE[( TABLE[x][-980.3] )][rule()]){
	dog;
	dog -= Arya
}
} else {
	if(( ROWS )){
	betray(COLS,54,TABLE[930.1][--16])
}
};
	if(16){
	( -mislead() );
	Ygritte *= ( ( TABLE[-0.36][Arya] ) );
	if(TABLE[y][x]){
	if(y){

} else {
	if(-TABLE[Stark][TABLE[-( 75 )][-20.8 / mislead(Ygritte * -TABLE[( x )][y]) * ( COLS ) - mislead(450.66) * dog] + Sansa]){

} else {
	Stark /= Stark
}
}
} else {
	Arya += -TABLE[COLS + ( ( 0.63 ) )][protect(-dog,TABLE[30.05][( COLS )])]
}
};
	-70.16 - COLS
} else {
	dog += bar(-ROWS,( mislead() ));
	-( 0.37 )
}
}
}
def TABLE[-bar(-Ygritte,ROWS) - foo(-100,( Sansa + Jon )) - ( COLS + 0.67 )][j] {
	Stark /= foo(protect(),TABLE[protect(ROWS,Sansa)][Arya],( 1 + 350.126 ))
}
def TABLE[y][i] {

}
var Ygritte = 73
def foo(Sansa){
	x -= rule(ROWS);
	if(-38){
	Ygritte /= 0
}
}
def bar(Sansa){
	Arya *= rule(Stark,ROWS);
	-( --( -840.1171 ) / bar(-550.76 - -Jon - -1 / TABLE[( -bar(betray()) )][Jon],Sansa / mislead(),--( mislead(-85) )) )
}
def betray(){
	Sansa *= -ROWS - 0.89 / rule();
	if(-mislead(COLS)){
	if(x){

} else {
	if(foo(( rule(-24,TABLE[Jon][-protect()]) ),dog)){
	Arya *= ( --TABLE[betray(( -COLS ) + -destroy(-x) + -19 - Jon * y - -( x ) - foo(( COLS ) / bar(-0.29,x),500.44) / -( ( 53 ) + rule(( ( 58 ) ),betray(x,foo(-bar(),( ( Arya ) )) * rule()),COLS) * -TABLE[Hodor * COLS][y * x] / ( --COLS + ( Hodor ) * Hodor / -47 * -TABLE[0.25][Stark] ) ))][ROWS] + -( y * COLS ) - -0.58 - -y * ( -1 ) )
} else {
	dog *= --Arya / -620.72 + -COLS;
	Arya /= rule(TABLE[-890.17][( rule(destroy(COLS),-1) )],destroy(Hodor,Ygritte,Hodor));
	protect(Ygritte,( foo(-TABLE[COLS][--( mislead(1 + ( ( -TABLE[( ( 0.58 ) )][mislead(-y)] + betray(betray(TABLE[COLS][( -1 )],-Jon,ROWS),bar(--COLS / -bar(bar(-( -dog ) + -1,TABLE[( dog )][0.62]) + x)),--COLS - Arya - ( 1 - Ygritte )) ) )) ) + Arya - protect(-Jon,protect(),( protect(ROWS) ))],mislead(( Arya - mislead(TABLE[x][ROWS],-79) + destroy(Stark,-TABLE[mislead(COLS)][Jon],( COLS )) ) * y,-( bar(ROWS,rule(-( --( Ygritte ) ),protect()) - -8,( 0.48 * ( Stark ) )) ),-y * -( TABLE[rule(Hodor)][( y )] ))) ) - ( -ROWS - -88 ))
}
}
};
	if(dog - dog){
	Stark += ( x )
} else {
	Hodor /= y
}
}
assert foo(Jon) : "Fear cuts deeper than swords."
var y = ---98
def TABLE[rule()][k] {
	if(-Hodor){
	Ygritte *= destroy(92,mislead(COLS,( ( 55 ) ))) / -TABLE[foo(-Sansa + Arya)][Jon]
};
	Jon += Jon
}
def TABLE[Hodor][i] {
	mislead(( dog ));
	Sansa *= -COLS - ( Ygritte );
	Ygritte /= -betray(-75,y * foo(( x ) * -( ( -1 ) ) - 94),-( -67 ))
}
def TABLE[-( Ygritte )][j] {
	if(betray(Jon,( ROWS ),COLS * 290.949) + COLS){
	if(foo(-TABLE[0.07][-0.42] * ( TABLE[rule(( 1 ),-destroy(---980.51 * destroy(1 * -0.61 - x,bar(( ( Hodor ) )) / Sansa))) * COLS + foo(mislead(betray(---dog - -0.14,destroy(( ( ROWS ) ),---Sansa,Jon)),-1,betray() + TABLE[betray(-60,mislead(destroy(y) / Jon,COLS,-320),( destroy() / ( Stark ) ))][Sansa] - -TABLE[Stark][0.67] - ( ROWS )),-710.71) - -destroy(19,( ( x ) )) - TABLE[-1][x]][rule(bar(),Jon,1)] + betray(TABLE[30][--( TABLE[-protect() / -15 * 0.73 * dog][0.77] )] * Arya,y - -dog) ))){
	Hodor - Arya;
	if(rule(880.326 * Sansa * --340.3,x)){
	if(mislead(Hodor,45) - bar(mislead(-mislead(protect(50)))) / COLS){
	if(y){
	if(dog){
	if(TABLE[-240.343][-ROWS / -( rule(-dog) ) * protect(( 19 )) - -( 0.89 )]){
	0.39
} else {
	y -= -COLS;
	if(--0.67){
	if(( -99 )){
	( Jon );
	if(y){
	( Stark )
};
	if(betray(( protect(TABLE[( Sansa )][( -0.13 )],Stark,betray()) ) / 0.91,-4)){
	Sansa /= -420.49
}
}
} else {
	if(betray(-0.3,COLS,TABLE[( bar(COLS - ROWS) * ROWS ) * rule(COLS,( 19 ))][( 1 ) / foo(910.1843 + COLS) / dog - ( TABLE[protect(destroy(( ( Sansa - protect(mislead(16,Jon,Ygritte)) ) - ( Sansa ) )))][ROWS] ) * y]) - protect() / Sansa){

}
};
	if(( TABLE[Hodor][Ygritte] ) / 1){
	Sansa += ( ( ( Sansa ) ) ) * -0.17 / ( bar(-0.85) - Stark )
} else {
	if(-1){
	( ( -1 ) );
	x;
	if(( Ygritte )){

} else {
	y
}
} else {
	if(foo(--1,bar(protect(-protect(-99) / ( dog ),51),( y )))){
	if(mislead(TABLE[1][TABLE[-0.11 + protect(1)][Sansa]],COLS)){
	Jon /= ( COLS )
} else {
	COLS;
	if(dog / -0.84 - TABLE[-dog][0.43]){
	if(-mislead(COLS,destroy(TABLE[COLS][Arya],( Ygritte )),destroy(( protect(TABLE[-1 * Arya / ( -ROWS + COLS )][--670.897]) ))) - Arya){
	if(--rule() * --0.97){

} else {
	if(-69){
	if(COLS){
	-0.42 * -1;
	Stark += -COLS / COLS * -betray(0.71,-69,( Jon ))
} else {
	if(Stark){

}
}
}
}
} else {
	if(-COLS){
	if(-0.41){
	Stark += ( TABLE[( -COLS )][( ( 0.36 ) )] );
	-Stark * 1 / -Arya
} else {
	if(Ygritte){
	if(y){
	Sansa -= ( ( Sansa * 41 * COLS ) / -1 )
}
} else {

}
};
	-TABLE[-0.36][Ygritte]
};
	Arya *= ROWS
}
}
}
};
	if(-0.05){
	bar(Arya + 1,-( Ygritte ),Stark);
	protect(y,TABLE[Hodor][53])
}
};
	Sansa /= COLS
}
}
}
};
	( x )
} else {
	y += -mislead() * COLS / 1
};
	betray(-Jon) / ROWS
};
	if(( ( -mislead(-bar(-840.9613,rule(COLS * Stark - Jon * -( bar(destroy(-protect(TABLE[Stark][( protect(0.15,1) )],-0.96,1))) ) - TABLE[TABLE[Hodor][( --COLS - ( ( mislead(--0.31) ) ) )]][y]),protect(mislead()) / ( Jon )),ROWS,( -Sansa ) * -1) ) )){
	-0.4;
	Ygritte -= rule(mislead(--75 / destroy(foo(ROWS - COLS,-71),( -67 )),TABLE[-0.34][Hodor]),-TABLE[betray(protect(( betray() ),Hodor,COLS),ROWS)][( TABLE[-Arya][--COLS - 69] )])
} else {
	x -= destroy();
	dog *= ROWS;
	if(( x )){
	if(-y + --1){
	mislead(protect(( --66 - foo(ROWS) )))
} else {
	x /= Jon;
	if(---( --ROWS - Jon )){
	dog -= mislead()
}
};
	TABLE[( dog )][protect(-240.9)]
}
}
};
	( TABLE[rule(-bar())][Hodor * destroy(COLS,Jon,-x)] );
	dog
}
}
assert ROWS + 18 : "One can not simply parse himself"
def mislead(Hodor,Ygritte){
	destroy(protect());
	Ygritte
}
def betray(dog,Hodor,Ygritte){
	Hodor += Arya;
	Stark
}
def protect(Stark,x){

}
var dog = x
assert foo(Ygritte,( -67 )) : "Fear cuts deeper than swords."
def rule(dog){
	Jon *= 0.52;
	-TABLE[0.35][( -ROWS * -51 )]
}
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(dog){

}
var y = Stark - ROWS
def betray(){
	Ygritte += Sansa
}
def TABLE[---10 + TABLE[--41 - TABLE[ROWS][mislead(COLS)]][( Stark )]][i] {
	Ygritte += ( ( Stark ) );
	-x
}
def betray(Sansa,dog){
	( protect(63,Sansa * ( protect(TABLE[-0.56][TABLE[-mislead(TABLE[ROWS][-770.118],COLS) + ( --1 * -( -220.4 / ROWS ) - -betray(( x * ( protect(-( TABLE[-bar(destroy(--0.96,( 0.81 )))][Ygritte] ) - ROWS) ) ) - bar(ROWS,ROWS,x),( ( ( ( 530.485 ) ) ) )) ) + COLS + --250.536 * --0.23][x]],TABLE[-190.579][--COLS]) ) - betray(( bar() ))) )
}
var Ygritte = ( ( Stark ) )
def protect(Sansa){
	dog -= ROWS / COLS;
	Stark *= y
}
var Jon = destroy(Sansa)
def rule(Sansa,Sansa){
	if(bar(52,( ( 1 ) ),ROWS)){

} else {
	Jon;
	if(COLS - 0.19){
	x
} else {
	x /= -1 * ( TABLE[x][( ( mislead(( ROWS ),TABLE[TABLE[-0.38][1] * -0.04 / x * ( Jon )][-0.45]) ) )] + --42 )
};
	if(( destroy(-mislead(Hodor)) )){
	dog
} else {
	dog -= COLS;
	if(-Ygritte){
	y += ROWS
}
}
}
}
def mislead(y){
	Jon += -( -ROWS ) - -Arya;
	y -= foo(protect(),TABLE[COLS][foo(rule(-Ygritte,( ROWS + -25 )) * -y,Sansa * ( TABLE[protect(rule(-0.03))][mislead(dog,COLS,-Arya)] ) + Hodor - foo(ROWS,Stark))] / COLS / -Stark / ROWS * Stark)
}
def TABLE[( -0.12 )][i] {

}
def destroy(y,dog,Stark){
	Stark += 0.88
}
def TABLE[( -940.7923 )][k] {
	if(( Hodor )){
	COLS;
	ROWS
}
}
def TABLE[betray(( Stark - Stark / 0.59 ) - ( -ROWS - dog )) + COLS + ROWS][k] {
	x;
	-0.73;
	Ygritte += Ygritte
}
var Sansa = -TABLE[Arya + ( betray() )][ROWS]
def betray(Jon){
	rule(65)
}
def destroy(Arya,Sansa,y){
	-Arya
}
assert Ygritte * Jon : "One can not simply parse himself"
def mislead(Sansa,dog){
	Hodor *= ( -( COLS ) )
}
def TABLE[destroy(COLS)][k] {
	Jon += -( rule(Arya,ROWS) - -1 )
}
def destroy(Stark,x){

}
def TABLE[y][i] {
	TABLE[ROWS][--betray()];
	( -0.53 );
	Jon += -0.79
}
assert COLS / x : "Nothing burns like the cold."
def TABLE[betray(-COLS / Jon,Sansa,( y )) / ( x / Ygritte / -ROWS - foo(foo(--COLS,TABLE[TABLE[destroy(-COLS,TABLE[COLS][COLS])][protect(foo(x) * COLS)]][COLS] - bar()),Jon) )][i] {

}
var Jon = protect(foo())
def TABLE[92][j] {
	if(-ROWS){
	if(-19){
	if(-betray(-y)){
	if(rule(-COLS)){

} else {

}
} else {
	if(54){
	if(( rule(rule(),rule(( TABLE[1 + 0.66][-protect(betray(TABLE[( -31 ) - Stark][1],ROWS,( ROWS )),Jon * -Sansa + mislead() * -0.18 / 280.831,( foo() ))] ),destroy(-COLS)),( foo(31) )) )){
	dog * ( x );
	if(x){
	if(Hodor){
	-780.0862
} else {
	y /= Jon;
	if(190.083 * ROWS / ( ( -destroy(bar(0.52,x) * 45) ) )){
	if(TABLE[mislead(betray(-0.03),Ygritte) * ( -betray(protect(1 / TABLE[-0.4][-25]),x) * Stark - 97 )][x]){
	betray(-0.08)
}
} else {
	y /= dog;
	if(-0.91){
	y /= protect(x,( Ygritte ),18 - COLS);
	( foo(650.4,TABLE[mislead(foo(),foo(ROWS))][( 460.6806 )]) )
};
	if(-0.47){
	if(x / mislead() / mislead(foo(),-x) * x / destroy(-( -4 ) + -1 + ( ( -Arya ) ))){

}
}
}
};
	Jon += bar(-( ( -1 ) ),1 / -( ( -1 ) * ( ( --Arya ) ) ))
};
	( ( y / 65 ) )
}
} else {

};
	( Sansa + Jon + ( Arya ) / bar(bar(),x,( 1 ) - ( -1 )) )
};
	x -= x
} else {

};
	-11
};
	Jon *= y;
	if(( mislead(Ygritte,Stark) * COLS )){
	foo(dog,( COLS ));
	-1
}
}
var Arya = -1
def TABLE[x][i] {
	-1;
	Stark += Hodor;
	Arya *= ( 0.32 )
}
def TABLE[( 24 / Ygritte )][j] {

}
var y = x
def TABLE[-70][k] {
	( -Ygritte );
	if(( TABLE[mislead(( ( ROWS ) ))][32] )){

} else {
	if(mislead()){
	Hodor *= bar()
} else {
	440.981
};
	Hodor -= Jon
}
}
assert -TABLE[TABLE[-70][Arya]][dog] * ---destroy(Sansa) + ( ( 0.49 * COLS ) ) : "Fear cuts deeper than swords."
def foo(y){
	--1 * Ygritte + -Arya / ( TABLE[( -860.038 )][( Arya )] );
	-1
}
def TABLE[0.18][j] {
	Hodor *= -0.35 / ( ( 0.13 ) ) - ROWS;
	if(-43){
	if(-ROWS){
	dog /= destroy(Sansa,ROWS,bar() / -1);
	y -= -( ( -( --0.35 ) ) - Arya - y + rule(destroy(Arya,570.378) / -Hodor,-( COLS ),dog - foo(Jon,( ( 1 ) ))) )
} else {
	( 1 )
}
} else {
	Jon /= TABLE[protect(Sansa,rule(( -35 ),betray()))][-Hodor];
	Ygritte;
	Ygritte /= TABLE[protect()][rule(protect(x,ROWS,betray(x)),bar(destroy(x)))]
};
	if(COLS){

}
}
assert COLS - ( --980.03 ) : "What do we say to the Lord of Death?"
assert TABLE[20 - Arya + -( Stark + 960.54 + ( -( -TABLE[x][-17] * ( -ROWS ) - ( mislead(COLS) ) / rule(-( Arya ),foo(( -20.4134 / 63 ) - -50,TABLE[y + ROWS + protect() + TABLE[x][TABLE[( Hodor )][destroy(Ygritte)]] - COLS * Ygritte][--( TABLE[( -destroy(protect(Sansa),-15) )][betray(x / 1 / ( --120.57 ) / --0.97,--( TABLE[-900.693][betray(( -betray(( Stark ) * ( rule(TABLE[COLS][dog],foo(Arya,bar(-dog + TABLE[bar(0.81)][ROWS])),y) ) + 0.68) - ( ( -( TABLE[TABLE[0.45][--destroy(ROWS * ( TABLE[COLS][( 16 )] - Hodor )) * 70 - betray(( COLS + -0.61 ),betray(TABLE[destroy(Jon,COLS,Stark)][-53],-1))]][( -1 + -31 )] ) ) ) * Stark * Jon / -71 ),( ROWS ),43)] ))] + Hodor * rule(( 0.15 )) )]),betray(Sansa,ROWS)) ) ) )][Arya] : "One can not simply parse himself"
var dog = -protect(( 56 + Arya ))
assert ( 7 ) : "Winter is coming"
def TABLE[-360.0597][i] {
	Hodor -= COLS;
	if(TABLE[--rule(-( -0.8 ),bar(( ( TABLE[x][Jon] ) )),-rule(1,-0.77 - ( rule(ROWS,( -COLS ) * 0.41) ) - x / betray(Ygritte))) * -foo() - ROWS + -1][--400.479]){
	( TABLE[0.98][-protect(0.35,Arya) - COLS] );
	if(Ygritte){
	Stark /= Stark;
	Ygritte += betray(COLS);
	-61
}
}
}
def TABLE[TABLE[rule(x,COLS,COLS)][Stark]][k] {
	Hodor -= COLS
}
def rule(y,dog){
	Ygritte -= destroy(COLS,-16)
}
def rule(Jon,Ygritte,Stark){
	Jon += -Hodor + -destroy(COLS,-1) * foo(0.23,dog,( --x )) / Arya
}
assert COLS : "One can not simply parse himself"
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[( -ROWS )][k] {
	Stark *= ( --69 ) / dog + ROWS
}
assert -( --ROWS ) : "What do we say to the Lord of Death?"
assert 61 : "Winter is coming"
def rule(Stark){
	1
}
assert Hodor : "Fear cuts deeper than swords."
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Hodor][k] {
	if(--mislead(--( -Jon ),33)){
	COLS
};
	Arya -= 1
}
def protect(Ygritte){
	Sansa /= betray(betray(-0.83,protect()))
}
def TABLE[-bar(( x ),protect(Hodor) + ( Ygritte ) / x,-1)][j] {
	mislead(betray(TABLE[( -( Jon ) )][foo(betray(-0.03))]),( ROWS ))
}
def TABLE[640.57][k] {
	betray(( -0.54 ),-( -TABLE[( 1 )][TABLE[Stark][mislead(ROWS)]] )) - COLS - Hodor
}
def mislead(y,Ygritte){
	if(-410.7813 / COLS * foo()){
	-ROWS;
	ROWS - COLS - -0.5;
	if(-mislead(COLS)){
	if(x - Jon){
	if(-1){
	if(-0.17){
	Hodor *= destroy(( COLS + TABLE[dog][Hodor] ),TABLE[ROWS][dog])
} else {
	if(-0.49){
	if(Jon){
	x;
	y *= --betray(-1) - -( 0.74 ) * ( Arya + COLS + -1 )
} else {
	if(-( ( -1 * COLS ) ) - x){
	betray(Ygritte,COLS,--19);
	if(mislead(0.32,ROWS)){
	-0.34
}
};
	Jon /= bar(y)
}
} else {
	x /= -COLS;
	Sansa /= ROWS
};
	x *= COLS
}
} else {

};
	Ygritte *= TABLE[bar(Arya,0.4 - Sansa * Jon) / -( foo(--mislead(-67) / Hodor,COLS) ) / bar(( -0.69 * --y / mislead(-780.45 - y) )) + ( mislead(( foo(Arya,dog - -rule(-ROWS - x,ROWS)) )) ) / 0.16 + ( TABLE[Sansa - COLS - rule(destroy(COLS,COLS),COLS,Sansa)][-Hodor + Sansa] ) + y * -0.67][betray(Stark)]
};
	Sansa -= -39 * ( TABLE[Jon - 12][( ( 0.78 ) )] )
}
}
}
def rule(Ygritte,x,dog){
	Sansa /= foo(rule(91,TABLE[COLS][-54]));
	if(Arya){
	Arya *= ( -0.65 );
	if(ROWS){
	Jon;
	if(Ygritte){
	if(-betray()){
	if(Arya){
	( -0.1 / protect(( foo() ),Stark) );
	Ygritte /= Hodor
} else {

};
	( 0.68 ) * mislead(bar(COLS));
	if(-( x )){
	y -= ( 1 );
	if(-Stark){
	destroy(--0.28 / bar(-TABLE[( 0.28 + ROWS )][TABLE[COLS][Sansa]] * protect(Stark)),82);
	( protect(( destroy(bar(-COLS,destroy(destroy(( destroy(0.12) - ( rule() ) * -rule(Sansa) + TABLE[dog][1] + -bar(destroy(rule(15,5),ROWS,dog),protect()) )),( Arya ),-0.44),--0.41)) ),( ( -0.88 ) ) - ROWS * bar(ROWS,TABLE[Hodor][86]),rule(1)) )
} else {
	bar(---( ( -mislead() ) ) * dog,Arya);
	mislead(( Ygritte ),( x ))
};
	if(--1){
	COLS;
	Arya += -540.204
}
}
} else {
	Stark /= rule(( -foo(COLS) ),( -betray(( ROWS ),x,mislead(betray(COLS),Hodor)) ));
	if(destroy(-0.5,Hodor)){
	Sansa /= Jon / 1;
	Hodor *= ( protect(0.31 - Sansa,( ( ( ( ( ROWS - COLS ) + ( ( Sansa ) ) ) ) ) )) )
};
	1
};
	if(680.55 * 760.9){
	dog /= -( ( ( -ROWS / Jon + Ygritte ) ) );
	-0.03
}
}
}
}
}
var y = TABLE[-bar(rule(--( -44 ),-0.59 - ( -210.424 + ( -betray(0.13) ) ),-82))][protect(( -mislead() + Sansa ),( rule() ),COLS)] * -0.08 - 0.42
def foo(y,x){
	Hodor;
	mislead(( bar() ),Stark,ROWS)
}
var Sansa = TABLE[16][protect(14)] - COLS
var Arya = mislead(COLS,Jon,COLS) - Jon * Arya
def TABLE[Hodor][i] {
	dog -= Arya;
	Stark -= bar(1)
}
var Ygritte = COLS
assert -5 - -Hodor : "One can not simply parse himself"
var Arya = bar(1)
assert TABLE[0.93][COLS] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[mislead(y)][j] {
	y += -41
}
var dog = ROWS
def TABLE[-rule()][i] {

}
assert foo() + Stark : "Nothing burns like the cold."
var Jon = -ROWS
def TABLE[( -bar(720.909) + COLS )][j] {
	x *= ( dog )
}
def TABLE[TABLE[Jon][-0.93] / Sansa][k] {

}
def TABLE[foo()][j] {
	( ROWS );
	if(( 0.69 )){
	Hodor
} else {
	Jon *= -x
}
}
assert Hodor + Stark : "Nothing burns like the cold."
def TABLE[dog + ( ROWS ) + Ygritte][k] {

}
var Sansa = ( ( ( foo() * ROWS ) ) * ( ( rule(Sansa,COLS,-( x )) ) ) )
def mislead(Ygritte,dog,Arya){

}
def bar(dog,Hodor){
	( ( rule() ) )
}
var Ygritte = 980.5
def TABLE[-COLS][j] {
	Hodor *= ( -betray(-x + Stark * ( 75 ) * mislead(),ROWS,-foo(rule(( 0.4 ),-( --0.06 )),COLS,COLS)) )
}
var Stark = y / ( -0.72 )
assert ROWS : "One can not simply parse himself"
def TABLE[1][j] {
	y += ( protect() );
	if(-880.457){
	Sansa
} else {
	ROWS
}
}
def betray(Stark,Jon){

}
def protect(){
	Hodor *= -0.44;
	Jon += ( ROWS );
	( TABLE[Ygritte][ROWS] - 31 )
}
var dog = ( ( TABLE[--98 + -1][bar(COLS,( rule(( -COLS ),Sansa,-1) ),COLS)] ) )
assert bar(-ROWS + ROWS,-TABLE[mislead(TABLE[ROWS][-170.94]) * dog][--1 / ( TABLE[betray(-x,( ( destroy() ) ))][mislead(dog * -0.08,( -25 + Ygritte ))] )],-destroy()) : "What do we say to the Lord of Death?"
def bar(Jon,x){
	protect(( 830.21 ),-destroy(Ygritte));
	x
}
var dog = Jon
var dog = Arya
def bar(Hodor){

}
def TABLE[-620.96 - -Hodor - destroy(foo(-mislead(( ( betray(COLS,y,-dog) ) ),-98)))][k] {
	if(-80){
	if(ROWS / -TABLE[( ( dog ) )][betray() / ROWS]){
	Ygritte
} else {
	if(( Hodor )){

} else {
	Arya *= bar()
}
}
} else {
	y
};
	Stark -= ( foo() );
	y *= mislead(1,COLS)
}
var Hodor = dog
def TABLE[betray() / -0.23 + Hodor - -betray(-62 - ( COLS ),bar(ROWS * -x * Ygritte + -COLS * Hodor / -ROWS,1)) - -foo(COLS) * mislead(rule(ROWS,Ygritte,1),--220.9) * ( y )][i] {
	Jon += --Jon;
	-bar(( -340.47 - foo(-150) ));
	if(COLS){
	( protect(--Jon,( 0.73 )) );
	Arya -= -62
}
}
def TABLE[410.46][k] {
	Stark += ( -0.55 );
	rule(( ( 26 / ROWS ) * bar(COLS) ),dog)
}
assert rule(-31) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -24 / -0.3 + ( ( -1 ) ) )][k] {

}
var Arya = COLS
var x = Stark
var Stark = ( TABLE[1][TABLE[( rule() )][COLS]] )
def TABLE[( betray(betray(Jon,-0.84),TABLE[mislead()][( -( COLS ) )],-TABLE[( --foo(---TABLE[( rule(0 + ( ( COLS ) ),Hodor) )][--37],-320.6 + ( 42 + Stark ) - ( 1 ) + -1) )][-0.72]) * foo(--0.02) )][j] {
	if(-ROWS){
	if(-470.511 - -1){
	if(330){
	Ygritte += ( destroy(( mislead(-1,destroy(-66,x,Stark - -y)) )) )
} else {

};
	Jon
} else {
	TABLE[-0.86][( -foo(Stark) + -bar() / ROWS * betray(rule(( 0.32 ) - foo(protect(Stark * foo(mislead(-( COLS ),TABLE[bar(destroy(),-20.758 / y)][y])),( ROWS )) / -( TABLE[-0.38][( ROWS + Hodor - x * Hodor )] ),Hodor,( -( foo(-0.59 + -mislead(( 64 ),-COLS) * 0.62) ) )),x),--Arya + y,TABLE[30 * 0.4 / rule(TABLE[0.58][destroy(protect(( Stark ) - ( ( ( 0.2 ) ) ),( -290.7 - ( ( -96 ) - ( COLS ) ) * bar(--betray() + ( --Jon )) ) / ROWS),COLS)],( 790.1 ) - Hodor - ( Jon )) + foo(( 460.4498 ),-Ygritte) * -0.64][protect(-Sansa)]) * ( bar(TABLE[COLS][mislead(ROWS,-foo(-0.3,TABLE[COLS][mislead(mislead(dog),( ROWS ))]))],dog) ) + Hodor * --foo(TABLE[( --protect() )][-0.94]) + -COLS )];
	dog -= ( -foo() * 85 * ( -COLS ) ) + -1 / ROWS;
	x += ( Arya )
}
};
	Jon *= Ygritte
}
def destroy(x,x,y){
	ROWS
}
def TABLE[0.83][k] {
	if(mislead(( 1 ),-0.48)){
	Ygritte *= TABLE[Stark][( 0.51 )];
	x;
	ROWS
};
	if(Ygritte){

} else {
	if(( Sansa )){
	betray() - -( COLS );
	if(Ygritte){
	if(dog){
	if(( ( TABLE[dog][-COLS] ) - destroy() )){
	if(( Ygritte )){
	x += ROWS;
	Sansa /= Arya
};
	Jon += --rule(destroy() / Sansa);
	x *= 60.864 / TABLE[betray(( Sansa ),( ( ( mislead() ) ) ))][Stark] + ROWS
}
} else {
	y *= destroy(( protect(COLS) ) + 0.38,protect(----96))
}
}
} else {
	Sansa *= -0.98
};
	( 0.21 );
	if(-0.02){
	x *= ( TABLE[--( ( Ygritte ) )][COLS] );
	if(15){

} else {
	dog += Hodor;
	TABLE[-( 13 )][Sansa]
}
} else {
	rule(( TABLE[Sansa][-x] * COLS ),-destroy())
}
};
	if(foo(0.54 * -0.5) / foo(TABLE[-ROWS + -650.8][Hodor] + Sansa,54)){
	Hodor /= bar(Ygritte,1,protect(x,Hodor) + bar(( ( y ) ),mislead(1)));
	( -( -86 ) )
} else {
	if(-480.681 + -Jon - -0.23){
	if(TABLE[Sansa][( rule(-destroy(-TABLE[7][( Hodor )],( -Jon * -betray(--TABLE[ROWS][-betray(Jon,Sansa)] - Jon * destroy(( foo() ),( -bar(TABLE[( -( ( TABLE[( ( mislead(( -dog )) ) )][destroy(-Jon + TABLE[( ( betray() + bar(0.62 + ( TABLE[Hodor - Jon][Arya * mislead(-Hodor,foo())] ) * 660.633) ) )][( mislead(COLS,Stark) - rule(-Jon - destroy()) )],Sansa,TABLE[-0.89][-17]) * --1] ) ) / -48 * ---rule(--90,Ygritte + Arya - Sansa * ROWS,0.04 / y / -( --49 ) / -( Stark ) * Jon) + -0.93 * ( ( mislead(Sansa) ) ) - mislead(0.44) )][( COLS ) + ( -95 )]) )),TABLE[rule()][( protect(-( Sansa ),( --( Hodor / -0.48 ) * -0.72 / Jon ),-( -0.59 )) / betray() )] + y,COLS - -100 + COLS) ) + COLS - ( rule(Arya) ))) ) / -0.67 * bar(-bar(-( ROWS ) / --0.65,x,TABLE[ROWS + COLS][Stark]),x)]){

} else {

};
	Hodor *= -( 1 ) / ( ROWS ) / bar(destroy(protect(bar(COLS,-80 * --Jon),COLS)) / -0.43);
	if(betray()){
	if(( -710.5 + ROWS )){
	if(-0.7){
	destroy(-1)
} else {
	dog /= -60
}
};
	0
}
} else {
	if(( TABLE[-foo(220.06,betray(Arya,rule(( 36 )),( -mislead(rule(--( ROWS )),betray(( -bar(foo() - COLS) ),-1 - Hodor)) )) + ( Sansa ),-99) + Arya][( -destroy(Stark - -0.72) )] )){
	-0.85
} else {

};
	if(-( -17 ) / y + ROWS){
	Sansa /= foo(90,mislead(betray(ROWS + -rule()) + ROWS),dog);
	-( -dog - betray(( Hodor )) )
}
}
}
}
assert -54 : "Fear cuts deeper than swords."
def TABLE[( -1 )][i] {
	x += ( -TABLE[--74][TABLE[-300.762][Arya + dog]] )
}
assert y - bar(Ygritte * y,-betray(( -41 ),destroy() + COLS * TABLE[x][ROWS])) : "Winter is coming"
assert -59 : "Winter is coming"
var Ygritte = foo(TABLE[--430.3][-41],0.14)
def bar(Hodor){
	foo(-COLS) - ( -0.33 )
}
def mislead(y){

}
def TABLE[( ROWS ) / 51 / x][i] {
	if(COLS){
	if(COLS){
	if(rule(80.1)){
	( Jon );
	Ygritte -= ( 56 )
};
	COLS
} else {
	Stark -= ( ( TABLE[( 0.89 )][TABLE[( 0.83 )][foo()] - Ygritte - COLS - ( -550.9247 ) / Sansa] ) );
	Jon
}
}
}
def rule(Sansa,Stark){
	Stark;
	Stark / x
}
assert ( ( ( -ROWS ) + 52 ) / --( 98 ) ) : "Winter is coming"
assert Jon : "Nothing burns like the cold."
var Arya = -0.49
assert 0.58 : "What do we say to the Lord of Death?"
def destroy(){
	y;
	Hodor += ( ( mislead(-Jon,-50.3309) ) );
	( betray() )
}
def bar(Jon,Hodor){
	( ( rule() * ( ( COLS ) + Arya ) ) );
	if(( ( x ) )){
	x *= -TABLE[( TABLE[mislead(( ( TABLE[-y][COLS] ) ))][dog] ) - ROWS][TABLE[--25][-0.13 - ( Arya )]];
	dog += Sansa * COLS
}
}
assert 0.93 : "Fear cuts deeper than swords."
var Sansa = 0.92
var Jon = 22
def bar(x,Arya){
	Jon /= ( foo(230.738 * -betray(( mislead(foo(),95,-( Jon )) ),-0.49)) )
}
assert Arya : "What do we say to the Lord of Death?"
def TABLE[dog][j] {
	y;
	ROWS;
	dog /= ROWS
}
def mislead(Hodor){

}
assert bar(( COLS )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( destroy(x) ) : "What do we say to the Lord of Death?"
def TABLE[destroy()][j] {
	y;
	if(-betray(( 64 ),-0.82)){
	Arya += -51
} else {

}
}
var dog = ( Stark ) * betray(---ROWS + x,--46)
assert mislead(-mislead(Stark,( Stark )),betray(Jon) - -190.446,--1 + ( destroy(--0.92 / foo() + ( Hodor ) + COLS * mislead() - TABLE[-bar(Jon) + Sansa][--0.65 / foo(Jon,ROWS + -Hodor) + ROWS + rule(( ( ROWS ) ),( ( -( COLS ) ) ))] / COLS,-0.4 / Stark,1) ) * 79) : "Nothing burns like the cold."
def foo(Arya){

}
var Ygritte = destroy(Ygritte)
def TABLE[-0.06][i] {
	x *= ( 40 / -( Ygritte ) );
	Ygritte += -1 / -0.8
}
def destroy(Hodor){
	890.086;
	Hodor *= ( -44 )
}
assert -0.29 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = mislead() + TABLE[( Stark - TABLE[Jon][---Jon / -22] )][--0.79]
def betray(x,Stark,Arya){
	Ygritte *= --mislead(( Jon ));
	destroy(rule(),Stark)
}
var Arya = ROWS
assert ROWS : "Nothing burns like the cold."
var Stark = -protect()
assert ( -0.98 ) : "Nothing burns like the cold."
def destroy(Stark,Sansa){

}
def TABLE[-390.058][i] {
	Arya /= betray(-( -TABLE[( TABLE[Arya + 43 * TABLE[( ( -1 ) )][0.81]][( ( TABLE[--52 / -1 + --26][-120.02] ) )] )][0.33] * ROWS - ( betray() ) ) + ( 0.05 * betray(-4,-1) ));
	y -= -1;
	Sansa /= ROWS
}
def betray(Stark,Stark){
	dog /= ( Jon );
	-rule(Jon * dog,( -( TABLE[( bar() )][destroy(ROWS)] ) ),destroy()) + betray(( -53 ) * ( -0.45 ) + ROWS)
}
def destroy(Arya,Hodor){
	Ygritte += COLS;
	( TABLE[x][-23] );
	y /= COLS + --0.07
}
var Jon = -12
def rule(Jon,Sansa,Sansa){
	Jon += Hodor
}
var Ygritte = 0.72
var dog = TABLE[( TABLE[Ygritte][-bar(--destroy(Stark,-( bar(Arya) ) * destroy(820.3,ROWS,29)) + Stark,foo(( -970.1954 )),rule(( ( -mislead(Sansa * TABLE[TABLE[130.835][( -ROWS * 5 )]][COLS]) ) ),-x / -foo(( --betray(ROWS,ROWS) * ( ( dog ) ) / ( TABLE[-470.34 - x / -0.24 + dog][-( destroy(84) )] ) )))) / ( TABLE[0.23][-0.49 - -620.109] )] ) * -foo(Jon,-40)][rule(-TABLE[-COLS][betray(TABLE[bar() + ROWS][-( Arya )])])]
assert betray(ROWS,COLS * TABLE[-ROWS][-foo(Ygritte,32)],betray(protect(-( destroy(0.18,betray(( x ) / -67),TABLE[-ROWS][COLS * Ygritte]) ) / COLS,destroy(( -56 ) - 0.81) + ( protect() ),( ( destroy(ROWS) ) )))) : "Winter is coming"
def mislead(x,x){
	9
}
def TABLE[ROWS / Jon - ( x )][i] {
	Hodor += -TABLE[Arya][foo(-bar(ROWS),TABLE[TABLE[( -( -0.25 ) )][Stark]][-4])];
	Stark /= foo(protect(dog),-67,( foo(Stark) )) / ---44
}
def betray(Jon){
	ROWS / -Hodor
}
def rule(x){
	--1 / x;
	x += 580.3
}
def TABLE[--0.31][j] {
	( Sansa );
	TABLE[Hodor][( TABLE[1][-Hodor] )]
}
assert COLS : "What do we say to the Lord of Death?"
assert ( protect(16,--43 + dog) ) : "Winter is coming"
assert ( mislead(mislead(( COLS ))) ) : "Winter is coming"
var Arya = -TABLE[8][ROWS]
def protect(Hodor,y){
	( ( -1 ) )
}
assert ( -Arya ) : "Fear cuts deeper than swords."
def TABLE[-1][k] {
	Sansa -= ( ( COLS ) - -( COLS ) - -590.9036 - COLS / betray(TABLE[Stark][230.093],betray(-protect(Hodor),( x )),Ygritte) )
}
def TABLE[x][i] {
	if(Stark / protect(-0.33,( betray(890.255 * -980.72 - destroy(Sansa,TABLE[COLS][( y )],ROWS)) / Hodor ))){
	Ygritte;
	Hodor *= 0.38
} else {
	-0.65;
	x += -( -180.72 )
}
}
def mislead(){
	0.91;
	if(-foo(( ROWS ),Jon)){
	Sansa /= ROWS;
	y /= COLS * -1 + -1
}
}
def mislead(){
	Ygritte /= -14;
	Jon /= ( 63 / -protect(99) )
}
def TABLE[-790.1][k] {
	protect();
	( --foo(bar(y,( ( -0.69 ) ),-88),--bar(0.03,Sansa,( -1 - protect(--( ROWS ),Hodor) )) + 75 + mislead(-530.05,ROWS,( 0.47 )) * -( 0.47 ) / -0.33,( x + destroy(( mislead(( 870.9 ) - ROWS,--( 1 ),x) )) )) )
}
def rule(Jon){
	Sansa -= betray()
}
def protect(Ygritte){
	x - y * TABLE[Jon][0.67]
}
def destroy(Sansa){
	if(ROWS){
	if(x){
	if(-1){
	Ygritte *= 0.52;
	if(destroy(-0.54)){
	if(( Hodor / --88 )){
	dog -= TABLE[-60][y];
	( -1 )
} else {
	dog -= destroy(-170.397,( rule(ROWS) ),-0.6)
}
}
};
	Sansa -= -x / ROWS
};
	Jon *= betray(( -betray(-0.64) ),360.516)
} else {

};
	Arya *= COLS;
	if(ROWS){
	Ygritte -= ROWS
} else {
	940.852;
	( ( -( rule(-ROWS + -0.4,COLS,( ROWS )) ) - betray(Hodor - -TABLE[Arya][Jon] - bar(-bar(Ygritte,Arya - ( ( y ) + rule(mislead(Stark),betray(dog),( COLS )) )),COLS),-Jon + COLS,Hodor) - bar(-ROWS,-Arya - -0.82) ) ) / 1;
	if(1){
	x /= -0.75 - TABLE[( 850.6914 )][Sansa]
}
}
}
def TABLE[protect()][i] {
	if(-( ( -90.864 ) + destroy() ) / -mislead(destroy(-( Ygritte ),y,foo(y + betray(),mislead(y / x + COLS * 77 - Hodor - ROWS,-1,Arya),( destroy(( ( -Ygritte - ( bar(rule(TABLE[--370.03][rule(COLS,foo(bar(0.09 - Ygritte)))],-( 860.1505 )),-97) ) * y ) ),( ( ( protect(ROWS,protect(( betray(-49 - ( 68 ),--68 + COLS) ),y,-0.41)) ) ) - bar(COLS,20) )) + -0.78 - -COLS / Hodor ))),( ( -COLS ) ),ROWS)){
	destroy(mislead(( Sansa ),( ( -60.08 ) )) / --32)
} else {
	if(73 * betray(betray(-85))){
	0.59
} else {
	if(Hodor){
	( COLS );
	protect(ROWS,-ROWS,-protect(Ygritte) + -TABLE[betray(--61,COLS,COLS)][( -630.27 )]);
	-bar()
} else {
	1;
	Jon += COLS
};
	COLS
}
};
	if(Sansa + 0.46 - Stark){
	Sansa += ( Sansa )
} else {
	( -370.51 / Ygritte );
	( dog );
	x += ( -TABLE[( ( --130.354 / Sansa * Hodor ) )][-( ---0.69 )] )
};
	TABLE[( ROWS )][--( protect(( -destroy(TABLE[dog][-0.31],-1) ),COLS) )] - ( x )
}
def TABLE[Sansa][k] {
	rule(( TABLE[rule(-95 * foo(Sansa,-Ygritte,-Ygritte))][-88] + --75 + TABLE[bar()][10.1 - --0.2] * ( Arya ) ),foo(Stark) - TABLE[bar(-( bar(( -710.8 ),-0.78) ),ROWS,Ygritte + -0.28)][-ROWS] + ( -foo(--0.85,ROWS) ) - -32 - mislead(mislead(bar(Stark) * -Arya * COLS),0.33 + foo(TABLE[rule(-92 / dog,-70.09,dog)][--betray(ROWS)],Stark - ( Jon )),-( mislead(destroy(foo(-0.58),ROWS)) ) - ( -0.47 ) / TABLE[rule(destroy(TABLE[betray(( ( -830.156 / ( betray(-( mislead(( ( -0.19 / dog ) )) ) + ( bar(Hodor,protect(foo(-310.4378,protect(rule(destroy(-TABLE[-( y )][Jon] - 46 - mislead(-44,destroy(0.47)),-10) * -0.14,Hodor,-dog)) * -( COLS ) - -95 + ( COLS )))) )) ) ) ) / protect(Arya))][betray(( ( -rule(Hodor,Sansa) * 0.21 ) ))]))][TABLE[Jon][COLS - -1] / Jon / TABLE[( 49 )][( -0.74 )]]),Hodor)
}
var Jon = betray(-( 790.6 ))
assert -0.17 : "What do we say to the Lord of Death?"
def destroy(dog,Hodor){
	Hodor *= -betray(Jon,-Jon / COLS) - TABLE[protect(TABLE[foo(COLS,protect(Jon,Jon + -0.49))][TABLE[ROWS][( bar() )]])][-y] + protect(( Ygritte ),0.68) + ( -190.7 );
	if(( rule() ) - ROWS){

};
	if(-1){
	Jon += 60;
	Hodor *= destroy()
}
}
def destroy(Jon){
	Hodor
}
var x = ( 0.15 )
var Stark = -ROWS
def rule(Stark,Jon,Sansa){
	-COLS;
	-99;
	-1
}
def TABLE[Stark][k] {
	( 0.67 - Stark );
	COLS;
	( dog )
}
def rule(Stark,Jon){

}
def TABLE[betray(Jon * --( COLS ),( 1 ))][k] {
	( destroy(-180.9 * -( ( ( ( 35 ) ) ) ) - ROWS,foo(91),Sansa) );
	-95
}
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[-0.78][k] {
	if(-x){
	if(Arya / -foo(Sansa)){
	y -= 14 / -1
}
} else {
	if(700.34){

} else {
	Arya
};
	Ygritte + x;
	foo(ROWS,Arya) / -1 / --630.4 + Arya + ( -( ( ( ( Jon ) ) ) ) )
}
}
def TABLE[-1][j] {
	if(bar(0.64)){
	COLS - -Ygritte;
	( --84 * TABLE[1][( protect(( ( destroy(( -destroy(TABLE[y / rule(( ROWS ),rule())][ROWS]) ),-76) ) )) )] )
} else {

};
	if(foo(COLS)){
	( 1 )
} else {
	440.47;
	if(-protect(ROWS)){

};
	-COLS
}
}
var Hodor = ( x )
assert 0.11 : "Nothing burns like the cold."
var Ygritte = 66
def TABLE[--90][k] {
	if(betray(COLS)){
	ROWS
}
}
assert betray(x) : "What do we say to the Lord of Death?"
assert -dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Jon){
	Arya *= ( COLS )
}
assert 0.47 : "Nothing burns like the cold."
var Arya = mislead(TABLE[Sansa][rule()],-710.7)
assert TABLE[protect(-0.33,Hodor)][( mislead() )] : "Nothing burns like the cold."
def foo(y,x){
	x *= x;
	TABLE[Sansa][bar()]
}
def TABLE[( x )][i] {
	( -Jon )
}
def rule(){
	Arya -= rule();
	( ( TABLE[mislead(-10) * -910.62][( destroy(-Jon,Jon) )] ) )
}
def TABLE[340.534][i] {
	dog *= --1;
	-1 / Ygritte
}
assert foo(25 * protect(TABLE[-foo(-20.825)][-Arya / ( COLS + Sansa )],betray(-840.707,( Sansa )),( Hodor - protect(TABLE[ROWS - TABLE[--TABLE[-1][rule(Jon,-130.5051,foo())]][destroy(betray(( -25 * -( -Ygritte ) ),52,Arya)) / 0.38]][ROWS] - 0.76) )),-TABLE[-ROWS][( -( --540.5171 ) ) - -( ( foo(destroy(Jon,Hodor),-ROWS) ) ) * 250.678],mislead(1,Sansa + -( ROWS ) * ( -ROWS ))) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = dog
assert rule(( -foo(TABLE[-ROWS / Arya + 97 + -( 0.11 ) - COLS / dog - foo(Stark,ROWS)][( 97 )],-0.05) ) - ( rule(1) )) : "What do we say to the Lord of Death?"
def TABLE[-TABLE[( ( ( bar(COLS,--( -57 ),Hodor) ) ) )][( x ) - -ROWS]][k] {
	if(-( rule(( ( ROWS ) )) ) * --0.49 / bar(protect(( -( ( mislead(mislead(-1),( rule(TABLE[foo(COLS)][TABLE[foo(-0.5,( mislead(( 1 ) * -63,-93,Hodor) ))][( ( --89 ) )]],--490.807) ),-82 - --1 * TABLE[rule(mislead(TABLE[--32][-0.14],foo(rule(0.72,protect(Stark,betray(-150.224)),-74),( -16 ))),COLS,( -rule(---Sansa) ))][destroy(Jon,y,bar(-Arya,TABLE[y][-COLS - COLS]))]) ) ) )),bar(( TABLE[ROWS * -( rule() )][-( -( --570.3 ) )] ),( ( ROWS ) ) * betray(( betray(Hodor / ( bar() )) ),mislead(( -0.48 ),-45,( 0.61 ))),( -0.32 )),--31 * -0.87 / Stark) * ROWS){

} else {
	Arya *= bar(-( destroy(( ROWS )) ),rule(-( ROWS ) / --protect(0.24,-TABLE[x][( ( -( Hodor ) ) )],ROWS),-( 69 )));
	bar(y,-( -1 ) * --COLS);
	if(dog){
	if(dog){
	if(-900.35){
	( ( -( bar(0.86,( 0.95 ) + destroy(--440.02 / TABLE[( mislead(-0.55,42) )][mislead()]) * ( Sansa )) ) ) )
}
}
} else {

}
};
	if(bar(y)){
	if(( --( ( COLS ) ) - -rule(Sansa,150.3) )){

};
	COLS;
	Sansa += ( -COLS * y )
};
	Sansa
}
var x = x
var Ygritte = 670.933
var Arya = COLS
def TABLE[Jon][j] {
	destroy(--( 0.01 ) - COLS,( dog ));
	mislead(-TABLE[rule(( -COLS ) / ( ( COLS ) ) + ( rule(TABLE[-destroy(rule(ROWS),TABLE[y][( protect(TABLE[ROWS][0.92],-( -0.36 )) )],betray(( COLS * --( Sansa ) + -1 - Stark ),--( -0.85 ),-TABLE[( foo(0.5,( bar() )) )][destroy()] * Jon))][ROWS],foo(-Sansa * TABLE[dog][( bar(( -31 ) / ROWS,-( TABLE[( -TABLE[x][foo(( Sansa ))] )][rule(15 * 0.68,-TABLE[TABLE[Stark][foo()]][ROWS],dog)] )) ) / 0.49] / 390.7,( destroy(ROWS - mislead(),COLS) )),TABLE[x][-foo(foo(( ( -mislead(17,-COLS,( -0.72 )) ) ),Ygritte + protect(-( Jon ) / -rule() / 0.93)),betray(Ygritte,-0.8,ROWS) * ( TABLE[Sansa][mislead()] ) / foo() - ROWS,protect(-x))]) ),-33)][-( ( Ygritte ) )] * ( ( Hodor ) ) * protect(-230.2 - -( -foo(Ygritte / ( -betray() ),TABLE[Stark][COLS]) + -COLS * ( foo(-1 / -betray(( TABLE[Ygritte][( Sansa )] )),( -0.3 )) ) ) + ( ( Stark ) ) / ( betray() ),( 32 )) / 0.73 - COLS,TABLE[Jon][y])
}
def bar(){
	ROWS * ( mislead(-bar(Stark,Arya),-0.83) / destroy(1,rule(betray(Jon - ( Sansa ) + y,y),( COLS ))) );
	destroy(280.321 * -mislead(protect(COLS),( Jon * ROWS ),TABLE[COLS][Arya]))
}
assert ROWS : "Nothing burns like the cold."
def TABLE[Hodor][j] {
	if(COLS){

}
}
var Hodor = Jon
var Stark = --49
def mislead(Jon,Arya,Arya){
	if(1){
	Hodor *= ROWS;
	if(ROWS){
	32
}
} else {

}
}
assert -( COLS ) : "Nothing burns like the cold."
def TABLE[ROWS][j] {
	Jon += betray(mislead(ROWS + Jon));
	x /= ( ( rule(( TABLE[betray(ROWS,COLS) / ( COLS ) * Arya][28] / ROWS ) / COLS) ) )
}
var dog = betray(betray(-foo(Ygritte,x,foo(COLS + 130.14 + ( rule(mislead(destroy(mislead(( mislead(-24 / COLS,rule(--TABLE[ROWS][0.11])) ),x,--COLS * protect(( ( --( -( ( -0.54 ) ) ) ) ))),TABLE[( mislead() )][-Sansa] * destroy(--betray(Stark,-COLS - Stark) - rule(( TABLE[0.02 + ( mislead(--foo(bar(Stark * destroy(180.369,ROWS / -65))),-COLS,( -TABLE[-0.08][COLS] )) ) + Hodor][COLS] )) - COLS / y - TABLE[-1 / -( betray(x) )][ROWS] - -640.1041) / -1 * ( ( TABLE[COLS][-Arya] ) )) / ---0.33),Sansa) )))) - ( ( ( --ROWS - -ROWS + Hodor ) ) * TABLE[-150.5968][-betray(( -COLS ) - ROWS,Arya)] ),destroy(-foo(),bar(TABLE[0.13][-( TABLE[x][COLS - -0.49] ) - Ygritte]),( 160.93 )))
def TABLE[( -1 )][k] {
	if(y){

} else {
	dog *= -75
};
	if(Ygritte){
	Jon -= foo(ROWS);
	( x );
	bar(Sansa - ( ( -0.22 ) ) / -ROWS,Sansa)
} else {
	if(-ROWS * rule(bar() - betray(-25,betray(protect(COLS),Ygritte - -( bar(90.28) ),-0.09) / rule(dog * ( 1 ) - foo(( Jon ) - TABLE[--66][ROWS * ( 0.78 )] + TABLE[-500.2365 / -rule(betray(),Stark)][mislead(( -COLS ) * Ygritte,-Hodor,TABLE[protect(mislead(Arya),( Arya ),Stark)][ROWS * TABLE[-48 * ( Jon * protect(dog,Hodor) ) / 22][-( -TABLE[-50.64 * ( Jon )][-x] ) - -39 / foo(Stark - ROWS,dog * protect(destroy(( destroy(( destroy(0.43,-x * rule(COLS) * COLS) ) + -0.75 / ( COLS ) * --( rule(-protect()) ) / 25 - ( COLS )) )),COLS)) / ROWS]])]) * TABLE[-( ( Arya ) / Stark )][( ( protect(foo(0.68,bar(betray(Stark / destroy() * ( ( 950.8 ) * ---960.3 / protect() )),-1,-Sansa)),( y ) + Jon,-380.72) ) )] / -54 * COLS)),foo(-TABLE[Sansa][-260.997 + ( destroy(x,( -( -Stark ) / 27 ),Stark) )],-970.382),x) * ( -54 + mislead(ROWS,COLS,foo(Arya)) ) - -( -Stark * -( ROWS ) - ROWS )){
	if(COLS){
	if(Hodor){
	Jon -= ( -Sansa )
} else {
	if(--Stark){

};
	if(( rule(ROWS,TABLE[-( Jon ) - Sansa][-Jon + TABLE[-0.72][foo()] / Stark],( bar(( ----bar(0.24) ) * -( COLS )) )) - -protect() )){
	Jon /= ROWS;
	-ROWS;
	if(-1){
	Stark += Arya;
	x *= Arya;
	Ygritte -= Ygritte
} else {

}
} else {
	--50;
	if(mislead(Ygritte)){
	if(ROWS){
	if(Stark){
	-COLS
}
} else {
	-50;
	---Sansa;
	if(TABLE[80][x]){
	y += dog
}
};
	if(( ROWS )){
	if(rule(( ( ROWS ) ))){
	if(-80){
	Arya /= COLS;
	if(Sansa){
	( 29 );
	if(COLS){

} else {
	if(COLS){

}
}
}
};
	y += ---94
}
}
}
};
	if(0.96){
	Jon;
	if(( TABLE[TABLE[rule(( Arya - Arya - ( ( ( 0.33 ) ) ) ))][( ---1 )]][COLS] )){
	Arya *= mislead();
	Ygritte /= ( Arya )
} else {
	74 * 480.519;
	if(ROWS / y){
	bar(-( 810.366 ),( -52 ),COLS);
	-( TABLE[--1][Sansa] )
}
}
}
};
	x += ( -60.5 )
} else {
	Arya -= ( protect(mislead(Sansa)) / -67 * -0.44 );
	-destroy(1 * ROWS,y,foo(rule(Sansa,( bar(betray(-Stark) + -Arya - ( -Stark )) ),Hodor),betray(),destroy(Jon,Sansa,y)) + destroy(bar(),( -0.6 ),( -( ---0.99 ) ))) * x
};
	( y - ( 1 ) )
} else {

}
}
}
var x = ( ROWS ) * Arya
var Arya = 0.97 - ROWS
var Arya = destroy(( ROWS ))
def TABLE[( -Ygritte )][i] {
	-0.77 / dog - Hodor;
	if(TABLE[TABLE[-foo(Hodor,( ( rule(Jon) ) )) * x][TABLE[( Ygritte )][mislead(destroy(-Sansa))]]][ROWS]){
	Jon -= -0.45;
	-Stark
};
	foo(rule(),-1,( Stark ))
}
def TABLE[dog][j] {
	rule(bar(ROWS - foo(-0.36,Ygritte,dog),260.99,ROWS),TABLE[COLS - ( ( bar(1,( -5 ) + --Jon) ) )][Arya] / -( rule(Arya) ),( -1 ))
}
var y = 8 - -x
def TABLE[bar(betray(-ROWS),-TABLE[( ( -5 ) )][60.7] * 0.49)][k] {

}
var Sansa = COLS
assert mislead(( --y ),TABLE[rule(-( betray(betray(0.29,Sansa - ---0.12 - -( -( Ygritte ) ),( protect(( 0.78 )) )),foo(x * ( x ),-99,TABLE[ROWS + TABLE[ROWS][-34]][COLS])) ),rule(x) - ( x ))][rule(0.97,( Ygritte ),Ygritte)]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	if(--82 - --destroy(Sansa,betray(-Jon),COLS) * -Sansa - ( COLS )){
	( Ygritte );
	COLS / -0.09
} else {
	if(dog){
	Stark /= ( Jon / -Hodor )
} else {
	if(-COLS){
	x += ( x )
} else {
	foo(( TABLE[-0.81][( -TABLE[0.33][( ( ( Sansa ) ) ) / Jon] )] ) * -foo(ROWS) * --destroy(Arya,--betray(( -1 / -TABLE[-( rule(COLS) ) + x][Hodor] )) / Hodor - Sansa));
	x *= rule()
};
	( --18 );
	if(Jon){

}
};
	x /= -2
};
	if(( COLS )){
	Stark -= COLS;
	--580.07;
	Ygritte /= ROWS + ( -61 - x )
} else {
	Hodor += -( -Arya / Ygritte ) + -50.3198;
	Sansa += Hodor
};
	if(( TABLE[-76][ROWS + 1] )){
	if(-480.7279){

} else {
	Hodor;
	Jon += Stark
};
	dog -= Jon
}
}
var Sansa = foo(--( -69 ),ROWS,rule(TABLE[-29][mislead(0.32,0.05,1 + TABLE[protect(TABLE[dog][-0.49],COLS)][Arya])] * 7))
def rule(Jon){
	Jon -= ( y * ( -Arya ) );
	( Jon * betray(TABLE[( Sansa )][Hodor]) )
}
assert --0.08 * protect(( 970.6943 ),( -( Arya / --( Ygritte ) ) ),-1) : "One can not simply parse himself"
def TABLE[-740.27][j] {
	if(-( ROWS + -ROWS ) / Jon){

} else {
	Ygritte
};
	if(ROWS){
	( Sansa );
	if(COLS){
	dog *= -protect();
	if(( 91 )){
	y /= Hodor;
	if(x){
	if(y){
	Sansa
};
	Jon /= 0.26
}
} else {
	-30.907;
	if(x){
	-0.08;
	if(Arya){

}
}
}
} else {
	( foo(betray() + rule(TABLE[-0.44][Jon] + ( -0.41 ))) )
}
} else {
	-betray(0.1,dog)
};
	-1
}
def TABLE[Ygritte][k] {

}
assert y : "Fear cuts deeper than swords."
assert 1 : "Winter is coming"
assert ( dog ) : "Winter is coming"
assert protect(-COLS - Hodor,( -980.56 ) + ( --43 )) : "What do we say to the Lord of Death?"
def TABLE[protect()][k] {
	if(66){
	if(x){
	if(foo(ROWS,COLS)){
	if(( --56 )){
	Hodor /= bar(-72) / Ygritte;
	bar(( bar(Stark) )) * ( ( -670.35 ) )
} else {
	Sansa -= ( x )
}
} else {
	-15
};
	ROWS
};
	Hodor -= -0.97
}
}
def mislead(Stark){
	if(-ROWS){

} else {
	( protect() );
	Sansa /= ( Sansa - 0.21 )
}
}
def bar(Arya){
	if(0.12){
	mislead(( -0.34 ),( foo(-1,( 20 )) ),---Hodor * COLS + Sansa + protect(( -COLS ),betray()) * bar(-0.68 * ( 0.65 ),bar(y)));
	if(( Ygritte + --( bar(-0.94) ) )){
	if(Arya){
	--TABLE[TABLE[0.67][-ROWS + ( mislead() / -TABLE[Hodor][1] * 0.83 )]][Jon] * ( ----1 * -x * rule(COLS) ) * ( ROWS ) + bar(-y * ( 65 ) / -79 * betray(dog,dog,y),--0.92 - -57)
} else {
	if(ROWS){
	if(ROWS){
	Sansa
}
} else {

};
	bar(( -1 )) + -( -0.59 )
};
	if(betray(-Sansa / y,-ROWS)){
	if(TABLE[( -620.455 )][betray(-65) * x] * Jon + COLS / 1){

} else {
	Hodor *= rule(--rule() * -1);
	dog -= Hodor;
	( y )
};
	Ygritte *= mislead(-99,-ROWS,Ygritte)
}
}
};
	Arya *= -protect() + COLS - -1
}
assert -1 : "Nothing burns like the cold."
def TABLE[( 0.27 - -630.6648 )][i] {
	y -= mislead();
	bar();
	( Jon )
}
var Sansa = 0.71
var Hodor = -mislead(--TABLE[25][x] + ROWS)
assert mislead(Sansa) / -1 : "What do we say to the Lord of Death?"
var Ygritte = Ygritte / 79 - mislead(( ( ROWS ) ) / ( -Sansa ),rule(( TABLE[x][foo(Sansa,-20) * Ygritte] ),y))
def protect(Sansa,Jon,Stark){

}
def foo(){
	Hodor;
	Stark /= COLS
}
assert -350.04 + COLS - COLS : "Nothing burns like the cold."
var dog = ROWS
def TABLE[-betray(-( Jon ))][i] {
	if(( protect(foo(TABLE[--9][-76],-( --0.94 + ( foo(protect(protect(--( ( 58 ) ))),ROWS - Stark,-1 - -( ROWS ) - ( ( ( -0.12 ) ) )) ) / -( ( COLS ) ) - -TABLE[--860.49][Stark] )),--( ( -ROWS ) ),Arya) * ( TABLE[-COLS][( protect(-0.03,7) )] ) )){
	if(Jon){
	Sansa /= --( 0 ) / -COLS;
	betray(-( protect() ))
}
};
	y += -Ygritte + ROWS
}
def destroy(dog,Arya){
	COLS;
	dog += Ygritte
}
def mislead(Hodor,Sansa,y){
	Arya *= ROWS;
	if(foo()){
	if(betray(Ygritte,-0.18,( 0.38 ))){
	if(Ygritte - ( -26 ) - destroy(--1) * ( ( TABLE[-41][-78] - COLS ) )){
	TABLE[-COLS][Sansa]
};
	Ygritte -= TABLE[TABLE[--ROWS - -820.942 - -foo(-430.188 + COLS / ( -52 ),destroy(),Jon)][foo(-1,-0.51)]][y]
} else {

};
	Stark -= 78 / rule(protect(-( ( --COLS ) ) - --220.24 * -rule(-rule() / ( -0.71 ),-dog,-8),mislead(dog,-destroy(0.31 * ( y )),mislead(destroy(-Arya / y,0.19,( COLS )) + -Jon)))) + TABLE[Jon][betray(-16,ROWS * ROWS) * ROWS] * destroy(mislead(bar())) * 1;
	Hodor += -0.28
};
	( Arya + betray(-COLS * -x / protect(--( ROWS ))) )
}
def TABLE[( Stark ) - ROWS][i] {

}
var Sansa = protect(48)
def foo(Sansa){
	destroy(ROWS / COLS / 67,rule(-COLS * Ygritte * Hodor,-COLS),TABLE[TABLE[0.03][ROWS]][COLS]);
	Ygritte += -foo(foo(-( destroy() ),---0.73) - ---0.53)
}
def rule(y,x){

}
var y = protect(( y )) + Jon
def rule(dog){
	--0.9;
	Ygritte *= TABLE[52][Sansa]
}
def TABLE[1][i] {
	if(( Stark )){
	if(betray()){

};
	Jon *= -Arya
};
	if(COLS){
	Hodor += ROWS;
	if(( betray(Arya,mislead(--88,( foo(--betray(-0.39),rule(TABLE[-Ygritte][-Arya])) ),TABLE[Arya][mislead(( -10 ) * COLS,TABLE[-110.829][-bar(Stark)],COLS) + -x - TABLE[( -ROWS )][-Jon] / TABLE[Hodor][( TABLE[1][-0.54] )] + ROWS / -Stark + TABLE[y][( ( Stark - ( ( destroy(foo(( -1 + -ROWS ),y),890.202 + ROWS) ) ) ) )]])) / -x )){
	x -= foo(--bar(-COLS,( bar(33,-600.67,0.99) )),TABLE[TABLE[-74][-Arya]][betray(betray(y,foo()))]);
	if(--0.48 * dog - 1){
	Jon += Arya;
	if(300.825){
	x -= -COLS * 0;
	Ygritte *= -0.89 + -0.3 * -1
} else {
	if(TABLE[COLS][Stark]){
	if(-( TABLE[Arya][TABLE[( -Hodor )][foo(( -COLS ))]] )){
	if(TABLE[( COLS )][Sansa]){
	x
} else {
	( ( ( ( ( rule(Ygritte,-Stark - Stark - ( Hodor ),1) ) ) ) / ( COLS ) ) )
}
}
};
	dog;
	if(dog){
	if(Ygritte / COLS + Arya){
	protect(Arya,-950.4);
	( Hodor ) - Sansa
};
	Hodor += x + -betray(ROWS);
	if(Ygritte){

}
}
}
}
} else {
	x -= Hodor;
	dog += ( TABLE[Ygritte][y] );
	dog += Ygritte
}
}
}
def mislead(Arya,Stark){
	if(1){
	if(-( Ygritte )){
	if(Arya){
	protect(bar(Jon),-( -( -TABLE[mislead(-44)][Arya] ) + ( -( y ) ) ))
};
	TABLE[( -TABLE[x][Ygritte] )][( ROWS )];
	Arya /= -Arya
} else {

}
};
	COLS
}
var y = 90
def TABLE[Arya][j] {
	if(betray(Ygritte + ( ( mislead(TABLE[ROWS][1] + ( mislead(bar(ROWS / y * -mislead(rule()),Sansa),COLS) ),rule()) ) - Jon ),-0.47 + ( -0.87 ) - 98)){
	-COLS
} else {

};
	( -37 * Jon + foo(( COLS ) / -47,y) )
}
assert -0.86 : "Fear cuts deeper than swords."
var Jon = COLS
var Hodor = -rule(-74 / Jon,destroy(rule(( COLS - COLS ) / 630.6 - -y - y + ( Sansa ),x) + -Stark * ROWS + rule(( ( ( -290.9966 ) + COLS ) ) + COLS,Ygritte,( COLS )),( TABLE[Hodor][betray(bar())] )) - betray() - 0.98 * COLS)
def TABLE[Arya][k] {
	( rule(-1 + COLS,( -370.89 ),( y )) );
	if(( -Stark )){
	x += y;
	Sansa *= --84
}
}
var Stark = ( COLS ) / Ygritte + -0.88 * ( ( ( y ) ) ) * ROWS / Jon
def TABLE[y * ( Sansa )][i] {
	Ygritte *= protect(x,betray(ROWS,betray(ROWS,-TABLE[( ( protect(( foo(Hodor,ROWS) )) ) )][Jon] + ( 0.81 ),-TABLE[38][TABLE[mislead()][mislead(-55,Jon,COLS) - -Stark]]) * ( protect(bar(Hodor)) / TABLE[( Jon - x )][--foo(0.42 / x - Ygritte - ( COLS ) - -destroy(dog,-0.37),( 85 ))] ),betray(----Jon,( ( -( COLS ) ) ),betray(-TABLE[--( 170.298 ) - ( 0.82 )][foo(Jon - COLS + Stark)],destroy()))))
}
def TABLE[bar(destroy(foo(-x / destroy(-( --Sansa ),protect(COLS,dog) / -( -0.44 ) - y,0.9))),( protect(( -COLS ),47) ),TABLE[-0.34][-1])][j] {
	if(-1){
	Stark *= ( rule(-0.45,( -( dog ) )) );
	y += Stark;
	--1
};
	bar()
}
var Jon = foo(TABLE[-1][-( rule(mislead(rule()),COLS) )],protect(0.57,betray(destroy(ROWS))))
var Arya = rule(TABLE[Stark][( 56 )],-840.032)
def TABLE[-93][k] {
	-1 * y
}
def rule(Arya){

}
def bar(Stark){
	if(dog * -protect(( foo(y,-0.12,y) ),-( --0.73 ) - 76)){
	if(-24){

};
	( ROWS ) / 50;
	y -= betray(( COLS + -36 + ( -0.59 ) ),Jon)
}
}
var x = dog
var x = ( rule(TABLE[84][Arya + Ygritte],TABLE[-61][y]) )
def TABLE[foo(ROWS)][j] {
	if(-Arya){
	if(foo(0.05,-destroy(betray(( rule(-bar(destroy(( ROWS ),Ygritte),x),---0.05,TABLE[0.64 + Sansa][Stark]) ),Arya + -960.2),0.69,ROWS)) * COLS){
	Hodor *= --ROWS
} else {
	if(Arya){
	( ----( protect(( ROWS / ( -ROWS ) )) ) );
	90.8
};
	( Sansa ) + 0.34;
	Arya /= mislead(-Hodor)
}
}
}
assert ( ( rule(rule(-1) + mislead(-COLS + -Hodor / -( 0.07 ) / rule(ROWS / dog / destroy(-1 - mislead(-1000.8146),( -mislead(-mislead(8),y) ),rule(1 + --mislead() / foo(0.17),-Jon)),0.33),y),ROWS,-44) ) ) * COLS : "What do we say to the Lord of Death?"
var Ygritte = -9
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][j] {
	( ( -40 ) );
	Ygritte /= -2
}
def TABLE[-Hodor * --rule(-dog + -17)][k] {
	COLS;
	-protect(foo(0.71 - ( 660 ) + -90.6),COLS);
	Arya -= protect()
}
def TABLE[ROWS][i] {
	x += mislead(--foo(TABLE[rule(-76,y,dog)][foo(-440.43)],( ( betray() ) / --mislead() / ( x ) - protect(COLS) ) + -0.34,Stark),( COLS ),-40);
	-( Arya );
	y += TABLE[( -ROWS )][destroy(30,( destroy() ))]
}
def TABLE[( ROWS ) / Arya - rule(-( y ),TABLE[( -0.1 )][y])][i] {
	if(0.49 * --TABLE[COLS][--( Ygritte ) - TABLE[0.36][Stark] * Jon] - -( Stark )){
	ROWS;
	if(91 - COLS){
	foo(foo(---( TABLE[38][ROWS] ) - destroy(( 980.5 ) - x - -1 * ( ( -dog ) )) + -( Ygritte ) - Jon / rule(72 - Arya),-23,COLS))
} else {
	Hodor /= -0.8
}
} else {
	Jon -= -foo(( -bar(-720.8462,ROWS) * 52 / Stark - 1 ))
}
}
var Sansa = ( Stark )
def foo(Arya,dog,Ygritte){
	Arya /= --7
}
def TABLE[TABLE[COLS][-destroy() - 0.29]][k] {

}
var x = -rule()
var dog = TABLE[foo(mislead(-( -Stark ) + ( TABLE[-COLS - betray(x) + 98][1] - rule(mislead(),-0.85,570.6019) ),dog,( COLS )))][dog]
def TABLE[6][k] {
	y;
	dog *= 1
}
var Stark = rule(( ( -Sansa / -TABLE[( ---( 0.12 ) )][Arya] - 0.79 ) ))
def TABLE[rule(COLS) * rule(protect(( -42 )))][i] {
	( Stark );
	if(-10.8364){
	26 / Jon;
	( --1 )
}
}
def TABLE[-Sansa][k] {
	dog /= destroy(Jon,foo(foo(x / x,-( -0.76 ),Hodor)),( mislead(-0.75,protect(),-y - Hodor) )) - -0.13;
	betray(-1,( ( ( ( foo(-bar(COLS,ROWS) / COLS * Ygritte,ROWS) ) / Hodor ) ) ) / ROWS + -Hodor - ( Ygritte * ROWS ) * COLS + betray(foo(-0.51,( ROWS - rule(COLS,Jon,TABLE[protect(-47,y)][( foo(-Ygritte,-x,COLS) )] - Jon * --COLS) ))))
}
def TABLE[TABLE[ROWS][foo(COLS) + Stark] - ROWS - ( foo(rule(-destroy() - betray(( betray(( TABLE[-0.01][-0.87] ) + -Jon,( --foo(--( bar(rule(y,140.09 + -mislead(-bar(Hodor / -31,( -2 / Jon )),( 0.81 ) + -bar(-630.68 + 0.26 * TABLE[-0.27 / 75][-foo(Stark - ( ( 1 ) / Ygritte * foo(71,protect() * ROWS,COLS) ),( ( -foo(-600.663) ) ),( TABLE[betray(( ( ( ( TABLE[foo(Stark,78) / ( 1 )][bar()] ) ) ) ) / Hodor / foo(),490.115 / protect(rule(( betray(( TABLE[COLS][-810.3718] ),44,( -( -mislead(x * TABLE[Hodor][-x],ROWS) ) )) )),29),( ROWS )) * destroy(bar(77 / --0.03)) * 60][Ygritte / COLS / ( Arya )] )) + ROWS],Ygritte,-mislead(-Jon,990.9)) / -88) * ROWS,foo(( 640 ) * Hodor,( COLS )) / 1)) ),( protect(TABLE[-0.67 + ( TABLE[mislead()][-0.6 * ( ( --( -0.14 ) / 880.012 - Stark ) )] )][-( ( --87 ) )],( TABLE[Stark * ( protect(COLS / -protect(bar()) / mislead(bar(),foo(foo(Ygritte,foo(mislead(mislead() / ( ROWS ),-( COLS )),destroy(bar(Ygritte,30 - --15) / -ROWS,-1,80) * -2)),( Hodor )))) )][TABLE[-TABLE[destroy(-betray(( 74 )))][-0.67] * ( protect(Hodor,protect(),TABLE[ROWS][0.42]) ) + ( -bar(ROWS,-rule(ROWS)) + ( mislead(( dog ),--51 + 100.5 * destroy(Arya - -( ROWS ))) ) * -Stark ) / ( Hodor )][x]] ) / mislead()) / COLS ) - mislead(( destroy(( Sansa ),ROWS) ),bar(( ( -COLS ) ),( 1 )) - protect(-430.34) / betray(bar(Stark,COLS))),-Arya / 0.04) * 91 )) ),x + Jon))) * COLS * Sansa )][i] {

}
def protect(Stark,dog){
	-1;
	Ygritte += ROWS;
	if(mislead()){
	TABLE[rule(betray(Sansa,protect(--( 400.3 ) + ( ( ( Ygritte ) ) - bar(ROWS,( ROWS )) - --830.57 * TABLE[bar()][ROWS] - ( COLS ) ),protect(),Jon + ( --( ( ( ROWS ) ) ) ))))][( Arya )] * -TABLE[ROWS + protect(( COLS ))][--dog] / Arya
} else {

}
}
def TABLE[-82][k] {
	y -= -Jon;
	if(0.34){

} else {
	if(( ( -380.35 ) - rule(-( ( TABLE[Ygritte][mislead(( ( ---bar(Sansa) / betray(destroy(Arya,protect(( y ),Jon)),ROWS / ROWS / ( TABLE[( ( TABLE[-Jon][53 - ( bar(COLS,TABLE[-TABLE[( ( --( -( TABLE[-0.76][protect(COLS,destroy(-rule(rule(COLS)),Jon))] ) - ( -43 ) ) - protect(y) - ---( TABLE[-Arya][Ygritte] ) ) )][-0.31]][-0.23],x * ( rule(-6,COLS) )) + ROWS ) + betray(ROWS) + COLS] * COLS * ( Sansa ) ) )][-0.36] ) / --0.85) ) ),Jon)] ) ),TABLE[Jon][destroy(ROWS + --49)] / foo(protect(bar(COLS)))) * dog )){
	Arya += -( 0.37 );
	if(ROWS){
	( -83 * 16 );
	Arya -= Arya
}
};
	if(--( ( -0.83 ) )){
	y *= ROWS;
	dog /= bar(Arya)
} else {
	Stark *= 0.4;
	Sansa /= protect(100,-protect(Hodor))
}
}
}
def TABLE[COLS][j] {
	if(y){
	Arya /= ( ( ( -440.43 ) ) - COLS );
	x /= ( -0.8 )
} else {
	if(( ( 82 ) - -0.5 )){
	if(dog){
	Arya += --0.7 * ( destroy(-rule(ROWS) * 0.33,-0.42) ) + -( --protect(-( ( ( -( ( -rule(--mislead(protect(( Hodor * protect() )),betray(ROWS,TABLE[( COLS )][59])),Stark) ) ) - -0.36 * ( ( COLS * 67 ) ) ) ) ),TABLE[ROWS][( rule(protect(0.97,rule()),ROWS) )] - -ROWS / ( Ygritte + ( 0.68 * ( Sansa ) - -destroy(--7,-( --900.8 )) * Jon ) ) * ( ( COLS ) ),Sansa) + ---630.884 - foo() ) + -1 + COLS
}
}
}
}
def destroy(Stark,Stark){

}
assert -67 : "Winter is coming"
assert ( rule() ) : "One can not simply parse himself"
def TABLE[-destroy() / COLS * ROWS * ( 0.09 )][j] {
	protect(1,ROWS,foo())
}
def TABLE[( bar(-0.72) )][j] {
	if(0.3){

} else {
	( -21 );
	-Arya
}
}
assert -960.528 / mislead(( bar(-( ( -0.18 ) ),Jon) + ( ROWS ) / mislead(destroy(COLS),( ( betray(TABLE[-protect(340.078 - destroy(( ( Stark ) ),( destroy(TABLE[-14][--TABLE[-Ygritte][ROWS] + --0.24 * -Stark / bar()],rule(( Arya )),-Arya) ),--( Arya ) / ROWS))][( Arya )]) ) )) )) : "What do we say to the Lord of Death?"
def protect(){
	y += ROWS
}
def TABLE[( --ROWS )][k] {
	if(( -1 )){

};
	Ygritte -= foo(( ( Arya ) )) - y;
	Sansa += -340.46
}
var Jon = -foo(( -betray(-200.406) ))
assert -y : "Fear cuts deeper than swords."
assert ( x ) : "Fear cuts deeper than swords."
def foo(Jon){
	COLS;
	Stark += ( foo(( bar(-( bar(TABLE[( -x )][TABLE[mislead(Ygritte)][-x]]) ) + ( rule(TABLE[Ygritte][-x]) ),Sansa / COLS) ),-dog * -Ygritte) );
	if(( x - dog + --95 / -7 ) + ( TABLE[92][-0.05 / -Stark + -63] )){

}
}
assert Stark : "One can not simply parse himself"
assert 610.291 - ( foo(-Jon) ) : "Nothing burns like the cold."
assert TABLE[destroy(-1) - -0.34][( -23 + -650.155 )] * -8 : "Nothing burns like the cold."
var Ygritte = TABLE[betray(Sansa,( foo(1,mislead(-( -1 ) / mislead(ROWS),TABLE[-36 + COLS + --1 + 65][ROWS],-0.02),-0.23) / --( mislead(0.01) ) / rule(Ygritte) )) / ( ROWS ) + ( Stark ) * foo(( mislead(1,bar(-0.31,-93,bar(TABLE[COLS / 98 - x][destroy(-0.01)],-920.7 * 38 * ( mislead() ) / Stark * -TABLE[( -( betray(ROWS,--mislead()) ) ) / COLS][-( -42 )]) * -protect(ROWS))) ))][( 41 )]
def TABLE[destroy(bar(( 0.17 ),( Stark )))][k] {
	if(mislead(COLS,-0.8 * ROWS,-foo(ROWS + ( ROWS )))){

}
}
def rule(Hodor,Hodor,Stark){
	betray(920.16);
	if(-0.67){
	--( -Stark );
	Hodor *= y
} else {

}
}
def TABLE[-Sansa][k] {
	if(-Hodor){
	Hodor += Sansa - ( -COLS );
	x;
	if(0.75){
	Ygritte /= Hodor
}
}
}
def foo(){
	if(-820.43){
	Hodor;
	if(-ROWS){
	if(TABLE[foo(bar(-destroy(Jon,( ( COLS / -12 ) )) * -rule(y),Sansa),dog,TABLE[-61][protect(bar(destroy(foo(),( COLS )),-30),18,destroy(990.47))]) * destroy()][ROWS / ( -0.38 )]){

};
	if(bar(Jon,TABLE[Arya * y][Jon])){
	Ygritte += 1
}
} else {
	y += TABLE[foo(dog,dog)][( -betray(( ROWS ),bar(betray(rule(TABLE[-Arya + ( ( 33 ) ) * Jon][betray(bar(dog),TABLE[y][( -38 )],Arya)]),TABLE[Stark][700.572],bar(-destroy(( ( COLS ) * -1 )))),Ygritte)) )]
}
};
	if(( -betray() )){
	Hodor;
	Sansa *= ( foo(( -0.38 )) )
} else {
	betray(destroy(Hodor),( -1 ),destroy(( TABLE[1][destroy(ROWS,ROWS)] ),-( --protect(-500.398) )) - -0.84)
}
}
def TABLE[ROWS][i] {

}
assert ( -dog ) : "One can not simply parse himself"
var x = ROWS
assert bar(foo(0.88,Arya * Sansa,--380.3259)) : "One can not simply parse himself"
var y = -0.19
def TABLE[( -( Hodor ) ) - rule(Stark,-14)][k] {

}
def TABLE[Stark - ( ( -1 ) )][k] {
	Sansa -= ( rule(0.36,-1) )
}
assert TABLE[470.95][Hodor] : "What do we say to the Lord of Death?"
def bar(Ygritte,Ygritte){
	if(Sansa){
	Hodor += ROWS;
	ROWS
}
}
var x = 13
def protect(Sansa){
	rule(Ygritte)
}
assert -ROWS : "Nothing burns like the cold."
def bar(Jon,y,Ygritte){
	Stark /= ROWS + destroy();
	ROWS - ( y )
}
def mislead(Jon){
	if(--270.9607 + foo(60,TABLE[destroy(foo(TABLE[TABLE[TABLE[Sansa][( --( -0.43 ) ) / -1]][COLS]][ROWS]))][( --TABLE[( --bar() ) / ( ( COLS ) )][0.51] * TABLE[( 0 + bar(rule(-1,-17),( ( 0.81 ) / 1 )) ) * destroy(( mislead(TABLE[COLS][Sansa]) ))][destroy()] + ( -0.65 - bar(y,-( -50.751 )) ) - ROWS )]) - Ygritte){

}
}
def TABLE[-destroy(ROWS,TABLE[( COLS )][Ygritte])][k] {
	Ygritte *= ---0.03;
	if(protect(-0.95)){
	TABLE[( Sansa )][( -0.34 )];
	dog *= -Sansa
} else {
	destroy(0.94) + -ROWS;
	if(( Arya - Ygritte )){
	TABLE[Sansa][COLS];
	destroy(Arya,( ( Hodor ) * betray(( ( TABLE[betray(TABLE[COLS + Jon][Arya],( ( TABLE[x][( --1 * 80.513 )] ) ) - -85)][( -0.8 )] ) ) * destroy() - -dog,Arya) ))
}
}
}
def TABLE[-TABLE[-1][( ROWS )]][j] {
	-82
}
def TABLE[destroy(Ygritte)][k] {
	if(destroy(-TABLE[-44 - --0.44][-betray()])){
	protect(-77,x,destroy() * ROWS);
	if(protect(ROWS,Arya,-ROWS)){

}
};
	( 49 )
}
def foo(x,Stark){
	if(mislead(Jon) + ( -foo(-destroy(-( TABLE[TABLE[ROWS][21] * ( y )][-foo(ROWS,foo(y,COLS,-0.49 - foo(( rule(-( destroy(ROWS,TABLE[--foo(-0.23)][( Stark * COLS - ( y / ROWS ) )] - ( -540.89 )) + ( -( foo(Ygritte) * ( --610.9 ) - Arya ) + 69 ) * Hodor - x )) ))) * -Jon - --0.2 - 0.07 + ROWS - COLS - COLS / 390.123 - COLS - ( ( -bar(rule(Stark,ROWS) * -COLS) - ( ( Jon ) ) ) ))] )),( -0.83 ),0.31) )){
	if(15){
	TABLE[y][betray(COLS,COLS) + -COLS]
} else {
	if(-0.59){
	bar(( ( ( -TABLE[( Hodor ) * y][( rule() ) * mislead(rule(destroy(( -93 * Ygritte ))))] ) ) * ROWS ) * ( ( -( ( y ) ) ) ) - bar(Arya - COLS,-1,-foo(Arya,-Jon)),860.5,destroy(Ygritte,protect(( ( Sansa ) ),TABLE[-destroy()][-98]),Jon))
}
};
	if(TABLE[ROWS - -COLS][0.5]){
	-( Stark - protect() )
}
};
	if(( 520.78 )){
	Sansa += -( -ROWS ) / ( ( -ROWS / ( -destroy(dog) ) ) )
} else {
	if(-dog){
	if(TABLE[81][COLS]){
	( ( Hodor ) );
	foo(-160.642,--TABLE[( Hodor )][( COLS )] / ROWS)
};
	Arya /= ROWS
};
	foo()
}
}
assert ( 0.4 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( dog )][j] {

}
def protect(Sansa,dog){
	-( ROWS ) / ROWS - x / dog
}
def foo(y){
	if(-10){
	x;
	if(-COLS / Sansa){
	-rule(( bar(( bar(betray(),dog + Ygritte) )) ));
	COLS;
	if(( ROWS )){
	Arya += ROWS
} else {
	if(COLS){
	-COLS + 39;
	ROWS
} else {
	Arya
};
	if(0.29){

} else {

};
	if(COLS){
	if(COLS){
	if(460.31 + --ROWS * -820.09 - ROWS){
	if(( dog )){
	( mislead() * 0 ) + Stark;
	y
} else {
	Ygritte /= x
};
	y += COLS;
	if(COLS){
	if(( ROWS ) * mislead(( -Sansa ))){
	if(destroy(Stark,-TABLE[Arya][-( ROWS )]) + --Arya + -rule(-26)){
	if(( --73 )){
	if(270.66){
	dog /= TABLE[( COLS )][0.94];
	Arya /= -0.4
} else {
	if(Sansa){
	Sansa -= bar(-0.26)
}
}
};
	if(-0.53){
	Stark -= -0.3 / --61 * destroy(COLS,rule(Ygritte,ROWS));
	if(660.84){
	ROWS;
	y -= TABLE[32][foo(( -1 ),---Ygritte)]
};
	if(-bar(rule(y,destroy(Stark)),0.23,0.11)){
	Hodor *= Sansa;
	if(-97 / 0.53 - ROWS){
	if(-COLS){
	Ygritte -= Stark
} else {
	if(COLS){
	if(( TABLE[y][--y] )){
	if(( --Hodor / 0.16 )){

};
	if(-TABLE[ROWS][bar(Stark,TABLE[55][-Hodor])]){
	Jon += dog;
	if(1){
	Arya;
	if(destroy(Jon,-0.36,destroy(Stark))){
	Ygritte /= mislead()
} else {

}
} else {
	if(( bar() )){
	dog /= dog;
	if(protect(rule(dog,bar(),Arya) - ROWS,( TABLE[-670.78][( ( TABLE[Jon][52] ) )] ))){
	-( COLS );
	Hodor * ( -780.988 / -dog * bar(TABLE[protect(( Arya ))][--Stark]) - COLS * Hodor )
}
};
	if(( -62 ) * dog){
	foo(( -70 ) * destroy(protect(),TABLE[--x][mislead(TABLE[Arya][( ( ( -0.45 ) * --0.52 ) )],-TABLE[COLS][-370.378 - --1 + ROWS])]) / TABLE[protect(TABLE[TABLE[ROWS][-0.47]][-COLS],bar(),-490.2179) / TABLE[-rule(Stark)][TABLE[( ( 0.15 ) ) * dog][betray(( dog ) * ( ( COLS ) ),-Ygritte)]]][destroy(COLS,COLS)],( ( Stark ) ))
}
};
	if(x){
	if(460.836){
	Sansa += ( ( ( 40 ) ) * bar(( Stark ),Stark) * -280.93 - Arya )
} else {
	Ygritte /= --42;
	if(-22){
	if(( 60 ) * -( betray(-810.6 * foo(ROWS,( ( ( -0.45 ) ) )),foo(Arya)) / -1 / 32 )){

} else {

};
	Arya *= -0.98
}
};
	rule(Hodor,-400.8,Hodor);
	Stark
} else {
	( -0.89 - betray(-Ygritte) )
}
}
} else {
	Stark /= ROWS
};
	Stark * x * TABLE[COLS][COLS] * Jon
}
};
	mislead(--x,x);
	( mislead(TABLE[( -18 )][mislead(( TABLE[-bar(Hodor)][-TABLE[-y][-Jon * COLS] - -81] ),Hodor,ROWS)]) )
} else {
	COLS
}
}
} else {
	Stark -= -( -2 ) + bar(x,-Stark - ( Ygritte ) - TABLE[ROWS][bar()])
};
	--x / ( ROWS ) - TABLE[-1][( ROWS )]
};
	if(Ygritte){
	COLS;
	Jon -= 55
} else {
	0.15;
	Hodor /= y
}
} else {
	destroy(TABLE[y + --ROWS][bar(y,betray(foo()),( 1 ))],-1)
};
	if(COLS){
	y -= COLS;
	Sansa *= -61;
	Stark /= y
} else {
	y /= 14;
	Jon *= -Ygritte
};
	bar(--25,-COLS)
} else {
	x += -0.61;
	if(Arya){

}
}
}
} else {
	if(--55){
	Jon -= ( 0.77 )
};
	if(Jon){
	( -0.76 );
	rule(-Jon,-ROWS - protect(( TABLE[-0.39][dog] ),TABLE[-( -betray(betray(),( ( Jon ) ),TABLE[destroy(( ( bar(mislead(( ( -( Ygritte ) / ( ROWS ) / ( Arya ) ) ),Ygritte * -0.66) * destroy(Hodor,Stark,-ROWS + 420.913) / Stark) ) + ( ---TABLE[ROWS][mislead() + COLS] + -TABLE[TABLE[( rule(-3 - -protect(( -28 ),-rule(( -86 ))) - TABLE[( -( -x ) * ( destroy() / Ygritte ) + Ygritte + betray(Arya) * --ROWS + dog * TABLE[foo(dog)][( betray(foo(( -Hodor + -0.06 - ( -0.49 * ( x - y - Sansa + destroy(0.54) ) ) ),-protect(betray(( ( -COLS ) ),47,ROWS)) + Sansa),destroy(),COLS) )] / ( Stark ) / Hodor * COLS * ( destroy(COLS,-46 + -310.35) + 4 ) / ROWS )][TABLE[ROWS][94] + Hodor - -( 1 )] / 0.18 + betray(foo(( COLS ),-1 * Arya,rule(29,TABLE[COLS][Ygritte],( ROWS ))),--x),-( -Jon ) * ( -( 1 ) * -Stark * ROWS * COLS )) )][ROWS]][36] ) ),COLS) + COLS][foo(mislead(),COLS / TABLE[x][-1])]) )][foo(COLS,mislead(rule() - TABLE[--( 61 * -( -destroy(TABLE[ROWS][1],-430.789) ) + 770.53 )][ROWS],Hodor,-Sansa))],--95) - --0.38)
} else {
	x += 0.31;
	( mislead(Stark,TABLE[x / ( protect() )][-11],850.55) );
	if(Jon){
	-220.969;
	x -= COLS
} else {
	if(TABLE[Stark][y]){
	0.27
};
	Jon;
	COLS
}
};
	if(( TABLE[-TABLE[Stark][ROWS + rule(destroy(),-Ygritte / ( 0.96 - -910.98 ))]][( ( ( bar(( ROWS ),-1) * destroy(-0.96 / dog / rule(-84)) ) ) )] )){
	Ygritte += -( -610.94 )
} else {
	Hodor += -x;
	destroy();
	( ROWS ) - -ROWS
}
};
	if(-COLS){
	-0.27;
	if(Arya){
	if(destroy(-( protect() / -1 ),-y) / COLS * ( Jon ) / mislead()){
	if(COLS + ( Arya + ( mislead(TABLE[--rule(betray(),-0.96)][dog * protect(( y ) + protect(Sansa,( foo(Stark) )),rule(0.69) / ROWS / dog) + -( ( Ygritte ) ) - bar(y,y)],0.57) * dog ) + betray(bar(COLS,( -730.5605 )),x,ROWS) )){
	Arya /= -mislead(-0.73 + --17);
	Jon
} else {
	if(TABLE[( 870.6 )][Hodor] / ROWS){
	x
} else {
	-betray(y,Arya,bar());
	Ygritte *= ( 1 )
}
}
} else {
	if(Jon){
	if(COLS){

};
	-150.753;
	Ygritte
} else {
	if(mislead(-66,betray())){
	Ygritte;
	x -= dog
}
}
};
	0.05
} else {
	Stark *= Jon
}
};
	1 * ( ( 0.59 ) ) / ( ( ( -ROWS ) ) ) / ROWS
} else {
	Sansa += Sansa
}
}
} else {
	if(foo(x,( mislead() ),x)){

} else {
	protect();
	Ygritte -= -( -Jon )
};
	Arya -= TABLE[protect(ROWS,ROWS)][( Ygritte ) * ( Sansa )]
}
} else {
	if(Hodor){
	-260.4;
	betray()
} else {
	Ygritte *= ( Jon * -17 );
	rule(-0.27 + Ygritte)
};
	( Hodor );
	Sansa += ( -Arya + destroy(-0.52) )
};
	x /= ROWS
}
def mislead(){

}
var Sansa = COLS - TABLE[( -Arya )][( TABLE[COLS][( -0.47 ) / TABLE[( Sansa )][0.29]] )] / ( Arya ) * TABLE[protect(y)][COLS] - betray(( protect() ))
def foo(Jon,Jon,Stark){
	if(COLS){
	COLS;
	-foo(-COLS,( destroy(( ( ( Jon ) ) )) ),betray(Arya,bar(COLS)));
	if(( Stark ) / --ROWS){
	if(COLS){
	( rule(( ROWS - x ),COLS) )
};
	if(-( -( ( foo(bar(bar(-protect(740.8,-28)),foo(( -betray(ROWS,( 0.11 ) / ( ( Ygritte ) )) ),( -120.547 )),-0.69) * -x,( destroy(-ROWS) )) ) ) )){
	if(( mislead(-560.87) )){
	( ( y ) );
	if(ROWS){

} else {
	if(ROWS){
	mislead(( ( -0.12 ) )) * TABLE[protect()][protect(( -Stark ) + COLS + -0.12 / -( Jon ) / ( ( ( y ) ) ) + ROWS)] / -0.25;
	Ygritte -= protect(destroy(-0.46 / ( TABLE[-dog * COLS][350.73] / 0.25 / mislead() - -17 ),y),-( -( ( -1 ) ) * ROWS - ( Arya ) ))
} else {

};
	if(betray(Ygritte)){
	1
} else {
	if(TABLE[foo(0.34,bar(Hodor),--410.347)][y]){
	if(y){

} else {
	-0.83
};
	y
}
}
};
	if(530.83){
	bar() + Sansa
} else {
	Sansa += COLS;
	Sansa *= ROWS
}
} else {
	Ygritte += TABLE[( ( -betray(ROWS) ) )][-( rule(-rule(--protect(foo(COLS,destroy(0.62 + --protect(x),( --( betray() ) / mislead(-( ( ( Jon ) ) ) - Jon,ROWS) ))),( COLS * ROWS )) + 23)) ) * ( foo(Sansa,( destroy() )) )] + destroy(1,Stark,mislead(COLS))
};
	if(( -680.366 ) - --0.45){
	-Arya / ROWS;
	51;
	x *= dog
}
};
	Arya += -960.826
}
}
}
def mislead(dog){
	Jon;
	if(-TABLE[-( Stark ) - bar(-68,foo(( mislead() ),ROWS,( -92 )))][-bar(bar(destroy(710.26)),protect(dog,( COLS + Hodor ),TABLE[rule(-COLS)][TABLE[-1][----21 * ( --820.7545 ) + y]]))]){
	if(890.64){

};
	Arya /= -( 99 / --88 ) - 0.5;
	if(COLS){
	dog *= mislead(0);
	if(rule(mislead(( Arya ),ROWS))){

} else {
	Ygritte -= betray(-610.3);
	foo(---( TABLE[( rule(( -COLS / ROWS )) )][-destroy(-0.26 + ROWS,Stark)] / dog / --360.75 / COLS * ( Ygritte - Ygritte + Ygritte ) / protect(foo(( betray(ROWS) )),( ROWS / bar() ) * Arya) ),0.01)
}
} else {
	0.89 / -0.58;
	ROWS
}
}
}
def betray(Hodor,Hodor){
	if(-TABLE[dog][( ( protect(dog) ) + ROWS * destroy(-ROWS,Arya,destroy()) - ---1 )] * Stark){

} else {
	if(0.63){
	if(-Jon){
	if(-y){
	Stark += -( 170.9 );
	if(betray(( destroy() ),protect(( -86 )))){
	Jon -= rule(-mislead(-Arya + ( Sansa ) / mislead(bar(Sansa),mislead(),( ( -( ( rule(( ( -1 ) ) * --( Sansa ),COLS,1) ) ) - ROWS ) ) * mislead(( y ),( ( -COLS * --mislead(-14 / COLS,Ygritte,mislead(COLS)) ) / ( ROWS ) )) * 70.3 - rule(( -( 520.0374 ) ) - COLS,dog)) * COLS,foo(ROWS,( COLS ))),-( bar(betray(mislead())) ))
} else {
	if(COLS){
	if(betray(--( -38 ),( bar() ) + ROWS,protect(dog))){
	if(-0.24){
	if(bar(( COLS ) / Hodor * COLS)){
	bar() / destroy(-590.393);
	if(-Stark){
	( y );
	if(1){
	COLS
} else {

}
} else {
	if(Stark){

} else {
	TABLE[0.9][39];
	if(Ygritte){
	( -160.5899 )
} else {
	-( 400.59 )
}
}
}
} else {
	dog /= --0.69;
	x *= -5
};
	-destroy(TABLE[( ROWS )][TABLE[( ( -Arya - ( ( Hodor - destroy(bar(( mislead(COLS,destroy(( TABLE[TABLE[( ROWS )][-1]][Ygritte] ))) ),Arya)) ) ) / COLS ) )][y]])
}
};
	y /= TABLE[ROWS][-protect(ROWS,foo(( Arya ),0.05),( 1 ))];
	COLS
} else {
	destroy(( ---660.31 ),( ( -Hodor ) - ROWS ) * Arya);
	mislead(x,Ygritte,Ygritte * COLS)
};
	Stark /= ( -Sansa );
	if(dog){
	if(dog){
	y /= foo(-mislead(-( ( ( bar(( COLS ),-( ( ROWS ) ),( 23 )) ) ) ) - ( bar(y - -----1) ),-ROWS + -( betray(protect(destroy())) )));
	dog += -mislead(TABLE[( mislead(( ( Stark ) )) )][x])
};
	( ( x + -( --0.24 ) / Arya ) )
}
};
	-mislead(( Stark ) * -TABLE[foo(-1)][( bar(-690.99) )],foo(x))
};
	destroy(ROWS + TABLE[ROWS + Jon - bar(-( dog ),1)][betray(destroy(rule(y,Arya,rule(Jon)),COLS))]);
	if(1 - ROWS - ( ROWS ) + betray(bar(470.501 - ---destroy(-31,-( Jon )) / foo(),dog),( ( ( Hodor ) * Sansa - -( -betray(1,500.94,( bar(bar(foo(foo() - ROWS) / 96,dog)) ) / Arya) - 0.99 ) ) )) - Jon){

}
} else {
	Sansa *= TABLE[--TABLE[( Ygritte )][foo(-betray(--Sansa - betray(0.38,-protect(mislead(dog,-( -TABLE[-0.66][( 1 )] - protect() ),1) + COLS) * -( protect(( ( destroy() ) ),-Jon - ( ---0.11 * --betray(( ( Hodor ) ) - COLS) * ( ROWS ) ) - protect(Stark,Arya) / 0.45 + -( 0.38 ) / ( -( ( 0.57 ) ) )) )) + foo(-820.346 / ( y )),TABLE[16][22],-Ygritte) - destroy(protect(0.42,94,--ROWS)),mislead(--betray()),-( TABLE[79][Stark] ) - -destroy(-Jon))]][-0.15];
	if(destroy(( -bar(( 86 ),y) * -80 ))){
	14 * rule(89)
} else {

}
};
	y * Stark
};
	Jon /= TABLE[-Stark - ROWS * -( -rule(800.85) ) - -destroy(TABLE[y][1]) / 0.53 + foo(( -550.963 ),destroy(protect(rule(dog,-protect(ROWS,betray(TABLE[-( -7 )][46] / 62,foo(( COLS ),destroy(betray(rule(ROWS - 35,mislead(TABLE[( ( Jon ) )][( -44 )],500.58),mislead(-0.19,x,betray(-0.82,( protect(( ( -mislead(-37,( 0.81 )) ) ),( Stark ),bar(( Hodor ),Sansa)) + 25 ),-0.07))) / TABLE[COLS + rule(-Stark)][dog],-0.18 / COLS * -TABLE[ROWS][TABLE[-64][-1]] - Jon),ROWS,protect(-x,-33)))),TABLE[( ( ROWS ) )][( --Ygritte )])) + 1,-580.311),bar(-rule(-( rule(--0.84) ),-bar(0.75) - ( y )))),rule(-900.257,betray(Sansa + COLS),betray(-800.5486,1 - -47 / Ygritte)))][ROWS]
};
	if(-( Arya )){

};
	if(Stark){

}
}
def protect(Sansa){
	if(-( dog )){
	y *= foo()
} else {
	y /= Jon - Ygritte / -780.49
};
	betray(COLS);
	x += Hodor / mislead(-Ygritte)
}
def TABLE[-mislead(( ( --bar() ) )) + COLS - ( ROWS )][i] {
	if(ROWS){

} else {
	Stark -= Sansa + foo(-betray(( Hodor ),Arya),bar(-0.74,y,( COLS ))) / x * Hodor * ---COLS * mislead(foo(-x,Hodor,ROWS)) * Jon
};
	Hodor -= --0.15
}
def TABLE[foo()][j] {
	COLS / ROWS;
	-( -destroy(ROWS * ( -360.339 ) / rule(--480.7 / Stark,-0.81) * Jon * bar() / ( 0.81 ),-1,dog) + ( ( ( --1 ) ) ) * rule(-y,dog) ) / Arya;
	if(-0.92){
	rule(( Arya ) + -x,-650.535)
} else {
	if(x){
	Arya /= -0.22
}
}
}
var Stark = ( Arya )
def protect(Arya,x,y){
	mislead(Ygritte,foo(( ( ROWS ) + mislead(foo(( ROWS ),-Ygritte,-mislead(TABLE[-rule()][protect()],COLS) - COLS)) ) * -COLS * x) / protect(0.36,mislead(( betray(TABLE[-84][Sansa]) ),( 180.752 ),dog))) + ( -( betray(ROWS,Ygritte) ) );
	Hodor *= rule(-bar(( rule(x,Sansa) ),( TABLE[( foo(( y ),0.03,TABLE[-( TABLE[Arya][-0.73 * ( -( 1 ) - -0.29 )] )][-destroy(( -ROWS ))]) )][( protect(COLS) )] + COLS ),--protect(---1,( ( rule(Sansa) ) ))))
}
def destroy(Ygritte,Arya){
	Sansa *= COLS
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -protect(mislead(mislead(( 0.31 )),TABLE[-( Hodor )][TABLE[Stark][( -1 )] * ( ( destroy() ) )] + ( -( -980.15 - destroy(( ( --protect(( Hodor )) ) )) ) )),ROWS) )][i] {

}
var Arya = -protect()
def TABLE[-Hodor][k] {

}
def TABLE[TABLE[protect(( TABLE[---0.38][TABLE[( COLS )][ROWS - ( bar() )]] ))][COLS]][i] {
	if(( destroy(-0.91,( Sansa ),foo(--99,ROWS)) ) + ( TABLE[ROWS][Ygritte] )){
	ROWS;
	( COLS + ( 220.6 ) );
	if(Stark){
	if(-COLS){
	Stark *= 0.94;
	if(destroy(( y / ( ( mislead(-( -440.76 ) - Stark - Ygritte) ) ) ))){
	dog /= Stark;
	-0.27
}
} else {

};
	if(Sansa * Hodor){
	if(( -1 )){
	if(y){
	if(bar(TABLE[( 0.74 )][280.75])){
	if(( COLS )){
	mislead(1,bar(x) + rule() * 0.32) / -destroy(--( ( ( ( bar() ) ) ) ),( Jon ),mislead(-1)) / --410.608;
	-0.71;
	Arya /= ( TABLE[Hodor][-770.73] )
};
	if(Jon){
	if(( COLS )){
	if(( destroy(x) )){
	COLS;
	Stark /= ROWS
};
	Ygritte *= bar(-ROWS + ROWS) / destroy(COLS)
} else {
	if(0.89){
	ROWS
} else {
	Sansa += Jon
};
	mislead(-0.8,-TABLE[COLS][destroy(foo(destroy(TABLE[dog][Sansa - Hodor],y),COLS,( -( 0.07 ) - Ygritte - --0.41 + ( 6 ) ) / y),--ROWS + ( Hodor ),Hodor)],( destroy(-900.82,TABLE[Arya][--destroy(TABLE[( 0.73 )][dog],88 + TABLE[0.25 * dog][--TABLE[( ROWS )][dog]] - mislead(-( Ygritte ),Jon))],--95) ));
	if(ROWS){
	dog *= x
}
};
	if(ROWS){
	Stark *= ROWS
}
} else {
	( COLS )
}
} else {
	0.05
}
};
	Ygritte -= Arya
}
} else {
	-( 45 + -1 )
}
} else {
	( 60 )
}
}
}
def destroy(x){
	if(TABLE[ROWS][rule(x,COLS + -63)]){
	if(protect(rule(-8,destroy(-TABLE[1][0.25],1 * TABLE[--( ( ROWS ) / Hodor )][mislead(( COLS ),foo(-destroy(-ROWS,-COLS * TABLE[protect(protect(rule(-ROWS)),-35,mislead())][-COLS]) / y,( -destroy(TABLE[-410.35][-0.42 - foo(( COLS ),ROWS)],Jon,x) )))])),-0.36,Stark) / TABLE[( Ygritte )][---dog]){
	if(--bar(( Ygritte - rule(( Stark )) )) / -18){
	dog /= Arya;
	( ROWS / Arya )
} else {
	if(( ROWS )){
	x += TABLE[( -81 )][mislead(Stark,Hodor,foo())]
} else {
	dog += ROWS + COLS - COLS;
	protect(--1,-( 0.39 - 210.891 ) + Jon)
};
	if(TABLE[-30.026 + Arya][dog] / -y){
	foo(-TABLE[Hodor][Arya * -destroy(bar(TABLE[( -0.04 * y )][--71]),COLS)]);
	dog /= mislead(-960.0838,( protect(1) ) * Sansa / rule(mislead()),ROWS)
};
	( -TABLE[protect(-810.082 + bar(( mislead(-ROWS,TABLE[--destroy() + TABLE[COLS][Ygritte - COLS]][destroy(Ygritte)],ROWS - ( Hodor )) ),( -bar(y + dog,ROWS) + ( -50 ) )),TABLE[( Ygritte )][( mislead(( COLS - -ROWS ),COLS) ) * 0.2])][dog] * betray(ROWS) )
};
	Hodor *= protect(bar(betray(-1) * -bar(Stark),mislead(( -1 )),COLS),--rule(betray(),COLS * ( Sansa )) / bar(( Stark )),protect(( Ygritte / Stark )))
} else {

}
}
}
assert foo(Ygritte) : "Nothing burns like the cold."
def TABLE[COLS][i] {
	( ( 0.33 ) + -301 ) / 10;
	-1 + ( foo(-x,rule(ROWS / 0.49,-0.52)) ) / -0.25;
	y -= y / rule(( TABLE[protect()][( -69 ) + destroy()] ),( COLS - ROWS * -80.55 ))
}
def foo(Hodor){
	dog += --( y )
}
assert ( -220.662 ) : "One can not simply parse himself"
def betray(Jon,Jon,Ygritte){

}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[-COLS][i] {
	TABLE[Stark][( -0.81 )]
}
def betray(Hodor,Hodor){
	if(( -( ( ( Jon ) ) ) * -Ygritte )){
	if(Stark){

};
	( x + 0.71 * Hodor );
	Hodor += ROWS * --destroy() - ( 0.66 )
} else {
	( --y ) / TABLE[Jon][betray(-940.225,COLS,Hodor)]
};
	Arya += ( -mislead(ROWS) )
}
def TABLE[mislead(mislead(dog,-COLS * 46))][i] {

}
def TABLE[--( -x )][k] {
	if(( y + Sansa )){
	Arya += ROWS;
	protect()
} else {
	if(y){
	Stark *= TABLE[0.42][ROWS]
};
	COLS
};
	Jon *= -0.84
}
var Arya = --x + ( -mislead(rule(-0.59),foo(ROWS,mislead(-74) * -foo())) ) / --TABLE[-0.68][-0.66 + ( -17 )] + -731 / ( ( -66 ) )
assert ( -0.89 ) : "Fear cuts deeper than swords."
def bar(){
	rule(-COLS);
	1
}
var Sansa = mislead()
var Jon = protect(protect(-1,( -Stark )),( rule(( ROWS ),Hodor) ))
def TABLE[( 46 )][k] {
	destroy(( 15 ),-Hodor,-66 + ( ROWS ) / -y) * ROWS + TABLE[Arya - bar(TABLE[COLS][( --100 ) / COLS],Arya) + -( ( bar(1,ROWS,betray(-rule(),destroy(ROWS,x,( bar(530.18) )))) ) )][foo(foo(dog,-870.06))] * 0.81;
	dog -= protect()
}
assert ( 670.827 ) : "Winter is coming"
def TABLE[( protect(230.4,foo(ROWS,-dog + ( -0.92 )),Arya) )][j] {
	destroy();
	Jon -= ( TABLE[( ( ( 180.76 ) - Stark - ---45 ) + 69 / -0.74 )][dog] )
}
var dog = 0.73
def rule(Ygritte){
	if(protect(TABLE[dog - ( y ) + mislead(ROWS - betray(( 23 )),Jon)][---730.725 + -COLS / TABLE[foo(COLS + ( ----0.42 ),Jon,bar(Jon * TABLE[Jon][-foo(-COLS,-TABLE[Sansa][COLS])]) * ( mislead(--foo(( destroy(mislead(),protect(y,( Hodor ) / COLS) / ( ( -( 0.57 ) ) )) ),Arya),-( -bar(protect(mislead(0.32,-( ( 0.02 ) )),Hodor)) )) ))][Sansa] * protect(0.39)],( Hodor * dog * --mislead() ))){
	if(( ROWS )){

} else {
	if(COLS){
	--Hodor
};
	( COLS );
	if(COLS){

} else {

}
};
	-mislead(-0.91 * ROWS / COLS)
} else {
	if(bar(betray(( -750.466 ),Arya),dog)){
	if(COLS){
	( 0.78 / destroy(-COLS - -Sansa * -96,Ygritte) / -1 )
};
	dog *= COLS;
	x *= -530.97
} else {

}
}
}
def mislead(Arya,dog){

}
assert mislead(ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.5 / Arya][k] {
	x *= ROWS
}
assert -x : "One can not simply parse himself"
def TABLE[protect(ROWS) * ( COLS ) - ( -1 )][i] {
	-ROWS
}
var y = dog
var y = foo(ROWS,COLS,( ( -390.89 ) ))
var Ygritte = rule(rule() - mislead(590.86),Jon)
def TABLE[Ygritte][k] {
	y;
	Hodor += ( mislead(-63 - protect()) );
	Jon /= Stark
}
def TABLE[-betray(-bar(-----TABLE[Jon][( -TABLE[-44][ROWS] )] - TABLE[COLS][destroy(TABLE[Hodor][TABLE[( TABLE[bar()][-Sansa * TABLE[0.52][92 - ( Jon )]] ) * ( COLS )][-COLS]],( betray() ),( ( -y * Stark ) ))] / -3 / Ygritte / ( ---mislead(Ygritte + ( x ),Hodor,( ( ROWS ) / -( dog ) )) )) + destroy(-( y ) / 0.89) / -TABLE[--0.78 / Arya][20])][k] {

}
var Sansa = -TABLE[( 1 )][Hodor] / y
def mislead(x,x){
	if(0.8){
	y *= ( -COLS - -1 )
}
}
var x = dog
assert rule(TABLE[( COLS )][Ygritte],-34) : "One can not simply parse himself"
var dog = ( ( ( ( --1 ) ) ) / -( foo(destroy(( ROWS / --dog ),-18),( rule(TABLE[protect(COLS,betray(---0.94) / --71,COLS)][ROWS]) / Ygritte )) ) )
assert ( -0.04 ) : "What do we say to the Lord of Death?"
var Arya = -( TABLE[rule(-880.612)][( x )] / Jon ) / protect(-( TABLE[mislead() - COLS + 1][-COLS] ),10,( 0.18 )) / ROWS
assert ( rule(x) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.34][j] {
	if(-19){
	Arya /= COLS
}
}
def foo(){

}
def mislead(dog){

}
def TABLE[( ( ( ( Ygritte ) / foo(200.15) ) ) )][i] {
	Jon += protect(( -TABLE[0.89][betray(-x,COLS,x)] ),COLS)
}
def protect(Jon){
	( mislead(Stark,TABLE[47][1],( -( Sansa ) * -1 / COLS ) / -ROWS) ) + foo(( rule(TABLE[bar(ROWS,ROWS,( ( -( ROWS ) ) ) + protect(--y,betray(( x ),COLS,destroy(dog) * bar(-COLS,bar(0.41),COLS))))][-1],Ygritte,-( y )) ) / TABLE[x + destroy(-( -COLS ),( y ))][-foo(0.76)],-280.39)
}
var Sansa = -0.02
def TABLE[betray(rule(( foo(Sansa,Hodor) )) / -1)][k] {
	protect(Ygritte,( ( Stark ) ))
}
assert ( ROWS ) : "Fear cuts deeper than swords."
var Arya = --protect(TABLE[-foo(-0.24,rule(-1))][destroy(-x)],ROWS,mislead(bar(Sansa + ---( COLS ) / ( COLS ),-0.26,( COLS ))))
def TABLE[38][k] {
	--0.82 / ( ROWS ) + -( -1 - 18 / TABLE[20][-88] );
	( -Ygritte ) / -66
}
def foo(){
	dog /= -0.6;
	dog /= ( -50 );
	Jon += y
}
def protect(){
	dog += mislead(( TABLE[Hodor][Jon] ));
	if(Hodor){
	Sansa /= -( betray(( Sansa ),-0.72) ) - -0.2
} else {
	rule(ROWS,Jon);
	Hodor += Ygritte
}
}
def destroy(Jon,x){
	if(-1){

};
	Stark *= Sansa
}
def TABLE[ROWS][k] {
	Sansa;
	-4;
	if(( -95 )){
	if(-37){
	destroy(0.27 * ( bar() ) + --790.81);
	dog *= Sansa
} else {
	if(ROWS){

} else {
	if(dog){
	Ygritte -= betray(( Sansa ) - ( x ) - -0.52,0.87);
	15;
	( -( betray(bar(--COLS / x + ( mislead(( -mislead() ),( -( ---71 ) )) ),-1),-bar(( bar(protect(-( TABLE[-1][COLS] ),TABLE[-ROWS][x] + --COLS)) * Jon ) / COLS)) / ( -1 ) ) )
};
	1;
	y
};
	Stark /= ROWS
}
}
}
def TABLE[( ( ( --betray(-( betray(COLS / ( TABLE[COLS - -1][Arya] )) )) + COLS * Sansa + ROWS * 1 ) ) )][k] {

}
assert -Sansa : "Nothing burns like the cold."
assert 260.595 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( COLS ) * TABLE[mislead()][dog] / ( COLS )][j] {
	if(12 - Hodor){
	rule(59,Hodor / 0.64,Arya)
};
	rule(( -( -81 ) )) * destroy(0.93,-( ( rule(0.77) + ROWS - ( ( protect(protect(( y ) + destroy()),( COLS + ROWS )) ) ) ) ) * -( y ))
}
var Arya = Arya
assert -rule() : "One can not simply parse himself"
var y = TABLE[1][Stark]
def mislead(Stark){
	if(( TABLE[Arya][ROWS] + ----0.15 / foo(--ROWS,-0.06) ) * -0.87){
	-1;
	TABLE[protect(( ( rule(( Hodor )) ) ))][( protect() * -ROWS )] + 0.82
}
}
def TABLE[destroy(0.21,bar(ROWS))][j] {
	if(-0.77 + dog){
	if(( ROWS )){

} else {
	x /= ( COLS / -160.452 )
};
	if(y){
	if(-COLS){
	y -= destroy(( -COLS - betray(COLS,( COLS )) - ----0.3 * COLS / Ygritte - -bar(protect(0.2),Jon) ));
	Jon += ROWS
};
	dog *= y;
	if(( COLS / ( -TABLE[COLS * betray(-38,1 * y,mislead(-1 * Hodor + protect(TABLE[-55 / -( -Jon )][mislead(1,Jon + 52)],Jon) - Sansa + y + -0.37 + ( ( -TABLE[( COLS )][COLS] ) ),rule(Arya),x) * Sansa * 46)][( 59 )] ) ) - x + dog){

}
} else {
	if(destroy(protect(),( foo(79,TABLE[-( Jon )][rule()],--Jon * TABLE[( ( -( Stark ) / -1 ) - COLS - Jon + ---0.62 - dog - -destroy(-ROWS + --Arya,Stark) )][( y * -Stark )] + COLS) ),COLS)){
	Ygritte -= -COLS
};
	( protect(-Arya,550.415) )
};
	COLS
}
}
def TABLE[( -ROWS / -72 )][k] {
	Ygritte += ROWS;
	x /= -Hodor;
	--0.48
}
def bar(Arya){
	destroy(1 / --0.17);
	if(ROWS){
	if(-( Ygritte )){

} else {

};
	Hodor *= COLS
} else {
	Stark += COLS;
	if(--670.59 + 74 - Ygritte){

} else {
	if(( destroy(48,TABLE[37][( ( ROWS ) * -( -39 ) )]) )){
	mislead(( COLS ));
	( foo(ROWS) );
	dog
}
}
}
}
var Hodor = -20.9
assert 13 : "Nothing burns like the cold."
assert TABLE[( dog )][Hodor] : "One can not simply parse himself"
var Sansa = 940.28
def TABLE[0.67][j] {
	Ygritte *= ( dog );
	( dog + ROWS )
}
assert -betray(TABLE[-COLS][ROWS]) : "Nothing burns like the cold."
assert ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -destroy() + bar() )][j] {
	if(-0.74){

} else {
	dog;
	TABLE[--( -Ygritte ) * -1 + rule(Arya * 1,-Sansa + -rule(betray()),( 0.47 )) + bar() + Ygritte][COLS]
}
}
def TABLE[ROWS][k] {
	if(( Ygritte + 1 )){
	dog -= Hodor;
	0.65 - -COLS
} else {
	y /= -65;
	if(( mislead(1,Jon,mislead()) )){
	COLS;
	Hodor
};
	( 99 - --42 / Arya ) * -Arya + 82
};
	if(destroy(-89,( ( rule(--( ( COLS ) )) / 0.28 ) - -Arya ),( ( ROWS ) ))){
	Stark -= Ygritte - ROWS
} else {
	1;
	--y
};
	Sansa
}
def protect(){
	bar(foo(COLS),-57,--Jon - 0.66);
	COLS
}
assert COLS : "One can not simply parse himself"
assert -700.49 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][k] {
	Hodor /= ( -64 )
}
var Jon = ( ( ( mislead(protect(-COLS - betray(),1),-0.84) ) ) )
def destroy(Arya){

}
def TABLE[-ROWS][j] {
	( TABLE[( ( Sansa ) )][-0.83 / ( destroy(Arya) ) - -mislead(Jon)] )
}
var dog = protect(TABLE[-COLS][( ROWS )])
def rule(y){
	if(dog){
	if(y){
	ROWS;
	if(TABLE[( rule(--( ( ROWS ) ) / Hodor / destroy(),-62 - TABLE[0.05][( -45 )]) )][bar(protect(Arya) / betray(Jon - TABLE[y][mislead()],( -19 )),Sansa - ( rule() ))]){
	Sansa /= --0.09 / -Stark * -43
};
	if(rule(TABLE[-( rule(-COLS,( y )) )][( Jon )])){
	Arya *= 580.4648;
	TABLE[x][Hodor + -0.21]
} else {
	if(ROWS){
	( -( destroy(mislead(dog,-450.2)) ) ) / Arya;
	if(( Sansa * -Ygritte )){
	Jon -= -0.08 - protect(Sansa,TABLE[Hodor][dog]) + x - COLS + TABLE[TABLE[Stark][COLS] + ( 0.64 ) + --ROWS][Arya];
	Hodor *= ( TABLE[Ygritte - 0.71][( -( x ) )] );
	-( betray(-0.14 + -63) )
} else {

}
}
}
} else {
	dog += 87 / COLS
};
	Arya *= ROWS
} else {

}
}
def rule(Ygritte,Hodor){
	if(Arya){

}
}
var y = Ygritte
def rule(){
	TABLE[-rule(( -0.4 ),--26)][Sansa]
}
def destroy(Ygritte,x,Sansa){

}
def TABLE[COLS][j] {
	if(-( ROWS )){
	if(COLS){
	if(Arya){

};
	Hodor -= -( -( Ygritte ) );
	if(ROWS){
	--55
} else {

}
} else {
	dog *= -0.45;
	Hodor /= ( Hodor - ROWS )
};
	if(-x){
	if(( ROWS )){
	if(-720.257){
	Jon;
	COLS
};
	( -93 + Stark )
};
	if(mislead(-( -ROWS ) * -protect(( mislead(-0.23) )),-( --0.78 ))){
	-( destroy(Hodor,( -800.755 )) ) - ROWS / 1 + -foo(rule(( TABLE[0.46][-destroy(COLS - COLS) * -( rule(0.63,( -destroy(mislead(-51,-710.873) / -21 / ( mislead(-protect(ROWS),protect(3,betray(ROWS - ( -( COLS ) ),( ( ( TABLE[( COLS )][--foo() / foo()] + x ) ) ),-1) * -91,protect(COLS,--0.15)) * ( mislead(340.6485,( -TABLE[COLS][-ROWS * -24] )) )) ),COLS) )) )] + COLS / TABLE[-TABLE[TABLE[-ROWS][mislead(foo(TABLE[TABLE[--( y )][betray(( -destroy(y) - foo(destroy(rule(-0.32,--0.99))) ),Stark) + Sansa]][Jon * Stark] + --mislead(foo(ROWS),-destroy(---81,rule(Arya * ( ( ( --( -47 ) / betray(TABLE[( 1 )][destroy(1)]) ) ) * ( ROWS ) )))),rule(Arya),-0.2))] / ROWS][y]][( COLS - 1 ) * -COLS] ),foo(betray()) + --0.07 * -betray()),rule(-32,( ( -98 + ( TABLE[Jon / COLS + Jon][bar(COLS) + protect(-ROWS)] ) ) )));
	Sansa *= destroy() / -foo(-TABLE[y][-46] / ( dog ) + 0.09,TABLE[COLS][( ( ROWS * ( ROWS ) + COLS ) )],Ygritte) + ( Hodor ) * -61 * Sansa * destroy()
} else {
	if(Stark){
	if(-( bar() )){
	if(93){
	x;
	-5 + TABLE[foo(( 26 ))][-bar(--0.37) + ROWS]
} else {
	Sansa *= betray(-0.17)
};
	mislead(TABLE[ROWS][COLS / foo(-( Jon - -ROWS + 1 )) + -Jon + -Ygritte],( 1 ));
	Jon -= dog
}
} else {
	Jon -= -1
};
	if(protect(( mislead(TABLE[COLS][( ( ROWS ) )],y + -0.36 / 80.26 / mislead() - -Hodor,mislead(COLS,-Stark)) ),mislead(( -TABLE[--Hodor - TABLE[protect()][( -( Hodor ) )] * 780.3 * x - rule(-310.46)][Stark] * -31 ),-0.98 * COLS,1))){
	-TABLE[( 0.21 )][Sansa + Sansa];
	ROWS
} else {
	y /= Stark;
	if(y + ( Jon )){

}
};
	--destroy(( 1 ))
};
	mislead(TABLE[COLS][y],-( y )) - ( 96 ) * TABLE[foo(ROWS + ROWS)][( rule() )]
}
};
	if(protect(( COLS ),y)){
	if(( -( ROWS ) )){
	if(1){
	Jon += Sansa
};
	if(Arya){

}
} else {
	foo();
	if(Stark){
	if(TABLE[COLS][--90.464]){
	x *= -200.165
} else {
	Hodor /= ( Stark );
	Arya + Arya
};
	Stark *= ROWS / x * 25
}
};
	( -TABLE[( COLS )][mislead(0.5 - 1,---0.71)] );
	( -0.37 )
} else {
	dog;
	-0.19
}
}
def TABLE[0.48][i] {

}
assert 38 : "Fear cuts deeper than swords."
var Sansa = rule(TABLE[-0.71][( destroy(ROWS,dog * ( x ) * ( foo(( ( ( mislead(-0.17 - ( ROWS ) + destroy(( bar(y + -( Sansa )) - Stark )),-betray(COLS,-0.64)) ) ) )) ),Arya) )])
assert -66 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "What do we say to the Lord of Death?"
var x = rule(rule(-y,--( Ygritte + 1 ) * ( dog ) + 66 + ROWS))
assert y - -Jon * bar(destroy(Arya) * 0.78,COLS) + COLS : "Winter is coming"
var Jon = y
assert Sansa - ( protect(93 * protect(),-200.9 - Hodor) ) + -ROWS + foo(710.68,---foo(betray(),--COLS)) : "Nothing burns like the cold."
def foo(){
	if(0.62){
	if(-destroy(-( 20 ),( COLS ),COLS - bar(1,-0.9,-Stark))){
	Stark += TABLE[-bar(protect(Hodor,0.46),x) + -0.73 * ( Hodor + Jon )][COLS]
} else {
	if(COLS){
	Arya /= 750.1;
	y += Sansa
}
}
}
}
def rule(Stark){
	y *= ( foo(destroy(-13 / betray(15,Ygritte) / ( ROWS ),TABLE[betray(-ROWS / -750.2975)][ROWS]) - mislead(-y,-protect() * 1 / COLS,( Sansa ))) )
}
def TABLE[betray(TABLE[( foo(-COLS - ROWS * -betray(-Hodor) - --protect(TABLE[Arya][bar(mislead(y,( --Hodor )) + -10,protect()) + betray(( -Sansa - ( ( -bar(mislead(TABLE[y][-Arya]),TABLE[710.559][1 / ROWS * ROWS] + -0.94) ) ) / -540.6 ),-610.352) / ( ( destroy(betray(Sansa),ROWS,TABLE[TABLE[Stark][-( ( foo(destroy(( Ygritte * -Sansa / TABLE[-83 + ROWS][-COLS] / ( ROWS ) )),ROWS,COLS) + mislead(Arya) ) )]][COLS] * ROWS) ) ) / 65]) * -48 + -mislead(bar(1,-( dog ) * -destroy(COLS,COLS * 0.05,bar(-( -Sansa ),dog)) + -( -67 ),-0.94),ROWS,TABLE[-ROWS - Jon - ( foo(COLS) / ROWS )][protect(( Arya ))])) )][--( Hodor ) / -1])][i] {

}
def betray(Jon){
	if(( -ROWS )){
	if(-foo(-0.51,-( ROWS - ( destroy(ROWS,53) ) ),TABLE[Hodor][foo()])){
	mislead(x) * 0.19 + Hodor
} else {

};
	-destroy(Stark,COLS * -COLS) + COLS;
	( ROWS )
};
	Hodor += ( -340.2031 * Jon ) / rule(-97,ROWS,( bar(ROWS) ) - y / ROWS);
	rule(foo(ROWS),protect(1,COLS,( 190.675 ) * Sansa))
}
def bar(){
	if(x){
	if(Sansa){
	( -ROWS ) + -( ( ( ROWS ) ) );
	0.18;
	Hodor -= Ygritte / Jon
}
} else {
	if(94){
	if(x){
	if(( -ROWS ) * -1 / destroy(ROWS,( Arya ),Hodor)){
	if(( x + -0.37 )){
	if(-bar()){
	betray(COLS,destroy(Ygritte) + 1) / COLS
}
} else {
	if(Stark - TABLE[bar(( ( ROWS * 8 ) ) - -Stark,-( destroy(COLS) ) + bar(--570.77))][-310.04]){
	if(TABLE[0.2][( dog ) / x] / betray()){
	dog *= -11;
	if(TABLE[ROWS][-Jon / ( -21 )]){

}
}
};
	if(COLS){
	( -25 )
};
	Sansa /= -Jon
};
	Arya /= ROWS
}
};
	Arya *= TABLE[-( ROWS / ( Stark ) )][10]
} else {
	( ( destroy(( foo(( -28 ),-COLS,-bar()) ),( foo(( 55 )) ),( ( ROWS ) )) * dog ) - ---ROWS );
	Hodor /= ROWS
};
	if(-20){
	Hodor -= ( Hodor );
	Ygritte *= -39;
	if(1){
	rule();
	if(( -47 )){
	dog *= betray(betray(),( -Sansa ))
};
	-0.16
}
} else {
	( --960.29 )
}
};
	Arya += betray(bar(( ( --Stark ) ),0.59 / -dog - -destroy() / ROWS + TABLE[protect(-( Hodor ),COLS,foo() + -( foo(( destroy(-TABLE[0.64][0.47]) ) * ( ( ROWS ) ),Arya) ) * COLS - destroy(-foo(( Arya )),-mislead(-150.8761,COLS) * ROWS,( -protect(750.427,destroy(ROWS,--0.78)) / betray(1,1) )))][ROWS]) - foo(Sansa),protect(-betray(),rule(),-( Hodor )),ROWS) - ( ( TABLE[protect(-890.2594,--ROWS - betray() + Sansa / ROWS * Arya,Ygritte)][( protect(TABLE[( ROWS )][( mislead(COLS,COLS - TABLE[( y / destroy(TABLE[0.3][ROWS]) )][foo(protect(x,( betray(betray(91)) ),--( foo(Sansa,-Hodor * Hodor,-1) )))]) )]) )] ) )
}
def TABLE[( -1 )][k] {

}
def TABLE[84][i] {
	COLS;
	Jon -= ( -1 ) * -dog
}
def destroy(Hodor){
	Sansa += rule(rule(),Jon)
}
var dog = -COLS
assert -bar(protect(Sansa)) : "Winter is coming"
def betray(Arya,x,Stark){
	--Hodor
}
def TABLE[ROWS][j] {
	if(Ygritte){
	if(Sansa){
	if(TABLE[-20][( COLS / COLS / COLS )]){
	if(7){
	if(-( ROWS )){
	0.75;
	COLS
} else {
	0.1
}
} else {
	Sansa += --68
};
	if(TABLE[-Jon][protect(COLS) * -0.69]){
	Ygritte /= -( -1 )
} else {
	protect(( rule() ) - Jon,0.47);
	if(Sansa){
	if(( rule(foo()) )){
	-Ygritte
} else {

}
};
	mislead() * 15
};
	if(1){
	if(ROWS - --79){
	if(dog){
	if(Jon){
	if(TABLE[-1][( betray(( Arya ) - Jon) )] * 91){
	if(rule()){

};
	Hodor -= ( ROWS )
}
}
};
	Arya -= -0.9
}
} else {
	mislead(0.21,COLS,COLS);
	mislead(( protect(ROWS) ) / --0.15)
}
}
} else {
	if(( TABLE[TABLE[91][ROWS] - betray(-670.17)][betray(Stark * -TABLE[-0.96][COLS - -1],betray(-99,-1,Ygritte - ( 0.63 * bar(-( Jon - Hodor )) )))] )){
	-99;
	Hodor
} else {
	if(-930.883){
	foo(1)
} else {
	if(rule()){
	( COLS * mislead(y,-mislead(-0.87,TABLE[( -ROWS )][ROWS])) )
} else {
	if(( protect(-1,COLS,COLS) )){
	Arya -= rule(( Arya * x ),destroy(-protect(COLS),bar(( mislead(TABLE[dog][-( y )],TABLE[-0.81 * -0.81 * Hodor][-70]) ))));
	if(-0.76){

};
	if(Sansa){
	y * ( ( mislead(Jon / Ygritte) ) )
}
};
	if(-840.983){
	dog *= ( ROWS );
	if(y * -83){

} else {
	Hodor -= 920.679;
	Ygritte /= TABLE[Stark + COLS][80]
}
};
	if(( ( foo(-0.06,--( destroy(x,ROWS * -200.7) ) + ( ( --980.14 ) ),destroy(Arya - COLS,protect(( -0.01 ),Hodor - ( 950.355 ))) + mislead(--protect(-0.78 * ( ( protect(rule(Hodor)) ) )),Ygritte)) ) )){
	TABLE[( ROWS )][( ( Jon ) * bar(ROWS,( protect(-dog - Sansa + Ygritte + -64 / Hodor) - ( -0.3 ) )) )];
	ROWS;
	-( -Hodor )
} else {
	foo(Sansa)
}
}
};
	-990.53
};
	x
}
} else {
	Ygritte *= -900.9;
	if(-37 / ROWS){
	( -ROWS * 75 ) + ( ROWS );
	if(-93){
	Arya /= ROWS;
	Arya /= -75
};
	Sansa += COLS
} else {
	if(-99 / Jon){
	mislead(-( TABLE[-Ygritte][Stark * 0.66 - ( x ) - -53 - protect(Hodor,--0.19,900.7 * foo(TABLE[-Arya][( -950.07 )]))] ),TABLE[( ( -0.76 ) )][Hodor],Stark)
} else {
	Hodor
};
	Ygritte * ROWS * ( 43 );
	( ---1 )
}
};
	if(x){
	if(680.33 * Stark){
	-1;
	if(Hodor){
	-750.35;
	COLS
}
};
	if(0.52){
	Ygritte *= betray(betray(-( -Hodor ) + 14 + y))
} else {
	-betray(protect(COLS) + dog);
	1
};
	if(-0.47){
	Arya -= -460.31
}
}
}
assert ( -0.3 ) / 71 / ( COLS ) * ( -ROWS * -330 ) : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	if(960.1827){
	-0.95
};
	dog += ( ( -TABLE[-( -COLS * --46 )][--450.458] ) );
	( Ygritte )
}
def betray(){
	77;
	dog -= -28 + --( bar(0.86,destroy(ROWS,protect(COLS)) + -0.06) );
	Arya *= ( x )
}
def TABLE[destroy(( dog ),-Sansa * ( ( ( COLS ) ) ),( -0.69 + bar(-COLS) - ( ( 40 ) ) - x ))][k] {
	-0.28;
	protect(98,-0.78)
}
var Jon = COLS * foo(Ygritte)
def protect(Sansa,Stark){
	if(-TABLE[Sansa - -0.64 + -( 61 ) - TABLE[betray()][-bar(TABLE[protect(destroy(-0.26),ROWS,Stark)][( betray(-57,COLS) )],x,betray(-Jon,1,mislead(( betray(bar(-1,Arya)) ),protect(Stark,39 - Stark / 96,protect(Arya,Ygritte / ( rule(( Jon + -660.645 )) / 96 / ( ( rule() ) ) ) / betray() + foo(0.3 / -( 1 ) * -Hodor + ROWS + dog - ROWS * --1 / --bar(40) / -Hodor,-32) - ( betray(--96) )))) - --bar(-0.93 + ROWS / 1))) * mislead()]][( -1 )]){
	if(Sansa + mislead(destroy(y),ROWS) - ( ( 34 ) )){
	( Ygritte )
} else {
	TABLE[-dog][( betray(-10,TABLE[COLS][ROWS],Hodor) )];
	( TABLE[-( TABLE[0.76][Arya] ) - rule(0.43)][COLS] - betray(-COLS,( dog ),COLS - COLS) - mislead(TABLE[-rule(mislead(-( -Hodor ) + TABLE[bar(Hodor,( ( COLS ) ),-1) / rule(foo(dog))][bar(-29)],790.402),( Jon ))][-COLS] + foo(),( destroy(-( -790.681 )) ) / destroy(30.3 - ( --( TABLE[protect()][COLS] ) ) - ROWS * protect(y,( ROWS + 0.93 ),( ( ( -betray(COLS,89) - TABLE[COLS][x * COLS] * -0.41 - ( dog ) ) ) )),-430.322,rule(mislead())) + Sansa) )
};
	800.87
} else {
	if(rule(( --( -TABLE[dog / Stark][-TABLE[( ( -650.789 ) ) * ( Stark - ( ( rule(Ygritte,-COLS) ) ) ) - mislead(-betray(bar(bar(bar(dog)),destroy(1,-0.7),Arya) + -Hodor / ROWS,protect(1000.5) + rule(COLS)) * --56 - y)][foo(y,( 1 ) * Sansa * -COLS)]] ) ))){
	dog -= protect(-1 * protect(),0.27) * protect()
} else {
	dog -= -( Hodor ) / ( Stark - destroy(30) );
	if(-0.44){
	Ygritte /= Hodor
} else {
	x -= ROWS
}
};
	Ygritte / -44
};
	if(TABLE[bar(COLS)][( x ) - dog]){
	if(rule(y)){

} else {
	dog += -( ( -foo(-ROWS - -ROWS) ) );
	y += betray(--( 0.96 ),Ygritte,-ROWS / ( TABLE[( 1 )][-( COLS / --45 - mislead(destroy(-0.56,( destroy(( ---1 ) / COLS + -( ROWS ),TABLE[-ROWS][( TABLE[-97][bar(18,ROWS)] )],( -1 )) ))) )] ))
};
	if(-1){
	-81
} else {
	Ygritte *= foo(-( ROWS ),( 0.93 ))
};
	if(Hodor){

}
} else {

}
}
def destroy(Stark,Ygritte){
	if(dog){

} else {
	Arya;
	Ygritte
};
	y *= foo(-270.0216) * 1
}
var dog = TABLE[-COLS / destroy(x,-0.5) / -protect(Arya,-20,-COLS)][Sansa]
def destroy(Jon,Hodor,dog){
	if(Stark){
	Sansa *= -1;
	y
} else {
	dog;
	ROWS
}
}
def mislead(Hodor,Stark){
	-( destroy(-80.69,foo()) + ( betray(foo()) ) + 1 ) / bar();
	if(COLS){
	Sansa /= -13;
	Sansa += mislead(Jon + Hodor,( Jon ))
} else {
	Jon -= -1;
	Jon /= TABLE[-foo(COLS,TABLE[foo(Arya)][Stark * -COLS]) * -foo(Jon,Hodor)][COLS]
};
	if(0.88){

} else {
	-0.85;
	if(TABLE[dog][-( 530.8374 * TABLE[-0.61][500.476] - rule() * 320.547 )]){
	betray(ROWS);
	ROWS
} else {
	( 980.5 );
	-COLS * bar()
};
	y
}
}
var Stark = -1
def TABLE[dog][j] {
	if(-betray()){
	if(Stark){
	if(-46){

} else {
	Arya -= -foo(( foo(( ROWS ),Jon,-26) + -x ),( --foo(-460.96,-98) ))
};
	Stark -= Hodor
};
	Ygritte += Stark;
	--1 + ( Hodor )
};
	y
}
def foo(Hodor,Arya){
	COLS - 31 * Ygritte
}
def TABLE[mislead(22 - ( ( COLS ) ),-TABLE[foo(70.2 * --Hodor)][( rule(ROWS / -dog) )] / -( x ))][i] {
	if(Jon){

} else {
	Sansa /= ( Jon )
};
	( -x )
}
def rule(){
	betray(-47,-1)
}
assert TABLE[x][--0.01] + mislead(0.77,--Hodor) : "What do we say to the Lord of Death?"
var Hodor = dog
def foo(Ygritte,x){
	dog /= foo(Ygritte)
}
assert Ygritte : "What do we say to the Lord of Death?"
def foo(Jon){
	Arya *= ( -Stark )
}
def TABLE[97][j] {
	Arya -= y;
	9
}
var Stark = destroy(ROWS - -58,TABLE[-protect(ROWS,-420.78)][Sansa])
def foo(y){

}
def TABLE[( -95 )][i] {
	if(64){
	Sansa += ( ROWS )
};
	Stark -= -1
}
def destroy(){
	if(( bar(--( ( ( Stark ) ) ) - 1000.98,Jon,-350.9) )){
	Arya *= mislead(ROWS,Hodor,Sansa);
	y += Jon
} else {
	--770.55;
	if(-( ( -1 ) ) + ----rule(ROWS) / TABLE[-foo(x,foo(TABLE[Hodor][mislead(-Hodor)],( COLS ),---1) - ( COLS )) * TABLE[78][betray(----46)]][rule(( ( -COLS ) ),--13)] * ( 83 )){
	if(-foo()){
	Ygritte -= -COLS;
	-TABLE[betray(TABLE[bar(-( -0.52 ) + -42,( COLS - -Hodor - betray() ) * 7 - ( ( ( -0.43 ) + betray(-0.92) ) ))][-Sansa],foo(( betray(( Jon + protect(( Sansa ),( ROWS ) / -protect(TABLE[ROWS][protect(TABLE[destroy(-890.197 * ( ---900.926 ) - COLS / -30.11,TABLE[destroy() + Stark][( ( -76 ) ) + ( protect(TABLE[ROWS][Arya]) )]) / betray(1,y * -TABLE[-ROWS + -Jon][-COLS])][1])],Hodor) - Jon) ) * dog,TABLE[TABLE[bar(--760.884)][0.42] - 0.93 / -1][dog],bar()) ),betray(betray(Sansa,-COLS,dog),--Jon,( betray(930.22,( 1 )) )) - Arya + --TABLE[-Hodor / 12][rule(TABLE[----ROWS * ( -( ( -Jon ) ) / x * -17 )][betray(( Hodor )) * ( ---74 + ( -x ) / -1 + ROWS / ( ( ( -( TABLE[Arya][-85] ) ) ) ) - -70.67 )],( y ),-1 + 0.3)] / -COLS),( Sansa ))][-Stark]
}
} else {
	protect(TABLE[-56][betray(-10)])
}
};
	-( -1 )
}
def betray(){
	y /= -870.8029;
	( Arya );
	Stark /= -3
}
assert ROWS : "Nothing burns like the cold."
def TABLE[Stark / COLS][k] {
	Stark /= COLS / -TABLE[betray(-170.7 / y,-COLS)][x] - ROWS;
	Ygritte -= Arya
}
def TABLE[35][k] {
	Stark += -46;
	51
}
var y = TABLE[ROWS][( -( Ygritte ) )]
assert Ygritte : "What do we say to the Lord of Death?"
var Jon = ( mislead(( COLS ),-1) - ( Stark + 490.09 ) - ( Hodor ) )
def TABLE[( rule(dog,foo(-1,betray(protect(protect(COLS - -1) + -( -950.049 ),Jon),dog))) )][k] {

}
def rule(Arya){
	y -= -610.762;
	if(COLS){
	Ygritte *= -rule(-73 - Ygritte,-( protect(Jon,-( ( Stark ) )) )) / -58
}
}
def rule(y){
	bar(--1,6);
	x += -0.17;
	dog /= -( Jon ) - -betray(-rule(Arya * 0.42,betray(-0.22)) + -TABLE[Hodor][Stark * ( ( Sansa ) )],x)
}
assert protect(( Sansa * --( betray(18,betray(ROWS,30)) - ( ROWS ) - Arya ) )) * COLS : "One can not simply parse himself"
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(ROWS,( -490.9054 ),( TABLE[x * ( -0.22 )][0.19 + betray(161,Ygritte,-COLS + destroy(destroy(protect()) - Hodor,( dog ))) - rule(-0.2,50 - ROWS + destroy(( 820.2 )) - bar(-ROWS) * 16 * -Jon + ( ( -Ygritte ) ))] ))][k] {
	Arya += protect(TABLE[protect(COLS,betray(),mislead(Sansa,ROWS / -0.07 - ( COLS )))][-68],Arya);
	--1;
	Arya /= foo(1,rule(Sansa,ROWS + ( TABLE[-55 - protect()][COLS] ) - Hodor),( Ygritte ))
}
def bar(Ygritte){
	if(( ROWS )){
	dog -= -260.66;
	Stark -= --0.14;
	if(TABLE[Jon * 110.0751][mislead(( Ygritte ))]){

}
}
}
def TABLE[Ygritte][k] {
	( TABLE[( ROWS )][bar(-1,betray(1),x)] );
	x += y
}
assert ( -0.62 ) : "What do we say to the Lord of Death?"
var Hodor = 0.72
def destroy(Hodor){
	Jon;
	y /= ( protect(Hodor,-0.91,( rule(TABLE[mislead(( -TABLE[( dog )][-destroy(--TABLE[Stark][( TABLE[rule(( y + -0.72 / ( TABLE[-53 - 1][COLS] - -0.26 ) * Stark ),-280.8 - ( ROWS ) / --Hodor + Arya - COLS + ( -43 ))][bar(Ygritte)] - -0.15 )]) * 42] ),-0.46)][( -0.33 )] - x + ( Hodor ),( destroy(foo(26)) )) )) ) * bar()
}
def TABLE[ROWS][i] {

}
var Sansa = --0.07
def protect(x){
	if(ROWS){
	Sansa -= COLS
};
	Arya -= -bar(protect(-COLS,Jon,foo(ROWS)),Sansa);
	Jon *= betray(--0.22,destroy(Hodor,-Sansa / -( bar(Ygritte,-14,-betray()) )))
}
def TABLE[ROWS][j] {
	Stark;
	if(-2){
	-( -84 )
} else {
	Stark -= --1;
	-0.47;
	( -Arya )
};
	Arya + 0.81
}
var x = Jon
var Arya = ( 0.79 )
var Hodor = -68
var Ygritte = 86
var Ygritte = 0.07
def TABLE[COLS][k] {
	if(COLS){
	dog *= -93;
	Jon /= destroy(-1,( ( protect(-0.01,( x + Arya * dog ),--protect(x)) ) ),( -460.63 ))
} else {
	rule(Arya,COLS);
	if(foo(-0.59)){
	( ( --ROWS * --1 + protect(-TABLE[( y )][ROWS],betray(-Hodor) / protect(y) + x + betray(Arya),foo()) - -COLS ) );
	Jon -= COLS
} else {

}
}
}
assert --1 / ( -mislead(COLS * bar(protect(ROWS),Ygritte),betray(y,0.87 + mislead(--77 - ROWS,Ygritte))) ) : "Winter is coming"
def TABLE[-( ( --0.39 ) )][j] {

}
def TABLE[bar(( Sansa * -88 ),y,Jon) / -1 * protect() / ROWS + -betray(-Jon + --ROWS / -COLS,ROWS + --460.5,0.53)][k] {
	dog /= ( rule(Stark,COLS * 0.91) );
	if(ROWS){
	dog *= --0.74 / Sansa;
	if(-ROWS){
	if(( Arya )){
	x /= COLS / foo(-1);
	Ygritte += destroy(rule(y,ROWS))
} else {
	if(0.52){
	if(bar(-Hodor)){
	--Ygritte;
	Jon /= Stark
} else {
	if(bar(Sansa) / ( ( bar(Sansa,rule(TABLE[y][( 170.7303 )] * -betray(destroy(0.81,COLS),bar(--86,---1 + foo(x))) / TABLE[1 + -86][bar(dog,( ( -bar() ) ),-( ROWS ))] * Hodor,( ( ( destroy(-TABLE[( ( -( -70 ) ) )][dog],-30.635,Stark) ) ) ))) ) )){
	if(COLS / 11){
	if(x){
	Ygritte -= --TABLE[91][( COLS )] / protect(-Hodor,( ( ROWS / -betray(TABLE[Sansa + x][Jon],TABLE[foo(-1,-Sansa / x,-48)][Stark]) ) ),-83);
	Jon -= ( ROWS )
}
}
} else {
	if(1 * foo(destroy(),betray(--76 - -bar(-betray(ROWS - -( Stark + -destroy(( TABLE[TABLE[destroy(TABLE[( Sansa )][foo(( betray() + -dog / -62 )) * destroy(ROWS) - x],-( Jon ))][-rule(ROWS) + dog + --protect(Jon)]][--23] ),0.23) ) - ROWS,COLS,--1),x),--Stark))){
	if(( ( TABLE[-Sansa][ROWS] ) )){

} else {
	y - protect(77,( 38 * 450.171 * 1 ));
	( ( ( COLS ) ) ) * --Ygritte - -Ygritte * -( Arya );
	Ygritte /= -rule(-0.27 / betray(-0.02)) * protect(-( COLS / Ygritte ),Arya)
};
	if(-13){
	foo(-dog,TABLE[TABLE[COLS][ROWS]][mislead(x + betray(),-Arya / --Sansa - rule(-( y )),( destroy(( Jon )) ) + ( betray(destroy(Hodor * ( TABLE[foo(-45,mislead(--Stark,rule(( ROWS ),( -rule(mislead(y),ROWS) ),180.13),( destroy(( --55 )) )))][bar(( -0.69 ) * COLS * -( ROWS * 770.5153 + 1 ) + 1 * protect(-( bar() - Hodor )) / ( COLS ) + COLS - COLS,-COLS)] + -COLS ))) ))]) / dog;
	x += COLS
};
	Jon /= -93 - -Sansa / bar()
} else {
	Hodor *= ( ( 0.98 * --y ) )
};
	ROWS - ( TABLE[( 1 )][Hodor] )
}
};
	-0.79
};
	if(0.2){
	0.82 / -1 / 0.8 - foo(dog,( COLS ))
}
}
};
	if(( ( 99 ) - bar() - -1 )){
	Hodor += --ROWS / Ygritte - ROWS;
	if(310.81){
	if(ROWS){
	if(--mislead(1)){

} else {

};
	if(( ROWS )){
	dog -= -10;
	Arya -= -TABLE[-98][-( -1 )]
} else {

}
} else {
	if(( COLS / ROWS )){
	if(TABLE[-( protect(0.45 / TABLE[( rule(x,( betray(( -810.2249 )) ),COLS) )][mislead()] + 0.13 - ( 80 )) )][COLS]){
	-( bar(( destroy(-bar(rule(destroy(-1)),protect(-bar(Ygritte,mislead(-1 + -0.02 * -35),-( -0.77 )),-( Sansa ) + --Jon + ( -1 ) * --ROWS + ( y )) - --( ( ( 0.8 ) ) + destroy(ROWS,TABLE[--Hodor][( ( 0.93 ) )]) * ROWS ) * -COLS,--( ( dog ) ) + ( ( TABLE[Hodor][( -Sansa )] ) ) * Sansa / COLS) / 0.37 * --bar(foo(180.93)) - -ROWS - -3,COLS,Arya) )) )
};
	x;
	if(86){
	if(COLS){

};
	dog /= ( dog * ( --betray(rule(ROWS,bar(mislead(),-TABLE[COLS][TABLE[Arya][Ygritte]]))) - dog ) );
	x += ( Ygritte ) / TABLE[--bar(Ygritte + 14 * bar(( -( -0.63 ) )) * dog,-( ( ( ( -( --Stark ) - -( 98 ) ) ) ) * -( foo(Ygritte) ) ))][x / rule(-1,( -3 ) - -91)] * protect(ROWS)
}
} else {

};
	y *= ( rule(COLS,COLS + -58,-82) )
};
	y *= COLS
};
	if(rule(-0.24) - -1 - ( -ROWS )){
	y /= ( 85 )
}
} else {
	-0.9
}
}
}
def TABLE[betray(( -0.7 / 0.32 ),bar(-0.03))][i] {

}
def TABLE[( betray(Sansa) )][i] {
	if(bar(foo(Arya,-( 0.59 ),-COLS - COLS),-COLS,Ygritte)){
	betray(( rule(( --830.095 )) )) / ---1;
	Jon -= -mislead(-0.94 + Jon,Hodor)
} else {
	Ygritte /= --1;
	if(TABLE[( ---bar(protect(y,betray(TABLE[destroy(-destroy(ROWS - TABLE[0.4][ROWS] * foo(-( 82 / -COLS ) + 73)) * -0.52) / TABLE[Jon][protect(ROWS)]][-x / mislead(Stark,protect(-( 42 + TABLE[110.458 + Stark - ( -Ygritte - ( -0.65 + Arya ) )][rule(1,-Jon,Hodor)] ),( dog ))) + foo(mislead(( TABLE[---destroy()][-COLS * foo(89,Hodor,-( -5 )) - 37 - Jon] ),Ygritte,rule(Hodor,( -Jon / dog ),TABLE[foo(dog,Ygritte)][foo(COLS) / Sansa * x])) * ROWS)],destroy(( TABLE[-50.0984 * ( dog ) - -( ( -1 + Sansa ) )][COLS] ),150.455)),-1),--( ( -Ygritte ) ) + COLS) * Stark )][( foo() )]){
	if(-58 / ROWS - Sansa / -Arya){
	if(Ygritte){
	Ygritte *= -67;
	if(( Ygritte / ( betray(mislead(destroy(foo(ROWS,( ROWS )),COLS,foo(rule(-870.49))),betray(x,-dog))) / rule(Hodor,91,1) ) )){
	-0.63
} else {
	x += Jon * -( rule(mislead(--dog * mislead(-94),TABLE[protect(bar(),( -Ygritte ),-1 * y)][0.69])) );
	if(Jon){
	if(-540.3 / betray()){
	--55 + foo(---33 + ( mislead(-( ---0.69 / rule(bar(-rule(dog,( --Stark + TABLE[( destroy(x,--1,Hodor / betray(ROWS + bar() - x / -810.4,Hodor,410.0888)) + ( ---protect(COLS - Ygritte / Hodor) * -0.9 ) )][-Sansa] * -0.52 )),-Sansa)) * COLS ),bar(COLS)) ) - -Jon,-24) - ( protect(bar(COLS,x,( --Ygritte )),Ygritte) ) + ROWS + COLS
};
	if(--0.6 / COLS){
	Sansa;
	if(( --15 )){
	if(--COLS){
	Sansa *= Hodor
} else {

}
} else {
	Arya;
	if(ROWS){
	Hodor *= ( Jon )
} else {
	if(destroy(ROWS) - ROWS){
	if(protect(Hodor) * x){
	-ROWS
} else {
	if(destroy(24,foo(Jon,-0.85) * ROWS / -protect(y) + ROWS) + -( -Jon ) - ( rule(ROWS) )){
	COLS;
	if(Jon){

};
	TABLE[( 0.69 ) * -0.42 + ( -COLS )][-ROWS + ( -17 ) / ROWS]
};
	x += 0.52 + -( TABLE[-0.87][( 1 )] * -62 )
}
} else {
	Hodor;
	if(-44){

}
}
}
};
	if(TABLE[mislead() * mislead(foo(x,( Ygritte ),TABLE[-ROWS][30] + ( -350.048 / Stark + x ) / -27),3) / Sansa][Stark]){
	if(( 1 )){

} else {
	if(bar()){
	dog += dog
};
	Hodor /= dog
};
	-47;
	Hodor /= 6
}
};
	20
};
	95
}
};
	Ygritte *= foo()
} else {
	-22 - betray(COLS);
	Jon *= 1 + TABLE[( ( bar(Stark,rule(( destroy(TABLE[( destroy() )][700.1262]) ) * ( -( -COLS ) ),-1) - x / bar(rule(---0.48,bar(Arya))),Sansa) / x ) ) * -x][100] / -COLS
};
	40.54
} else {
	y -= dog;
	Jon *= -( Hodor ) * ( 89 + 81 )
};
	TABLE[-TABLE[-1][( x )]][y]
}
}
def mislead(Stark,Ygritte){
	Ygritte *= -bar(-( foo(rule(COLS,Arya),( Arya ) - ROWS,Jon) / x ))
}
assert Jon : "Winter is coming"
var y = Jon
def destroy(){
	-0.29
}
def betray(Stark,Stark,x){
	Stark -= 890.78 * y;
	-91
}
def destroy(Arya){

}
var Stark = ( COLS )
var dog = x
def protect(Jon){
	-49
}
def betray(Jon){
	if(ROWS){
	( foo(dog,destroy(destroy() / Hodor)) );
	if(( TABLE[x][foo()] )){

} else {
	y *= -0.62;
	if(COLS){
	mislead(-0.27);
	if(dog){
	Arya *= x;
	bar(TABLE[Arya][Sansa] * -59,( -50 ) + ( Jon ));
	Arya *= dog
}
} else {
	if(betray() + Ygritte){
	Jon += TABLE[--betray(protect(-310.6846,TABLE[rule(dog,Sansa,( 38 ) + ROWS)][-betray(bar(dog,destroy(TABLE[95][Arya] * destroy(COLS * Sansa + Hodor,COLS),--Arya - bar(-57)) / ( -bar() )),y)]),( ( ( -300 ) ) ),( destroy(( Stark )) ))][( ROWS )]
} else {
	TABLE[-28][0.73 * -mislead()];
	Jon /= bar(1);
	if(( ( 0.22 ) / Ygritte )){
	y -= ( ( ( TABLE[--17][12] ) ) )
} else {
	Sansa /= ( TABLE[dog][betray()] );
	if(---0.15 + y + --61){

}
}
}
}
};
	ROWS - Stark
};
	-( ( bar(-bar() * -270.8 * TABLE[mislead(bar(( 0.61 ),Arya,77),COLS)][( -0.28 )] / destroy(dog,-1,( Stark ) + bar(ROWS,( TABLE[TABLE[( -TABLE[-4][-Sansa / ( ( COLS ) )] + 0.61 * COLS )][( Stark )] / -0.94][x] * foo() ),( betray(mislead() + 33,( rule(( bar(ROWS,Jon) ),ROWS) ),COLS) * -33 + 57 ))),-0.46,-0.17) ) )
}
def protect(){
	if(( x )){

};
	y += mislead(Arya + COLS) - -( ( ( betray(-0.48 * 34,( Arya )) ) ) )
}
def TABLE[TABLE[--24 - ROWS - -( foo(-110.79) ) - betray(TABLE[Sansa - Ygritte][0.11],rule(( TABLE[-Hodor][ROWS] ) + ROWS,TABLE[mislead(( ( protect(destroy(990.713,TABLE[610.79][ROWS],-56),-350.827 / ROWS) ) )) * COLS][Stark] - betray(Hodor) - ( -1 ),Ygritte) + COLS,rule(( COLS ),rule(protect(Arya,foo(),betray(Hodor,-( ( -x + betray(-66,protect(rule(dog,destroy(--protect(y)),Hodor),TABLE[bar(ROWS) * ( Arya )][-0.11])) ) )) + Sansa),-97) * foo(mislead(-69),ROWS,( 76 ))))][( -( -780.1 ) / destroy(COLS,protect(TABLE[0.23][( ( x ) )])) / foo(-Stark) + dog + x + COLS )]][j] {
	Stark -= ( x / 1 )
}
var dog = ( 89 )
def foo(Sansa,y){
	dog *= destroy(-7,COLS);
	dog += TABLE[-( -( 0.84 ) ) / destroy(-0.72,-540.76)][destroy(73,ROWS,--95)];
	if(-1){

}
}
def TABLE[y][i] {
	Stark /= -rule(( destroy(y) )) + protect(-1) / TABLE[61][( ( ROWS ) )]
}
def TABLE[-0.14 - TABLE[dog][foo(98 / ( COLS ) - -x)]][k] {
	if(( -9 )){
	if(ROWS){
	Jon += -COLS;
	dog /= -350.38
} else {
	Hodor
};
	ROWS * ( Arya - dog )
}
}
def TABLE[( foo() ) - --rule(destroy(-Sansa / -53 + COLS),Jon) / protect(-( ( ( Hodor ) ) ),ROWS) * -( TABLE[TABLE[TABLE[TABLE[1][Ygritte]][mislead(( -170.97 ) / TABLE[COLS][-Stark])] * ( 570.9003 / ( ---99 ) - rule() )][1]][-mislead(protect(--37,Stark / ( ( -28 ) ),-0.8 - ROWS / -( ( 30.9915 ) )))] )][k] {
	0.12;
	-ROWS / --x
}
var Arya = ( ( -( Jon ) ) )
assert -COLS : "Fear cuts deeper than swords."
assert ROWS : "Nothing burns like the cold."
assert -0.62 : "What do we say to the Lord of Death?"
assert mislead(rule(( -y ),TABLE[x][Jon])) : "Nothing burns like the cold."
assert 0.49 : "One can not simply parse himself"
def destroy(y,y){
	Arya += 1 * dog
}
def TABLE[TABLE[x][Hodor]][i] {
	if(-( TABLE[foo(TABLE[( ( -1 ) )][440.878],COLS) * TABLE[--90][destroy(( dog ))] / -740.38][destroy()] - -9 )){
	TABLE[TABLE[protect(-( -x + COLS * Jon ),Stark)][80]][destroy(-protect(protect(Hodor)) + 90 + COLS)];
	if(-490.69){

}
};
	COLS * -80.1377 / TABLE[foo(y - ( COLS ),-x + COLS)][--mislead(bar(1,( ( COLS ) )) + 0.25 * 0.63 + 7 / Sansa) - mislead()]
}
def rule(Jon){
	if(ROWS){
	x -= TABLE[0.36][( ROWS )] / Jon + -Ygritte
}
}
var Stark = -0.72 + -( -bar(0.38) )
def TABLE[ROWS][j] {
	if(-bar(-foo(1,TABLE[ROWS][Hodor],destroy(dog,-33)),---foo(),--87)){
	y -= Ygritte
} else {
	if(protect(59)){
	( ROWS * TABLE[COLS][-protect(-1,TABLE[bar()][-( Sansa ) * Jon * Stark],ROWS - ( TABLE[TABLE[( Arya ) - ( Jon ) + ROWS][protect()]][Jon] / ( -740.39 ) ))] )
};
	if(mislead(( -0.48 ),protect(( Hodor ),0.12),( ( ROWS ) ))){
	y *= ROWS / protect()
} else {
	Ygritte /= Sansa;
	y += COLS
}
};
	if(23){

}
}
var dog = ( Stark )
var Stark = Jon + -0.41 / betray(Sansa,( -TABLE[Stark][-destroy()] )) - COLS * mislead(( -1 * TABLE[Stark - destroy()][ROWS] * TABLE[-43][Ygritte] + x ))
assert -Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( --0.25 )][j] {
	0.08;
	if(COLS){
	Sansa *= foo(1,19,----betray(-60,0.93,COLS + ( -0.6 )));
	if(betray(COLS,-protect(-ROWS,betray(0.15,( Arya ),-betray(TABLE[mislead(TABLE[Sansa][Jon],-ROWS - x)][x])) / -Jon,Hodor - foo(TABLE[-28 + COLS][-74]) / mislead(--ROWS - foo(( 59 )))) / 39)){
	protect()
} else {
	Ygritte -= ( ( Hodor ) ) / ( ( --9 ) );
	x -= destroy(x,-49,TABLE[-760.8][rule()])
}
}
}
assert -( -82 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ROWS
var x = --( betray(-ROWS) )
var y = ( 66 )
var dog = mislead(mislead(---620.916,54,( COLS ) - bar(-11,( betray() ) + COLS)))
def TABLE[Hodor / 690.53][j] {
	bar()
}
def TABLE[TABLE[( -77 )][mislead(-0.32,Jon + --0.6,protect(y)) / Hodor]][i] {
	-0.58;
	370.018
}
def TABLE[TABLE[0.81 / -Hodor][COLS]][k] {
	Jon -= betray()
}
def TABLE[50][i] {
	Jon
}
assert bar(( --rule(16,betray(--( Stark ) / bar(),( ( Arya ) ),TABLE[destroy(-19) / -( -Jon + ( -rule() ) ) / foo(-TABLE[0.02 / y][ROWS],--0.5,( ( protect(-TABLE[( --700.5757 )][protect(x,( TABLE[-1 + -Hodor][-710.02] ))] / ( --ROWS + destroy(y,-1) - -69 * -300.253 ) * Arya) ) ))][-1])) ),-59) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Hodor,Ygritte){
	x += -900.934;
	if(TABLE[TABLE[Sansa][dog]][mislead(foo(( 0.99 ) - -0.57),destroy(ROWS,TABLE[43][-rule()]),betray(60,ROWS))] / 59 / -ROWS){
	ROWS
};
	dog *= protect(TABLE[protect(destroy(dog,-0.24,ROWS - Sansa / ROWS) / -( ( -TABLE[0.91][-ROWS] ) ) / COLS) - Sansa / bar(270.96,betray(50.1,Hodor - ( TABLE[-95][-1] / ( 73 ) ) * ( -300.348 ) / -TABLE[rule()][COLS]),Hodor)][( ( --rule(( bar(ROWS) ),0.9) ) ) * betray(Hodor,( -1 / 73 )) * ( x )])
}
var x = COLS - y
assert -0.72 : "Nothing burns like the cold."
def mislead(x,Jon){
	if(x){
	if(Hodor){
	Jon;
	Ygritte += mislead(--COLS / ROWS,foo(-90),-x)
} else {
	Jon /= --ROWS * COLS;
	-1
};
	if(Jon){
	if(( TABLE[COLS][ROWS + Sansa] )){
	Arya /= ROWS
} else {

}
}
} else {
	if(rule(COLS,( ROWS ) + bar(( ( --( destroy(TABLE[Sansa][-TABLE[y][mislead(rule(---( ( y ) ),betray(ROWS / x,COLS)))]]) ) ) ) / -( Ygritte )))){
	if(-( rule(rule(230.613,( --85 ),COLS + ( ( TABLE[-0.25 * rule(-ROWS,foo(mislead(( ROWS ),Ygritte,TABLE[bar(COLS)][Stark])),COLS * ROWS + COLS) + ( ROWS )][-Sansa] ) ))) )){
	if(-0.44){
	Jon /= -( -bar(ROWS) + ( TABLE[bar(COLS)][Hodor] ) ) / ( --1 + TABLE[-Sansa + foo(( --54 ),-0.43)][-910.6] )
}
};
	if(--dog){

}
}
};
	if(( ROWS ) + bar(( TABLE[0][( protect(-( dog )) )] ) * ROWS * ( ( bar(protect(COLS,1),Sansa,( 1 )) ) )) * -ROWS - -TABLE[TABLE[Hodor][destroy(( ( foo(bar(mislead(-x / COLS)),( 59 )) ) ))]][COLS] + COLS){
	Hodor += dog;
	-640.98;
	-20.14
}
}
def betray(){

}
var Stark = Arya
def TABLE[Arya][k] {
	if(TABLE[-Arya][TABLE[Arya * ( y )][0.32]]){
	Stark += TABLE[TABLE[Sansa][Ygritte / destroy(ROWS)]][( ( protect(Jon) ) )];
	x *= COLS
};
	Arya *= ( mislead(( ( -70 ) )) )
}
def protect(Arya,y){
	if(rule(( ROWS ),COLS)){
	if(-x){

} else {
	-COLS + ( --140.631 );
	if(-30 + Sansa){
	if(COLS){
	if(ROWS + betray(TABLE[COLS][--( protect(( Sansa ),-0.28) ) + COLS - -0.63],570.57)){

}
};
	if(Ygritte){

}
} else {
	Stark += betray(-22,protect(destroy(protect(-Hodor),Stark)));
	if(-Ygritte){
	if(-TABLE[0.23][ROWS / -( -COLS * TABLE[-( protect(protect(destroy(Stark,mislead(40.673,( ( TABLE[-20.05][TABLE[----( -8 ) - Hodor][protect(COLS,( COLS ))]] ) ),mislead()))),bar(mislead(( y ),66),( destroy(Stark) ) * y,ROWS)) )][-TABLE[mislead()][( Jon )]] )]){
	betray(-Hodor + ( bar(rule(9 * ( x ) + --0.52)) ) - Stark)
}
} else {
	Sansa -= -Hodor;
	Arya
}
};
	foo(0,( foo(( ---bar(( COLS ),--65) + TABLE[( protect(( dog - TABLE[COLS + 130.38][rule(bar(rule(Hodor,COLS,-19),TABLE[( -0.05 - TABLE[--400.994 / ( -Arya + ( ( COLS ) - y ) * 1 )][destroy(-Ygritte / betray(1 * ( -x ) + 70.238,-COLS),-0.26,Jon)] )][ROWS]),COLS,destroy(----0.34,ROWS))] )) * 0.08 * betray(( Jon )) )][destroy(22,( -ROWS ) / x)] )) ) * -50)
};
	dog /= Arya
};
	dog
}
def TABLE[ROWS][i] {
	if(-y){
	COLS;
	-foo(-betray(( 180.6 )),( Stark ))
}
}
var Ygritte = COLS + -TABLE[ROWS][foo(protect(( x ),protect(COLS,( -34 ) - Ygritte),Sansa))]
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte){

}
def TABLE[Ygritte][i] {
	rule(TABLE[( TABLE[y][( -mislead(COLS) ) + -ROWS / -79 - Ygritte] )][betray(-COLS,-790.6115)]);
	if(rule()){
	if(-( COLS ) / Stark * 40.963 * -1){
	-Ygritte
} else {
	Stark /= ( ( ROWS ) ) / ( -rule(ROWS) );
	if(-destroy(-0.37) * mislead()){
	-( ( ROWS ) )
} else {
	Ygritte;
	if(--y * protect(TABLE[destroy(Ygritte,-690.41)][y],970.946,Jon)){
	Ygritte *= ( ROWS )
}
};
	if(protect(( -Sansa * -Ygritte ),( ( -betray(TABLE[( ( -0.61 ) ) - TABLE[5][TABLE[( betray(destroy(destroy(-310.48),dog),400.119,COLS) / TABLE[1][( 0.53 )] / destroy(Stark,Jon,protect()) )][( bar() )]]][( COLS )],Stark * Stark,----( TABLE[( ( 91 ) ) + TABLE[( --( protect(ROWS) ) * destroy(bar(( ROWS ),-TABLE[TABLE[-63][Jon]][ROWS]) * rule(betray(rule(( mislead(--0.5 / 0.02) ),( ( ROWS - -1 ) - -( -TABLE[Sansa][( -2 )] ) + Jon ),mislead(mislead(Ygritte,Jon,-rule(TABLE[Sansa][Ygritte])),-51))),( ( x ) )),x - bar(ROWS),( -ROWS )) )][TABLE[-( Arya )][ROWS]]][dog] )) ) ),ROWS)){
	if(ROWS + protect()){

};
	Hodor /= ROWS
}
}
} else {
	if(COLS){
	y /= ROWS
} else {
	Stark;
	-betray(rule(foo(TABLE[betray(( rule(y) ))][--ROWS + COLS] + -Arya / COLS,betray(( ----TABLE[Jon][( Ygritte )] ),-21)) / ( y )) - ( ( 1 + -Ygritte ) ) / bar(66))
};
	COLS
}
}
assert foo(( -33 ),57) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.35][j] {
	COLS
}
def betray(y,Ygritte){
	if(1){
	Jon += ( -mislead() )
}
}
def TABLE[-370.4][j] {
	( -87 )
}
var dog = foo(COLS) - -48
def protect(Hodor,Stark,Arya){
	39;
	if(Arya){
	Stark *= bar(rule());
	if(TABLE[--bar(1000.2943)][-bar(destroy(( --1 * --protect(--83,-----Jon) ),x,betray(1 - ( -( Ygritte ) - 22 ),-ROWS,foo(ROWS - foo(--x + -56,( COLS ) + -y),foo(),-82) / foo() / ( -TABLE[destroy(-65) + -TABLE[COLS][-510.43]][79] + -0.48 + dog ) * ( Ygritte ) / 0)),-y) / -( -1 )]){
	if(rule(betray(--COLS * ROWS + ( --destroy(-ROWS) * rule(TABLE[TABLE[-0.96][COLS]][1]) + destroy(Jon / rule(),42,COLS) ) - COLS + betray() + ( ( ROWS ) ),foo(-0.04 * -87)),-490.2517,destroy(betray(-dog / --0.9 - ROWS,-( ROWS ),Sansa),----800.838) - Ygritte)){
	Stark
}
}
} else {
	( COLS - ROWS );
	Jon /= -0.72
}
}
def mislead(Ygritte,Jon){
	betray(ROWS);
	Jon
}
def TABLE[-1 + dog][j] {

}
var y = -73
def TABLE[destroy(-0.03,85)][k] {
	protect() - mislead(y,COLS);
	Stark -= TABLE[( y )][--0.35]
}
def TABLE[1][i] {
	if(mislead(( COLS ),( dog ),20) + COLS){
	if(-0.08){
	if(48){
	Hodor += -rule(-1)
} else {
	( rule() - --3 );
	if(destroy(-Jon,TABLE[Stark][rule(-bar(-COLS + -( ( Jon / ROWS ) ) / Arya - TABLE[Stark][--52] + Stark + 0.28 + rule(-bar(TABLE[mislead(( 0.92 ),mislead(81,( COLS )),( foo(COLS,( mislead(-ROWS,betray(-( ( ( -1 ) ) + 0.39 ),-0.52)) ),protect(COLS,x)) ))][( -dog )],x),TABLE[rule(--Sansa * ROWS,( -bar(-TABLE[rule(-0.5)][ROWS]) )) / 1][-TABLE[ROWS][destroy()]],ROWS),( TABLE[--foo(ROWS,( rule(-0.45) ))][ROWS] )),betray(),2) * mislead(-destroy(( ( -14 ) + ( ( ROWS ) ) ),( dog ),COLS) + -0.89 - TABLE[Sansa][( ROWS + mislead(-88,protect(1)) ) - -72]) / 84 * -95])){
	Ygritte;
	if(betray(( rule(mislead(betray(--0.61,-0.12),protect(COLS)),Stark,TABLE[destroy(destroy(-0.64,x / -TABLE[-Sansa][( ( -----ROWS ) ) - -63] / Arya - ROWS))][-52]) ),COLS)){
	if(Ygritte){
	if(TABLE[--0.81][-rule(bar(1,--Ygritte),ROWS)]){
	y /= ROWS;
	if(-1){
	if(TABLE[Ygritte][-( Ygritte )]){

}
}
}
} else {

}
} else {
	if(mislead(Sansa,-( 310.511 ))){
	( ( ( dog ) ) );
	-98
};
	if(Ygritte){
	-( -( -( -0.48 ) - dog - x - COLS ) );
	Jon /= TABLE[-dog][ROWS]
}
}
} else {

};
	if(Arya){
	if(mislead(x)){
	bar(( ( y ) - -0.78 ),0.15,COLS)
}
}
}
};
	Stark += TABLE[--COLS * 0.76 - --ROWS][dog];
	Stark += -750.5853
} else {
	Stark -= -85 / ( -( Jon ) );
	y -= 0.21;
	60
}
}
def TABLE[-foo(ROWS)][i] {
	if(COLS){

} else {
	--Sansa * -60;
	Jon += -protect(0.26 * Sansa)
};
	if(-14){
	y
}
}
var y = rule() * rule(----0.66,destroy(COLS,-COLS) / ROWS)
def TABLE[( -COLS )][k] {
	Sansa
}
def TABLE[COLS][k] {
	1 * ( --680.174 );
	-39;
	x /= -95
}
def protect(dog){
	if(-0.56){

};
	if(Sansa){
	Arya;
	ROWS;
	Sansa -= -Stark
} else {
	Jon *= ROWS;
	if(betray(Sansa)){
	if(ROWS){
	dog *= foo();
	if(-TABLE[rule(( ---destroy(TABLE[dog][--( -0.24 )],( betray(COLS,-( -( Ygritte ) ),15) + destroy(Jon / ROWS,COLS) )) + ( foo(ROWS) ) ),-ROWS)][( ( dog ) )] * ( COLS * ( Hodor ) )){
	if(--89 / Ygritte){
	if(-0.74){
	85;
	Sansa += ( bar(-( -0.62 )) ) / COLS;
	x *= ( ( -y ) )
};
	protect(-y)
} else {
	if(foo(destroy(( protect(rule(Stark),( rule() ),betray(Sansa,( -92 + --( TABLE[Stark][-Ygritte + -1] ) ),( Arya ))) ),ROWS + -betray(Sansa) - Hodor))){
	Sansa;
	Sansa
} else {
	dog;
	63
};
	if(-1){

} else {
	Arya /= bar(protect(),-protect(bar(1,0.03) - ( x ),rule(destroy(( -( mislead(-( destroy(TABLE[dog][-0.75]) ) * rule(Stark),mislead(-1,protect()),rule(x,( -65 ),-destroy() / -440.058)) + ( 0.7 ) ) ),-43 - -0.84 + Sansa / x,-0.98) * 0.11),--320.23 * Ygritte),( ( destroy(( mislead(0.2,-0.78) )) * ( ( COLS ) ) / -betray(rule(),dog / ( ( Jon + protect(-COLS,( COLS ),( 0.27 )) ) ) / 1) ) ));
	COLS
}
};
	y += ROWS
} else {
	Arya += ROWS
};
	if(-0.01){
	( x )
}
};
	y /= 75
}
}
}
def foo(){
	if(foo(dog,0.05 * foo(Jon))){
	if(TABLE[1 * ( betray(ROWS,( x ) + mislead()) )][destroy(Arya,-0.22)]){
	Ygritte += Ygritte;
	TABLE[bar(y)][( rule() )];
	Ygritte *= Arya
}
} else {
	( Ygritte ) * COLS;
	if(TABLE[protect(COLS)][( Ygritte )]){
	Ygritte /= bar(TABLE[TABLE[--Sansa - rule(mislead(),-bar(destroy(( ROWS ),Sansa),Stark,destroy(-440.377,-Arya) - --0.04 / mislead(( 780.42 ))))][Stark]][TABLE[Ygritte][Ygritte]],( 72 ));
	if(TABLE[Ygritte][ROWS + 1]){

} else {

}
}
}
}
var Stark = ( rule() )
var Arya = COLS
def protect(){
	Ygritte - dog;
	dog -= -570.797
}
var dog = -Hodor
def rule(x,dog){

}
assert --73 / ROWS : "One can not simply parse himself"
var x = ROWS
def mislead(x,Sansa,Hodor){

}
def TABLE[( Stark )][i] {
	--Stark + TABLE[29][-19];
	Hodor += 84
}
assert COLS : "What do we say to the Lord of Death?"
def foo(Stark,x){
	COLS;
	Sansa - bar(-690.5,( dog ))
}
def betray(x){
	Hodor -= bar(( -COLS + Hodor ) + dog,-0.26,protect(( --36 / -Jon ),( destroy(-87 - Stark,rule(),Arya) )));
	if(( COLS )){
	if(-41){
	Arya -= x + 0.66 * ROWS
} else {
	y;
	ROWS;
	-0.58
}
} else {

}
}
def TABLE[ROWS][j] {
	if(TABLE[( ( ( rule(Ygritte * Arya,-( COLS ),ROWS) ) ) )][-45]){
	COLS / mislead(1)
} else {
	Jon += ( Hodor )
};
	110.2
}
assert ( betray() ) : "Winter is coming"
def TABLE[y][j] {
	( protect(( -11 )) );
	-destroy(( ROWS ),850.754)
}
def betray(y){
	Stark /= protect(ROWS) + Hodor / protect(Jon,-( ( ROWS ) ));
	if(betray(COLS)){
	x /= -93;
	if(protect(x) + ( -( Stark ) )){
	Hodor *= -0.66;
	-TABLE[Arya - Arya][-40.901]
}
}
}
assert ( ( ROWS ) ) : "Winter is coming"
var Arya = -( x * -destroy(Stark) / ( protect(protect(destroy(--protect(---290.3199,-protect(-0.14)))) / ( protect() ),( bar() ) + x,Stark) + ( COLS ) / ( ( -0.83 ) ) ) + ROWS )
def TABLE[( 12 )][j] {
	if(-dog){
	Stark / --Jon - bar() + 1 / Sansa;
	if(92){
	if(dog){

} else {
	44;
	if(-( protect(y) )){
	x *= Sansa
} else {
	y += Arya;
	ROWS;
	Sansa -= protect(Sansa / -x / protect() - ( -( -TABLE[( -0.22 * -Arya )][1] ) ))
}
}
} else {
	if(Hodor){

} else {
	if(--1){
	if(( 0.18 )){

};
	if(mislead()){
	dog += COLS
} else {
	-mislead(COLS);
	dog /= betray(Ygritte,-0.67,--( COLS ))
}
}
};
	if(bar(Sansa * ( Jon ))){
	x;
	COLS
}
};
	TABLE[960.62][protect(( y - protect(-2) ) / -740.9 - destroy(-56),-ROWS,-( rule() ) + 44) - COLS - protect(84,rule(-x,-630.6935,Jon),-COLS + Ygritte)]
};
	if(270.77){

} else {
	x /= rule()
};
	if(bar(Arya + 470.4514,( -( ( ( -Jon - destroy(rule(),820.721,Ygritte) ) + 180.884 ) ) ),x)){
	if(Stark){
	Ygritte += -TABLE[( betray(( TABLE[--1][1] )) )][destroy(-59,( bar(foo() * TABLE[-( Ygritte )][( x )]) ))] + --38;
	Ygritte /= -0.2;
	if(-( Arya ) - destroy(ROWS)){
	dog *= mislead(foo(COLS));
	-Sansa
}
} else {
	if(Hodor + Arya + 34){
	if(100){
	77;
	Stark
} else {
	ROWS;
	Hodor
};
	Ygritte -= -750.558
} else {
	x -= -0.25;
	ROWS
};
	if(bar()){
	x -= ( -( Ygritte ) );
	dog += Arya - ( -foo(( 90.71 )) )
} else {
	COLS
}
};
	if(120.15){
	Jon -= 350.398;
	---mislead();
	if(-0.63){

} else {
	-( TABLE[TABLE[COLS][--( -COLS ) / TABLE[--mislead(940.189,destroy(Arya),1)][-destroy(bar(ROWS),bar(( --72 ),protect(),( COLS )),ROWS)] - 0.85]][rule(--0.67,ROWS)] );
	if(y){
	( 0 - -1 );
	Stark += ROWS
} else {
	Ygritte /= ---0.51 - foo(destroy(),bar(Jon,( ROWS )),-0.91);
	if(TABLE[ROWS][-protect(ROWS - x,Hodor) + -0.56]){
	if(38){

};
	-0.84
}
};
	dog *= -Arya
}
} else {
	COLS;
	if(( Hodor )){

} else {
	Stark / ( -( 0.18 ) );
	Jon *= 51
};
	destroy(COLS,---Hodor)
}
} else {
	if(( betray(0.76,-ROWS * ROWS + foo(Arya) * COLS * -( ( -rule(foo(TABLE[Arya][-rule(Arya)] - destroy(( -mislead(( ROWS )) / TABLE[( y )][1] - -Sansa * -780.837 + -0.8 ),COLS + ( ---1 ) - bar()))) ) )) )){
	Sansa /= COLS;
	if(Hodor){

} else {
	if(protect(--foo(ROWS) + ---ROWS,( Sansa + ROWS ),TABLE[Ygritte][( --60 )])){

}
};
	if(( TABLE[-destroy(( ( -destroy(dog,--1,Ygritte) ) ))][-85] )){
	if(betray(Ygritte)){
	if(COLS){
	Jon /= ( Ygritte )
} else {
	Stark *= destroy() - betray(COLS) + foo(-23)
};
	y
} else {
	if(-( ROWS )){
	-65
} else {
	0.56 * -betray();
	Stark += y;
	Ygritte -= ( 0.69 / ( ROWS ) )
};
	( ( 1 ) ) - Stark
}
} else {
	if(x){
	x += ---1
};
	dog /= COLS;
	y
}
}
}
}
assert -destroy(( ( -1 ) ),Jon,Hodor) : "What do we say to the Lord of Death?"
def TABLE[Jon][j] {
	Sansa /= ( destroy(84,protect(-300.844,COLS,rule(-1 / foo(),betray(--( x ),( mislead(( --dog * -( ROWS ) + ( -29 ) ),mislead()) / bar(0.74,x) ))) * -ROWS / destroy(0.17,-0.51))) );
	rule(dog);
	betray(-2,Stark)
}
var Arya = Hodor
def TABLE[190.4915][k] {

}
var Arya = Jon
assert ROWS : "One can not simply parse himself"
def TABLE[protect(TABLE[-foo(( -1 )) - TABLE[--1][Hodor]][-TABLE[ROWS][0.25]],destroy(),dog)][k] {

}
assert y : "One can not simply parse himself"
assert COLS : "What do we say to the Lord of Death?"
def protect(){
	COLS;
	if(( 71 )){
	dog -= y
} else {
	-5;
	COLS
}
}
def TABLE[-( bar() )][k] {
	Jon -= Jon;
	if(( -foo(dog,-22,ROWS) )){
	x /= ( COLS );
	Sansa -= ( Sansa )
} else {
	betray(Jon);
	dog -= ( 21 )
}
}
def mislead(){
	ROWS + ( -( ( Jon ) ) ) / ( -1 )
}
assert 53 : "What do we say to the Lord of Death?"
def TABLE[-( 89 )][j] {
	if(foo(x)){
	Jon *= -( -0.92 );
	-dog
}
}
assert x : "What do we say to the Lord of Death?"
def TABLE[-( ROWS )][i] {
	dog *= betray(x,Hodor);
	Stark -= TABLE[79][-COLS]
}
def TABLE[protect(bar(-520.46,0.87,betray()),foo(--TABLE[-470.991][( ( ( mislead() ) ) )]),-rule(( ( rule(( betray() ),( TABLE[--protect(Sansa,-33) - foo(protect(-1,ROWS)) * --( 1000.676 ) * -0.54][COLS] )) ) ),Ygritte / -( protect(Ygritte) )) + -75)][i] {
	if(dog - Stark * protect(--23,( ( bar() ) * Ygritte ))){

} else {
	Ygritte /= ( -5 + -Arya + ( dog ) );
	if(-destroy(-0.28 + 89,( TABLE[-y][foo(COLS)] ) + -1 * ROWS)){
	990.83;
	mislead(Sansa) - -( COLS );
	y
}
};
	if(( bar(ROWS,-TABLE[--COLS + -Ygritte * -( Ygritte )][---rule(TABLE[( ( COLS ) - bar(foo()) ) + ( mislead() )][Arya - -0.6],ROWS)]) / -Jon )){
	if(TABLE[Sansa][( TABLE[-TABLE[betray(( Hodor / ROWS ),-betray() / TABLE[1][( -1 )])][TABLE[bar()][foo(TABLE[y - --1][ROWS - Hodor],ROWS,protect(Stark))]]][ROWS - Arya] )]){
	COLS;
	Stark /= -500.6349;
	Sansa -= ( ROWS )
} else {
	Stark /= Arya
}
}
}
def TABLE[Stark][i] {

}
def TABLE[Ygritte][j] {
	if(y){
	42;
	dog
} else {

};
	( foo(x) )
}
def foo(Ygritte){
	Arya -= ROWS / --0.11;
	if(-0.56){
	if(-y * --13 + Hodor){
	if(TABLE[( Jon - ( ( protect(-0.93) ) ) )][protect(Jon,( ROWS ),COLS)]){
	if(Hodor){
	--( Jon - -betray() ) / rule();
	foo(0.51)
}
};
	( TABLE[-betray(-dog,( destroy(x / TABLE[( -0.8 ) * COLS][1]) ) / y,rule(ROWS)) + -45][mislead(-0.13,-97)] )
}
}
}
assert ( TABLE[Hodor][COLS] ) : "What do we say to the Lord of Death?"
var Sansa = ( -1 * TABLE[betray(Stark) - 34][-protect(y,-Jon)] )
var dog = -( TABLE[ROWS][Stark] )
def betray(){
	foo(-y,-ROWS * mislead(-540,TABLE[( -bar(( protect() ),protect(mislead(destroy(( mislead(COLS) )),-( -( COLS * ( COLS ) ) ),( ( -0.11 ) )))) )][COLS] + protect(bar(( -0.42 )),--Jon,x) * ( 0.28 )) + ROWS - y * -TABLE[-1][-bar(Sansa,protect(destroy(430.12,( 1 )) / -95,protect() + 0.62))] * bar(betray(( Arya ),( ( 44 ) )) * -0.91 + protect(0.47 / Arya,betray(( ( -0.95 ) ),ROWS + ROWS - -8) - Hodor * mislead(-0.84)),mislead(COLS,COLS,-TABLE[( protect(Jon,ROWS) )][( ( 0.15 ) )] + -1)) * destroy(ROWS),( Stark ) - -98) + dog
}
var Ygritte = -0.14
assert Ygritte / 0.7 : "Winter is coming"
def TABLE[y][k] {

}
def TABLE[destroy(destroy(( -Arya - bar(mislead(-270.8,foo(Hodor) * -Jon / COLS) + ( 45 ),-48) )),betray(Jon - -rule(),-0.26) / Sansa) / Sansa][j] {
	y
}
def destroy(){
	-destroy(rule(-Stark,-Sansa));
	if(-TABLE[COLS][--62 * ( 0.28 )]){
	if(970.42){

}
}
}
var Hodor = -TABLE[Hodor][COLS]
assert -( Sansa ) + -y : "Winter is coming"
assert COLS : "Nothing burns like the cold."
def rule(){

}
var Ygritte = ---ROWS
def protect(Jon,y){
	Sansa *= ( protect() )
}
var dog = Jon
assert Sansa + ( -Sansa ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = -89
def TABLE[Jon][k] {

}
var Sansa = ( -destroy(( ( ( ( ROWS * TABLE[Arya][( protect() )] ) ) ) * betray(-0.53,( -destroy(TABLE[TABLE[1][rule(x)] + foo()][16 * mislead(-57)],bar(protect(),Arya,390.48),dog / Jon) )) ),Arya) )
def TABLE[-250.1192][j] {
	if(( rule(( ( 1 ) ) / betray(Stark,-120.03,Sansa),-Ygritte,( mislead(COLS,rule() + mislead(Ygritte,-1,COLS) / Stark) )) )){
	foo();
	Sansa /= -0.31 * bar(Stark,( -1 ))
};
	-( -1 )
}
var Stark = Sansa
var x = -0.53
def mislead(Stark){
	if(protect(-destroy(TABLE[COLS][y]) + x - --TABLE[mislead()][-x] - TABLE[Jon][( y )])){
	y += y
} else {
	y *= foo();
	betray(1,mislead(( destroy(protect(-0.35,protect(53,Hodor))) )));
	Hodor /= ROWS / Jon
};
	Hodor /= ( Arya )
}
assert protect(( dog ),ROWS / ROWS) : "Fear cuts deeper than swords."
def TABLE[Stark][j] {
	Ygritte *= TABLE[y][( COLS ) - ROWS]
}
assert -Hodor : "Winter is coming"
var Stark = -TABLE[ROWS][-1]
var Jon = ( --( protect(-TABLE[ROWS][dog + ( -mislead(--( y - 1 )) / TABLE[Stark][destroy(5,( ROWS ) / y,COLS - ROWS + -730.35)] / ( Ygritte + --0.55 ) ) + -0.65] / TABLE[COLS][ROWS],( --mislead(mislead(-11 + -ROWS + 27,-0.41),y) )) ) / COLS )
def TABLE[betray(-1)][k] {
	Arya -= foo(protect(foo(y)) + mislead(),-( ROWS ));
	if(COLS){

}
}
assert TABLE[( COLS / -1 )][-( ROWS )] : "What do we say to the Lord of Death?"
def foo(){
	Hodor += -protect(TABLE[Hodor][( ---TABLE[-ROWS][rule(( -betray(ROWS,COLS,-( ( x + -ROWS ) )) ))] )],-0.68);
	Arya /= betray(( ( -98 ) ),-58 - betray(bar(TABLE[TABLE[( ( rule() ) )][COLS]][Jon]) * -640.2),-ROWS);
	0.3 / -( COLS )
}
def TABLE[130.87][i] {
	if(( mislead(( Ygritte * ( rule() ) / -0.07 - -protect(rule(-mislead(-protect(),62) * rule() / 40 * -0.99 * mislead(mislead(),bar(TABLE[Sansa][85 * COLS],ROWS,( --( -COLS ) )),COLS),0.12)) + -( ( -8 ) ) + -1 - Sansa ),TABLE[Hodor - -destroy(rule(16) / -52,-1,( 0.14 ))][1]) ) * ( mislead(-0.4) )){
	--Ygritte;
	Arya /= -COLS;
	Stark -= ( --( -63 ) )
};
	protect()
}
def TABLE[( 0.4 )][i] {
	if(-50.909){
	ROWS;
	if(-( protect(foo(bar(-33,9),-TABLE[-32 * -Arya - ( foo() )][( mislead(( -( ( 0.2 ) ) + -destroy(COLS,( TABLE[39][( --0.44 )] ) - ROWS * -( Stark )) )) )]),Sansa / 0.2,( protect(( x )) )) / --( mislead(foo(TABLE[-COLS][-COLS - ROWS * -99 / Stark] * COLS,destroy(-TABLE[Arya][-ROWS],( x ))),( betray() )) ) )){
	--foo(bar(COLS,-( Ygritte )),TABLE[protect(260.65,ROWS)][-TABLE[( TABLE[ROWS * COLS][Jon] )][--Arya + 13]],COLS)
} else {
	if(-( dog )){
	COLS
}
}
};
	( Jon )
}
def TABLE[COLS - Jon][j] {

}
var Stark = 1
assert -0.04 : "What do we say to the Lord of Death?"
var Stark = ( -mislead(ROWS + --0.73 + bar(),foo(( destroy(Hodor,ROWS) ),-0.29,( ( bar(1) ) )),1) )
var Jon = --ROWS
assert ( Ygritte - Jon ) : "Fear cuts deeper than swords."
def mislead(Arya,Ygritte){
	( ( ( ( 100 ) ) ) );
	y -= TABLE[( ( Ygritte ) )][destroy()];
	( x - -( protect(--0.17,dog,850.42) ) )
}
var Stark = COLS
var Stark = 0.24
var x = -bar(bar(x - ( ( Jon ) )),16,COLS)
assert 0.82 : "One can not simply parse himself"
def TABLE[-1][i] {
	Arya += ( -990.28 )
}
assert --66 : "Nothing burns like the cold."
def TABLE[1][i] {

}
def destroy(Jon){
	if(destroy(destroy(Stark / ---230.8 - dog,TABLE[mislead(( ( -rule(-( ( ( ( bar() ) ) ) ),-300.83) + -20 / 0.39 + Jon ) ),TABLE[rule(TABLE[ROWS][---500.9 - COLS - -1 + 63]) + --( -1 )][Arya])][-ROWS]),-18)){
	if(COLS / mislead()){
	if(5 / bar(TABLE[y][ROWS],Jon + Hodor,Sansa) - Ygritte + COLS * 33){
	57 - -390.483 + TABLE[TABLE[ROWS + destroy(1,bar(( -57 ),( -( -1 ) )))][ROWS]][rule() + TABLE[-45][ROWS] * ( ROWS )] + 140.569
} else {
	if(destroy(COLS,Arya)){
	if(COLS){
	bar(foo(),foo() * -800.526,Hodor) / destroy(TABLE[ROWS][( bar(Jon) )],-Sansa,mislead(--COLS / COLS - ( -Arya ),-3));
	Stark += --( Hodor / -foo() ) - Sansa
};
	Hodor *= ( Arya )
} else {
	Arya *= 76 + --700.69
}
}
} else {
	if(foo(-1,Stark,( -mislead(( -( -y + destroy(0.86) ) + ROWS ),ROWS,( -58 )) ))){
	x /= ( Sansa + -1 ) / mislead(0.56) * ( --310.856 );
	if(y){
	betray() + ( -Arya + rule(Arya,( Stark )) )
}
}
};
	protect(Arya,betray(bar(x,( bar(--89 - ( 0.42 ),destroy(( ROWS ),ROWS)) ) - -destroy(-dog / Stark,destroy(0.25)) - betray() / bar(( 76 ) * ( Sansa ),-protect())),mislead(protect(rule(( destroy(bar(-( protect() ) + rule(TABLE[( foo(-( ( x ) )) )][-43] * ( TABLE[Hodor][Jon] ),TABLE[COLS - Stark][Hodor]) / -COLS),--890.112) )),0.82)),--( Jon )),550.4146 / ( ( -Ygritte ) ))
};
	-0.86
}
var Jon = mislead(mislead(rule(81 + COLS),TABLE[dog][-COLS],ROWS))
def TABLE[Sansa + -0.32 * x][i] {

}
var Jon = -dog
def destroy(Ygritte,Arya,dog){
	Ygritte += ( -ROWS * COLS * ROWS );
	if(TABLE[-33 / -1][( ( Jon ) )]){
	Hodor /= Stark
};
	if(destroy(y,-( Jon ),-0.89)){

} else {
	if(Stark){
	dog *= foo(-0.49,98,rule(rule()));
	( protect(-COLS + -( -TABLE[mislead(4)][betray(Ygritte)] + ( y ) ),-TABLE[-x - destroy(dog)][-0.6]) / x )
} else {

}
}
}
def mislead(y){
	Ygritte += betray(foo(mislead(( bar(Arya) ),91 / TABLE[16 + Jon][( --( 0.07 - TABLE[Arya][-0.83] ) ) * -680.8 - ROWS],--19),--0.54 * destroy(( ROWS )),( ( ROWS - -0.73 + ROWS ) ) - bar())) * -bar(y,betray(--bar(COLS)) / -0.02) / dog - --ROWS * ( Ygritte ) - 0.71
}
def TABLE[ROWS][i] {
	if(y){
	ROWS;
	if(-( ( ( -rule() ) ) )){

}
} else {
	Ygritte /= ( ( ROWS + 820.76 ) / Stark )
}
}
def bar(y,dog,Stark){
	TABLE[( rule(protect(rule(10.0902),( ( COLS ) * COLS ),COLS - Ygritte),ROWS,Stark) )][-protect(-1 * destroy(( ( TABLE[-570.19][ROWS] ) ),--1))]
}
def TABLE[270.8][k] {
	if(TABLE[Jon][y]){
	if(( 1 )){
	if(-1){
	Stark /= -80 + -ROWS / ( ROWS )
};
	y -= mislead(--ROWS);
	if(-600.111){
	if(-COLS){
	( protect(-Jon,Hodor) )
} else {
	Arya /= ( --( TABLE[-( dog )][-y + ( 0.76 ) + -destroy()] ) )
}
} else {

}
};
	if(-destroy(( --0.11 / ( -0.62 ) ),-Jon,-600.349)){
	if(0.31){
	-TABLE[-1 * mislead(dog,foo(( COLS ),COLS,mislead())) * --TABLE[-foo(( ( ROWS ) ),-( -1 ))][-destroy(-rule(-( -foo(---( destroy(( Ygritte - foo(ROWS,x,TABLE[TABLE[-0.05][ROWS]][-TABLE[( Sansa )][TABLE[-1][dog]]]) ),0.18) ) + bar(-bar(ROWS),mislead(-destroy()),Ygritte * foo(1,foo(bar(),-foo() / -foo(( ROWS ) + ( foo(Arya - x / x,TABLE[( COLS )][foo(TABLE[( ( -25 ) )][betray(COLS + mislead(0.1 - -0.37,ROWS,---protect()))],-78 - y)]) ) + ( -Stark + ROWS ) / mislead(-17,COLS),dog),ROWS))) / ROWS,COLS,59) )))] * -foo(-920.318) - -Ygritte * TABLE[( ( dog ) )][rule()]][Hodor]
};
	( 8 ) / dog
} else {
	if(Jon){
	if(y * ( Sansa ) / betray(( betray(--( -1 ) / ( -( ( -1 ) ) ),ROWS,bar(0.2,-0.71)) ))){
	protect(COLS,-TABLE[84][TABLE[mislead(mislead(mislead(--mislead(0.49),( ( ( y ) ) + dog * ( -750.6 ) - ( -1 * -TABLE[( --94 )][rule(TABLE[( -930.4 ) * ( ( -470.57 - -1 ) )][-ROWS],10,COLS)] ) )),( destroy() ),Arya + Sansa + y))][0.83]])
} else {

};
	mislead(y,rule(( COLS )));
	( ROWS )
} else {
	if(-36){
	dog /= ( 29 )
};
	Stark
}
};
	Jon -= betray(-1,protect(destroy(-Jon),Stark)) + ( TABLE[COLS][-Arya] ) * ROWS
};
	x += betray(-foo(( destroy(x) + x ),protect(ROWS)) * ( -0.02 * ( foo(0.57) ) ),( 1 + ( COLS ) ) - Sansa) + ROWS
}
def TABLE[-49][i] {
	COLS * --39;
	if(( protect(mislead(( ( ROWS / -TABLE[betray(foo(TABLE[foo(-Ygritte,-ROWS + foo(-92 + ( Arya * COLS ) - -830.5 - -1 - ( ( 0.49 + Ygritte + -dog ) - foo(( bar(--0.04 * protect(( Hodor )) * -( y ) / -betray(ROWS),( betray(dog) )) )) ) * COLS),0.55)][COLS],--98))][( -1 ) * mislead(ROWS)] ) ),-TABLE[Stark / COLS - destroy(COLS)][-0.55])) )){
	if(( -( ( protect(-Ygritte) ) ) )){
	Sansa /= ( TABLE[Ygritte][ROWS] )
} else {
	Arya -= bar(--TABLE[1][( ( -46 ) )] * ROWS / ( COLS ));
	if(--y){
	Ygritte *= dog;
	if(( dog )){
	x /= -630.6298;
	-0.02
};
	rule() * -dog / ( mislead(290.1 * ( 0 ),Ygritte) )
};
	y += -49
};
	x /= ( ( ( -0.01 ) ) )
} else {
	Hodor /= Stark;
	y *= --0.79
}
}
assert rule(--foo(12 + Stark,foo(Arya,destroy(( COLS ),( Hodor ),Arya),TABLE[-( mislead(1,( 0.19 ) + ( Hodor ),0.5) + TABLE[---( Jon )][-bar(----bar(),rule(TABLE[--86][-1],-0.92,ROWS))] )][( foo(Sansa) )] * ( --56 + -rule(-( ( ROWS / TABLE[-( destroy(COLS) / ( -bar() ) ) + -mislead()][ROWS] + -COLS * 0.29 + ( ( ( ( ( ROWS ) + Sansa ) ) ) ) ) )) )),( mislead(( --0.94 / destroy(Sansa,( 91 )) - ROWS / 0.89 ),170.2 + foo(0.33,-1,dog),Arya) )),y) : "Fear cuts deeper than swords."
var Sansa = -x / COLS
def TABLE[-650.5][j] {
	dog *= destroy()
}
var Ygritte = COLS
def TABLE[Ygritte][j] {
	if(-1 - mislead(-450.69)){
	Ygritte -= COLS - ( 30 );
	( ( rule() ) )
};
	Hodor /= 33
}
assert 0.22 : "Fear cuts deeper than swords."
def TABLE[( ( COLS + ( Arya ) * TABLE[TABLE[1 * ROWS - ( -bar(ROWS,mislead(Jon,-( ( Hodor ) ))) )][rule(COLS,( -bar(( foo(TABLE[Hodor][( Stark )]) )) )) + 0.46 - Stark]][-( x )] ) ) * ( Stark )][i] {
	dog;
	if(bar(( 92 ))){
	if(Sansa / ( betray(Sansa / ROWS) ) + COLS){
	--foo(-0.187,COLS) + 89;
	foo(bar(),-0.31 * destroy())
}
}
}
def TABLE[( ROWS )][k] {
	protect(( y ),( COLS ))
}
def foo(){
	--0.78;
	Ygritte -= Ygritte
}
def protect(Jon,Ygritte,Ygritte){

}
def TABLE[Jon - -1][i] {
	Arya -= -81
}
var Arya = 52
def foo(x,y){

}
def betray(dog,Hodor){
	if(Ygritte){
	Sansa;
	-( x );
	if(( COLS )){
	if(( -33 )){
	betray(destroy(( Ygritte ),( ( COLS ) )) + ( TABLE[-ROWS][Jon] ) * Sansa) * Sansa;
	if(ROWS * ( ( 1 ) - --foo(Sansa) + ( -0.12 ) / -Jon )){
	Stark -= ( --0.17 * destroy(-TABLE[y][ROWS] / -mislead(( x ),-( TABLE[( ( -ROWS ) ) * -1][( COLS )] ),rule(dog,Ygritte)) / -720.585 * ROWS + destroy() * --1,-58) )
};
	-390.3301 + -protect(TABLE[-( ROWS )][-79])
}
}
} else {

}
}
def mislead(Arya){
	Ygritte -= -( ( ( -protect() ) ) )
}
def TABLE[( -0.81 )][k] {
	-0.12
}
def rule(){
	-1
}
var Ygritte = ROWS
def betray(Jon){
	Stark *= ( --mislead(ROWS,protect(dog + ( -0.21 ),mislead(3,betray(TABLE[ROWS][COLS],-TABLE[0.21][910.6948]))),mislead(betray(-3,-x))) );
	if(( -bar(( dog ),mislead(( TABLE[--0.07][ROWS] ) * x,rule(),TABLE[( Stark )][ROWS]) + rule(protect(),COLS)) )){
	( -( ROWS ) )
} else {
	if(-2){
	( Sansa );
	if(-0.72){
	if(-59){
	if(COLS){
	Hodor *= ( 23 )
};
	if(( betray(bar(0.97)) )){
	bar(0.19 / ( -14 ) * -51 * -( TABLE[TABLE[25 * 67][rule(( ( TABLE[Arya - TABLE[Arya - TABLE[mislead(1)][COLS * -Arya] + dog][Jon]][protect(rule(protect(TABLE[y][-destroy(( -0.96 ),2,Arya) / 24] - ( Jon )) / -2 / -Sansa / COLS))] ) )) * 0.02]][Stark] ),-protect())
} else {
	Ygritte -= -mislead(Arya,0.36);
	foo(dog,bar(-19,Arya,Stark))
};
	TABLE[bar(-1,Ygritte,( ( ( dog ) ) ))][-( COLS ) + Stark]
}
}
}
}
}
def TABLE[x][j] {

}
assert Stark / --670.8 : "What do we say to the Lord of Death?"
var Hodor = ( ---ROWS * dog - ( rule(TABLE[-Jon][ROWS]) ) )
def TABLE[( TABLE[-Sansa][protect(mislead(-foo(( Hodor ),Stark,Arya - bar(4,protect(( ( betray(mislead(COLS - -Arya / ROWS,-0.63,ROWS - 590.4564 * ( -Arya ))) ) )))),0.73 / mislead(-Jon,ROWS)),-TABLE[y][-betray(-betray(ROWS,-y * -34 + TABLE[protect(Jon) + rule(( ---ROWS ),1,protect())][-1] + foo(-Jon,ROWS,mislead(COLS,mislead())) / ( -1 ),( -( foo(rule(Stark),-18 - x + rule(0.95)) ) )))])] * -5 )][k] {
	if(( y * -240.11 - -TABLE[( bar(y) )][-rule(-( -450.5 ),TABLE[1][ROWS])] )){
	-97
} else {
	y -= ( ( 1 * COLS ) - 84 )
}
}
assert --0.08 / -destroy() + ( ( protect() ) * ( y ) - TABLE[ROWS][mislead(TABLE[( -bar(y) )][( -340.482 )],betray())] + -destroy(( -25 ),Hodor) / 1 ) : "Winter is coming"
def TABLE[foo(( ( y ) / 93 / ( -1 ) ),( ( -Jon ) ))][i] {
	Jon;
	( ( Stark ) )
}
def TABLE[-330.558][k] {

}
def TABLE[protect(( --1 * rule(foo(ROWS,-3) + ( Hodor ),0.54) ),bar(ROWS),foo(-( Ygritte ),rule(0.07,-6,----0.6)))][j] {

}
def foo(Arya,Jon,Hodor){
	if(1){
	Sansa;
	Hodor /= -Ygritte
}
}
def rule(Ygritte){
	Jon *= ROWS;
	if(rule(-COLS,45)){
	TABLE[Ygritte][( x )]
}
}
def TABLE[TABLE[ROWS][Ygritte] - ( --( 1 ) + protect(( betray(COLS,COLS) ),16 - COLS / y) * destroy(-21,1,COLS) )][k] {
	if(COLS){
	y -= -ROWS;
	COLS;
	Sansa += ROWS
} else {

};
	if(-bar(-910.338)){
	--0.7;
	0.26;
	if(x){
	destroy(Ygritte,64)
}
} else {

}
}
def TABLE[0.71][i] {
	if(( ( Hodor * -0.17 + -( Jon ) ) ) - -420.772 / -1){
	y += ( ( ( x ) ) )
};
	if(Jon){
	if(-1 * ( ( -0.97 * mislead(-bar(mislead(-5,TABLE[x][TABLE[rule(Jon)][-Arya]] + ( destroy(( 90.7518 ),TABLE[x][TABLE[--0.15][Sansa] / protect(( 87 ),mislead(COLS,Hodor,( -0.5 )))]) )),foo(-80.27),mislead())) / bar(-mislead(destroy(0.9),rule(-2),( mislead(y / rule() * -TABLE[dog][4 - 0.02],-0.55,TABLE[TABLE[-1][destroy(Sansa * ( ( COLS * ( ( dog ) ) ) )) * ( ( rule(( 9 ),COLS,-32) ) )]][-0.33] / y) + ROWS )),( bar(--betray()) ) - -( ( ( betray(-destroy(( -0.76 ),70,0.2),ROWS) ) ) )) ) )){
	if(( TABLE[dog / 0.53][dog] ) / ( 40 )){

};
	Sansa /= ( COLS + -( -590.715 ) * Ygritte - bar(-0.82) );
	-bar(-740.665 - TABLE[0.28][560.92 / foo(-Arya,-mislead(75))],ROWS,dog)
}
} else {
	if(Sansa){
	if(TABLE[Sansa][foo(-60)]){
	-bar(-1,---5,Hodor);
	ROWS
}
}
}
}
var Sansa = ( Stark )
def TABLE[( Stark )][k] {
	if(-Hodor){
	dog += x;
	Hodor *= 540.709
} else {
	Ygritte + TABLE[TABLE[rule(( -0.27 ),-foo() + COLS,TABLE[foo(-bar(Stark,-( dog / ---Hodor )),ROWS)][1])][( -1 )]][Hodor];
	( COLS )
}
}
var Ygritte = 0.29
def TABLE[COLS][k] {
	if(COLS){
	if(0.35){

} else {
	Sansa += ( -1 );
	if(destroy(destroy(---dog,( y ),-( Jon * rule(( bar(-( -destroy(-TABLE[-ROWS][-destroy(( COLS ))] - 0.64,( Arya ) / -bar(( -( Hodor ) - TABLE[Jon / ( 63 ) / TABLE[-COLS - COLS / foo()][TABLE[dog * ( destroy() )][23]] / -1][y] ),TABLE[ROWS][Hodor])) ),-1,COLS) )) )),-Hodor,5)){
	x
} else {

};
	if(COLS){
	if(0.09){

};
	if(( Sansa )){

}
}
}
};
	if(betray(0.95 * ROWS)){
	protect(betray(( -rule(-67 + Jon - -0.31) ),( bar() ) - COLS * x),-10.842,0.97)
}
}
assert rule(ROWS,y * -ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Hodor,x){
	-foo(y,--destroy() - ( Sansa ),betray(630.6872 + ---0.47 + TABLE[-TABLE[Ygritte + ( -270.264 )][( -7 )]][y] - -74,TABLE[-490.1][rule()],( ---dog + bar(bar(( -0.98 ))) ))) * betray(64 - -0.3,y);
	if(foo(93)){
	dog -= protect(Sansa,x / betray(( ROWS )))
}
}
var Jon = bar(COLS / rule(Arya - ( -Ygritte ) - Stark,( dog ),190.488) - betray(0.89) - 34,-0.35 * foo(( --Arya ),COLS - -( Jon )))
def TABLE[87 + --protect(0.3,COLS,( COLS )) - --Sansa][i] {
	TABLE[-0.32][( betray(--( ROWS + -( -ROWS ) ) * rule(),bar()) )];
	Arya /= bar()
}
var x = TABLE[dog][x] / --0.99
assert x : "Winter is coming"
assert -0.53 : "Winter is coming"
def mislead(y,dog,Hodor){
	bar(COLS)
}
def TABLE[( 1 )][i] {
	y /= -( dog )
}
var dog = ( TABLE[---mislead(( COLS ))][-destroy(( ( 1 ) ) * -foo(( ROWS ) - ROWS) * -destroy(--25,x))] )
var Stark = rule(ROWS,Ygritte)
assert COLS : "What do we say to the Lord of Death?"
def mislead(Ygritte){
	Sansa /= -0.88 + ROWS;
	( ( betray(-75,420.8409) ) )
}
assert destroy() - ( ( 73 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(y){
	Jon *= protect(( destroy(-( ROWS ) + Sansa) ),protect(COLS,foo(TABLE[mislead(protect(( ( COLS ) ),Stark) / COLS + TABLE[--64][( mislead(( -0.95 )) - 490.794 )] - ( dog / destroy() ) + protect(--1 + ROWS))][-foo(-( ( -0.67 ) ),-0.4)]))) + --ROWS + ( TABLE[-ROWS][Jon] ) + Ygritte
}
var Ygritte = -0.43
var x = ( ROWS * -( TABLE[rule(TABLE[-Stark][-COLS],( ( TABLE[1][0.64 - -74 - betray(0.95,( ( ( destroy(foo(0.61,COLS)) - 0.41 ) ) ),( -( COLS ) ))] ) ),-( Ygritte ))][0.59] ) * destroy(Stark,-rule(-1 / dog),-530.17) ) + ( ( TABLE[( Hodor )][foo()] ) ) * -4
def TABLE[53][k] {
	-ROWS / -36 - ( --rule(mislead(dog),-10.96,Hodor) );
	y -= ( Hodor );
	foo(TABLE[COLS / --( ( 0.94 ) )][--1])
}
var Hodor = bar()
var Jon = TABLE[betray(( betray(--0.38) ),rule(TABLE[( betray(TABLE[destroy(Stark)][1]) ) * -TABLE[bar(-490.65)][-dog] * -( ROWS + ROWS - -TABLE[-( TABLE[rule(y,Arya)][62] ) * -88][( COLS )] )][destroy(( -570.474 ))],bar(10.122,-TABLE[Hodor][( -1 )] / ROWS / -Ygritte)))][Jon]
var x = TABLE[-80.2038][Jon]
def foo(x){
	if(-( Ygritte )){
	if(( destroy(betray(-----0.85 + COLS,Hodor + ( --betray(( 20 ),ROWS - ( ( protect(foo(protect(),TABLE[-960.53][-( ROWS ) - --( protect(Hodor,( x )) ) / -1],-700.71) * -50) ) )) )),x) )){

} else {
	-13;
	-65
};
	if(betray(ROWS)){

} else {
	if(92 * ( 13 )){
	Ygritte -= -( destroy(COLS,COLS - ROWS) * betray(TABLE[Sansa][0.87],( x ),betray(ROWS)) ) + foo(-( COLS ),x);
	Arya /= bar(-50.95,Sansa,betray(destroy()))
};
	if(( -protect(--mislead(( -0.35 ),protect(TABLE[y][protect(( COLS ),-bar(-1 * COLS,-( TABLE[( 0.55 )][TABLE[TABLE[y][y - ( rule(( --770.414 ),COLS / COLS,( 1 )) ) * x]][mislead(TABLE[( -COLS )][COLS] + -0.09,-370.25,-foo(COLS - -0.99,( ----betray(( x ),Hodor) + --0.32 + ROWS * ( ROWS ) * ( TABLE[( ROWS )][-( COLS )] ) )))] / ROWS - ( 0.71 + ( ( ROWS ) ) )] )),-( dog ))],TABLE[ROWS][ROWS] + mislead(( foo(---1,foo(TABLE[-350.41 + -0.48][Ygritte]),0.24) ),mislead(0.02,0.48),ROWS)),-180.571),82) )){
	Ygritte /= betray()
};
	Arya += 470.9
}
} else {
	if(betray()){
	ROWS;
	( betray(foo(-bar(betray(Sansa),Stark) * ( betray(---protect(rule(( -0.81 ),0.32))) )),0.2) )
} else {
	Jon *= mislead(( ( Sansa ) ),Hodor,Arya)
};
	bar(Arya);
	Ygritte -= 1
}
}
var y = --TABLE[-( --Jon * ROWS * rule(x) / 24 )][Hodor] - -19
var y = ( -Arya )
assert TABLE[TABLE[--87 / -1][Ygritte]][-Jon] : "Fear cuts deeper than swords."
def TABLE[Arya][j] {
	if(Stark){
	if(-Ygritte){
	Stark += COLS
} else {

};
	y /= betray(( COLS ))
};
	Arya *= Hodor
}
def TABLE[40][i] {

}
assert TABLE[protect(-870.31 / -1 * rule(Hodor,bar(Arya)))][y] : "What do we say to the Lord of Death?"
var Ygritte = ( TABLE[-( protect(-( -Hodor )) )][COLS] )
def TABLE[Sansa - x * -mislead(24) + --ROWS][j] {

}
def TABLE[1][j] {
	y;
	x -= ( Jon )
}
def TABLE[-y - foo(COLS,Sansa)][j] {
	Arya -= ROWS;
	if(Arya){
	if(-ROWS){
	bar(ROWS)
} else {
	Hodor *= protect(-( COLS ))
}
} else {
	-29 * -89;
	Jon *= ( -mislead(( Arya * COLS * TABLE[-0.76][COLS * y] + ( -bar(( Jon ),bar(--( -0.61 ) / -350.0486,( Sansa ),rule(rule(COLS,rule(Ygritte,betray(ROWS,( Sansa ),Jon))) + 0.9,bar(( ( Stark ) ),TABLE[TABLE[foo(Arya)][-Ygritte]][---( ( -( 1 ) ) ) - -COLS]))),-destroy(( Jon / 1 ) * COLS,-foo(82,Ygritte) / protect() - TABLE[ROWS][( -0.02 )],ROWS) + TABLE[COLS + -6][x] - --protect(Sansa,Hodor) / Hodor) ) )) ) + ( TABLE[betray(COLS)][ROWS] + ( 81 ) )
}
}
def mislead(Sansa,Ygritte){
	-rule(41,( y ))
}
def rule(Stark,Sansa){
	dog;
	3;
	betray(( -COLS ),-0.2) + Sansa / ROWS
}
def mislead(Ygritte,Arya){
	if(1){
	Stark /= COLS / Hodor
} else {
	Hodor *= ROWS;
	x += TABLE[rule(Hodor)][rule(( destroy(( --0.94 ),y,-0.81) ))]
};
	if(betray(-29) - 0.65){
	if(Sansa - Jon){
	if(( mislead(TABLE[TABLE[-52][rule()]][-( Arya ) * ( -0.34 )] / COLS) )){
	Sansa *= TABLE[Ygritte][---TABLE[-destroy()][protect(TABLE[rule(( bar(mislead(-( ( protect(( y ),( -( ROWS ) )) ) )),( ( x ) )) ))][--( dog * ROWS * betray(( TABLE[--bar(Arya,dog,ROWS)][Stark] ),Sansa) ) / -66],( 0.09 * -0.1 ))] * 1];
	Ygritte += bar(ROWS,protect(-bar(),( ( betray(x) ) )))
} else {
	betray(Stark)
};
	Stark
} else {
	if(bar()){
	Stark -= -TABLE[betray(-Sansa,( bar() ))][ROWS]
};
	if(Ygritte){
	if(-Ygritte / x){
	if(-360.36){
	Arya /= ( destroy(-92,-rule(rule(rule(9,mislead()),ROWS)) / rule(620.697,1 + ---ROWS)) )
} else {

}
};
	-bar(TABLE[1 * ROWS - Ygritte - TABLE[Arya + bar(Sansa) + ( rule(1,Hodor,betray(ROWS,foo())) ) * ROWS][mislead(mislead(-TABLE[-COLS][( bar(dog) )] * ( bar(220.0959,--0.41) ),-dog),destroy(Jon,destroy(-1 + mislead(( ROWS ),destroy(COLS + 1 - 45 + -x,TABLE[COLS][( TABLE[-280.804][y / Arya] )],betray(dog)),TABLE[Stark][TABLE[( -( --ROWS ) * bar(rule() / TABLE[-COLS][y],( TABLE[ROWS][Arya] )) )][-Ygritte]]),destroy(mislead(COLS,( 70 ))))))]][-1])
} else {
	TABLE[x][y];
	if(betray(--53)){
	Stark *= Stark;
	if(bar(y)){

}
}
}
};
	if(41){
	( ROWS );
	53 / 1;
	if(Jon){
	Sansa /= -450.2;
	y += x
}
} else {
	x *= --1 * -0.44
}
}
}
def TABLE[Jon][k] {
	y += rule()
}
def protect(Stark,Ygritte){
	-93
}
var x = Sansa
assert --TABLE[TABLE[destroy(( -y )) - betray(--0.64)][-30.1]][--y * 73] : "Fear cuts deeper than swords."
assert -TABLE[dog / 1][destroy(betray(( 200.5 / Arya ),Stark,0.36) + ( ( -0.95 ) ),4)] - ( TABLE[( -Sansa / 17 )][-( ( Jon ) )] * 0.57 / COLS ) : "Winter is coming"
def rule(x){
	-0.84;
	Jon += TABLE[protect(protect(( --0.83 * betray(ROWS + ROWS + x,( Ygritte + ROWS )) / rule(Hodor) + ( TABLE[dog][destroy(-ROWS,ROWS)] ) / ( 1 ) ),-530.78) - COLS) - --Jon][dog]
}
def TABLE[TABLE[bar(TABLE[TABLE[0.28 + COLS][( ( -Jon ) )]][-1])][foo(mislead(COLS,ROWS) * ( -350.9 ),bar(ROWS,-protect(( ( TABLE[-38][--( -500.42 )] ) * foo(35,( Sansa ),83) ),destroy(-ROWS,Hodor),COLS / ( TABLE[y][( protect() ) * COLS] ))))]][k] {

}
def TABLE[Stark][k] {

}
var Hodor = -95
assert TABLE[protect(Hodor - ROWS,-mislead())][TABLE[-COLS][-0.73] - TABLE[( ROWS )][( ( Stark ) + protect(-0.32,-0.81) )]] / -TABLE[destroy(( -protect(-19) ),-( 0.89 ),bar(COLS))][bar(( mislead(rule(-( -1 + mislead(destroy(bar(TABLE[x * -( -y - -1 / Hodor )][Ygritte]),ROWS / Sansa),ROWS) )),530.738) * 45 ),( --1 + ROWS ),betray(-1 + ( Stark ) - destroy(--67,Sansa)))] * -0.03 / COLS * ( --3 + COLS / COLS ) + COLS : "What do we say to the Lord of Death?"
def TABLE[-Arya + -70 / ( -ROWS - 1 )][i] {
	Jon -= foo();
	--ROWS;
	if(TABLE[Jon + -0.25][TABLE[( protect(Stark,( --COLS ) / -Hodor + TABLE[TABLE[-rule(COLS)][bar(-0.81)]][TABLE[mislead(-1,protect(Hodor,ROWS),destroy(COLS))][1] - TABLE[dog][TABLE[destroy(-TABLE[ROWS][destroy()] + COLS,-1)][-x - -18 + destroy(TABLE[TABLE[y][mislead()]][ROWS],mislead(rule(-35,0.85,-( TABLE[x][( COLS )] ) * rule(( Stark + ( COLS ) / -destroy(330.92 + 19,bar(mislead(ROWS),COLS - ( 1 ))) ),( ( -COLS * Hodor ) ) - Stark))))] + ( Ygritte )]]) )][Jon] * --1]){
	Jon -= -( TABLE[-99 - destroy(betray())][-x] );
	if(( x )){
	if(x){
	if(88){
	Stark += ( Hodor )
};
	dog /= TABLE[ROWS][-protect()]
};
	if(( -y )){
	if(-1){
	( -520.88 );
	rule(0.48 * TABLE[( TABLE[( ROWS / 680.9891 )][betray(foo(-( TABLE[-bar(( 4 ),ROWS,( 1 )) - TABLE[foo(-TABLE[( foo() )][80.128 + bar(Sansa,( -betray(-( TABLE[( -30.442 )][-Hodor] ),-x) )) / -( 80.638 )] + ( --ROWS + Hodor ),( --betray(TABLE[foo(betray())][-93]) ))][-ROWS / -64]][-64] ) / -73,-( 550.247 ) + ROWS,bar(ROWS * COLS,TABLE[COLS][-y - 0.99])),-ROWS * -ROWS)] )][Hodor]);
	if(destroy(dog)){

} else {

}
}
} else {
	if(----480.42){
	if(49){
	Arya *= ( -1 );
	if(--370.1 / mislead(-COLS,foo(TABLE[-0.41][rule(--0.04)],---33),0.72) / -390.57){
	x += COLS;
	if(-74){
	Ygritte /= bar();
	mislead(( 2 ))
} else {
	ROWS
};
	Stark *= ( ( ( Stark - Jon ) - ( Jon ) ) / dog )
} else {
	if(-0.87){
	if(protect(ROWS)){
	if(Jon - Stark){

};
	x -= protect()
};
	--620.9
}
};
	dog /= ( y )
}
} else {
	if(-( ROWS / TABLE[( ( -1 ) * ( COLS ) ) + -ROWS / Sansa][-0.55] )){

} else {

};
	y += -y + --bar(( destroy(----300.31 - rule(-760.977) * Ygritte) ),-730.3349) * -0.7 + ( -( foo(0.95,( ( betray(-0.03) ) )) - 0.03 ) ) * Jon
};
	if(protect(ROWS)){
	if(Arya){

};
	7 - ( -bar(-60.1892 / ROWS,Jon) )
};
	1
};
	-COLS - -1 * TABLE[TABLE[-( COLS ) / 33 + rule(Sansa)][COLS * -dog - rule(Arya)] + ( TABLE[20][( Sansa )] )][-TABLE[TABLE[TABLE[( -Ygritte )][0.29] - -TABLE[-Arya][( protect(ROWS) + foo(dog) )] / 73 + ( -rule(COLS,TABLE[-Ygritte][( COLS )],0.68) )][46]][( Stark )]]
};
	Hodor *= ( 85 )
}
}
assert -0.44 : "One can not simply parse himself"
def foo(Sansa,Hodor,Arya){
	y *= ( -foo(( ( -83 ) )) );
	if(-COLS){

} else {

}
}
def bar(){

}
assert -( -190.63 / ( ( --Jon * COLS ) ) - Ygritte - mislead(ROWS,COLS,0.35) ) / rule(COLS + bar(( -68 )) - ( foo(( Sansa * -90 - destroy(COLS) )) ) / -270.1953,TABLE[-( Jon ) + ROWS][( TABLE[( ROWS )][rule(-0.52)] - Sansa )]) / -( -0.74 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( TABLE[COLS][ROWS] )][j] {
	if(bar(-ROWS,--Sansa - ( x )) / ( --Jon + -ROWS )){
	if(foo(-destroy(destroy(-1),-130.61) / ROWS / ( -0.68 ) / ( -50 * --Stark - TABLE[-destroy(TABLE[-( ( rule(-y) / TABLE[-( bar(foo(( -0.94 + 17 * COLS ),ROWS),Sansa - ROWS / Jon / -dog) )][Ygritte] / protect(y + mislead(COLS) * ( -0.05 + TABLE[-0.44][Jon] ),( x )) * COLS / ( -39 ) ) )][TABLE[( COLS - 0.41 ) * -( bar(-( 0.44 ) * -Ygritte) )][betray() / -( Stark )]],-( 38 - ---mislead(TABLE[0.84 / mislead(( -destroy(170.61 - betray(mislead(Ygritte,COLS + ROWS)),( betray(---ROWS,dog,bar(COLS,21)) * -34 )) ))][Hodor],Sansa) )) * ( ROWS )][--0.99 - foo(COLS,1)] * rule(-600.58) / ( ( Arya ) ) ) + --53 + TABLE[COLS][---73] + -1,--62)){

};
	if(betray(x)){
	if(protect(TABLE[-710.6][ROWS])){
	-TABLE[( -4 ) + --betray(TABLE[y][protect(bar(-COLS,Stark),foo(destroy(),Stark))] / --Sansa - ( TABLE[y][-620.884] ) + Arya / --( dog ) + --1 * mislead(Stark) - -protect(rule(0.41,( ( ( ( protect(Ygritte,( TABLE[COLS][( Ygritte + ROWS )] ),Hodor) ) ) ) ),--( x )) * ( ( ( bar(TABLE[Stark][bar(( 490.3 ),bar(),x)],-( --1 * dog )) * 13 / -Sansa ) ) ),( 1 + dog * -dog + ( ( rule(TABLE[-0.2 + -1][( protect(-37) )],( ( ( Jon * ( ( -betray(( TABLE[COLS][--0.53] )) ) ) + bar() ) ) ),--COLS / COLS) ) ) * ( -1 ) )) + -COLS - -1)][protect(0.35,25)];
	( y ) / COLS
}
} else {
	if(( -440.43 )){
	( Ygritte );
	if(-290.265){
	if(( ( mislead(-Hodor + bar(dog,ROWS),-( ROWS ),( Arya )) + x * COLS ) )){
	Sansa += ( ( -1 - -Sansa + ( bar(0.63,TABLE[-39 * betray(protect(Ygritte,protect(Arya)))][-dog]) ) ) )
};
	Jon
} else {
	( -0.01 / Jon );
	TABLE[protect(betray(-Sansa,( ( y / ( dog ) ) )) * -0.96 * 1,ROWS)][destroy(-y,ROWS + 1,( -0.4 ))]
}
} else {
	dog *= Stark - ( ROWS + betray(--Stark + betray(TABLE[( betray(0.14) ) + -550.25][ROWS - -0.06] - destroy(( protect(rule(x,bar()),y,-1) ),TABLE[Sansa][y],980.058)) - -COLS * --TABLE[COLS][Sansa]) )
}
};
	x + Jon
};
	if(bar(Hodor,ROWS,bar(betray(TABLE[( -65 / -430.38 / foo(ROWS) - COLS * betray(-1) * 370.361 )][x]),-12)) / rule(-destroy(COLS) * ( Hodor ),protect(bar(--84,x * -COLS - -0.56),Hodor,rule()))){
	Hodor /= TABLE[--0.38 / ROWS / foo(( ( mislead(( Ygritte ) - destroy(ROWS,-0.6,( -1 )) - destroy(-y,--53)) * Arya ) ),280.782) * --COLS / ROWS * 1][ROWS];
	if(-590.5624 / Stark - --0.96){
	Ygritte += 0.13;
	if(( TABLE[dog][rule(foo())] )){
	-( -Arya - -1 + dog ) / 0.22
} else {
	if(protect(-ROWS,-0.35)){
	if(-1){
	if(690.3 + -890.09){
	if(Hodor){
	( --protect(-0.81 + -ROWS / ( -Hodor )) - dog );
	( -74 / ROWS )
};
	Arya *= ( -Hodor )
} else {
	if(-Hodor){

}
};
	protect(Stark / 0.56,720.91,COLS)
} else {
	if(foo(( bar(dog * ( ( Ygritte ) ) - Sansa,830.725) ))){
	Ygritte *= ( Hodor );
	if(-ROWS){

}
} else {
	x *= TABLE[mislead() - Stark - -betray(( COLS ),870.36 + foo(Stark) - -COLS) - ( ROWS )][protect(( rule() * -y ),-1)]
}
};
	-COLS * foo(--1);
	-( ( Stark / protect(TABLE[TABLE[-60.6426][foo(ROWS,betray(1,ROWS,( bar(( Hodor ),destroy(TABLE[y][-( -470.463 )],Arya),TABLE[rule(Jon - ROWS / y,( COLS ),COLS - Stark)][Arya]) )))]][ROWS] / 1) ) )
};
	Jon /= TABLE[-COLS - ( dog )][-TABLE[-88][33]];
	( Arya )
}
} else {
	if(-1){

}
}
}
}
var dog = -( x )
def TABLE[bar()][i] {
	Hodor *= mislead(( ( Stark ) ))
}
def TABLE[-( TABLE[TABLE[( -1 + 590.089 / Arya )][--x]][-Jon + betray()] )][k] {
	if(foo(y - -( COLS ),COLS)){
	Arya *= rule(-Sansa)
};
	COLS
}
assert ( ( -( ROWS ) ) / COLS / Ygritte ) : "Fear cuts deeper than swords."
def TABLE[Ygritte / TABLE[rule(TABLE[COLS - ( -protect() * Ygritte ) - -130.8][protect(TABLE[( ( 0.62 ) )][Sansa * destroy(COLS,Stark)] + x)],COLS)][betray()]][i] {
	x /= ( -( foo(bar(( -rule(bar(TABLE[1][-0.5],( -59 )),Hodor) ),rule(foo(-180.32,83)))) ) )
}
var dog = protect(mislead())
assert --81 : "What do we say to the Lord of Death?"
var Ygritte = COLS
var Stark = COLS
var Ygritte = -( -970.547 )
def bar(x,dog,Sansa){
	if(ROWS){
	Ygritte -= --protect(Jon)
}
}
var Jon = -Ygritte
def betray(x){
	dog *= -x
}
var Hodor = COLS
def TABLE[-0.61][i] {

}
def TABLE[--1 / Hodor][i] {
	if(( -1 )){
	if(mislead(( Arya ))){
	( ( Arya ) / rule(( ( bar(-0.18,( COLS )) / -( mislead(Hodor,dog,-1) ) - COLS ) )) );
	ROWS
};
	ROWS
};
	ROWS * Arya * Arya
}
assert betray(910.0194) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -COLS : "Winter is coming"
assert TABLE[x][( -770.244 ) - -0.33] : "Nothing burns like the cold."
var y = TABLE[betray() * TABLE[dog][( TABLE[-54][dog * foo(x,-53 / Hodor * --1 * --dog / mislead(-Arya + 460.36) + foo(foo(rule(--betray(-950.982 * bar(),( ( Sansa ) )),y))),-( y ))] / bar(rule(( destroy(destroy(TABLE[ROWS][Hodor] - -ROWS) * protect(TABLE[x][-0.96],-mislead(Jon,-ROWS + Sansa))) ) / ( TABLE[betray(( -32 ) + ( protect(-destroy(),-( -0.27 ),( ( -0.93 ) )) * -340.61 / ---720.2 ) / ( -0.1 ))][( TABLE[-( -dog )][Arya] )] ),betray(( y ),-30.61 * Ygritte / -6,Hodor) + -dog),Hodor) - ( 1 * ROWS + Sansa * TABLE[-rule(TABLE[y][mislead(( Sansa ),-59,-TABLE[betray(0.36,-1,mislead(0.44))][( ROWS )])]) + ( destroy(( y ),Sansa) ) * destroy(-1,TABLE[TABLE[-17][-87 + foo(protect() + COLS) - dog]][-20],TABLE[protect(-74,bar(protect(( ROWS - -42 ))))][bar(TABLE[---( y )][foo(( dog ) + ROWS / 10,TABLE[1][-y])],Jon)]) + ( ROWS )][Ygritte - --ROWS + y + -( ROWS / dog / ROWS )] / ( -y ) ) )]][betray(bar(38,x + ( rule(COLS) ),1),dog,( -ROWS )) / -( 350.52 ) * betray(y,Hodor,0.16) - protect(0.98,Jon,Stark) - bar(protect(0.28,Jon),dog) + -COLS + -( mislead(ROWS,-16,TABLE[mislead(( --bar(--TABLE[( TABLE[bar(--mislead(24,-0.5,ROWS))][81] )][64 + ( ( -( ( x ) ) ) )] + ---1 * ( betray(( y + 68 ) - protect(-Jon) / ( 0.84 )) ),54) + TABLE[---580.54][( ( rule(TABLE[dog][protect() - ( -y )]) ) )] ),x)][-76] + COLS) ) - -TABLE[destroy(dog,ROWS) - ( TABLE[foo(0.63,( ROWS ) * --1,( TABLE[-COLS][( y )] ))][-98] ) / Stark + Ygritte + 22][-ROWS - 80 + ( Stark ) * ( ROWS ) + -Ygritte] / COLS]
def TABLE[x][j] {

}
var dog = 0.58
var Jon = TABLE[COLS][--( 1 )]
def mislead(Arya,Stark,Ygritte){
	x *= y - ( COLS )
}
var Arya = COLS
def TABLE[-mislead(rule(( foo(Ygritte,-( ROWS )) )),95,protect(destroy(protect(( ( -( protect(TABLE[rule(destroy(mislead(( ROWS ),destroy(),rule(COLS)),ROWS) / COLS)][COLS],87) ) / -Stark * x ) ) + -( COLS ),COLS,COLS),-dog,-0.65))) - ( ( foo(( ( ROWS ) ) * ( destroy(-0.27,-640.1) )) ) )][j] {
	if(-85){

};
	Stark
}
assert 670.86 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "One can not simply parse himself"
def betray(x){
	if(x){
	if(( -( Sansa ) + Hodor ) + destroy(( ( betray(---TABLE[--( foo(-95,-48,COLS) )][-Ygritte] + 0.13,-COLS,( COLS )) ) ),mislead(Stark,rule())) + -ROWS){
	dog += -150.6798;
	if(( foo(rule(COLS)) )){
	-Jon * bar(dog);
	destroy(ROWS,x,rule(( Jon ),-( -TABLE[-63][betray()] ),--0.2));
	Stark /= ROWS + -TABLE[( ( foo(dog) ) )][-y - Ygritte / TABLE[foo(y)][x]]
}
} else {

};
	y += -0.48 + COLS;
	dog -= -0.8 + ( destroy() / Ygritte ) - -39 * Stark
} else {
	TABLE[( rule(destroy(( TABLE[bar()][betray(ROWS,TABLE[dog][-54]) / -0.64] ) / Ygritte,foo(( ( foo(( protect(Hodor,TABLE[COLS][protect(-0.42,( 1 ))] * TABLE[Jon][Ygritte],-ROWS) * Hodor ),protect(( -ROWS ),1,( mislead(97,ROWS) ))) ) )) * 0.84 / COLS + protect(),rule(TABLE[-0.85][40 - -0.78],-( 0.5 * foo(--( bar(0.41,betray(mislead(( -( ( TABLE[----COLS][--1] ) ) )))) - ( TABLE[ROWS][--1 / rule(protect(),Sansa,( Jon ))] ) ) + ( x )) )))) )][1];
	if(mislead(-150.8,ROWS)){
	Sansa += Hodor;
	dog * ---( COLS );
	betray(Ygritte,( TABLE[( TABLE[betray()][-0.16] )][TABLE[( 20 * destroy() )][-Arya]] ))
}
};
	if(-0.69 + x){
	if(0.03 / TABLE[-COLS][x]){
	if(foo(( ( ROWS ) ),-1)){
	destroy(( Sansa ),47);
	Ygritte -= -TABLE[ROWS][61 / Arya + Ygritte];
	Arya *= -( -73 )
};
	if(rule(Ygritte,-0.17)){
	mislead(-ROWS,-destroy(y),-y - --1)
}
} else {
	if(Stark){
	-ROWS
} else {

};
	if(( Sansa )){
	Ygritte /= destroy(TABLE[Arya / ( ( y ) )][( -bar(-880.182 - -0.58 / Jon,--( TABLE[TABLE[protect(-( ( ROWS ) ),TABLE[-1][47])][( ( 1 ) / Hodor )]][Ygritte] ) * ---( ( COLS ) ) + -Ygritte) )],COLS)
}
};
	if(( 0.53 ) + --0.46){
	dog += ( -TABLE[-30.855][Jon] ) / TABLE[54][Ygritte] / mislead(-mislead(-Ygritte),-0.72) * ( ROWS );
	Jon /= -Hodor - -foo() - rule();
	if(bar(840.7)){
	Ygritte
} else {
	-( 0.8 );
	y += -1
}
};
	if(38){
	rule(Arya,( Hodor ))
}
} else {

}
}
def TABLE[0.55][k] {
	dog /= Stark - Stark * y
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Sansa][k] {
	y += -26 * x;
	if(-0.66){
	y -= dog
}
}
assert TABLE[-TABLE[-19][--83 - ROWS]][COLS] : "One can not simply parse himself"
var Ygritte = ( ROWS )
var Arya = ( ( Arya ) )
assert foo(destroy(),Arya) : "Fear cuts deeper than swords."
var Jon = --210.26
def TABLE[-( 0.92 ) / -Ygritte / protect(-0.84 - -0.44) + -0.41 - --120.47][i] {
	foo() + x
}
assert -230.884 : "What do we say to the Lord of Death?"
var Arya = TABLE[( -( COLS ) )][( ( ( -( TABLE[( protect(TABLE[COLS][-69],0.61 / --COLS / betray(-rule(-betray(--( --Sansa ),protect(-betray(( TABLE[ROWS][Arya] )))) - rule(-63),bar(protect(0.4),COLS))) + -mislead(( -1 ),( Arya )) + 0.87) )][( -Jon )] ) ) ) )]
def destroy(dog){
	Ygritte -= -0.27 - -620.77
}
assert -Stark - Hodor + -dog : "One can not simply parse himself"
def destroy(x,y,Stark){
	dog /= 1
}
var Ygritte = -destroy(betray(-1,dog) - protect(TABLE[ROWS / COLS][foo(COLS / 0.08)]))
var Stark = ( 45 )
def mislead(Arya){
	x -= ( y )
}
var dog = COLS
def TABLE[--64][j] {
	if(Sansa){
	if(Arya){
	Stark *= -TABLE[82][TABLE[( TABLE[53][y] )][Ygritte]]
};
	destroy(-1)
};
	Sansa /= ( ( -Arya ) );
	Sansa *= Arya
}
def TABLE[TABLE[foo(ROWS)][-1]][i] {
	if(( ( ( Jon ) ) )){
	COLS
};
	Arya *= -----920.2 / -43
}
var Ygritte = -76
assert -ROWS : "Nothing burns like the cold."
var Hodor = -230.801 / -0.12
def TABLE[ROWS][i] {
	Jon;
	Sansa *= ( COLS );
	( ( 0.32 ) )
}
assert ( Stark ) : "Nothing burns like the cold."
def rule(){
	bar(-0.02,y - COLS);
	if(COLS){
	if(destroy(ROWS,-Jon,TABLE[( foo(ROWS * ( -TABLE[Stark][32] )) / --foo() / 80.445 ) + -26][TABLE[( 830.1713 + ROWS / y ) - -0.49 * -COLS / -0.25][TABLE[660.408][ROWS]]])){
	Sansa += -0.18;
	if(TABLE[ROWS][x]){
	if(TABLE[( destroy(rule() - ---1 - betray() / betray(COLS),y) )][( -Jon / Hodor * ( x ) - ( ROWS ) / ( -0.55 * bar(destroy(foo(dog) + COLS,foo(mislead())) / -170.68,( ( ( TABLE[-0.97][COLS] ) ) ),dog) ) )]){
	-foo(( -COLS ),( protect(mislead(),foo(ROWS,COLS,ROWS - Sansa)) ));
	if(protect(TABLE[( rule(48) )][-35],1)){
	rule(dog,mislead()) - Hodor;
	if(Sansa){
	if(( -mislead(betray(-33,-ROWS),-bar(-0.02,y),---Stark - mislead()) )){
	1;
	y += y
};
	if(( -60 )){
	Hodor /= -dog;
	if(-mislead(destroy(dog,-Hodor + rule(Sansa)),-foo(( ( TABLE[Jon][-1] * protect(-COLS) + -COLS ) )))){
	bar(-0.49,mislead(Jon));
	if(x){
	-54;
	--910.71;
	if(( ( x ) + ( TABLE[-COLS][destroy(betray(( 89 )))] ) )){
	if(Sansa + dog){
	if(bar(mislead(),y)){
	Stark /= protect(ROWS);
	if(--0.06){
	if(Sansa){
	-1;
	Arya -= foo(-0.22,54)
} else {
	if(x){
	TABLE[( -400.11 ) + -foo(ROWS) * 770.9][TABLE[foo(x,( Stark ),-( Arya ))][bar(77,TABLE[-Stark][0.91])]];
	if(ROWS){

};
	rule(ROWS) + -( protect(( COLS + TABLE[-betray(TABLE[dog][protect(Stark)],-610.21)][bar(--( ( ( COLS ) ) - ( rule(Hodor) ) + ROWS ))] * TABLE[( COLS / 0.08 )][y] * COLS )) )
} else {
	if(-1 / foo(dog,mislead(TABLE[( --TABLE[-( ( ROWS ) ) + 720.039 + 1 * ( -71 )][-0.69] )][foo(TABLE[1][90],betray(),0.94) / ( ( rule(COLS) ) )],protect(--16,Sansa),dog),( ( -0.35 ) - -50.5606 ))){
	x *= Ygritte;
	if(( 1 )){
	if(360.283){
	-mislead(--Sansa);
	Jon *= --Hodor / -30 - dog
}
} else {
	if(x){
	x;
	if(mislead(1,( Sansa ) * Arya)){

}
}
};
	ROWS * ( -230.28 )
} else {

};
	Ygritte /= foo(( TABLE[--23 + Sansa][ROWS] ),Jon);
	( Sansa )
};
	if(-( ( TABLE[TABLE[Stark][Jon]][1] ) )){
	Sansa;
	y += ---200.509 / -Arya;
	Ygritte
} else {
	Arya += destroy()
}
};
	if(destroy(-48)){
	if(-520.6418){
	Jon -= ( ( -destroy(betray(betray(ROWS + dog / -COLS,rule(-1 * 410.12 + Ygritte + -1,-Sansa / ( ( ( ( x ) * protect() + mislead(bar(-850.6 / -TABLE[Ygritte][-TABLE[Ygritte][( COLS )]])) - ROWS + Sansa * -0.16 * Hodor ) ) ) + TABLE[---78][mislead()])),ROWS)) ) );
	dog -= Sansa
} else {
	( Jon );
	Jon;
	Arya * -TABLE[-destroy() * Ygritte][y] / Hodor
}
} else {
	if(1){
	y += y;
	if(1 - -43){

}
}
}
} else {
	-61
};
	( -Stark )
};
	if(rule(x * COLS,protect(Sansa),ROWS) * COLS * -Jon){
	TABLE[bar(-ROWS,-Ygritte,( foo(-foo(-( TABLE[--Arya][mislead(ROWS,ROWS,foo())] ) + 31,0.33,-bar(COLS - y / protect(dog) - Sansa) * dog)) ))][-rule(x,( protect() * 770.2 )) + bar(Sansa)]
} else {
	y /= Ygritte
};
	y -= ( COLS )
};
	-710.33
}
}
} else {

}
} else {
	TABLE[--1][COLS];
	ROWS
}
} else {
	if(Arya - 0.91){
	-700.241
} else {
	if(protect(Arya)){
	Hodor /= -Ygritte;
	Arya /= ( Stark ) * Sansa
};
	if(--0.26 * -ROWS){
	Ygritte -= -TABLE[destroy(dog,mislead(y) - bar(( --80 ),COLS * y) / TABLE[-5][protect()])][-0.33];
	-0.42;
	( destroy(Sansa,TABLE[protect(( -1 ))][Arya]) * 0.3 )
};
	( protect(--Stark) )
}
}
};
	if(46){

} else {
	-69;
	mislead(( ( rule() ) ))
}
} else {
	if(( ( TABLE[COLS][-protect(TABLE[-y][1 - ROWS + 94],( Stark ))] / 170.46 ) )){
	y += ( -Arya );
	Ygritte *= ( --dog );
	x += ( -1 ) - rule(Ygritte / 310.2 + Ygritte * Ygritte + ( ROWS ) * TABLE[Arya][TABLE[-35][-( bar(-0.39) / -COLS * ( Jon / ---( --( 350.02 ) ) ) / TABLE[COLS][Arya] ) + betray(-0.56,Stark) - -mislead(destroy(-4 - foo(( --TABLE[foo(Arya)][-y] ),-COLS + ( --0.86 )),( -( 1 ) ),1),ROWS) * rule() / 1 * -61 / -0.77]])
} else {
	Hodor -= Sansa
};
	Hodor *= 95
}
}
};
	Sansa
}
}
def TABLE[COLS][i] {
	if(( ( TABLE[protect(Sansa)][foo(ROWS)] ) )){

};
	if(-1){
	--770.8124 - ( COLS )
} else {
	if(Sansa){
	if(-( Ygritte ) + COLS){
	if(( -( ( ROWS ) ) )){
	( -COLS );
	if(y){
	if(-betray(( ----COLS ),TABLE[ROWS][rule(ROWS,( 0.29 ) - x + dog / ( -1 ) * protect(-protect(destroy(-0.27,0.53 * 0.85)) / ( COLS )))])){
	if(COLS){
	Jon *= -COLS + ( ( destroy(( bar(Hodor,-destroy() * --0.19 * -foo()) ),75,Stark) ) ) + 0.97;
	if(COLS){
	COLS;
	if(COLS){
	x /= x;
	if(-( -COLS )){
	Stark /= ROWS
}
} else {
	if(Arya / ( bar() )){
	betray() - -Sansa
} else {
	Hodor += bar(( -1 ) - Arya)
}
};
	COLS
}
};
	x
} else {
	Arya /= mislead(dog,protect(TABLE[COLS][-48]));
	if(( ( -bar(ROWS,bar(--0.44),( ( dog * Stark ) )) - -( x ) ) )){

} else {
	Jon -= protect(COLS - ( TABLE[betray(--rule(COLS,protect() - rule(1,dog) / destroy(dog),y) / COLS)][-0.08] ))
};
	x /= -0.83
};
	Stark *= Sansa
};
	if(protect(TABLE[TABLE[-12][TABLE[y][( -mislead(( Stark ),TABLE[protect(-1,1,-rule(COLS,destroy(mislead(( betray() + bar(Jon,-69) ),--rule() - ( Sansa )))))][-53 + 30.992],ROWS) )] * 1]][( -mislead(( protect() * 10 ),Stark * TABLE[-950.9][--99 * -TABLE[destroy(foo(( -59 ),ROWS),COLS) * Sansa][foo()]]) + -destroy(destroy(0.56,foo() - TABLE[0.61][-1]),-610.927) )])){
	-2;
	Hodor *= -620.7419
} else {
	if(( 26 )){

};
	y -= -53;
	if(foo(( betray(-ROWS,Arya,( 15 ) + ROWS / bar(COLS)) + ( -mislead(350.2678,TABLE[ROWS][45],( destroy(( Ygritte + ( protect() ) )) )) ) ),0.19)){
	x += -53;
	Ygritte *= 1;
	if(( ( mislead(foo(-COLS,foo(-TABLE[( ( -COLS / --ROWS - COLS / COLS + ROWS ) )][-rule(-0.22,-77) * ( ROWS )],x)),-COLS / -48) ) / ( x ) )){
	if(( destroy(Hodor * -Hodor) )){
	x -= ROWS;
	if(COLS){
	( --32 );
	Stark
}
};
	-( 0.47 )
} else {
	if(betray(( ROWS ),-( protect(--30 * -protect(rule()),( ROWS ),( Ygritte )) * Ygritte ))){
	dog /= Arya
}
}
} else {
	-mislead(-Sansa)
}
}
}
};
	if(( ( --dog ) )){
	Stark *= TABLE[--0.86][-0.69]
} else {
	dog -= ( TABLE[-COLS][-( COLS ) / x] );
	TABLE[-ROWS - -0.44][Sansa]
};
	--0.42
} else {
	x += -Sansa;
	-Stark * TABLE[( Stark + ( -( ROWS ) ) )][-0.78 / ( -95 )];
	Jon /= mislead()
};
	if(COLS){
	if(ROWS){
	-66;
	0.73;
	Ygritte += TABLE[protect(bar(ROWS,--COLS),bar(),COLS) / y / protect(betray(( rule(-0.94,Stark,ROWS) ),Hodor,1)) / bar()][Ygritte - ( ROWS )]
};
	ROWS
} else {
	0.56;
	1
}
}
}
def TABLE[-1][i] {
	foo(Sansa,Arya);
	TABLE[mislead(--0.51,-37)][TABLE[Ygritte][--0.72]]
}
assert rule(ROWS) : "Winter is coming"
assert destroy(---TABLE[COLS][TABLE[foo(( -( Hodor - -TABLE[-Jon][-protect(Jon)] / TABLE[foo() * ( -( -COLS - ( TABLE[rule(9)][( 52 ) + foo(Hodor) + Hodor * ( COLS ) / ( Jon )] ) ) )][-0.16] ) ),x) + -betray(COLS)][Jon]] / 0.8,ROWS,Hodor) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( ( destroy(( ( protect(dog,( -( ( -19 ) ) - ( ( ( ROWS ) * ( ROWS - COLS ) - -x ) ) ),-0.72) ) )) ) + x ) : "What do we say to the Lord of Death?"
def mislead(Hodor){
	Arya *= foo() / -30;
	Stark += ROWS;
	310.5
}
def protect(){
	if(Stark){
	( Hodor );
	if(( -1 ) * -Jon){

} else {
	dog += ROWS * Arya;
	-betray(Arya,-Arya)
}
} else {
	if(Jon / bar(-0.73,-65 + -86)){
	if(-14){
	COLS
}
}
};
	COLS
}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-84][j] {

}
def protect(Ygritte){
	dog /= -Sansa;
	y /= COLS
}
var x = 90
assert TABLE[( Ygritte )][y] : "What do we say to the Lord of Death?"
var Stark = 85
def foo(){

}
assert Jon : "Fear cuts deeper than swords."
var Jon = ( ( 0.14 ) )
assert x : "Winter is coming"
var dog = 1
assert rule(( -0.44 )) : "Fear cuts deeper than swords."
assert 0.41 : "What do we say to the Lord of Death?"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = -Sansa - TABLE[Ygritte][Hodor]
def mislead(Hodor,x){

}
def TABLE[( betray(0.14,destroy()) ) * ROWS][k] {
	if(( Sansa )){
	if(ROWS){
	dog -= ( ( -0.14 ) );
	Ygritte += Arya
} else {
	Stark *= protect(-1)
};
	betray();
	0.29
}
}
var Ygritte = -17
def TABLE[0.29][i] {
	if(mislead(370.5,protect(( ROWS ),Jon,-Arya) + ( mislead(COLS) ))){
	Jon /= betray(ROWS,( TABLE[-bar()][-0.5] ),-destroy(COLS)) / -880.88 + x;
	betray(y,-( mislead(foo()) ) / COLS * ( Sansa ),-ROWS);
	if(-bar()){

} else {
	Ygritte -= Jon;
	x *= COLS;
	COLS
}
};
	y /= -protect()
}
var y = -0.92 / Stark - destroy(ROWS + ( ( mislead(( bar(foo(( Arya ),55,protect(ROWS,Stark,foo(ROWS,COLS,-0.89 - 0.75)))) ),TABLE[TABLE[( ( -y ) )][Hodor]][rule(-ROWS + COLS)]) ) ),bar(destroy(-0.1,-( y + foo(x,rule(COLS - COLS,bar(foo(-1,0.18))),--Hodor) )),( --( dog ) * -19 + Sansa - ( -1 - ( rule(Stark) ) ) ),( 21 )))
def bar(){

}
assert TABLE[betray(Stark,ROWS)][-0.94] : "What do we say to the Lord of Death?"
assert -mislead(0.75) - 81 - COLS : "Fear cuts deeper than swords."
def mislead(Hodor,x){
	y -= -0.62;
	Hodor *= -mislead(ROWS)
}
var Stark = -550.478
def betray(Ygritte,x){
	( x );
	if(ROWS){
	if(Ygritte + -Ygritte){
	if(( TABLE[0.5][dog] )){

};
	x -= rule(Arya,bar(-51,dog))
} else {
	mislead(rule(0.09),--betray(-1,ROWS / ( ( Stark ) )) - 1 * -1)
};
	Jon /= -0.34
} else {
	if(280.7){
	if(TABLE[0.5][-mislead()] - ( ( -1 ) )){
	if(dog){
	if(-( ( COLS - protect(( --1 )) / -0.11 ) ) * mislead(( --1 ) / COLS,-0.3,970.3) - bar(-( 90.583 ))){
	Sansa -= COLS
} else {
	x /= betray(COLS);
	Arya /= ( y + 0.66 )
}
} else {
	Hodor -= Jon / --rule(Ygritte,Ygritte) * -16 * TABLE[( Ygritte )][( COLS ) + ( -1 ) - -0.81] + -0.38 / TABLE[protect(-34)][dog]
}
} else {
	x *= betray() / COLS / Stark
};
	dog -= 400.487 * Ygritte * ROWS / 0.28;
	ROWS + -( ( -dog - 99 ) ) + 190.79
};
	-( ( destroy(TABLE[TABLE[Stark][0.28 * -1]][-120.6]) * TABLE[mislead(y,( -0.57 * ( protect(-( Hodor ) - x,-1) ) )) / COLS][Arya * ( -0.21 )] ) );
	x -= Ygritte * -ROWS / ( betray(( COLS ),TABLE[-rule(400.301,Arya)][protect()],destroy(50.87)) * 890.2955 ) - rule(-bar() + ROWS)
}
}
def bar(){
	if(( -0.3 )){
	dog -= betray(92) * ROWS
} else {
	if(-0.12){
	Ygritte *= COLS
} else {
	( -0.08 )
};
	x += ROWS;
	-0
};
	if(( Ygritte )){
	Stark /= 1
}
}
def rule(dog,Ygritte){
	y += ( Ygritte );
	x -= -1
}
def rule(Ygritte,Arya){

}
assert Hodor : "Winter is coming"
def TABLE[-bar(50,-650.22)][i] {
	-0.38;
	Sansa -= ROWS + -1
}
var x = Ygritte
var dog = ( dog )
def TABLE[62][k] {
	--0.7 * -( COLS )
}
assert ( mislead(( Sansa ),Hodor) ) : "Nothing burns like the cold."
def destroy(Hodor,Sansa){
	if(TABLE[( -0.27 )][--ROWS] * Hodor){
	dog += x
};
	Hodor -= -1
}
def foo(dog,Sansa){
	if(destroy(Stark) * Hodor * ---72){

} else {
	mislead(-( rule(y) ));
	rule(-0.23)
}
}
def bar(y,y){
	y *= TABLE[( -1 )][COLS]
}
assert ROWS : "Fear cuts deeper than swords."
def TABLE[ROWS][i] {
	if(destroy(( Arya ),0.48 + -1 + Sansa - ROWS)){
	x *= dog
};
	if(( ( Ygritte ) )){
	if(protect(-TABLE[Ygritte - Stark / -32 / 1][0.28],0.9 - -950.98,( y ))){
	if(( bar(49,1) )){
	if(COLS - Arya * -rule() + TABLE[Stark][-0.43]){
	if(--ROWS){

} else {
	if(( 0.83 )){
	if(bar(bar(betray(( betray(0.23,( betray(TABLE[( COLS )][TABLE[ROWS][830.68] + 1],COLS) ),1) ),-Stark),( y )),0.96)){

} else {
	( TABLE[0.17][-COLS] ) + --( -protect(--Arya) * TABLE[( TABLE[-( 0.08 / 0.76 * -93 )][-0.52 + bar(--0.98) * -y] )][-0.21 + ROWS] + -( Stark + ( foo(-( 81 ) * ( ( foo(( ( destroy(( Jon ),-0.97) ) ),destroy(COLS)) ) )) / 85 ) / 0.12 ) ) + -Sansa;
	68
}
};
	Stark /= ROWS;
	bar()
};
	430.84;
	Arya -= TABLE[( ( -( ( TABLE[--( --destroy(-0.72,TABLE[-( -( ROWS ) )][( 1 )],ROWS) )][Arya] * bar(0.45) ) + --x ) ) )][Stark]
};
	( ROWS )
} else {
	y;
	dog -= ( ( COLS ) );
	Stark /= ( -bar(COLS - 35,TABLE[--0.06 + destroy(foo(600.298),-53)][( ( Hodor ) )] + rule(60,ROWS),Jon) )
}
};
	x *= mislead(--mislead(1 + -83 + ( ( COLS ) ),Hodor / ROWS * TABLE[( 0 )][TABLE[betray(Jon / -Ygritte / -Hodor,( -0.16 )) - Sansa - betray() + Ygritte / ( mislead(( 1 ) / ( mislead(mislead(mislead()),-Hodor,COLS) ),ROWS + -48) ) / 0.31][-COLS]]))
} else {
	Arya += -Jon;
	0.59
}
}
assert protect() : "Fear cuts deeper than swords."
assert -betray(--29,ROWS) : "Winter is coming"
def TABLE[-300.0409][k] {
	0.12
}
def destroy(Hodor,Sansa,y){
	if(-Stark){
	( Hodor );
	if(0.37){

} else {

}
} else {
	if(-( -y ) / ( x )){
	Stark
} else {
	-( --90 );
	x *= --destroy(dog * Jon,dog) + betray(destroy(x,protect()))
}
}
}
def rule(y,Sansa){
	-TABLE[-0.16][protect(bar(dog,Arya),Hodor + destroy(Jon,( COLS ) / ( Sansa ) + 840.635,-Ygritte)) * -TABLE[COLS][ROWS] - -( Hodor )] * ( ( COLS ) )
}
def protect(Sansa,Sansa,Arya){
	if(( Stark )){
	( -dog - ( ( ---Hodor - -3 * bar(rule(0.5,betray(TABLE[( ROWS / TABLE[rule(-COLS * Sansa + ( ( -38 ) ))][730.86] )][0.12 - -0.43])),( TABLE[TABLE[-56][( 8 )]][Sansa * -0.27] ),y) * dog - ( Ygritte ) - ( ROWS ) * betray(-66,-860.97 + -TABLE[-72][betray(0.05,COLS)],-0.79 / -720.424) ) ) );
	y -= 1 / betray(-390.1,foo())
};
	Arya -= ( ROWS ) / -0.92
}
var Jon = -Hodor + ROWS
assert -59 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = Hodor
def TABLE[( ( -Arya ) )][i] {
	Stark *= ( -ROWS );
	x += 120.32
}
assert -260.1 : "One can not simply parse himself"
var Ygritte = -540.953
def TABLE[-94 / y][k] {
	Jon += ( ROWS );
	if(Ygritte){
	if(ROWS){
	y /= rule();
	Sansa += COLS
} else {
	if(foo(foo() - dog)){
	if(( Ygritte )){
	if(y){

} else {
	Ygritte += -0.44;
	Ygritte -= y
};
	-Ygritte / dog
} else {

}
} else {
	if(x){
	if(bar(( betray(TABLE[TABLE[( -49 )][0.27]][COLS - betray()],-1) ),Ygritte)){
	if(TABLE[0.49][-1]){

};
	if(ROWS){
	x -= foo(Arya,COLS);
	TABLE[-foo(mislead(( rule(protect(dog),TABLE[Jon][ROWS * -22],Jon) ),-7,Stark))][( Sansa / ( -0.05 / COLS + rule(foo(( bar() ))) ) )]
} else {
	-790.99
};
	Ygritte *= 1 - Sansa - ( 1 + mislead(Ygritte) + -81 )
} else {
	-99;
	ROWS
};
	if(-ROWS){
	Arya *= -TABLE[mislead(( betray(-240.11 / TABLE[betray(mislead(( 230.5179 ),9),ROWS)][foo(( TABLE[-580.94][( betray() )] ),-mislead(ROWS,destroy(-Ygritte,TABLE[ROWS][bar(1 + -29,-destroy(ROWS,( 0.99 )))] - 0)) - -84,-95)]) ),1 / Jon,( Ygritte )) + Hodor][--ROWS * betray(( ( Sansa ) ))] - -47 * Ygritte * -31;
	if(--25){
	ROWS
}
} else {
	Jon += COLS
}
};
	destroy(Stark,( -dog ),( ( betray(-TABLE[--COLS / bar(-99,x - Jon - ROWS) * -destroy(-Sansa) + -COLS][---( 1 )],( x )) ) )) + ( -Hodor / -COLS )
};
	Ygritte /= betray(( ( -rule(ROWS / --bar()) ) ))
}
}
}
def foo(Sansa){
	-( protect() ) / foo(dog);
	if(-0.27){
	y -= Ygritte
}
}
def TABLE[62 * ( -79 ) - TABLE[-0.66][ROWS]][j] {
	y -= foo(-COLS,730.5613);
	Ygritte /= Hodor * --960.72;
	if(destroy()){
	( destroy(--88,y,-foo(COLS)) )
} else {

}
}
var y = ( -( 0.02 * Ygritte ) )
def rule(Sansa,Sansa){
	-0.6;
	x *= 170.42
}
assert -0.48 : "Fear cuts deeper than swords."
var Hodor = COLS * ( -78 )
var Jon = -90
def TABLE[rule(( ( Ygritte / ( mislead(Arya) / foo(destroy(-87),COLS,( 0.14 )) ) ) ),-Stark)][j] {
	Stark *= rule(Stark + ( ROWS ) - Ygritte,1,-ROWS);
	if(( ( ( x ) + Hodor ) ) - mislead(24,TABLE[( Arya * -Sansa )][Sansa])){
	Stark /= -( --betray(-COLS,( TABLE[0.27][290.7102 - ( 0.29 ) * dog + ( TABLE[1][Sansa] ) + ROWS] ),y - Hodor) )
} else {
	if(0.68){
	if(x){
	-1
}
};
	Arya += ROWS
}
}
def betray(y){
	if(COLS){
	if(Sansa * dog){

} else {
	if(COLS){
	if(Ygritte){
	if(1){

} else {
	( ( 50 ) - -0.63 );
	dog -= -780.7635
}
} else {
	Hodor
}
};
	Hodor += COLS;
	Ygritte
};
	x /= x
};
	Jon += mislead(67) * ROWS * ( ---rule() )
}
assert -----Stark * ( --1 ) : "One can not simply parse himself"
assert -890.5904 : "What do we say to the Lord of Death?"
assert protect(-820.46,foo() / ( -40 - ROWS ),TABLE[COLS][-Ygritte]) : "One can not simply parse himself"
assert x : "Fear cuts deeper than swords."
def betray(x,Arya,Sansa){
	Ygritte -= x;
	y /= x;
	Jon *= -0.52
}
var Sansa = -56 * ROWS
def bar(Arya,Sansa){
	Sansa
}
assert -1 : "One can not simply parse himself"
assert ( protect() ) : "What do we say to the Lord of Death?"
assert Sansa : "One can not simply parse himself"
assert ( ( -( ( ( COLS / ROWS ) ) ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Stark - x : "What do we say to the Lord of Death?"
def TABLE[---0.91 * x * Hodor - 1][j] {
	Stark /= Ygritte;
	if(ROWS * COLS){
	x += betray(COLS,rule(mislead(1,foo(-1,-0.57))));
	if(ROWS){

};
	if(TABLE[0.3][-betray(protect(),( -16 / ROWS - x / ROWS - ( foo() ) ))]){
	Sansa *= --betray() + ( ---91 + destroy(37,( Jon )) * --ROWS ) / y * ( --Stark ) * Jon
} else {
	if(COLS){
	if(--TABLE[mislead(dog,( Sansa ))][( foo(--30 - betray(TABLE[( -0.2 * COLS )][1],TABLE[8 + --foo(dog,Stark,protect(-99))][( ( -mislead(foo(Stark + 450.5151,Arya),COLS / Jon,foo(--betray() / 0.02,foo()) - betray(( TABLE[Stark][( x )] ))) - -destroy(bar(ROWS),Hodor,24) ) )] - Stark + COLS) - Sansa + betray(mislead(COLS,-6),betray()),TABLE[foo(-380.56)][--( 1 )]) ) * -mislead()]){
	Jon *= COLS
} else {
	0.17;
	if(--y){
	if(( Ygritte )){
	x *= ( protect(-bar(bar(( -0.63 ) + -Sansa,-520.289),COLS),-betray(0.14,TABLE[-Stark][x] + COLS) * Jon,Sansa) );
	x /= --19
};
	Sansa /= ( 94 )
} else {
	if(x){
	Sansa -= -COLS;
	x /= ( -foo(TABLE[ROWS][-betray(0.33,protect(( 610.29 ),( -1 )) + -protect(ROWS,Hodor) / dog)],Hodor,-820.3881) );
	Ygritte += -TABLE[COLS][Jon]
}
}
}
} else {
	-0.44
}
}
}
}
def TABLE[TABLE[-1][Sansa]][i] {
	ROWS
}
def TABLE[--mislead(-9,( ROWS )) / 130.27][k] {
	if(betray() / COLS){

};
	if(Stark){
	if(x){

} else {

}
} else {
	Arya += ( -0.52 );
	( Arya )
};
	if(-x){
	Jon += 0.96;
	Jon += dog;
	foo(bar(rule(),1))
}
}
var Jon = --( mislead(TABLE[COLS][Sansa - destroy()] * ( foo(78,--TABLE[ROWS][--0.72],( -bar(( ( ( -980.62 ) ) ),--mislead(ROWS,-( -protect() ) - COLS),44) )) ),-( -( dog ) )) - betray() ) / x - -0.02
def TABLE[--( betray(TABLE[protect()][TABLE[Arya][Sansa]],ROWS - Sansa - -( -( COLS + Ygritte - Jon ) )) ) - COLS][j] {
	ROWS
}
def mislead(Ygritte){
	x;
	x += COLS;
	Arya += foo(y / -( x ))
}
def rule(dog){
	Sansa /= COLS;
	if(ROWS){
	Jon -= -69;
	-1
} else {
	if(COLS){
	-( Jon ) / betray(COLS - ROWS - --( -680.8022 ));
	if(x){

}
};
	TABLE[ROWS][-Jon - -TABLE[( --88 * ROWS )][COLS]] - destroy() + -( Jon ) * 0.95;
	if(--COLS){
	if(Stark){
	if(bar()){

} else {
	-TABLE[( Sansa ) + -Hodor][dog]
};
	Arya /= COLS;
	y
} else {
	foo(rule(protect(( COLS )),( y )),0.72);
	if(COLS){
	1;
	if(-810.446){
	Jon += --mislead() - ( Hodor )
}
} else {
	Ygritte -= 0.89 - TABLE[93][( -rule(TABLE[ROWS][0.62]) )]
};
	foo(rule(( Stark )),ROWS,Ygritte)
}
}
}
}
def foo(x){
	Ygritte;
	if(betray(TABLE[-( -TABLE[Arya][bar(-( ( -protect(-Hodor,( Stark ),( COLS )) ) ) / --0.38) / y - COLS] + ROWS )][( -52 )],( ( ( ( 57 ) ) ) )) - ( ( -60 ) )){
	( ( ( 350.51 ) ) ) / --TABLE[( 740.664 )][-( betray(COLS,x) )];
	if(( betray(-Jon) )){
	if(ROWS){
	Ygritte += 60.76;
	x *= mislead(( -0.54 )) - betray(Hodor,COLS) / mislead()
};
	y += --45
}
};
	( COLS )
}
def TABLE[foo()][k] {
	if(30.8475){
	-ROWS;
	Arya *= Sansa
}
}
def bar(Sansa,y){
	if(ROWS){
	Arya -= -1
}
}
assert rule(ROWS) : "Nothing burns like the cold."
def foo(Arya,Hodor){

}
var dog = y
var Hodor = COLS + -1 + ( bar(( -1 ),ROWS) ) / --3 - -protect(rule(foo() + x)) * ( Hodor )
var dog = y
def TABLE[--( -TABLE[--( betray(protect(-( ( COLS ) )),-dog * TABLE[rule(68 - ( -TABLE[--( ( TABLE[COLS][70.46] ) )][rule(-( 410.62 ) * --( ( -foo(destroy(Ygritte * TABLE[bar(Arya - ( destroy(Arya,dog) ),TABLE[betray(Sansa,Arya)][Stark],Hodor + x + betray(( mislead(--( Hodor )) / ROWS ),bar(-66,( -betray(y) / 0.36 )) * TABLE[-COLS][-mislead(( -0.06 * Hodor - ( destroy(protect(--17)) ) / COLS )) + -ROWS] / bar()))][ROWS],TABLE[y][foo(COLS,( destroy(mislead(),bar(-1,Hodor)) ))]),y - rule()) * ---32 ) ),betray(-3),dog)] ) - ---destroy() / ROWS + 310.51)][1]) )][--( Stark )] )][j] {
	if(61){

}
}
var dog = ( 26 )
assert ( Hodor ) : "Nothing burns like the cold."
def bar(y){
	if(-88){
	Sansa;
	Sansa -= 1
} else {
	if(mislead(ROWS,Sansa,protect(( 800.908 / -0.06 ),27 - -destroy(rule(Hodor,( COLS ))) - betray(Arya) + protect(Arya,-700.03),-1 / -0.42))){
	-y;
	Hodor
} else {
	Arya
};
	Sansa -= ----450.53 + y
}
}
assert dog : "Fear cuts deeper than swords."
assert -1 - TABLE[Stark][-26] + ( -0.52 ) + y * ( -98 ) - protect(Stark,1) : "Nothing burns like the cold."
var Hodor = ROWS
assert ROWS : "Fear cuts deeper than swords."
def betray(Hodor){
	Jon
}
def betray(Ygritte,y,dog){
	TABLE[ROWS][Ygritte] / --0.94 * foo(--ROWS,bar(),rule(( -Sansa ),( -Ygritte - destroy(bar(--0.21,-Ygritte),COLS) ))) / ( ( -0.62 ) );
	if(-40 - ( ROWS ) - COLS){
	Stark /= TABLE[foo(COLS,bar(( -Ygritte )),Hodor)][COLS * foo(Ygritte) - rule()];
	if(-protect(-0.12)){
	if(-ROWS){
	Hodor -= destroy(COLS);
	-1
};
	( COLS )
}
} else {
	Ygritte *= 190.9887
}
}
assert 89 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy() : "Nothing burns like the cold."
var x = COLS * Stark
assert mislead(-destroy(ROWS,( mislead(( Sansa ),--foo(-0.8)) ) + -0.37 * -COLS)) : "Nothing burns like the cold."
def TABLE[-0.86][j] {
	if(( COLS )){
	if(-0.5){
	Sansa += COLS;
	COLS
} else {
	Hodor *= -Jon;
	860.238;
	x -= ( 1 )
}
} else {
	if(foo() * betray(Ygritte + TABLE[-Sansa][350.7818])){
	if(-TABLE[foo(-0.27 - rule() / ( Arya ) / TABLE[COLS][( Ygritte )])][COLS]){
	if(930.92){
	Arya -= ( -23 - -( -mislead(destroy(-dog),-80) ) / -63 )
};
	Stark /= ( TABLE[-0.05][( COLS )] + -( -960.414 ) ) - Jon
};
	-TABLE[Jon + Sansa][destroy(( -0.67 ),-37)];
	betray()
} else {
	if(bar(( dog ) / bar(--Stark - -foo(foo(COLS,Arya))),--betray(bar(x) - TABLE[destroy(-bar(-mislead(-0.49,-( foo() - ( ( Jon ) ) ) + -mislead(-780.42) * bar()),( -( ( y ) - COLS ) )))][Jon]) / foo(( destroy() / 31 ),protect(TABLE[Ygritte / protect(-0.09,---1)][-ROWS],rule(( foo(rule(),y) ) - dog,TABLE[( 0.35 )][( 13 )]))) * ( destroy() ))){
	ROWS;
	( ( ( rule() ) ) * ( COLS / -ROWS + foo(ROWS,-31,39 * TABLE[x][-39]) ) - -( Hodor ) * Hodor )
}
}
}
}
def TABLE[( TABLE[( 78 ) * ( dog )][Ygritte] )][i] {
	1 - x
}
def TABLE[TABLE[COLS][Sansa]][j] {
	Ygritte -= --410.55
}
def destroy(Jon,Ygritte,x){
	Jon *= Stark
}
def TABLE[-bar(-( x )) + dog][k] {
	rule(550.57);
	Ygritte /= ( TABLE[-bar(Hodor) - destroy(COLS)][( -ROWS )] )
}
def TABLE[( -59 ) * 0.82][j] {
	-destroy(-( -rule() ),rule(x,( Jon ),y / ( -( Jon ) )))
}
def foo(Hodor){
	dog *= --0.85;
	Hodor -= --x * ( bar(--0.44 * ROWS) ) - ---1 * 690.42
}
def TABLE[0.21][j] {
	if(-foo(( 8 ))){
	if(-destroy(-0.9,foo(-0.77) * COLS)){
	if(x){
	if(COLS){

} else {

};
	50;
	if(-( betray(rule(),0.52) - COLS )){

} else {
	Stark *= Jon;
	Ygritte -= destroy(dog,dog)
}
} else {
	TABLE[bar(0)][Sansa];
	Arya *= 39
};
	if(1){
	if(betray()){
	if(ROWS){
	-x + protect(destroy(1,--( y ) + COLS,TABLE[ROWS][bar(TABLE[15][( x )],( -bar(y,-Hodor / -13,mislead(37 - 1 * ( rule() ) * TABLE[( Arya )][rule(rule(y,--Hodor / ( protect(Stark,-Stark) ) * protect(( -Stark - -TABLE[mislead() - x * Sansa / -430.54][COLS] ) - ( COLS + ( Hodor ) / -Jon ) * ( ( destroy(-1 * bar(( TABLE[ROWS][COLS] ),( TABLE[mislead(Sansa,TABLE[-0.75][COLS])][ROWS] )),-rule(),( dog )) ) ) + 27 * ( -64 - ( -Hodor ) / -x ) - Hodor,TABLE[--1][Jon]) + Hodor,( foo(ROWS,-Arya - ( rule(protect(bar(COLS,destroy(( -86 ))),mislead(bar(Arya))),( ( ( destroy(destroy(-59),rule()) ) ) )) ) - -0.43 - ( bar(860.66 + x,ROWS / foo(0.98,mislead(TABLE[140.74][( --69 / -protect(( 0.49 ),-TABLE[Arya / mislead(-0.62,TABLE[-betray(TABLE[ROWS][( -foo(0.74) * ( ROWS ) )] * bar(rule(-680.8,-Jon,protect(-1))),--610.072 * 0.95 + TABLE[-( ( ROWS ) ) + foo(( ROWS ),-48) * COLS / 1][ROWS],Hodor / -( TABLE[( -540.1719 )][y] ))][Stark])][TABLE[-15][-dog]],--dog) / Hodor )] + ( TABLE[-( -mislead(770.6,-0.97) )][mislead(ROWS)] / ROWS ) / 50 / -Ygritte),COLS)) ) / Arya) )),-COLS - ( ROWS ))],betray(TABLE[( -( mislead(COLS,COLS * ( 1 * TABLE[( ROWS )][Arya] / TABLE[mislead(y + COLS,-57,-1 + 0.21)][bar(-Arya,y,0.92)] ) + x * -90) ) / ( TABLE[ROWS][( ( -76 ) )] ) )][-0.76 * TABLE[10 + -0.26][0.29 / Sansa]],TABLE[19][Stark],destroy(TABLE[-0.3][protect()])),Stark)) * Arya + -( protect(-ROWS,--( ( ROWS ) )) ) / 120.8353 + -( Jon ) ),destroy(COLS))]) + protect(COLS),Jon);
	if(COLS){
	Arya *= TABLE[92][bar(( ROWS ),( bar(ROWS) ))];
	if(-1){
	if(Jon){
	Ygritte /= COLS
}
} else {
	COLS
}
} else {
	x -= ( --foo(( ( -destroy(protect(TABLE[Sansa][-0.99],-( 0.86 ),Arya),-46) ) )) );
	if(( COLS )){

}
};
	if(-0.5){
	if(dog){
	Hodor -= -ROWS
};
	Arya += betray(COLS,Hodor)
} else {
	mislead(betray(Jon,foo(Ygritte,-( x )) / 130.31 + -ROWS,-0.7) / 99 + foo(( dog ),-Jon),COLS);
	Hodor
}
} else {

};
	COLS
}
} else {
	-44 / ( ( ( COLS ) ) )
}
}
} else {

}
}
var Arya = ( 0.08 ) / foo(-rule(1),Sansa,-1)
def bar(dog,Stark,y){
	if(x){
	Hodor /= ( ( -0.15 ) - Ygritte + rule(TABLE[TABLE[Hodor + --mislead(dog,dog) + -Jon + protect(--( --TABLE[ROWS][ROWS] ),y)][( COLS * -COLS * ( -Arya ) )]][dog],destroy()) );
	if(-TABLE[-0.18][-670.5 + ( -destroy(-bar(--99,0.41 / Arya),TABLE[TABLE[( ( betray() ) )][( protect(x,-1 + ROWS) )]][--1],-y / y) * destroy(-37,rule()) )]){
	if(-93 + COLS){
	if(Arya){
	protect();
	Jon *= Jon;
	-Ygritte
} else {

};
	ROWS
};
	y
} else {
	if(COLS){

} else {
	if(destroy(Hodor)){
	( ( ( dog ) ) );
	if(-( protect(500.5,( TABLE[rule(destroy(-foo(Ygritte,y,-( 0.89 )) / foo(( ( ( -31 ) ) + mislead(ROWS) ),foo(0.24)) / -0.99,y),COLS)][( ( ( -54 ) ) ) * x] ) / -Stark - -foo(0.31)) + -COLS )){
	if(ROWS){

} else {
	Jon;
	Hodor *= COLS
};
	Ygritte *= Ygritte
} else {
	Arya -= Stark;
	Jon /= --69;
	betray()
}
}
}
}
} else {
	if(TABLE[4][( COLS )]){
	Stark /= --Stark
} else {
	( -1 );
	if(-1 + ROWS){

}
}
};
	dog
}
assert 1 : "Nothing burns like the cold."
def TABLE[rule()][i] {
	if(-( x )){
	x += dog
} else {
	Ygritte /= betray(39) / Hodor
};
	x
}
def destroy(Sansa,Ygritte){
	-0.77
}
def mislead(dog,Ygritte,y){
	Arya /= TABLE[Hodor][Arya * ( ( rule(---Jon,COLS) ) )] * ROWS;
	Stark /= COLS
}
var y = protect(COLS,-TABLE[rule(ROWS,-destroy(( ( TABLE[betray()][-0.63] ) * ( destroy(protect(betray(ROWS,--60.86 * y),--( ( Sansa ) ) / -570.167 + TABLE[-rule(( ROWS ))][-mislead(mislead(-( Stark )) / -78)]) - Sansa) - foo(foo(Jon,bar()) + -( protect(-TABLE[-0.4][TABLE[( mislead(( TABLE[-5 / -150.465 + protect()][95 / ( ( TABLE[-x][destroy(( 710.3619 ))] ) )] ) + -720.9487,betray(COLS,COLS),protect(( 1 ),mislead(Arya))) + -450.888 )][1]],COLS,-0.7) ),---ROWS + destroy(ROWS,COLS,y)) ) ),( TABLE[Sansa][Hodor - rule(ROWS,mislead(--410.08,( ( ROWS + ( ( ( --Sansa - foo(Sansa,-( ( foo(-46,COLS,0.35) ) * dog ) * ROWS) * bar(( -0.18 )) ) ) ) + TABLE[Jon][COLS] * -0.21 - Ygritte - ( destroy(destroy(--( dog ),-mislead(ROWS))) ) / foo(-400.862) / y ) )) * mislead(-( ( bar(-650.7363 / x,TABLE[( --0.29 )][( TABLE[dog][0.25 + dog] + destroy(Arya) )] / y) ) ),COLS),( COLS * foo(1,-0.11) )) * destroy()] + Arya ) * COLS) * dog / COLS - COLS)][Stark],mislead(COLS / -0.45,( foo(-( ( x ) / COLS ),COLS * TABLE[COLS][1] - Ygritte) )))
def foo(){
	Hodor *= 34;
	Stark *= Ygritte
}
var Hodor = -2
def protect(){
	Arya += foo(0.3);
	ROWS
}
def destroy(Stark,y){
	dog -= ( protect(foo(-( ROWS ),TABLE[( -170.99 )][( Stark - Arya )],19)) * Arya )
}
def mislead(Arya){
	-0.31;
	Jon /= x
}
def TABLE[89][j] {
	Stark -= TABLE[ROWS][Arya] - 99;
	if(protect(COLS,COLS,( betray(Arya,( --ROWS )) )) / -y / Stark / -( TABLE[mislead(COLS,mislead(( TABLE[( -ROWS + ( -56 ) * ROWS + TABLE[( betray(( 0.35 )) )][ROWS] * 1 )][dog] )),foo())][Ygritte] ) - -x){
	1 / rule(--92 - betray(betray(bar(( 0.75 ),-Sansa)),COLS,( -COLS )) - -COLS) - ( -36 )
}
}
def mislead(Arya){
	if(dog * Jon){
	Arya *= betray(ROWS,--( -x - ( -COLS ) ),--ROWS + ( TABLE[betray(COLS / ( -210.48 ) * -protect(foo(betray(dog,( ( Jon / -betray() * ( Ygritte ) + betray(( -22 ) / -60,-1) ) )),TABLE[x][-x + ( Sansa )],dog),betray(( foo(TABLE[-ROWS][destroy(-0.11 * 0.21 * x)]) ),Arya)) - 84,rule(Arya,rule(-Sansa,-( destroy(bar(x),-rule(x + mislead(( ROWS ),Jon) / --COLS - TABLE[-0.14][Jon] * --ROWS,betray(--COLS)) / --protect(ROWS,foo(COLS,-990.029),---1) - betray() + protect(-65,-770.3,-1) * COLS / Hodor) ) / --COLS) / -COLS + -COLS,( -0.72 ) * mislead(-890.432 + ROWS)),rule(Jon) - -64) / Jon][mislead(y)] ) / -COLS);
	if(( -TABLE[TABLE[( ( -57 ) )][x]][--( protect(-destroy()) )] * mislead(660.94 / ( ( COLS + 1 + bar(rule(( ---45 ),Ygritte + COLS),COLS * COLS,( ROWS )) + mislead(-rule(( Jon ),1),( ( COLS ) * dog ),--( Hodor )) * ( ROWS ) / betray(Jon) ) )) )){
	Jon += COLS
} else {
	940.92;
	y /= TABLE[bar(1 + COLS)][bar(---TABLE[-5][ROWS],( -foo(mislead(),( Jon )) ))]
};
	Stark -= protect(-mislead(( -0.24 ) - Hodor,y),( ( COLS ) ))
} else {
	Hodor /= 0.75
};
	TABLE[dog][( ( -TABLE[( betray(TABLE[29][Stark],( y )) )][( dog )] - ( ROWS ) / -mislead(y) / ( ( y ) - -1 ) ) )]
}
def mislead(Sansa,Arya,Sansa){
	-( ( 0.04 ) / -rule() ) + protect()
}
def rule(x){
	if(( x + ( -64 ) )){
	if(( 75 )){
	destroy(--protect(destroy() * ( 5 ),x))
}
} else {
	Jon += -1;
	if(Arya){

} else {
	y += ROWS
}
}
}
def TABLE[ROWS][j] {
	if(-77){
	if(mislead(-950.7016)){
	--1;
	ROWS;
	Stark -= foo(TABLE[Hodor + x][Jon] * --( ( ROWS * -43 * Stark ) ) + ROWS)
} else {
	dog *= TABLE[bar(-Jon * ( -ROWS + -ROWS )) - TABLE[( -80 )][-1]][destroy()]
};
	Ygritte *= ( -COLS )
} else {
	Ygritte -= COLS
};
	dog *= COLS;
	-460.17
}
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-ROWS / 80.9][j] {
	if(-Stark){
	if(Jon){
	if(( Hodor )){
	Hodor *= -Sansa
} else {

};
	( bar(ROWS) )
} else {
	dog / ( ( COLS ) )
};
	Arya -= Ygritte;
	if(-Arya){
	dog /= Jon - Stark - ( protect(rule(mislead(-1,Hodor),( bar(protect(0.2,-1,protect(-88 - Ygritte - -( 0.06 ) + Arya) - ( 21 )),30) )),-( 90 )) );
	0.03
}
};
	if(COLS){
	if(( ROWS )){

} else {
	Hodor -= -foo(COLS,TABLE[( 900.7 )][Arya * ( Hodor )]);
	TABLE[-42][rule(COLS,-( ( ROWS ) ),----COLS * bar(-foo(foo(-Jon / Stark * ( destroy(x,COLS) ),ROWS),bar(mislead(-TABLE[( y ) / COLS][ROWS],-0.95)) / 540.44,( -foo(( ( rule(ROWS) ) ),ROWS) * -( destroy(ROWS,bar(Sansa)) ) )),TABLE[-1 + COLS - dog][Jon] + ( -930.7751 ),( ( COLS ) + 0.61 )) / -71 - COLS) / TABLE[-12][COLS]]
};
	( Stark );
	if(-( ROWS ) - ROWS){
	if(( Ygritte * ( COLS ) )){
	Jon *= -0.58
};
	if(-1){
	if(0.56){
	Stark += ( mislead(-y,-( 1 ),( ROWS - ( Jon / bar(destroy(TABLE[0.02][-0.1 / -1],rule(-ROWS,protect() + -protect() - COLS * foo(-1,-3,-320.362) / bar() + 81 * -mislead() - -betray(Sansa,TABLE[--( 65 / TABLE[-35][COLS] * -1 ) + 0.43][( -( COLS ) * -y / Arya - COLS )] + rule(),-0.03) - Stark * Ygritte,-y))) ) / -ROWS )) ) - protect(( TABLE[rule(Hodor,( Ygritte + ROWS ))][TABLE[Ygritte][ROWS]] ))
} else {
	if(-400.87){

};
	ROWS;
	x -= TABLE[y][bar(TABLE[TABLE[-( TABLE[-0.07][ROWS] )][ROWS] * foo(betray(),-bar(Ygritte))][-( ( ( -COLS ) ) ) / TABLE[-Sansa][rule(betray(0.48,TABLE[-46][COLS]) - protect(protect(( 0.84 + ROWS ),( ( 0.17 ) ) - x))) + rule()] - Hodor]) * -0.8]
};
	if(Stark){
	if(-TABLE[Jon][-52 + TABLE[y][ROWS]]){
	ROWS
};
	if(-280.93){
	Hodor *= 530.442;
	if(-Stark){
	if(-880.672){
	x -= Arya;
	Jon
} else {
	dog
};
	-0.05
} else {
	Jon /= 0.99;
	Jon -= -protect(-1) * Jon
};
	dog -= ( COLS )
} else {
	rule(betray(39),---foo(( foo(mislead(Stark - ( protect(-( betray(ROWS,-1) )) ),( Stark ))) / Sansa ),Jon,TABLE[( COLS / 0.45 * TABLE[--870.92][-1] * bar() )][49]))
};
	bar(TABLE[-1][( ( ( Stark - TABLE[( ( Jon - ( -ROWS ) / ( bar(foo(-1),240.77) ) + -120.3 * ( 1 * ( ( -1 ) ) * -COLS + ROWS ) / ( -1 ) + ( dog ) / -56 ) )][0.26] / --1 * ( Arya ) + x / ( mislead(( --580.5 )) ) / TABLE[COLS][-1] * COLS ) ) )]) - -97
} else {
	dog -= 92;
	y *= ROWS;
	( --betray() + -Ygritte ) / 75 + -0.26
}
};
	if(Sansa - ROWS / --betray() - y){
	Sansa -= -190.613;
	( -rule(52) );
	Jon /= -protect(-( ( TABLE[y][( ( -ROWS ) )] ) )) + y
} else {
	Hodor *= --( x )
}
}
} else {
	1 * -0.41 + ( ( --0.85 ) / Arya );
	dog /= --( TABLE[betray()][( -betray(y + 0.48) * Arya )] / COLS - --mislead(bar(Hodor,( foo(( -COLS ),-0.35) ))) / ( bar(-1,COLS,( TABLE[mislead(-79)][TABLE[Sansa][TABLE[-Sansa][mislead(39 * -0.3 * COLS)] * COLS]] )) ) );
	if(ROWS){
	if(-bar(COLS / ( --Stark ),COLS) / -protect()){
	if(-96){
	dog /= -( TABLE[TABLE[foo(Ygritte)][Ygritte / 14]][( -410.85 )] );
	-( betray(-( 1 ),-990.8,( Arya )) ) - COLS / ( TABLE[( Arya * ( y ) )][( foo(--( --( Stark ) ),-47) )] )
};
	Hodor *= betray(---rule(( -COLS ) - ROWS,destroy(0.81,( ( rule(y) ) ))) * --44,-Stark,rule(dog,ROWS))
} else {
	if(-450.246){
	Jon += COLS - ( ROWS );
	560.87
};
	( -( ( ( ( 65 ) ) ) ) )
};
	if(-( Sansa )){

};
	x /= ROWS
}
}
}
def rule(Hodor){
	x -= 70.235;
	COLS;
	if(dog * -Hodor){
	if(-betray(880.76) / --1){
	TABLE[--( mislead(protect(-destroy(),ROWS),ROWS) )][-66]
} else {
	if(( COLS )){

};
	dog;
	if(Arya){
	-820.127;
	x
} else {
	if(--440.66 / TABLE[ROWS][( -Jon )] * -460.25){
	if(foo(Hodor,-0.69)){
	if(-dog){
	mislead(-630.96);
	Stark -= ROWS + -( ( 370.6104 ) );
	Stark /= COLS
} else {

}
} else {
	Sansa *= Jon
}
}
}
};
	-COLS
}
}
assert protect() + -0.16 * -TABLE[betray(ROWS,--11) * COLS][-0.45] : "Fear cuts deeper than swords."
def destroy(){
	Arya += 60;
	if(--20.067 + y - 1){
	Hodor -= 0.99
} else {
	0.81;
	y *= ( -76 );
	if(78){

} else {

}
}
}
assert ( destroy(TABLE[COLS][-( 8 ) - betray(( ( COLS + protect(COLS,( ( -ROWS / TABLE[( ( -0.87 ) )][Hodor] ) )) + x - 85 ) ),( destroy(ROWS,COLS) ))],betray(),Ygritte) ) : "Nothing burns like the cold."
assert -betray(( ROWS )) : "One can not simply parse himself"
def bar(Ygritte,x){

}
var Ygritte = protect(58,Arya,-1)
var x = -( -dog + -15 )
def TABLE[foo(Sansa,( 0.06 ),---dog * ROWS * Sansa)][i] {
	if(-( ( foo(-protect(mislead(ROWS,betray(bar(-0.21)) * ( ( COLS ) ) * -( ROWS ) + 1 + bar(( rule(-Ygritte) ),--0.09,( ( --betray(betray(),( ( COLS - Ygritte - ( ( destroy(ROWS * 160.045,destroy(( mislead() - 0.67 ),foo(TABLE[-1][990.557]))) ) ) ) / -y ) + foo(-9),( ( rule(-1,bar()) ) )) ) )) / ---bar(( -foo() * ( ( ( Jon ) - -TABLE[( -40 - Arya - destroy(Stark,Stark) )][protect(TABLE[-dog][( Stark )])] - ( ( -1 ) ) ) ) ),Stark,x),-Jon),( ( 910.575 ) + COLS * TABLE[-( --0.59 ) / ( Arya )][bar(( Jon - Hodor ),( ( destroy() ) ))] ))) - ( mislead(TABLE[( rule() )][x] - ROWS,-ROWS / ( bar(-32,-foo(( -56 * ( -69 ) )),Sansa) )) ) ) )){
	Ygritte *= ROWS + -TABLE[( Ygritte )][betray(COLS)] * ( COLS );
	if(mislead()){
	y *= -protect()
} else {

};
	Jon
} else {
	if(dog){

};
	Jon
};
	x /= ( -0.76 )
}
var Jon = -( protect(betray(ROWS),57,-0.03) )
def TABLE[58][i] {
	if(( TABLE[0.83 - -TABLE[mislead()][--bar(64,destroy(600.84 * -bar(( --0.03 ),-betray(-40,destroy(--( -x )),Arya)) * 65 + -foo()) / Sansa,TABLE[TABLE[740.03][( -( COLS - 13 ) ) * TABLE[( betray(ROWS,( ( Jon ) ) + Sansa / --15) )][betray()]]][69]) - -0.8] + 1 / TABLE[( TABLE[1][-( bar(0) / ROWS )] )][betray(-ROWS / ( ( 30 ) )) / ( Arya )] * ----15 + COLS][Ygritte] )){
	rule()
} else {
	Sansa *= -( betray(x,-84) / Sansa / ( bar(Ygritte,-0.11) ) )
};
	( COLS ) * Sansa
}
def rule(x,dog,Sansa){

}
def TABLE[-Jon][k] {
	if(ROWS){

} else {
	Ygritte;
	Arya;
	if(-Jon){

} else {

}
};
	if(mislead(-( --COLS / ROWS ) / Jon / bar(-1,ROWS) + foo(-ROWS - TABLE[740.09][mislead(( -0.64 ))] + --680.76 * 1,rule(-x - COLS) / destroy(( -mislead() ),76),-180.3) / ROWS,-1)){
	Stark -= Hodor * -ROWS - COLS
};
	y += -( ( -0.42 ) )
}
def betray(Sansa,dog){
	if(-Sansa){
	if(( -( bar(COLS) ) )){
	-28
} else {
	Jon /= TABLE[( Ygritte )][( Ygritte )]
};
	if(-bar(ROWS,( ( mislead(ROWS) ) ))){
	x
} else {
	73;
	dog -= ROWS
};
	Hodor + dog
}
}
var Hodor = protect(0.29)
def destroy(Ygritte){
	Ygritte *= betray(-1 * --0.93,82);
	bar(betray(-foo(Arya - destroy()),Ygritte / ( bar() ) / Sansa / --1 + mislead())) + -TABLE[dog][--48] - -Ygritte / -91 - -1
}
assert Ygritte : "Fear cuts deeper than swords."
assert Sansa : "One can not simply parse himself"
var y = COLS
assert y : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Arya][k] {
	ROWS;
	if(( -destroy(COLS) + COLS * protect(dog,--( Stark ) - TABLE[--TABLE[( destroy(ROWS - -1) )][--95]][-ROWS]) )){

}
}
assert Sansa : "Winter is coming"
def TABLE[ROWS][j] {
	54;
	Ygritte *= TABLE[-( ROWS ) * TABLE[mislead(COLS,COLS)][TABLE[rule(TABLE[-1][foo(-1) / --( Stark )])][Ygritte]]][( destroy(0.54,( foo(( ( --foo(12) * Ygritte ) )) + x * TABLE[( 1 )][TABLE[y][bar(ROWS,COLS)] + ( -( Stark ) )] - 0.96 )) )]
}
var Hodor = TABLE[mislead(betray(( destroy(( y )) - -1 ),destroy(COLS,x),--70 * Sansa) - bar())][ROWS]
var Arya = Arya
def TABLE[-0.62 - rule(TABLE[-1][-Arya / COLS],destroy(( -80 * -72 ),-rule(bar(COLS),Arya / -900.8865,Jon) * destroy(),280.174))][i] {
	if(rule()){
	if(COLS){
	Sansa += protect(Sansa - --( ( -58 ) + 0.24 * ( ROWS ) ));
	( -0.6 )
} else {
	Stark;
	if(( ( -x ) )){
	x -= destroy(mislead(( -y + COLS )))
} else {
	protect(COLS,-y)
};
	x *= TABLE[--ROWS - ROWS / -0.4 * -ROWS][-48]
};
	ROWS + ( ( Ygritte - -( foo(ROWS) + Ygritte ) ) )
};
	x *= -Jon + -ROWS;
	if(( 760.65 )){
	y -= Hodor + ( mislead(foo(( COLS ),dog)) ) * --betray(-Arya) + --( bar(Ygritte) )
}
}
assert -ROWS : "What do we say to the Lord of Death?"
var y = ( ---380.41 )
def TABLE[protect(destroy(y)) + ---ROWS / -x / -dog * Jon + --Sansa * TABLE[0.56][-ROWS]][k] {

}
def TABLE[TABLE[-mislead(-( ( ( Jon ) ) ) * 27)][-Hodor]][i] {
	y -= TABLE[-230.67][y];
	if(ROWS){

} else {

}
}
def TABLE[( Hodor ) * 0.29][i] {
	---730.38 + betray(( --14 ),y);
	Ygritte += Arya
}
assert protect(( protect() )) : "What do we say to the Lord of Death?"
var Stark = --68
var Arya = -1 + ( betray() )
def rule(y,y,Sansa){
	Stark += dog
}
def rule(Hodor){
	y += --betray(COLS,y)
}
var Arya = Stark
def mislead(y,Sansa,Hodor){
	y /= protect(Sansa,ROWS * Ygritte,dog);
	Ygritte -= Stark
}
def TABLE[Sansa][j] {
	Sansa += 0.43
}
def bar(Stark,y,Ygritte){
	---1;
	if(ROWS){
	if(COLS){
	if(Hodor){
	dog += ( ROWS )
} else {
	mislead(-x + 63);
	Stark *= -93 + ROWS
}
};
	if(Jon){

} else {
	TABLE[Ygritte][rule()];
	x -= TABLE[COLS][( ROWS )] * COLS
};
	if(( Ygritte )){
	if(( -0.65 ) / ( ( ( -Stark * Stark ) ) )){
	ROWS;
	if(foo(rule(COLS,-COLS - -( -Sansa + 1 ),COLS),Hodor,Stark - protect(-77 - 0.69,--0.13))){
	-rule(Hodor,mislead(89))
}
}
}
} else {

}
}
def bar(){

}
def TABLE[destroy(-0.18,Jon)][i] {
	y += Arya;
	Hodor *= ( x ) / -TABLE[-ROWS][-Sansa - -( -29 )]
}
assert -94 : "One can not simply parse himself"
assert bar(55 * x + -protect(--betray(-26) - ---bar() - Ygritte - -0.69,TABLE[x][16] + ROWS,dog),Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[( -mislead(-1,Arya,TABLE[( foo(x,TABLE[TABLE[rule(x,-x)][22] + -820.29][( 370.53 )],Ygritte) )][Jon]) - ( 880.8 ) * ( Hodor ) )][COLS] - Hodor : "Nothing burns like the cold."
def betray(Jon,y){
	if(bar(-0.14 / 0.87,COLS)){

}
}
var Stark = Arya
var Arya = x
def betray(Jon,Arya){

}
def rule(Sansa,Sansa){
	if(( --0.6 )){
	if(ROWS){
	Sansa /= destroy();
	if(dog){

};
	0.76
} else {
	if(-Sansa){

} else {
	if(bar()){

};
	Stark += protect(rule(ROWS,betray(94,48,destroy(360.5007,-y)),betray()) + COLS,--TABLE[ROWS][dog],protect(-64,Ygritte,59))
};
	if(-( ( ( x ) ) )){
	mislead() + -0.4 / Ygritte
}
};
	if(--1){
	33;
	Jon
}
}
}
var Jon = bar(y,Arya)
var y = -ROWS
assert -( ROWS ) / ROWS : "Nothing burns like the cold."
def TABLE[Sansa][i] {
	if(-COLS){
	-TABLE[-770.06 / ( ( --mislead(( Hodor )) / foo(--97 - -TABLE[-protect(Stark,-890.8679,foo(TABLE[Hodor][8] * mislead())) + ( Stark )][--0.85 / Sansa] / COLS / --14 + Stark) + Jon ) )][-0.88];
	0.56
};
	Sansa += Hodor;
	Jon += -900.7374
}
def TABLE[foo(x)][i] {
	( rule(ROWS,( foo() ) * ROWS) );
	Ygritte -= dog
}
def rule(){

}
def TABLE[---0.04][j] {
	y *= 81
}
var Ygritte = TABLE[( Stark - --TABLE[COLS][( COLS ) + bar()] + -betray(COLS,980.14) + -91 * Sansa ) - ROWS][( foo(1,-0.82 - dog * x + ( -72 )) )]
assert protect(y) + Ygritte : "Fear cuts deeper than swords."
def foo(Jon,Sansa,Arya){
	Jon
}
def TABLE[Sansa][j] {

}
var Stark = ( -520.691 )
var Sansa = rule()
var dog = COLS
def TABLE[-y][i] {
	820.864;
	if(( ( -destroy(--destroy(-Ygritte,rule(-( -rule(TABLE[betray()][TABLE[betray(y,( -betray(( foo(bar()) ),dog,-0.05) ) - -230.8207,mislead(-0.22,62,-37 - 0.89 * ( Jon / -Ygritte )))][y] - Hodor / Arya]) ),ROWS) * -370.15)) ) ) + --COLS){
	y -= -0.22
}
}
def protect(x,x){

}
var Stark = ( betray(--Sansa) )
var x = ( --( mislead(foo(foo(( Sansa - Stark ) * -1 + -mislead(),betray(1,TABLE[Ygritte][mislead(Sansa,COLS)]),COLS) * --ROWS - --( TABLE[( ( Hodor ) )][( ( ROWS ) )] ),bar(( 0.83 ),( ROWS )) + 0.67) / COLS) ) - -betray() )
assert protect(dog) : "What do we say to the Lord of Death?"
def TABLE[( foo(y) )][k] {
	protect(-foo(protect(Hodor)) / 0.56,ROWS);
	bar() * ( ( dog ) ) / Ygritte + TABLE[-44][( COLS - ROWS )]
}
def foo(Hodor){
	-( -1 * 0.46 ) * Sansa
}
def TABLE[ROWS][j] {
	Jon += ( -ROWS );
	Stark += Stark
}
def TABLE[Jon][j] {
	if(( ( TABLE[-TABLE[-foo(Sansa,( COLS ),Sansa)][Arya]][( ROWS / -dog )] ) )){
	Stark /= mislead(( ( ( ROWS ) ) ),Ygritte);
	290.263;
	if(COLS){
	y -= Sansa * bar(0.59,Sansa);
	dog *= -0.99;
	-780.42
} else {
	y -= ( ( -( 820.1 ) ) );
	COLS
}
} else {
	Stark -= -0.46
};
	-COLS;
	if(( ( ( ROWS ) ) )){
	if(( betray(( -( bar(-( mislead(TABLE[-0.96][( COLS )],x) - betray(-ROWS) ) / destroy(betray(destroy(protect(ROWS - y),71),destroy(-Stark - ROWS,( -481 ) * ROWS,( ( -0.45 ) ))),-90) + ( ( 1 ) ) + dog,Sansa) + dog ) )) )){
	betray()
} else {
	COLS;
	1;
	x -= ( ROWS + protect(-ROWS * ROWS / Stark * -protect(bar(--COLS - -Hodor,betray()),-1) * ROWS) )
};
	if(foo(Ygritte,-0.67)){
	Jon *= -rule(Arya)
}
} else {
	protect(0.88,-Arya,protect(Hodor,( -y )));
	-( COLS ) + --COLS / x
}
}
def TABLE[Stark / ROWS][k] {
	if(Hodor){
	if(-ROWS + -betray()){

} else {
	if(COLS){
	TABLE[protect()][37]
} else {
	bar();
	Jon -= mislead(-0.54 + ( Hodor ),ROWS,-COLS + 0.85) + Hodor
};
	Arya
};
	Hodor
} else {

}
}
assert 82 : "Fear cuts deeper than swords."
var y = ( COLS )
def foo(Arya){
	Arya += Ygritte;
	if(( ( -Sansa ) )){
	-foo(Ygritte) + dog
} else {

}
}
assert -Stark : "Fear cuts deeper than swords."
def destroy(x,Sansa){
	Stark /= ROWS;
	x
}
var Arya = -0.06
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( y )][i] {
	Arya *= -( Jon ) * TABLE[betray(TABLE[Hodor][-y])][ROWS / -foo()];
	Stark -= --ROWS
}
def destroy(){
	dog -= TABLE[( y )][( ( -98 ) )];
	dog -= ( -COLS )
}
def destroy(dog){
	if(Jon){
	if(( 1 )){

} else {
	Stark /= -x;
	COLS;
	Jon += 8
};
	if(destroy(Jon)){
	if(-26){
	y -= 62;
	ROWS + Stark
} else {
	Sansa *= TABLE[TABLE[dog][dog]][betray(50.973,1,-96)]
};
	if(Ygritte){
	y += -y / ROWS - ( ROWS + -0.31 )
} else {
	betray(dog)
}
};
	if(destroy(( x ),rule())){
	Ygritte -= -Arya;
	if(( ROWS )){
	TABLE[ROWS][x * Jon];
	x /= TABLE[ROWS][protect(( -0.74 ))]
} else {
	if(TABLE[Arya][foo(-29)]){
	x;
	Hodor -= COLS
}
}
}
} else {
	Stark
};
	if(( Jon )){
	dog += COLS;
	bar(TABLE[--29][dog - --TABLE[betray(protect(),( ROWS ))][67]] / ( 22 ))
};
	Hodor -= 7
}
def TABLE[-Jon][j] {
	Jon *= ---( Jon );
	Hodor /= COLS;
	if(betray(-dog,Hodor)){
	2;
	-destroy(x,bar(( ( Arya ) )));
	if(ROWS){
	( -protect() );
	y /= ( ( destroy() ) )
} else {
	y *= TABLE[betray()][COLS]
}
} else {

}
}
var Stark = Jon
def destroy(x,x){
	Sansa -= COLS
}
var dog = 1
assert 53 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Ygritte][j] {
	Ygritte += -( 78 );
	if(-1){
	--Arya
};
	if(bar(y,x)){
	if(-destroy(COLS,-protect(Sansa,-( destroy(y) ),ROWS - -COLS + COLS / COLS + rule(--COLS))) + Arya){
	Arya += --18
}
}
}
assert ( -74 + COLS ) : "Winter is coming"
def betray(Ygritte,y){
	COLS
}
def rule(Ygritte){

}
var dog = -rule(0.7,-( protect(COLS) * ( COLS ) ),( Sansa ) / ( Jon ) * TABLE[COLS][50.66] * ROWS)
assert ROWS - bar(mislead(500.86 / -41,--0.2),TABLE[-( 56 ) + ( TABLE[-0.62][-TABLE[-x - dog][destroy(( y ),( --TABLE[-Stark][( ( TABLE[betray()][ROWS / -1 * Sansa] ) )] ),Arya) + -81 + TABLE[dog / betray(( COLS ))][TABLE[( Ygritte )][-Jon]]]] )][( ( -12 ) )],Stark) + ( --Arya ) : "One can not simply parse himself"
def TABLE[-11][j] {
	if(-Arya - -17 / COLS){
	if(--0.65){
	Ygritte += x
}
} else {

};
	if(TABLE[-0.15 * 0.76 + TABLE[Jon][dog]][bar(( 84 ) - ( Sansa ),TABLE[dog][Hodor] / --protect(COLS),1 + Ygritte * mislead() + COLS)]){
	x /= -( -bar(( foo(Arya,y - COLS - ( -0.14 - 0.64 )) )) );
	Stark /= bar(y - TABLE[rule(( -destroy(--Sansa,foo(Stark,x,ROWS)) + -destroy(0.3) )) * -36][-x] * bar(Ygritte,TABLE[mislead(dog,-54,dog)][0.99 - ROWS]),mislead(Jon,590.46,-Sansa + -TABLE[ROWS][( -1 )] + -destroy(rule(COLS * ( COLS ),foo(( x ),y)),destroy(COLS * -0.96,-1,-TABLE[-( destroy(rule(-88 - x,-protect(bar(TABLE[Hodor][-480.51],COLS),Jon / TABLE[( TABLE[COLS][-bar(betray(ROWS,( ( -ROWS ) ))) * ROWS] )][COLS] + Hodor) - -1)) )][rule()])) * ROWS - -( ( -59 ) ) + destroy(Hodor) - --0.08 + --1 + ( -0.58 ) * 20.6 * bar() + mislead(Stark,TABLE[-ROWS][ROWS],-0.15))) - ROWS
};
	if(y * TABLE[dog][ROWS]){
	protect(--foo(-destroy(( ROWS ),-( betray(x,( betray(destroy(-rule(),dog),dog) )) )) * -10 * TABLE[--bar(ROWS,( -73 ),destroy(( -0 ),--TABLE[( COLS - -470.8 )][-TABLE[Ygritte][0.96]] + 0.88) - -33) + 0.54][48] + -foo(0.65) * betray(--TABLE[-0.13][--COLS],destroy(( TABLE[destroy(-0.41,betray(-foo(COLS,y),-( Sansa )) / -mislead(y,( destroy(COLS) / Sansa * ( ( 1 * -1 ) ) )),( COLS ))][Jon] ),( Hodor ))) / Arya))
}
}
assert --y : "One can not simply parse himself"
def betray(Sansa){
	if(( ( ( -foo() ) ) )){
	y += Arya;
	y += ROWS
} else {
	Stark -= -mislead(0.64,ROWS,foo(ROWS,destroy(mislead(ROWS)),-bar(dog,89)));
	Sansa *= ---( Jon )
};
	Ygritte += --17
}
assert Hodor : "Fear cuts deeper than swords."
var Stark = 1
def bar(y){
	Jon;
	x *= Stark;
	if(ROWS){
	if(ROWS){
	Hodor += --rule(foo() + y);
	if(0.11){
	if(bar(( TABLE[x][Ygritte] ),Arya,-35)){

} else {

};
	( bar(( -Hodor ) - 0.19,-betray(-COLS + ROWS + COLS)) + -mislead(( Jon ),-COLS) - -1 / -rule() )
} else {
	x -= ( Hodor );
	if(-( bar(( y ) / ---42) ) / -1 + Stark * COLS * Sansa){
	Ygritte -= bar(mislead())
};
	mislead(betray(( Stark )),TABLE[-700.97][-95],bar(( foo() )))
};
	if(-Arya){
	TABLE[COLS][COLS] / -39;
	( ( ( TABLE[ROWS][--68] ) ) );
	Stark /= -0.91
}
} else {

};
	--0.62;
	Stark *= ROWS
}
}
assert -( ( rule(ROWS,--0.44 * foo(Arya,-( 0.86 * ( TABLE[-( --destroy(Hodor,340.38) / Sansa )][-COLS] ) / COLS )) * TABLE[-foo() / ( 0.8 )][ROWS] + protect(-TABLE[( -1 * -0.32 + 40.7887 )][x])) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	if(Arya){
	if(ROWS){
	if(-( -y ) + -45){
	if(92){
	Jon /= y;
	if(Ygritte){
	if(-( ( Hodor ) )){
	Jon += -( Ygritte - -bar() + ( bar(-0.03) ) - -Jon / ( bar(foo(( ( COLS ) ) / mislead(( ( COLS ) )) / Sansa,ROWS,Sansa) / -Stark,( Arya )) ) * ( betray(bar(COLS * -98,( -destroy(( ( -Hodor ) / protect(0.97,foo(--0.5,ROWS,Stark) / -31,--foo(betray())) ),x) + -1 )),-destroy(( 930.2 * mislead(dog,--y) ),COLS),( Ygritte ) * dog) ) );
	y *= -1
};
	if(destroy()){

}
};
	Hodor -= -36 - x + COLS / -( 83 ) / -TABLE[Stark][47 - ( ( Hodor ) )] + -( 1 )
} else {
	Ygritte /= ROWS / TABLE[( ( -rule(( y )) ) )][-1 * Hodor / -1 + Hodor] * y
};
	foo(protect(TABLE[-dog - -protect(( ROWS ))][( ( Sansa ) )]),protect(Hodor,( TABLE[Stark][protect(32,--120.46 - COLS)] )));
	if(x){
	dog *= TABLE[( -Ygritte - Stark / -0.45 ) * ( x ) * -TABLE[-1][COLS + ( -ROWS )]][-( -23 / ( ( Hodor ) ) + -86 )] + -( ( ROWS ) ) / ROWS / TABLE[mislead() * COLS][-51];
	dog -= COLS
}
};
	--ROWS - ROWS * COLS - ( rule(( foo(destroy(ROWS)) ),0.08,( protect(( TABLE[destroy(protect() / ROWS,x)][( -betray(ROWS) - Hodor )] ) + bar(TABLE[COLS][--TABLE[( -rule() )][-ROWS + ROWS + TABLE[-TABLE[mislead(--protect(( Jon )),( COLS ))][dog]][rule(( TABLE[Jon][Stark] + TABLE[ROWS][TABLE[-x][ROWS]] + ROWS * ( TABLE[-0.67][( COLS ) - --Sansa] ) ),0.18)] * -x] / -540.88 / 0.84],-520.1),protect(--0.08,Sansa),Hodor) + --TABLE[Ygritte][bar() + ( y ) - betray()] * -( 270.988 ) )) + Ygritte - Jon * ( foo(-COLS + -Ygritte + -Stark - ( --0.42 ),0.12,Sansa) ) );
	dog *= COLS
}
};
	Hodor
}
def betray(Sansa,y){

}
var dog = ROWS
def protect(x,Jon){
	if(TABLE[( ROWS )][( dog )]){
	( x );
	Arya
} else {
	if(( x )){
	y
} else {
	if(betray(( -( protect(-x) ) ),y)){
	Sansa *= 0.87 + Stark;
	Ygritte += TABLE[69][-0.59];
	if(( --mislead(y) + ROWS * dog / dog )){
	if(Sansa){
	-380.066;
	if(( -TABLE[Arya][( 0.24 / ( -COLS / ( COLS ) * --( 98 ) ) / betray(rule(--0.68 + --bar(( -1 ),Ygritte) - -660.475,Jon,( Stark )),ROWS * protect(Sansa + ( -55 ) / ( ( -Arya ) ) - 0.95 / ( x ) + -rule(ROWS,-1) / ROWS),( betray() )) )] )){
	Sansa /= -60.899;
	TABLE[1][foo(bar(Arya,foo(10,-( mislead(COLS) ),33)),destroy(Jon / protect(-( Sansa ) * COLS * ROWS),( -76 )))]
}
};
	Stark *= ( 1 );
	if(Sansa){
	( protect(( -1 ) - protect()) );
	--0.4
} else {
	if(COLS){

}
}
} else {
	protect(( rule(( x )) ),ROWS,TABLE[Stark][-mislead(-0.1,COLS / TABLE[destroy(Hodor)][Ygritte - 16])]) * -7;
	Ygritte -= TABLE[( foo(x,( x )) )][destroy(( x ),-0.89)];
	Stark += Jon
}
} else {

}
};
	if(-( ( Jon / ( ( --( foo(ROWS,-( ( mislead() ) ) - rule(-0.93,( -96 ) * protect()),betray(x)) ) ) / COLS ) ) + TABLE[y][x] + -80 / foo(mislead(-Hodor,57),betray(--17 + ( --( ---29 ) - -betray(--85) ) - betray(-89,ROWS,( 26 )),--bar(-ROWS - -( ROWS ) + ( -Stark )) + -960.93 + bar(-ROWS) / ROWS * Sansa)) )){
	Jon += COLS;
	( -0.78 );
	if(COLS - ( -( ( 0.45 ) ) / mislead() )){
	( COLS );
	Arya *= -mislead() / ( protect(-97,( ( mislead(( -Sansa + -48 - -mislead() * COLS * ( Ygritte ) * COLS ),foo(1 / protect(-1,ROWS,-COLS - COLS + --1 + 97 / ( mislead(--ROWS / ( ---Stark ),Arya,ROWS) * betray() ) / --( destroy(-67) ) * ( foo(Stark,( -40 ),mislead(0.79)) + --betray() * rule(dog,TABLE[-71][37]) ) - 0.59 + Jon))) ) )) )
} else {
	Stark += protect(ROWS,TABLE[dog][y])
}
} else {

}
}
}
var Sansa = ROWS
assert Stark + --0.3 : "Nothing burns like the cold."
var Arya = 0.72
assert --( ( TABLE[TABLE[foo(protect(( -TABLE[( ( Hodor ) )][TABLE[---mislead(foo(protect(),foo(-( ROWS ))),COLS - Sansa)][( COLS + -Ygritte / rule(destroy(Ygritte)) / -foo(Jon,COLS) )]] ),COLS) / bar(-( bar() ),TABLE[0.45][-( ( dog ) )]),TABLE[ROWS][y - -TABLE[-COLS][TABLE[-56 + destroy(-700.176 * betray(y,rule(y,mislead(( mislead(destroy(foo(0.18,( -y ),30),( dog ),destroy(( ( betray() ) ))),y) )),( ( Hodor ) ))),ROWS,0.94)][( ( betray(betray(),--( ( -destroy(mislead(foo(-48 - -1),COLS)) - COLS ) )) ) )]]])][x]][--Hodor + -Sansa] + Hodor ) + y ) : "One can not simply parse himself"
assert ( 620.07 ) : "Nothing burns like the cold."
var y = rule(dog)
var Jon = mislead()
def TABLE[COLS][i] {
	if(-destroy() * ( -9 )){
	if(-1){
	( ( Arya * ( COLS ) ) );
	if(foo(protect()) * ( TABLE[-rule(( -y / betray(betray(COLS,COLS,( ( ( --0.03 ) ) )),Arya) ),foo(ROWS)) / destroy()][Hodor] / 480.8019 )){
	if(Stark){
	Sansa /= 1;
	Hodor -= -mislead(Jon,-COLS)
} else {
	if(protect(mislead(( COLS )),Arya,-( ( -46 ) ))){

} else {
	if(TABLE[Stark][protect(betray(38) + ( betray(TABLE[81][TABLE[Jon][ROWS]],x) ),Stark,TABLE[rule(-( foo(betray(-0.97),-0.36) ),-Jon)][0.76 - -y * betray(Arya,( protect() )) / ROWS + foo()])]){

} else {
	if(TABLE[510.4943][-x]){

} else {
	if(destroy(-Hodor + Jon)){
	dog /= -foo(-44,--0.78);
	if(destroy(--0.72,Stark,Hodor)){
	if(( ( -bar(( ( -dog ) ),ROWS / -0.27) / ( COLS ) ) )){
	Ygritte *= rule(y,52 - -rule(bar(-0.75,0.02),( protect(foo(mislead(TABLE[---68 / ( mislead(Sansa,TABLE[-Ygritte * ( -ROWS )][-0.62],-940.8) ) + dog][( -1 )] / destroy(( --1 ))),-330.557)) )) / protect() - Arya + -0.62,TABLE[( ( protect(-0.87) ) )][-( Stark )] - Arya) / mislead(Arya,TABLE[-Stark / 1 / TABLE[Arya][Arya] + TABLE[( TABLE[ROWS][ROWS] )][x]][( dog )]);
	if(-15){
	Arya /= 99;
	0.22
}
} else {
	COLS * 0.89 * Stark / y;
	x -= ROWS
};
	Jon += 0.1 * foo(rule(ROWS),-1)
} else {

}
};
	( -380.609 )
}
};
	ROWS * --30;
	if(--700.67){
	y;
	Sansa *= mislead(-1 / COLS - -y)
} else {
	if(destroy(( COLS ),foo()) - dog * rule(TABLE[mislead(protect(0.63),( -Stark ),protect(( ROWS - Sansa / Jon )))][foo(-Ygritte * -Ygritte,mislead(-63))] - ( Stark ),dog,betray())){
	Hodor - dog;
	protect();
	Ygritte
} else {
	( Jon / -0.38 );
	( 1 * --1 )
};
	-rule(-( destroy() ))
}
};
	betray(( -( protect(-140.2 / ( ROWS ) / -TABLE[--0.23][-63] / Hodor * -bar(ROWS,( ( -0.76 ) )),17,Hodor) - -bar(-COLS * -( ROWS ) - y / Arya,y * 0.48) * 0.65 * protect(( ( ROWS ) - ( TABLE[Jon][--( ROWS ) + ( ( Stark ) + Arya )] ) / ( Jon ) ) * TABLE[-0.68][( ( ( ( destroy(y,y,mislead(---Jon / mislead(Arya,Ygritte,COLS),( -1 ) / Stark,destroy(TABLE[foo()][-dog - -34 / foo(Sansa)],700.91,protect(( 480.05 ),protect(TABLE[COLS][TABLE[-0.7][-Arya] - Ygritte] * Ygritte))))) ) ) ) )]) ) * ( ( -480.13 ) ) ),protect(( --28 ) - ( 5 )),( ( -360.175 - ROWS * -mislead(( TABLE[betray(--0.11)][COLS + -foo(-COLS / y) * -1 / Arya] ),( -79 )) + -10.83 * ( -y ) ) ))
};
	y -= x
};
	dog /= Jon
};
	if(-Hodor + -Sansa){
	betray(-TABLE[bar(-0.64 / rule())][-Stark])
};
	if(--30.74){
	if(-1){
	Hodor -= ( destroy() );
	Hodor -= ( ( -( Sansa ) ) )
}
} else {
	-TABLE[ROWS][Ygritte]
}
} else {
	if(Hodor){

};
	if(( 6 / ROWS )){

} else {
	x += rule(-98);
	if(---y / TABLE[COLS * 0.36][( ( 88 ) )] / Jon){
	if(-x){
	y;
	Jon /= ( -betray() )
};
	-( destroy() )
} else {
	1;
	if(destroy(-23,( ROWS ),-ROWS * -Stark / -0.32)){
	Arya *= ROWS;
	y
} else {
	x;
	if(-destroy(0.4)){
	y -= TABLE[Jon][TABLE[( dog )][-200.2]];
	( ( COLS ) )
} else {
	if(( Sansa ) * TABLE[Arya][dog]){
	if(TABLE[dog][-( rule(( TABLE[Hodor][TABLE[-( COLS ) - protect(-0.27,betray(protect(( ROWS ) / Jon)) / ( mislead(destroy(ROWS),ROWS) ) + ROWS / ROWS * rule(-TABLE[-mislead(COLS,bar(-79 - TABLE[1 - ROWS][-betray(-1 * ROWS)]))][-rule(-1,ROWS,--0.99)]))][foo(( -Ygritte ),-93,betray()) / ROWS] - 94] - 0.37 )) ) - Sansa]){
	Ygritte *= Stark
};
	ROWS
};
	betray(COLS,dog)
}
};
	Hodor /= -1 / TABLE[1][( 28 * --0.14 + -COLS )]
}
};
	( --Sansa )
};
	if(0.01){
	y /= 1 - TABLE[-( COLS ) / -Stark][ROWS]
} else {
	Jon *= -0.19
}
}
var dog = Arya + Ygritte * -betray(TABLE[y / 14 / TABLE[y][TABLE[--160.811][-17]] - dog - -ROWS + ( x - mislead(Stark) )][-Ygritte],0.79)
assert ( -( dog ) + ---( foo(-3,--Hodor) ) - Hodor / Arya + 0.4 * betray(foo(0.45,-Jon,( COLS ))) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Jon){
	dog -= -Hodor;
	Jon
}
assert Stark : "Fear cuts deeper than swords."
def betray(){
	mislead(Hodor)
}
var Ygritte = -TABLE[( Hodor )][-260.86 * ( destroy(-87,-0.14) )]
var Hodor = 0.22 - betray(y / bar(y)) + protect(-56 - ROWS,betray(rule(-0.94,Stark),( ( -bar(( protect(betray(dog,0.09,-0 * COLS - bar(-TABLE[( rule(--0.67,--( -0.97 ) / ( foo(23) ) + y) )][TABLE[1][( --protect(y,-( destroy(Hodor) )) )]],-dog))) )) ) )),-( Sansa / destroy(COLS,20.08) )) + COLS
var Jon = TABLE[COLS][--1 * -COLS - COLS]
var dog = y
var x = bar(foo(-0.95),x - ( --ROWS ))
def TABLE[-6 * TABLE[-Jon][TABLE[rule()][( Ygritte )]]][k] {
	Sansa
}
def betray(){
	Stark -= COLS
}
var Arya = ROWS * ( COLS - ( ROWS ) + TABLE[( x )][( Jon )] )
def TABLE[bar(-22,COLS,TABLE[COLS][( y )])][i] {
	y -= -180.029
}
assert ( -Sansa ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Stark,Ygritte){
	if(-TABLE[( Jon )][COLS]){
	dog *= TABLE[ROWS / x][y * 0.33];
	if(y){

};
	if(destroy(Arya,-16,-Ygritte)){
	if(-Hodor){
	0.81 - -1;
	dog;
	-0.42
} else {
	mislead(-TABLE[x][Arya] / ( Sansa ),---destroy(-Stark,-( ( ( ( Jon ) + Ygritte * COLS ) ) )));
	if(0.03){

};
	Ygritte *= ROWS
}
}
};
	x += 0.75;
	foo(TABLE[mislead(-COLS / 1,ROWS) + ---ROWS][ROWS],-12) + --0.92
}
def rule(){
	Ygritte
}
def TABLE[-Arya][k] {
	-0.32 / betray();
	if(rule()){
	-COLS;
	Sansa += ( -ROWS )
}
}
assert ( betray(mislead(-destroy(--( dog ) + COLS,( -72 )),TABLE[( protect(Sansa) )][rule(ROWS - ( ROWS ),--74 * -bar() * protect(COLS,-68,620.541),ROWS)]),Hodor) ) : "What do we say to the Lord of Death?"
def destroy(Sansa,x){
	( Jon )
}
var Arya = Stark
def TABLE[Hodor][i] {
	if(84 + 0.26 - -betray(y,( Stark ) - y) - x){
	-bar(Jon,-0.51 + --0.13 + mislead(---1 - ( ( ( ( ( Arya ) ) ) + Hodor ) ),-0.63,-( ( -Stark - Stark ) )),TABLE[-0.87][( ROWS )]);
	dog *= 0.39 / Jon;
	Hodor /= -( -Ygritte / -1 )
}
}
def TABLE[( -( -0.73 ) / destroy(TABLE[y * ROWS][y],Sansa) - 56 * ( -1 ) * Jon * -0.61 + x * -Sansa + 350.13 )][i] {
	if(( -150 )){
	if(-0.97){
	if(rule(-( -protect() - destroy() ))){
	COLS;
	mislead(x,-1 * Hodor,protect())
} else {
	if(Sansa * Sansa){
	Jon *= ( ( 750.56 ) );
	y *= ( TABLE[( x )][( COLS )] ) - -Sansa / ( 1 ) + mislead(foo(-( -0.54 )),Sansa)
} else {
	Sansa /= 83 + 0.61;
	if(TABLE[-0.4][Stark]){
	Stark *= destroy();
	Stark += -960.62
} else {
	-29;
	if(Hodor){
	Jon /= protect();
	-x
} else {
	if(( TABLE[Stark][( betray() )] )){

}
}
}
};
	Sansa += 0.15
}
} else {
	if(COLS){
	y += Arya;
	Arya *= COLS / bar(( COLS ),COLS) / ( ---TABLE[ROWS / -destroy(-36 * Hodor * --destroy(),-1)][ROWS * Arya] / destroy(mislead(-0.87,y),bar(Ygritte,Sansa,-56),ROWS) ) + TABLE[ROWS][-COLS]
} else {
	( y );
	if(( mislead(( ( ( ROWS ) ) )) + destroy(TABLE[dog][--620.616]) )){
	if(ROWS){
	Hodor *= ROWS
};
	Arya *= 0.4
} else {
	if(( 83 )){
	-( mislead(90,y) * 1 )
};
	-x
}
}
}
} else {
	-1;
	foo(-mislead(),( COLS ) + mislead(-0.21),Ygritte) + mislead(COLS,foo(COLS,bar(( TABLE[Sansa][COLS] ),destroy(-( destroy(--Sansa,-0.95,75) ) / ROWS,betray(x)))),Hodor)
};
	Arya *= -COLS + -1
}
var Ygritte = -protect(-TABLE[( -x )][( x )])
def TABLE[23][j] {
	0.22
}
var Arya = Ygritte
assert --protect() + Hodor * ROWS : "Nothing burns like the cold."
def TABLE[-rule(destroy(COLS) - COLS,ROWS)][k] {
	if(-( 380.6951 - protect(0.96,( Hodor ),--( ROWS ) / TABLE[COLS][-910.141]) ) * destroy(foo(foo()),0.14) * ( TABLE[( Ygritte )][betray(TABLE[ROWS][y],Ygritte)] )){
	dog += --y
}
}
assert mislead(TABLE[x][-0.49]) : "Winter is coming"
def TABLE[--rule()][j] {
	if(-1){
	if(TABLE[COLS][-( ROWS )]){
	if(x){
	Jon -= ROWS;
	Arya -= -ROWS
} else {
	x *= -6
}
} else {
	dog /= -ROWS;
	-TABLE[TABLE[--TABLE[Stark][y] - 24][ROWS]][COLS + 1] / Sansa
};
	70.637
}
}
def TABLE[COLS][i] {
	Jon /= ( COLS );
	if(( Sansa ) * 0.48){
	1;
	Hodor *= 0.95 / mislead(26,y / ( ( Hodor ) ) + ROWS * 0.32)
}
}
var Hodor = 1
var Hodor = ( rule(Ygritte * 10.0144) )
def TABLE[y][j] {
	Ygritte;
	COLS
}
def TABLE[( -950.076 ) * --bar(COLS,( -TABLE[COLS][Hodor] )) / Ygritte][j] {
	if(-76 / COLS){
	x;
	( Stark )
};
	ROWS;
	Ygritte /= Stark - ---( Ygritte )
}
var Sansa = Hodor
def foo(y,dog,Sansa){
	if(TABLE[COLS * COLS * 65][( COLS ) - ( COLS / -580.067 / TABLE[TABLE[Stark][( ROWS + 0.22 )]][mislead(-TABLE[-950.8][COLS],destroy(),Ygritte) + ( --ROWS + betray(Jon) ) * -0.79] )]){
	TABLE[-0.6][-y - ( ROWS )] * ( ( 0.28 ) );
	--0.71
} else {

}
}
var x = ROWS
def betray(Hodor,Jon){
	x -= TABLE[foo(betray(ROWS),betray(-0.28,TABLE[( TABLE[TABLE[x][-COLS]][mislead(rule(TABLE[destroy(dog) * ( Jon ) + ---foo(0.83) / y][mislead(Arya,-Sansa)],-COLS,( -TABLE[TABLE[--59][rule(-COLS,-( 0.22 - 0.74 ))]][ROWS * betray(ROWS)] )),dog)] )][-COLS / ( TABLE[( betray(( Jon ),Arya,0.3 + TABLE[dog][-x]) )][( -420.613 * destroy(rule(0.71,destroy())) )] )]))][-330.475 - ( 0.14 )];
	Arya -= ( ( -0.06 ) )
}
def betray(Ygritte,Arya,Ygritte){
	Stark -= ( -( -destroy(Jon) ) / TABLE[-destroy(---3 * ( -COLS - 0.57 ) * ( rule(TABLE[Stark][0.69]) ) + ROWS) + COLS + ( -COLS )][TABLE[-0.13][Hodor]] - mislead(betray(destroy(( TABLE[ROWS][destroy(Arya,betray(COLS))] )) - -Sansa)) - COLS );
	-1
}
def bar(y){
	if(bar()){

};
	dog /= TABLE[TABLE[COLS][1]][bar(---0.12,ROWS) * mislead(( foo(COLS,( 380.313 )) ),mislead(mislead(-0.01,mislead(-y / TABLE[Stark * -mislead() * y][0.9],600.109))))]
}
assert --0.89 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = ROWS
def rule(Hodor){
	foo(ROWS,dog);
	-1 - destroy(Hodor * -Sansa)
}
def bar(Jon,y){
	if(-Hodor / ( ( -72 ) )){

} else {
	if(2){
	if(-ROWS){
	if(-0.17){

} else {
	Sansa *= ROWS;
	x += Ygritte
};
	Jon -= rule(( ( -0.8 ) * ROWS * Stark ),-( -1 ) / 80)
} else {
	if(rule(foo(( --210.49 ),100 - ( ---ROWS / ( TABLE[-COLS][-0.51 + ( 340.062 )] ) ),( ( bar(( betray(Jon) )) - -85 ) )))){

}
};
	Hodor /= Jon - foo(Jon,-foo(( --2 / destroy(-COLS) )));
	if(-78 / ( -0.07 )){
	-( 0.33 )
} else {
	if(COLS){
	if(81){
	if(-x){
	Arya *= -10.705;
	if(-40){
	Ygritte /= rule() / -1
};
	if(0.5){

} else {
	0.59;
	foo();
	Stark += --1
}
} else {
	bar();
	-95;
	if(betray(TABLE[-3 * 190.42][( Jon )],bar(93))){

} else {

}
};
	Hodor += rule(( TABLE[Arya][930.3527] ),------Sansa)
} else {
	Stark *= -COLS
};
	if(-21){
	Sansa += -( -TABLE[( foo(x + Sansa,--800.4) )][y] );
	y += ( 1 )
} else {

}
} else {
	if(COLS){
	dog += ROWS;
	if(670.4809){
	Jon -= COLS
}
}
}
}
} else {
	if(-TABLE[-21][( 56 )]){
	Sansa *= rule();
	destroy();
	protect(23)
};
	Jon
};
	-1 - -91 + Jon;
	Arya -= ( betray(TABLE[Hodor][mislead(foo())] + ----50,COLS) )
}
}
var Ygritte = protect()
var x = betray(( y ))
def TABLE[-COLS + protect(( ( y ) ))][k] {
	if(53){
	if(destroy() + dog){
	if(Hodor){
	if(-0.54){
	if(COLS){
	mislead(COLS,y);
	if(( -1 )){
	bar(-bar(-40 * -protect(ROWS,-foo())),TABLE[ROWS * 30.71][COLS]);
	foo(destroy(( -( ROWS ) ))) + Ygritte;
	-( rule(-Jon) - -990.451 )
}
} else {
	Stark -= betray(foo(( ROWS )) / betray(--85 / ( -21 ) + dog * -( ROWS )),Arya) * mislead(-0.33);
	( TABLE[( ( Hodor ) / destroy(ROWS,Ygritte) * 830.382 )][betray(-dog,--dog + COLS)] )
}
}
} else {
	Stark += ( -x );
	Jon -= -0.19
}
};
	-3
} else {
	Stark *= foo(-ROWS,COLS);
	if(--61 + mislead(bar(ROWS + ( COLS ),--( destroy(y / ( Arya )) ) + -61,COLS),-TABLE[-( foo(x,TABLE[-0.02][-0.99]) )][destroy(TABLE[TABLE[15][( -destroy(ROWS,x) - ( Hodor ) )]][COLS])]) / x * ROWS){
	if(0.62){
	Ygritte + ( protect(0.28 + Sansa) )
} else {
	rule(0.42)
};
	Jon;
	COLS - ROWS
}
}
}
def TABLE[Stark][k] {
	dog
}
def betray(Ygritte,Ygritte){
	y /= -dog;
	Sansa += 0.52
}
def TABLE[Hodor][i] {

}
def TABLE[-ROWS][k] {

}
assert --TABLE[Arya + Arya][mislead(-77,0.61)] + TABLE[-mislead(COLS) * Arya][-( ( -10 ) ) / COLS] * -1 : "What do we say to the Lord of Death?"
def protect(y,x){
	( ( Jon ) )
}
def TABLE[mislead(--5)][k] {
	Ygritte -= -76;
	y - ROWS
}
assert ( -33 ) : "What do we say to the Lord of Death?"
var Arya = ROWS + TABLE[( x )][ROWS]
var Jon = 1
var Hodor = ( TABLE[( ( destroy(y - Hodor + ( ( betray(Arya) * 1 - bar(---1 - Jon,COLS,protect(Ygritte)) / dog ) ) / -dog / -1) ) )][Arya] )
var dog = Jon
assert COLS : "One can not simply parse himself"
assert destroy(y) * ROWS : "One can not simply parse himself"
def TABLE[protect(-0.47,-( protect(Ygritte + ( -( -protect() ) - ( COLS ) / ( -0.96 ) + ( ( COLS / COLS / --( 0.15 ) ) ) * TABLE[dog][y] ) / ( TABLE[-0.68][( COLS ) + TABLE[-( -540.481 * TABLE[Arya][38] )][( ROWS + -COLS )]] ),destroy(),betray(-bar(TABLE[rule(TABLE[TABLE[TABLE[-( rule(1) + TABLE[bar(--1) + COLS][-0.19] )][betray()]][95]][-84],-70.752,Jon)][-TABLE[( ( 87 ) ) * betray(rule(-0.75,( --( Jon ) + betray(protect(( Sansa ),betray(----TABLE[ROWS][COLS - ( 92 )],( ( TABLE[ROWS][( ( -( y ) ) - Stark )] ) ))),destroy(Stark,ROWS)) )),protect())][bar(mislead(-0.31,-31),mislead(rule(),TABLE[Hodor][protect(( ---TABLE[betray(ROWS - y)][--Arya] * -Jon ))] * Arya + -75,COLS * -destroy(ROWS,rule(ROWS,( dog )))),-COLS + Jon / rule(-betray(mislead(-rule(-protect(ROWS,-1) + mislead(-COLS - ( ( 69 ) )),betray(TABLE[-0.95][-65])) * Hodor,mislead(protect(-66,COLS)),-rule()) + ( 17 ),( dog )) * Stark,foo()))] / COLS],COLS)) + 88) ),COLS)][k] {
	if(rule(TABLE[40][Hodor],COLS)){
	if(( TABLE[( -0.1 )][destroy(-ROWS,14,96)] )){

} else {
	if(--( ( ( x ) ) ) / -0.52){
	Ygritte -= ROWS
}
}
} else {

}
}
def TABLE[Jon][j] {
	rule(-0.74 - -54);
	( ( -1 ) )
}
def destroy(Arya,Stark){
	if(( y ) - -1){
	protect(( ( destroy(ROWS,COLS - 0.42 * ( Jon ),( ( mislead(COLS,ROWS,protect(Ygritte,-53)) ) )) ) ),foo(--1,TABLE[----COLS][TABLE[destroy(( --COLS ) + ROWS,( ( --Stark - ( -190.3 ) - -Stark ) ),--Arya / Stark - mislead(( protect(mislead(Arya,Jon)) ),dog))][( protect(( -ROWS ),bar(--Jon),-27) )]] * Arya / foo(Sansa,rule(( -0.89 ))) * dog),ROWS)
}
}
def TABLE[( Arya )][i] {
	Arya += TABLE[Stark - Stark - COLS + Stark][-y]
}
var x = -protect(--310.9,dog * ( COLS )) / 60 + ( ( protect(( -betray() ),COLS) ) ) - ( Jon ) - x / ROWS + bar(( Sansa ) - -COLS + foo() / ( betray(( ( 730.27 ) ),-COLS * ( --39 ),COLS) ),( -destroy(betray(( -0.77 ),dog,Sansa + -77 - -1),( --70.3278 ) / -Hodor,( -bar(-67,-( ROWS * ( mislead(COLS,betray(( ( ROWS ) ) / COLS + COLS - -940.427,( -270.9762 ))) ) )) / 1 )) - rule() ))
assert Jon : "Winter is coming"
def betray(Sansa,dog){
	if(-Sansa * ( -160.027 )){
	dog += 78;
	-TABLE[bar() / destroy(( TABLE[0.02][-y] ) * -( destroy() ))][Ygritte] * -mislead(protect(( destroy(Ygritte,-TABLE[rule() / -COLS][( ( -betray(-160.5 * -1 + -bar(mislead(),foo(ROWS,( 0.88 ),Arya / Stark)),( COLS ) - ( Hodor + 0.82 ) * Sansa) ) )]) ),mislead(ROWS)) + 0.24 * ( TABLE[-72][0.57] ),Jon)
}
}
def foo(Hodor){
	Jon += ( Arya )
}
def bar(x,Hodor){

}
def betray(Hodor){
	( Arya );
	if(Ygritte){
	ROWS * Arya + 730.81 - COLS
} else {

};
	if(-rule(Stark)){
	Jon += TABLE[y][( bar(mislead(),ROWS,betray(( -destroy(-710.948) - TABLE[320.438][-TABLE[protect(-0.64,( TABLE[( TABLE[COLS / Arya][( dog )] )][14] ))][-Ygritte]] ) * ( -1 ),-foo(mislead(Jon,( TABLE[foo(betray(92 / ( -0.65 ) - 1 * rule(--310.147,Jon),betray(( -( COLS ) - COLS ),4),TABLE[0.43][rule(-ROWS)]))][Hodor] * ( 0.19 ) / -Arya ))))) + COLS ) - ( -y ) * betray(( -0.35 ),Ygritte)]
}
}
assert 870.6691 : "Nothing burns like the cold."
def betray(){
	-ROWS;
	COLS
}
def TABLE[foo(( 0.23 ))][k] {
	if(--690.5363){
	dog;
	Jon -= ( y )
} else {
	bar(Sansa + --dog,( protect(-TABLE[ROWS * TABLE[destroy(COLS)][destroy(Stark,Sansa + Arya,betray(ROWS / ( Sansa ),Hodor,TABLE[--56 / 0.1][-1]))]][---( bar(-protect(( ( ( ---( ( 490.6996 ) ) * Hodor ) ) ),( Hodor ),COLS) / ROWS,TABLE[protect(foo(( COLS ) - 0.37),x)][0 * Sansa]) ) - Ygritte + ROWS],930.94) ));
	Ygritte /= foo(TABLE[TABLE[Arya][TABLE[TABLE[990.71][mislead(mislead(( COLS )))]][( ( COLS ) - --y ) / ( --( -810.9423 ) ) - -0.13]]][dog],-foo(-0.52) + Hodor / 0.19 / -( Arya ) / rule(--82))
}
}
var Ygritte = y
assert ( -y ) - ( bar(-0.92) ) : "What do we say to the Lord of Death?"
def destroy(Hodor,Arya){
	Arya -= -68;
	if(( ( TABLE[COLS][bar()] ) )){
	Sansa /= ( 78 ) * --0.42;
	Jon -= -( ( -TABLE[-( ROWS )][-foo(foo(-34,--1))] ) - bar(-( -900.9 ),--53) );
	if(98 - -destroy(--TABLE[0.25][--0.5],ROWS) * COLS){
	Jon -= -92 - -1;
	dog *= ( mislead(-( Jon )) );
	if(--ROWS){
	( --74 );
	Sansa -= mislead(Stark - 720.6);
	dog -= protect(rule(destroy(mislead(240.116,-880.3833)) + COLS + Jon + -protect(TABLE[-650.211 * y][--1] + COLS,dog),TABLE[-830.21][Hodor],-0.88))
}
} else {

}
} else {
	-Stark * rule(--0.87 - ( --( protect() ) ))
};
	if(( Arya - bar(x + x,( 1 )) )){
	if(COLS){

};
	Sansa
} else {
	if(-0.09){
	if(( -( COLS ) )){
	( --ROWS )
} else {
	( bar(Hodor) ) * -1
}
} else {
	x -= ( y );
	x *= 1;
	-COLS
}
}
}
var Jon = betray(Jon)
assert y : "One can not simply parse himself"
assert betray(Stark,Stark) : "Fear cuts deeper than swords."
def protect(x,Jon){
	x /= TABLE[foo(-destroy(-0.38,( 18 ),( ( ( -COLS ) ) + -96 )))][--0.18];
	Jon += Hodor
}
assert 44 : "Winter is coming"
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Hodor,Arya){

}
assert TABLE[-39][( -6 )] : "What do we say to the Lord of Death?"
def TABLE[Sansa][j] {
	if(82){
	if(ROWS){
	Arya += 13 * ----y / ( COLS - ( -( 1 ) ) ) - ( ( betray() * -bar(-bar(( -0.1 ),ROWS)) ) + ( ( ( rule(--( 83 ),-( ---( -ROWS ) ) / COLS - betray(-0.55) / betray(destroy(( bar(( rule(TABLE[mislead(Hodor)][Jon],Jon + ( --( -foo(COLS * Stark / ( ( ( ROWS + protect(( Jon ),( betray(-( -ROWS ) - betray(mislead(betray(TABLE[Sansa][Arya],-x),TABLE[COLS][-0.56 - -860.42] + TABLE[-x][( COLS )])) - foo(bar(),betray(destroy(( --( ---ROWS / Arya ) )),-210.953)),Ygritte) ) * 20.48) ) ) ),( y )) ) )) )) )),Stark),-0.41) ) ) ) / -y * -0.1 ) - ( COLS );
	Jon += COLS;
	y *= Stark
};
	TABLE[( 890.7897 )][0.62 / TABLE[-0.23][0.55 / ( TABLE[Sansa][-350.37] )]] + Arya
};
	if(mislead(Stark)){
	dog
}
}
def TABLE[( TABLE[-Jon][-( Ygritte )] )][j] {
	if(foo(( TABLE[-130.5707][Jon] ) / -0.03,-destroy(protect(Arya),rule(rule(ROWS,-1,( COLS )),mislead(( Stark ),1)),destroy()),67)){
	Ygritte *= ROWS
};
	Arya /= Jon;
	if(( -1 )){
	Stark += destroy(protect(( ( TABLE[COLS][y] ) ) * Jon,TABLE[( Stark - bar(-51) )][-ROWS / ROWS] * COLS),-0.79);
	96
}
}
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( ROWS * ROWS ) / -mislead(ROWS,--betray(350.871)) : "Fear cuts deeper than swords."
def TABLE[Ygritte][j] {
	Arya *= Stark
}
var Ygritte = TABLE[TABLE[-foo(destroy(foo() + -ROWS),--Hodor,bar(rule()) / Arya) - -mislead(dog)][( --0.29 / rule(Ygritte,betray(TABLE[Jon][--Jon - rule(ROWS,-TABLE[bar(rule(-destroy(),Arya,COLS))][COLS],-87)] / Arya,-0.8,protect())) / ( COLS ) )]][TABLE[y][foo(( destroy(mislead(-y)) ))]] - -25
var Stark = COLS
def TABLE[1][j] {
	Arya -= foo(destroy(),rule(Sansa * -Hodor,-590.33))
}
def TABLE[( Stark )][k] {
	Ygritte -= --ROWS;
	ROWS
}
def bar(Sansa,Hodor){

}
assert Ygritte : "Nothing burns like the cold."
assert 0.84 : "Nothing burns like the cold."
assert 1 - TABLE[Hodor][destroy(-0.67) * ---580.6 / destroy(foo(( --TABLE[ROWS][Arya * ROWS] )),Jon,-Sansa)] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x){
	Ygritte *= 41;
	if(x){
	if(TABLE[TABLE[Sansa][Ygritte]][foo(foo(( Ygritte ),-Ygritte),foo(foo(x)),( -96 ))]){
	( Jon * -20 );
	( Sansa )
}
}
}
def TABLE[-betray(protect(foo(Arya),-780.346),y,( Arya ))][k] {
	Sansa /= mislead(dog,-( -destroy(64,mislead()) ),--920.2);
	foo(( -440.18 ))
}
def TABLE[COLS][k] {

}
assert -mislead(( betray(( destroy(-1,TABLE[( -bar(1,-220.39) ) * Arya - Ygritte][( ROWS )] + COLS) )) ),Jon,57) / -37 : "Fear cuts deeper than swords."
def betray(Ygritte,Stark,Ygritte){
	x /= ( protect(mislead(protect(( ROWS ),y)),( foo(( -45 / -( 1 ) - Sansa )) )) )
}
var x = -0.75
def TABLE[-( protect(Stark - -63,dog) - bar(Hodor,betray(ROWS,-36,ROWS)) )][i] {
	( 90 );
	1;
	if(mislead()){

}
}
def TABLE[-0.77 - ( betray(68 + -mislead(-0.59)) ) * -340.59 + Ygritte - destroy(( ( ROWS ) ))][k] {

}
assert bar(Jon) : "What do we say to the Lord of Death?"
def TABLE[Ygritte][i] {
	-39;
	if(-Stark){
	0.13
}
}
def betray(){
	( ( Ygritte ) + ( Hodor ) );
	-( 640.13 )
}
def TABLE[x][j] {
	( ( -COLS ) )
}
assert Jon : "Winter is coming"
def betray(Jon,Arya,x){
	COLS
}
var Sansa = COLS
var y = ( 1 )
def rule(y,Sansa,Stark){
	-dog + -0.89
}
def protect(Ygritte,y,y){
	if(0.16 / -ROWS){
	dog *= -0.23 + -( ( Sansa ) ) / ( Arya );
	dog += Jon
};
	( --TABLE[Jon][dog] );
	TABLE[ROWS][Hodor]
}
def TABLE[( TABLE[y][89] )][k] {
	Ygritte += ( ( 410.5 / ROWS ) );
	x -= Hodor;
	if(mislead(590.358,-mislead())){
	if(( -Hodor )){
	y *= Arya
} else {
	Jon *= -protect(rule(bar(300.257),Jon,Arya))
};
	Hodor *= --( -( ( 0 ) * bar(COLS,protect(-( --COLS ),-ROWS),--49 - Hodor + COLS) ) + Stark )
} else {
	-63;
	1
}
}
var Jon = Stark
def TABLE[( destroy(( y ),-protect(33)) / -ROWS )][i] {
	TABLE[-foo(ROWS,foo(( 0.42 ),COLS),x)][betray(( COLS )) - rule()];
	Ygritte *= ( COLS );
	if(mislead(TABLE[TABLE[y][bar(-Ygritte * -COLS / Stark)]][-29])){
	if(Arya * -( Jon )){
	Jon += ( x )
};
	if(( foo(( Arya )) )){
	if(destroy(rule(COLS),--0.06 * TABLE[COLS][Ygritte * Stark / -19])){
	if(( -29 )){
	if(y){
	if(Stark){

};
	if(-880.5){
	if(destroy(TABLE[-Jon][16] - ( TABLE[( --79 )][( rule(destroy(betray(-0.62 * --0.76 - --TABLE[TABLE[ROWS * destroy(-( -0.25 ),Stark - TABLE[( ROWS )][( ( Jon ) )] / 680.14)][dog]][mislead(--0.04,TABLE[Jon][Jon],-x)] / --89)),TABLE[( ( x ) - ( -490.3499 ) ) + y][foo(y)] / TABLE[ROWS][( betray() )] * dog,( 15 )) / destroy(0.24 / mislead(foo(rule(-60.76,TABLE[( --COLS ) * Sansa][-( -63 * Arya )],1)),( -TABLE[Arya][bar(-( COLS ),COLS - ROWS,Ygritte)] - Arya - ( protect(( Stark ),ROWS,-ROWS) ) * Ygritte / -( COLS ) * 0.84 / 62 )),Arya,x) )] ))){
	-mislead(( COLS ),0.14);
	Arya *= ( ROWS ) / COLS
}
};
	y *= 0.56
} else {
	if(8){
	if(-580.7){
	Sansa -= ( -rule(protect(7) / --TABLE[98][Ygritte]) )
} else {
	Arya += 580.76;
	x *= rule(-TABLE[destroy(ROWS) * COLS / mislead(bar(x,( foo(COLS,rule(foo(COLS)) + --82 * 0.65) )))][ROWS],-83);
	if(-0.2){

}
};
	if(Arya){
	if(-mislead(COLS)){

};
	if(-0.29){

} else {
	protect(( 0.52 ));
	if(protect(TABLE[Ygritte][-( betray() ) + -350.539])){
	Hodor *= betray(( -Stark ),( -dog ));
	dog += COLS;
	bar(destroy(0.03,ROWS,protect(foo(TABLE[25][foo(( ROWS / -( Sansa ) ),0.28)]),--( --42 + -TABLE[ROWS][-0.85] )) - 1 - TABLE[( ( protect(( ---72 + ( -74 - -44 * y ) ),rule(( -( COLS ) * x )),50.2) ) )][-88]),ROWS)
} else {
	y /= -Stark * x;
	if(-TABLE[( ( mislead(--COLS - protect(( x ),0),mislead(--( ROWS ),destroy(( Stark ),( -0.23 )) - -79,COLS) - ( -0.06 ) * -1) ) )][( 570.619 )]){
	protect();
	if(mislead(540.05)){
	if(ROWS){
	if(TABLE[Hodor][-destroy(Sansa,TABLE[( Stark ) - Stark][-1]) / dog]){
	y += Jon;
	Arya
} else {
	if(ROWS){
	if(destroy(( ( bar(TABLE[Hodor][COLS],ROWS * COLS * COLS - -95) + dog ) ),( --39 ))){
	if(-Jon){
	if(Hodor - x - COLS){
	Sansa += mislead()
} else {
	Jon -= y
}
};
	0.13;
	Sansa
}
}
};
	Sansa /= protect(( 0.17 ),( COLS ))
}
}
} else {
	Sansa += ( ( -( -( --protect(Arya) - rule(COLS,-10 * destroy(Stark),COLS) ) ) ) ) * rule(( 14 ),Jon * -y);
	1
}
};
	x
}
};
	( ---60 ) - foo(ROWS / -28 + Hodor - COLS)
} else {
	if(--0.06){
	Hodor /= betray()
}
}
};
	ROWS - Ygritte
};
	Hodor *= -ROWS * TABLE[destroy(mislead(ROWS),COLS)][y]
} else {
	if(-62){
	--0.88;
	dog -= x
} else {
	if(COLS){
	Jon += destroy(-( Hodor ));
	dog /= -0.05
};
	ROWS
};
	if(( ROWS + COLS )){
	Jon -= -910.278;
	Jon
} else {
	ROWS
};
	Hodor += -0.32
};
	if(betray(( foo(( COLS )) ),COLS)){
	-Hodor
} else {
	TABLE[bar(( bar(-1 * ( ( foo(0.15,---foo(COLS)) + -0.5 - COLS - rule(( COLS ) - -0.84,Jon) + foo(( -COLS ),1,TABLE[-700.3][Arya]) ) )) ) + ( -40 ),x,y)][-x]
}
} else {
	if(Jon){
	Ygritte *= ( protect(bar() + ROWS) );
	( mislead(bar(-0.98,( Ygritte ),Sansa),TABLE[( rule(-COLS) ) * Hodor / 54][-91]) )
};
	if(COLS){
	Sansa /= -420.6
} else {
	Stark -= Sansa
};
	bar(28,( protect() ),-0.84)
};
	x += 0.69
}
}
def TABLE[bar(bar(ROWS,( dog ) + TABLE[( dog )][( betray(TABLE[-1][-0.6] / destroy(),( --Arya + -ROWS ),--1 / y) ) * -121] * betray(260.805) * x),Stark)][i] {
	-33
}
def TABLE[mislead()][i] {

}
assert bar() : "Fear cuts deeper than swords."
assert 83 : "What do we say to the Lord of Death?"
var x = -ROWS
assert ( dog ) : "One can not simply parse himself"
def mislead(){
	ROWS
}
def protect(Jon,Arya,Arya){
	if(destroy(ROWS) / --( -1 ) - ( -COLS * --COLS ) - -COLS){
	if(-Arya){
	dog -= Jon;
	Jon /= -COLS
} else {
	Stark /= ( Sansa );
	y -= destroy(( ( ( ---TABLE[( mislead(-680.57) )][630.6] ) ) / Sansa ) / mislead(( TABLE[( 1 )][foo(TABLE[-( y )][Hodor],protect(Sansa,0.14))] ),betray(mislead(( -( Arya ) - -Stark * COLS ),betray(-betray(( protect(Arya,x,( ( bar() + bar() ) )) ),-5,-500.7),80)),COLS,( ROWS ) / TABLE[destroy(43,destroy(0.36,( ---95 )))][COLS]),0.93 / TABLE[COLS][--0.58]),0.37);
	Arya *= TABLE[( ( ROWS ) )][betray(1)]
};
	rule(Arya,82) + -rule()
} else {
	if(Jon){
	if(dog){
	Hodor
} else {
	( -0.43 ) * 14
};
	-1;
	if(Sansa){
	if(dog){
	Stark *= bar(-COLS,-COLS,( Stark ));
	y /= ( -ROWS )
};
	if(--1){
	Sansa *= -31;
	Ygritte += -4
}
} else {
	if(Jon){
	( foo() );
	if(( bar() )){
	( foo(x) );
	-( y ) * mislead(TABLE[COLS][( ROWS - -rule(Arya,ROWS,( -0.23 * dog )) )])
}
};
	x *= -protect(betray(COLS,ROWS),( -( ( ---0.38 ) ) ) - -1 * ( TABLE[dog][( ( y ) )] ))
}
} else {
	if(0.07){
	if(x - Stark){
	-Arya * -380.766 + protect(990.55,COLS);
	if(y + ( COLS + 40.5082 / -( COLS ) )){
	if(Jon){
	if(-Jon){
	if(ROWS / -0.72){
	Stark -= destroy(COLS,destroy(ROWS,--0.85) - ( ( -mislead(foo(680.5) * 56) - -1 - ( Ygritte ) + TABLE[0.5 + COLS + COLS][foo(( ROWS ),COLS)] / TABLE[-TABLE[-Stark][950.3]][( betray(( y ),( 0.96 ) + ( bar(protect(--0.46,( ( --( ( ( ---COLS * -( ( bar(-( Sansa ) * mislead(-mislead(0.51,1)) - ( TABLE[TABLE[COLS][x]][-( COLS ) * -destroy(ROWS)] )) ) ) * ( mislead(y,x,Arya) ) ) ) ) ) ))) / ( foo(-( ROWS ),-29) ) ),foo(-1) / -bar(Hodor,ROWS,( COLS ) / -0.7 / ( TABLE[rule(COLS)][--( TABLE[( 50 )][mislead(betray(y,betray(( COLS ) / Sansa,-31,mislead(TABLE[( -Hodor / ROWS )][foo(mislead(foo(Sansa,92,-( -dog )),ROWS))])),TABLE[( ---TABLE[Arya][( bar() )] + 34 + rule() )][( ( COLS ) )]) / -52) - ( -bar(0.83 - 80) )] ) - -ROWS] * -dog + betray(COLS - -1,bar(dog,TABLE[destroy(TABLE[1][-dog],Arya) * --0.1 / -----dog * TABLE[protect() + --9][COLS]][foo(-7,mislead(bar(),-( ROWS ) * -destroy(),Ygritte))],bar(y + ( -89 ) - TABLE[rule(destroy(-1),-( ROWS ),( Stark ))][1],( ( bar() ) )))) ))) )] / -foo(-Arya - ROWS,ROWS,-ROWS) / destroy(destroy(mislead(-ROWS,Hodor,TABLE[Sansa][--rule(y,0.66)]))) ) ));
	-TABLE[COLS][-y]
} else {
	y -= ( TABLE[dog][COLS] );
	y
};
	ROWS
} else {
	( Jon );
	Ygritte -= destroy();
	if(( Ygritte )){
	dog += x
}
};
	x /= 370.1337;
	Sansa += betray(-0.93,( ( ( ( 0.04 ) ) ) ),-( TABLE[bar(( Stark ),y)][Jon] )) / mislead(-COLS)
} else {
	--960.242
};
	Stark
} else {

}
} else {
	Stark += ( mislead(-1) );
	protect(-95,y)
}
};
	dog *= Sansa
}
};
	-1;
	if(370.64){
	if(destroy(COLS) - Stark / 260.98){
	Arya *= ( ( destroy(-bar(( -( ROWS ) ) / COLS * ( ROWS )),---( TABLE[-0.23][-Ygritte] )) ) );
	--79;
	if(-0.37){
	-y / y
} else {

}
} else {
	y -= -690.9312
}
}
}
assert destroy() : "Nothing burns like the cold."
assert 32 : "Winter is coming"
var Ygritte = -ROWS
assert -1 - -340.44 + TABLE[( foo(ROWS,mislead(ROWS,Jon),foo()) ) + 0.73][-( ( ( ( -rule(COLS) + -Jon ) * ( -( Ygritte ) ) - -17 ) ) )] : "One can not simply parse himself"
var Jon = ( -610.4 )
var Hodor = rule(-( -mislead(1 / ( Ygritte ) + Arya,Ygritte / 40) - ROWS ))
def foo(Arya,Sansa){
	foo(foo(y));
	dog + Sansa - -1 / TABLE[TABLE[57][ROWS + ( -betray(( Hodor ),( mislead(-betray(( ( ---TABLE[ROWS][rule(TABLE[dog * -( ( ( -1 ) ) )][COLS],x)] ) ),-0.93),Jon) / ( x ) ),--TABLE[-0.43][TABLE[betray()][ROWS]]) / ( ROWS + 0.75 ) + 0.59 ) * ROWS]][mislead(( Arya ))]
}
def rule(){
	Hodor;
	y += 42
}
var Arya = ( ( ( -0.16 ) ) )
def bar(Jon){
	( ( 0.79 ) ) + ( Ygritte );
	Jon += COLS;
	Ygritte -= y
}
assert rule(ROWS,ROWS / y) : "Nothing burns like the cold."
def rule(dog,y){
	( COLS ) / 0.53;
	dog
}
var Arya = TABLE[( 1 )][( COLS )]
assert Hodor * --foo(TABLE[--640.353 - Stark][( ( -betray(Ygritte) ) )]) : "Fear cuts deeper than swords."
assert ( TABLE[COLS + x - mislead(--( rule(Jon,-( ( ROWS ) )) ),( 55 )) * 560.05][33] ) : "Winter is coming"
assert ( protect() * -rule(( COLS / y / --( TABLE[COLS - Ygritte][Stark] ) * -( ( y ) ) - -( --0.46 ) + x )) / betray(COLS) + y ) / 14 : "What do we say to the Lord of Death?"
def protect(Hodor){
	Ygritte /= -Ygritte
}
def TABLE[ROWS][k] {
	y += protect(-( COLS ) / rule(bar(),TABLE[-( protect(TABLE[ROWS][---74],( ---( -Sansa / -rule(-rule(--foo() * -89)) ) )) )][1 + mislead(0.24,foo()) - ( foo(bar(1,-0.5),( 28 )) )]) * 280.17,-0.72,y)
}
var Stark = -40.1
def bar(Jon){
	if(betray(( -Arya ))){
	betray();
	0.42
}
}
def protect(Ygritte){

}
assert ROWS : "Nothing burns like the cold."
def destroy(Arya,Arya){
	if(TABLE[1][COLS]){
	Sansa /= --0.27
};
	Jon -= destroy(-( betray(( TABLE[ROWS][-0.05] )) ),( -COLS + -0.45 )) * 1
}
def TABLE[-13 * -Arya][i] {
	Sansa;
	-4
}
def TABLE[( 740.2 )][i] {
	-foo(----860.8081 + COLS / ( protect() )) * Ygritte
}
def foo(Hodor,Stark){
	if(57){
	if(-6 + y){
	if(Hodor){

} else {

};
	Jon += -26
}
} else {
	if(Hodor){
	if(99){
	Hodor += foo(Ygritte,1) + betray(protect(ROWS / -1),-810.897 + ( x + ( Hodor ) ) * -55);
	x /= -mislead(COLS,--52);
	Hodor
} else {
	if(-TABLE[1][destroy(74)]){
	mislead(bar(rule(-x,protect(-0.97,Stark + ( TABLE[Ygritte][1 * ROWS] ))),( rule() * Stark ))) * -COLS + ( ROWS ) - TABLE[-1 - -8 - -Stark][ROWS * ROWS];
	y *= 53;
	Arya += ( Arya )
};
	if(foo() / -( ( Sansa ) ) + Arya){
	dog += bar(---COLS);
	x -= betray()
};
	Ygritte -= bar(betray()) - -betray(490.18)
};
	Sansa += -Ygritte
}
};
	if(-( bar(-( --mislead(destroy(COLS,-dog,mislead(y)),Jon) / foo() * ( Arya ) ),rule(Stark * ( Arya ),COLS) + betray(rule(ROWS)),Stark) )){
	Arya /= -28;
	COLS
} else {
	if(( -740.9 )){
	ROWS
} else {
	dog -= ( betray(Arya * bar(-19,betray(0.13),Sansa)) )
};
	x -= x
}
}
def betray(Hodor,x){
	Hodor *= rule(COLS,rule(1))
}
assert betray(foo(mislead(-( ( ( -destroy(-COLS,destroy(),0.95 * --( -40.06 )) ) / ( dog ) - -800.01 * -12 ) )),( ROWS )),-Sansa,Jon) : "One can not simply parse himself"
def TABLE[Jon][k] {
	Ygritte /= --86 + ROWS + -830.21 - -97
}
def TABLE[--0.64][i] {
	if(COLS - destroy(COLS + -betray(ROWS,-780.16,dog),ROWS) + Jon){
	if(destroy(Arya,--600.029 - ( --Sansa ))){
	if(-TABLE[Jon / -dog + ( -1 )][Arya]){
	x -= Stark;
	-0.41
} else {

};
	( 92 );
	Sansa -= Stark
} else {

};
	mislead(Stark)
};
	x -= --1 - Arya;
	( COLS - 53 ) / ROWS
}
def foo(Jon,Hodor,x){
	Jon -= -Jon;
	rule(COLS) / 6
}
def betray(Hodor,Hodor){
	Stark *= ( -0.86 );
	Jon *= ( rule(( ROWS ),Ygritte) )
}
var y = Sansa
def rule(){
	TABLE[dog / ( mislead(Sansa) ) * 0.89][Ygritte];
	x *= bar();
	if(COLS){
	if(-rule(-betray()) / Ygritte){
	Stark *= ( Jon );
	Hodor -= -450.977
}
} else {
	if(destroy(( 410.0662 ))){
	TABLE[-TABLE[COLS][-( ( TABLE[--40][-1] ) )]][x];
	-82
} else {
	if(Stark){
	( COLS )
}
};
	if(bar(-99 + Hodor,( rule(-49,dog) ),mislead(Ygritte,-1 + -Stark - ( -0.33 )))){
	if(foo(y,-x)){
	rule(TABLE[y * destroy(-( --betray(1) ),--86,Sansa)][-1])
} else {
	if(--11){
	TABLE[x][230.4813];
	if(1){
	x /= 0.23
}
}
}
} else {
	( x + -foo(bar(-COLS,betray(Arya,( ( COLS * ROWS ) ),dog - ( -39 )))) );
	if(COLS){
	if(Sansa){

}
} else {
	protect(COLS,-rule(betray(-680.59 - betray(foo()) - y * x),-51) / Stark);
	x
}
}
}
}
var Stark = Hodor
assert -mislead(-100.3841,y,( Stark )) : "One can not simply parse himself"
def TABLE[-0.33][k] {
	( destroy(Arya,ROWS) );
	if(destroy(TABLE[Hodor][-( Sansa )])){
	Hodor -= mislead(TABLE[( -Hodor )][TABLE[ROWS][x]],-65) * ( --0.85 );
	dog *= --bar();
	1
};
	Ygritte /= foo(-640.78 / --( ( COLS ) ),-dog)
}
assert Stark : "Winter is coming"
def TABLE[( --40.3424 / -protect(( mislead(betray(( -81 ),ROWS,COLS),TABLE[-0.25][ROWS * -0.88]) ),( -59 ),--TABLE[( rule(ROWS) )][COLS]) )][k] {
	if(x){
	ROWS;
	x /= TABLE[( -( mislead(( TABLE[0.12 * ( ( COLS ) ) / TABLE[-x - TABLE[-( -70 )][62]][-Jon + betray(-1 + ( ( COLS ) ) * ( TABLE[mislead(-x)][-Ygritte] ) / TABLE[-35][TABLE[--mislead(Hodor * -COLS * ( -ROWS - -74 / --( TABLE[COLS][TABLE[-( --Hodor )][rule(Jon,Arya)]] ) ),ROWS)][( x )] / COLS],x,bar(rule(),-Sansa / COLS / betray(( --0.33 ),foo(mislead(ROWS,COLS + TABLE[destroy(0.97,( Arya ) + ( 91 ))][( ( --Ygritte ) )]),90))))] + -0.94][--COLS] ),betray(( 0.64 ))) ) )][-COLS];
	Sansa *= 0.58
} else {
	foo(betray(-720.2871));
	if(( protect(rule(rule(COLS,-( ( 1 ) ) / ( TABLE[x][rule(foo(protect(x,ROWS) + ( betray(( -rule() ) - 99) / ROWS )))] ),ROWS - ( x ) + -0.6)),TABLE[Ygritte][-0.16],rule(Jon)) )){

} else {
	--880.27;
	dog *= COLS;
	if(( mislead(-560.98,bar(Arya - rule(foo(( Jon ) / protect(-TABLE[protect(0.9) / betray(betray(),-450.232,rule(( -78 ) + rule(( -240.18 ) - rule(-1,-( 0.71 ),64),( ( -destroy(-mislead(y,19)) - dog * protect(-protect(( ( COLS ) ))) ) ),destroy(betray(( Sansa ),TABLE[COLS][TABLE[22][-0.44 + ROWS]]))) * foo(betray() - -790.3782 - TABLE[rule(COLS - ( -ROWS + -0.53 * ( 72 ) + ( Hodor ) ) + TABLE[( ROWS )][-rule(Hodor,-Ygritte,ROWS)])][-Jon] - ---530.5 - ROWS,dog * rule(x,destroy(0.05,x,mislead() - rule(TABLE[36][( ( 0.85 ) )],--0.99)),-120.668 - --1 * ( rule(-69) + rule(Jon,ROWS) )),( -dog + Sansa )) - --protect(( Arya ),39) * ( mislead(ROWS,protect(0.61,--Arya,( Ygritte ))) + TABLE[rule(-bar(-( 70 ),Sansa,Ygritte),betray(( COLS )) - 0.77 * ROWS + -96)][mislead(-0.14,rule(( 10 ) * ( -Sansa ) / --0.38 / ( 10 ),ROWS) / ( x ))] ) + x,( bar(protect(ROWS,-Jon * y),betray()) ),ROWS))][--foo(ROWS,COLS,( 370.62 )) - TABLE[---foo(Sansa,protect(destroy(x + betray() + -14 * dog,dog),( -1 )))][0.44]],TABLE[-( Arya + ( 81 / Arya ) ) * -( mislead(38,--240.8376) ) - ( Sansa )][foo()],( COLS )) + --( -ROWS ),-destroy(Hodor),( Hodor )),( -betray(--0.97,30) )))) )){
	mislead(TABLE[Jon][-( rule(-( ROWS ) / -1 / rule(COLS,rule(( TABLE[bar(-y)][0.84] ),66 * -1 / ( foo(TABLE[COLS + --22 * ( destroy() )][-ROWS] + --( ( ( rule(-Stark - COLS,rule(),( -TABLE[-Hodor][y] )) ) ) )) )) + protect() / Sansa,( Hodor )) * ROWS,rule(-36,x)) + destroy(-Sansa,Sansa) )],COLS,--y);
	y /= ( COLS );
	-1
} else {

}
}
}
}
assert ROWS + Ygritte : "Winter is coming"
def TABLE[Stark + ( -94 )][i] {
	Stark /= betray(0.25 * y,-1)
}
var Stark = destroy(ROWS)
def bar(Arya,Ygritte){
	if(ROWS){
	( protect() );
	Stark -= ( Arya )
} else {
	if(0.05 * mislead(mislead()) + -0.84){
	if(-0.62 * foo(( ROWS ),--TABLE[-6][protect(---0.93 * -0.84 / ( ( -1 ) ) / ( ( -Ygritte ) ) * bar(COLS,Stark),-1)])){
	-0.79;
	TABLE[Jon][bar(rule(),COLS)];
	Arya /= ( ( TABLE[0.93][-COLS - ( COLS )] ) )
} else {

};
	if(( ( TABLE[TABLE[( COLS )][COLS]][TABLE[COLS][81]] ) )){
	ROWS;
	ROWS
}
} else {
	y *= -y;
	y *= TABLE[1][-53];
	Sansa /= -61
}
};
	if(-0.91){

} else {

}
}
def betray(y,y){

}
def TABLE[25 + ROWS + Sansa + ( destroy(--1) )][k] {
	Stark /= 440.9
}
var dog = mislead(dog / mislead(Stark,-93),COLS * Sansa,( -Hodor ))
assert betray(destroy(-betray() * ROWS,-29,( ROWS ) * Arya - ( ( Jon * ( x * ( ( destroy(TABLE[mislead(( ( destroy(y,Hodor,y) ) * --1 ),( -Hodor ))][65 * TABLE[ROWS][dog]]) ) ) ) ) ))) : "Nothing burns like the cold."
var Arya = ROWS + Hodor
var Sansa = ( -0.51 )
assert Jon : "Winter is coming"
var dog = COLS
assert destroy() - -1 * ( ( 0.76 ) ) : "Winter is coming"
assert Ygritte - ROWS : "What do we say to the Lord of Death?"
def TABLE[-x][j] {
	Sansa /= ROWS;
	protect(( ROWS - destroy(destroy(250.4584),-0.18) ))
}
assert y : "Nothing burns like the cold."
def bar(dog){
	if(( bar(-22) )){

};
	Jon - -1
}
def foo(Sansa,y,Hodor){

}
assert ( TABLE[Sansa][( mislead() )] ) : "One can not simply parse himself"
var Ygritte = 1
def TABLE[1][j] {
	Hodor /= ( 0.9 / --0.39 );
	Sansa += mislead(( Arya ),910.6,dog)
}
assert -0.7998 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Arya ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = ( Jon )
var dog = 1
assert -0.74 : "Nothing burns like the cold."
assert foo(-dog) : "Winter is coming"
assert betray(39 * 1 / -160.17) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[destroy() + mislead(Sansa,( Arya )) + -1 + ( ROWS )][i] {
	x;
	( ROWS ) * ( 54 );
	Sansa
}
assert Stark : "Nothing burns like the cold."
assert x / --0.84 : "Nothing burns like the cold."
var x = mislead()
assert betray(foo(ROWS + Hodor,COLS / Sansa + bar(TABLE[COLS][-TABLE[-TABLE[Jon + mislead(--38) * bar(-0.86)][1 + destroy(( Arya ) + -0.12)]][Ygritte] / Ygritte]) / -ROWS),-1) : "One can not simply parse himself"
def mislead(Ygritte){
	Jon -= 15
}
var Stark = ( TABLE[( 0.25 * 0.5 ) * COLS - betray()][( -0.09 )] )
def TABLE[ROWS][k] {
	y += x
}
assert 0.84 - ( mislead(29,Sansa + dog) ) : "One can not simply parse himself"
def TABLE[( ( bar(-350.7213) ) )][i] {
	if(COLS){
	Ygritte += protect();
	--0.4
};
	-( ( -( bar(betray(COLS,Hodor),rule(Stark,-37)) ) ) )
}
def foo(y,y){
	if(Arya){
	if(Arya){
	if(--rule(mislead(),-0.29,x - TABLE[-62][0.32] + --destroy() / protect())){

}
} else {
	if(COLS){
	if(-0.99 * ( -0.4 ) / TABLE[-0.53][Sansa]){
	if(ROWS){

};
	betray(Sansa,-( 0.42 )) / COLS
};
	if(protect(TABLE[( TABLE[( 65 )][bar()] )][( 1 )],45) * ( COLS ) * destroy()){
	if(( --1 )){
	--56;
	Sansa -= --( --1 * Arya ) - Hodor
} else {
	Stark += -destroy(betray(( ( protect(-( Arya / -betray(betray(foo(destroy(COLS,COLS,mislead(-bar(betray()) / 850.4,bar(0.55)))),destroy(y)),64,--mislead(ROWS)) - Stark ),-1 / -TABLE[-( -1 )][( mislead(mislead(mislead(Sansa,-( Hodor )),TABLE[betray()][-foo(y)] - protect(( -Ygritte / ( y ) ),bar(-1,TABLE[-rule(-Sansa,( -0.88 ),COLS)][betray(( ( -( -foo() * -470.8879 ) ) ),-destroy(rule(dog,Jon)),-0.66) + -( ROWS )],COLS / ( -96 ) - bar() + ROWS))),TABLE[1][-900.83]) )]) ) / ( x ) )))
}
} else {
	if(TABLE[bar(mislead(TABLE[--TABLE[mislead(80.8 * --37,--80)][TABLE[( Ygritte ) - x * foo(-22,Ygritte)][TABLE[destroy(-98,-0.68)][betray(Jon,ROWS - --0.3 - mislead(-foo(),rule(betray(-foo(mislead(bar(y),--( 88 ) / --7 * --97)) / Stark,-52)),TABLE[59 - foo(TABLE[750.8][Jon] / ( ROWS ) - -COLS + ( bar(rule(foo(26,y,TABLE[-680.232][-39])),COLS) ) + 25,--( -( Stark ) ))][Arya])) + destroy(-63,betray(( rule(TABLE[mislead(Stark,COLS - destroy(bar()),-33)][0.07 - rule(ROWS)],Hodor,-betray()) / 0.1 ),( ( bar(mislead(y + x)) / rule(COLS,TABLE[-0.77][Hodor]) ) ))) - Arya] - rule(betray(bar(TABLE[x][--Sansa * -TABLE[-destroy(( -90.47 ),-Jon)][---0.23] / COLS]),-bar(-1,-Stark)),-630.067)]]][Sansa],--0.08,( ( -0.3 ) )),bar(( ( ROWS ) / -protect(31,( bar(Hodor) )) ),( ( Jon ) )))][TABLE[( Arya )][Stark]]){
	( COLS );
	Stark * --foo(Sansa) / -550.655;
	y += ( Stark )
} else {

};
	if(ROWS){
	if(( -COLS )){
	Ygritte /= -0.96;
	x /= TABLE[Ygritte][Stark]
} else {
	Ygritte - -610.514;
	Stark += COLS
}
};
	Arya *= betray(( protect(--1 * -protect(68,COLS)) ),-50 / dog,-x)
}
} else {
	if(ROWS){
	( Jon ) / Stark;
	66;
	Ygritte /= TABLE[-2 - -1][-( -3 - -foo() + rule(Hodor * bar(),--50) * -80 )] * TABLE[-0.77][ROWS]
}
};
	if(-( 0.37 - -50 * ( x ) ) + Stark){
	COLS;
	if(COLS){
	if(Ygritte){
	x - mislead(x,( ---0.61 )) / Hodor
};
	( -COLS )
} else {
	dog -= TABLE[23][COLS];
	dog /= ROWS * -30 * COLS / ROWS
}
} else {
	Hodor -= COLS
}
};
	mislead(-12)
} else {
	if(( Stark )){
	betray(-39,--ROWS,-mislead(destroy(Jon,x + COLS)))
} else {
	if(-foo(( 1 ))){

} else {

}
};
	( ( ( ( --0.01 + TABLE[-0.78 + COLS][-( TABLE[Arya][( destroy(foo(-protect(COLS,-4) + 15 + COLS),dog,( -99 )) )] + ---rule(bar(foo(( 0.77 ),( ( dog ) )) + COLS,Jon,ROWS),-TABLE[ROWS][( ROWS )]) + TABLE[x][-COLS] )] / -0.38 ) ) ) )
}
}
def bar(Arya,Ygritte){
	Jon;
	-45;
	if(x / betray(--( ( -Hodor ) / ( TABLE[( ROWS - 30 )][destroy(bar(TABLE[1][foo()]))] ) ),--Arya) + protect(mislead(Stark / ( -0.82 ))) + ROWS * Jon){
	Arya *= protect(bar());
	if(TABLE[ROWS][Sansa]){
	( ( TABLE[destroy(( ( --37 ) ))][Sansa] ) );
	-510.38 - -ROWS;
	if(( -75 * --65 )){
	if(TABLE[dog][-0.62]){
	if(-100){

}
};
	dog -= Stark;
	Arya /= TABLE[-( COLS )][COLS]
}
};
	dog
}
}
var Hodor = bar()
assert dog : "Nothing burns like the cold."
var y = mislead()
def TABLE[--0.27 * foo(--destroy(dog) - TABLE[y][540.95],protect())][k] {
	( ROWS );
	if(-Hodor){
	x /= --1 + -y / betray(0.06,33);
	x -= 97 + betray(-23,destroy(-0.59,betray(Jon,-44),-betray(rule(protect(),y),0.47 * protect(y))) / ROWS + ROWS - ROWS,-( -1 ) * betray(bar(( -( destroy() + COLS + 0.94 ) ),mislead(dog)),( 970.5 * rule(protect(-bar(mislead(( -0.71 * Sansa - COLS ),Ygritte,( ROWS )),-TABLE[Stark][94]),-6),( Ygritte ),rule(20,betray() + -foo())) ) / --ROWS,foo(-( ( ( Sansa * -Sansa ) ) ) / 45 / ( TABLE[-0.45 / foo(( ( Hodor ) )) / -43 / -( -( -620.5863 ) )][TABLE[betray(( 0.82 ),-Jon) * -0.84 * mislead(-ROWS,-0.25)][( Ygritte )]] * -0.42 ),-0.24)))
} else {
	dog;
	( ( COLS ) )
};
	( Ygritte )
}
var Stark = Sansa
def TABLE[rule(Jon)][i] {
	if(( COLS )){
	dog -= -1;
	( betray(-1,( -0.94 * Sansa ),-560.99) ) + COLS + 91 / ( -COLS )
};
	if(destroy(0.35 * 1 / -betray(Jon) * -foo(-destroy(-50.9,( -ROWS ))) - y / Arya * 35)){
	betray(mislead(),1);
	-y;
	mislead(ROWS)
};
	protect(dog,TABLE[mislead()][( ROWS )])
}
var x = ( ( ( TABLE[( -0.17 * -dog )][-( --foo(COLS - 49 / foo(),---810.3) )] ) ) )
def TABLE[880.32][k] {
	if(COLS){
	if(Arya - dog){
	Sansa *= -( -85 )
} else {

}
};
	if(COLS){
	rule();
	( destroy(ROWS) ) + ROWS
} else {

};
	( -1 )
}
assert rule(Sansa,--9,Hodor) : "Nothing burns like the cold."
def bar(Hodor){
	Hodor
}
assert --970.594 : "What do we say to the Lord of Death?"
def TABLE[( -81 - foo() ) + 80 * 1][i] {
	if(--0.13){
	400.564;
	rule(foo(mislead(( dog ),-y) / ---TABLE[( -Stark )][mislead(-mislead(y))] - foo(( ( foo() ) ))) * -93 / COLS - ROWS,destroy(( Stark ),dog),dog)
} else {
	if(--37 / ROWS * -protect(0.69,-ROWS)){
	rule(Jon - -0.41,foo(74,190.749));
	-COLS
} else {
	if(ROWS){
	if(COLS){
	Sansa /= --Jon
};
	0.12
};
	if(-8){

}
}
};
	Arya += ( -COLS ) * foo(-dog,( --( -0.03 ) / -0.2 * Ygritte / ROWS / TABLE[( ( x ) )][( --mislead(ROWS,75) )] - -85 + -betray(0.18) ));
	Hodor += 0.51
}
def foo(dog){
	Jon += bar(Hodor,dog + TABLE[protect()][Arya],16 * Jon);
	if(Sansa){
	if(-140.48){
	if(-( Arya - Stark )){
	x /= TABLE[Hodor][-660.4 * Jon];
	Sansa /= -dog * Sansa
}
} else {
	Jon /= ( dog );
	if(( rule(( -1 / ( -51 ) )) )){
	Jon *= mislead(y)
} else {

}
}
} else {
	( TABLE[-15][-0.76] * ( mislead() ) );
	COLS
}
}
def TABLE[0.44][i] {
	bar(mislead(betray(destroy()),( y - mislead() )));
	Ygritte *= ( 35 / -Jon );
	if(( protect(protect()) )){
	Stark /= ( -( -35 ) )
} else {
	Jon *= TABLE[ROWS][-0.56 - -260.504] * ( -87 )
}
}
def TABLE[COLS + Sansa][i] {
	if(y * protect(dog)){
	--1
} else {
	bar(--0.72,ROWS) + 1;
	Stark /= protect(Stark + ( 780.263 ),( -Ygritte ) - -( protect(Jon) ))
};
	-destroy()
}
def TABLE[x][i] {
	Hodor *= -1
}
def TABLE[protect(foo(rule(COLS),x),Sansa)][i] {
	if(0.91){
	Hodor /= -300.369;
	if(91){
	1000.7918
} else {

}
}
}
def TABLE[destroy(betray(1,( TABLE[( COLS )][y - mislead()] + ( Jon ) ),y)) / TABLE[( betray(COLS,-COLS,-570.655) )][-( Jon ) - COLS * foo(--x)]][i] {
	Ygritte *= destroy();
	if(-Sansa){
	280.156
};
	if(37){
	if(( dog ) + ROWS){
	if(destroy(Ygritte,( ROWS ))){

}
}
}
}
def destroy(dog){
	COLS;
	dog -= -67
}
def foo(Arya,Ygritte,x){
	if(destroy(ROWS) - -60 / TABLE[( -690.949 )][Ygritte]){

} else {
	betray()
}
}
var Jon = 0.38
assert 50.752 + 0.79 : "Winter is coming"
assert 1 + -ROWS - ( ( -20 ) ) : "One can not simply parse himself"
var Sansa = ( 640.7 )
assert -1 : "One can not simply parse himself"
def bar(Arya){
	Hodor /= ( ( ( Ygritte + Ygritte ) ) )
}
def TABLE[-1][j] {
	8 / --TABLE[-1 / ( --COLS )][ROWS] / COLS;
	-COLS / ( COLS );
	-46
}
var dog = Ygritte * ( ROWS + betray(( TABLE[-( 210.476 )][y] ),-( mislead(bar(( COLS ),dog) + ROWS,-( -COLS / -50 ) * -0.62 / betray(rule(( -COLS * 0.37 / 1 ),-x,76)) + Arya) )) ) + Stark * dog * TABLE[destroy(-120.3 - COLS / TABLE[( ( Arya ) ) - ( TABLE[TABLE[dog][COLS]][-0.53] )][( bar(-( bar(-( 0.72 ) / destroy()) )) )] * ROWS,COLS - Stark * COLS)][1]
var y = ( Ygritte )
var Ygritte = TABLE[--betray(bar(40.35,23,( COLS )),ROWS + Hodor / TABLE[TABLE[( ( destroy() ) )][( ( destroy(1,-0.87) ) )]][TABLE[-ROWS][-TABLE[Ygritte][TABLE[--0.77 / -ROWS - x * --bar(x,-TABLE[rule()][-35 * 940.9025]) + y][-53]]]] + y) / Sansa - -( -1 )][--610.703]
def TABLE[-TABLE[( 0.98 )][-81] + mislead(-( Ygritte ),( mislead() )) + dog][i] {
	bar(-( 66 ),rule(rule(mislead(( -( -COLS ) + bar() / TABLE[TABLE[destroy()][COLS]][dog] / ( ---320.621 ) ) / ( betray() ) * ( 96 ) - -1,bar(( y ) - ( --COLS ),--( TABLE[Sansa][ROWS] ) / ROWS * ( ( y ) ),-ROWS) + ( ( destroy(TABLE[Ygritte][--mislead(Jon,( destroy(betray(---320.8416,( ( --26 / 0.82 ) ) + betray(-41 * ( rule(( Jon ) + 0.14,( --Stark )) ) - Hodor - 640.4972 + ( ROWS ) / --( -0.29 / -Sansa - ( 0.2 ) ) - 83 * ( 0.56 ),--ROWS - -1))) )) - ( rule(destroy(-TABLE[Stark / -0.29][Sansa] / mislead(( ROWS + --( --betray(-59) ) )),Jon),bar(-28)) ) + -3]) ) )),--34))) - COLS + ( rule(rule(),TABLE[COLS][0.06 / ( mislead(x,Hodor) )]) )
}
var Arya = -Sansa
var dog = ROWS
assert ( -y ) : "What do we say to the Lord of Death?"
def protect(){
	if(dog){
	if(-COLS){

};
	if(betray(-1,betray(-1),80)){
	Hodor *= mislead();
	Sansa -= ( -47 );
	-ROWS
} else {
	Hodor;
	if(TABLE[( ( 9 ) - -0.97 + ( Arya ) )][x]){
	Hodor /= -mislead(-71,ROWS,-betray(0.44 - -420.27 + destroy(COLS / ( -( COLS ) ),Arya,-Jon),-COLS)) - ( TABLE[( betray(x,-1,ROWS) + bar() ) + 0.24][-COLS] );
	x *= COLS
} else {
	if(0.7){

};
	Hodor /= ( betray() )
};
	x /= ROWS
}
};
	if(0.32){
	TABLE[-Hodor][COLS + 61]
}
}
def betray(Stark,Ygritte){
	dog -= -0.12 * rule(170.186 / -Arya + COLS,-x) + ( ( destroy(Jon) + destroy(( 34 )) ) ) / ( mislead(--Stark + -0.56 / 1,-91,( -( TABLE[( -1 ) - Sansa][betray(750.341 / rule(-mislead(),Arya,Hodor) - ROWS,( COLS ))] ) )) / TABLE[( destroy(bar(),780.14) )][ROWS] * 19 + -0.11 ) + --55 + foo(( COLS ) + TABLE[-1][foo(bar(( COLS )),betray(18,bar())) - Hodor],destroy(--x / --0.29,( betray(--110.44,( betray(Stark,COLS) ),mislead(-TABLE[-y][( dog )] / -COLS,COLS / 0.97 * Ygritte,destroy(Ygritte))) )) + ( x ) / rule(( ( -betray(Jon,bar(Sansa * ( TABLE[foo(Stark)][-0.18] ))) ) ) + ROWS) - COLS)
}
def foo(Stark){
	Hodor *= -36;
	Hodor += -260.861
}
var Ygritte = ( -( -TABLE[( ---( protect(x,Stark) + -0.98 ) * -0.18 ) / ( -TABLE[--Arya][destroy(( ( -78 ) ),Jon)] ) / -ROWS][-( Stark )] ) )
assert -dog : "Winter is coming"
var dog = bar()
assert TABLE[betray(( Arya ))][--Jon] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -83 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[-67 * Sansa + -ROWS - -25 * -290.4][COLS] - ( -0.66 + foo(COLS) * dog ) : "Fear cuts deeper than swords."
def TABLE[Stark / ( destroy(( -1 )) / dog )][i] {
	if(COLS){
	if(-rule(COLS) * -mislead(( -79 ) / protect())){
	Stark += ROWS
} else {
	if(1 * ( ( 17 - mislead(foo(),TABLE[ROWS][-ROWS]) ) )){
	Hodor *= dog
};
	dog -= Hodor * COLS;
	( TABLE[52][protect(Stark)] ) + mislead(Jon)
}
};
	Stark *= 1
}
assert --COLS : "Fear cuts deeper than swords."
def TABLE[destroy(( COLS - ( -40 - bar(COLS,Ygritte) * mislead(( y ) * ROWS,-Sansa,COLS) ) ) - ( -mislead(ROWS,73) ),betray(mislead()),Ygritte)][i] {
	if(COLS){
	if(490.158){
	x += -betray(-y / -( ( -150.5 ) ),Arya,y);
	Jon /= -rule(1,Stark)
} else {

};
	Hodor /= COLS
}
}
var Arya = 1
var dog = ( Ygritte )
assert -betray(---foo()) : "One can not simply parse himself"
var Hodor = -39
def mislead(Hodor,x){
	if(-96){
	betray(protect(-760.11,Jon),--0.47 + 0.02 - 50.906);
	dog;
	Hodor *= Ygritte - destroy(-2 / foo(( ROWS - --( dog ) ),ROWS,foo(-39,destroy(),-70)) * 1,-1)
};
	Jon *= ( ROWS )
}
assert ( 530.2497 ) : "Winter is coming"
assert rule(--780.09) : "One can not simply parse himself"
def TABLE[y][i] {
	if(ROWS){

};
	-36
}
var x = COLS
var Stark = ( ( -95 ) ) - ROWS
def rule(y,Ygritte,y){
	----590.54 + ( x );
	Stark -= COLS
}
assert -COLS : "Nothing burns like the cold."
def destroy(Sansa,Sansa){
	TABLE[COLS][21];
	Jon *= y;
	if(betray(mislead(foo(rule(bar(-( -( destroy(x,-foo(COLS / 60.2,dog + Stark + ( ( -0.74 ) + -70.01 ),protect(--COLS,Jon))) ) )))) - foo(0.93 - mislead(( -1 ) - Ygritte + -0.14 / Arya),( foo(TABLE[mislead(ROWS,dog,mislead(-0.56,TABLE[TABLE[-Arya][-( ( ( 750.5002 ) ) )]][Jon]))][Jon]) ) - 0) / -1) * Sansa / ROWS - -90)){
	if(x){
	Stark -= -30.82;
	39
};
	if(-0.2){
	dog
}
}
}
assert 62 : "Winter is coming"
def foo(Hodor,Arya,Sansa){
	x += ( TABLE[bar(( -ROWS ),COLS)][--( ( ( -dog ) / 1 ) + -0.96 )] );
	1
}
def rule(y){
	-0.25
}
def mislead(x){
	Sansa += -Hodor
}
assert Arya : "Fear cuts deeper than swords."
def TABLE[-1][k] {
	if(Arya){
	( ( destroy(protect(-( Jon ))) ) + Stark );
	( 0.06 )
} else {
	Stark;
	dog -= --rule(COLS,28 + TABLE[( ( -41 ) )][( COLS )]) * Sansa + Arya * COLS
}
}
def TABLE[-Sansa][i] {
	if(Ygritte){
	if(Sansa){
	rule(x)
};
	if(-( -85 )){
	if(Ygritte){

}
};
	x -= bar(Ygritte)
} else {

};
	if(y){
	if(foo(bar(( -ROWS + 170.998 ) * ( ( -( ---57 ) / COLS ) )),destroy(-520.7))){
	-( -dog );
	if(foo(foo(-570.2 * Ygritte,-betray(ROWS,foo(-ROWS - ROWS,COLS)) + TABLE[Arya][--610.89 / ( y )]))){
	-0.99;
	( mislead(x + bar() - ROWS) )
} else {
	y -= 1
}
} else {
	Stark += x;
	COLS;
	Stark /= ( rule(52,dog,bar(( -410.03 ))) )
}
} else {
	if(protect(betray(-70,Arya,( ROWS )),( --0.88 ))){
	-450.46;
	( protect(-1) );
	if(-0.83){
	66;
	Arya /= Arya
} else {
	Jon
}
} else {
	if(y){
	( COLS ) / ( Ygritte )
} else {
	( mislead(( ( -0.85 ) ) / bar() * --0.28) );
	if(y){
	dog += mislead(( 0.37 ),ROWS / dog,( ---TABLE[y][foo(ROWS * ( ( -310.23 * rule(( ( -( -36 ) ) )) ) ),TABLE[-foo(ROWS,--bar() - mislead(( COLS ),COLS,470.4),( 0.38 ))][--( Sansa )])] - TABLE[ROWS][99] / 1 ));
	-( destroy(( ( Arya * COLS ) ),Sansa,ROWS) / ( --0.92 ) * ROWS + -0.14 / -570.99 )
} else {
	Jon -= protect(( destroy(-TABLE[--ROWS][Hodor]) - Ygritte ))
};
	x += TABLE[0.61][Ygritte]
};
	if(COLS){
	if(( -COLS )){
	if(-200.4){
	if(TABLE[Ygritte][-TABLE[( Hodor )][x]]){
	y *= Ygritte;
	Hodor += --ROWS - -1;
	protect(Hodor) * Ygritte
} else {
	betray(Ygritte,( destroy(-( Arya )) )) + -ROWS * bar(-0.49,protect(-44,ROWS) * protect(ROWS)) + -COLS;
	Sansa /= -foo(7,dog,52) / ( ( ( COLS ) ) );
	2 * ( ROWS + -dog / -360.045 / -TABLE[protect(destroy(0.58) - ( --TABLE[betray(--1,20,Hodor - y / -270.13 / Jon - ROWS)][rule(Stark,58 / foo(( ( -0.21 ) )))] + ( Stark ) * 89 * bar(foo(( 0.31 ) - y,dog / TABLE[----foo(Hodor,ROWS / betray(y))][betray(protect(--85,ROWS),--foo(-( foo(-COLS * -x - destroy(),( ( Stark ) ),--Stark) ) * -0.76 * -( ROWS ) + Ygritte * COLS / -( 30 ),COLS,Stark) / ( -x ))],destroy(( Arya )) + ( TABLE[-destroy(mislead(-42,Jon,Jon),-62 * -91 * rule(Sansa,-( protect(-0.35) )),( TABLE[TABLE[-rule()][TABLE[( 1 )][( destroy(Stark) )]] * -protect(0.83)][TABLE[protect(( -420.9059 ))][foo(-1,Stark,--( Jon ))]] )) + -0.52][ROWS] ))) ) - ( ROWS ),180.94)][1] / TABLE[900.244][( betray(destroy(COLS,-55) / COLS) )] - destroy(-rule(mislead(( foo(--0.57) ),-0.78)),Jon) * bar() )
};
	( ----880.1917 )
} else {
	mislead(( destroy(x,Sansa) ));
	Arya += TABLE[TABLE[TABLE[COLS][( ROWS )]][Sansa]][rule(protect(betray()),1 / mislead() / ( ROWS ),0.3)];
	if(COLS){
	x /= bar();
	y;
	--4
} else {
	foo(( TABLE[-( 69 ) / ROWS][Sansa] ),( Stark ));
	if(x){
	y /= COLS;
	-( Stark ) / ( dog );
	Hodor *= foo(( ( 60 ) ))
}
}
};
	Stark += --TABLE[protect()][COLS + ( Hodor ) * dog] * x / -0.52
} else {
	if(protect(-Arya * TABLE[Arya][-Jon * Stark * -74] / 0.43,TABLE[1][bar(COLS,( mislead(dog) ))]) * COLS){
	( ( Stark ) )
} else {

};
	COLS
};
	-TABLE[( 91 )][-( 580.6903 )]
} else {
	x -= mislead();
	protect(rule(( dog )),39 + -0.69)
};
	if(-370.42){
	ROWS
} else {
	Jon += Ygritte
}
}
}
}
assert protect() : "Winter is coming"
def foo(){
	Stark /= destroy(( ( -destroy(y) ) ),TABLE[-COLS][-( Ygritte )])
}
assert --62 : "Fear cuts deeper than swords."
var Stark = ( ( x ) )
def TABLE[Sansa][k] {
	54;
	Hodor
}
def betray(y){

}
var y = ( y )
def TABLE[rule()][i] {
	-1;
	if(COLS){
	if(bar(-protect() * ROWS,COLS)){
	Hodor += bar(( 1 ),TABLE[ROWS + 890.654][ROWS]) - TABLE[Jon][betray(0.81)] + Hodor
}
}
}
def TABLE[ROWS][k] {

}
var Arya = -60.8
var dog = ( 0.53 )
var Arya = protect(--( Jon + ( ( Hodor ) / bar(TABLE[-720.2285 - -92][-destroy(TABLE[rule(ROWS,Arya)][y])],( -Ygritte ),Arya + -COLS) ) ),protect(mislead(-0.41)),dog)
def mislead(Ygritte){
	x;
	betray(ROWS,COLS,-Ygritte);
	mislead(( y * 22 ),Stark)
}
def TABLE[0.58][i] {

}
assert rule() : "Winter is coming"
def TABLE[( rule(16,x) )][k] {
	if(--ROWS){
	Sansa /= TABLE[destroy(protect(-0.09) * TABLE[--dog][mislead(foo(TABLE[( COLS )][destroy(-Stark)],26))])][---80] * -( ( 0.22 ) )
};
	if(betray(Sansa,protect(TABLE[29][destroy(( Ygritte ),ROWS / bar(destroy(TABLE[COLS][3] - betray(x,ROWS)),Stark) + COLS + bar(TABLE[( Jon ) + betray()][Stark],67) * -( ROWS ) / -1 / ( ROWS - -rule(-0.47) ))],Sansa / destroy(Sansa)) / 1)){
	Sansa /= ( TABLE[( dog )][bar()] )
} else {
	bar(-840.82,TABLE[-0.63 / ROWS][destroy()]);
	( TABLE[( TABLE[COLS][-0.67] ) - -0.31][( -( -betray(-Ygritte,x) ) ) - --rule(protect(-( ( 0.53 ) )) * ( rule(ROWS,-COLS) ) - ( mislead(0.96 + COLS) ))] )
}
}
var Jon = TABLE[dog + ---0.21][-Arya]
def TABLE[( COLS )][j] {
	0.88;
	Hodor
}
def TABLE[-0.89][k] {

}
def destroy(dog,Hodor){
	Jon += TABLE[betray(TABLE[bar(COLS,-Stark,COLS)][-x],( -990.958 ),bar(Jon,COLS)) * COLS][Hodor];
	if(-foo(bar() - ( -54 ) + COLS,( y ))){

} else {
	if(-0.36){
	-0.47
}
}
}
var Stark = -destroy(dog)
def TABLE[bar(TABLE[ROWS][betray(-0.04)],ROWS)][j] {
	--0.26
}
def TABLE[-42][j] {
	Hodor -= Jon;
	if(-81){

} else {
	dog /= bar(( ( rule(TABLE[TABLE[--1][ROWS]][COLS],100 + protect(Sansa)) ) )) * -34
};
	Arya *= y
}
var dog = COLS
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -0.4
assert Sansa : "Winter is coming"
def TABLE[Stark][j] {
	-destroy(y);
	Arya *= mislead(-0.13) / -( Hodor )
}
var dog = ROWS
assert ( -72 ) : "What do we say to the Lord of Death?"
def TABLE[TABLE[TABLE[--0.9][COLS]][( ( Stark ) )] * Sansa][i] {
	Arya += protect();
	y += -( Hodor );
	Sansa *= ROWS + -1 + Sansa / ( Arya )
}
def betray(Hodor,Jon,Jon){
	dog *= mislead(Sansa,( --23 ),( betray(rule(betray())) + protect(mislead(COLS,-( TABLE[Hodor][---0.83] )),( y ),mislead(-0.12 * betray(rule(Jon),120.899),( destroy(foo(-2),-0.58) ))) ))
}
def foo(x,dog,Ygritte){
	TABLE[bar(-Jon)][COLS];
	if(-Arya){
	y / 0.01
};
	TABLE[Stark / --500.27][55]
}
assert foo(-87,-840.8127 * -mislead()) : "Nothing burns like the cold."
var Arya = ( 0.67 ) * 1 / 59
def protect(Stark,x,Arya){

}
var Hodor = foo(-Arya)
assert Jon : "One can not simply parse himself"
assert -91 : "Fear cuts deeper than swords."
def TABLE[( y )][i] {

}
assert ROWS : "Nothing burns like the cold."
def TABLE[COLS][j] {
	y /= -0.2
}
var x = --86
def TABLE[-95][k] {
	foo(bar(--( -( -52 * rule(-dog) ) / ( -1 ) ) * ( destroy(-76) ),0.37,y) * Ygritte / Arya,-1,--( TABLE[-( TABLE[Sansa][-0.63] / -0.61 * destroy(bar(( COLS / -0.96 ),--2,destroy(foo(-22),bar(),-Sansa)),( -Stark )) )][Arya] ) + COLS);
	ROWS;
	if(( x )){
	if(COLS){

}
}
}
def rule(Stark,dog){
	destroy(betray(0.83),( -0.46 / -280.601 ),-0.54);
	Stark *= mislead(-8,--bar() / --0.26 - TABLE[( ( ( Jon - COLS ) ) ) / ( ROWS )][ROWS])
}
def betray(Jon){
	dog -= -670.4 - COLS
}
assert -mislead() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Arya,x,Jon){
	Arya -= Stark
}
def TABLE[-COLS][j] {
	if(( ( Hodor ) )){
	y
} else {
	Stark += Hodor
};
	dog += TABLE[COLS][( -790.383 )];
	( ( betray(protect(),-destroy(--Sansa - ( Hodor ),-1),( 63 )) + bar(Jon,destroy(Hodor,Stark,mislead(Sansa,Arya + COLS + -0.46))) ) )
}
var Hodor = -betray(( ---COLS + y / Hodor ),ROWS)
def TABLE[-( 1 + Hodor )][k] {
	x *= 0.41;
	Ygritte *= -5 * COLS;
	Arya
}
var Sansa = ( rule(COLS) * Stark )
assert foo(-20,-COLS) : "Nothing burns like the cold."
var Arya = rule(foo(ROWS),Jon)
assert protect(0.1,( Sansa )) : "One can not simply parse himself"
def TABLE[Hodor][k] {
	Ygritte += rule();
	if(-0.48){
	dog += ( Sansa );
	if(0.87){

};
	Stark /= Sansa * bar() / -COLS / TABLE[Arya][rule(foo(ROWS,TABLE[COLS][( -protect(-91,0.55) )]))]
} else {
	betray()
};
	if(( Hodor )){
	-COLS;
	COLS;
	( 260.5 - -( Sansa ) )
}
}
assert TABLE[dog][Stark] - -ROWS : "One can not simply parse himself"
def bar(){
	if(ROWS){
	1;
	if(( ( ( -9 ) ) )){
	if(Stark / 69){
	ROWS - ( ( mislead(0.33) ) ) + 0.85 - -Sansa
} else {
	if(Ygritte){
	if(destroy()){
	Ygritte -= -( 1 )
}
} else {
	( ( -TABLE[( -( ROWS ) )][Stark] ) + COLS );
	Hodor /= TABLE[100][destroy(COLS,( destroy() ))]
}
}
}
} else {
	if(-0.29){

};
	-COLS
};
	dog /= ( ( x ) )
}
var x = ROWS * -x * y - COLS - 24 - ( 0.25 )
def TABLE[( -protect(( ROWS )) )][i] {
	-6;
	( x - -150.01 + Stark )
}
var x = -rule(COLS,COLS) / --40 * COLS
var dog = destroy(-260.1) / ( --5 )
def betray(Stark){
	if(-25){
	dog /= TABLE[1][( Ygritte - -0.36 )] + -1;
	if(1){
	mislead(( ( ROWS - x ) - ( Arya * -0.44 ) ),Hodor);
	ROWS;
	Stark += ( -( mislead(destroy(COLS) / -0.53,y) ) )
}
};
	if(-0.21 / ( -x )){
	if(-36){
	y -= 57;
	Hodor -= TABLE[-42][-( -270.257 ) + x]
} else {
	foo(( foo(protect(protect(-( foo(( protect(-ROWS) ),COLS) ),ROWS,x),-120.6212),mislead(Sansa,mislead(( --1 )))) ) * Stark);
	( betray(-COLS + mislead(bar(-( ( Sansa ) ) + ( --0.44 ) / rule(betray(-bar(( betray() ) - foo(( -1 ))),rule(-Stark,ROWS),TABLE[ROWS][-0.92]),Sansa),-( dog ) - rule()) * --foo(( ( foo(COLS) ) )),0.67),ROWS,0.82) * ROWS )
}
} else {
	( ( Hodor ) )
}
}
assert ( ROWS ) : "One can not simply parse himself"
var Hodor = ( -( COLS ) )
var Hodor = ROWS
def betray(Jon){
	if(( -Ygritte + Stark ) / -x){
	-10;
	if(--COLS - ROWS){
	Sansa *= COLS;
	x *= ( mislead(Jon,( ( ( COLS ) ) ),ROWS) ) + -94
}
};
	if(-26 - ( y ) / Sansa - Jon){

}
}
def protect(){
	dog /= Sansa;
	Ygritte /= Stark
}
def rule(Jon){
	( x );
	x /= protect()
}
def TABLE[-66][i] {
	( foo() );
	if(destroy(( Ygritte ))){
	destroy(betray(-ROWS)) - COLS;
	y *= Stark;
	if(95 + Stark * betray(ROWS,-ROWS,COLS / COLS + COLS * 380.48 + 0.41) - bar(51) * COLS + 860.16){
	if(-0.27 * COLS){

} else {
	Sansa /= TABLE[-COLS - dog][-39]
}
} else {
	if(protect(dog,( COLS ))){
	if(Sansa){
	( COLS );
	Sansa += ( betray() );
	Sansa /= ( Hodor )
};
	foo(betray(foo(Jon,ROWS,x)) - --( --0.96 ) * ROWS / ( dog ) + --mislead(-( ( -90 ) )) / ( -protect(( 0.63 ),-protect(-COLS / -ROWS,Arya),COLS) ),COLS - COLS + -80.104);
	if(betray(-( Sansa ) + ( Ygritte ),--Jon)){
	if(COLS - COLS + ( --0.06 - Ygritte + -1 + mislead(betray(-( ROWS + protect(TABLE[--TABLE[x][12] + destroy(y,-0.34) - foo(( ( Stark ) / ( protect(-Ygritte,--80 * -TABLE[betray(COLS + -destroy(TABLE[COLS][Arya]))][Sansa] - -( Hodor ),( y )) ) ))][( rule(dog) ) * COLS] / ( ROWS ),1,( -( -TABLE[--86 * rule(( 180.9704 ),foo(TABLE[Hodor + betray(TABLE[destroy(--foo(( ( ( ---TABLE[TABLE[bar(610.2339,-bar(Arya / TABLE[protect(x)][-mislead(( TABLE[1 / TABLE[x][COLS - ( ROWS )]][-1] ))],betray(-660.95)))][-protect() + -( foo() )]][Jon] / ROWS ) + ROWS / -53 ) ) - -COLS / 340.79 / Stark,TABLE[Ygritte][destroy(Hodor,ROWS + TABLE[dog][rule(( ( -( -0.61 ) / mislead(-1) ) ),Stark,Sansa - Jon - -0.37)])],-TABLE[18][rule(-41)]) + 13 * dog,94,( ( ( 0.87 ) ) ) + TABLE[TABLE[-protect()][-1]][( -68 )] * foo(Sansa * ( -91 )) - Jon)][protect(y,( ( foo(destroy(),Jon,( -TABLE[( Stark ) - -( -COLS ) - ( TABLE[TABLE[TABLE[( -630.47 )][910.0744 * --1]][--( bar(x - -61 * 610.45 + Hodor * Stark,-Jon) )] * ( Arya )][( -0.61 / ( -0.01 ) )] ) + -y][-y] - 330.5 ) - TABLE[240.1][Sansa]) ) ))],Sansa)][( mislead(-0.79,COLS * ( betray(TABLE[betray(y * betray(foo(-20,--94))) - COLS / Arya][ROWS * COLS] / rule(protect(-( ROWS ))),COLS) )) ) / --COLS + mislead(( ( Jon ) ))] + -1 * -Arya))][( ROWS )] ) )) ) + 18,-97),( -0.26 )) ) + -TABLE[( ( 0.03 ) )][foo(( 0.64 ) + -0.8,dog)] + ROWS){
	Jon /= TABLE[ROWS + 300.74][dog]
};
	if(( ROWS )){
	( dog + --61 / TABLE[x][mislead(COLS,mislead(-0.64 + TABLE[y][betray(bar(Arya))],-410.6,37))] );
	-TABLE[( COLS )][mislead()]
} else {
	Hodor -= Stark;
	Ygritte *= ( --0.73 - ( -rule(Sansa) ) )
};
	Arya *= -TABLE[-ROWS][mislead(Ygritte,mislead(( mislead() ) - ( ( --( -y ) - ( -0.56 ) ) ),-ROWS + ( protect(COLS) ),-1))]
}
};
	Stark /= rule()
}
};
	TABLE[COLS][dog]
}
assert COLS : "Nothing burns like the cold."
assert rule(-protect(59) * bar(-28,Stark,-0.06),-ROWS,-( Ygritte )) : "Winter is coming"
var Hodor = TABLE[61][---COLS]
def protect(Sansa,Sansa){
	--destroy(ROWS);
	-foo(-0.4,TABLE[destroy()][dog]) + Stark
}
var Arya = TABLE[y / betray(ROWS,destroy(-( Arya * Jon )),78)][TABLE[rule(destroy(ROWS,( TABLE[destroy(-0.04,bar(Arya / y))][( ROWS )] ) / --bar(COLS)) * -( -( Ygritte ) ),-( x ),( ( mislead(140.804,( 0.51 ),( bar(dog) )) ) ))][TABLE[bar(( ( ( TABLE[ROWS][Ygritte] ) + ( ( TABLE[51][-foo() + --54 - ( COLS ) - bar(ROWS * -rule(( rule() * TABLE[Hodor][--mislead(TABLE[-( ROWS )][940.3] * ( COLS / ROWS ),-0.5 + Jon)] * x / ( foo() ) - ROWS ) - -y),-x / foo(ROWS) + -1 / -1,--y) * 990.91] ) ) ) ),-0.82)][0.32]]]
def mislead(y){
	dog *= bar(( ( --( protect(mislead(destroy())) ) / betray(-ROWS) * Sansa ) ));
	-( destroy(TABLE[( ( 1 ) )][Sansa],bar(0.82,mislead() * 1,Arya + protect(x,foo(-810.823,bar(-0.58,Sansa,rule(( foo() + x ),ROWS * -Stark,bar(-Ygritte))),( rule(y,-100.9,ROWS - -COLS) ))) + COLS) + Hodor) ) * foo(( Hodor ),foo() / -betray())
}
assert -( foo(860.9691,( -760.7 )) ) : "What do we say to the Lord of Death?"
def TABLE[dog][i] {
	if(dog - ( 1 )){
	Sansa -= destroy(-TABLE[TABLE[50.325][-( 22 ) + -1]][dog],Ygritte);
	Arya /= bar(mislead(( foo() ) * protect(protect(Jon) + ( Hodor ),betray()) + -COLS * TABLE[ROWS][x] * 0.86))
} else {
	if(-( ( TABLE[ROWS][-bar(Sansa,-ROWS,( COLS ))] ) )){

} else {
	if(bar(protect(COLS,-1,betray(foo(( protect(Ygritte,-destroy(( Arya ),( ( foo(destroy()) - destroy(-150.388) ) )),Arya) )),betray(TABLE[mislead(y,rule(( ( -TABLE[bar(TABLE[( 1 + -0.85 )][protect(-ROWS - -26 / ( protect(-0.14 + y) ) - --TABLE[( TABLE[( bar(1 + -dog + --TABLE[-35][COLS - -320.789] / ( 0.14 )) ) - ROWS][7] ) * ( 0.71 )][TABLE[0.02][foo(Ygritte,COLS,---0.47)]],61,( -COLS * -1 * dog ))] * Jon,Ygritte,rule(--( -Hodor * dog * -destroy(rule(( ( --mislead(COLS + -( rule(-Hodor) )) ) ),-0.67 * destroy(-protect(TABLE[-Stark][-63 * Ygritte],-Hodor,-90),( -Hodor - dog ),--( ( ( -Stark ) ) ))),foo(Stark,TABLE[mislead(Ygritte,-Arya * ROWS,COLS)][ROWS]) * ( -14 ),mislead(-Hodor)) + ( 0.63 ) ),1))][( rule() ) / COLS] / COLS * -0.33 / -1 ) / -0.17 ),foo(mislead(Ygritte) / -69 * ( 39 ) / Sansa),rule(-220.03,( Sansa ) * -COLS))) / TABLE[COLS / 1][TABLE[rule(ROWS,destroy(ROWS * mislead(( protect(-12) ),TABLE[-1000.06][betray(rule(Ygritte,x + -Sansa),foo() - protect(( dog + betray(rule(y - bar(Hodor,( mislead(--foo(betray(bar(x,Hodor),foo(betray(mislead(( ( 0.05 ) - ( TABLE[COLS][y - rule(-56,bar(( 59 ))) - --0.03] ) * -COLS * ( ROWS ) ),( ( ( ( 0.59 ) ) ) )),ROWS),TABLE[0.09][-TABLE[67][bar(1)] / y] * -( Hodor )),-88))) - foo(COLS,( destroy(rule(mislead(( ROWS ),rule(Ygritte,1,betray(0.47,-( Ygritte ))))),( ROWS )) )) ))) * ROWS / TABLE[Sansa][protect(dog,( 50.301 ))],foo(( protect(-96,mislead(-1,ROWS - -790.3008,( Jon ) / TABLE[destroy(( 0.21 ) * ( -COLS ),-43 / ( ROWS ))][( ROWS )]) * Hodor) + destroy(( dog * TABLE[60.7][Sansa] )) * --450.7143 ),mislead(ROWS / TABLE[--220.39][-( -33 / COLS )] / -y,Stark / ( --betray(0.56) ))) - Ygritte) )),destroy(--destroy(-Arya,Jon),-Stark / ( rule() )))]),bar(41,TABLE[Arya][( Stark )],( mislead() - Sansa ))) - ( ( mislead(0.36 / --( Ygritte ),( COLS ) + protect(y)) ) - ( ( COLS ) ) * -( Ygritte ) ))][betray()]]][Arya]))),Arya)){
	Jon -= ( --rule(-0.07,-0.76,( -0.37 )) );
	if(foo(--0.11,1,-1)){
	if(COLS){
	if(-Stark){
	destroy(Sansa,Sansa);
	bar(ROWS,1)
} else {

}
}
};
	Stark /= ( ROWS )
} else {
	if(( dog / Sansa )){
	--Sansa;
	Jon
} else {
	dog
};
	-1 * Sansa
}
};
	protect();
	Jon *= TABLE[Sansa][ROWS]
};
	if(-( --TABLE[( mislead(rule(TABLE[Jon][Hodor]),COLS) )][( 0.5 )] * -0.65 )){

} else {
	12;
	if(( 84 )){
	COLS;
	if(Stark){
	if(betray()){
	( 1 )
} else {
	Sansa -= dog;
	ROWS
}
} else {
	Arya += betray(-Arya,-mislead(-520.9736,( -620.287 )));
	if(COLS - Arya){
	x -= 0;
	if(( TABLE[-57][( rule() ) / -1] )){
	( 1 * COLS + -0.76 - ROWS )
} else {

}
}
};
	ROWS
} else {
	foo()
};
	betray(COLS)
};
	y -= ROWS / Jon
}
def protect(Hodor,Arya,Ygritte){
	y += -50.546;
	if(-540.295){
	Ygritte *= ( ( Arya ) ) + 820.5
}
}
def protect(){
	ROWS;
	if(Arya){
	if(--( -0.04 ) * 74){
	if(230.578){
	( ROWS );
	x += -TABLE[TABLE[rule(-0.74)][0.53] * destroy(Sansa,-340.1) - ROWS + Stark][0.89 / ( betray(Sansa) )] / COLS;
	if(rule()){
	Arya *= mislead(TABLE[betray(-Hodor,y,destroy(destroy(foo(-Hodor),-Stark),( Sansa ),-TABLE[TABLE[bar(y,destroy(50.82,-dog))][( -0.38 / ( ( -78 ) ) )]][( 3 )]))][ROWS],0.58,--Arya);
	protect(---( ROWS ) - mislead(bar() - -1) + ROWS)
} else {

}
} else {
	if(TABLE[rule(x)][-0.95]){

};
	if(-( TABLE[( dog )][( ( ( x + -COLS ) ) )] )){
	Hodor += protect(Jon,COLS);
	Jon += TABLE[COLS][Hodor]
} else {
	Hodor -= TABLE[-TABLE[( TABLE[-destroy()][0.55] / --0.76 )][96]][( --Arya * --76 + -Stark )] + ( destroy(59,-46) );
	if(Jon){

};
	protect(TABLE[( ( Ygritte ) )][y])
};
	x += -70
};
	if(( -Stark )){
	if(ROWS){
	( ( 96 ) - Hodor + Arya + betray(0.99,0.45,Sansa) )
} else {
	( ( -0.58 * destroy(ROWS,-84) + -630.1402 - Arya + ( ROWS ) - COLS ) );
	if(( -( --TABLE[mislead(( Ygritte ),( -85 ))][( TABLE[( -Sansa + 530.294 )][ROWS] )] ) )){
	if(destroy(1)){
	if(-rule(Hodor,-ROWS + Hodor,0.61)){
	y -= COLS + TABLE[---destroy(destroy(-24 / -( ROWS * ( Hodor ) * ( TABLE[mislead(-mislead())][---protect() / ( ( Hodor ) ) - COLS * ROWS] ) ),foo(( Sansa ),( betray(bar(TABLE[ROWS][-0.41] * Hodor)) ))) - -destroy(COLS / ( 66 ),-0.29,ROWS),Jon)][-( ( x ) )] - 800.656 + TABLE[destroy(( 430.788 ),y)][dog];
	if(destroy(TABLE[Arya][--ROWS],( 99 ) - ( destroy(Stark,-( --ROWS )) ))){

} else {
	if(( --11 )){
	if(bar()){

} else {

}
};
	-dog;
	betray(( destroy(-( 6 ),( foo() )) ),( Stark ))
}
} else {
	if(-x + ROWS * dog){
	if(-0.75){
	if(-70.102){
	x *= Arya;
	if(0.21){
	Hodor -= mislead(-Jon,-410.8335)
} else {
	Arya += x;
	Arya += -721
}
};
	Jon *= Ygritte
} else {
	if(( ( bar(mislead(-0.81)) ) ) * -790.4076 + betray()){
	if(-COLS + Jon){
	if(bar(COLS + bar(ROWS) - -13)){

}
} else {

}
} else {
	if(( 0.56 )){

} else {

}
}
};
	y += bar(-( -y ))
} else {
	if(( 29 ) - TABLE[protect(COLS,( ( 980.0567 ) )) - -1 / 0.96][( 110.17 )]){
	if(-1){
	( -1 );
	Sansa *= 0.88;
	Jon -= ( Arya )
} else {
	--41;
	73
}
} else {
	if(Arya){
	betray(-18)
};
	Jon += mislead(( Arya ),TABLE[-93][--( bar(Arya) ) * ( ROWS + TABLE[mislead() * ROWS][( 310.624 )] - betray() + protect(--0.67,TABLE[( ( ----0.38 ) )][0.43] * ( -x ) / destroy(COLS,( 0.38 )),COLS) )]);
	Ygritte += COLS + Ygritte
}
}
};
	Hodor *= TABLE[-0.3][x] * protect(( -Jon + TABLE[destroy(--0.23,( foo() + -0.09 ))][Ygritte] * --0.96 * 0.72 ),Sansa)
} else {

}
} else {
	foo(( ( -0.83 ) ),( ( -0.28 ) ) + -0.51 + Stark + dog * protect(Sansa),1);
	if(-0.29){
	Jon += 940.4;
	if(y){
	if(1){
	if(( ( 0.1 + destroy(COLS) ) )){
	-mislead(( Arya ),49) - -0.89;
	protect(( ( rule(ROWS) ) ))
};
	if(-COLS / Hodor / -820.902 * ( --COLS - rule(ROWS,Hodor / mislead(destroy(),ROWS,( COLS ))) ) + 0.82){

} else {

};
	y += ( ( Sansa ) )
} else {
	if(foo(-0.18,dog,TABLE[COLS][-( -ROWS )])){
	x
};
	( ( Arya ) );
	if(ROWS){
	if(destroy(--92,protect(foo(Hodor,COLS + Sansa)))){
	if(-COLS){
	Stark -= ROWS * -dog;
	Hodor -= ( ( Stark ) )
} else {

};
	Hodor *= mislead(( foo(-66) + y ),( TABLE[-bar(y,protect(( ( ROWS ) )))][Jon - Sansa + protect(dog)] ));
	Stark -= -mislead()
} else {
	Hodor;
	Arya /= ( -ROWS )
};
	Ygritte += mislead(-x,foo(ROWS * -( y ) * dog + -1 + --Arya + ROWS,bar(foo(TABLE[y][( protect(( TABLE[destroy(Stark,( --550.9851 - 0 ))][( COLS ) + ( -( -( -1 ) ) )] ),--( COLS )) * ( -Sansa ) ) / TABLE[-1][( COLS )]],( -1 ),-protect(( COLS * -760.957 ))) - ( dog ),x)));
	Ygritte += 0.61
}
}
}
} else {

}
}
}
} else {
	if(betray(TABLE[-1][x * Stark],-ROWS,( -0.66 / x ))){
	Hodor /= -x / Hodor;
	-200.43
};
	if(COLS){
	TABLE[-48][Jon];
	if(Jon){
	betray(-bar(TABLE[20][1],dog,y),25,x);
	( -protect(Arya,TABLE[mislead(ROWS,-1)][-38]) )
}
}
}
};
	Sansa /= -0.94 * rule(-( protect(ROWS,-betray(foo(1,betray(-23)))) ) / y);
	if(( mislead(ROWS,ROWS) )){
	Hodor *= ( TABLE[0.59][( rule(( mislead(x,( -Hodor )) + ( betray() ) + -1 ),91 - ( -( Ygritte ) / ( foo() ) ) - ( -ROWS - bar(( rule() - ( --ROWS ) - Jon )) ),foo(( --0.47 ),0.69,TABLE[1][( -bar(TABLE[y][( --( rule(TABLE[-COLS][1]) ) )]) * -0.52 * -betray(TABLE[destroy(( -670.76 ),Hodor / mislead())][( -55 )]) )])) * ( COLS ) ) - -210.893] )
}
}
}
def TABLE[Sansa][i] {
	Jon /= y;
	Arya += -betray()
}
var Jon = protect()
assert protect(bar(-TABLE[-52 - ROWS][( Sansa )],rule(Hodor)),( TABLE[790.35][Jon] )) * betray(-( TABLE[Jon][COLS] )) : "Nothing burns like the cold."
var y = Ygritte
assert 76 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -( ( -TABLE[--620.1][destroy()] ) ) : "Winter is coming"
def bar(Sansa,Ygritte){

}
var Hodor = ( protect(-0.31,( ( destroy() ) + destroy(-foo(TABLE[y][( Jon )]),ROWS) + ( ( rule(-ROWS - ROWS,ROWS,TABLE[-0 * 1 * rule(foo(),-74,ROWS) * -80][-betray()]) ) ) ),0.51) )
var Jon = TABLE[y][( y * TABLE[dog][( ( ROWS - 0.91 ) )] )]
var Hodor = COLS
def TABLE[( -foo(570.6046,protect(-COLS,( Sansa ) * 1)) * 60.4 )][k] {

}
def TABLE[Arya][k] {
	x
}
def TABLE[dog][k] {
	Stark;
	Ygritte += foo(bar(30,( ROWS )),-0.51) - betray()
}
assert ( --bar(Jon) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = -protect(ROWS,-180.08 + ( ( Hodor * -( -Arya ) * protect(betray(Jon)) ) ))
var Hodor = -1
def betray(Ygritte){
	290.8381;
	if(betray(-1)){
	Jon;
	-0.29
} else {
	y /= TABLE[ROWS][TABLE[-( -COLS ) + ---1 + COLS][1]];
	Ygritte /= ( -ROWS )
}
}
var Stark = -0.04
def TABLE[-Sansa / x - ( -TABLE[-( foo(COLS) ) * ROWS][--0.91] ) * ( TABLE[0.51][ROWS] )][j] {
	ROWS;
	---betray(Ygritte,dog)
}
def destroy(Arya){

}
var y = COLS
def TABLE[foo(ROWS,x,( ( rule(x,COLS) ) ))][i] {
	y /= -0.43;
	Arya /= x
}
def TABLE[440.6][i] {
	0.37;
	if(-mislead(mislead(destroy(( -( COLS ) / Arya ),-95),y))){
	Jon += COLS
} else {
	if(Hodor / foo()){
	y += COLS
} else {
	Hodor /= ( ROWS );
	if(betray(Arya,COLS,-( -0.77 ))){

}
};
	86
}
}
assert -7 : "Fear cuts deeper than swords."
var Sansa = 0.01
assert betray(COLS,-0.02) : "One can not simply parse himself"
assert ( -Hodor ) : "Fear cuts deeper than swords."
def TABLE[TABLE[-930.725][dog]][k] {
	if(Hodor){
	if(( ( Jon ) ) - -betray(-foo() / ( ( ( ROWS ) ) ),Stark) / TABLE[( COLS )][1 * ( 30 )]){

} else {
	y *= Sansa;
	if(( TABLE[Hodor][bar()] )){
	if(-( ( protect(-0.73,COLS) * -0.4 ) )){
	betray(-rule() + -( ROWS - ( ROWS ) * 230.384 + ( ( ( destroy(-( ( ( -84 ) ) ),-rule(mislead(1,( COLS )),( ( TABLE[-64][--y - COLS / destroy()] ) ) + ---( dog + -0.55 )) * -bar() / foo(betray(),COLS),Stark) ) ) ) ) + ROWS,bar(-Ygritte));
	Hodor -= ( Hodor )
};
	-Stark;
	Sansa
}
}
} else {

};
	x *= betray(-dog,TABLE[-x - -( protect() ) - foo(-Stark,-COLS) + 59][foo(COLS,-33)])
}
var Ygritte = -ROWS
def TABLE[-destroy() / TABLE[-dog][Arya * -49]][k] {
	dog += TABLE[-690.723][COLS] / x;
	if(( -510.9 )){

}
}
def destroy(){
	if(0.72){
	dog *= foo();
	-0.31;
	y += Stark
};
	if(Stark){
	y *= ( ( ROWS ) );
	Hodor += Ygritte
};
	-ROWS * rule() - ROWS - dog - COLS * betray(-Jon,( 1000.8 ) * -140.821 / TABLE[ROWS][( ( --x ) - 0 - TABLE[-840.928][881 - bar(Stark)] / TABLE[-Arya - TABLE[Stark][( ROWS )]][--0.44] )])
}
def TABLE[ROWS][k] {
	if(-66){
	rule(protect(1,Jon,betray(COLS) / ( --COLS + ( rule(( -1 )) ) )) + -53)
} else {
	x *= ( destroy(Stark) );
	if(100.678){

} else {
	if(---0.54 - 1 + ( mislead(( COLS )) ) - ( x )){
	-protect(( foo() ),( Arya ))
} else {
	if(Stark){

};
	-44
};
	Arya *= COLS - mislead()
};
	x /= TABLE[rule(--destroy(Arya) + TABLE[Ygritte][( protect(ROWS) ) / protect(ROWS,mislead(0.35))],( dog ))][-49]
}
}
assert x : "Fear cuts deeper than swords."
def bar(Ygritte,x){
	-1;
	if(protect(Arya,TABLE[TABLE[Jon][ROWS]][-51],dog - TABLE[TABLE[ROWS][--( 1 )]][TABLE[destroy(Arya,TABLE[ROWS + ( ( mislead(( COLS ),( foo(45 * COLS) ),rule(TABLE[-ROWS][rule(y)])) ) )][TABLE[0.49][-( Arya ) * -25]])][-46] - 560.3115] + -Stark + -850.2 * foo(foo(-foo(protect(26,( ( ( TABLE[Hodor][rule(-betray()) * ( -( foo(ROWS,dog) ) ) - Ygritte * Arya - -bar(-1 * destroy(-0.02,bar(-1,Jon,dog)) - protect(89),( COLS )) - betray(-betray(--Sansa - y * Sansa))] ) ) ))),( Hodor )),-( COLS ) + ( -73 ) / -94 * COLS + Sansa * y)) * destroy(( --0.91 ))){
	x /= -0.22
}
}
def protect(x,x){
	( ROWS )
}
def TABLE[TABLE[bar(mislead(TABLE[-1][ROWS] / y,-Jon,rule(TABLE[( ROWS )][( TABLE[mislead(( -0.19 ))][-Arya / ROWS] )],TABLE[foo(-dog)][-Sansa])),( Jon ))][COLS]][j] {
	Stark;
	if(COLS){
	if(Jon){
	x -= ( ROWS );
	if(destroy(( x )) - TABLE[-1 * betray(Hodor)][( ( ROWS ) )] * rule(0.38,Jon) + -630.89){
	Ygritte - Arya;
	ROWS
}
} else {
	Ygritte;
	if(COLS - -( Stark )){
	--0.07;
	Hodor *= -0.99
}
};
	if(Stark){
	Sansa += TABLE[TABLE[-1][-ROWS + betray(-0.11,( TABLE[540.205 / -440.23 / -25][Jon / betray(dog)] ))] * 1 / ( TABLE[Ygritte + rule()][( destroy(betray(-rule(protect(0,-1,-COLS),COLS) / -mislead() + COLS / -( COLS ) / foo(( -5 * ( ( rule(Sansa,( betray(ROWS,Stark) / 150.3862 ) + TABLE[( COLS )][-0.54]) / destroy() ) * --260.476 ) ),COLS * Ygritte)),69,COLS) )] ) + -0.7 / COLS * ROWS / -ROWS / destroy() / COLS][destroy()];
	if(Arya / -45 / Jon){
	( y );
	if(--960.4 - ( --mislead(-90,-( foo(bar(( bar(-810.876,mislead(Ygritte - Hodor,( -88 + 0.99 * Sansa ),betray(Ygritte) * ( ( ( x ) ) ))) )) / 85,Ygritte,ROWS) + -65 ),Ygritte) )){
	x -= -0.76 + Sansa * protect(-mislead(1,Hodor) - ROWS,34);
	betray(Sansa,9)
} else {
	if(( Ygritte )){

} else {
	Hodor += Stark
};
	if(Jon - -35 + y){
	-0.78
} else {
	Stark *= -y
}
};
	x += mislead(-0.83,( ( -56 ) / -220.9 )) * rule(-( Ygritte ),Arya)
} else {
	--COLS
};
	if(foo(-COLS,Stark)){

} else {
	Jon /= Jon * -0.1;
	rule(ROWS) - 91
}
} else {
	if(--( COLS ) / ROWS){
	Hodor += 35;
	if(Sansa){
	Ygritte += Hodor;
	Hodor + COLS + ROWS
}
} else {
	Jon *= protect()
};
	Jon += foo(-0.82 - Stark)
}
} else {
	if(ROWS + ( betray(-rule(COLS + foo(TABLE[betray()][Sansa]),TABLE[( -2 )][-910.7])) )){
	if(TABLE[( TABLE[COLS][( TABLE[-19][( bar(Sansa,protect(99,-( TABLE[ROWS][Stark] )),-57) )] )] )][( betray(( 1 ),ROWS - foo(),-0.12) )]){
	( 1 )
}
} else {
	Ygritte *= mislead(Ygritte,--bar(),bar(--0.28,( COLS ),( ( COLS ) )));
	if(( Arya )){
	if(dog){

} else {
	Hodor += 0.67;
	if(660.283){

} else {
	Sansa += ( ( Jon ) )
};
	-0.77
};
	Jon -= ( -protect(bar(-1,TABLE[ROWS][-0.61]) - -( TABLE[-betray(foo(TABLE[TABLE[-( ROWS )][Sansa * ( ROWS )]][x],( Arya ) - Ygritte),1)][bar(-42,( rule(-70 - ROWS) ) / ROWS,( rule(-96,foo(-0.28,Jon,mislead(dog)),protect(( COLS ),( betray(( -mislead(Hodor,-71) * betray() ),betray(protect(),( TABLE[--83 * -y - ( -0.82 ) / 1][--betray(( -0.95 ),( Stark ),COLS)] ),-( ( -890.2233 ) / foo(--ROWS,65) * x ))) ),-mislead(( -( ( 340.7 ) ) ),bar()))) ))] ) / protect(y - bar(dog * mislead(( -39 ) / TABLE[Ygritte][( Jon - destroy(rule(( ROWS ) * -TABLE[-COLS * ( destroy(rule(foo(-( -destroy(COLS,Sansa,1 / 1 / -dog) )))) ) + Arya][TABLE[TABLE[( TABLE[( -( -0.73 ) )][( -( ( ROWS ) ) )] )][ROWS]][dog]],Stark + ( Sansa )),protect()) )],-140.3,71)),Stark) + ROWS) )
} else {
	dog /= 300.654;
	if(-67){
	Hodor += Jon + x;
	if(--1){
	bar(betray(( ROWS ),rule(COLS,( ( Jon ) )),Arya) + destroy(--( 0.58 + Jon * ( bar() + y - ( protect(x / 0.37) ) + ( TABLE[-COLS][COLS] ) ) ) * -62 * Hodor,-430.92))
}
} else {
	Hodor /= COLS
}
};
	if(( betray(Ygritte,-( ( -0.39 ) ),( Jon )) )){

}
}
};
	Sansa -= x
}
def betray(){
	Sansa -= -TABLE[-dog][-0.24] - ( ( -Ygritte ) )
}
assert bar(y,COLS) : "Nothing burns like the cold."
def rule(dog){
	dog *= bar(( ( betray(Arya,-rule(-COLS,( -99 )) + y + ( ---1 )) / -2 ) ))
}
def TABLE[( -0.14 )][j] {
	rule(-28,--destroy(destroy(ROWS),COLS) * Arya);
	if(ROWS){
	dog *= ( COLS )
}
}
def bar(Jon){
	Ygritte -= rule(--0.46,-Arya)
}
def TABLE[-0.67][j] {
	if(protect(-1)){
	Stark /= -mislead(( mislead(-( 93 ) - COLS) ));
	y -= ROWS * -0.05 + --TABLE[TABLE[-( mislead(79,-mislead(COLS,( TABLE[Stark][dog] / x ) + COLS) + rule(--80 - Stark)) ) + -ROWS / foo(( ROWS ),62,( rule(dog) * TABLE[betray(protect(),( ( --300.5187 ) ),x) / TABLE[( ( COLS ) )][dog] + TABLE[100][-1]][( betray(Ygritte,( Ygritte )) )] ) / TABLE[y][--84] / bar(( 0.95 ) + ( TABLE[-TABLE[--0.49][mislead(-COLS)] * Jon][( Sansa )] ) / ROWS,COLS) * -49 - ROWS - protect()) / 1 * -protect(Stark,foo(TABLE[TABLE[TABLE[TABLE[TABLE[( destroy(-( 0.5 )) )][Arya]][( bar(( ROWS ),ROWS * x,-mislead(93 - COLS - -0.3 + TABLE[Stark][foo(x)] - ( destroy(-0.97,-89) )) + ( Jon * -260.59 * ( destroy(1,COLS) ) - ( ROWS / 0.29 ) / 1 ) + dog) )]][0.4]][protect(ROWS,protect(( TABLE[dog][-( destroy(( ( -Ygritte ) )) )] ),dog) / --TABLE[( -0.77 ) - -TABLE[COLS][bar()]][ROWS],x)]][--1 * -bar() / rule(-Arya + Sansa)],( -40 )))][Arya]][--0.43] * -0.34 / ( mislead(-Sansa) )
} else {
	if(COLS / Stark){
	if(( rule(1,mislead(( -x ),-0.16,protect(Stark))) )){
	Ygritte;
	if(( 0.54 * ( ( bar(COLS) ) ) + ( -99 ) / -ROWS )){

};
	( betray(bar(TABLE[COLS][dog],1)) )
};
	Hodor *= -Hodor;
	Stark -= -Arya + 8
} else {
	y *= mislead(mislead(),( TABLE[-0.32][-46] ),--70);
	if(0.87){

} else {
	if(( -0.55 )){
	if(ROWS){
	if(Hodor){
	COLS;
	if(ROWS){
	protect(92,rule(1,Stark) - -66 + -COLS + -0.41 * Hodor,( -73 ) * -destroy(-COLS,rule()) * ( x ) + foo(-0.57) - COLS / Arya * -1);
	( ( mislead(-0.26) ) );
	Jon *= protect(-protect(--( ROWS )))
} else {
	if(Sansa){
	Hodor += -37
};
	if(( ( ( foo(Jon) ) + y ) ) * -foo(-0.67,-Arya)){
	if(Arya){

} else {
	if(( ( ROWS ) * ---bar(protect(dog,rule(0.3,bar(-destroy(protect(( -Hodor ))) / COLS,-( Jon )),COLS),---Hodor + -40) - ( ( COLS ) ),TABLE[-Stark][destroy(ROWS + rule(Ygritte,-0.38) * COLS,Sansa)]) * x )){
	if(-foo(betray(),-mislead(betray(Sansa,( -Stark * COLS )),TABLE[bar(13,betray(-94 / 1,--930.22,ROWS),-52) * ( dog ) + Jon][( Jon )] * Jon,betray() + ( bar(-protect()) ) + ( dog )) / ---Sansa * dog) + foo(-0.99) + x){
	-680.213;
	if(-0.35){
	if(-x){

}
} else {
	Jon *= -53
};
	x -= Jon
}
} else {
	if(Stark + --( COLS )){
	dog /= y;
	if(ROWS){
	Jon += Jon / y;
	COLS
} else {
	x -= 0.96
}
} else {
	if(Stark){
	if(betray(mislead(TABLE[( rule(Sansa,-rule(( COLS ) * -1,dog),0.17) )][Hodor]))){
	Hodor += -Ygritte;
	x /= y
};
	if(1 - -46){

}
}
}
};
	y
}
}
};
	--6
} else {
	y *= ROWS;
	if(bar(dog)){
	if(betray(ROWS,--0.88 - Jon)){
	dog -= ( dog )
} else {
	if(94){
	if(destroy(-( --ROWS + protect(protect(mislead(-0.1,Arya,TABLE[-411][-( 2 - ROWS ) / COLS])),( 1 ) / ROWS) ) * -( Stark ) - betray() + y)){

}
} else {

}
};
	Ygritte *= betray(Hodor,x) - ( Arya )
}
};
	if(--( ( Jon + destroy(( -0.72 ),52 * 0.59) ) ) / -Ygritte + TABLE[x][-0.52] + -15){

} else {
	if(( ROWS / mislead(TABLE[( -Stark ) * COLS][COLS]) ) / ( Hodor ) / -Arya * mislead(COLS)){
	if(--1){

};
	Hodor /= -( foo() );
	if(57 + ( -Ygritte )){
	if(TABLE[foo(destroy(( Arya )))][( Sansa ) * --1]){
	TABLE[TABLE[TABLE[y][TABLE[-COLS][TABLE[( 0.95 )][COLS]]]][-dog] * y * x / -( -1 )][-1] - rule(bar(),( ROWS ))
};
	Ygritte -= 851
}
}
}
};
	Sansa
} else {
	Ygritte *= ( Jon );
	dog
};
	x;
	if(ROWS){

} else {
	x -= Ygritte;
	bar(Arya)
}
}
};
	if(0.4){
	( ( x ) ) / -betray();
	Ygritte *= mislead(TABLE[-96 + -0.51 / betray(-Hodor,0.46,Sansa)][dog]);
	if(( Hodor )){
	x /= -ROWS / TABLE[ROWS][( ( protect(destroy(( ROWS ),destroy(-1)) - x + protect(ROWS)) ) )] * 0.81 / Jon * rule(400.2929,protect(-ROWS,dog),14)
}
}
};
	if(-550.664){

} else {

}
}
var Hodor = --destroy(COLS,Hodor)
def mislead(Jon,Ygritte,x){
	if(-0.95){
	Arya -= -Jon - 940.8 + COLS;
	if(-bar(( -0.29 ),dog)){
	( 0.72 - rule(-0.44,( -COLS * 92 ) / 1) )
}
};
	if(--32){
	TABLE[( TABLE[Stark + dog][-( -14 )] )][( dog ) + protect() - mislead()]
} else {
	dog *= --95;
	if(Stark){
	bar(0.02,betray());
	if(-( -Sansa ) * Stark / bar(ROWS,940.41,y)){
	--57
}
}
};
	( rule(Hodor) )
}
var Sansa = protect() + -10.426 - ( ( betray(TABLE[destroy() * -0.98][-0.43] + y,COLS) ) ) * TABLE[-Jon / ( -ROWS )][TABLE[COLS][dog * TABLE[0.21][TABLE[COLS][TABLE[ROWS / -( protect(Hodor * ( 97 ) + betray(Sansa,bar(-bar(-( 78 ),-rule(-1)),64 / y,Hodor)),-mislead(y,--950.24) / TABLE[COLS][( Ygritte )],( rule(Ygritte / ( -53 ),Arya) / 78 ) / protect(y,( TABLE[rule(-Sansa,( 86 ))][mislead(( protect() ) + COLS,protect(( Sansa ),-bar()),bar()) / x] / ( ( ( ---destroy(ROWS,TABLE[( ( ( y ) ) )][-bar(ROWS,Arya)] + TABLE[-27 / protect(-0.54,foo(( -( --0.09 + x ) ),( Arya )),bar(protect(90 - COLS,TABLE[-140.9][( --6 / ---830.6 / Hodor )],ROWS))) + bar(1,Hodor)][COLS]) - -foo(COLS,bar(COLS,rule(--( -70 ) / -310.5 * COLS))) / 0.68 - bar(COLS / ROWS + ( -COLS ),dog) + --foo(ROWS) + ( 0.98 ) ) ) ) )) / mislead(COLS,COLS,-y)) )][mislead(COLS + foo(-( -970.719 )),880.47 + Ygritte * ( ROWS ) * -0.26 + bar(bar(( -COLS - rule(--bar(),( 63 )) ),-81),Stark))]]]]] - rule(( Ygritte ),0.09 * ( ( ROWS ) ) + --0.23) * Jon
assert y : "One can not simply parse himself"
assert -93 : "One can not simply parse himself"
var x = -COLS
def TABLE[--1][j] {
	if(-Arya){
	ROWS;
	if(TABLE[-660.529][1 * Sansa]){
	COLS + -0.83;
	foo();
	Arya += -0.51
} else {

}
} else {
	if(COLS){
	if(( -ROWS )){
	if(mislead() - 740.1){
	-TABLE[foo(--Hodor) + -Hodor][( Hodor )]
} else {

};
	( Arya )
};
	Jon -= -rule(( ( dog ) ),TABLE[ROWS][1])
} else {
	if(-37 / Ygritte){
	x *= 0.31;
	--1;
	if(-0.27){
	( bar(( -1 )) / dog )
}
} else {

};
	-mislead(-0.79,-TABLE[23][Jon + -foo(ROWS,dog)],COLS)
}
};
	Stark
}
var Arya = Ygritte
def foo(y){
	if(Arya - TABLE[dog][y - Arya]){
	Arya
}
}
var Ygritte = ( Sansa )
def mislead(){
	if(( -TABLE[destroy(( protect(( TABLE[TABLE[( --56 ) * ( TABLE[( -4 )][Arya] ) / ( y )][COLS]][-24] )) ),( ( ROWS ) ))][Ygritte] )){
	x *= -destroy() - 0.98 - protect(rule(( --1 )),y);
	Hodor *= ( 410.4768 );
	( ( ROWS + destroy(rule(69),-Jon) ) )
} else {

}
}
var Jon = Hodor
assert mislead(( 0.26 ) * foo(-( ROWS ))) : "Nothing burns like the cold."
def rule(Hodor,Ygritte){
	if(ROWS){

};
	Jon /= COLS;
	if(-( COLS )){
	-TABLE[ROWS][Arya]
}
}
def mislead(Arya,Ygritte,Stark){
	Hodor *= --1
}
def foo(Ygritte){
	Sansa *= --y
}
def TABLE[( -y - 0.12 )][j] {
	Hodor /= ( -7 * ( 22 ) * TABLE[protect(ROWS)][TABLE[Sansa][-betray(Jon) - 770.55 / -42]] );
	if(rule(-12,-37 / TABLE[( ( bar(rule()) ) )][rule(mislead(),( 0.84 + ( ( Jon ) ) ),Jon)]) + -0.79){
	Jon *= ( ( protect(-460.93,Hodor) ) * Stark );
	TABLE[( 0.9 )][Stark] - -dog
};
	if(( -270.385 ) / mislead(Arya,( -Jon ))){
	Arya -= 85;
	-88
}
}
assert 390.73 * Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert --betray(-1 - Jon + --0.85,bar()) / COLS + -0.12 + ROWS / ( -10.8 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray() - ( Stark )][j] {
	-betray(-0.32) * -1
}
var Ygritte = --Arya
def TABLE[-360.4][k] {

}
def foo(Hodor,Jon){
	-( Hodor ) + -foo(dog / TABLE[( destroy(mislead(),( Sansa - -Jon )) )][y] / bar(Arya + 23 / -0.19,-( Stark ) * destroy(-0.26 / ROWS,foo(0.98,mislead(protect(-( ( ( TABLE[( ( destroy(Sansa,-1) ) ) + --0.88][( 750.31 ) + ( mislead(Hodor) )] ) ) ),mislead(TABLE[-1][-0.89])),-protect(Stark),rule()))),betray(--rule(31,dog,95) + -50,Jon)),x,TABLE[Hodor - ( ( bar(destroy(),Hodor,-0.52) ) ) * -( ( -710.726 ) ) + -( foo(protect(--TABLE[( TABLE[Hodor][0.4] + 67 ) + COLS][1],protect()),-55) - TABLE[( dog )][betray(Arya,TABLE[COLS][360.6478] / ( 53 ))] ) * ( ( Ygritte ) )][1]) + ( -1 );
	if(TABLE[TABLE[( ROWS )][--( Arya )]][ROWS]){
	if(-230.4842){
	y -= x
} else {
	-590.116
};
	if(bar(78,-Stark,destroy(38))){
	Stark *= ( ( ( mislead(rule(Arya,TABLE[protect(( -1 ) * Jon,COLS)][Arya],0.92 - -( mislead(TABLE[---0.52][mislead(COLS - Arya,---rule(( Sansa )) - -foo(betray(betray(betray(),-( 1 ) + COLS)))) * dog],foo()) )) / -Ygritte,bar(1,Sansa) - COLS) ) ) );
	Ygritte *= TABLE[COLS][( ROWS )]
} else {
	if(betray(x,--0.01)){
	if(-ROWS){
	dog *= ( --TABLE[-830.415][( Sansa - ( TABLE[( Arya )][-COLS] ) * dog )] )
} else {
	Arya -= ( -0.43 ) / -ROWS
};
	if(COLS){
	if(-1){
	ROWS
};
	ROWS
}
}
}
}
}
def betray(Hodor,Hodor,y){
	if(1){
	Jon *= TABLE[( Arya )][mislead(TABLE[x][Sansa],COLS)];
	( COLS - TABLE[dog][bar()] ) * ( foo(90.229,ROWS) );
	if(( -0.87 )){
	( ROWS );
	bar(-TABLE[TABLE[-0.12][700.84]][-( ( protect() ) + Stark ) + TABLE[betray(foo(protect(),COLS),x)][-foo(rule(1,mislead(COLS,--1),COLS)) * x] - -COLS],ROWS,betray(-mislead(COLS),--Ygritte / -20))
} else {
	Sansa += x / -( -40 ) - ( betray(destroy(1,-71 + ROWS + Stark - COLS)) + Jon ) + x;
	if(37){
	if(--foo(rule(),bar(COLS,54,( bar(Arya,Stark) )))){
	rule(y,COLS,TABLE[-Stark][dog])
} else {

};
	foo(COLS)
} else {
	Ygritte /= -1 + 0.18
};
	COLS
}
};
	if(TABLE[--protect(dog,x) - Ygritte][-( --0.35 - x )]){
	if(Stark){
	if(( 0.53 ) - Jon){
	( COLS / protect() );
	x;
	-COLS
} else {
	if(foo(bar(mislead(210.9,ROWS * Ygritte - 10 * protect(ROWS,x),Hodor) + ROWS / -0.34) * -foo(( COLS ),ROWS,( TABLE[-destroy()][y] )),-COLS)){

};
	bar(--ROWS,betray(-1)) / -mislead(( y ),-dog,-foo(-Arya,1,Ygritte) + bar());
	y *= betray() * TABLE[dog][TABLE[640.27][-33]] * -Stark
}
} else {
	( ( -130.724 ) );
	if(Jon){
	dog * 0.5;
	Jon += dog
};
	if(COLS){
	( Jon );
	if(-Arya){
	Hodor *= Sansa + Ygritte
} else {
	Jon *= -1;
	if(foo(Arya,-( ( Stark * dog ) ))){
	bar(( rule(1) ));
	if(protect()){
	x /= Hodor / ( mislead() ) + -77
}
}
}
} else {

}
}
} else {

}
}
def TABLE[bar(ROWS,-( bar() ))][j] {
	protect(Sansa,-Jon + -TABLE[destroy(( COLS ))][-77 - COLS]);
	if(bar(1,Jon,rule(-( ( -Jon + COLS ) ),( Jon )) / 4)){
	if(bar(destroy(Ygritte,dog * Hodor,-280.6) / mislead(-Arya))){
	Jon -= ( ---0.82 );
	Hodor -= ( mislead(-88) )
} else {
	x /= 0.54
};
	-ROWS
} else {
	Ygritte -= -79;
	if(0.85){
	0.81
} else {
	Hodor
};
	Sansa *= betray(--1 + -0.88 / TABLE[--( ( COLS ) * -1 )][betray(bar())] * foo(( 0.64 ),( 0.84 ),( ( -1 ) )),( ( -Sansa ) - -ROWS + Hodor ))
}
}
def rule(Sansa,Arya){
	Jon
}
def TABLE[bar(-Stark,-x)][i] {
	if(0.82){
	Jon -= -5
} else {
	63;
	ROWS;
	Arya += -0.63
}
}
def TABLE[rule(betray(ROWS,rule(( Sansa - TABLE[( TABLE[COLS][foo(-COLS,ROWS,ROWS - COLS)] * x + mislead() )][( -ROWS )] * -59 ))) / Ygritte,Arya,bar(0.74))][i] {
	if(( ( -1 - rule(--x,TABLE[Ygritte][( --foo(Jon,-Hodor,betray(---dog / Jon + ROWS,Ygritte)) )]) / ( -Ygritte / rule() ) ) )){
	dog -= TABLE[COLS][-1 / ROWS];
	y += -foo() * foo()
};
	rule(COLS)
}
assert ( -destroy() * 47 ) / -x : "Winter is coming"
def TABLE[dog][i] {
	Arya -= COLS
}
var Stark = ROWS
def foo(Hodor){
	if(-940.03){
	-0.69;
	dog /= destroy(-COLS * ( Jon + ( COLS ) ) / TABLE[dog][rule(-COLS,-17)] - ROWS + ( ( TABLE[( y * mislead(--TABLE[destroy(Arya)][--0.01] * Sansa,( -Jon )) )][protect(Jon - -Jon)] ) ),-450.18);
	if(( destroy(( 1 ),ROWS) )){

}
};
	mislead(Ygritte,y)
}
assert Ygritte : "Fear cuts deeper than swords."
def TABLE[rule(( 16 ),foo(TABLE[-ROWS][--540.877],bar(TABLE[TABLE[ROWS][rule(COLS,--Hodor - Sansa / x)]][y],dog),-destroy(mislead(Stark,-60,ROWS),TABLE[Stark * -( ( ( dog ) ) ) - TABLE[x][680.4226 / ROWS]][destroy(-17,( protect(--1,---( ROWS ) / -foo()) * TABLE[( ROWS / ( 820.804 ) ) / 0.25][betray(mislead(-54 - ROWS,dog) - ( ( ( bar(destroy(-0.67,--rule()) - Ygritte - COLS) ) ) + -TABLE[-destroy()][foo(--18)] - ROWS ),-destroy(( -x )) + ( foo(COLS,700.97) ),--x) + -79] ))])))][k] {
	if(TABLE[ROWS - -190.2024 * protect()][betray()]){
	Ygritte *= COLS
} else {
	Arya *= 0.91;
	mislead(( -( -COLS ) ))
}
}
def betray(Sansa){
	Hodor
}
assert dog : "Nothing burns like the cold."
var x = rule(bar(COLS,dog),y)
def protect(){
	if(-( 0.98 ) - COLS){
	x
};
	( dog );
	if(-0.13){
	if(destroy(-37)){
	COLS
};
	if(-ROWS * Jon){
	if(( Jon )){
	if(Stark){

} else {
	TABLE[0.69][( betray(Hodor) )] / TABLE[mislead(TABLE[betray(Jon,betray(COLS,( -Jon * dog * ( dog ) ),( -Hodor + ( TABLE[-( TABLE[TABLE[y / ( foo(x,--bar(TABLE[ROWS][TABLE[mislead(( -Hodor ))][-( ( 32 ) ) * bar()] * Sansa],ROWS),( ( COLS ) ) / -0.21) )][TABLE[--1][-x]]][TABLE[ROWS][TABLE[mislead(0.47,-0.25) - ( ( ( Ygritte ) ) )][Sansa]]] )][rule(dog) + ( -COLS ) * TABLE[Jon][-0.66] - TABLE[-ROWS][Ygritte * -( 57 )] * mislead(-mislead(Sansa),destroy())] ) - ( ( Arya ) ) )),y)][Jon] + -( -0.33 ) / ( TABLE[0.87][mislead(Hodor,TABLE[betray(( -( betray(0.53) ) ),-Ygritte)][( ( ( rule(( COLS )) ) ) + bar(Ygritte,COLS) )] * rule(Stark,Stark,ROWS * ( dog )))] ) - -ROWS + 40 * ( -( -Hodor ) / --( Sansa ) - -220.6729 ))][930.601] * dog;
	Jon -= Stark
}
};
	Hodor += -( bar(-47,Stark) )
} else {
	TABLE[Jon][-ROWS - -1 - betray(( ( COLS / ( Ygritte ) ) ))];
	if(ROWS * -0.04){

} else {
	y += foo(rule(-( -Jon )),ROWS)
}
}
}
}
def destroy(Jon,x,Hodor){
	Arya -= x
}
var Hodor = bar(( -0.5 ),foo(x),COLS)
assert -( --810.811 ) : "One can not simply parse himself"
def TABLE[Jon][j] {
	if(Hodor){
	if(Sansa){

} else {

};
	if(( COLS )){
	Ygritte -= --( ( COLS ) );
	protect(20,-1,( -ROWS ))
}
} else {
	if(Hodor){
	y /= -destroy(Arya);
	if(-ROWS * ( Stark )){
	-( Hodor );
	Ygritte += -( 180.4 ) - -0.63;
	Stark
} else {

};
	if(-0.36){
	( Stark ) + ROWS
}
}
};
	if(-( Ygritte )){
	if(0.85){
	y += dog - rule(Jon + ( TABLE[ROWS][( -Arya )] - Jon - -0.06 ) - TABLE[protect()][-0.56] / --33 + Jon,0.67) / Jon;
	if(ROWS){
	if(26){
	y /= COLS;
	protect() - ROWS
} else {

};
	x += ( -0.04 )
} else {
	ROWS;
	y -= ROWS;
	if(TABLE[-( dog )][COLS]){
	bar(COLS);
	x /= 0.07
}
};
	-20 * ( ROWS / --foo(0.03,( COLS ),-15) * 58 ) / -1
}
}
}
assert COLS : "One can not simply parse himself"
def TABLE[Stark][k] {

}
var Hodor = -TABLE[( COLS + protect(-Sansa,bar(Sansa,bar(COLS))) )][-( ( Jon ) / Jon )] * TABLE[-1 - -700.926 / -COLS / 86][TABLE[( COLS ) * destroy(-0.17) - COLS - destroy(COLS,ROWS) + -( COLS ) / x][( Sansa )] / -rule() * y]
def TABLE[destroy()][k] {
	Ygritte /= Arya;
	y /= -0.89
}
assert -betray(( TABLE[Jon * -mislead(ROWS,630.8,ROWS) - ( TABLE[-50][destroy(ROWS,( destroy(mislead(--1 / --( -54 ),destroy(Jon,-dog) - ( Arya ))) ))] ) / ( ( destroy(dog) ) ) + ( Stark )][-x * --( Hodor )] ),( TABLE[-50][mislead(-0.06,( destroy() ))] ),--0.15) : "What do we say to the Lord of Death?"
var Arya = Hodor
var Ygritte = ( TABLE[-dog][-0.53] )
def bar(Arya,Stark){
	dog /= -60.96
}
def rule(Stark){

}
def TABLE[-ROWS][j] {
	Ygritte *= bar(protect(Hodor,foo(bar(COLS))),-TABLE[Jon][1 + protect(--TABLE[x][( 68 )])]);
	Arya += COLS;
	foo(y,-0.91)
}
def protect(){
	Stark /= foo(y);
	if(rule() * destroy(TABLE[ROWS][( bar() )],-TABLE[( ( foo() ) / -( rule(-25,--Sansa,betray()) ) )][rule()] + -bar(( -bar() )))){

} else {
	mislead(( ROWS ))
};
	y /= ROWS
}
def TABLE[rule()][j] {
	Jon /= 37
}
var Hodor = -COLS
assert COLS : "What do we say to the Lord of Death?"
def TABLE[ROWS][i] {

}
def betray(dog){
	Jon += -1;
	x /= TABLE[( -Hodor )][-0.15]
}
assert COLS : "Winter is coming"
var Sansa = COLS
def TABLE[TABLE[bar(( ( ROWS ) ),--0.75) * 5][Hodor]][k] {
	if(foo(1,( protect(-4,dog + rule(( -ROWS * Stark ),mislead(-y * --rule() * TABLE[( -TABLE[TABLE[( 73 )][-ROWS + -( ( protect() ) - 1 ) - ( 45 )]][destroy(ROWS)] + TABLE[Ygritte + -Ygritte][-0.77] )][( bar(-( ROWS - y ) - -53) ) + 54] + -COLS * 750.12,Arya),( rule(foo(( ( -0.27 / 25 - -290.7451 ) ) - -betray(TABLE[( 780.4143 )][--0.66]),-( -destroy(foo(( --TABLE[( TABLE[-790.863][ROWS] )][-TABLE[TABLE[( ( TABLE[-56][1] ) )][( ( -( TABLE[Arya][( ROWS )] + ( mislead(-1) + ( -0.59 ) ) - TABLE[Hodor][-Arya] ) ) )]][-Jon * 800.268 / -( --11 )]] - -dog ))) * ROWS )) + protect(( TABLE[ROWS][-0.0184 / 0.7] ),ROWS)) )) * Arya) + foo(COLS * TABLE[COLS][( ROWS ) + betray(TABLE[TABLE[0.19][( bar(rule(rule(Ygritte,740.69))) )] * bar(-120.6374 * -rule(1,TABLE[foo(foo(COLS,Ygritte))][destroy()]),rule(ROWS * TABLE[Sansa][rule(( mislead(protect(),690.611) ))],ROWS) + -180.749 / 22 - -0.21 - ( -COLS * ( 990.92 + foo(( y )) ) ))][-1],TABLE[-700.85][foo(( destroy(-destroy(),---destroy(-0.86) / ROWS,( Ygritte ) - TABLE[mislead()][( foo() )]) ),ROWS,Stark)])]) ))){
	x /= -1;
	x /= -( Hodor );
	-betray(ROWS)
} else {
	if(--COLS){
	if(( 0.01 )){
	( ( ROWS ) );
	Hodor
}
} else {
	dog -= 530.495
};
	if(-3){
	Stark *= foo(-protect(ROWS - TABLE[-x][-63] + Ygritte) + COLS + 1 / -Ygritte - TABLE[-40.46][-( destroy(( COLS ),foo() * ( dog + ( COLS ) )) * -protect(-mislead(protect(( 0.58 ))),( 0.48 )) * 1 )] / Hodor + ( -( foo(foo(mislead(Ygritte))) ) / TABLE[y][TABLE[destroy(dog - ( y ) * ( bar() ) / ( 1 * Jon ) / 550.38)][-Sansa]] ) + ( foo() ) * -dog / mislead() * Hodor);
	Ygritte *= -betray(--0.17,-1,Jon)
};
	betray(-8,TABLE[1][foo(bar(TABLE[( rule(-mislead(-0.04,COLS) + ( -( Hodor ) - -24 ) / -100 / Stark - --1 * ( COLS ),Stark - protect(COLS + Stark + -65) * Hodor / 9) )][-0.22],----Arya / ( Sansa ),-bar(( -0.75 ),( ROWS ))),Sansa)])
};
	Arya *= ( ( 95 ) )
}
def destroy(Jon){

}
def mislead(){
	dog *= -20 * ( Arya );
	if(destroy(-( ( -0.3 ) ),COLS)){

} else {

}
}
var x = y
assert COLS - destroy(Hodor,89) : "What do we say to the Lord of Death?"
var Hodor = TABLE[COLS][--destroy(ROWS + ROWS) * --72 / rule(mislead(( ( ROWS ) ),ROWS + -1) * ROWS)]
var Stark = -25
assert ( -0.15 ) : "What do we say to the Lord of Death?"
def rule(dog){

}
def TABLE[-Jon][k] {
	45
}
assert dog : "Winter is coming"
def TABLE[-80.597][j] {
	if(bar(--foo(-54),mislead(1,ROWS),-21)){
	if(mislead(dog / dog * TABLE[--280.4][-70.59] + y / TABLE[( -0.3 )][-( bar(betray(--COLS + -Arya / 1 - -300.721,mislead(-1) + -ROWS,( -1 )),COLS,-( Sansa )) ) * TABLE[x][( ROWS )] - destroy()],-foo() - ( -protect(( -mislead(( ( -( ROWS ) ) ),Ygritte / x + ROWS) ) - rule(Hodor,-COLS,rule(y,( TABLE[rule(y,-44)][Hodor] ) - -COLS,Hodor)),rule(-39,Jon)) ) - TABLE[rule(-rule(ROWS))][( -51 )],TABLE[Arya][TABLE[( 80 ) / 0.06 * ( dog ) / -Sansa][bar(rule(),COLS)] * Jon + ( TABLE[( ( ROWS ) )][( foo() )] )]) - mislead(-y - TABLE[mislead()][Ygritte] - ROWS,foo(TABLE[ROWS][ROWS],ROWS,( Sansa )))){
	Sansa *= -50 - destroy(y)
};
	destroy(TABLE[--Ygritte][ROWS])
} else {
	( foo(-44) - -ROWS );
	TABLE[26][-( --( Stark ) )]
};
	if(ROWS){
	if(Arya){
	710.882
};
	if(Stark + ( -Ygritte ) / COLS){
	if(Arya){
	if(y){
	Sansa -= -0.53;
	if(-( TABLE[-TABLE[-1][Ygritte]][( -670.374 )] )){
	if(0.21){
	( ( COLS - ( 0.57 ) ) );
	TABLE[( mislead(mislead(20.24,betray(y,--1,( 0.98 )),( protect(rule(TABLE[-17][foo()] + 0.63),-55,Stark) )),-1000.43 + -1) ) - 33][protect(COLS,COLS)]
} else {

};
	Jon /= -26
} else {
	if(( ( TABLE[-Hodor][880.3] ) )){

};
	Stark -= COLS;
	if(-dog){

}
}
};
	Sansa /= Ygritte;
	( ( ( mislead(--0.93,ROWS) ) ) )
} else {
	0.77;
	if(--0.77){
	if(-Jon * -71){
	if(0.62){
	if(COLS){
	if(-TABLE[510.8][-( 1 )]){
	ROWS;
	if(-35){
	if(-0.77){
	if(bar(Sansa,( COLS * --TABLE[mislead(-38)][Stark] ))){
	Sansa -= bar(bar(440.7),Jon)
} else {
	-( TABLE[COLS][( -Hodor * ( Jon ) )] ) * COLS
}
};
	x += protect(-bar(COLS))
};
	Ygritte += rule()
}
} else {
	if(ROWS){
	if(foo(30.886,rule(ROWS))){
	if(-x){
	Hodor /= destroy(( destroy(TABLE[280.4][-( -TABLE[ROWS][ROWS] * Jon )],17,y * -bar(TABLE[55][y],( ( ROWS ) ))) * -78 / x + ( -COLS * dog ) ),Jon) / Stark
} else {
	TABLE[-77][Arya];
	dog -= mislead()
}
} else {
	if(ROWS){

} else {
	ROWS
};
	if(betray()){
	dog -= 240.715 - dog
}
};
	Ygritte *= -720.5364 / Stark;
	mislead(-0.96)
} else {
	mislead(ROWS,( 3 ))
}
};
	-( dog );
	if(ROWS){
	Arya += ROWS;
	( 67 - COLS );
	Jon
} else {
	Stark *= ( Ygritte )
}
}
};
	if(-840.74){
	x -= -TABLE[( -1 ) + Ygritte][destroy()] - -76
} else {
	if(-( rule(-ROWS * TABLE[protect(0.12,COLS)][( -76 * ROWS )] + --89,COLS / -rule(y,ROWS),( rule(mislead(( betray(Jon) )),-0.89) )) / destroy(-76) )){
	Sansa /= --0.3;
	dog *= Stark;
	66
} else {
	Jon
};
	Sansa *= 22
}
} else {

};
	if(( destroy() )){
	Arya /= -( -68 / Sansa );
	if(Hodor){
	if(--56 + 15){
	if(-1){
	( ( COLS ) )
};
	if(66){
	if(( -75 )){
	Stark -= -1;
	rule()
}
} else {
	COLS
}
};
	Arya -= x
} else {
	Arya /= mislead(mislead(--( y ) / Ygritte - ( ROWS ),-430.11 / Arya,ROWS),ROWS);
	Hodor / --Arya * y;
	Sansa *= TABLE[( foo(( ( --3 ) )) )][TABLE[COLS][y]]
}
}
}
} else {

};
	Arya += -protect()
};
	( Jon * 1 ) + 280.4
}
assert x : "What do we say to the Lord of Death?"
def TABLE[Sansa][j] {
	if(COLS){
	if(-0.83){
	if(-0.6779 * 330.21){
	if(COLS){

} else {
	( 89 )
}
} else {
	y;
	6;
	Stark -= -1
}
}
};
	if(-940.4){
	if(Stark * -0.49 * Jon){
	if(0.13){
	dog *= rule(-590.2125,--84 - bar());
	-( foo(( -99 ),bar(( rule(-1) ) / -29,39)) ) * -destroy(COLS + foo(COLS,Sansa))
} else {
	if(( 510.528 )){
	if(( x )){

} else {
	if(TABLE[-1][0.42]){

} else {
	Jon *= foo(1,x) * ROWS
}
}
} else {
	if(-Sansa){
	TABLE[COLS][-( -( Jon ) * dog ) / COLS];
	( -0.25 )
} else {
	COLS
};
	-rule(( TABLE[-rule(Hodor)][( 390.16 ) - Jon] ))
}
};
	mislead(foo())
} else {
	if(TABLE[-44][-Arya]){

} else {
	if(--0.15){
	140.56 - -x - mislead(bar(TABLE[-95 - -ROWS][( 0.56 )]));
	if(( 68 )){
	if(-( protect() )){
	if(0.73){
	Arya *= ( ROWS );
	-ROWS / 16
}
} else {
	if(-37){

};
	y -= Jon;
	if(betray(mislead(18),destroy(ROWS,COLS,ROWS))){

} else {
	TABLE[--mislead(Sansa,-ROWS) + --protect(( Ygritte ) + ( ( -COLS ) ),COLS) - TABLE[TABLE[( ROWS )][--rule(TABLE[bar(( Ygritte ),COLS,mislead(protect(Sansa)))][ROWS],Hodor)]][mislead()]][-80];
	Hodor *= protect(--ROWS);
	if(( foo() )){
	if(86 * ROWS){
	if(0.54){
	if(destroy(protect(-COLS) - ( -Jon / Hodor ),-betray(Arya,COLS,--( protect(( COLS )) ) - TABLE[-Arya][betray(--( ROWS ) - Arya,foo(( -1 ),-TABLE[0.84][0.34 / ( -COLS ) + -( betray(-1,-COLS - -( ( 990.772 ) )) )],dog))] - destroy(rule(destroy(--25)),ROWS) + Jon))){
	if(( 67 )){
	y *= 1
};
	if(--y * -1){
	Jon /= TABLE[-16][Sansa]
};
	TABLE[COLS][COLS / -( x ) - -320.69]
};
	COLS;
	TABLE[protect(ROWS,Sansa,0.06)][-mislead(x)]
} else {
	if(-( 47 )){
	if(protect(-0.31,( 0.74 ) - -( TABLE[( -1 )][Stark - ( 9 / Arya )] ) * dog + Sansa)){
	if(0.93 - -foo(--0.71 * 48)){
	if(Arya){
	Jon *= COLS
}
} else {
	--TABLE[ROWS][foo(-Arya,( ( ROWS ) ))] * -COLS;
	Ygritte += -ROWS
};
	if(--0.04 * destroy() / TABLE[protect()][-1]){
	if(rule(-dog * -y)){
	if(ROWS){

} else {
	Sansa += Sansa;
	x -= -650.9 / TABLE[y / ( TABLE[( ( ( Jon ) ) )][foo(0.93)] )][TABLE[y][COLS]]
};
	if(-ROWS){

};
	if(0.35 * --ROWS){
	-200.92
} else {
	y *= -62;
	-betray(ROWS,betray(1))
}
}
}
} else {
	( ( Stark ) );
	Stark += COLS;
	TABLE[bar(TABLE[COLS][y * TABLE[( mislead(-1 - -rule() / Sansa * -1,-0.89 * 0.78) )][Stark] / -ROWS]) + ( Arya )][-1]
};
	61 + -1 * 0.26
};
	( ROWS )
}
} else {
	if(betray(betray(COLS,-----mislead(( Stark ) / x),Arya))){
	COLS / destroy(betray(Sansa,betray(( TABLE[--33][-Hodor] ) / TABLE[mislead(Sansa)][TABLE[-ROWS][Ygritte]] * 75)),-Stark - ( -49 ) + mislead(foo(rule(-1),Sansa),-0.2,-foo(72,COLS)));
	if(y){
	Hodor *= bar(-93 - ( ROWS ),COLS);
	Stark -= --0.39;
	if(rule(-( -1 ))){

} else {
	COLS;
	-0.5
}
}
};
	if(( ROWS )){
	700.461 - 44 + 16
}
};
	ROWS
}
}
}
} else {
	if(x){
	foo(--34,protect(dog,Stark,Hodor));
	x;
	Stark - ( -0.55 * Jon )
} else {
	if(dog - ( protect(( y ),310.167) )){
	Stark *= ROWS
} else {

};
	rule(0.85,0.75)
}
}
} else {
	if(ROWS){
	Arya /= TABLE[0.58][-COLS];
	if(y){
	y *= betray(protect(-14 * Sansa),y);
	if(rule(-ROWS + ROWS)){
	if(( destroy(COLS,TABLE[x][foo(COLS,TABLE[-( Stark + 0.17 )][( -x * --ROWS - ( 70 - ( y ) ) )] / 0.28 * COLS,TABLE[protect() / COLS + x][COLS])]) )){

};
	if(( TABLE[x][-TABLE[-0.42][-45] + COLS + mislead()] )){
	x += ( ( -TABLE[mislead(dog)][bar(-( Ygritte ) / ( ROWS ) * --1 * destroy(destroy() * TABLE[-destroy()][dog],( 0.45 )))] ) );
	Arya -= destroy(-dog + ( -betray(COLS,betray()) / ( -49 ) - ( -bar(( 1 + protect() ),Jon) ) * ROWS / destroy(-0.66,90.734 - mislead(Sansa,destroy(bar(ROWS)))) ) * Hodor / ( rule(Stark) ))
}
};
	protect(-ROWS,0.46)
} else {
	if(ROWS){

};
	Jon -= 1 / TABLE[destroy(x,( COLS ) / 59,rule(ROWS)) / ( x )][dog];
	Hodor /= TABLE[-Ygritte][( protect(-55 / COLS) + --Sansa )]
}
} else {
	if(Arya){
	( --1 / ( ( ( ( ROWS ) ) ) ) );
	Jon += 44
} else {
	x /= betray(--COLS,( --TABLE[bar(-COLS - --1,( ( --ROWS ) ))][dog] )) * ( ROWS )
}
};
	x /= destroy() * -Ygritte - Stark
};
	Hodor /= TABLE[Jon * -52 + ( destroy(Hodor,Arya,TABLE[TABLE[COLS + -0.61][foo()]][Ygritte]) * Jon ) + ROWS][-47]
}
};
	betray(y)
} else {
	Ygritte *= -25;
	Hodor -= ( betray(-Jon,-( 0.21 )) );
	if(1 / 29){

}
}
}
var Arya = destroy(0.41,betray(TABLE[-0.1][-Arya / -120.26]))
assert mislead(-1,Jon,-8) : "Nothing burns like the cold."
def TABLE[1][i] {
	( Arya );
	Stark
}
def foo(Arya){
	Hodor += -( Arya ) / -bar(-( -TABLE[TABLE[( Sansa )][95]][TABLE[TABLE[-( y ) * Ygritte][-310.14] - 88 - COLS][mislead(betray(mislead()),--( -Arya )) / Jon]] ) / ( foo(COLS,-( mislead(7) / -( -46 ) ),betray(( -COLS ))) * Jon ),-dog * 900.89) * -COLS;
	if(Sansa * 0.85){
	--bar(1);
	y += Sansa;
	if(rule(1)){

}
}
}
assert ROWS : "Fear cuts deeper than swords."
assert ( TABLE[COLS][( destroy(y,COLS) )] ) : "Fear cuts deeper than swords."
def betray(x){
	if(-Sansa - ROWS){
	Arya += -700.312;
	foo(( -310.458 ) * Stark,destroy(86,mislead(foo(ROWS),28)) / foo(TABLE[Hodor][bar()],y),( COLS ))
} else {

}
}
assert ( -260.31 - destroy(-protect(COLS,( 0.54 ))) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( foo(-43,Hodor,-1) ) : "Nothing burns like the cold."
def TABLE[TABLE[-810.925][-0.29]][k] {
	if(mislead(-0.47,Hodor * ( TABLE[-betray(TABLE[1][-1],-rule(Ygritte,x,destroy(Sansa) - --( mislead(-5,protect(dog,( 1 ) - -bar(),-0.21),21) * ( betray(ROWS,COLS,mislead(ROWS)) ) )))][rule(( 750.13 ))] ) - TABLE[-340.683 + mislead(mislead(x,Stark))][dog],y)){
	dog -= -( ( ( Jon ) ) )
} else {
	mislead();
	if(-( --x / destroy(-1,( betray(Hodor) + ( -COLS ) )) * ( -Stark ) ) - --0.79){
	-TABLE[Sansa][93];
	if(-1 * ROWS / -50 - 55){
	Hodor *= -betray()
} else {
	30.479 / 0.96;
	Sansa += ( ( COLS ) + 51 )
}
} else {
	if(( ( -60 ) ) - Hodor + Ygritte){
	if(protect()){
	COLS;
	Ygritte *= bar(-19) - Stark;
	Stark
} else {
	if(mislead(foo())){
	if(-0.69 - -Stark){
	if(foo(-61)){
	rule(( Hodor ));
	-x
} else {
	--( Sansa / Sansa ) + TABLE[Stark][-1 / Arya];
	if(-29){
	TABLE[-66][( x + -0.86 - ( protect() ) + mislead(Jon) - ( ( -dog ) ) * y - ROWS )]
}
};
	if(( y ) * ( 73 + ---0.29 )){

}
} else {
	Jon += ( ( -( Hodor ) ) - 830.9047 );
	dog
}
} else {
	if(Stark){
	if(COLS){
	if(0.64){
	Ygritte -= --1;
	if(-COLS){
	0.02
}
};
	Arya
} else {
	if(-75){
	if(( ( -mislead(COLS,x) / ( TABLE[mislead(( mislead(( --1 ),( ROWS )) ) + mislead(( ( -COLS ) - -TABLE[foo(Hodor,-1,710.61)][( -( Hodor ) )] * TABLE[-( Stark )][-340.272] )) / protect(rule()))][betray(protect(880.7961 * -0.01,( -8 ),ROWS))] ) ) )){
	y -= foo(-98);
	dog += betray(TABLE[( bar(COLS,mislead(-1)) )][( Stark )],-COLS)
} else {
	( -betray(Arya,( -destroy(rule(Ygritte,Hodor)) )) );
	y /= ( Sansa );
	if(TABLE[-( -bar() - ROWS )][( foo(Arya) - -250.05 )]){

} else {
	Jon *= bar(ROWS,Arya);
	if(-40.926){

}
}
}
} else {
	if(mislead(bar(-1,Stark),TABLE[-1][-TABLE[rule(-0.2,11,-COLS)][dog]])){

};
	if(140.105){
	y;
	y -= destroy(dog - foo(),-ROWS);
	Arya -= ( ( TABLE[TABLE[( ( 22 ) ) + 99][destroy()]][foo(-690.097,Jon / mislead(( 1 ),-Stark))] ) )
} else {
	Jon *= Jon;
	( COLS ) * -y
};
	if(( ( foo(-( -destroy(( Hodor - destroy(Stark,COLS) - Stark ),( ROWS ),-550.689) ),ROWS,( ( y ) ) + -Jon) ) )){
	dog += Hodor;
	Stark *= -0.72
}
};
	-( -COLS * Stark + TABLE[foo(ROWS,rule(-540.169,Arya,-0.63))][-TABLE[Jon][( -( rule() ) )]] * TABLE[TABLE[Jon][61]][-COLS] / TABLE[destroy(TABLE[ROWS][mislead(( -y + -0.35 ) - protect())] * dog,Hodor * 87 + -34 - -dog + COLS)][TABLE[-77][1]] + ( -80 ) )
};
	COLS + Hodor
}
}
};
	if(770.053){
	Stark += ROWS
} else {
	-88;
	( -1 - dog )
};
	if(1){
	-50.8;
	if(ROWS){
	if(protect(-920.2)){
	if(---destroy(0.41) / betray(y,( foo(( 1 )) ),( destroy(-0.01,-44) )) + COLS * x){
	Arya += -940.16 - Sansa - -1;
	Hodor -= foo(--Arya,-COLS)
} else {
	Ygritte /= ( x );
	if(TABLE[( -ROWS )][-( ( ROWS ) ) - ( ( -39 ) )]){
	Sansa *= COLS;
	16
} else {
	Arya *= TABLE[COLS + -39][Jon];
	Sansa += ( COLS );
	Arya /= 0.96
}
}
}
};
	x += Stark / TABLE[( TABLE[TABLE[Ygritte][Hodor] - -Ygritte][-dog] )][-destroy(TABLE[ROWS][COLS])]
}
} else {
	x /= ( Stark )
};
	if(Jon){

};
	if(-1){
	-0.73 / ROWS;
	if(---( COLS )){
	Stark;
	ROWS / destroy(TABLE[-dog][Hodor] / -( -bar(x / ( ( ( -Arya ) ) ),ROWS) ) + dog) / ( 0.21 )
} else {

}
} else {

}
};
	--93
}
}
def TABLE[-83 * x][j] {
	0.86;
	Jon -= bar(--foo(COLS / Sansa) + --dog / TABLE[-0.17][destroy(TABLE[COLS][mislead()],destroy(ROWS,-( -Arya - ( -1 ) / Sansa / ( rule(( -ROWS ),--( Jon ) - dog,rule()) ) ),--( -98 * bar(TABLE[-ROWS / ( foo(1,mislead(betray(-rule(protect(-rule(430.52))),-TABLE[mislead(ROWS,-0.46)][protect(-rule(TABLE[ROWS][-COLS],-0.31 - COLS) + ( y ),mislead(Arya,-ROWS,1))] * ROWS),( TABLE[destroy(Arya) / ( dog )][COLS - ( ROWS )] ))) )][-Sansa],Ygritte,( -10 )) + dog )))] + -ROWS)
}
assert -66 / -rule(( TABLE[0.45][--Stark] ),x) : "Winter is coming"
def TABLE[TABLE[( dog )][COLS]][k] {
	y += rule(-( ( --mislead() ) ),Sansa,( --betray() ));
	--TABLE[0.2][( Jon )] + -59;
	if(dog){
	Sansa -= Jon;
	x -= ( ROWS )
}
}
def protect(Arya,dog){
	mislead()
}
def rule(Ygritte,Ygritte,dog){
	Arya *= TABLE[-( COLS )][-Jon / 1]
}
assert 0.72 + -foo() / -0.98 : "What do we say to the Lord of Death?"
var x = foo(Hodor,-0.85,--( ROWS ) / betray(( Jon )))
assert COLS : "Fear cuts deeper than swords."
def betray(Hodor){

}
def rule(dog,Jon,Ygritte){
	dog *= -0.91 * -( bar(TABLE[betray(-TABLE[( Ygritte ) / ( ( ( ---bar() + ( --22 * -( protect(protect() - 72 - dog,ROWS) ) ) + foo(Sansa) ) ) )][TABLE[protect(-1 - destroy(dog))][-foo()]],-ROWS)][-0.06],( -rule(Sansa,mislead(ROWS)) / COLS ),protect(-1,--0.74)) )
}
def TABLE[-0.43][k] {
	--destroy(TABLE[-COLS][-1]) * Stark;
	if(99){

} else {
	Stark *= foo(( Arya ))
}
}
var dog = ( ( destroy(destroy()) ) )
assert TABLE[Jon][y] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[COLS][j] {
	-1;
	x *= ( ( -( --0.49 ) - dog ) )
}
assert 1 : "Fear cuts deeper than swords."
def TABLE[-Ygritte / rule() - bar(dog,0.35) - ROWS][i] {
	if(foo(Ygritte)){
	Arya += ( mislead(-destroy(Ygritte - y,betray(-x))) ) - ( -690.054 ) * -COLS - ROWS;
	x /= ( Ygritte - 68 )
};
	0.38
}
def destroy(){
	Ygritte -= -mislead(( -26 ),-ROWS) - ( Stark );
	y -= betray(Ygritte,( betray() ))
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Sansa,Arya){
	Jon -= bar(TABLE[( ( destroy(( Stark ),( 62 - 350.55 + ( ---1 + ( bar(x,ROWS) ) ) ) - Sansa) ) )][dog])
}
def rule(Arya){
	Jon /= ( betray(-( -rule() )) ) + ( -rule(-0.03,dog) - COLS )
}
var y = Stark
def TABLE[Ygritte * 37][k] {
	if(-foo(-300.49,Hodor,( ( 0.87 ) ))){
	foo(COLS);
	Stark *= betray(Hodor,-Jon) + 1
};
	Arya -= Hodor;
	betray(-( COLS ),-COLS)
}
def bar(dog,x){
	y *= foo(rule(--0.67))
}
var y = bar(-1 + 36,( protect(Jon,-59,Jon) ))
assert rule(foo(foo(protect()),( destroy(( -1 )) ))) : "What do we say to the Lord of Death?"
def TABLE[-TABLE[-86][mislead(rule(--( -0.86 ),-1),( Arya ))]][j] {
	TABLE[-COLS][-Arya]
}
assert -0.74 : "Nothing burns like the cold."
def TABLE[-73][i] {
	if(destroy(protect(-0.06) / dog,( -1 ),TABLE[ROWS][-destroy(0.95)])){
	Arya /= TABLE[dog][( TABLE[--28][TABLE[-64][-27]] )]
} else {
	if(bar(63)){
	if(( 40.7 ) / destroy(( y )) * rule(ROWS / COLS)){
	-Hodor + destroy()
};
	if(ROWS - y / destroy(-( -COLS ) - -( foo(Hodor) ) * ROWS - -( -1 ),-Jon) + Stark){
	if(-0.87){
	x += ROWS
} else {
	y *= rule(-0.94,-ROWS / ( ( -0.37 - protect() ) ));
	y *= mislead(-destroy(( 0.97 )))
}
} else {
	0.68;
	--rule(( ROWS ));
	y
}
} else {
	Arya *= --0.33 + --rule(dog,1);
	190.0303 * protect(-9,8) + -TABLE[( y )][betray(( ROWS ),-( ( ROWS ) * 78 ) + -Hodor * COLS)]
}
};
	if(protect(betray(x,dog,protect(( 68 ),rule(y,-640.56))),-82)){
	( COLS );
	920.68
} else {

}
}
def TABLE[foo(-0.29)][j] {
	bar(( -0.26 ),Jon,-0.96)
}
def rule(Ygritte){

}
def destroy(Arya,Hodor){
	-Sansa;
	TABLE[( TABLE[-mislead(Arya,-0.64,COLS - Sansa) * --110.14 + bar(--23 - Stark,-ROWS)][Arya] )][-31 + rule(dog + Hodor,-Arya,TABLE[COLS][x]) / mislead(mislead(Stark,-Stark,-( -( ( Arya + mislead(Stark / -69,-0.51 - 320.845) - -( --Arya / 950.284 / Arya ) ) ) )) * -64)]
}
def rule(Arya){
	if(betray(Hodor)){
	Ygritte += 60;
	Sansa -= rule(Sansa,COLS)
} else {
	Arya *= betray();
	Jon /= destroy(foo(-Stark - Jon / Arya));
	if(( --destroy() )){

}
}
}
def foo(Ygritte,Ygritte,Ygritte){

}
def TABLE[-( Sansa ) - ( destroy(bar(TABLE[( -1 )][bar(Ygritte,( 1 ))],x,-Ygritte),-0.22 / -( ( --1 ) )) ) * --rule(bar(destroy(Jon,( foo(COLS,( destroy(0.28) )) )),71),-TABLE[foo(rule(( ( foo(ROWS) ) )))][0.39],mislead())][i] {
	( ( destroy(-protect()) - ( protect(Sansa,0.32 + 13,-TABLE[( x )][( destroy(dog) )]) ) * -COLS ) );
	y -= ROWS
}
assert -1 + COLS : "Winter is coming"
def rule(Hodor,y){
	if(Stark){
	if(destroy(0.08,Sansa) / mislead(( foo(dog,-1) / ( TABLE[dog][-Arya / 1] ) + Sansa ),TABLE[-( Hodor )][betray(-COLS + Arya,Sansa) / 32 - Stark * Jon] - TABLE[1][Arya])){
	650.9044 * TABLE[-1][COLS];
	( y - 46 )
} else {
	if(ROWS){
	dog
}
}
};
	0.44
}
assert Sansa : "Nothing burns like the cold."
assert rule(-1) : "Winter is coming"
assert --COLS : "What do we say to the Lord of Death?"
def TABLE[--( dog )][j] {

}
var Ygritte = -dog
def TABLE[( -0.73 )][k] {
	Sansa /= COLS;
	if(dog){

};
	Ygritte /= ( x )
}
def TABLE[( -( ( ( ( TABLE[x][-Sansa] ) ) ) ) )][i] {
	if(x){
	Arya;
	Hodor
}
}
assert 32 - Stark : "Fear cuts deeper than swords."
def rule(Sansa){
	if(--ROWS){
	destroy();
	( x )
} else {
	x += Hodor
}
}
var Sansa = ( -bar(-740.563) ) + -0.63
def foo(Arya){
	Hodor /= foo(Sansa,ROWS) - ( ( -1 ) );
	( protect(x) * Stark );
	Sansa -= bar(--97)
}
def destroy(y){

}
var Hodor = dog
assert ---0.95 : "Nothing burns like the cold."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = --Jon
assert dog : "Winter is coming"
assert ( 58 ) * Stark : "What do we say to the Lord of Death?"
def TABLE[( protect(COLS,-COLS) )][i] {
	COLS + dog
}
def protect(Arya,x,x){
	x /= -Sansa;
	dog *= protect(dog);
	Stark *= -180.543
}
assert ( -( -540.52 ) ) : "What do we say to the Lord of Death?"
assert ( -Arya ) : "What do we say to the Lord of Death?"
def TABLE[mislead()][i] {
	x *= TABLE[Sansa / -1][y];
	if(--mislead(Stark,COLS) + 200.21 - dog){
	Jon -= -COLS * 0.91;
	TABLE[betray(-( -0.82 + -COLS ) + ( -ROWS / TABLE[ROWS * Ygritte][rule()] ) - TABLE[-( 0.89 )][COLS] * -( ( y ) ),ROWS,( TABLE[( 0.94 )][COLS] ) + y - foo(protect(-rule(Ygritte) - ROWS,ROWS,ROWS),-72 / mislead(TABLE[( Sansa )][( -27 + rule(-0.86,29) )]) - -rule(-330.85,( COLS ) + x,( 0.59 / ( foo(( mislead(( ( dog ) ) / -mislead(Jon)) )) ) )) + Hodor))][Arya * Sansa / TABLE[rule(Arya,-Stark - Arya)][0.98]]
}
}
def TABLE[-740.3][j] {
	y -= ( -( ROWS ) )
}
def bar(x,Stark,Arya){
	if(rule(( bar(rule(-0.34),TABLE[-( ( -x ) )][mislead(-ROWS,4,( -33 / TABLE[-betray()][0.95 / -Jon - protect(-x)] ))]) ))){
	if(( Ygritte )){
	if(TABLE[( destroy(-betray(-ROWS - -foo(y)),0.81) )][-1 * -1]){

};
	if(COLS * Stark){

} else {
	x *= COLS
}
} else {
	Ygritte += foo(( ( -770.26 ) ),TABLE[--TABLE[( dog ) / ( rule() )][--120.0281 - ---1 - -foo() * ( ( --74 * ROWS ) ) + Ygritte]][protect(Arya,-ROWS - ( ( -1 ) ))]);
	if(Ygritte){
	--Ygritte * COLS;
	y
} else {
	if(( -TABLE[dog][COLS] )){
	-1;
	if(foo()){

} else {
	Ygritte -= destroy(mislead(-890.939));
	( -( ( y ) + rule() ) )
}
};
	if(mislead(-0.3)){
	if(bar()){
	Hodor / 1;
	y -= 0.29
} else {
	COLS;
	x *= dog
}
}
}
}
} else {
	if(COLS){
	x -= -0.02
}
};
	if(TABLE[-0.78][COLS]){

}
}
def mislead(y,Sansa){

}
var Ygritte = ROWS
var dog = -( -foo(mislead(( Sansa ),( -470.29 - ( -11 ) ),Sansa)) )
var Ygritte = foo(-TABLE[COLS][89],-0.18,-COLS)
def rule(y){
	ROWS * COLS
}
assert -bar(-( Sansa )) + -dog + 140.04 : "Nothing burns like the cold."
var dog = ( ( protect(y) ) )
def TABLE[TABLE[dog][rule(( 28 ),mislead(foo(ROWS,bar(mislead(-foo(73 / COLS)),Sansa),-75),ROWS)) * dog]][i] {
	Stark += COLS;
	if(---0.88){
	( ROWS );
	Hodor *= destroy();
	if(TABLE[foo(ROWS,rule(destroy(COLS,bar()),-Jon))][TABLE[-19 / betray()][-1]]){
	dog *= -TABLE[protect(( --( -ROWS / -ROWS ) - ( -( -1 ) ) ),destroy(( --0.93 ) - -( betray(COLS,( betray(( Arya )) ) / Jon) / -COLS ),-80,x - rule()),910.774) * rule(betray(---bar(),Jon,Ygritte))][bar(1,( COLS ))]
} else {
	if(( rule(-Jon) )){
	if(-85){
	Sansa /= x;
	-( 1 ) * ( -TABLE[-( Stark + bar(protect(110.89,Hodor)) )][0.28] );
	( ( ( betray(-31,TABLE[-4][( mislead(-0.49,-( 0.32 * COLS )) )] - 85) / Hodor ) ) )
};
	if(( --91 ) * ( foo(-( ( -73 ) ),destroy(rule(TABLE[--( TABLE[dog][COLS] )][mislead(-92,TABLE[( ROWS )][rule(COLS,-betray(7,TABLE[protect(COLS,--( dog ) / -70)][Arya]),foo(x) / 0.9 + -COLS)])] * --COLS,rule(COLS,310.6206 / Arya - ( ( -dog ) ),TABLE[--Jon][( ROWS )]),Hodor - Arya))) * -12 )){
	rule(dog)
}
}
}
}
}
assert ( Stark ) / -TABLE[x][ROWS] : "Fear cuts deeper than swords."
var y = -Jon
def betray(dog,Stark,y){
	Hodor -= -mislead(TABLE[-76][( ( COLS ) )],( -( ROWS ) / ( COLS * -dog ) ),Ygritte) / mislead(y);
	-68
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	( protect(ROWS,COLS / ROWS,destroy(35)) / bar(Arya,rule(( destroy(-Sansa,x) )),ROWS) )
}
def foo(x,Sansa){
	-Hodor + foo(( ROWS ),rule());
	-( -Arya )
}
assert ( -( -Sansa ) ) : "Winter is coming"
def TABLE[( ROWS )][i] {
	x;
	-bar(ROWS)
}
assert protect(COLS) : "One can not simply parse himself"
def bar(Sansa,Jon,dog){
	54
}
def rule(){
	if(bar(rule(-COLS),-( -COLS * Sansa ),mislead())){
	ROWS / ( rule(-100.901 - Ygritte) );
	if(mislead(COLS + x,Hodor) / y - destroy(--0.39 / dog) + TABLE[mislead(foo(( -foo(-57,-Hodor) ) / ( Arya )) * ( --destroy(betray(Stark,betray(bar(Sansa,Sansa,--( destroy(Jon,ROWS) ))))) ),( destroy(-140.937 * ROWS,0.91) * Arya ))][( --COLS )]){
	Hodor;
	mislead(-3 - 400.942 - ROWS)
} else {
	COLS
}
} else {
	if(-( mislead(foo(( ( -protect(TABLE[Ygritte][0.7],-TABLE[--630.51 + -ROWS][foo(TABLE[-0.44][protect(Sansa)] * COLS - ( dog ),bar(600.7,0.94))]) ) ),TABLE[protect(-y)][destroy()]),dog) )){
	Hodor += ROWS;
	if(ROWS){
	Arya *= ( -( rule(protect(-0.13 * -0.06 - -0.41,( --1 )) / TABLE[Hodor][foo(Jon)],( TABLE[protect(( TABLE[Ygritte][destroy(Hodor)] ),--foo(ROWS / Jon,( Stark ))) - ( -TABLE[bar(0.99,-0.53,COLS)][-foo(--COLS,protect(0.28,foo(-0.63,-610.526 + ( -23 ))))] )][--67] )) ) * --51 );
	mislead(-0.57,x)
};
	if(dog){
	TABLE[0.22 / TABLE[destroy(foo(Sansa,protect(-0.29,betray())),ROWS - -COLS / -820.011) + ( mislead(mislead(-( ( mislead(( -0.68 ),-0.81) ) ) - ( dog ) + foo(x))) ) / ( -( ( ( 66 ) ) ) ) + COLS][rule(--86)] / 0.07][Stark] / -( mislead(foo()) * ( Sansa ) );
	0.89;
	if(TABLE[( TABLE[Arya][-81 + TABLE[COLS][dog]] )][Ygritte]){

} else {
	if(1 - 1){
	if(dog){
	if(ROWS){
	Jon *= y
} else {
	x *= COLS
}
}
};
	if(rule(-( -0.97 ))){
	if(-410.55){
	Arya *= Arya;
	COLS - -bar()
};
	( ( ( Stark ) ) )
}
}
}
} else {
	if(-35 - COLS){
	Jon *= foo(( -52 ),( TABLE[-( -COLS )][Stark] ) - -TABLE[Stark][betray()]);
	( COLS )
} else {
	if(-75 - ROWS){
	if(Arya){
	Hodor *= Stark;
	if(protect(bar(( 0.99 ),( TABLE[-rule(-Hodor,mislead(dog,( dog )),0.92 + ---330.38 / y)][( Stark )] )))){
	if(( TABLE[bar(----( -Ygritte ) - ( COLS ))][ROWS] ) / ( x )){
	if(-6){
	--1
} else {
	if(TABLE[COLS][1]){

} else {
	if(( ( COLS / foo(-Stark,betray(( rule(TABLE[Sansa][COLS * ( TABLE[--protect(-1)][( TABLE[Jon][-COLS - bar(-0.69,( 0.02 ))] )] )],( ( ( Arya ) ) ) / ROWS) ),rule(mislead(( Hodor ) + ROWS / Stark / destroy(14),protect(-x,( ( -53 ) ),( COLS )) - Stark),( betray() + -0.39 )))) - Stark ) )){

}
};
	ROWS
};
	if(destroy()){
	dog -= 0.06;
	Sansa * COLS * rule(dog,Jon) * --54
}
}
};
	-TABLE[betray(betray(bar(78,-protect(-( ( COLS ) )),TABLE[COLS][ROWS]),COLS))][Jon]
} else {
	if(93){
	Arya /= ( -COLS ) + betray(Hodor,Stark,( COLS )) - Stark - ( x * -980.1 ) / ( ( foo() + TABLE[rule(foo(Jon),-TABLE[COLS][( Jon )] + ( --70.677 ) - dog)][Ygritte] / ROWS / ( ( mislead(-COLS) - ( Stark ) ) ) ) );
	if(ROWS){
	if(destroy(( ( -0.61 ) ),-510.1 - COLS,( ( rule(--destroy(( rule(69,bar(betray(Jon)) / Sansa,Arya) )),-60.313) ) ))){
	COLS;
	Stark -= protect(-foo() / TABLE[-48][rule(COLS)])
} else {
	Ygritte /= ( ( ( TABLE[--mislead(( Jon ))][-0.32] - -Ygritte ) ) ) - 920.92 - COLS - COLS;
	Stark
}
}
}
};
	if(Arya){
	if(Ygritte){
	Ygritte;
	Ygritte;
	--0.76 + rule(Hodor)
};
	Ygritte /= ( 0.6 - -0.79 )
}
} else {
	y -= -1
};
	Ygritte /= 50.838
};
	bar(-TABLE[790.7816][( 39 )] - -0.27 - protect(( bar(( protect() ) / y,-1) ),bar()),rule(-( -( -( 20.865 ) ) )),mislead(Jon))
};
	Hodor *= -0.64;
	-51
};
	Arya /= ( 0.74 )
}
def betray(Arya,Sansa){
	if(( ( Jon ) )){
	if(betray(-betray(Jon + ( TABLE[-1][Stark - -( foo(( 1 / TABLE[( -COLS )][( Stark )] )) ) / betray(ROWS,-mislead(-mislead(bar(0.99,1))),( x ))] + ( COLS ) - ( -Hodor ) ),-0.3),--protect(-( y ),640.666),Ygritte)){
	Stark *= foo();
	330.44
} else {
	if(( destroy(ROWS,Jon) ) * ( foo(foo(0.03,0.91) / -Jon,( mislead(ROWS,1,Jon) )) )){

};
	Jon *= ----65 - ( bar() ) * -73
};
	Ygritte += betray(-dog)
} else {
	( TABLE[Ygritte][15] + -( COLS ) - -Hodor )
};
	0
}
def TABLE[TABLE[ROWS][( ( ( 50.1557 ) ) )]][i] {

}
def mislead(x){
	if(-TABLE[-( 0.87 )][mislead(protect(-rule(TABLE[ROWS / protect(( ( y ) ))][-Hodor],-( -0.38 ),y),0.94,bar(y,-1)))]){
	-mislead(-TABLE[-( -0.92 )][rule(-ROWS,-x)]);
	-0.74
};
	Hodor /= -1
}
def bar(){
	x
}
var Sansa = ( ( ( -96 ) ) )
def protect(x){
	Sansa *= ( TABLE[( destroy() )][destroy(betray(( TABLE[TABLE[TABLE[foo(COLS,Ygritte)][rule(-TABLE[protect(Jon,( TABLE[-13 - -mislead(Jon,-1)][( Sansa )] ) / -TABLE[COLS + 15][( -( ( 87 * ( ROWS ) ) ) )])][TABLE[-y - -ROWS][-y + 87] / Sansa],y + TABLE[-0.73 / mislead(rule(-( ( ( -TABLE[betray(-13)][y] ) * ( ROWS ) ) ),--( protect() )),0.14)][-40]) + COLS - -86]][-0.67]][-0.8 + COLS] ),COLS + Arya))] * destroy() );
	-( foo(-0.79,( Jon )) - COLS / ( ROWS ) + COLS );
	if(x){
	betray(750.758)
}
}
assert rule() / ROWS : "One can not simply parse himself"
assert ROWS : "What do we say to the Lord of Death?"
assert ROWS - Arya : "Winter is coming"
assert -700.35 : "One can not simply parse himself"
def TABLE[COLS][i] {
	Sansa *= 18
}
def destroy(Arya){
	if(-protect(TABLE[( ( ( ( protect(COLS,1) ) / ( Sansa ) ) ) )][y],-71)){

};
	if(TABLE[-1][mislead(TABLE[-0.97][foo(ROWS,Sansa,-41 + Ygritte)],ROWS + ROWS)]){
	if(ROWS){
	( -92 + --( ( ( 95 ) ) ) + Hodor + -1 )
} else {
	( -( 0.29 ) );
	dog -= -87
}
}
}
assert x : "One can not simply parse himself"
def TABLE[ROWS][k] {
	Ygritte;
	Jon
}
def TABLE[( 0.84 - ROWS )][k] {
	if(COLS){
	-0.94;
	Sansa;
	( ROWS ) + ROWS
} else {
	if(-( -( --ROWS - dog + 0.1 * foo() ) ) - -46 + -Sansa - 0.76){
	---rule(840.36) + ( -93 + ( betray(--( ( Stark ) ),dog,foo(ROWS)) ) ) / Sansa;
	Stark
} else {
	if(-380.869 / ( -1 / Ygritte + ( mislead(-( ( -0.05 ) )) ) - x )){
	x *= mislead(( -82 ) - COLS,( mislead() ));
	TABLE[ROWS][Hodor];
	betray()
};
	y /= ( -Arya + y + y )
}
}
}
assert --ROWS : "Winter is coming"
assert 0.14 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Sansa,Hodor){

}
def TABLE[( destroy(-ROWS) )][i] {
	if(( protect(Hodor,160.5) )){
	Jon /= TABLE[0.62 / COLS][-destroy(foo(),foo(),1)]
}
}
var x = COLS
def TABLE[mislead(y + 77,destroy(dog,-75 / ROWS),-0.04) + --13][j] {

}
def TABLE[Sansa][k] {
	if(foo(--300.69)){
	Stark *= Hodor;
	89
}
}
def bar(x){
	Jon *= ROWS
}
def TABLE[protect(TABLE[protect(--660.93,y)][-mislead()])][j] {
	Stark += 170.39 * bar(-betray(betray(( foo(TABLE[-0.86][( COLS )] - ( -97 ),90.811) ),destroy())));
	Arya /= rule()
}
var Stark = ROWS
var y = 0.02
def protect(x,dog){
	if(-COLS){
	890.18;
	Ygritte /= --( -dog )
} else {
	540.37
};
	dog -= 51 - -1 - -Stark
}
def destroy(Ygritte,Ygritte){
	Hodor /= bar(x,protect(protect(--COLS,Stark),ROWS,mislead(84)))
}
var Stark = Arya
def TABLE[Stark][i] {
	x /= betray(-COLS,( 0.74 ));
	if(foo() - ( TABLE[0.75 * --TABLE[( -( ROWS ) )][protect(destroy(x / mislead(( ( mislead(COLS,( ROWS ),betray()) ) ),foo() - ROWS * betray(mislead(rule(-Jon),( -rule(protect(( -COLS )) * dog / COLS,-rule(-Ygritte,-30)) + ROWS - COLS - -protect(-COLS * -( -1 ),( -( COLS ) + 250.07 ),COLS) / foo(protect(dog / mislead(( -( ROWS + TABLE[mislead(0.12,( Arya )) * foo(ROWS) - rule(dog,-COLS * protect(-ROWS,foo(-1)),ROWS)][Hodor * TABLE[COLS][Jon]] ) ),foo(destroy() / betray(COLS,( -0.45 ),ROWS)) - TABLE[-protect(--0.9,-12)][destroy(Hodor / -COLS * -1,Ygritte)])),ROWS,Sansa) - bar(ROWS,TABLE[bar(ROWS)][foo(bar(-17) / --3,0.98,( -protect() - --0.17 ))]) ) * COLS),mislead(ROWS,-( ---1 * -Stark + Arya )),Ygritte),( Sansa ))),( -betray(( Hodor ),( bar(-1 + ( Sansa ) / dog / -protect(ROWS,-88 / -0.65,310.0619)) ),-foo()) ))]][-11] )){
	if(-rule(destroy(-( -COLS )),Jon)){
	mislead(TABLE[1][TABLE[destroy()][rule(-60,-( -TABLE[foo(ROWS,-1)][-( -80 )] ),( -Jon + dog ))]])
} else {
	if(0.84){
	if(protect(( -dog ),Arya * TABLE[( -( COLS ) + TABLE[--TABLE[( ( -210.631 ) )][-81]][( protect(Ygritte) - COLS )] )][--ROWS - ( COLS - Ygritte + protect() )])){
	490.092
};
	Ygritte *= -----1 - -1 - ( rule(( Ygritte ),-bar(-Jon,( bar(( -y ),( ROWS )) + --x )) + -1 + -protect(-1,rule(COLS,-0.03,-( mislead(( TABLE[--0.11 + Hodor][COLS] / 0.89 )) ))) * bar(Ygritte)) ) * ( rule() )
}
}
} else {
	72;
	Stark /= foo()
};
	-Arya * 1
}
def protect(x,Hodor,Ygritte){
	dog *= -160.8
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Ygritte,Jon){
	x /= y;
	if(foo()){
	( 29 );
	foo(x) + ( ( -destroy() ) )
} else {
	Jon /= dog;
	Arya -= -( ROWS )
};
	if(1){
	Hodor -= --1
}
}
var y = protect(ROWS,ROWS,bar(TABLE[( Jon )][( y )]))
def TABLE[33][k] {
	if(mislead(TABLE[COLS][y]) - -ROWS){
	mislead(Stark,Arya);
	if(protect(foo(foo(COLS),( -dog ) / foo(Stark + protect(Arya,COLS),0.71)),COLS)){
	Sansa
} else {
	Arya;
	Ygritte += destroy(1,ROWS,-53)
};
	if(destroy(Hodor + -76,( Hodor ))){
	-ROWS;
	( Stark )
} else {
	0.32;
	Jon -= -100
}
} else {

};
	Stark *= protect(--0.66 - foo(mislead(( 0.68 ),COLS,bar(COLS) + ( foo(foo(destroy(( ( -15 ) ))) + -1) )),---1))
}
var Sansa = -1
def destroy(Stark,dog){
	if(-0.22 * bar(( y ),y)){
	TABLE[17 / -1][-foo(betray())];
	-TABLE[mislead(Hodor,28,ROWS)][COLS]
};
	x -= Sansa - -( Jon ) + ( rule(destroy()) ) / -protect() * ( foo(TABLE[( rule() )][rule(1 - x,( -0.31 ),--1)]) );
	Ygritte /= dog
}
def TABLE[ROWS][j] {
	Arya -= ROWS;
	Hodor
}
assert protect(( 1 * COLS ),mislead()) : "Winter is coming"
assert bar(( -62 )) : "Nothing burns like the cold."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(x,Jon,dog){
	if(mislead(-Sansa)){
	if(betray(Ygritte)){
	( bar(--destroy(COLS)) );
	if(570.95){
	y += COLS;
	( mislead(betray(),-0.23) ) * ( destroy(71) )
} else {
	-TABLE[dog][Ygritte] * Arya
};
	Arya -= ROWS
} else {
	if(( ( -mislead(--Stark / foo(-x - bar(( betray(-27 + Hodor,( rule(COLS) + 1 ) + Jon) ) + foo(-( -dog ),Hodor),betray(( betray(( bar(TABLE[bar(y,mislead())][80 / -foo(y,TABLE[--0.57][betray(-x,mislead(foo(mislead(-0.97),COLS) / bar(bar(Stark,betray(-( ( Ygritte ) ),( mislead(--TABLE[y][1],Jon - ( 44 )) )),-0.89),-1))) + 0.06])]) - foo(COLS,( -730.2869 ) / rule(-0.97)) / --betray(Stark / TABLE[-1][-dog]) - protect(Arya,COLS,-bar(Jon) * ( y )) ),-31) )))),0.25,ROWS) ) )){
	if(( ( protect() / mislead(-protect(( COLS ) + ----0.98 - COLS * ( --0.38 ) * --1 + -betray(( --1 ),-TABLE[ROWS + rule(dog,-dog,0.45) + betray(dog - -rule(mislead(-670.37,bar(betray(Jon),0.4)),dog),x) / mislead(Ygritte,( foo(-( ( ( ( 14 ) ) ) )) / destroy() ) - ( ( 1 ) ))][Ygritte]),COLS + destroy())) ) )){
	if(-foo(dog,betray(foo() + bar(23),21,Jon) - TABLE[Arya][---mislead(-61 / y) / -0.47 / protect(( -( x ) ),-1 - Ygritte) - -( TABLE[ROWS - y - TABLE[-31][ROWS] * 1 * COLS][--0.99] ) - -520.6])){
	if(y / ( ( COLS ) )){
	Arya /= betray(x,rule(COLS));
	if(---19){
	-Arya
} else {
	1 - Ygritte;
	if(-1){
	Jon /= Stark + ROWS
}
}
} else {
	95;
	if(-1){
	( ROWS );
	680.6714
}
};
	Ygritte /= ROWS
} else {
	if(betray(y) / -mislead()){
	Sansa /= ( COLS );
	if(destroy(bar(Arya,ROWS),foo(( 1 ),foo(),-Jon))){
	Ygritte *= y
} else {
	if(-3){

} else {
	Jon -= -0.82;
	Stark /= COLS;
	x -= -( Arya )
};
	if(( rule() )){
	if(Sansa){
	y /= protect(ROWS,foo());
	Arya -= mislead(( foo(rule(-mislead() - Hodor,x),-0.92 - ROWS / ROWS - 85 - 67,x) ))
};
	if(protect(-0.23,COLS + -Stark * ( 0.44 ))){
	Sansa;
	if(destroy(Sansa)){
	y / COLS
}
} else {
	dog *= bar(Sansa,-( -ROWS ))
}
}
};
	Sansa += destroy(( x ) / TABLE[-1][protect(( Stark ))],Sansa * ---COLS)
};
	if(( 0.23 )){

} else {
	if(TABLE[mislead(-92,TABLE[Stark][-( Hodor )])][( foo(ROWS) )]){
	if(bar(TABLE[-dog][ROWS],x,81)){

};
	if(TABLE[protect(0.39,COLS,21)][Jon]){
	if(-67){
	Hodor -= protect();
	Hodor *= --0.82
} else {
	if(-0.78 * 0.22){
	if(COLS){
	Sansa += COLS / y
} else {
	if(ROWS){
	rule(COLS,mislead(),rule(-98,( Ygritte )));
	if(0.49){
	if(( COLS )){
	( foo(COLS) )
} else {
	if(-betray()){
	x *= ( ROWS );
	0
} else {
	protect(( y * mislead(betray(-39,bar(-TABLE[-bar(-( ROWS + ( ROWS ) ),destroy(x + COLS),bar(-1 * -COLS / -protect(y,x),Stark - -1 * ( Arya )))][y] / 1 + Sansa + Arya - y + protect(Stark)))) ));
	if(-910.003){
	if(-destroy(-110.82,COLS)){
	-ROWS;
	if(TABLE[-Arya][TABLE[( -92 )][( bar(Hodor,( 66 )) )]] + destroy(destroy(-630.117,( COLS )))){
	foo(betray(mislead(x,( -x )),-98,Sansa),-bar(-96,-19) - rule(rule(76,( ( ( x ) - rule(( COLS ),Hodor) ) )) * dog,COLS * ( COLS ) - dog));
	Sansa *= 0.45;
	Jon *= Ygritte
}
} else {
	--( ( --260.951 - -( ( ROWS ) ) ) ) - Stark * 66;
	Stark
};
	Ygritte += 28;
	-betray(COLS,bar(y,TABLE[--0.25][TABLE[-COLS][-( -0.7 )] + -dog],-0.84)) / Stark
}
};
	( x )
}
};
	foo(TABLE[y][( ROWS )],Ygritte,Arya) - ( Sansa / Arya ) - betray(dog)
} else {

}
}
} else {

}
};
	-0.45;
	( Ygritte )
} else {
	TABLE[mislead(COLS)][TABLE[mislead(0.36)][dog]];
	ROWS;
	x += Hodor
}
} else {
	1;
	if(TABLE[x - rule(protect(COLS,( betray(-TABLE[0.1 / ROWS][ROWS] * foo(-rule() * bar(destroy(14),protect(-870.85 - y,-0.05,mislead(-0.91 / ROWS)),dog - ( COLS )),( TABLE[y][59] )),-0.12,-COLS) )),-( Ygritte + -foo(-betray(foo(COLS + COLS / -foo(Ygritte,--0.57,( bar(foo(0.78 + ( Hodor ),( -0.13 )),COLS) * y )) / --14)) - 220.5) ) - -730.7 + ( ( TABLE[-( ( -0.1 ) )][-1] ) ))][( TABLE[protect(-550.49,y)][( ROWS )] )]){
	Arya /= COLS * x;
	if(Stark + bar(foo(-1,destroy()))){
	( -TABLE[--14][( -1 )] );
	( ( COLS ) - -18 ) + mislead(( ( -TABLE[COLS][-foo(bar(-0.37),Stark - Jon,-61)] ) ),0.2,( 27 ));
	if(-70){

} else {
	Sansa / protect(ROWS,TABLE[( TABLE[( TABLE[mislead(( -----( rule(foo(93),y) ) ))][mislead(( bar(-1 - betray(450.28,-Ygritte),( Hodor ) / Hodor,COLS) ),protect(Ygritte,foo(ROWS,Hodor),-1 + ( Jon )),-0.32) + -61 + -rule(ROWS,( Ygritte ))] ) + COLS + Ygritte][( Sansa )] + ROWS )][rule()]) / ROWS;
	if(0.29){
	dog += 16 / ROWS;
	if(-bar(x,0.03) * betray(0.12,y)){
	if(Arya){
	Sansa -= bar(-COLS) - Hodor;
	( ( ( Arya ) ) )
}
};
	if(( -0.62 )){
	Jon *= y;
	if(protect(Jon,( 350.514 ))){
	Hodor += ROWS
};
	if(protect(protect(bar(betray(),dog)),Sansa,-1)){
	if(TABLE[820.154][-ROWS]){
	x *= ( Stark );
	y += dog;
	if(-betray(ROWS)){
	if(0.95){
	Sansa /= x;
	Jon *= TABLE[24][-foo(841,0.55)] * -81
} else {
	if(( ( betray(--0.36,-0.2) ) )){

};
	if(ROWS){
	COLS
} else {

};
	if(destroy(x * COLS) - -0.74){
	-1;
	if(mislead()){
	-0.84
} else {
	( ( betray(ROWS) ) );
	Stark *= 45;
	Sansa += COLS
}
} else {
	if(-860.6){
	if(foo()){
	dog /= -1
} else {
	Jon += betray(ROWS,-COLS,97);
	if(bar(COLS,Arya,360.835)){

}
};
	if(-( -1 - betray() * 0.06 / x * --destroy(1,TABLE[foo(foo(dog,-( ROWS )) + Hodor * Ygritte,Ygritte,protect(-0,foo(-0.74 * -COLS,( --Ygritte ),TABLE[--dog][-0.02] * -0.13),COLS))][0.55 / --TABLE[y][-0.78] + ( Jon ) + -( -protect(Arya,Ygritte) ) - TABLE[Stark][foo(betray(TABLE[( ( ROWS ) )][( mislead(( rule() ),foo(( -760.9 ) * Arya)) / -( 77 ) )]),-0.04)] - -( Sansa ) * ( ( -COLS ) ) / TABLE[( Arya )][--COLS - Ygritte] * ( ( betray(rule(-67,x)) ) ) + COLS] - ( TABLE[betray(COLS)][ROWS] ) / ( 880.99 ) * -COLS) + betray() )){
	if(x){
	if(-foo(TABLE[--x][Sansa])){
	destroy(y,COLS);
	Arya /= 17
};
	( ROWS )
};
	Stark += --27
} else {
	if(foo(-COLS / Hodor,mislead())){
	---( -COLS ) + -( -81 );
	if(60){
	if(( -4 )){
	Jon
};
	( -x / -1 )
} else {
	78 * ( betray(TABLE[-0.5][96],ROWS,COLS) * mislead(-40.69,ROWS) );
	Jon
}
}
}
} else {
	dog;
	destroy()
}
}
}
}
} else {
	Arya -= TABLE[0.25][COLS]
};
	COLS
}
} else {
	Stark += ROWS
}
} else {
	if(destroy() - COLS){
	if(Ygritte){

};
	if(COLS){
	COLS
}
};
	if(Ygritte){
	y /= -Ygritte
} else {

}
};
	if(ROWS){
	if(Stark){
	if(( ROWS / betray(( ( Stark ) ),( y ),COLS) / destroy(rule(-1),ROWS) )){
	if(-betray(( ( COLS ) ) + ROWS)){
	if(bar(0.56,Ygritte) * -150.511 * ( bar(( -220.896 ),Arya) )){
	( -Jon )
} else {
	if(COLS){
	-1
}
};
	if(( destroy(TABLE[TABLE[( Jon )][-50]][-Arya]) )){

}
};
	dog *= ROWS;
	if(Stark){
	-Arya;
	x += Stark
}
};
	Stark -= 370.6
} else {

};
	ROWS;
	Hodor
}
}
} else {
	ROWS;
	Stark /= -98
};
	-0.53
} else {
	if(TABLE[620.666][-0.57]){
	if(27){
	COLS;
	dog -= destroy(--( -destroy(betray(COLS,ROWS,-COLS * -0.84 - y - -COLS - destroy(foo() - 86 - -1,Arya,---x) * -1 * COLS) * COLS) + -COLS * y ));
	if(1){
	if(ROWS){
	--TABLE[betray(( -37 ),TABLE[Ygritte][COLS * ( bar(bar(-34,destroy(foo(-dog) / x))) ) + -destroy(TABLE[-0.09][1] - -75 + destroy(Sansa) / Hodor * -79 + Jon) + ( -x ) / ( ( ( ( x ) ) / bar() ) )])][-62] - ( --TABLE[( --12 ) * TABLE[--Sansa][TABLE[( bar() )][mislead(41,-ROWS + ROWS)]]][( 330.685 )] )
} else {
	Ygritte -= protect() * -12
};
	if(protect(720.65 * -Hodor - Hodor - COLS) / Sansa){

} else {
	if(-550.371){

} else {
	y += ( TABLE[( ROWS )][Jon] )
};
	x /= -0.09
}
}
}
};
	if(( -( betray(-COLS + ( 1 ),COLS * ROWS) ) )){
	Jon -= -COLS / mislead(( ( TABLE[-0.69][dog] ) )) * -56 - ROWS / ( -0.34 )
}
}
};
	-45
}
}
} else {
	if(( ( x ) )){

} else {
	if(( foo(( ROWS - ROWS + mislead(( Hodor ),-protect(),( ( ROWS ) / ROWS )) / Jon ),( -49 )) ) * -0.32){
	-0.87
};
	if(-y * -770.75 * ROWS){
	if(( --( ROWS ) )){
	if(-TABLE[( -99 )][Ygritte]){
	y += Hodor
};
	if(460.396){
	if(-0.07){
	if(-foo(( destroy() ) / bar(-( 360.43 ),rule(dog),-180.935),-880.065 + --( betray(490.186,ROWS) ) * protect() * -TABLE[( --1 + ( 1 + -37 ) )][( TABLE[-( ( betray() ) ) + ROWS / COLS + Hodor][( foo(betray(),-ROWS) )] * ( rule(TABLE[x][-0.76 * ( foo(( --Sansa )) )]) ) - ( --0.86 ) )] + betray(-0.22,190.1)) + rule(-1,bar(protect(-COLS - -protect(-( COLS / rule(ROWS,destroy(( COLS ))) ))) * ( Stark ),--84),x + COLS) * destroy(mislead(ROWS,( Sansa )))){

}
} else {
	if(destroy(Hodor - destroy(foo(ROWS,rule()),betray(Arya,95,--TABLE[-1][protect(( rule() ),-( Arya ) - --0.45)] - protect(TABLE[-mislead() - ( Arya ) * Jon][-1] + bar(-mislead(),-Hodor),COLS)),betray(( 590.16 ),TABLE[( -0.92 / y )][-Stark]) * ( destroy(mislead(),-760.576) ) / destroy(-( -Sansa - ( 0.26 ) ))))){
	if(dog + Ygritte * -Stark){
	-( --6 );
	if(-Stark){

}
};
	if(TABLE[( mislead() )][ROWS]){
	x /= ROWS
} else {
	-Stark * destroy() + destroy(( Ygritte ) / rule(1 / TABLE[95][( Sansa )]));
	Ygritte
}
};
	if(-foo(--ROWS,bar(),( Arya ))){

} else {

};
	if(x){
	Ygritte /= --y;
	0.11
}
};
	y /= COLS;
	Sansa -= Jon
} else {
	-TABLE[y][betray()];
	dog /= COLS;
	Hodor
};
	ROWS
} else {
	Arya -= Sansa
};
	Stark += mislead(Sansa,--TABLE[-ROWS][foo()] - protect(foo(TABLE[( Ygritte )][-540.7],-0.3),-0.06,-1))
};
	Ygritte -= foo()
}
};
	dog *= --0.99 + -1 - ( -Arya )
}
}
} else {
	dog -= -250.985;
	if(-3){
	-Ygritte;
	if(rule(( protect(0.22,-( Arya )) ),Ygritte,foo(( ( dog ) ),0.63)) - ( 86 )){
	Hodor *= foo();
	y /= y;
	if(dog / -71){
	Ygritte *= x;
	if(Jon - -2 * Ygritte){
	COLS;
	if(Jon){
	ROWS
}
}
}
}
} else {

}
}
}
var y = y + -( rule(( ( 60 ) )) )
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = ( Stark ) * ( betray(-0.47,-( 33 )) ) * COLS
var Stark = -( Stark )
var Sansa = protect()
def TABLE[TABLE[-90][dog]][j] {
	if(Sansa){
	-20;
	--( rule(Stark,betray(( ( ROWS ) )) * x) ) / Arya;
	dog += -0.77
};
	if(Stark + rule(-1,y)){
	if(-ROWS){

} else {
	-COLS
}
} else {
	if(ROWS){
	if(ROWS){

};
	if(destroy(84) + 570.24 * protect(Sansa * ( ( ROWS ) ))){
	COLS
} else {
	Stark
}
} else {
	Sansa += protect(Stark) + -22;
	if(-Sansa + -1){
	Sansa *= ( ( ( 63 + 1 ) ) )
}
};
	if(bar(-74)){

} else {

};
	bar(( -82 ),4)
}
}
def bar(Ygritte){

}
assert ( Sansa ) : "Nothing burns like the cold."
def rule(y,Ygritte){
	Jon /= Arya
}
var Sansa = TABLE[Stark][( Jon )]
var Ygritte = TABLE[( 27 )][COLS]
def bar(x,Arya){
	betray(-Jon,-COLS);
	if(-Ygritte * 0.81){
	-0.64;
	if(( ( -Stark ) ) * -ROWS - TABLE[destroy(TABLE[930.876][Stark])][Hodor] * dog + ROWS){
	mislead(rule(x,-1,52),ROWS) * ROWS
} else {
	if(-( COLS )){
	( ( ( bar(( -130.385 ),ROWS,Sansa) / ( Sansa ) - mislead(ROWS,( Jon - Sansa )) / rule(( -x / betray(Ygritte,TABLE[Sansa][-17],ROWS / ( TABLE[( protect(destroy(protect(TABLE[rule()][-0.58],x,rule(( rule(foo(( TABLE[--( -protect(-ROWS - -82) ) * ROWS][( ( -protect(protect(bar(Jon - -protect(-0.56,( ( ( TABLE[1][-( -TABLE[x][COLS] )] ) ) )))) / ( -0.74 ),Ygritte) ) )] ))) - foo(rule(---( COLS ) * x * -1 / -dog + -260.842 / -76 * ( TABLE[( -( destroy() ) / COLS )][bar(-1,-y) - 0.81] ) * -bar(0.07,( destroy(Stark,( ( ROWS ) )) )) - ( -ROWS )),35 * ( TABLE[Stark / betray(rule(destroy(( TABLE[1][-dog] ),COLS),--( ( TABLE[-840.3302][-dog * ( -0.73 ) - -COLS] ) ) * ROWS),--19) + ROWS][COLS] ) - -ROWS) * dog ),( Arya ))))) )][-destroy(-Arya / Stark,foo(rule(-Hodor,-52),Hodor) + ( --1 ) + ( 400.87 ))] ) + foo(TABLE[-93][Jon])) ),TABLE[COLS][x]) + -1 ) ) )
} else {
	59 - protect()
};
	if(protect(destroy(( -0.26 )),-43)){
	--( TABLE[-0.37][destroy(ROWS)] ) - 0.63 * ( -TABLE[1][destroy()] * ( rule() ) ) / -TABLE[--62][-0.82]
};
	-y * y
}
};
	if(--protect(--320.844)){
	0.97
}
}
def TABLE[( Arya - ROWS - 0 - -1 - -1 )][j] {
	if(foo(( bar(ROWS - ( Sansa )) ) + -47) / ( TABLE[-( -( ROWS ) ) - ROWS][betray(-Stark / -0.06,x,ROWS)] + COLS ) + Ygritte * Arya){
	( -bar(( -protect(COLS) )) );
	Ygritte
} else {

};
	Ygritte += -TABLE[foo(COLS)][0.93 * -protect(23)] / 320.216 / bar(destroy(-30 / destroy(-0.87 * ( 7 )) + y)) / -( betray(-dog,ROWS) )
}
var Jon = 60
def betray(Jon,Sansa,Sansa){
	if(-betray(TABLE[COLS][99] / 300.787) * TABLE[TABLE[-0.63 - ROWS][TABLE[0.68][betray(Hodor,( -y ) + 900.268)]] - betray()][-1] * Ygritte){
	--( 28 ) + 100.61
};
	if(Sansa){
	if(( -990.896 )){
	Jon
};
	x += protect(( -1 ),mislead(( dog ),ROWS) + -( 24 ),x)
}
}
def betray(y,Ygritte){
	-Jon * 0.53
}
def betray(Jon,x,Arya){
	( --Ygritte * destroy(-77) );
	-( x )
}
def TABLE[( ( -y ) )][j] {
	Arya;
	if(( Sansa )){
	if(betray(destroy(TABLE[85][--( ( protect() - protect(COLS,COLS) ) )],COLS)) / -40.132){
	Arya -= x;
	if(( rule(( ( Ygritte ) )) )){

} else {
	if(-protect(( -0.51 ),0.29) + COLS + -15){
	if(Hodor){
	COLS;
	if(foo(Jon)){
	--TABLE[bar(Jon,x * y)][destroy()] - --0.49 - 0.16;
	ROWS
};
	Sansa -= -540.32
} else {
	Stark /= --480.02
}
};
	if(ROWS){
	( ROWS ) * betray(0.57);
	740.262 + -bar(( Sansa ),destroy(y),betray(Sansa)) / Hodor
};
	0.13
}
};
	Sansa -= mislead(ROWS,COLS)
} else {
	Ygritte *= mislead(rule(( -( 88 ) * ( ROWS ) )),-bar()) / --0.05;
	y *= -bar()
};
	if(Arya){
	if(protect(ROWS / --COLS)){

} else {
	Ygritte *= Hodor;
	COLS;
	Jon -= ( TABLE[COLS][( y )] )
};
	--( Ygritte );
	Sansa /= rule()
}
}
var Ygritte = -Sansa + -180.6
def TABLE[TABLE[COLS / TABLE[foo(COLS)][betray(31)]][-440.0632]][j] {
	if(Ygritte){
	dog -= TABLE[( -COLS )][betray(---0.17)];
	dog -= ( ( Hodor ) ) / -56
} else {
	( ( ( Arya - -bar(bar(16,( -24 ),protect(x)),( Jon - ( ( destroy(( ( protect(bar(-990.23),( protect(( destroy(-0.48,-79,Stark) ),( -( Arya ) )) )) ) )) ) ) - ( ( --y ) ) ) / ( -0.28 )) ) ) );
	if(0.44){
	Sansa += 0.54;
	Sansa += betray(protect(-410.4,COLS),( ( foo(Sansa,Sansa * ROWS) ) / COLS ))
}
};
	if(--y){
	TABLE[x][-betray(mislead(( -0.12 ),( 20 )) * -Jon,TABLE[Ygritte][Jon],-0.07)] - -COLS / rule(-770.79,bar(mislead(( destroy(destroy(( x ),( 1 ),( 170.218 )) - ROWS,betray()) ) / foo(mislead(foo() + -88,COLS * -betray(( COLS )),-960.103 / Sansa),---TABLE[foo()][protect(--COLS,x)]))),bar(destroy(foo(Sansa,-0.8,Sansa),Jon),TABLE[( Stark )][650.93] + ( COLS )));
	if(--( -ROWS )){
	Stark += Hodor;
	x -= ( ( betray(COLS * ROWS,( ( -33 / 0.32 ) )) ) )
} else {
	Sansa += ( -( mislead(Jon,40 - ROWS * -( 540.9838 / ( COLS + -( -82 + ( -0.75 ) ) ) ) + ( 280.2 ),-0.09) ) / COLS ) + COLS;
	Hodor *= TABLE[( foo(( ROWS )) )][protect(( -0.91 )) - -betray(y) + destroy(x,protect(TABLE[-0.86][( 73 )] + --( -( Ygritte ) ),-bar() * COLS),TABLE[-84][ROWS * x])]
}
} else {
	( -16 );
	if(---ROWS){
	mislead();
	if(( -160.9 / protect(--740.3013) )){
	if(bar(( ROWS ))){
	dog /= ( Sansa - -0.57 );
	x /= Hodor
};
	Jon *= ROWS;
	if(destroy(bar(protect(rule(),ROWS + -COLS,COLS),-( -( dog ) )),COLS - COLS - TABLE[TABLE[dog][( ( -( TABLE[COLS][bar()] ) ) / -rule() - 51 / destroy(( 41 * Stark )) )]][-0.23],Sansa)){
	Ygritte += foo(ROWS)
} else {
	Jon += protect(ROWS);
	if(-1){
	470.8
} else {
	11 + -Hodor * 290.78 - betray(( destroy(y) ))
};
	if(( protect(ROWS,( Arya / -rule(-0.42,( ( foo() ) ),destroy(COLS,ROWS)) - mislead(( dog - -foo(( ( ( 0.64 ) * Stark ) / ( 0.83 ) ),41) )) ) - ( TABLE[( rule(ROWS) )][( COLS )] ),foo(-mislead(Arya,ROWS - foo(mislead(-0.36,Arya,---foo(( mislead(mislead(),Sansa,betray(-98)) ),y,mislead(-ROWS))) - ( ( -80 ) ))) - TABLE[( mislead(-0.71,TABLE[-COLS][Ygritte]) )][-0.5] + foo(),( ROWS ))) ) * -Ygritte){
	TABLE[ROWS][mislead(betray(--ROWS * ( betray(Ygritte,-dog) ),0.62,TABLE[betray(-bar(Arya),-18 + 53)][-Jon]),( dog ))];
	y *= 1
}
}
}
}
}
}
def betray(Sansa,x){
	Arya += ( mislead(( ( -destroy(( ( -99 / ( -( x - -1 * ROWS ) ) ) ) - -0.58,-940.108) ) / ( COLS / ( -0.91 ) ) ),-96,destroy(rule())) );
	rule(-0.97,protect(Hodor * ROWS)) + rule(Arya - Jon + TABLE[( 75 / 38 )][--bar(( ( foo(foo(dog),TABLE[-COLS][y - TABLE[bar()][( -Ygritte )] - ROWS],Sansa) ) ),-37)],ROWS,betray())
}
var Sansa = dog
assert rule(26,( -( -0.47 ) ),( TABLE[-270.27][-560.319] ) / -44 * 40 + ( 0.71 )) : "One can not simply parse himself"
def destroy(Ygritte,x){
	protect()
}
def TABLE[( COLS )][i] {
	y *= TABLE[Jon][-ROWS];
	Stark += -mislead(TABLE[Ygritte][-Sansa],TABLE[y][--94 / ( Stark )],ROWS)
}
def TABLE[x][i] {
	x += ( -TABLE[--140.857][-0.38] )
}
def TABLE[1][j] {
	COLS;
	COLS;
	( TABLE[COLS][23] )
}
def TABLE[24][j] {

}
var Arya = foo()
def rule(x,Jon,Ygritte){

}
def TABLE[-( ROWS ) / -ROWS - Ygritte][k] {
	dog *= ( x ) + -2;
	Sansa *= bar(( TABLE[1][--( rule(-0.09,COLS) ) / TABLE[bar(--Jon,COLS)][-1] / ( --dog )] ),betray(Sansa,betray(bar())),destroy())
}
def TABLE[COLS][k] {
	TABLE[-foo(1)][-( -420.6075 )];
	TABLE[-Stark][betray()]
}
var Arya = y
assert TABLE[-0.11][Hodor] : "One can not simply parse himself"
def foo(Ygritte,Arya,y){
	if(COLS / --mislead()){
	Sansa *= 97;
	if(( 0.22 )){

}
}
}
var Jon = COLS - Jon + -18 - TABLE[foo(COLS,-12 + ( Arya / protect(50,450.93,-Stark) ),Arya) + -ROWS / dog][mislead(mislead(foo(-( --( COLS ) + -ROWS / betray(mislead(protect(1 / y - TABLE[-( --( -dog ) * ( Hodor ) )][-COLS + foo(0.5)],mislead(betray(-( ( -350.27 ) ),--21,x)) + ( ( ( ROWS ) ) ),--Arya - TABLE[-39][betray()]))) )) - destroy(-( bar(-790.8046,( Stark )) ))) + -( COLS + mislead(Stark) - ( Jon + bar() ) * -460.3 ) / destroy(betray(ROWS)) * 25,rule(TABLE[-19][foo(y,-33,COLS - dog)],( -1 + ( --COLS ) )),COLS)] - Stark
assert ( TABLE[TABLE[1][Sansa]][ROWS] / -56 ) : "Nothing burns like the cold."
var y = Sansa
var Arya = TABLE[COLS][--96 * -Stark / -Stark * destroy(-( -foo(670.64,mislead(mislead(COLS / 560.591 - Sansa,destroy(-0.29,COLS)))) ),Sansa)] * -( ( ROWS ) ) / -1
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = rule()
var Sansa = ( ROWS )
def TABLE[54][i] {

}
def TABLE[Sansa][j] {
	870.487;
	( 0.58 + COLS * -0.79 )
}
def TABLE[Arya][i] {
	dog -= -protect(Arya);
	-0.88
}
assert -( x ) : "Nothing burns like the cold."
def bar(x){
	if(-700.4046){
	dog *= 28
} else {

}
}
assert ( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = ROWS
def destroy(Arya,Arya){

}
def TABLE[Jon][k] {
	if(COLS){
	x -= ( -370.0581 );
	Hodor -= Sansa;
	if(foo() - -430.722 * -620.68){
	Jon += COLS;
	Arya += Sansa;
	if(45){
	destroy(x,( -69 ),Arya * ( rule(TABLE[Ygritte][x] / x) ))
} else {

}
}
} else {
	Stark += bar(Jon,Jon,betray());
	( Jon );
	Stark *= -betray(ROWS,rule(1,TABLE[foo()][mislead(mislead(COLS - COLS) - TABLE[rule(ROWS / Arya)][38])],( ROWS ) - -ROWS))
}
}
var Sansa = betray(betray(ROWS + ( TABLE[bar(( dog ))][ROWS] ),ROWS,mislead(COLS - --0.89 * foo(--Sansa * ( COLS ) * ROWS,-ROWS * ( TABLE[-( -bar(1) ) / ( ROWS )][ROWS] + COLS )) - Jon / ( -rule() ),x,-( --( Sansa ) - COLS + -0.74 )) - -1) * COLS + destroy(Sansa),460.6137,( -Ygritte ))
var Hodor = COLS
def TABLE[-ROWS][k] {
	0.19
}
assert ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-Arya][i] {

}
assert y - ( -31 * 0.89 ) * protect(0.21,Stark,-1) : "Winter is coming"
def TABLE[--( destroy(Ygritte) )][j] {
	if(protect(( TABLE[-mislead(Sansa,Jon)][( -Jon * --960.7924 )] ))){
	Jon *= ( ( -0.72 ) )
} else {

};
	Jon
}
var Arya = y - -TABLE[Sansa][720.107] * -71
def TABLE[( bar(bar(mislead(0.25,mislead(-protect(y),rule(0.16,betray(( betray(( --y * foo(ROWS) ),-( dog ) * -36) )) - -41))),0.9,dog)) ) * -Stark][k] {
	Stark
}
assert TABLE[( foo(( ( COLS ) )) + COLS )][-( ( -( ( ROWS ) ) ) )] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = TABLE[-Arya / mislead() - --ROWS][-60]
def protect(Arya,x){
	if(betray(-TABLE[0.21][( 16 )],7,y)){
	Ygritte -= ( y )
} else {
	Hodor
};
	protect(betray(-( protect(-90) ),-COLS),1,( TABLE[foo()][-40] / TABLE[rule()][( -0.33 ) - dog] ));
	--78
}
var Sansa = -( ( ( ( ( 1 ) / -( -910.353 * Stark * COLS ) ) ) ) )
assert ( -protect(ROWS,Stark,-16) ) : "Nothing burns like the cold."
var Hodor = TABLE[rule(34)][-520.6]
def bar(x,Jon){
	bar(--x,ROWS,Jon)
}
def betray(Sansa,Ygritte){
	( ( COLS ) );
	if(ROWS){
	if(destroy(rule(----19 + ( y ) + betray()) + ( -mislead(bar(COLS,( foo(-26) ) / mislead(mislead(COLS,Jon) + ( -( ROWS ) ) * -COLS) - -Ygritte),( 55 ) - bar(),TABLE[COLS][( TABLE[TABLE[( -TABLE[ROWS][Hodor + COLS] * x )][x]][dog] ) - -COLS + protect(60.6,900.43) / ( -( -( COLS ) ) + y )]) ))){

} else {

};
	Hodor -= destroy(mislead()) * Arya - ( --TABLE[TABLE[Stark - ROWS][ROWS - -67 / TABLE[( dog )][0.32]]][Hodor] + mislead(protect(66 - ( ( COLS ) ),-610.157)) )
} else {
	if(-1){
	Stark;
	if(-12){
	Arya /= TABLE[mislead(Stark,( COLS ) + destroy(x))][destroy() * COLS];
	if(ROWS){

} else {
	if(mislead(-ROWS,( ( Sansa ) * Jon ))){

} else {
	dog += 650.883;
	--0.05
};
	1
}
} else {
	Arya *= Sansa * -1 * ( -0.31 ) / y - TABLE[( 63 )][protect(-44 - mislead(--84,-( -0.75 )),47 / -0.69,COLS)];
	if(-betray() / TABLE[Sansa][-betray(-TABLE[dog][( -COLS * 1 * ( TABLE[Hodor][-1] ) )] / -ROWS * -ROWS * ( 0.18 ) + -1,-1 / ROWS,790.209)]){
	if(TABLE[-390.4][-1]){
	if(( ( ( ( x ) ) ) )){

} else {
	if(-( -35 ) * -foo(-( -0.57 ),( 74 ),bar(--12))){

} else {

};
	Jon += -38
}
}
} else {
	protect(TABLE[bar(---COLS)][TABLE[---COLS][y] - Sansa])
}
}
};
	Ygritte *= -COLS
}
}
def TABLE[-540.31][i] {
	y -= destroy(-( ROWS ));
	if(COLS){

}
}
assert foo(TABLE[dog][( COLS )],destroy(( -destroy(Ygritte) ) / 73,( ROWS ))) : "What do we say to the Lord of Death?"
assert -1 * ( -99 - betray(-ROWS,95,Hodor) - bar(-0.53) ) : "What do we say to the Lord of Death?"
def TABLE[( -betray(Jon / protect(bar(),( 0.01 / betray(destroy(690.05),Sansa) )),-100) )][k] {

}
def mislead(){

}
assert Hodor : "One can not simply parse himself"
def foo(Stark){
	( COLS ) - 21
}
def TABLE[--TABLE[betray(COLS,( TABLE[x * protect(Stark) + Arya][Hodor] ),( ROWS ))][x]][j] {
	y
}
def TABLE[Jon][i] {
	if(protect(-ROWS * -1,ROWS * -0.73,TABLE[TABLE[-0.75][TABLE[( COLS ) * -bar(( -0.34 + ROWS ))][-0.59] / ROWS] + TABLE[TABLE[-1][protect(Hodor) / ( x )]][-73] * bar(y)][( ( -0.87 ) )])){
	x /= Hodor;
	if(betray(protect(Stark,bar()),protect(( y ),destroy(TABLE[Hodor][COLS * ( foo(0.73) + mislead(( ( ( -( ( -bar(-TABLE[mislead(ROWS)][Jon] - ( ( 0.61 ) ),betray(( ( Ygritte ) ) + 32),Jon) ) ) ) ) ),dog) )])),( ROWS ))){
	Stark -= -1
}
} else {
	if(bar(1)){

};
	if(betray(-1,TABLE[-ROWS][0.39])){
	if(TABLE[foo(-0.48)][destroy(-TABLE[dog][x])]){
	COLS;
	Arya *= betray()
}
} else {
	if(dog){
	Jon /= TABLE[--Ygritte][ROWS];
	TABLE[-COLS - TABLE[rule(0.56 - ( -0.04 ))][ROWS] / Arya / dog + Arya * -Jon * ( ( 70 ) )][( Sansa )]
};
	Hodor -= ( 1 ) + ( Hodor )
};
	-2
}
}
assert ( TABLE[ROWS][destroy()] ) : "Winter is coming"
var Ygritte = Ygritte
var Stark = ----0.65
var Arya = ( -protect(foo(-( 88 ),ROWS),Sansa) / 1 )
var Jon = COLS + ( ( -betray() ) ) + foo(-y,foo())
def TABLE[( ( -Arya + rule(TABLE[Ygritte][-Ygritte + Jon],-0.11 / mislead(( -0.1 )) + -Hodor) - TABLE[Ygritte][Ygritte] ) )][i] {
	if(foo(foo(),-y) + 0.92 - -0.14){

} else {

};
	Arya
}
assert betray(--mislead(--destroy(-x),TABLE[( ( y ) )][bar(( ( -Jon ) ) + destroy() / -80.3,1)]),-700.37) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "One can not simply parse himself"
def betray(y){
	( foo(-85) + destroy(-( ROWS ),( bar() ) * -x) * -81 );
	Hodor /= bar(( protect(mislead(( ( -COLS ) )) / TABLE[-0.85][destroy()],y) ) / -24,-28 * 0.25)
}
def TABLE[( rule(ROWS) - ROWS / ( bar(COLS,COLS + Sansa * ROWS) - ( Stark ) - ROWS ) )][j] {
	if(1){
	Ygritte *= --80.26
};
	x -= COLS;
	if(COLS){
	rule();
	dog -= 0.63;
	if(-Hodor * -( 0.87 ) + TABLE[49][0.93]){

} else {
	if(( -0.36 )){

} else {
	Sansa += -foo(betray(Ygritte - -550.5783 * -betray(-85,mislead(TABLE[( Arya ) + ( TABLE[foo(( rule(( -52 - rule(TABLE[Stark][0.83],Arya,Stark) * -( -1 ) * COLS / y - -TABLE[TABLE[foo(TABLE[x][COLS])][( -( -970.7 + -600.354 - destroy(ROWS,-Sansa - Hodor,-bar(--( TABLE[COLS][COLS] ),( --Jon ) * -( --Jon / ROWS ) * ROWS - COLS - ( ( -Arya ) * --ROWS * -rule(bar(ROWS - -ROWS * 0.81),--70) / -19 * betray() * x / ROWS )) + --0.79) ) * ( 0.8 + -rule(Stark,mislead(-( -0.3 ) + -14,-( TABLE[( ( -8 ) )][Hodor] ) * ROWS + -TABLE[-protect(COLS)][Stark] - -200.9025 + -protect(foo(),COLS / betray(( ROWS ) - -590.7,( betray(Sansa,Jon) )))),( 270.1 )) ) / dog - Sansa + mislead(ROWS) )]][TABLE[--Sansa][-70]] - ( Jon ) ) - COLS + Ygritte / x,ROWS,11) + Jon ),( -TABLE[-( 100.894 )][( TABLE[-0.57][bar()] )] ) / -COLS)][( rule(ROWS,( TABLE[destroy(protect(bar(86,Ygritte),( -x )) + ( -COLS ))][COLS] ),-( -82 )) )] )][78]) / ( -0.02 ) * bar(TABLE[ROWS][1],mislead(( destroy() ) / 44)))),COLS);
	if(5){
	Hodor += destroy(bar(ROWS - -0.92 - x / -0.77 / -81,Jon) * -0.96)
} else {
	y /= -TABLE[( ( 36 ) )][rule(( -1 ),Sansa,rule(-0.79))];
	y *= -0.31;
	if(betray(betray(foo(x,foo(-ROWS,( -Sansa ))),TABLE[-TABLE[rule(-TABLE[-( Arya )][( -0.55 )] / -93,( ROWS * bar(---50.98 + destroy(0.81),dog) ))][-TABLE[-( y )][880.198]]][-29]),( destroy(foo(( mislead(( -x ),( bar(( ( Jon + Sansa ) ),ROWS) ),-66) * destroy(( destroy(-73) / Arya )) ) - Jon),0.95,-COLS) ),60)){
	bar(-440.973,rule(( 64 ),ROWS,-COLS));
	Sansa += ( -82 )
}
};
	Arya / --( Hodor )
}
}
}
}
def mislead(){
	COLS / ( -26 );
	if(-98){

} else {
	Stark += ( ( -COLS ) )
}
}
assert 870.3662 : "Nothing burns like the cold."
assert COLS : "Nothing burns like the cold."
assert foo() : "One can not simply parse himself"
def mislead(Arya,Jon,y){
	if(( COLS )){

} else {
	Stark += ROWS * Ygritte
};
	x += -x
}
def TABLE[TABLE[( dog )][-62]][i] {

}
assert ( COLS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -1 : "Nothing burns like the cold."
assert -740.917 : "Fear cuts deeper than swords."
def betray(Hodor){
	Sansa
}
var y = dog
assert dog : "Fear cuts deeper than swords."
def TABLE[mislead(ROWS,mislead(TABLE[rule(1) / Sansa][y / TABLE[bar(--Stark)][TABLE[dog][bar(( ( -foo(Arya,protect(betray(protect(),Jon))) ) ),710.48,Ygritte - COLS)]] + ( -82 )],ROWS,Arya) * x)][j] {
	Jon -= 540.3;
	dog *= TABLE[-ROWS][-dog / y]
}
def TABLE[TABLE[Stark][TABLE[mislead(betray(-360.2721),-rule(),Ygritte)][-0.63] + ( 39 )]][k] {
	dog /= ( ( ROWS ) )
}
def TABLE[mislead(-Stark,-( ROWS ),--34 + protect())][i] {

}
var Sansa = Stark
def destroy(Stark){
	if(foo()){
	Sansa *= ( COLS ) * protect(Hodor,( COLS ),protect(-Sansa))
} else {
	Jon *= destroy(rule(-200.41,0.77));
	Stark /= protect(-Arya,betray(840.279,dog,COLS),Sansa - ROWS) * 73
}
}
assert --betray() + ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def bar(Hodor,Hodor){
	( Arya );
	Arya -= y;
	Ygritte -= 1
}
var Stark = -----1 * x - -180.5
var Jon = --8
def TABLE[( ( -54 ) )][j] {
	Jon *= TABLE[-38][-0.23 + Stark];
	dog *= -rule() + ROWS
}
assert ( ROWS + ( destroy() + ( ( ROWS ) ) ) ) : "What do we say to the Lord of Death?"
def TABLE[-bar(-protect() / 79 - y)][k] {
	if(COLS){

};
	( ( ( Sansa ) ) )
}
var Arya = COLS
var y = protect(-60)
def mislead(Jon,dog,Stark){
	x *= TABLE[1][foo(y,-( dog ) + ( ( -190.62 ) ),bar(( 0.69 ) * betray())) / --TABLE[mislead(COLS)][protect(-0.56,ROWS)] / Ygritte];
	if(( ( -0.74 ) ) / ROWS){
	destroy(mislead(--( y )));
	if(--mislead(-COLS)){
	if(( protect(rule(-ROWS / -16),0.17) * destroy(20.186,Hodor) )){
	Sansa *= 870.7271
} else {
	( ( ( rule(TABLE[mislead(1)][Hodor],-0.53) ) ) );
	protect(( y ))
};
	Jon *= Sansa;
	( ( ROWS + 1 / 0.06 ) ) - ( ( betray() ) )
}
}
}
var Sansa = ( 420.2355 )
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(Ygritte,Stark){
	dog -= ( ROWS );
	dog *= 860.3773
}
def destroy(Jon){

}
var Stark = ROWS
assert 0.75 - betray(740.4,( ( y ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -( ( -Arya - mislead(y,-32 - -( destroy(COLS - ( ( Sansa ) ),0.3) )) ) ) / ( -290.62 ) * TABLE[dog - -ROWS][COLS]
def TABLE[mislead(-0.1)][j] {
	( Hodor )
}
def TABLE[COLS][j] {
	Sansa
}
var Sansa = destroy(y,ROWS)
var Arya = ROWS - bar(Jon,Arya)
assert ( ( protect(y,-COLS) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Jon,Sansa){
	Stark
}
assert -0.24 * 720.17 : "Fear cuts deeper than swords."
def foo(Stark,Ygritte){
	0.51 - COLS;
	Stark /= --Sansa;
	--Arya + ( ( rule(COLS,-0.64,( betray() )) ) )
}
assert TABLE[Sansa][rule(( y / --( COLS ) )) / Arya - protect(ROWS,-1) * rule(foo(bar(-Hodor + foo(---protect(ROWS))),( foo(Sansa,-1,-0.43) - ( ( ( -400.02 ) ) ) ),-Arya)) * mislead(TABLE[Arya][( Arya )],57)] + mislead() : "One can not simply parse himself"
assert Sansa : "One can not simply parse himself"
def betray(dog,Hodor,Ygritte){

}
assert ( -710.25 ) : "Fear cuts deeper than swords."
var dog = ROWS * bar(( y - COLS ),COLS) * Hodor
def TABLE[-ROWS][k] {
	if(COLS){
	if(--150.177){
	if(--0.17 - -( -0.49 )){

};
	-410.25
};
	Stark;
	ROWS
} else {
	Sansa;
	Sansa -= Jon
};
	if(-95){
	if(( -destroy(COLS,dog * ( ( -rule(Jon) ) ) - -destroy(Hodor,-4,( ( -TABLE[rule(1)][destroy(( -Arya ),Hodor)] ) )) * Sansa) )){
	if(-mislead(-0.64)){
	if(-y){
	if(-destroy(85,destroy(Stark))){
	( -bar(TABLE[rule(-0.22 - ( -30 ) * COLS * foo(x,Jon,protect(TABLE[-1][rule(-( 80 - -Ygritte ))])) * TABLE[protect(Sansa)][-( ( Jon ) ) / ( -30 - -COLS )] - 1,TABLE[( Stark )][( -mislead(TABLE[x][( --( 0.06 ) )],1) - 0.11 )],Arya)][( mislead(72) )]) )
}
};
	if(---( 0.22 ) / ( destroy(-0.23,-( 730.1 )) )){
	if(1){
	Sansa += rule(( dog ),--foo(COLS,-0.37 + betray(ROWS),( Arya * ---1 * Hodor )) - Jon,Hodor);
	27 * Stark;
	y += Stark
}
} else {
	Stark *= ( ( -bar(mislead(88,Jon),y) ) / -1 )
}
};
	if(( betray() + protect(COLS,-0.91) )){
	( 1 );
	x
}
};
	-0.26
}
}
def TABLE[betray(( -COLS ))][k] {
	-780.92;
	destroy()
}
assert TABLE[( Arya )][COLS] : "Fear cuts deeper than swords."
def TABLE[protect(( Jon ))][i] {
	x -= Hodor
}
def protect(y,Arya){
	Ygritte -= -0.1;
	y;
	( mislead(rule(),Sansa / ( COLS )) )
}
def mislead(Hodor,Sansa){
	y /= destroy(-( -TABLE[54][-20] ) / 73 / TABLE[bar(Sansa,rule(TABLE[-0.9][COLS - TABLE[-840.281][Hodor] * foo(( TABLE[-72][-y] ),-mislead(-rule(-80) / y,( 710.68 )))],betray(Stark,Ygritte,mislead(--betray()))),dog)][COLS]);
	950.217;
	Stark += TABLE[-( x )][Hodor - -0.12 * --1 + bar(-1,mislead(( -COLS - ( Hodor ) ) / Ygritte,720.57) - ( -Sansa ),1) * -63 + -0.68 + rule() / ROWS]
}
def TABLE[( ROWS )][k] {
	if(rule(-( TABLE[( 1 )][( ( ( 0.06 ) ) )] ),COLS + protect())){
	if(y){
	if(( 6 * -( rule(Arya) ) )){
	Arya += y;
	if(-60.5){

};
	ROWS
}
} else {
	TABLE[( dog + ( foo(ROWS,( ROWS ) * mislead(Jon,destroy())) ) )][dog]
}
}
}
var Ygritte = ( -( -TABLE[x][-COLS - ROWS] ) )
var Stark = COLS
def TABLE[-42][k] {
	if(-x){
	if(-mislead(( protect(betray(),-0.85,TABLE[-bar() - foo(y,2)][-92]) ),-33,-TABLE[bar(TABLE[( ( TABLE[0.57][-Sansa] * -rule(-4,ROWS) ) )][Jon],-( Jon ) * Arya)][Ygritte] + ( Stark ))){
	( mislead() );
	if(COLS){
	Arya;
	13
}
} else {

};
	if(-0.52){
	Hodor -= ( -750.316 );
	Ygritte /= foo(( --0.28 * -( Arya ) ),( ROWS ),destroy(foo(-0.15),Ygritte,250.6))
}
};
	Sansa -= mislead(COLS - -Arya,x)
}
def foo(Hodor,Sansa){
	Stark *= COLS
}
var Ygritte = -( -ROWS ) - ( -y * COLS )
var Ygritte = dog
var Jon = -Jon
def TABLE[0.64][k] {
	( foo(protect(),TABLE[680.3 + --0.15][TABLE[foo(bar(( y )) + COLS,-64) - x][destroy(( -ROWS + ROWS * TABLE[42][0.6] ),12)]]) );
	if(( COLS )){

}
}
assert Jon : "Nothing burns like the cold."
def bar(Ygritte,x){

}
var Hodor = ( Sansa ) * dog
var y = ( mislead(x,290,-1) )
var dog = TABLE[( betray(Sansa) )][betray(-1)]
def TABLE[( 1 )][i] {
	--destroy(y)
}
assert --Ygritte + ( ( ( -45 ) ) ) : "One can not simply parse himself"
def TABLE[-0.76][j] {

}
def TABLE[-Jon][k] {

}
def betray(Ygritte,x){
	0.65 - ( 430.93 )
}
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(x,Hodor){
	Sansa -= ( COLS );
	Arya /= ( 28 + COLS + mislead(1 - TABLE[Hodor][foo(-( TABLE[bar(y,---ROWS)][-Ygritte] ))],--880.0194 / ( y ),-0.01) ) + -TABLE[( dog )][-59]
}
assert -Sansa : "What do we say to the Lord of Death?"
var Ygritte = rule(( Jon ),( betray() ),810.1)
assert 360.781 : "Fear cuts deeper than swords."
var Stark = Ygritte
def bar(Stark,Arya,Ygritte){

}
assert COLS - ( destroy(mislead(TABLE[( 0.61 )][ROWS],0.19,Sansa)) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = betray(0.22,TABLE[TABLE[1][foo()]][-TABLE[10][dog]])
def TABLE[x][k] {
	Ygritte -= mislead(( dog ));
	destroy(ROWS);
	( y ) + foo(-TABLE[rule(-bar() / -0.81 + dog)][rule(-ROWS / ( dog ))])
}
var Arya = --destroy()
def TABLE[COLS + ( -0.44 )][j] {
	if(( mislead(ROWS) )){
	dog /= -0.05;
	if(--0.12){
	if(( protect(( COLS )) )){

} else {
	Sansa *= ( -bar(ROWS,-0.12,COLS) - 74 )
}
}
}
}
def mislead(){
	betray(x + COLS);
	y += ( COLS )
}
def TABLE[-( -COLS )][j] {
	if(--48){
	Stark += Stark
};
	TABLE[-630.8 * -0.44][rule()];
	150.3
}
def rule(){

}
var dog = destroy(COLS)
var x = TABLE[24][-( 0.14 )] / betray(COLS) - -160.57
def TABLE[TABLE[betray(-30.3,-( Arya ) * 37)][-48]][j] {

}
def foo(y){
	ROWS;
	COLS + ( -0.5 ) + 8 + ( --71 );
	Stark += ( 70.06 )
}
def foo(Stark,dog,dog){

}
def TABLE[-77][i] {

}
var Ygritte = x
def TABLE[( 85 )][k] {
	Jon;
	-93
}
assert 0.54 + Stark : "One can not simply parse himself"
def bar(y){

}
var Hodor = Jon
def TABLE[mislead(ROWS)][k] {

}
var Jon = ( ( -Ygritte - Arya ) )
def destroy(){
	-0.35;
	if(-x){
	Sansa -= ( ( COLS ) );
	Arya -= ( 28 )
} else {
	TABLE[-TABLE[( -1 )][mislead(ROWS)]][-0.67]
}
}
def TABLE[( ( -0.81 / -5 ) )][j] {
	if(( -Stark )){
	if(Ygritte){
	if(Jon){
	if(Sansa / -990.33){
	if(-TABLE[( betray(Ygritte) )][protect(betray(Ygritte,TABLE[dog][y]),protect(),--49)]){

}
};
	dog += x
} else {
	destroy(rule(bar(x,--Sansa)));
	( -1 * -( bar(--0.59) ) - ( Sansa ) );
	dog *= dog
};
	-COLS / -0.72 / TABLE[COLS][-COLS] / foo(( ( 13 ) + protect(TABLE[protect(( ( betray() ) ) * -protect() / Stark)][-15],rule(mislead(COLS))) + TABLE[1][( -TABLE[destroy(-( -( TABLE[TABLE[TABLE[TABLE[( -1 / protect(y) )][( betray(( y * TABLE[-( ( ---( foo(-0.32) ) ) )][-( y )] )) ) + Arya + -0.09 / Sansa] - destroy(1)][Hodor]][betray(Arya)]][( COLS )] ) / Sansa ),ROWS)][( y ) + COLS] )] )) * -betray(-42,-0.56,-destroy(-( -rule() ),-84,dog)) / ( ROWS ) * COLS
};
	( -0.45 + ROWS - -0.83 + -COLS );
	( foo(COLS) )
} else {
	if(COLS){

};
	TABLE[180.838][Sansa + mislead(-56,( ( --y ) ))];
	if(-mislead()){
	Arya /= ( Jon );
	x;
	if(( ( -TABLE[( foo() )][-dog] - ROWS ) )){
	x *= destroy(-TABLE[Hodor][Hodor] - rule())
}
} else {

}
}
}
var Jon = ( ( y ) )
def TABLE[-290.6 + -370.0541][i] {
	( Jon )
}
def TABLE[mislead(1,bar(--( -( COLS ) ) - dog * betray(x,75 / -0.03)),Stark)][i] {

}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Sansa = -6
def bar(x,Stark,Hodor){

}
var y = bar(foo(ROWS - Jon - TABLE[( -COLS )][-( -TABLE[betray(0.15) - -640.1][COLS + Ygritte] ) - -( Stark / -( -98 ) * 0.73 )]))
assert COLS / ROWS : "Fear cuts deeper than swords."
var Stark = COLS
var y = ROWS
var Hodor = Stark
def foo(Stark){
	dog + 0.87;
	rule(-76)
}
def TABLE[( ( TABLE[-protect(Hodor) * --380.85 - 1][TABLE[-ROWS][x]] ) )][k] {
	COLS
}
def destroy(){

}
var Ygritte = -mislead(destroy(),ROWS) + foo(-0.62 + --( dog ),COLS,( betray(28) ))
assert bar(-Sansa + dog,Jon) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert 1 : "One can not simply parse himself"
var dog = rule(---3 - TABLE[betray()][foo(--COLS)] / Arya / TABLE[Stark][( ( COLS ) )] - Sansa,--( 420.8603 ),48)
def TABLE[( -y + 0.26 )][k] {
	-COLS;
	-x
}
assert dog / dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( -870.134 )][j] {
	350.984;
	if(0.96){
	bar(-destroy(-1 / ROWS,COLS),-x,-71 * Arya);
	if(61){
	if(bar(betray(COLS,38,-40.258 * betray(( foo(Arya) ),betray(-COLS - -0.97 * ( COLS ) + COLS * destroy(0.26 - 90,-( -betray(ROWS,x,ROWS - destroy(-1)) ) * -38)))),Jon)){
	betray(COLS,( COLS ),TABLE[( rule(--0.19,bar(50.022) - ( TABLE[betray(( ( protect(destroy(( -0.36 )),Stark) ) ),-0.56)][-COLS] / -ROWS * -180.3493 )) )][protect()])
} else {

};
	if(-93){
	if(ROWS){
	Ygritte -= protect(-78 * -0.56);
	dog -= --0.78
};
	( -0.13 )
} else {
	Arya += -0.96;
	Stark += protect(( ROWS ),-COLS);
	dog *= ---Stark
};
	-1
} else {
	if(foo(bar(ROWS,bar(TABLE[x][Hodor],protect(---Ygritte))))){
	75
}
};
	if(rule()){

} else {
	( Jon + 0.02 );
	-( 80 )
}
} else {
	Sansa += protect(( ( 770.26 / Jon / COLS ) ),rule(-rule(),foo(Jon)),ROWS * betray(0.5,betray(Hodor + -y,rule(-55,ROWS))));
	Sansa /= -foo(( Arya ),COLS,Ygritte)
}
}
assert COLS : "Winter is coming"
def TABLE[-( --destroy(-200.4,y) )][j] {
	x += protect()
}
def mislead(Sansa,y){
	x /= COLS;
	betray(-1,( destroy(-57 / ( ROWS ) + ROWS * Arya,370.254) ))
}
def destroy(){
	if(destroy(( Sansa ),-mislead()) / ( ROWS * COLS )){

} else {
	( Stark )
};
	Arya += protect(0.73,COLS)
}
assert ( -( destroy() ) ) : "Winter is coming"
def betray(){
	Stark / 870.563;
	390.3
}
def bar(Ygritte,Jon,Hodor){
	Ygritte
}
assert TABLE[bar(COLS)][protect(bar(73,-x * ( Arya )))] : "One can not simply parse himself"
assert ROWS * Ygritte * -1 : "Fear cuts deeper than swords."
var dog = 55
var dog = mislead(TABLE[100][-dog],0.95 + Jon,--( TABLE[Arya][-1 + ( -( ROWS ) ) - ( -( Hodor ) )] ))
assert mislead() : "Winter is coming"
def mislead(){
	Hodor += 0.76
}
assert -protect(y * -ROWS,Sansa - COLS + -43,--betray(ROWS)) : "One can not simply parse himself"
def bar(){
	if(( bar(rule(destroy(-0.26,-120.015,( y ) - ( Jon - bar(1) )),foo() / ( rule(-0.12,Jon) ))) )){
	( TABLE[Sansa][( -0.68 )] )
};
	Stark
}
assert ( y ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(){

}
assert Ygritte : "Fear cuts deeper than swords."
var dog = -Ygritte + ( ROWS )
var Sansa = ROWS
assert -27 : "What do we say to the Lord of Death?"
var dog = -Ygritte + ( ( TABLE[Ygritte][-6 * mislead()] ) ) + destroy(Jon) + 0.82 * --0.64
var Hodor = -COLS
var Arya = bar(Sansa,--75) * ROWS
def TABLE[betray(betray())][j] {
	ROWS
}
assert -1 : "Fear cuts deeper than swords."
def bar(x,Arya,dog){
	bar(-ROWS,( TABLE[TABLE[-bar(TABLE[-( Hodor )][foo(-protect() / -44)])][-0.65]][0.61] ) / foo(-750.16,-1),-1);
	if(-83 - -ROWS - ( -0.53 - TABLE[-ROWS][91] + ( Stark ) ) / -90.353){

} else {
	if(ROWS){

}
};
	Stark /= -1
}
def rule(y,y){
	if(betray(-Ygritte)){
	Hodor;
	if(76 + -COLS){
	if(( -36 )){
	Hodor /= --25 + ( foo(Jon,Jon / -( y ) / ( Ygritte )) );
	Hodor /= -TABLE[-ROWS + ( destroy() / foo(COLS - dog,( -( 410.44 ) )) )][-COLS]
};
	( foo(TABLE[-foo()][foo(-1,Sansa) + -( ( --640.41 ) )]) )
} else {

};
	Hodor /= TABLE[Hodor / -130.622][360.1]
};
	y -= -28;
	if(Arya){
	if(-( dog )){
	COLS
};
	if(0.82){

}
}
}
assert -rule(ROWS) : "Winter is coming"
var dog = --( mislead(( Arya ),x) ) - Ygritte * bar(betray(-610.89,ROWS,y * betray(COLS) + protect(( TABLE[-ROWS][( -Ygritte )] ) * y) + protect(( ( bar(Hodor) ) ),COLS) / betray()),betray(Arya) / x)
assert -1 : "Winter is coming"
def TABLE[-85][k] {
	if(--Hodor){
	if(-0.45){
	if(-( destroy(Sansa,Jon) )){
	-3
};
	Stark
};
	Jon += -( -TABLE[-Stark + ( ROWS )][Jon] );
	if(protect(0.93,-destroy(650.0241))){
	--bar(COLS);
	Stark *= ( ( -ROWS ) )
} else {
	Jon += --COLS;
	if(-890.9){
	Sansa *= protect();
	if(-rule(-Ygritte,rule(y,-Ygritte - ROWS * mislead(-87,Jon * ( COLS ),0) * rule(( ( ( ( COLS ) + protect() ) ) ),( --( -0.68 ) / -( ( Hodor ) ) ))))){
	Sansa;
	1
} else {
	0.87
};
	( -( x ) )
} else {
	-COLS
}
}
} else {
	if(-0.88){
	y += Stark / -0.1 - -TABLE[Stark][( -mislead() )]
};
	if(Hodor){

} else {
	x -= -( --83 ) / TABLE[88][( -ROWS ) / 0.12 * ( Sansa )] + TABLE[-mislead(COLS)][betray()];
	if(ROWS / -6){
	dog -= -dog;
	x - 0.63;
	ROWS
} else {
	Ygritte += y
};
	if(( ( -1 ) )){

}
}
}
}
var y = ROWS
def mislead(Sansa){
	4
}
def TABLE[y][j] {
	TABLE[-ROWS][foo(-( dog ))];
	( dog / TABLE[TABLE[( -foo() )][( --( -ROWS - 0.54 ) )]][Stark] )
}
def betray(Ygritte){

}
def TABLE[--COLS][k] {

}
assert TABLE[COLS - COLS][protect(-1)] : "One can not simply parse himself"
def TABLE[( ( COLS + ROWS ) / ( Stark ) / -( 0.34 ) )][j] {
	Ygritte += dog
}
def TABLE[betray(( -1 ) * ( Hodor ))][i] {
	y /= rule(( -( dog ) / -mislead(ROWS,Hodor) ));
	if(COLS){
	if(TABLE[Arya][COLS]){
	ROWS;
	foo(rule(-0.82,-ROWS / ROWS))
} else {
	dog -= ROWS
};
	( destroy(--TABLE[-foo(0.2)][--COLS],( betray(Arya,Sansa / rule(bar(( COLS ) / -0.2,destroy(COLS)),-betray(1,foo()) + ( 37 * Jon )),Stark + -97) ) * COLS,destroy(TABLE[destroy() / -0.62 - ( y )][-270.59],TABLE[-mislead()][( rule() )])) );
	-220.115 - ( dog - rule(-Hodor) )
};
	Ygritte /= Ygritte
}
assert ( -0.52 ) : "Winter is coming"
var Arya = ( -ROWS )
def mislead(Stark,Jon,Jon){
	mislead(Sansa,Jon)
}
def bar(x){
	COLS;
	x;
	0.32
}
def TABLE[( ( -68 ) )][k] {
	Hodor += 63 * ( Ygritte );
	if(Ygritte){
	Jon;
	Jon /= x;
	TABLE[Stark][Stark]
}
}
assert ( ROWS ) : "What do we say to the Lord of Death?"
def bar(Jon){
	Sansa += Hodor
}
var x = ( -( -( 330.24 ) ) ) / --0.37
def mislead(dog){
	bar(Jon,( Hodor ));
	x *= -rule(TABLE[COLS - COLS][Hodor],18);
	-61
}
def betray(Arya,Arya,Hodor){
	TABLE[( 0.26 )][-ROWS];
	Hodor
}
assert -x * 0.5 : "Nothing burns like the cold."
assert Hodor : "Winter is coming"
def TABLE[rule(protect(Stark - 34,9) / -77,ROWS)][k] {
	--240.28 / ( ROWS - --COLS / destroy(-( Sansa ),( ( ROWS ) )) )
}
assert destroy(bar(TABLE[bar(500.33,1)][( COLS )],92,TABLE[89][mislead(0.45,( Jon ),Hodor - --87)]) - ( -0.84 ),foo()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-29 + mislead() / -0.69][k] {
	if(TABLE[( -0.23 )][Ygritte]){

} else {
	if(Ygritte){
	Hodor += bar(1 / -Sansa,ROWS);
	Jon *= -630.9308 / -1 / ( -rule(ROWS,-mislead(-0.67,0.88,ROWS)) )
};
	if(bar(-COLS,--bar(0.22,-TABLE[( ROWS )][Ygritte + 1] / ( destroy(( -0.9 )) ),-Stark) * ( -14 ),-47)){
	if(-TABLE[( ( mislead(mislead(foo() * -rule(),x),destroy(TABLE[57][( --COLS )],-COLS,( TABLE[ROWS][-( 1 )] ))) ) )][mislead()] + x * -TABLE[TABLE[Hodor][Sansa]][TABLE[--1][-25 + ( --bar(dog,protect()) ) - Sansa]] + -( bar(--( COLS )) )){
	if(-Ygritte){

};
	if(( ( 0.54 ) ) - -betray(-1)){
	y -= ROWS;
	-( destroy(( 0.45 * betray(COLS,COLS,( Hodor )) ),protect(-ROWS,mislead(0.68)),670.5) );
	if(betray(-Stark,destroy())){
	( --16 * -( -35 - COLS ) )
}
}
} else {
	220.0486 - ( COLS )
};
	foo(( destroy(Sansa) + ( destroy(bar(-66,-COLS),TABLE[0.04][( 85 )]) / TABLE[protect(( -0.64 * Stark )) * -Jon][Hodor] ) ))
}
}
}
def TABLE[ROWS][i] {
	if(Ygritte){
	if(0.61){

} else {
	-37;
	81
};
	x -= ( foo(-Jon,Sansa) )
} else {
	if(protect(( -Arya ),protect(foo(( ( bar(( -95 ),( -0.97 - -73 / --1 - -97 - 210.2097 * Arya / -1 / ROWS ),destroy()) ) ),Ygritte),Arya),rule())){
	Ygritte /= COLS / ( ( bar(( -Sansa ) - -660.1) ) );
	--1
};
	Hodor += COLS
};
	-Arya - ( -betray(( -TABLE[0.05][COLS] ),Ygritte / protect(-( -0.24 )),mislead(60.303,mislead(-0.93)) / ( COLS )) ) - destroy(-900.1,( --27 ) * -Arya - ( 0.9 ) - -rule(TABLE[ROWS][protect(( -( -TABLE[foo(betray(-16,COLS - -( destroy(COLS,0.51) + mislead() / ROWS - ROWS )))][Ygritte] ) ))],( -1 )),Sansa)
}
var Arya = -8
assert 91 : "Winter is coming"
def mislead(Ygritte){
	if(( -950.984 )){
	if(Ygritte){
	if(TABLE[( -0.32 )][( -32 )]){
	COLS
} else {
	if(( -ROWS ) / -Sansa - x){
	if(-protect(-( dog )) * -Arya){
	Jon += -( ROWS );
	if(-TABLE[y][dog]){
	if(--520.5024){
	( -1 - 0.98 );
	-betray(dog,23);
	if(betray(-500.06 + Stark * ( -ROWS ))){
	if(750.314){
	Stark -= -0.21
} else {
	dog /= rule(-TABLE[-TABLE[770.62][-rule(TABLE[x][( ( Hodor - ( ( bar(-TABLE[( bar() ) - Jon][-29]) ) ) ) )])]][78 - COLS - -destroy(530.795) / destroy() / ( COLS )])
}
} else {
	( ( ( -651 / rule(( -foo(-0.92 / TABLE[-Ygritte][COLS] - 0.69,destroy(Hodor,betray(),COLS)) ) + Ygritte) ) * ROWS * -Hodor ) );
	if(-39){
	dog *= Arya
} else {

};
	protect(destroy(ROWS,-( ( mislead(860.395,y) / x + ROWS ) )) + Arya,( -80 ) * ( -64 ),0.17) * ( ROWS ) * dog
}
}
} else {
	Arya *= rule(protect(-( COLS ),betray(Ygritte,destroy(Jon,30.9752,--0.95 + 52 / protect(TABLE[Jon][( -0.4 )],ROWS,TABLE[( -Ygritte )][x]) + foo(TABLE[---1 + dog][COLS * ( Jon )],-( ( rule() / -920.2 ) )) / ROWS * COLS / ( mislead(-0.36 / y,COLS * ( -TABLE[Hodor][0.44] ) - foo(--1 - ( mislead(Jon + destroy(-( TABLE[--58][foo(Ygritte,Sansa,protect(-bar(ROWS + ( --bar() / 640.44 )) * -1,( -COLS - Hodor )))] ) / ( bar() ) + dog,betray(-1,TABLE[( --1 - destroy() )][Hodor + TABLE[-Sansa - COLS - Hodor][y]]))) ) * y,ROWS)) ) - ROWS))),COLS,betray())
}
};
	Ygritte
};
	Arya;
	Ygritte *= bar(41,-2 / ( Jon ))
}
} else {

};
	if(-mislead(ROWS)){

}
} else {

}
}
def destroy(Sansa,dog){
	if(( ( --foo(48,0.51) - -730.97 ) )){
	if(--( Arya )){
	dog /= betray(( foo() - ROWS ))
} else {
	Jon += -34;
	Stark /= -COLS * Ygritte;
	( -0.17 )
};
	-610.39
} else {
	y *= y;
	if(-TABLE[Sansa][-COLS]){

} else {

}
};
	if(-0.38){
	Stark -= ( -dog ) * --( ( ROWS ) ) * x;
	if(TABLE[-( betray(x - protect(betray(Arya,--1),0.75),Ygritte) ) + Arya][mislead(foo(ROWS,bar()))]){
	Ygritte -= dog;
	dog /= ( Ygritte - ( ( Ygritte + -1 ) ) * -Stark ) * -100.4
}
};
	( Hodor ) + -75
}
def protect(Hodor,Ygritte){
	Arya *= -65;
	if(Ygritte){
	( protect(COLS,Hodor) );
	Arya += -Hodor
}
}
def destroy(Arya,y,Ygritte){
	Stark -= ROWS;
	Hodor += foo();
	if(mislead(( -1 ))){
	Jon *= rule(ROWS,bar(foo(( ( Stark ) ) - COLS,x * -1,-mislead(--( Hodor / -1 ),COLS,( TABLE[-TABLE[protect(TABLE[Sansa][5])][destroy(TABLE[betray()][Sansa])]][Jon] )))) / -39);
	mislead(mislead(COLS,Ygritte),-0.81)
}
}
assert x : "Winter is coming"
def destroy(Ygritte,Arya,x){
	if(-0.4){
	if(Hodor){

};
	if(( dog )){
	dog -= ( -26 );
	Arya -= ROWS
} else {

};
	-270.911
}
}
def TABLE[dog][j] {
	if(rule()){

} else {

};
	if(--33){
	730.23
} else {

};
	x += -Hodor + -1
}
var Ygritte = ( -TABLE[TABLE[betray(Ygritte,bar(x,-0.18,mislead(y))) - 0.75 * ( COLS )][( destroy() )]][Hodor + Stark] )
def TABLE[( COLS )][i] {
	COLS;
	Ygritte += TABLE[protect(Arya)][rule(foo(TABLE[--COLS * -1][Ygritte],( ROWS )))];
	COLS
}
def TABLE[--mislead(y,( ( ( ROWS ) ) ) / bar(TABLE[52][ROWS]))][k] {
	Hodor *= ( TABLE[( foo(5) )][ROWS * destroy(betray(-1,Arya,-foo(Stark) / -mislead(foo(COLS,--( COLS ),----550.1 + betray(( -58 ),TABLE[Ygritte][ROWS])),Sansa * ( -( ROWS ) )) - --destroy(COLS)))] );
	COLS;
	x -= COLS
}
def foo(dog){
	if(1){
	if(( 120.3712 )){
	( ( COLS ) );
	( -1 );
	if(-( --57 / --280.15 - -Jon * mislead(COLS,COLS) )){
	if(COLS){
	dog *= -ROWS;
	if(-mislead(--TABLE[-0.57 - -6][( protect() )])){

}
} else {

};
	Sansa
} else {
	if(1){
	if(COLS){
	Arya /= ( mislead() );
	destroy(-foo(( COLS )))
};
	Arya += protect(( mislead(Ygritte) ))
}
}
};
	( Jon )
} else {
	Stark -= COLS;
	dog += -COLS;
	betray(-540.5,--TABLE[betray(0,COLS)][-betray(y)] * ( Arya ),0.02)
}
}
assert -rule(foo() / ROWS / ( Hodor ),ROWS) - ROWS : "One can not simply parse himself"
def protect(){
	protect(Ygritte)
}
var Jon = protect()
def foo(Stark,Sansa,Stark){
	if(betray(--COLS)){
	45;
	0.44;
	if(rule()){
	if(x){
	Jon *= ( -1 )
} else {
	dog += --690.448 - bar(-2 - ---ROWS,-0.57);
	Stark -= ( destroy(( 0.06 ) - ( bar(-0.49,foo(mislead()) * ROWS) ),y / TABLE[--TABLE[-foo(-TABLE[Ygritte][Arya] * ROWS,mislead(),-28 * x) - foo() / ( -COLS )][-( -40.103 )] * protect()][--38 / 0.82],rule(destroy(-rule(( ( mislead() ) ),Jon,TABLE[Arya][-10]),0.09),-rule())) / ROWS ) / ( ( Ygritte ) ) * ( y ) * -0.47
}
}
} else {
	( --mislead(-TABLE[ROWS][( ( TABLE[( ( ( y ) ) ) - COLS][-COLS] ) * TABLE[protect(---dog)][-( -490.7 )] )] + ( dog ) * TABLE[TABLE[betray()][bar(destroy(-y,0.27 - 1),y)]][( Sansa ) - ( ROWS )],-TABLE[( foo(860.931,rule()) - foo(-0.05 - TABLE[COLS][--Arya + bar(0.83,Hodor)],Stark,--TABLE[COLS][COLS]) )][( betray(foo() / rule(Stark) + -38,foo(-0.49,TABLE[-( mislead(-bar(protect())) / Hodor )][Sansa],Sansa)) )]) );
	-betray(y,0.46)
}
}
var Stark = -betray() - bar(-betray(mislead(destroy(-690.01,-protect(ROWS * -( --9 ) * Hodor / ( 34 ) * -COLS + -TABLE[bar(-86,TABLE[COLS][COLS])][Stark]),dog),-dog),( ( destroy(mislead(ROWS * Arya),0.52,370.6) - -ROWS ) ) - ( Jon ),x) * -Sansa / --foo() * ( Hodor ) + 350.1,( foo(-0.03,( COLS )) )) + -85
assert ( ( x ) / COLS ) : "Fear cuts deeper than swords."
def TABLE[-( ( -47 ) )][i] {
	Arya
}
assert ROWS : "Winter is coming"
var Stark = dog
assert -COLS : "One can not simply parse himself"
var Sansa = 15
assert betray(rule(),x) : "Winter is coming"
def destroy(Jon,Hodor){

}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Ygritte : "One can not simply parse himself"
var Stark = Stark
var Arya = TABLE[-x][y]
def rule(Ygritte){
	if(TABLE[0.18][33]){
	if(-1){
	if(-990.736){
	if(-y){
	if(( -mislead(betray(mislead(foo(),Jon)),rule(-ROWS * ( ( COLS ) ),Arya + bar() / Stark - TABLE[( TABLE[betray()][-COLS] + ( ( x ) ) )][foo(-7) / -1])) / 0.5 * destroy(-Sansa,-TABLE[ROWS - -destroy(-1) - ( ROWS ) * -( ( foo(y,rule(-( COLS / ( foo() ) * -mislead(( foo(dog) ),betray() + foo()) + foo(dog + Hodor,( COLS ),( ( -81 * -foo(Ygritte) ) )) ),--Sansa / -( 0.67 ) + ( ( -dog ) ))) - -COLS ) )][ROWS],( destroy(Arya) )) )){
	if(ROWS){
	if(COLS){
	--x;
	Jon *= ( mislead() * Jon )
} else {
	if(COLS){
	Hodor *= -58
};
	ROWS
}
} else {
	Hodor *= -TABLE[destroy() * ROWS][COLS] - 0.68;
	if(destroy(---450.74,Sansa)){
	protect(foo(TABLE[-350.3148][( --COLS - TABLE[Arya + ( ( Arya ) )][Stark] )] - 62,Hodor + --831 * Stark - mislead(mislead(0.5)),-820.7996));
	if(-dog){
	if(COLS){
	y -= Ygritte;
	x /= -0.95 + COLS
};
	x -= Jon
};
	if(rule(---54 / -570.4053 * COLS,( -170.36 ))){
	if(--100.9){
	Ygritte += Arya
} else {
	foo(bar(-y) * ROWS)
};
	if(48 * COLS * TABLE[0.63][mislead(bar(),-77)] / 950.4 + 140.7){
	( ( Arya ) )
} else {
	protect(dog,Ygritte / COLS,( -ROWS ));
	bar() * Sansa
};
	Hodor *= TABLE[--( 68 ) + COLS * -( Hodor ) / -39 / ( destroy(ROWS + ( ( --1 * TABLE[ROWS][-TABLE[dog][-0.85]] ) ),-y) * betray() )][730.3]
}
}
}
};
	( COLS )
}
} else {
	COLS
};
	if(rule(-27)){
	Jon -= -0.28 + -0.72;
	if(( ( rule(( COLS ),rule(-( -TABLE[Stark][TABLE[( Stark )][3] - ( Jon )] ))) ) )){
	if(Stark){
	y += COLS;
	if(0.69){
	dog += ( -0.71 )
} else {
	y /= y;
	Ygritte *= Jon;
	x *= Hodor
};
	if(Hodor){

}
}
} else {
	-1;
	dog *= bar(-Jon) + bar(-1) - Stark / rule(rule(( TABLE[dog][COLS] ),x,ROWS),ROWS);
	if(Jon + --( -0.52 )){
	Ygritte -= destroy(TABLE[y][TABLE[18][88]]) * -( foo(ROWS) );
	if(( TABLE[( ( Hodor ) )][--2] )){
	x /= ( betray() ) + destroy(Jon)
}
}
};
	34
}
} else {
	x -= betray(ROWS / 43,COLS * ROWS);
	Ygritte
}
};
	if(( COLS )){
	-dog / ( protect() )
};
	Stark *= foo(-0.23)
}
var Jon = Sansa
def TABLE[( -Stark + -68 )][i] {
	if(Arya){
	foo(--Sansa / -( dog ),ROWS);
	if(( ( -32 ) )){
	bar(-430.1,( y ));
	mislead(-TABLE[betray(( ( --590.253 ) ),-0.22)][-( 1 ) - Sansa])
} else {
	19
}
};
	rule(TABLE[TABLE[COLS][-70.306]][-Hodor],mislead(( foo(rule(foo(-( Arya )),-92 - -77),destroy(betray(( --0.65 ),bar(betray(-COLS,TABLE[900.21][-1]),( ROWS ) - bar(--( -49 + TABLE[TABLE[( ROWS )][TABLE[( COLS )][( bar(( foo(COLS,98) )) )]]][y] + rule(-0.96) - 0.9 )))),ROWS)) - -( Ygritte ) ) / 0.18,1) / mislead(( 97 ),mislead(1,dog)),-0.79)
}
var Jon = --1
def bar(Ygritte){
	x += betray(-COLS,protect(310.19,mislead(mislead(( COLS ) * ( x )),-78)));
	if(rule(Hodor) / 1){
	-ROWS
}
}
def TABLE[betray(mislead(( ---0.75 ),foo(-85),24))][k] {
	COLS
}
def bar(Stark){
	if(-betray() + ( ( ( ROWS ) ) )){
	y += -0.37 + 0.75;
	( bar() );
	Sansa /= ( Hodor )
} else {

};
	x -= -Jon / ( -dog ) * 45;
	ROWS
}
def TABLE[ROWS][k] {
	Jon *= ( ( 24 ) )
}
def TABLE[( rule(46,( ( COLS ) ) - betray()) ) - foo(TABLE[( bar(Stark + ( y ),( -COLS - 1 ),( -81 ) / -1) )][( -( ---Sansa + COLS + -Arya ) )])][k] {
	dog
}
def bar(){
	if(--0.18 - -foo()){
	if(Ygritte){
	x /= -340.79;
	TABLE[rule(dog)][Jon]
}
}
}
def TABLE[-mislead(( Sansa ),-( COLS ))][i] {
	Stark *= ( protect(( -0.57 - dog )) )
}
def TABLE[-TABLE[-33][dog + -41]][i] {
	Hodor /= y + Hodor;
	dog /= ( TABLE[protect()][( --protect(Hodor * -( -24 + destroy() ),rule(-43,1,TABLE[( -( 0.16 ) - Stark / Jon / COLS )][( mislead(foo(0.49,y),bar(betray(betray(( -TABLE[y][( protect(( bar(Ygritte,950.317) )) )] ),( 54 ) * 1),bar(( Sansa ) / -ROWS - x,TABLE[( 150.163 )][-29],-y + -( ROWS )) * foo(mislead(x,-x + -75 * ( mislead(-36) * Sansa ) + ( -0.86 ))) - ( 0.62 )),betray(protect(dog / ( ROWS ) * COLS,-30)),Ygritte + COLS),0.27) )]) + x,( ( Ygritte / ( Jon ) + -Hodor ) )) )] );
	x /= Sansa
}
var Stark = ROWS / TABLE[-protect(-Ygritte,( -x / -410.797 )) / -x + Hodor * Sansa + COLS - ROWS][-mislead(-50,ROWS,COLS)] / Sansa - -bar(-x)
assert -( -ROWS ) : "Nothing burns like the cold."
assert bar() : "Winter is coming"
def TABLE[-TABLE[--( --ROWS )][Hodor] / ROWS][j] {
	if(( Stark )){
	Jon += COLS;
	Hodor += 0.69;
	if(COLS){
	dog /= TABLE[bar(ROWS,-betray(-730.345,--protect(bar(Stark),( -( 39 ) ))),COLS)][COLS] - 0.8
}
}
}
def TABLE[-Hodor][k] {
	Sansa;
	Ygritte -= 82;
	Ygritte * ( -TABLE[-Stark / ( ( ( ( bar(destroy()) ) ) ) )][Hodor + -78] / y - -TABLE[-destroy(Jon,-Arya) / destroy()][bar(Hodor)] + ( TABLE[Stark][betray(bar()) * COLS] ) )
}
def betray(dog){
	y /= -( -Sansa ) - -270.3709 + dog
}
var x = -x
def destroy(){

}
def mislead(){
	Jon;
	Hodor *= -( COLS ) - 0.14;
	Hodor += mislead(y,-0.5,--Jon)
}
assert foo(1 * 1 / destroy(-foo(),( dog )) / --0.45 + ( ROWS ) / rule(( protect(destroy(TABLE[-160.3][destroy(COLS,Stark,-TABLE[-1][rule(( ( mislead(( -Ygritte ),rule(( TABLE[( y / Sansa )][Arya] ))) ) ),COLS,0.48)] * -ROWS * 1)],( rule(-( -y )) ))) ),mislead(TABLE[-0.03][ROWS],-0.26),( ----( 340.43 ) - -0.06 + ( 600.188 ) )) + -rule(-protect(mislead(rule(TABLE[destroy(TABLE[destroy(---0.4,( ROWS ) / ( 0.33 * -0.82 ),0.55)][--TABLE[-( Jon * -0.78 )][-( Arya + 38 ) * Jon]])][-0.59 + -COLS - 300.028 + ( ROWS + Jon ) * 31],-16),Stark / -0.58)) / --1,-0.35,ROWS * rule()) + Jon + 1 / -dog) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Ygritte){

}
assert 45 : "Nothing burns like the cold."
var Jon = -betray(-320.5639)
def TABLE[-1][j] {
	if(protect(( 0.89 ))){

} else {
	y;
	--foo(-Arya)
};
	if(ROWS){
	protect(ROWS,Hodor);
	Hodor /= ( -96 );
	x += Stark
} else {
	-530.7239 + dog;
	Arya
}
}
assert mislead(-ROWS,mislead(-44)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(dog){
	Hodor *= ( --TABLE[COLS][-0.36] );
	if(ROWS){
	x /= COLS;
	if(foo(TABLE[-1][( dog )],Hodor - TABLE[( ( -0.68 ) )][-1])){
	Ygritte /= ( Arya / ---( Arya ) );
	Arya -= Sansa
}
}
}
def destroy(){
	TABLE[( x )][( x )];
	if(ROWS){
	Jon /= protect(-( -0.13 ))
}
}
assert TABLE[TABLE[Stark - -( 0.76 )][dog - -4 * -910.6]][rule(-24)] - ( foo(Hodor,TABLE[foo(-35,rule(y + COLS,-0.01))][Jon]) ) : "Fear cuts deeper than swords."
var dog = Hodor
def TABLE[mislead(-TABLE[25][-72 * ( 73 )],( ( -0.76 ) / dog ),-16 / -0.12)][i] {
	( bar(destroy(( 1 )),( COLS ) * bar(--0.98,x,--550.237),-( dog )) );
	x;
	Stark -= foo(x)
}
assert ROWS * TABLE[rule(dog,COLS,mislead(betray(( ROWS ),( -1 ),-0.9),-220.89 - bar(( -ROWS ) - -0.2 - -36,ROWS,( COLS * ( COLS ) ))))][protect()] : "What do we say to the Lord of Death?"
def bar(Stark,Sansa){
	if(( bar(-0.52) )){
	Arya *= ( ROWS )
} else {
	if(TABLE[COLS][foo()]){
	x -= ROWS;
	if(Sansa){

} else {
	( -( --TABLE[destroy(Stark,COLS)][-1 * -TABLE[( y )][-18] - protect(ROWS)] ) / -( -COLS ) ) / TABLE[-COLS / Ygritte + --46 / -71][Stark]
};
	if(Jon){
	if(---0.72 / mislead(-120.01,( 16 * ( -63 ) ))){
	Stark -= mislead(-59,Stark,bar(-78 * ROWS))
}
}
};
	if(ROWS){
	Stark /= destroy(-TABLE[( bar(Hodor / ( Jon )) )][COLS]) + TABLE[y][( Arya )] / -Jon + -x;
	Ygritte += -( TABLE[( Ygritte )][92] );
	Sansa -= betray(COLS) - rule()
}
}
}
def rule(Sansa,Stark){
	-TABLE[Arya][( 0.56 )];
	if(( COLS )){
	Stark *= ( --42 + protect(Sansa) );
	if(Ygritte / rule(Ygritte)){

};
	Hodor /= Sansa - mislead(ROWS,-( --x * ( COLS ) * ( -Sansa + ( ( ROWS ) / ( -980.782 ) ) ) ))
} else {
	if(-destroy(61,bar(( COLS ) * ( 79 ),43))){
	if(protect(( ROWS ),betray(-0.87))){
	y *= TABLE[y][0.77];
	Stark /= 35
} else {
	dog /= 1
}
};
	if(Sansa){

};
	if(( COLS )){
	0.32 * COLS * 0.78
} else {
	Hodor += ROWS;
	COLS
}
};
	if(23){
	Ygritte -= mislead(-COLS);
	( ROWS )
} else {
	0.99;
	x /= bar()
}
}
assert Hodor : "What do we say to the Lord of Death?"
def bar(Hodor,Arya,y){
	if(rule(Sansa,Ygritte,ROWS)){

}
}
def destroy(Ygritte,Ygritte){
	if(( 92 * y )){

} else {
	Stark += 0.91
}
}
var Ygritte = -0.27
var Hodor = -ROWS
var x = -50
assert 16 - --650.333 : "Nothing burns like the cold."
var dog = ( 0.54 * -Ygritte + Hodor )
assert ( Ygritte ) - TABLE[-190.799][y] : "Nothing burns like the cold."
def TABLE[( ( --0.75 ) )][j] {
	Sansa *= Stark;
	if(rule(protect(y,-( -ROWS )),( x ))){

};
	if(Hodor){
	if(bar(-( -x ) * --TABLE[bar(-78,-1)][y] / --Sansa,-Arya,Jon)){
	if(-rule(( Arya ),( bar(-17) ),foo(-0.53,y) - 1)){

}
};
	( destroy() / Ygritte ) - -910.6
} else {
	-52;
	ROWS
}
}
def bar(x,x){

}
def bar(Arya,Hodor){
	Jon *= -380.86;
	Stark
}
var Ygritte = COLS
assert ( -0.07 + ( ROWS ) ) : "Nothing burns like the cold."
assert Arya : "What do we say to the Lord of Death?"
def betray(dog){
	Ygritte += ( ( ROWS - Stark ) );
	if(betray(-( betray(( TABLE[-( ( COLS ) )][bar(COLS,x,Sansa)] )) ) * ROWS,0.77)){
	if(Ygritte){
	ROWS;
	Sansa *= 62
} else {
	if(betray(-0.99) / -1){

} else {
	protect(( COLS - TABLE[Jon][mislead()] ) - Ygritte)
}
};
	if(( 69 )){
	Ygritte *= ( 0.37 + --COLS )
};
	ROWS
} else {
	if(foo(--59,-COLS)){
	-destroy(TABLE[betray(COLS,--Hodor)][( betray() * Hodor )],( ( COLS ) ),-foo())
};
	y += -1;
	1 * --Hodor - TABLE[-betray(-0.88,-0.94 * Sansa / rule(TABLE[-Stark][ROWS],-820.57),TABLE[( ( Arya ) )][foo(TABLE[( ( y ) )][-COLS] * ( TABLE[TABLE[0.19 / -( --( ( 1 ) ) ) - TABLE[-betray(( ( COLS ) )) + Ygritte][ROWS] * ( Stark ) / -840.31 * Arya][-Hodor]][protect(( rule() - -protect(380.6) ))] * -COLS / ROWS ))])][0.7]
}
}
assert ( foo(-0.61,TABLE[1][67 * -y / -Stark]) ) : "What do we say to the Lord of Death?"
def TABLE[300.661][j] {
	94;
	destroy(COLS)
}
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def mislead(Stark,Sansa){
	Jon -= -x
}
var dog = -78
assert rule(-bar(( -0.83 - -dog ),60.9,-Hodor),--0.31) : "Winter is coming"
var Sansa = -0.64
def TABLE[rule(-Arya,( 31 ),ROWS)][k] {
	if(mislead(ROWS)){

} else {
	if(( -Ygritte ) - -Jon){
	if(COLS){
	if(( -1 )){
	Jon /= 1
};
	Ygritte *= -COLS + COLS;
	( 1 )
} else {
	if(-0.12){
	Jon += dog;
	Hodor -= betray()
};
	Arya -= ( Jon )
};
	Stark;
	Ygritte *= COLS
}
}
}
def bar(Sansa){
	Hodor += 9;
	if(rule(42)){

}
}
def protect(x,Arya){
	Jon *= -( -COLS + 71 ) * bar(--360.175,96) - COLS
}
def mislead(y){
	y -= 0.21;
	x *= Ygritte;
	ROWS
}
def rule(Ygritte){
	if(x){
	if(80){
	if(( ( -44 ) )){
	( Ygritte );
	Sansa /= ROWS
};
	Hodor *= ( 760.41 )
};
	-( dog )
} else {

};
	Ygritte
}
var Stark = mislead(betray(ROWS,foo(bar(( -destroy(Jon,foo(0.58),mislead()) )),Stark,-( protect(foo(Stark) + ( TABLE[dog][bar()] ) * COLS) + Sansa + ROWS ))))
var Arya = -26
var Arya = Jon
assert dog : "Fear cuts deeper than swords."
def protect(Hodor){
	Stark *= ( 0.11 )
}
var Jon = --( -( ( dog ) ) )
var y = ROWS
def TABLE[dog][k] {
	y /= TABLE[( -1 )][y]
}
assert ( ROWS ) : "One can not simply parse himself"
def betray(Arya,x){

}
var Stark = 1
def TABLE[( protect(-0.8 - --destroy(betray(Arya / 410.491,80)) + COLS) )][i] {
	Ygritte /= ---0.34;
	mislead(-0.45,-1 - ( protect() ))
}
assert Hodor - dog : "One can not simply parse himself"
assert -( TABLE[Sansa][ROWS] ) * mislead(-ROWS,( destroy() + ( protect(Jon) ) )) : "One can not simply parse himself"
assert COLS / ( TABLE[-0.52][-0.81] ) : "What do we say to the Lord of Death?"
def destroy(dog,Sansa){
	if(dog){
	if(Hodor){
	Ygritte /= ( foo(Sansa - TABLE[protect(0.88)][52],( ( ( COLS - ( -86 ) ) ) )) )
} else {

};
	Sansa *= -31
} else {
	TABLE[y][( 0.21 )];
	Arya += Ygritte
};
	if(TABLE[ROWS][-12]){
	bar(-Jon,710.74);
	( 180.05 );
	y /= x
}
}
def rule(Hodor,Ygritte){
	( --780.073 )
}
assert -68 : "Winter is coming"
def betray(x){
	if(39){
	if(TABLE[-730.3 / -0.96][y]){

} else {
	if(Sansa * ( Sansa )){
	if(-94){
	if(Sansa){
	( ( Stark - Jon + -1 ) );
	mislead(-0.37)
} else {
	Ygritte += -420.95
}
} else {
	betray();
	Hodor += betray(TABLE[( Ygritte )][( 0.77 / 1 )],foo(betray(25,30.154)) / ( x * rule() ));
	( 0.52 ) / Jon
};
	Sansa /= 1;
	( ( -97 ) )
} else {

}
};
	Hodor += ( --230.77 )
};
	if(( foo() )){
	x *= COLS;
	if(( ( ( 0 ) ) * -0.81 )){
	-1
} else {
	( COLS );
	if(( -16 )){
	if(-960.142){
	-0.33
}
};
	Hodor -= protect(dog)
}
} else {
	Ygritte;
	if(-ROWS * -COLS){
	if(protect(Sansa)){
	Jon += -Arya
};
	foo(protect(-0.52),( dog ) * ( TABLE[mislead(--( COLS ))][-0.91] )) * ( -betray(-( Hodor ) / -COLS + ( rule(( ( ROWS ) ),-0.23) ) - ROWS / --37) );
	-mislead()
};
	-COLS
}
}
assert -Stark / mislead(x,-( ---( ( mislead(--20,ROWS) ) ) + -0.63 - 0.02 + -0.13 + mislead(( foo(y,TABLE[TABLE[--900.97 * destroy(Hodor) * -36][-0.67]][COLS],dog) ),( COLS ),-destroy(Jon) + Jon) )) : "One can not simply parse himself"
var Hodor = ( Arya )
assert -Jon : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Jon = betray(TABLE[0.48][COLS],betray(Arya)) + ( 1 )
assert TABLE[TABLE[Ygritte][y]][TABLE[Arya][betray(dog,--destroy(-Arya,-1),( 0.22 ))]] : "Fear cuts deeper than swords."
def rule(y,Stark){
	0.16 + -370.736
}
var Stark = -1
def foo(Sansa,Ygritte){
	Ygritte;
	y *= ( -ROWS * -x * Hodor - ( protect() ) );
	if(-( --mislead(TABLE[( destroy(Hodor) )][protect()],x) + ROWS )){
	COLS;
	Hodor += 89
}
}
var Sansa = TABLE[-13 * -71][foo()]
assert -66 : "Nothing burns like the cold."
def TABLE[-TABLE[protect(( -0.93 ),betray(),-12)][Sansa + mislead(--0.5,--( 0.14 - Ygritte )) - -( -87 )]][i] {
	x;
	if(ROWS){

}
}
assert ROWS : "Winter is coming"
def TABLE[( -( Arya ) ) + ( 0 )][k] {
	if(y){
	Jon *= -79;
	if(-1){
	590.15;
	( destroy(COLS) * 1 - foo(--TABLE[x][0.06]) );
	if(-17){

} else {
	Hodor /= foo(Arya,Sansa) + --34;
	Hodor /= bar();
	if(protect(foo(Sansa))){
	dog
} else {

}
}
}
};
	Ygritte += bar(foo(( -43 ),-mislead(-COLS)),-( ( -10 ) ));
	if(x){
	Sansa += foo(Stark - ROWS)
}
}
def TABLE[TABLE[-39][( mislead() )] / -Arya][j] {
	Stark *= ---x
}
var Jon = ROWS
var Stark = ( bar(y) )
def mislead(Sansa,Arya){
	-TABLE[protect(COLS,-850.05,( betray(mislead(( bar(mislead(( ( protect(protect(foo(bar(99,-0.62 - Ygritte,bar(-120.56 * protect(81) - -0.98))))) ) * x )),Sansa) ),--dog,rule(( -bar(-destroy(bar(Hodor,-destroy(TABLE[x][bar(-72 + TABLE[COLS][( 35 )])],Ygritte)) * -COLS,protect(ROWS),ROWS),ROWS * ( -28 ),( 0.98 )) ),foo(betray(( 0.88 ),TABLE[Stark][rule(Ygritte)]) * -15,x) * betray(mislead(Sansa * -TABLE[ROWS][destroy(dog)],destroy()),rule(rule(--protect(--89,bar()) - TABLE[protect(( ROWS ),Sansa)][Hodor] * -Ygritte / ( -COLS ) * TABLE[( protect(ROWS) )][Arya],bar(protect(ROWS,ROWS)),dog)) * -Sansa / 1 * -83 - ROWS)))) ))][Jon + 1];
	Jon += -57 * -77;
	Hodor -= bar(destroy(Hodor,0.45 / 600.017 + --0.12),TABLE[-TABLE[mislead(TABLE[-Sansa][-( ( TABLE[Hodor][-( -bar(Jon * Stark * ( ( ( ( destroy() ) ) ) ),destroy(TABLE[( -0.91 )][COLS] - ( mislead(( -COLS ),ROWS) ),destroy(),-Arya)) / -mislead(-28) + -0.18 ) * ( ( foo(ROWS) ) ) + ( -( COLS + ( 820.2 ) ) )] ) )],foo())][Arya] - Jon * 58][ROWS])
}
assert COLS : "What do we say to the Lord of Death?"
def betray(){
	-ROWS
}
assert protect(-Ygritte * Ygritte / rule()) : "Fear cuts deeper than swords."
assert ( -ROWS ) : "Winter is coming"
var Jon = Hodor
def rule(){
	ROWS;
	Jon *= -COLS
}
var Ygritte = -880.5
def mislead(Arya,Sansa){
	Sansa -= ( ROWS ) + -2;
	0.19
}
assert 0.54 : "What do we say to the Lord of Death?"
assert -TABLE[y][( ( 0.83 ) ) + foo(destroy(mislead(-75),rule(Arya,protect(foo(( COLS )),64,-x),1)))] : "One can not simply parse himself"
assert -COLS : "Nothing burns like the cold."
def protect(Hodor){
	y *= ( COLS );
	rule(dog);
	Ygritte /= 0.98
}
assert -TABLE[440.26][Stark] : "One can not simply parse himself"
def rule(dog,x){
	Arya -= ( TABLE[--72][mislead(ROWS - -210.5)] );
	if(COLS){
	( --3 + Arya );
	if(dog / -82 + ( -460.323 )){
	COLS + COLS;
	Jon - -( protect(ROWS) ) - ( destroy(-( -betray() )) )
}
} else {

}
}
def betray(y){
	if(( -COLS - ( -( COLS ) / ( -ROWS * -COLS * 1 + 0.37 ) ) ) / ROWS){

}
}
var Jon = -64
def betray(x,y){
	dog -= --( ( Jon ) ) - -( -47 );
	protect(COLS - TABLE[( -26 + ( -( rule(0.56) ) / -Hodor ) / Stark - protect(-ROWS,--0.48) ) + Jon][destroy(Hodor)])
}
def mislead(y){
	Sansa /= ( ( ( -protect(( COLS )) - -450.88 ) - ( 420.2333 ) - ( 0.62 ) / Jon ) )
}
def TABLE[TABLE[-1][mislead()]][i] {
	if(betray()){
	Arya -= foo(--26,bar(COLS,COLS))
};
	if(( -ROWS )){
	if(foo(1)){
	if(-betray(TABLE[-( TABLE[y][destroy(( Hodor / ( ( 0.56 ) * 83 ) ))] )][destroy(( -76 ))]) / -ROWS){

}
} else {
	TABLE[Arya][( betray(-TABLE[( foo(COLS * ( 0.36 ) * destroy(),COLS,( -1 )) )][ROWS],ROWS + ROWS) )]
};
	if(( ROWS )){
	94
};
	if(( ( ( ( betray(COLS,TABLE[-10][ROWS - COLS]) ) ) ) + destroy(Ygritte,foo(( dog ))) / ( foo(COLS) ) / bar(( -0.14 / mislead(--550.77) ),rule(-1,1,Hodor),( TABLE[---Ygritte / ---35 + 1][-TABLE[rule()][( foo(COLS,Sansa) )]] )) / ---ROWS - Sansa )){

} else {
	Ygritte += COLS;
	x;
	y += 1
}
} else {
	if(-y){
	Sansa
} else {
	0.21
}
}
}
var Hodor = ( 0.07 ) * COLS
def mislead(Ygritte,Sansa,Sansa){
	if(-Ygritte){
	if(( -( ( -x ) ) * ( betray(( ( foo(-Ygritte,( y ),67) + COLS ) ),-( x - 60.5666 )) ) ) / COLS){

};
	Jon += 130.8
} else {
	Arya /= destroy(-35,-COLS)
};
	dog += ( ( bar(( bar(bar(),-( --COLS - -1 - -0.21 ) * ( foo(betray(1,( -40 ))) )) + -COLS + ROWS ),betray(destroy(Ygritte / destroy(Stark,Hodor,ROWS)),Stark,destroy(--( ( ROWS ) ),( ROWS * x ))),Jon + rule(Sansa,( ( ( Arya ) ) ))) ) )
}
assert Jon : "What do we say to the Lord of Death?"
var Stark = ROWS
var Stark = COLS - ( x )
def destroy(){
	if(( destroy(-0.01 * 73) )){
	Jon *= Sansa;
	if(bar(( TABLE[( foo(mislead(-y,-34,( Stark )),foo(COLS)) )][-88] ),TABLE[( ( ---0.51 ) + -( ( -0.98 ) ) )][COLS] + y / rule(Stark,COLS,destroy(rule(-bar(protect(720.8,-1)) + COLS,---Arya - TABLE[-TABLE[-Sansa / protect(-Sansa * -betray(( 32 ),-TABLE[60][ROWS / ( Arya )]))][-1]][foo(COLS,protect(-dog,0.5) / protect(rule(protect(--COLS,TABLE[-TABLE[betray(ROWS,x / mislead(COLS,y,( -0.593 ))) * ( destroy() )][Hodor]][dog])),-1))]),TABLE[TABLE[-1][( TABLE[destroy()][Sansa] )]][( -Jon + destroy(dog) )])) - -betray(( ( protect() ) ),COLS) / --x / ( --TABLE[ROWS][0.41] ))){
	x;
	mislead(1 - 27 / ( 0.38 ));
	Arya += -destroy(-Jon,-3)
} else {
	if(TABLE[( Stark + ROWS ) * dog][Arya]){

} else {
	Sansa -= rule(58 - ( ---TABLE[0.99][( 0.99 ) * x + Sansa * --350.1319 + 0.3] ) * -mislead(protect()),TABLE[63][destroy(( ( ROWS ) - foo(49) ) + ( ( -50 ) ))]);
	if(-( 290.82 ) - -y){
	COLS;
	if(( --0.98 )){
	rule(( dog ) - rule(destroy(-ROWS,( Arya ),ROWS) / ( Stark ) + ROWS),-( -( --x * -57 / y / Ygritte / -Jon ) ) / ( ( -871 ) ));
	Hodor /= -----( Ygritte / ROWS / ( foo(mislead(dog),ROWS) ) )
};
	-27
} else {
	Arya *= -1 - ROWS;
	( ROWS )
}
};
	Hodor
};
	if(-COLS){
	--foo(y / ( ( --( ( ( ( destroy(Arya,-( ROWS * -ROWS )) ) - bar(( dog + rule() * y ),-24) * -TABLE[Jon][rule(-ROWS / rule(0.49 + -foo(Stark,( ( -15 - COLS ) )) * Ygritte,TABLE[ROWS][-1 * --970.3]) / COLS,-( ( -mislead() ) ),-x)] + ( Stark ) ) ) ) ) )) * bar(-protect(bar(ROWS)),( COLS / -1 )) / ( Arya )
}
};
	( TABLE[-betray()][foo(TABLE[COLS][( x )])] )
}
def TABLE[( -0.34 * COLS ) * COLS][i] {
	dog *= COLS;
	foo(COLS) + -92 - 880.65 - -betray(protect(COLS))
}
var dog = -640.008
def TABLE[----Ygritte + TABLE[1][ROWS] / -COLS][j] {
	Hodor -= -11;
	if(foo(0.01,TABLE[-39][1 * Hodor])){
	rule(( mislead(ROWS,-destroy(-1),mislead()) / COLS ),y - ( rule(( ( ( ( ( ( mislead(Ygritte,( y ),ROWS) ) ) ) ) ) ),-Sansa) ));
	Sansa *= COLS + ( ( ( COLS ) ) );
	if(-0.47){
	Ygritte *= 1 + 940.869;
	if(foo(Ygritte,destroy(-( ( foo() ) - destroy() ),-60 + rule(bar(Jon,( ( bar(-mislead(TABLE[mislead(y)][( 39 ) + TABLE[-99][-mislead(bar(y),-Ygritte)]] / ( ( COLS ) ),Arya)) ) / COLS )) / Sansa))) * 27){
	x /= TABLE[mislead(0.35,-99)][protect(ROWS)];
	if(-Hodor){
	Jon -= 11
}
}
}
} else {
	rule(( ROWS ),TABLE[-foo(( COLS ),Ygritte,( y ))][54],COLS * 54);
	if(-78){
	TABLE[-360.3][-destroy(Sansa)]
}
}
}
assert --88 : "Nothing burns like the cold."
var Arya = -y + -52 - bar(TABLE[--destroy(( Jon ),--ROWS - -Sansa + -rule(COLS - ( 0.57 ),dog * protect(protect(Jon,Hodor,-Arya + protect(mislead(TABLE[-betray() - foo(--TABLE[ROWS / Arya][( -ROWS / Hodor )] * ROWS,0.54) + protect(--830.979,Jon + -41)][COLS] + protect() * COLS))))),COLS) / y / COLS - -1][71]) + -6
var dog = Hodor
assert -foo(-0.81) / Jon : "One can not simply parse himself"
var Stark = ( foo(-82,1) - Sansa * ( -25 ) )
assert TABLE[0.71 * -x][Ygritte] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(--bar(COLS,420.3134) * ( foo(betray(--0.72 + 930.73 - dog * -0.1,destroy(-0.87,Sansa,foo(--0.51)) / -ROWS + ( mislead(( -COLS )) ),Sansa)) ) - -protect(-Sansa))][k] {
	if(Arya){
	Jon
} else {
	--0.56;
	x += -59;
	Ygritte *= foo() * rule(dog,--ROWS)
}
}
def TABLE[Arya][k] {
	if(rule(Ygritte,betray(-48))){
	dog += ( ( ( -dog * -97 + ( mislead(TABLE[--protect()][COLS / ROWS]) ) ) - 0.53 - ( -mislead(Sansa) + --1 ) - -TABLE[TABLE[mislead(Sansa,( dog / Stark ) - rule(destroy()))][rule(( -870.2092 * ROWS ),foo())]][-COLS - TABLE[COLS][Stark]] * -42 ) );
	if(( ( dog + ROWS ) )){
	if(Ygritte){

} else {
	Arya *= ---41
};
	if(( 1 * -1 )){
	Stark *= Hodor;
	y += -22
} else {

}
} else {
	1 - -protect(-bar(-TABLE[0.41][COLS],--0.9) + -( protect() ),-0.75)
};
	if(TABLE[( ( -0.82 ) )][1] + TABLE[Ygritte][bar()]){
	x /= Hodor;
	Sansa -= -0.62
}
} else {
	Hodor -= destroy(COLS);
	-Arya;
	ROWS
};
	if(-COLS){
	x *= 31;
	Arya /= Sansa
}
}
def betray(dog,Arya){

}
def TABLE[-1][i] {
	dog;
	Jon *= y
}
assert COLS : "Fear cuts deeper than swords."
def mislead(Jon,Sansa){

}
def TABLE[mislead(COLS,( bar(( ( -rule(bar(foo(0.73)),17) ) ) - protect(( ( 0.1 ) - Ygritte ) * -75)) ))][k] {

}
def TABLE[Stark][k] {
	if(( 1 )){
	if(49){
	-0.19;
	if(-( 1 ) - COLS){
	Jon
} else {
	COLS;
	Hodor -= mislead(protect(rule(Sansa),mislead(-TABLE[x][( destroy(( bar(y) ),9 * -dog / Arya) )])))
}
} else {
	Sansa;
	-1;
	if(380.54){
	if(1){
	Jon *= -22
}
} else {
	if(TABLE[--0.92 + dog + ---dog * COLS / -( ROWS )][mislead(( y ),-destroy(( --COLS )))]){

}
}
}
} else {
	Ygritte *= -0.96;
	( -( ( --( -1 ) * ( ROWS * bar() ) ) ) );
	if(bar(ROWS)){
	Stark /= TABLE[1][Arya]
} else {
	( foo(ROWS,COLS,-( Ygritte )) );
	--0.68
}
};
	dog *= 0.67
}
var y = ROWS
def destroy(dog){
	Ygritte /= TABLE[-0.49][ROWS];
	if(-1){
	dog *= protect()
}
}
assert -0.05 : "Winter is coming"
def betray(Hodor){
	( ROWS ) / bar(-protect(mislead(-180.9)),( -( ( Jon ) ) ) - -( Ygritte ) / ( 68 ) + Sansa,( ROWS )) + ( dog - x ) + ( mislead() );
	if(( ( Jon ) ) + ( COLS ) * COLS){
	0.58
}
}
assert Stark : "What do we say to the Lord of Death?"
assert -690.56 : "What do we say to the Lord of Death?"
def TABLE[-( dog )][i] {
	Sansa -= Ygritte
}
def betray(Stark){

}
def TABLE[x][i] {
	( -Jon )
}
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def rule(Jon){

}
def TABLE[rule(0.1,betray(foo(Sansa * COLS) + ( foo(y,-620.169) ),COLS))][k] {
	if(-( COLS )){
	if(Ygritte){
	-1;
	dog
}
};
	-Stark;
	if(foo(-( ( ( ROWS ) ) ) - x)){
	Stark *= destroy(COLS,( mislead(--dog,-TABLE[( -0.13 )][-0.18 / COLS],-Ygritte) ));
	dog;
	if(-dog){
	-( TABLE[-mislead(y + Stark)][ROWS / destroy(0.53 + ( ( y ) ),Stark,-destroy(Hodor))] )
} else {
	if(-0.01){
	Ygritte
}
}
}
}
def protect(Ygritte){
	0.37;
	Sansa *= betray(rule(ROWS / -370.1,1,COLS) / ( --0.68 ),-rule(( Stark )))
}
def TABLE[betray(( ( dog ) )) * -bar(Hodor)][j] {
	Ygritte *= 10
}
def betray(){
	Ygritte += ROWS;
	y += Ygritte / --ROWS
}
assert -( x ) : "Winter is coming"
def protect(Arya,Sansa){

}
assert 0.8 : "Winter is coming"
assert ROWS : "Fear cuts deeper than swords."
var Arya = -COLS
var dog = Jon
assert TABLE[-( -bar(destroy(( 10 ),-0.33,-1)) / protect(Stark,( COLS )) * betray(Stark,( 11 * TABLE[--foo(TABLE[( -48 * ( ( COLS ) ) )][--1],-36) - Arya][COLS] )) + rule() / rule(( -( Hodor ) ),foo(( rule(( ( --1 ) )) ))) - Sansa / ( ( ( Arya ) ) * --94 ) ) / ROWS][0.8] : "What do we say to the Lord of Death?"
def TABLE[( rule() * ( bar() ) / --ROWS )][i] {

}
def foo(Jon,Jon){
	if(( COLS )){
	if(( ( ( ( ( betray(COLS) ) ) ) ) )){
	COLS;
	Arya -= TABLE[Sansa][0.37]
};
	protect()
} else {
	Hodor;
	if(ROWS){
	-protect() + COLS;
	Hodor -= Jon;
	y /= -65
}
};
	TABLE[( 0.79 * y )][Stark]
}
def bar(Jon){
	Arya += x
}
def bar(x,y){
	if(-34){
	Arya *= -5;
	Arya *= ( mislead() ) + ( x );
	if(rule(Stark,97) + --860.76 * ROWS){

} else {
	dog += betray();
	x /= destroy(--ROWS,Stark,( -Hodor ))
}
};
	( rule(0.4 * ( ROWS / -ROWS ),1,foo()) )
}
def mislead(Hodor){
	Hodor /= Stark;
	y / destroy(( dog * -1 * ROWS ),rule(ROWS));
	0.37 * destroy(foo(TABLE[COLS - ( -( ROWS + --( ( ( -x - Sansa ) ) ) ) / destroy(( -TABLE[dog + -destroy(( ( 92 ) ),390.06)][protect(-0.08,ROWS) / 0.99 / bar()] - ( ROWS ) / TABLE[rule(( foo(-0.15 * TABLE[bar(Sansa + -COLS,( -510.89 ) / -Sansa)][0.7],-0.31) )) / dog][( mislead(COLS,ROWS,-( Jon ) * COLS) )] ),( ( COLS - ( ( --( COLS ) - Stark * -( -TABLE[Hodor][TABLE[COLS][31]] ) - foo(ROWS,protect(-770.982 - ( -0.43 ))) / Jon ) ) ) )) ) + 0.83 - mislead(( -( TABLE[59][ROWS] ) ) - -3,destroy(bar(),( -( -Stark ) ),x))][ROWS]))
}
def foo(Stark){
	if(( ROWS )){
	TABLE[-23][( destroy(900.3,0.46) )];
	Ygritte += 83
} else {
	dog += ( rule(Ygritte,protect(20,protect(Arya * y * -34,-TABLE[foo() + mislead(COLS)][( destroy(-( x * ( Hodor ) ) + 1 / TABLE[( ( -0.26 ) / 0.06 )][y + -( Arya * Jon + ( -betray() ) / 0.85 ) * -6 + TABLE[Sansa][COLS * COLS]],-44 - rule(( ( TABLE[( ( y ) )][--( COLS ) + foo()] ) )) - COLS - -ROWS,TABLE[-x][62]) ) + ( ( ( 60 ) ) ) - Hodor]) + COLS - 63 * -ROWS,31 + mislead(( ( rule(bar(-( COLS ),( ( --mislead(-0.04) - destroy() ) ) * 4 - -( -0.85 )),COLS,-0.23) ) ),---( mislead(y,Ygritte,-98 / mislead(betray() / destroy(-1) / TABLE[( -( -Hodor ) )][( Jon )],-36) - y - COLS) ) + -0.17) - TABLE[-470.06][dog / 23 * TABLE[( -77 )][ROWS]] / dog - mislead(mislead(-foo(dog) - 47)) * ( ( ( betray() / rule(COLS) * ( x ) ) ) ) + destroy(rule(),x))) + 790.5 / x + 0.72 / -ROWS + mislead(Jon,-42) ) * Ygritte
}
}
def destroy(Jon,Ygritte,Jon){
	if(-63){

} else {
	( -92 );
	-destroy(rule(( betray(TABLE[foo(TABLE[( 140.229 )][-( ( Arya ) )],-0.82)][destroy()],540.287) * ( ( mislead() + ( rule(( 10 - bar(( Stark + 400.6557 )) * 41 )) ) / ( -mislead(ROWS) ) - mislead(foo(),Arya / ROWS) ) ) )),-1,-mislead());
	if(Arya){
	if(foo()){
	Arya;
	-( -0.63 )
} else {
	bar(( ROWS ));
	COLS
}
}
};
	-1
}
assert -0.72 + ( 0.18 ) - ( TABLE[rule(--0.18,protect(ROWS,x - Hodor / ROWS))][COLS] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "Winter is coming"
def TABLE[0.17 + -33][k] {
	if(-( 0.61 )){
	Hodor /= TABLE[COLS][( ( -destroy(-Hodor,COLS,( foo() )) ) )]
};
	if(COLS){
	if(40){
	mislead(( ( y ) ));
	if(( COLS )){

} else {
	if(0.54){
	Jon /= ROWS
};
	Sansa *= ( -COLS )
}
}
}
}
assert COLS : "Nothing burns like the cold."
def betray(){
	Stark -= -Hodor / Hodor;
	-( Stark )
}
def bar(Sansa){
	Sansa *= protect(y)
}
def TABLE[-( destroy() )][k] {
	y *= Jon / COLS;
	if(( 26 )){
	if(( TABLE[-COLS / -ROWS * TABLE[-48][80] - mislead(Arya,( ( bar(Sansa,--( rule(ROWS,-Stark - dog * ROWS) - 1 ),700.9351 + ( TABLE[( bar(81 / Stark,bar()) )][-Hodor] ) / -7) ) ))][( ( ( 0.32 + betray(rule(),-Jon,( 0.9 )) + ( -foo(bar(Sansa + ( TABLE[-destroy(-42,-0.77,( TABLE[COLS][destroy()] ))][( betray() )] ),Sansa,-100.353),rule(y)) - TABLE[protect(-( ( protect(Arya) ) * bar(( 0.06 )) ) + x,x)][( ( -( -1 ) ) )] + -( ( TABLE[rule(( ( ( ( mislead(Sansa,( Sansa / destroy(-Hodor,mislead(( bar(protect(-COLS + protect(ROWS,destroy(TABLE[dog - ROWS][-91])))) ),-Hodor,16)) ) - ( betray() / betray(TABLE[TABLE[y][Sansa]][Ygritte]) )) ) ) ) ))][0.54] * TABLE[( ( bar(-0.83 / -79 * -90 + ( rule(-destroy(ROWS,( Ygritte + destroy(( Arya )) ),-( mislead(710.18,-90 + 1) / Hodor ) * -0.9 - mislead(TABLE[Stark][-0.33],750.4846))) ),TABLE[bar() / COLS - -13 * destroy(Sansa,( Hodor ))][-73] * Jon) ) )][Arya] - destroy(TABLE[( Hodor - foo(---betray(( COLS ) + Stark,bar(Arya,mislead()),COLS),mislead(1,--0.13 + mislead(--0.58 / ( -Arya - 770.403 / ( ROWS + ( destroy() + Stark + -0.21 ) ) ),( -( ( TABLE[( ROWS )][0.73 / betray(protect(( bar() ),Ygritte))] ) ) )) * COLS * -x,-1)) )][ROWS / TABLE[Stark][( TABLE[dog][0.01] + Ygritte )]],-Sansa) - -( rule(Ygritte,ROWS) ) ) ) - ROWS ) ) ) )] )){
	Stark -= 140.688;
	Hodor -= COLS * --( -270.98 ) * --Hodor;
	if(1){
	if(--( COLS / Jon ) / Sansa){
	790.6;
	( -TABLE[0.13][protect(--( -( -0.04 ) + ( -Jon ) ))] )
} else {
	x -= foo(-0.1,( rule(--0.44,( mislead(ROWS,betray(destroy(-TABLE[Sansa][bar(81,Stark)],( -0.9 )) * mislead(),rule(-0.62,( ( ROWS ) ),Arya))) )) ));
	1;
	-34
};
	Arya -= y
} else {
	if(15){
	if(destroy(bar(protect(( 950.6164 ) * ( ----COLS ) * Hodor,COLS,protect())),destroy(88,COLS,betray(-rule() + ( Hodor ),-16)))){
	COLS
} else {

}
} else {
	if(( protect(( 1 ),COLS) )){
	0.94;
	if(--( ROWS )){
	-( -( dog - TABLE[dog][TABLE[protect(59)][Jon]] ) )
}
} else {

};
	Stark += y
};
	--1;
	Ygritte /= -( ( dog ) )
}
} else {
	rule(82,( -0.29 ),( ( y + Sansa * x ) - --220.855 - destroy(x) ));
	COLS
}
}
}
def protect(Jon,Ygritte){
	if(TABLE[( 0.97 )][1]){
	Arya /= Sansa;
	if(( 0.6 )){
	x;
	if(Hodor / ( TABLE[TABLE[destroy(Arya,mislead(ROWS * ( TABLE[betray(-29 / ( Sansa ),-----dog / -ROWS / ( ( COLS ) ) + mislead(( -46 ),TABLE[ROWS][ROWS],0.72) + 0.97 / ROWS,ROWS)][dog - TABLE[protect(-750.048)][betray(-70) + -x] * ROWS] )))][-rule(1) / ( y )]][650.513] )){
	dog -= -rule(( -destroy(ROWS + Hodor - betray(),( ROWS )) ),TABLE[ROWS][Arya],1 - -( destroy(Jon) ));
	-protect(TABLE[--63][-1 * Ygritte]) + 1
}
} else {
	if(Sansa){
	dog /= -( Arya );
	---COLS
}
};
	y
} else {
	destroy(0.08);
	if(850.5){
	-( mislead(protect(---( COLS ) / Hodor,rule(mislead(),betray(( COLS ),Ygritte + ( dog ),y + 0.03),TABLE[78][59 * ROWS]))) - ( TABLE[bar(-5,-1)][( ( destroy(-0.98 + -dog + rule(--21),65,COLS) ) )] ) )
} else {
	( -85 );
	if(rule(-0.72,bar(-69),Hodor)){
	1
}
}
}
}
def TABLE[-TABLE[bar() + COLS / ( ROWS )][foo(TABLE[TABLE[Jon][-betray(-destroy(x,COLS),( --betray(0.57 - COLS + foo(-( protect(( y )) + mislead(COLS,-62) ) / TABLE[-400.75 + foo(( protect() ))][Hodor - betray(( ROWS ))] * -foo(betray(--( ( -800.04 ) ),ROWS),( 1 )),( -( -82 - betray(ROWS) ) ))) / Stark ))]][rule(-42,mislead(-Stark / ROWS,0.36),COLS)],TABLE[10][( COLS )])]][j] {
	dog - foo();
	Ygritte /= -85
}
assert ( --0.25 ) : "One can not simply parse himself"
def TABLE[44][i] {
	Arya *= -25;
	x /= TABLE[betray(-94) * ( Hodor )][COLS]
}
assert -( 4 ) : "What do we say to the Lord of Death?"
def destroy(y){
	Arya *= ( -COLS )
}
var Arya = TABLE[( bar(-77,foo(dog,-470.3651 + -930.7647,Sansa),Sansa) )][ROWS]
var dog = -0.99
var x = mislead(rule(-y))
var Hodor = ( dog )
def TABLE[Ygritte][i] {
	if(y){
	x /= 0.25;
	Stark -= TABLE[0.83][( ROWS ) - TABLE[COLS][rule(protect(x,-11))]];
	Hodor *= --0.35 / x
}
}
var dog = ( COLS )
def TABLE[( ROWS )][i] {
	if(-0.84){
	-1
};
	y *= ( -( -1 ) )
}
var Ygritte = ROWS
def protect(Hodor,Sansa){

}
var Arya = ROWS
def bar(y,Arya){

}
def rule(dog){

}
assert ( ( -( ( COLS ) ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.15][i] {
	if(protect(-destroy(( x ),( Arya )),-1)){

};
	if(-Arya - protect(protect(protect(ROWS + ( Sansa ) / betray(( -870.82 ),rule(),Arya) / COLS),ROWS / ( mislead(0.66) )),-1,-1000.78)){
	Sansa + destroy(protect(bar(betray() / protect(( ( --dog ) )),-84),( ( ( betray() ) ) )),-TABLE[Hodor][--TABLE[-0.62][Jon]]) * ( TABLE[destroy(---0.9 * ----Jon - -x * -0.46,0.15 / mislead(TABLE[ROWS][-53],-dog))][TABLE[0.05][betray()]] )
} else {

}
}
def TABLE[420.919][j] {
	dog
}
def mislead(Arya){
	if(Hodor){
	if(-ROWS + x - betray()){
	if(-( -rule(COLS,( TABLE[COLS][--1] )) / ROWS + 0.12 )){
	x *= Hodor;
	if(COLS){
	( Sansa - COLS )
} else {

}
}
} else {
	-1;
	if(TABLE[( protect(-72) )][-39]){

} else {

}
};
	rule(rule(-( TABLE[Hodor][( dog )] )),680.0726);
	if(bar(y,Sansa)){
	Ygritte += destroy(Stark,( destroy(TABLE[Sansa][-0.55],-COLS / TABLE[TABLE[TABLE[destroy(740.402)][COLS]][rule(protect())]][-680.3 / ROWS + mislead(Ygritte,x)]) ));
	if(Hodor){
	( destroy(( destroy(Stark + 1) )) );
	if(TABLE[( betray() )][Hodor + -82]){
	Ygritte /= ( TABLE[protect(destroy(---( Arya )),( --( Hodor ) - Arya )) + 60.512][bar()] * --1 )
} else {
	-dog;
	( rule() + rule(-600.26,rule()) + -0.74 )
}
}
} else {
	( Sansa );
	Sansa -= -1;
	foo(TABLE[x][foo(foo(-0.7),foo(Arya + COLS,1),bar())],-63,-rule(( x ),--730.86))
}
} else {

};
	if(( ROWS )){
	-mislead() * -ROWS
} else {
	( ( Hodor ) )
};
	mislead(Jon,Jon)
}
def TABLE[-foo()][i] {

}
var Arya = ( -97 )
def destroy(x,Jon,Hodor){
	TABLE[TABLE[80.763][betray(-Arya) * ( Sansa )]][bar() + destroy(COLS,destroy(Hodor))];
	y *= -destroy(foo(),dog,( betray() ));
	y += ( ROWS / betray() )
}
var Jon = TABLE[( Hodor )][betray(( 0.63 ))]
var Hodor = Hodor * -57
assert 0.97 : "Fear cuts deeper than swords."
var Hodor = --ROWS * ( --0.85 - foo(Ygritte / 1,destroy(Jon,destroy(0.56,ROWS,( betray(bar(( 27 )),( -99 )) )) * --57)) )
assert -ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[Arya * ROWS][protect(COLS + rule(-ROWS),22 - rule(-Arya))] : "What do we say to the Lord of Death?"
assert Sansa : "Winter is coming"
var y = dog
var Jon = --61
def betray(Arya,y,Jon){
	16;
	if(betray(1,TABLE[--y][( foo(( 70 ),TABLE[-protect(Hodor,COLS,COLS / ( -COLS ) * betray(-Ygritte,-0.14,-0.67))][destroy(-COLS,Hodor,TABLE[protect(TABLE[39][rule(Ygritte,destroy(-( COLS ),-0.32,50))]) - mislead(( 0.92 ),Sansa)][-1])]) ) - ---Jon * COLS - ( dog ) + COLS])){
	if(-ROWS){
	if(protect(Arya,0.05) / betray(( 650.809 ) - 47 / ( --Arya / -foo(Stark,( x )) )) / ( betray(78,TABLE[-85][-bar(COLS)]) )){
	if(-53){
	Jon *= -( ( betray() ) );
	dog *= rule(Jon,-Stark / rule(protect(ROWS,( Ygritte ),ROWS)),-1);
	if(( -protect() )){
	foo();
	Hodor /= dog
} else {
	x;
	TABLE[Jon][-( ( 47 ) )];
	COLS
}
};
	Jon *= TABLE[( COLS )][Hodor]
} else {
	if(ROWS){
	betray(( Ygritte ),COLS);
	Arya
} else {

};
	( y )
};
	Stark += destroy(bar(-bar() * -1,-210.06))
} else {
	-TABLE[-ROWS][-( 0.13 )];
	if(210.4){
	if(COLS - ( TABLE[-180.9][ROWS] ) + mislead(-77 / Stark) * -19){
	Arya *= -0.38;
	TABLE[-Ygritte][betray(( y ) + TABLE[TABLE[ROWS][foo(mislead(ROWS))]][-0.13])]
}
} else {
	( bar(bar(TABLE[protect(-( -Hodor ) * Stark)][dog] * betray(-rule(ROWS,ROWS) - -ROWS)),TABLE[( -84 )][-0.07]) )
}
}
};
	if(0.51){
	Ygritte -= ( -880.782 );
	if(-x + ( protect(30.1) ) / COLS){
	if(COLS){
	if(1){
	37
} else {

};
	if(-1){
	if(dog){
	if(Ygritte){
	Jon *= Hodor;
	Jon *= COLS
} else {
	y += COLS;
	foo();
	if(( -650.9 * TABLE[Arya][85] - COLS )){
	Jon -= ( ---11 + mislead(-ROWS) );
	-280.122
}
}
}
};
	mislead()
} else {
	x -= mislead(-x,Arya);
	y -= ( -59 / Jon - -71 * dog );
	x *= ROWS
};
	if(Sansa){
	if(( -foo(COLS) / -COLS - -0.08 )){
	Ygritte -= rule(-260.5,( Arya ),COLS)
} else {

};
	-TABLE[Ygritte][-COLS + Hodor];
	x /= destroy(-Hodor,TABLE[x][( ( -( foo() ) ) )])
} else {
	bar(-TABLE[( ( ( ( TABLE[( Jon / ( Arya ) )][( ( foo(destroy() * betray(protect(( TABLE[Arya][-COLS * TABLE[0.85][Stark]] )),1) * -0.68,foo(-Jon / ( ROWS - ROWS )),-ROWS) ) )] ) ) ) )][( 61 )] / rule(1,y),Stark);
	y /= ( 46 )
};
	( -Jon / -mislead() - -ROWS )
}
} else {

}
}
var Arya = -TABLE[---COLS][--ROWS]
assert ( ( -( ( -y ) ) ) / COLS ) : "Nothing burns like the cold."
var Arya = ( rule(-73,betray()) )
def TABLE[foo(-Sansa,( bar(( destroy(dog - -1,--0.78) ) - COLS) ) / foo(bar(0.26)))][i] {
	Jon -= --foo(Hodor,TABLE[destroy(-mislead(Ygritte * 1))][( --1 - --( --foo(Sansa) / ( ( ( Jon / TABLE[bar(-920.6518)][Stark] ) ) ) ) )],COLS);
	if(bar(-Sansa,( 0.39 ),-67)){
	-mislead(( Arya ),Hodor);
	Jon -= ( rule(-( Arya ) - ( rule(( ( ( 620.604 ) ) ) * mislead(bar(-COLS)),-0.71) )) * -52 )
} else {
	destroy(COLS,( Hodor ));
	Jon
};
	y * ( mislead() ) * ( --1 ) * COLS + ROWS
}
assert ( TABLE[ROWS][Arya] ) : "What do we say to the Lord of Death?"
assert 39 : "Fear cuts deeper than swords."
def TABLE[Ygritte][j] {
	( TABLE[( -0.93 )][( foo(TABLE[Sansa - betray(( COLS ))][rule(Hodor)],y) )] );
	if(y){

} else {
	if(( COLS - ---y - ( ( ( Ygritte ) ) ) - Stark )){
	if(COLS){
	Jon += -( Ygritte * Ygritte ) * -0.97
} else {
	if(destroy(ROWS)){
	if(( 23 )){
	-0.92;
	y -= -TABLE[TABLE[COLS * Ygritte][ROWS]][Stark]
} else {
	Stark *= protect(Arya);
	Sansa
};
	( mislead(COLS,Hodor + ---COLS) )
};
	protect(-ROWS,--0.43,( -0.3 ) / --0.31 / destroy(COLS * ROWS * -1,-foo(Jon,Sansa),bar() / Arya))
}
}
};
	if(Hodor){
	x /= -ROWS;
	--640.95
}
}
var Jon = -( Stark ) * --dog
assert -67 / ROWS + -betray(-( bar(1) ) / rule(rule(( -( -1 ) * betray(-0.72 + foo(( dog )),Arya) ) * -y * TABLE[( ( rule(TABLE[Stark][1],85) ) )][--( --670.22 / ( bar() ) * TABLE[0.36 - dog][-TABLE[rule()][( -640.099 - ( y * --0.57 / ( -1 ) / -1 / mislead(75,( 11 )) ) ) / ( ( y ) )]] - 1 )] - ( -1 )),( ( y ) / protect(-0.1,( y )) + betray() )),-0.58 * 0.02) - ( protect(-foo(Arya,mislead(COLS,-( TABLE[( --530.792 / ROWS )][betray(( y / ( ( ( -Jon ) ) ) ),foo(-32,1))] / protect(-1,Hodor) * COLS * ( rule(Sansa + 0.5,TABLE[TABLE[Sansa][TABLE[Sansa][betray(( Ygritte ) - y,( Ygritte ),( 45 ))]]][TABLE[ROWS][-rule(COLS,TABLE[COLS][betray(0.87,-( ( ( x ) * --0.13 * ( mislead(COLS) ) / ROWS / TABLE[-foo(TABLE[mislead(-1,Hodor / ( ( mislead(COLS * ( ( --580.704 ) )) ) / dog ),( --0.38 * x / -( ( -Sansa ) - ( -destroy(( ( ( bar(COLS,x) ) ) )) / ( -0.2 ) ) + ROWS ) )) * 0.57][( TABLE[protect(-mislead(( Hodor ),( ROWS ),( ROWS )),Stark / Sansa,( --0.26 ))][TABLE[-57][0.43 * Arya / 0.58 + Ygritte]] )])][betray(foo(y),--910.45,-ROWS) * -destroy(( Sansa ),( TABLE[protect(Ygritte,-0.63,( y )) - -Ygritte][Sansa] ),0.24)] ) ),Arya)])]],-( ( TABLE[( ROWS )][-Jon] ) )) ) / ROWS / Hodor ),-5 / -470.511),bar(620.23))) ) : "What do we say to the Lord of Death?"
assert -11 : "What do we say to the Lord of Death?"
assert Hodor : "One can not simply parse himself"
var dog = -980
var Stark = --0.11
assert Sansa : "One can not simply parse himself"
def TABLE[-0.25][j] {
	-0.78;
	if(dog){
	if(Jon){
	x /= TABLE[Sansa][--protect() + Stark * mislead(TABLE[COLS][protect(0.85 + ROWS + --18) / -( -COLS * -TABLE[-( -16 )][-1] )])];
	Hodor *= foo(mislead(dog,-93));
	Sansa /= ROWS
} else {
	Jon;
	74
}
} else {

}
}
assert 1 : "Winter is coming"
var Arya = protect(-24,Arya - ( rule(-( ( destroy(( 32 )) ) ),rule() / 22 * ( -0.77 )) - ROWS + Stark ))
assert betray(ROWS + -390.4,protect(Ygritte),mislead(-TABLE[COLS][( x + y )],( Arya ),0.77)) : "Nothing burns like the cold."
var Hodor = ROWS
def destroy(Arya,x){

}
def protect(Arya,x){
	if(310.286){
	Stark -= TABLE[COLS][-66]
}
}
def rule(Stark){

}
def TABLE[rule(destroy(-COLS * 320.273,0.8,ROWS),bar(( TABLE[270.553][Jon] + COLS - ROWS )))][i] {
	Jon *= x;
	rule(-0.9 / TABLE[-Hodor][COLS] * bar(-y),-dog / ROWS,( -bar(-20 / destroy(-COLS - 50.5285,0.87)) - betray(COLS) )) * 57
}
assert COLS : "Nothing burns like the cold."
def protect(Arya,Arya){

}
var Stark = betray(0.4) + bar()
assert COLS / 96 : "Winter is coming"
var Arya = -0.3
def TABLE[bar(mislead(mislead(Jon,-1,rule())),-( ( foo(bar(( -foo(COLS,protect(Sansa)) ))) ) ) * x,--y) * protect(220.4 * -45,( mislead(( ROWS ) / -protect() - -97) ))][i] {
	if(bar(-0.23)){
	-Jon;
	if(( -ROWS )){
	Stark += 75
};
	0.72
}
}
def TABLE[Hodor][i] {
	y += 0.87;
	if(COLS){
	( bar(ROWS,0.89 - -93 / ( ROWS ) - 910.949,--protect()) );
	if(-470.865){
	Arya += -99
} else {
	if(-mislead(COLS + 0.04 - 0.29,( COLS ))){
	Jon /= ( Sansa )
} else {

}
}
} else {
	if(Ygritte){

}
}
}
def TABLE[mislead()][k] {
	if(91){
	TABLE[Stark][( COLS )];
	if(-Hodor + --0.6){
	dog;
	TABLE[-920.051][x];
	--Stark - ROWS
} else {
	bar(-betray(COLS),ROWS)
}
}
}
assert rule(94) + COLS : "Winter is coming"
var Jon = ROWS
assert Arya : "What do we say to the Lord of Death?"
def TABLE[-TABLE[-( ( ---1 ) )][( COLS )]][k] {
	Sansa += betray(--COLS / ( Stark ) * dog);
	Hodor += foo()
}
def TABLE[betray(( -destroy() ))][j] {
	if(-960.99){
	-TABLE[Arya][-58];
	( protect(betray()) ) + --ROWS
} else {
	if(98){
	if(-0.58){

};
	Sansa -= bar() / -( -TABLE[betray(Hodor,( 73 ),ROWS - ROWS * 860.063 + -1 / y)][y] );
	if(--28){
	Ygritte -= -Stark
} else {
	if(Stark){
	if(( ( x ) )){
	dog *= 7;
	if(( 490.2 )){
	TABLE[( -( -mislead(100) ) )][-0.18]
} else {

}
}
}
}
} else {
	Stark /= COLS;
	if(destroy(( Arya ))){

}
};
	Arya *= COLS
};
	-1
}
def TABLE[y][j] {
	Arya -= ( --destroy(-0.06,( 550.913 ),-( --( -14 ) )) );
	Sansa
}
assert -0.54 : "One can not simply parse himself"
assert --bar(( Hodor )) : "Nothing burns like the cold."
def destroy(Hodor){

}
def protect(Hodor,Sansa,Jon){
	rule(-bar() - 1);
	if(( -rule(Stark * TABLE[protect(foo(foo(),( destroy(( Arya )) ),( 970.702 )),44 * -COLS / dog,( Ygritte + TABLE[foo()][ROWS] ))][x]) )){

} else {

}
}
def destroy(Jon){

}
assert 0.72 : "What do we say to the Lord of Death?"
assert ROWS : "Winter is coming"
assert foo(-rule(-0.01 * 0.08 + -34 / --rule(),90.29)) : "Nothing burns like the cold."
def destroy(Hodor,Hodor){
	y += ( Arya );
	dog;
	-bar(mislead(),COLS,--3)
}
assert -500.039 : "One can not simply parse himself"
assert ( dog ) : "Nothing burns like the cold."
def TABLE[-( dog )][k] {
	Ygritte += -530.506;
	TABLE[Sansa][betray(( ( x ) ),bar(dog / -ROWS,-0.23,( 0.78 + ( TABLE[( Ygritte )][Sansa + bar(-betray())] ) )),-92 - TABLE[-28][TABLE[1][--bar(Arya,( -11 ),( -COLS )) * betray() * -Stark]])]
}
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[foo(--0.21) / dog][j] {
	( ( -( -1 * ( ROWS ) ) ) );
	-740.592
}
assert bar() : "What do we say to the Lord of Death?"
var y = y
assert protect(( 420.7 )) : "One can not simply parse himself"
assert -TABLE[1][( --betray(-foo(( TABLE[dog / dog][Hodor] ),Hodor),-83) )] : "One can not simply parse himself"
def protect(dog){
	Jon += destroy(mislead(( 1 ),ROWS / -0.08))
}
def rule(){
	if(Jon){
	Ygritte
}
}
var Hodor = TABLE[1][-1]
assert ( COLS ) : "Nothing burns like the cold."
assert ( ( -81 * -y ) ) : "What do we say to the Lord of Death?"
def TABLE[0.25][k] {
	ROWS
}
assert 530.9498 : "Fear cuts deeper than swords."
var Hodor = ROWS
var Hodor = Sansa
def TABLE[Hodor][j] {
	Sansa -= dog
}
def TABLE[COLS / COLS][i] {
	if(-Sansa){
	dog /= -14 + --protect(rule(( ( 9 ) ),( -24 ),-1) - --47 / Stark,450.4552 / ROWS,920.7105) - Arya;
	Sansa
} else {
	45;
	-( --foo(-( -Arya + Stark )) );
	Stark += -79
}
}
def TABLE[protect(Ygritte,mislead(Arya,TABLE[COLS][( ROWS )]),--1) * ( Stark + ( ( x ) ) / -Arya ) + ROWS - destroy(-1,mislead(-72),Sansa)][j] {
	1 / ( -0.25 );
	0.31
}
def destroy(y){
	y -= TABLE[-destroy(-rule(( ( betray(Arya * ( -dog )) ) )) * 2 * -Sansa)][dog];
	Ygritte += ROWS
}
def TABLE[foo(-rule() + Sansa / dog - ( ROWS ) / ROWS,-1 / ( ( ( Hodor ) ) / Ygritte ) + ( TABLE[( ( ( --95 ) ) )][ROWS] ) / dog,COLS)][i] {
	if(betray(-1,bar(( -( -COLS ) - -90 )))){
	Ygritte *= Stark
}
}
assert TABLE[-COLS - ( 34 )][rule()] / Hodor / -COLS : "One can not simply parse himself"
var x = betray(Ygritte,dog)
def TABLE[mislead(( Ygritte ),( ( --( -COLS ) - -y ) )) / bar(dog,COLS)][i] {
	if(-( TABLE[36][rule(-( -0.29 ) - protect(ROWS),protect(Ygritte / Jon + Ygritte),Jon + foo())] + dog + ( ( Sansa ) ) * Jon )){
	Sansa -= --0.2 - -Arya * -ROWS;
	if(( ROWS )){
	Jon;
	if(-1){
	Hodor /= ( Arya + ROWS + 810 );
	y;
	if(Ygritte){
	if(( TABLE[betray(dog,TABLE[ROWS - ( --Stark - -betray(-destroy(---COLS,-0.08),COLS) - betray(COLS) + rule(bar(-230.728,ROWS)) / COLS ) + 84 * ( ( ( 96 ) * 0.59 ) )][Hodor],foo(-ROWS))][( foo(-TABLE[TABLE[mislead(0.49)][38]][Sansa]) )] )){
	if(ROWS){

};
	x += ( 65 );
	-11
}
}
}
}
} else {
	-COLS;
	( ( 76 ) ) * TABLE[protect(protect(( ROWS )))][rule(( Hodor ) + y)]
};
	0.41
}
var x = ( bar(-0.16) / Sansa )
assert TABLE[TABLE[-1][TABLE[rule(-Hodor,-COLS - -650.1 / -TABLE[( COLS )][mislead(-91,--470.025)])][510.9 - betray(0.42,foo(mislead(Ygritte,COLS),COLS,ROWS * Ygritte),-( y )) - ( rule(61,-( --0.63 ),ROWS) )]]][ROWS] : "What do we say to the Lord of Death?"
def TABLE[betray(( Sansa ),betray(),Ygritte)][j] {
	Arya /= COLS
}
def protect(Sansa,Ygritte,Arya){
	Hodor -= Arya
}
var Ygritte = ( Hodor ) + -15
assert -ROWS * ( 70 ) : "Winter is coming"
def TABLE[-0.87 + COLS][i] {

}
assert ( ROWS / foo(rule(Stark,( -( betray(0.56 / ( ROWS ),---( ( Jon ) )) ) * betray(1) )),dog - y) ) - ( COLS ) : "Fear cuts deeper than swords."
assert foo(Stark,bar(),betray(--80.488 * ( x ) - ROWS,-ROWS) * bar(-1)) : "Nothing burns like the cold."
def TABLE[( foo(-520.1) )][j] {
	Sansa += 0.42;
	COLS
}
def betray(Hodor,Ygritte){
	x *= bar(0.75,Jon / COLS)
}
assert bar(-1,ROWS) : "What do we say to the Lord of Death?"
assert 0.44 : "Winter is coming"
def TABLE[--1][i] {
	( -0.5 ) / -( foo(----protect()) ) / ( 30 ) / 510.6;
	if(-89){
	if(ROWS){
	Ygritte *= -0.43;
	rule()
};
	if(ROWS){
	if(-( COLS )){
	if(( bar(( Jon ),--0.86) - protect() )){
	x += -360.68;
	if(y){

}
};
	Sansa *= Stark
} else {
	( -( protect() ) );
	dog -= ( TABLE[foo(protect(-( -29 * COLS ) / Ygritte,bar(-590.7577,-y - -( COLS ) / Stark,COLS) - ( COLS )) * Stark,dog,COLS)][( ( -1 ) )] );
	TABLE[-34 - COLS * bar(----1,foo(TABLE[betray(( -28 ),Stark + Arya)][-COLS] - y)) / TABLE[ROWS][520.0089] / 0.3 + betray(Arya,-dog)][-920.2]
};
	if(mislead()){
	COLS;
	if(TABLE[58 - -0.51][-0.42] / -0.74 + Arya){

}
} else {
	if(-ROWS){
	-0.69
};
	if(( --TABLE[( ( mislead() ) ) / -59 + 60 - mislead(TABLE[79][betray(destroy(( ( 0.98 ) )),-72)])][75] - -( ROWS ) ) / -( 30 )){
	if(COLS){
	Stark += Jon
} else {
	Arya /= COLS
}
} else {
	if(rule(rule())){
	y *= --ROWS;
	if(( ROWS )){
	y += --Hodor
};
	if(1 * 0.25){
	if(0.46){

} else {
	Arya += -( 810.85 );
	if(-26){
	if(TABLE[Stark][( bar() )]){
	if(( -93 )){
	400.8182
} else {

}
} else {
	if(( TABLE[( COLS )][-83] ) + dog * COLS / Ygritte - 17){
	dog *= Hodor
}
}
} else {
	dog *= Sansa;
	Hodor *= TABLE[-( 44 )][-ROWS] + ( COLS )
};
	foo(--0.11 + foo(),( betray(COLS,Sansa,bar(-mislead(-1))) ))
};
	betray(( ( rule() ) ),( Jon ) / ROWS);
	Ygritte
}
} else {
	if(0.46){
	-0.82
}
}
}
}
} else {

};
	Jon += Hodor
}
}
def TABLE[( COLS )][j] {
	if(-destroy(--Hodor)){
	-0.53;
	Jon += -53
}
}
assert ( ( ( ( TABLE[TABLE[COLS][0.79]][--Hodor / ( ( ROWS ) ) * y - --0.34] - Hodor * -dog ) ) ) ) : "Nothing burns like the cold."
def TABLE[-0.86][i] {
	foo(-27,( mislead(--ROWS / betray(( TABLE[280.373][mislead(rule(0.83 + dog,1)) + -0.63] * -mislead(TABLE[( -( -0.2 ) * -0.77 )][-COLS],destroy(( -30 ))) ),-betray(COLS,mislead(( ( ( --0.3 ) ) )),( --0.95 ))),( ( ( -TABLE[Stark][bar(bar(-bar(),Sansa),--TABLE[Arya][dog])] ) ) )) ));
	ROWS
}
assert betray(( ROWS / ROWS / -Sansa / -( ROWS ) - ( Hodor ) ),0.68,( -42 )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Jon
assert ROWS * -( Stark - Ygritte ) : "Fear cuts deeper than swords."
def bar(Jon,Stark){

}
def TABLE[dog][k] {
	if(63 + TABLE[y][COLS]){
	( destroy(( ROWS * -protect(( --0.05 / TABLE[Hodor * 1 - ( ( Sansa ) )][-ROWS] )) ),-Arya * ( bar(TABLE[Ygritte][Jon] / TABLE[COLS][COLS / ( -0.47 ) * ( -( -mislead(TABLE[foo(-( ROWS ) - -1 * 800.471)][( bar(( x ),-( ROWS ) * ( -TABLE[-52][-bar(destroy(Arya),( Jon ))] )) )] + betray(( ROWS ),( 560.64 ),( x )) * ROWS,( -bar(( COLS ),-destroy(-( ( Sansa ) ),( ( -1 ) ),1),--ROWS * Sansa) )) * 10 ) ) * 0.24 - -y],protect(-80,( ( Stark ) ))) )) ) - 3 * betray(--1,( -( --0.98 ) / mislead(960.68,( -70 )) ),-betray(mislead(-ROWS,dog),dog,TABLE[-0.72][ROWS]) - ( ( -dog ) ));
	if(protect(--ROWS * TABLE[Ygritte / -COLS * --rule(COLS)][mislead(mislead(Ygritte,( -60 + rule(Jon - Stark,-64,ROWS) - -dog )),-850.96)],bar(ROWS,ROWS)) - ROWS){
	if(-0.6){
	if(( ( Sansa ) + -0.29 )){
	if(TABLE[( Ygritte ) - COLS][1]){

};
	if(COLS){
	bar(-ROWS,( Ygritte ),47)
} else {
	Ygritte;
	Hodor /= protect(Hodor,Jon)
}
} else {
	if(--COLS){
	if(betray()){
	Ygritte
} else {
	if(-0.27 / --0.28){

} else {
	TABLE[mislead() / TABLE[-dog][( ( protect(-COLS,x) ) - -35 * y )]][0.53]
};
	87
}
} else {
	Hodor *= Stark
};
	-ROWS / Sansa + -rule(( Hodor ),Arya);
	Jon += bar(rule(Hodor,ROWS,-0.71 - ROWS) - COLS,( x + Arya )) * bar(foo(foo(-1)),-ROWS)
};
	Hodor;
	if(COLS){
	dog += COLS * ( 1 )
} else {
	( rule() )
}
};
	-COLS
}
}
}
assert -1 : "Winter is coming"
assert mislead(mislead(protect(( ( -COLS ) )),-( -----1 * destroy() ))) : "Fear cuts deeper than swords."
def TABLE[TABLE[---14 + betray(mislead(ROWS),-88) + -1][destroy(ROWS)]][i] {

}
assert -destroy(ROWS) : "Winter is coming"
var Arya = TABLE[Sansa][foo(TABLE[TABLE[( Arya )][ROWS]][protect(ROWS)] / protect(TABLE[destroy(Sansa,-60)][ROWS],destroy(( COLS ),ROWS / 4 * -y),-destroy(destroy(-120.81) / 90,( -mislead(( 230.93 ),protect(mislead(destroy(destroy(0.3,y),( foo() )))),TABLE[destroy(--0.33,0.31)][-11]) / Ygritte ))) + ( Arya ) + 83 / -Arya + Hodor * Arya)]
def TABLE[COLS][k] {
	if(( rule(( -ROWS )) )){
	ROWS;
	-0.45;
	x
};
	Hodor -= mislead(mislead() - bar(x,--TABLE[Jon][( Arya )] - protect(34,protect()) - -Stark / protect()),---betray(( rule(Stark,destroy(-71,destroy(0.79) / --( bar(( 1 ),-93) ) / ( 20 ) * ( COLS ) * 0.18,( ---ROWS / TABLE[Stark][mislead(Sansa + COLS,-bar(y),Ygritte)] ))) ),COLS),0.76) - bar(COLS + COLS) / ( -0.07 );
	if(betray(--19 + COLS * destroy(rule(--( -( ROWS ) ),Stark,0.68) + ROWS,destroy() - 0.54),Stark - ( 1 * ( 260.5 ) )) - protect(TABLE[--0.65][Stark] - -destroy(COLS,( destroy() + ROWS ),protect(-( ROWS ) - protect(),Stark)),-ROWS,( 1 ))){
	Stark += -1
}
}
