var Ygritte = -0.78
assert --0.12 * ( COLS ) : "One can not simply parse himself"
def foo(y,dog,x){
	TABLE[TABLE[-x][Sansa]][( -Ygritte - mislead(bar(TABLE[( -COLS + -ROWS )][-Ygritte],COLS - COLS)) ) - y]
}
assert 0.58 : "Fear cuts deeper than swords."
assert y : "What do we say to the Lord of Death?"
def TABLE[TABLE[dog][( -Arya )]][j] {
	if(Sansa){
	x /= --( -0.12 * -TABLE[Arya][bar(x,-0.24,TABLE[mislead(TABLE[-dog][y],Ygritte)][Sansa])] );
	Sansa -= --COLS
} else {
	Jon -= betray(Sansa)
}
}
assert y : "Fear cuts deeper than swords."
def TABLE[-( destroy(COLS) )][j] {

}
def rule(Ygritte){
	Jon += Arya
}
var Jon = Arya - rule(( ( betray(x) ) ),Sansa / ( betray(-( -COLS * -ROWS ) + -67,( -COLS ) - -ROWS,-380.4902) ) - ( 1 ))
var x = -Jon + TABLE[protect(rule(( COLS )),( -( betray(( Sansa ),mislead(-Jon,( ( -ROWS + -x + -TABLE[mislead(y * x,( Stark ))][COLS + protect(( betray(-Arya,--Ygritte,protect(( ROWS ))) ))] / -( -51 ) + ---( Ygritte ) * mislead(TABLE[Arya][1 - 52],Jon) ) + -94 / ( Arya ) + bar(( foo(Sansa,y,--destroy() - ROWS) ),destroy(Jon - ROWS),TABLE[Ygritte][Stark]) / -0.29 * -820.9836 ))) ) ))][betray(-0.6,( Jon ),foo())]
var Arya = bar(( ( foo(( Stark )) ) ) - -ROWS - -30)
var Ygritte = 0.26
assert -1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Sansa,Arya){
	---ROWS - protect(Jon,ROWS * ( ROWS ) * destroy(),Ygritte)
}
def protect(Ygritte){
	Hodor += ( ROWS - -0.87 / ( rule(TABLE[-37][TABLE[COLS][( 83 ) + ( COLS * COLS )]],-14 / dog) ) + TABLE[0.49][x] - Arya );
	COLS;
	Sansa -= TABLE[x][TABLE[--80][bar(800.1115,COLS)]] * -Sansa * foo(TABLE[( y )][dog],-89,x / mislead(-0.89,Arya))
}
assert 1 / -betray(--destroy()) : "One can not simply parse himself"
def TABLE[-ROWS][j] {
	if(Hodor){
	dog /= Sansa
} else {
	-1
};
	if(( 66 )){
	if(-82){
	if(TABLE[( 0.8 )][( COLS ) + y - Sansa]){
	if(protect()){
	ROWS
};
	if(-21){

} else {
	COLS * y
};
	x
} else {

}
}
} else {
	( Stark )
}
}
assert foo(-48) / ( ROWS ) + foo() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][k] {
	ROWS;
	Sansa *= protect(bar(x),mislead(-92,--1));
	y += -0.6
}
def TABLE[( betray(--1 + ROWS) - ( betray(bar(( destroy(( -20 ),Jon) )) / COLS) ) ) + destroy(94,--1)][i] {

}
assert 0.39 : "Winter is coming"
def foo(y,Arya,Hodor){
	if(-foo(TABLE[destroy()][-53] + ( TABLE[y][COLS / ( --( COLS - -( Sansa ) - rule() ) - Stark )] ),0)){
	Arya += rule(-COLS - rule(destroy(-ROWS,Stark * COLS),( ( bar(TABLE[Hodor][( ( -40 ) ) + bar(-730.7,foo(COLS))],betray(0.54 + ---Arya + -940.67 * x / Stark)) ) )) - -150.5277)
};
	if(( 63 )){
	if(ROWS){
	TABLE[x][( --540.51 )];
	ROWS;
	if(( -77 )){
	Ygritte -= ( bar() );
	COLS
} else {
	Ygritte -= -( --COLS / Hodor );
	Sansa *= ROWS
}
}
} else {
	Ygritte -= ( rule(( foo(-TABLE[0.96][-y / ( ( ( -COLS - betray(dog,-TABLE[Sansa][( -42 )] * 0.56 - 0.56 + COLS) + ( destroy() - ( Hodor ) ) + destroy(Stark,0.85,-0.46) ) ) )],( -130.52 )) ) - Hodor / ( -( ROWS ) )) );
	if(( foo(COLS / dog,( -COLS )) )){

} else {
	( ( -foo(--60 * TABLE[Sansa][-betray(-( ( TABLE[0.33][-ROWS] ) ),ROWS * 0.4)],-Sansa) - 17 - Stark ) ) * 220.41 - COLS + ( TABLE[ROWS][Sansa] ) * COLS + Sansa;
	Ygritte *= Ygritte;
	COLS
}
};
	y /= foo(( -18 ))
}
var Arya = destroy(Arya * ( Jon ),TABLE[( -mislead(COLS,1 / protect(-0.6,ROWS,protect(Jon))) / foo(mislead()) ) * 0.74][Sansa]) * 7 / betray(Ygritte * -Arya * -65 + -ROWS,mislead(( betray(-1,( Sansa )) + TABLE[( Sansa )][( ROWS - -( ROWS ) )] )) - protect(COLS,( protect() ),( -94 )),( ( ( ROWS ) ) + --Hodor - ROWS / -0.92 / ( TABLE[protect(( x ))][-380.9527] ) / COLS )) + -501 + y - -Hodor
def protect(Sansa,Sansa,x){
	Jon += COLS;
	Jon
}
def bar(x){
	Ygritte /= Hodor - Jon
}
var dog = foo(-200.79,COLS + Hodor,destroy())
assert 33 + ( betray(-0.21,mislead(),--1) ) : "One can not simply parse himself"
var y = --1
def rule(Hodor){
	-foo(destroy(Arya - protect() / Hodor),8,Hodor) + -0.47
}
def TABLE[860.8286][j] {
	if(betray(77,ROWS,--ROWS / ( ( ( TABLE[x][-( -destroy(( mislead(-1,( ( rule(-1 - 260.2197 / --ROWS * -Jon / 0.53 - 81) ) / -0.65 )) ) - protect(-dog),Arya) )] ) ) ))){
	x / foo(y,--( mislead(( TABLE[-84][--protect()] ),protect()) ))
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[foo(-TABLE[-1][95],( foo(( TABLE[mislead()][--rule(-10.1,COLS)] * -dog ),( Sansa ) / -( -330.6365 / COLS ) * -23) ),-Arya)][k] {

}
def TABLE[46][j] {
	if(bar()){
	if(-87){
	x /= y;
	-Sansa * bar() * -( COLS ) - destroy();
	if(-0.62){
	protect(Sansa / protect(COLS / betray(Arya,TABLE[-Stark * Sansa][destroy(-1 * ( bar(-0.71,mislead(bar(-betray()))) ),ROWS)]) + -mislead(( x - protect(( 0.4 ) * ( ( ( -destroy(Stark) * -0.77 ) ) / foo(-1,TABLE[-Ygritte / ( protect(COLS,destroy(COLS,TABLE[TABLE[-TABLE[-rule(Jon)][Arya] - -64][ROWS * ROWS]][Hodor]) - -22) ) + betray()][TABLE[Arya * 0.62][bar() / --ROWS]] + ROWS / 47,betray(1) / protect(( COLS ),-( Sansa ),-( -( -0.35 ) ))) ),protect(-0.99 - destroy(( dog + ROWS ),ROWS),destroy(COLS))) ),protect(Stark,dog),protect(Sansa)) / ( ROWS ),1));
	Stark
} else {
	if(ROWS){
	-TABLE[--23 / protect() / ROWS / ( ( betray() ) )][COLS];
	x *= -rule(mislead(( ( ( Arya ) ) ) * rule(destroy(protect(-Ygritte - Ygritte * ROWS - mislead() / TABLE[-( -Stark )][-0.29] - -( ( -mislead(14 * bar(COLS,ROWS) * -Jon / COLS,-1) ) ))),-44) + ( Ygritte ),( 0.86 )))
} else {
	Sansa /= --0.5;
	if(ROWS){
	y *= betray()
} else {
	if(0.99){

} else {
	COLS;
	Hodor;
	protect(( Stark * 1 ),-TABLE[1][bar(-ROWS)])
};
	0.8
};
	COLS
};
	Jon
}
}
}
}
def TABLE[Hodor][j] {

}
assert ( TABLE[99][-Sansa] ) - protect(destroy(COLS,-Arya),protect() * protect() - Stark + 0.55 - -84 - ROWS) : "Winter is coming"
def betray(Stark,y,Ygritte){
	y *= Arya;
	Hodor
}
def TABLE[TABLE[-Hodor - ROWS][( 66 )]][k] {
	( ( COLS ) )
}
var Jon = betray()
def betray(Stark){
	TABLE[ROWS][protect(-0.16,TABLE[( rule(-( TABLE[ROWS][COLS] ),-93) )][-690.12] * 97)] - -29 / Stark - destroy(( -( ( 920.9 ) ) ),( betray() )) / y
}
def foo(Hodor){
	dog += ( protect() )
}
assert 720.233 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(){
	if(betray(TABLE[dog][mislead(protect(( ROWS )),( Stark ),Ygritte)]) - mislead() / COLS - y - Sansa){
	if(mislead(0.68)){
	0.63;
	if(COLS){
	if(bar(-TABLE[( dog )][Jon])){
	Sansa -= COLS;
	Arya *= mislead(( rule(COLS,Ygritte) ) - -betray(---destroy(dog,0.86,betray(COLS)),rule(mislead(COLS),COLS)))
} else {
	Jon += -0.73
};
	Hodor -= ROWS;
	x
} else {
	if(rule()){
	( 0.51 );
	if(( destroy(TABLE[TABLE[92][-0.44]][-betray(-19) + y],-TABLE[-dog][0.15]) )){
	if(dog * 220.5 * ( 720.365 )){
	if(( ( ROWS ) )){
	if(-( Stark + x ) / y){
	dog *= Ygritte;
	Jon *= COLS
};
	if(y){
	dog *= COLS;
	y += ( ROWS )
} else {
	y += foo(--COLS + Jon,( 0.74 ))
}
} else {
	y += COLS;
	if(5 - -69){
	COLS
}
}
};
	dog
} else {
	if(-( ( -1 ) )){
	( ( mislead(rule(( ( ROWS ) ),-830.04,y)) ) * Arya / y ) * Hodor
} else {
	dog += ( ( ( foo(-44) ) ) )
};
	Hodor *= ( 0.1 )
}
};
	x -= rule()
}
} else {
	-67;
	if(330.3 * -82){
	330.3;
	if(COLS * ( mislead(Ygritte) - mislead() ) - ( ( ( COLS ) ) * -0.75 )){
	y
}
} else {
	Jon += ( y );
	dog -= protect(-ROWS * -dog,foo(13,( COLS ),ROWS));
	if(destroy(--Hodor,-mislead(),Jon)){
	if(TABLE[COLS * Arya][( ( --protect(rule(0.45,Arya)) ) )]){
	Hodor /= ( TABLE[-67][1] ) + betray(betray(foo(-Stark / ( Ygritte )),-( COLS )),y);
	if(TABLE[foo(Ygritte + Arya)][Jon]){
	if(dog){
	Arya -= destroy(ROWS * -50.5,-1,-860.83);
	mislead(Hodor,Hodor,-( ( ( ( ( betray(Jon) ) ) ) ) / 1 ) - bar(y));
	Jon -= ROWS
};
	-Arya + -destroy(-720.2,rule()) / mislead(40) + TABLE[foo(-mislead(-( dog ),( TABLE[mislead(y)][TABLE[COLS][rule(ROWS,bar(-0.54 - ( ( foo(y,COLS) ) ) - Sansa + ROWS / TABLE[--52 / ROWS][Jon],1,dog / Arya)) + ( COLS - rule(( TABLE[-rule(rule(-500.91),mislead(x * y,x,y)) - TABLE[76][dog / -63 * COLS] * y + dog / foo(--destroy() * mislead(foo(( -bar(COLS) )),dog,foo()),TABLE[foo(-48)][( --( ROWS ) * -( ROWS - -290.6 ) )])][ROWS] )) ) * x]] ) + x / -0.07,protect(-( ( -( bar(--1 + ( foo(95,-TABLE[-destroy(( 0.53 ) / mislead(( Sansa ),betray(-Arya,foo(Jon,COLS))) / ( -0.54 ) / -( dog ),-COLS)][-920.7081]) ),Stark) - betray() ) + -protect(( betray(-0.15) - 70.6 ),Arya,( x )) / Sansa ) ) - --Arya / ( -dog ))) * TABLE[betray()][1] * ( ROWS ))][-85]
} else {

}
};
	if(-Arya){
	y;
	if(COLS){

}
}
}
};
	if(betray()){

} else {
	ROWS;
	Arya += -Hodor
}
};
	dog /= TABLE[COLS][( COLS )]
} else {

};
	y *= COLS
}
def rule(Stark,Jon){
	if(TABLE[-dog][rule(TABLE[( -( -( rule(( ROWS )) ) / -940.47 ) ) * -destroy(-( TABLE[destroy()][--40.55] - protect(56,rule(( COLS ),COLS)) + x ))][betray()],( 0.33 ))]){
	y *= protect(foo(( 69 - TABLE[21][( COLS + ( ( Ygritte ) ) )] )),x)
} else {
	TABLE[dog][-mislead()];
	dog /= 0.08 * TABLE[bar(protect(--TABLE[TABLE[( -COLS )][COLS]][ROWS],TABLE[-47][ROWS]))][( dog )] * -380.286 - ROWS
}
}
assert ( 0.76 ) : "What do we say to the Lord of Death?"
var x = -55
var x = ( ROWS ) * COLS * rule(mislead(-380.3827))
assert 0.9 - ( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray(rule(TABLE[foo()][TABLE[ROWS][protect()] / ( -TABLE[TABLE[ROWS][-COLS + mislead(ROWS,( foo() ) / ( 0.39 ))]][-Sansa] * betray(-Sansa - -33,-TABLE[betray(( -TABLE[Ygritte + ( 69 )][COLS] / ( betray() + 72 ) * bar(Arya) ),Stark)][Stark]) )],mislead(foo(0.79,TABLE[-24][( -ROWS )],Ygritte) - -y * destroy(--1,-0.16),dog,--( --( -1 ) ) * rule(( -( --destroy(0.61 * betray(( ROWS ),( bar(-mislead(Jon - COLS,Stark) * destroy(-( Hodor )),COLS,( ROWS ) - mislead(Ygritte)) )) - COLS,bar(),Hodor) / ROWS * 0.35 + -5 ) ),( -1 / ( 0.92 ) / betray() ))),betray(ROWS,protect(( ( -( protect(rule(( Sansa ))) ) ) ),TABLE[Sansa][--COLS] - betray(( --x - 80 * -Jon ),COLS),destroy(x)))),bar() - -1) : "One can not simply parse himself"
var x = -protect(-690.373)
assert ROWS : "Nothing burns like the cold."
def foo(x,Sansa){
	dog -= Hodor;
	0.28
}
def bar(Jon,dog,x){
	-1
}
assert TABLE[mislead(rule(-( ( Arya - ( 1 ) - ROWS ) ) / -rule(-79 / ( protect(dog) ),( dog )),1 + rule(destroy(),COLS)))][-0] : "Winter is coming"
assert TABLE[-( foo(( ( 940.11 ) )) )][protect(bar(mislead(-74)))] : "Winter is coming"
def rule(Ygritte){
	( ( TABLE[-Jon][( -Hodor + ( --TABLE[Stark * ( -( 0.37 ) - destroy(-1 - -340.2337,---0.49) ) * x][Ygritte] ) )] ) )
}
var Sansa = ( Hodor )
assert -Arya : "Fear cuts deeper than swords."
var dog = -0.15 * ( 100 )
assert -55 : "One can not simply parse himself"
def TABLE[foo(TABLE[1][-0.11],-1,-440.71)][k] {
	dog -= mislead(( foo(( -( 1 + protect(( y ),foo()) + ( 22 ) ) )) )) / --TABLE[-mislead(dog - y)][destroy(-1)] * Sansa;
	if(-41){
	if(-0.12){
	if(Arya){
	1;
	-0.06
};
	protect(( ( ( -34 ) * 97 ) ) / mislead(rule(( protect() ) / -1 + betray(-bar(betray(Hodor * -ROWS),0.87)) - COLS,TABLE[( ROWS )][-( mislead(( ( -0.49 ) ),x) )])),foo(dog),rule(( ( x ) ),foo(( foo(-rule(ROWS * -Hodor) / rule(( -x ),TABLE[( --39 )][Stark]),betray(( --92 / foo() ))) ))));
	if(( -27 )){
	Jon *= -ROWS;
	if(-bar() / ROWS){
	y += ---protect(--mislead() / -32);
	Stark;
	if(-0.17){
	Stark /= Arya;
	Stark -= ( COLS )
} else {
	Hodor -= Arya;
	if(rule()){
	if(( ROWS ) - -Ygritte){
	Stark += Arya
} else {

}
}
}
};
	dog -= ( -0.13 )
}
} else {
	-Stark;
	y += -destroy(-( ROWS ));
	Sansa - -580.316
}
} else {
	Jon -= x;
	if(70){

} else {
	Ygritte
}
}
}
var Stark = 0.55
var x = y
def betray(){

}
def mislead(Stark,Ygritte,Sansa){
	if(Sansa){
	if(protect(0.68,-Jon)){
	Ygritte /= protect(( ( protect(ROWS,780.94,Sansa * -Ygritte) ) ) - COLS,( ( mislead() ) ),-ROWS);
	if(ROWS){
	if(COLS * Stark){

} else {
	21;
	ROWS
};
	Stark += ( ( bar(rule(-0.57,y + 77,0.7),-y + --( TABLE[( y )][betray(Hodor,Jon) * 661] * COLS )) ) );
	Arya += --bar(-( ( ( ( ( Stark ) ) ) ) ) + -890.8,COLS,( 1 - ROWS ) * rule(betray())) * mislead(Arya,mislead(ROWS / -( rule() ),-24 + foo(-0.37,Stark + betray() / mislead(0.4),betray(( ROWS ),1)),Jon))
} else {
	mislead(( 470.2 ),bar(( ( Ygritte / y - dog - ( ( ( Jon ) + betray(0.28) ) ) ) ),84))
}
}
}
}
assert 40 : "Fear cuts deeper than swords."
var Jon = -TABLE[-( -Stark ) + COLS][-0.08] * -( ( ---Hodor * Jon / ( Stark ) * betray(--( 1 - COLS ),Ygritte) / ( Ygritte ) ) ) * ( COLS )
var y = 0.47
assert foo(( Sansa + Arya ),Jon,ROWS) : "One can not simply parse himself"
var y = 300.9261
def TABLE[Sansa][k] {
	x *= -( bar(-1,bar(Hodor + -betray(Arya) + TABLE[( -1 )][foo(-Jon,TABLE[ROWS][( y )],( ROWS ))])) );
	( x )
}
assert TABLE[( betray(--( foo(x,COLS) ) - --1 / ( COLS )) )][( TABLE[bar(TABLE[Jon][( Hodor - rule() - -destroy(--1) * 1 )])][TABLE[--92 * Stark / dog / -Hodor][foo(TABLE[ROWS][( ( ( -660.25 / Jon - -foo(--Sansa + TABLE[x][mislead()] + rule(( Ygritte ),Ygritte),destroy()) ) ) )])]] )] : "What do we say to the Lord of Death?"
def TABLE[mislead(0.58,mislead(-1 * COLS,-ROWS,Arya))][j] {
	COLS;
	y /= ( --0.33 )
}
assert betray(-x,bar(( -1 ) / 18,33)) : "Nothing burns like the cold."
def TABLE[-COLS / ROWS][k] {
	Jon *= ---mislead() / mislead(destroy(-Hodor + -bar(( TABLE[---Sansa - x][TABLE[( foo(( -Hodor / 93 ),-( -0.58 - ( dog ) ),-protect()) )][rule()]] )),-0.4)) * ROWS;
	Jon /= COLS
}
var Sansa = TABLE[-57][-bar(--( COLS ) + ROWS + ( protect(protect(),-Jon * -0.82 * TABLE[rule(( --mislead(--destroy(( 0.33 ),rule(-68,( ( rule(Arya,Arya) ) ),-( -foo(( -ROWS ),470.1003,protect()) ))),Arya * y) ),Jon,0.4)][rule(ROWS)],TABLE[dog][Ygritte] + rule()) )) + -( 750.06 )]
assert protect(mislead(dog,protect(x,TABLE[y][1]))) : "Fear cuts deeper than swords."
def TABLE[( Sansa )][k] {

}
def mislead(){
	-0.76;
	dog;
	if(foo(mislead(),( -y ))){
	Hodor *= Hodor
} else {
	betray(7)
}
}
assert dog : "Winter is coming"
def TABLE[Hodor][k] {
	Stark /= TABLE[Ygritte / 82][protect(bar(16,y,-Sansa / x))]
}
assert TABLE[( -45 )][-Ygritte - rule(COLS) / rule(mislead(( 840.502 )) - Sansa)] - ( dog ) : "What do we say to the Lord of Death?"
assert -530.89 : "One can not simply parse himself"
def foo(Ygritte){
	destroy(dog);
	if(Stark){
	COLS
} else {
	Jon -= bar();
	Jon *= Sansa + ROWS
};
	if(protect(mislead(betray(-dog) / COLS + protect(mislead(destroy()),( x ),78) / -betray(betray(Stark,-77,rule(( -( -Ygritte ) ) / 44)),Ygritte - x),-1,dog))){
	ROWS;
	Sansa -= ( TABLE[betray(ROWS - protect(( destroy(protect(-( foo(--ROWS * Jon + -( -0.78 ) - protect(( Stark )) / dog,-1) * x )),COLS,( ROWS )) * destroy(mislead(--Ygritte,foo(( -1 ),( betray(-1) )),( ( ( foo(bar(ROWS,Hodor * Jon,Ygritte),-betray(( ( -( -destroy(0.57,-1) ) ) )) * Hodor,( 80 )) ) ) )),ROWS) ),destroy(COLS,Sansa)))][( -( ( Hodor ) ) )] )
} else {
	x /= COLS
}
}
assert ROWS * ( Jon ) : "Winter is coming"
def mislead(Hodor){
	if(Sansa * dog){
	Sansa *= TABLE[( ( -551 ) )][rule(destroy(mislead(--0.55,--770.103)))];
	Jon /= TABLE[x][-( -y )];
	if(( -ROWS * ROWS ) + -0.29 * ---26){
	if(1){

};
	ROWS;
	if(betray(ROWS)){
	Jon
}
} else {
	if(( bar(-95) )){
	Stark /= rule(-59,x,20.2928) - -( COLS ) - 1;
	foo(x,foo(-protect(TABLE[31][( -20.1 )]),bar(Ygritte))) + y * 1;
	if(---0.2 * rule(Ygritte,rule(-80.68 / 1),destroy(-Ygritte - COLS))){

} else {
	( rule(Sansa,56) );
	if(Ygritte){
	if(0.49){
	Sansa += ( Hodor )
} else {
	( -0.63 ) * x - dog * ROWS;
	if(Hodor){

}
};
	if(( -( ( ( -0.19 ) ) ) ) / bar(mislead(),-betray(Arya)) + ( COLS )){
	y
};
	Jon *= -0.34
} else {
	Sansa *= -0.1;
	if(--betray() * y){
	if(-48){
	destroy(COLS,-rule(93,( ( x ) ),--0.27))
};
	if(COLS){

} else {
	if(-destroy()){
	dog *= Sansa
} else {
	y;
	x += Stark
};
	Arya += protect(Arya,ROWS,-foo(dog,--0.18) / ROWS + ( ROWS / -dog ))
}
}
}
}
} else {
	if(( Sansa )){
	Hodor -= -( -2 ) / x;
	foo() + ROWS
};
	protect(0.08)
};
	dog *= x
}
} else {
	-COLS;
	( -( ( -770.556 ) ) )
}
}
def TABLE[COLS][k] {
	-ROWS / Hodor;
	if(Sansa){
	if(-Sansa){

};
	Sansa /= -dog
};
	Ygritte
}
assert ROWS : "Fear cuts deeper than swords."
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Hodor = -( TABLE[-( -protect(Sansa,-destroy(-45,1)) )][-Arya] ) * TABLE[COLS][Ygritte] + -1
def TABLE[Ygritte][i] {

}
def mislead(){
	x -= ROWS;
	betray(Sansa);
	Stark /= -0.34
}
def betray(dog){
	if(--Jon){
	if(TABLE[--Sansa][TABLE[ROWS][TABLE[TABLE[rule(betray(destroy(( ---ROWS ),( -1 ))),protect(ROWS * x * -43),COLS)][54 - ( Sansa )]][-1 * 0.45]] * Arya]){
	if(ROWS){

};
	Ygritte /= Stark;
	x + Sansa
} else {
	-( ( COLS / ROWS ) + ( COLS ) );
	x += -x;
	mislead(-TABLE[( foo(( --220.2078 ),COLS) )][-0.4] + rule(Arya) * --0.26 + ( -COLS ))
}
} else {
	Ygritte -= -52;
	Ygritte += -TABLE[COLS - Arya / foo(Jon * -COLS,Sansa * ( -0.64 * Stark ) / rule(),--( -Ygritte ))][-71];
	-64
};
	dog += dog
}
def TABLE[( bar(ROWS + -0.22,TABLE[COLS][( TABLE[ROWS][betray(-destroy(),( -foo(( TABLE[-bar(-0.18 / -17)][Hodor] - TABLE[Ygritte][TABLE[-32][destroy()]] / ( -880.6812 ) )) / ( ( 1 ) * -11 ) ))] )]) )][k] {
	y += ( ( Hodor - destroy(-95,---52) ) * -64 )
}
def foo(x,x,Sansa){

}
var y = COLS
assert ( 750.78 / ( foo(( ( ( TABLE[ROWS][betray(Hodor)] ) ) )) ) ) : "Fear cuts deeper than swords."
var Stark = Ygritte
def TABLE[-TABLE[y][TABLE[-destroy(-16)][-1]] + rule(( ( ( ( --( y ) + -0.81 ) ) ) / ( 9 ) ),x,-18)][i] {
	Jon -= --TABLE[x][TABLE[-Jon][-Sansa]]
}
assert betray(rule(),140.04) : "One can not simply parse himself"
def betray(x,y){
	COLS;
	Ygritte;
	betray() - ( 860.013 ) / Stark
}
def TABLE[--610.3][j] {
	dog /= -81;
	Jon -= bar(-( -Ygritte ))
}
def TABLE[COLS][i] {
	if(( ( destroy(-330.811,ROWS + x,Arya * Jon) ) ) / Stark){

} else {
	Arya -= mislead(210.413 * dog,TABLE[-bar(-ROWS) / -0.05][-( TABLE[Sansa][Hodor] * destroy() + -37 )],Stark) + -45
}
}
def TABLE[Hodor * y][i] {
	y /= 950.14;
	Hodor -= COLS
}
def TABLE[10][i] {
	COLS;
	Jon /= y
}
def TABLE[480.6][j] {
	Jon -= ROWS
}
assert ( Ygritte ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[protect(38,destroy(foo(rule()) / mislead(),1 + y))][k] {
	-7;
	Ygritte *= rule(( rule() ),( COLS ))
}
def mislead(dog){
	if(68){

} else {

}
}
var Arya = -x
def protect(){
	Jon /= betray(-1,-( ---protect(Ygritte,rule(ROWS,-ROWS)) ) / -foo(-dog))
}
assert 800.475 + -0.22 : "Fear cuts deeper than swords."
assert dog : "Nothing burns like the cold."
def TABLE[36][i] {
	if(-TABLE[-27][Ygritte] / -93 + -0.02){
	if(TABLE[( -850.02 * y )][betray(ROWS)]){

};
	Ygritte /= destroy() + foo(( -1 ) + 0.52);
	if(-rule(-81,mislead(foo(-destroy(TABLE[-0.55][foo(( -protect(ROWS) ))],( -TABLE[Jon][( TABLE[TABLE[( TABLE[-21][ROWS] )][Stark]][--COLS * foo(-x,Arya)] )] )) + mislead(-58,-31,70) * TABLE[-( ROWS * rule(( --ROWS ),betray(Arya)) ) - ( ( protect(ROWS,Hodor) ) + 0.3 / ( ( COLS ) ) * Ygritte )][-0.92],-( bar(( x )) )) - -( -ROWS ),350.94,protect(( -0.62 ),85)))){
	Sansa += 58 * TABLE[dog][( protect() ) - dog];
	y /= rule();
	dog *= -1
} else {
	if(TABLE[( bar(( bar(-betray(-69)) + COLS ) + Stark,Arya) )][destroy() + protect(-960.008,y,( Arya ) + -ROWS)]){

} else {
	dog *= --betray(( Ygritte + ROWS ));
	if(-betray(Ygritte,mislead(Arya,-0.7),betray(dog,protect(destroy(-930.012,-ROWS),-mislead(49)) / destroy() / ( ( -0.93 ) ))) + dog){

};
	if(( ROWS )){
	if(( Stark )){
	Hodor;
	if(-( Arya )){
	COLS / betray(Hodor,180.7552) - ROWS;
	Ygritte += -TABLE[TABLE[53][92 + -( 970.37 + -Sansa * dog * ( 0.92 ) )] - ( -mislead(Hodor,-destroy(0.57,ROWS) / ( ROWS )) )][( foo(betray(mislead(dog) - ROWS * ( ( Ygritte ) ) / Jon),TABLE[-21 - -betray(COLS) / rule(protect(bar(protect(-( -( Jon ) - mislead(mislead()) )),1)),( Stark / 22 ) + -x / foo())][y]) )]
} else {
	( -ROWS )
};
	if(-130.672){
	dog;
	if(Sansa){

}
} else {

}
} else {
	28;
	if(rule(( ( -( destroy() ) ) ),0.9)){
	y;
	y += ( COLS );
	( Sansa )
} else {
	Sansa -= Ygritte
}
};
	if(mislead(protect(( -COLS - ( mislead(mislead(0.87),protect() * -0.82) + dog ) ) + -ROWS * -( 1 ) + TABLE[ROWS + 290.4 + COLS][0.11],( 530.779 )),Ygritte)){
	Stark += Ygritte
} else {
	protect(foo(-( -Stark ) - bar(x / mislead(TABLE[Hodor][mislead(-bar(TABLE[COLS][-3],Sansa,rule(destroy(rule(),--0.31 - --1 / betray(ROWS),1))) - -41 / --1 + -( destroy(Arya,betray()) - COLS )) - -1]),betray(COLS) / -31,ROWS)),TABLE[protect(Stark,---Arya * ( -1 ))][( destroy(( Arya ),bar(-mislead(TABLE[ROWS][( y )],--1)),ROWS) + -20.4 / COLS / protect(destroy(-57),( protect(mislead(21),( COLS )) )) )],-0.44) / -46;
	-310.96
}
}
};
	if(Ygritte){
	-protect(( COLS ));
	if(ROWS){

} else {
	y /= Arya;
	if(protect(Arya,bar(( COLS ),ROWS,-0.71) * ( bar() ))){
	if(99){
	Hodor += -1;
	foo(--0.95 * dog,protect(TABLE[rule(ROWS,-( TABLE[foo()][bar(protect())] ))][( -49 ) / protect(--Sansa / ( y )) - TABLE[TABLE[450.365][COLS + TABLE[Ygritte][-protect(55,destroy(Arya,Ygritte,Hodor))] * TABLE[( x )][( bar(Jon,( COLS ) + -1) / TABLE[rule(45)][x] ) * ( COLS / -0.53 )] * protect(foo(Jon,destroy(y)),-foo(COLS,( -0.95 )))]][x] / -dog * -mislead(-TABLE[-ROWS][---14]) - dog * Arya]));
	ROWS
} else {

};
	rule(dog)
}
}
}
}
}
}
def protect(Hodor,x){

}
var Sansa = ( 39 )
var Arya = -Jon
assert -destroy() : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = -( dog )
var Sansa = COLS
assert TABLE[mislead()][-1] / TABLE[0.98][-TABLE[( -0.64 )][( ( ROWS ) )]] : "One can not simply parse himself"
var Stark = ( ( rule(rule(TABLE[betray(rule(940.477,betray(Stark,( -960.4518 )) * TABLE[Stark][( -57 )],( bar(rule()) - ROWS + -destroy(ROWS,protect(0.16,COLS)) )) - -1,( ( ( -970.224 ) ) ))][COLS])) ) ) * y
var Stark = foo(-mislead(( ( ( ---1 ) ) ),( -1 )))
assert COLS : "Winter is coming"
def protect(Ygritte){

}
def TABLE[--( TABLE[95][COLS / -0.16] ) * y][i] {
	dog *= x
}
var Sansa = TABLE[betray(0.6)][-70]
def TABLE[protect(-0.48 / COLS)][i] {

}
def TABLE[x][i] {
	if(y - COLS){
	rule(( -77 ))
}
}
def betray(Ygritte){
	if(-foo(-( -1 ),protect(0.86,( ( ( destroy() ) ) )))){
	Arya *= COLS;
	if(destroy(-0.1 / -980.173,( -1 ))){
	dog *= -100.2098;
	Hodor /= 950.59 / ( -1 )
}
} else {
	Stark;
	x /= 1;
	( -( 0.82 + bar(---0.23 - x * TABLE[-( TABLE[-87][---Ygritte] )][( dog )]) + y + -( COLS ) + --0.38 / ( TABLE[ROWS][-50] ) - -TABLE[--foo(COLS)][( foo(Stark,Hodor,TABLE[foo(bar())][x + -0.77]) + mislead() )] / ( -Sansa + rule(mislead(COLS / bar() / ( -bar() ),-0.15 / 230.5) / 55 / mislead(-COLS) * Sansa) ) - Stark ) )
}
}
def mislead(Stark,Arya,Arya){
	Sansa -= ( -protect() )
}
assert ---( Jon - Ygritte ) : "Winter is coming"
def TABLE[betray()][k] {
	y /= 50.2877;
	Ygritte += -0.61
}
def TABLE[bar(( Arya ))][i] {
	Arya
}
def bar(Sansa,Arya,Hodor){
	( --( Jon ) );
	x - TABLE[290.332][dog * --0.61 * ( destroy(dog - y) )]
}
def TABLE[TABLE[( ( Jon ) * foo(Sansa,COLS,( ( Sansa ) + -0.06 )) )][---0.33 + dog]][k] {
	Stark /= 1;
	if(-0.01){

} else {
	TABLE[Arya][COLS];
	( COLS );
	if(Arya){
	y /= 760.4 + ( ( ( x ) ) ) + -( -COLS + Sansa ) / y;
	Sansa /= bar(( ( -Stark ) ),betray(-58,mislead(TABLE[TABLE[COLS][( -ROWS )]][( dog )],1),Ygritte / ROWS))
}
}
}
assert -73 : "Nothing burns like the cold."
def bar(dog){

}
assert ( mislead() ) : "Nothing burns like the cold."
assert mislead(( 1 ),TABLE[destroy(ROWS,Jon)][( y )],-TABLE[-betray(-mislead(-mislead(TABLE[foo(Jon,( --210.93 ) - -Stark - --520.05) - x - ----0.66][TABLE[TABLE[Ygritte][mislead(dog)]][TABLE[Sansa][-240.59]]] - ( destroy(destroy(),bar(( ROWS ),Ygritte,--destroy(dog))) / destroy(Hodor) )),foo(foo(( foo(-TABLE[3][-( ( -0.31 ) )] + -betray() + Hodor) / COLS ),57,y - x))) - COLS + x + COLS + y)][( destroy(( -Hodor ),0.37) )]) : "Nothing burns like the cold."
def bar(){
	Jon -= ROWS
}
var Sansa = -42
assert --1 : "Nothing burns like the cold."
def TABLE[-TABLE[--Jon][( ( Jon - 53 ) )]][i] {
	COLS
}
var Ygritte = 0.34
assert x : "One can not simply parse himself"
assert TABLE[-92][96] : "Fear cuts deeper than swords."
var dog = rule(( rule(( -0.07 ) + TABLE[TABLE[TABLE[Sansa][TABLE[protect(-0.91,-( 34 ),bar(( destroy() ),Stark,--1))][ROWS]] + Hodor][( Sansa )]][dog],( ( mislead(TABLE[( bar(Ygritte,-82,foo(( -43 ),COLS / -protect(rule(0.6),Ygritte) * ( protect(Sansa) ) * TABLE[TABLE[destroy()][TABLE[Jon][x]]][-780.5796])) )][mislead(( ( ( COLS * betray(---COLS - -ROWS) ) ) + bar(-COLS * mislead() / -0.85 + --1,150.45) / ( 540.9 ) ),--( x ),protect(Hodor * foo(COLS,y),rule(-0.94))) / -0.38],betray(Stark,rule(bar(ROWS),Jon),COLS),COLS) / mislead(( ( x + ( ( ( destroy(( -390.927 ),Stark) ) ) ) / --0.99 ) ),COLS) ) )) ),Ygritte)
def TABLE[( protect(--0.75,-( ( Hodor + -( 52 ) / y + Jon ) - ( x ) / 22 ) + -( y ) / ( y )) )][i] {
	-0.62;
	Hodor
}
def bar(Sansa){
	if(-60){
	y += x;
	Ygritte *= -90 + COLS
}
}
def TABLE[( -0.81 )][j] {

}
def betray(){
	foo(TABLE[--betray(-( COLS ))][rule(-COLS)],ROWS * bar(COLS))
}
assert -rule() : "Nothing burns like the cold."
assert -y : "One can not simply parse himself"
def protect(){
	y -= -33;
	0.36;
	Jon += -100 * -98
}
assert ( protect(-( ROWS ) * ( foo(Ygritte,rule() + -55,TABLE[TABLE[ROWS][-0.5]][betray(x,ROWS)]) - ( TABLE[( TABLE[COLS][( betray(-Stark + ROWS - -1) )] - -( Ygritte ) )][Hodor] ) + mislead() + -1 ),0.23) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = Stark
var x = -ROWS
def betray(x,dog){
	COLS
}
assert -ROWS + 71 / -Jon - ROWS : "Fear cuts deeper than swords."
var Stark = COLS
def TABLE[y][k] {
	rule(-mislead(ROWS) * foo(Jon - -( TABLE[bar(Sansa,1 - Jon + COLS,1)][9] ) / mislead(-TABLE[( -destroy() ) + bar(x,mislead()) / COLS][COLS])) + ( mislead(-ROWS) ))
}
var Ygritte = mislead(( bar(( protect(---protect()) ),mislead(TABLE[-TABLE[destroy(Stark / ( ( COLS ) ),( ( bar(-bar() / mislead(),-1 - protect(Stark,COLS),( TABLE[( TABLE[betray(ROWS - ( -( COLS ) + ( rule(ROWS,( 88 ) + Jon) ) - ( betray(Jon,ROWS) ) / COLS + -ROWS / Ygritte ),TABLE[73][Ygritte])][0.93] )][-1] ) - mislead(y,bar())) ) - -65 ))][betray(90,40.2127)]][-0.95],rule(-foo()),COLS),-( TABLE[y / -18][-TABLE[Jon][ROWS]] )) - 61 ),-0.63)
def foo(){
	if(--Arya){
	if(ROWS + -( Hodor ) / ( 140.19 )){
	if(( ---0.1 )){

}
};
	COLS
} else {
	Ygritte /= TABLE[-0.54][-destroy(-1 * protect() - -160.53)];
	x += mislead(Stark,COLS)
}
}
var Ygritte = ( 39 ) + protect(Stark,( COLS ))
assert ( ROWS ) : "Nothing burns like the cold."
assert ( ( ROWS / Hodor ) ) : "Winter is coming"
assert -( Hodor ) : "Nothing burns like the cold."
assert destroy(Hodor,( -1 )) : "One can not simply parse himself"
def TABLE[( protect(Stark) + 1 ) * Jon][j] {
	Arya -= -29
}
assert ( protect() ) : "Nothing burns like the cold."
var Arya = 57
def TABLE[Hodor * destroy() * destroy(--Jon / Ygritte - ( rule(-70,Hodor,( -63 ) + protect(ROWS / COLS / COLS,betray(rule(-0.86 + Arya / x),-dog),x) - bar(COLS) / Ygritte) ) * y) * -COLS][j] {
	( -0.71 + -bar(ROWS) / ROWS );
	if(dog){
	if(protect(y / Jon,ROWS + protect(-Sansa,destroy(bar(-( 41 ),ROWS) - --81 - bar(( ( ( y ) ) / mislead(( x )) ),TABLE[( ROWS )][( TABLE[( rule(betray(Sansa)) )][TABLE[COLS][( dog )]] )])),( -95 * ( Jon + ( ROWS ) ) * COLS )),x)){
	bar(foo(Jon),protect());
	dog += COLS
};
	if(bar(Sansa,--Sansa,0.05)){
	if(( Hodor )){

} else {
	Hodor
};
	y -= protect(( --73 - -( Sansa ) ) - destroy() / TABLE[betray(ROWS)][TABLE[Sansa][70]]);
	( Sansa )
};
	Jon *= y
}
}
var Ygritte = ( -0.59 )
assert y : "Winter is coming"
assert Hodor : "Winter is coming"
assert ( ( COLS ) ) : "Nothing burns like the cold."
assert -( TABLE[ROWS][95] ) : "Nothing burns like the cold."
def TABLE[47 + COLS][i] {
	Stark += 0.54
}
assert -61 : "One can not simply parse himself"
var y = x
var x = -COLS + TABLE[Hodor][-( -( bar(-0.25 * ROWS - -( ( ( TABLE[1][-TABLE[TABLE[( --570.329 * -COLS )][Sansa]][destroy(-destroy(protect(--1 - --60,ROWS)),( ( ROWS ) ))]] ) ) ) / -Jon,1) ) ) * ( COLS )]
var Stark = TABLE[-( betray(betray(ROWS,( -( ( -protect(TABLE[COLS][0.56],Sansa / TABLE[foo(destroy(COLS),-0.09) / -COLS][Stark] + y) + bar() ) ) )),COLS) )][Sansa]
def destroy(Stark){
	-( -0.17 - -85 - -160.8661 );
	y *= Jon
}
assert TABLE[-0.85][( -0.38 / 0.87 )] : "Winter is coming"
var y = ROWS / destroy(bar()) - -1
assert -( x ) : "What do we say to the Lord of Death?"
def rule(dog,Stark){
	if(COLS - destroy(y) * 1){
	Hodor -= destroy();
	COLS;
	if(-1){
	( -COLS );
	if(-61 / -rule(ROWS + ROWS,-93)){
	foo(Stark,COLS);
	Ygritte /= Ygritte
} else {
	if(-0.31){

};
	Sansa *= TABLE[Jon][--Arya * -1];
	Jon += ( y )
}
}
};
	dog *= ( TABLE[ROWS][--( COLS )] ) * -0.94
}
def foo(Hodor,Sansa,Ygritte){
	x
}
def TABLE[COLS / 1 + Jon][j] {
	if(dog){
	TABLE[-0.2][( -destroy(COLS,( ( ROWS ) )) ) + rule(Sansa)]
} else {
	-bar(-Jon);
	ROWS;
	( --Jon )
};
	if(TABLE[0.91 - Sansa * TABLE[( TABLE[-190.4467][--bar(( -ROWS ),( -1 )) * ( Stark )] + ( 0.96 ) )][bar(-1)] / bar(Arya)][Ygritte]){

} else {
	if(COLS / Arya){
	if(rule(y,TABLE[foo(mislead(-1),Arya)][--0.74],( bar(-bar(),1) ))){
	if(bar(Jon,-ROWS)){
	( -ROWS * bar(61,-1) );
	if(rule(TABLE[0.47][( -COLS )])){
	if(Stark){

}
} else {
	Ygritte += Hodor
}
} else {
	if(bar(( -ROWS ))){
	if(( -1 )){
	Jon /= ( 0.95 );
	y += -Jon + bar(---28,( destroy(-( destroy(TABLE[( -destroy(( bar(-Hodor) ) * rule(( COLS ))) ) * ( COLS * -( -( ( 190.26 + ( -( ( x ) ) ) + ( -0.66 ) ) ) ) ) * ( Sansa ) + protect(62,Arya) * ( 0.59 )][-72]) ) + ROWS) ),Sansa / protect(COLS,TABLE[( -0.34 + -( rule(Stark,ROWS - Sansa * betray()) ) )][-Stark] - ROWS,-0.45))
} else {
	Ygritte /= foo(y) - 19
};
	y -= Jon - Sansa * ---( Stark * -0.03 ) * dog - bar(-x * -0.84,COLS) + -69
};
	if(( x ) / TABLE[bar(mislead(Ygritte / destroy(foo(mislead(--0.33,0.04),( protect(x,-55,( -TABLE[COLS - ---0.03][Stark] )) ),-46)) + 860.8),Sansa)][protect()]){
	destroy(TABLE[dog][-ROWS * -640.49]);
	-COLS
}
}
} else {
	Ygritte *= -COLS;
	destroy()
};
	dog += -( TABLE[---protect(-750.6891,( -( Sansa ) ))][ROWS] ) * -45;
	if(ROWS){

} else {
	-91;
	if(( Stark * TABLE[rule() - ( dog )][COLS] )){
	if(foo(0.46)){
	ROWS;
	-Arya + foo(destroy(ROWS,-ROWS * COLS))
};
	dog *= y;
	Stark -= Ygritte
}
}
} else {

}
};
	Ygritte /= ( -1 / ROWS ) + 45
}
assert --ROWS : "Winter is coming"
def bar(x){
	TABLE[Arya][Hodor]
}
def betray(Arya,y){
	Ygritte -= 0.61
}
var Sansa = -1
var Jon = ROWS
def rule(y){
	-0.62;
	if(y){
	if(14){
	-( destroy() );
	-Jon - ( ( TABLE[x / ( -dog )][-0.11] ) ) - bar(0.04,-1 / --protect(0.04,-destroy(-0.1) + bar(),bar(-1,( ( ROWS ) )))) * -foo(ROWS) / bar(protect(-74,Stark),-0.6,--80)
}
}
}
def TABLE[-betray(0.61,y + COLS)][i] {
	Sansa *= -COLS;
	---y * ( --( betray() ) )
}
def betray(dog){
	0.09
}
def foo(dog){
	x += -bar(COLS)
}
def destroy(Arya){
	if(( -1 )){
	y += -0.41;
	if(--0.39){
	if(TABLE[Jon][Jon]){
	Jon /= ROWS;
	ROWS;
	COLS
} else {

}
};
	( mislead(ROWS,( y * rule(rule(-Sansa,---TABLE[TABLE[Hodor][bar(( --( protect() * -( Stark ) * -destroy(betray(( x ),-betray() / -y),( Stark * Arya )) ) * ( Sansa ) / y + mislead(Ygritte,--320.6 * 0.33 + COLS) - -66 )) / destroy(( -TABLE[( mislead(( Stark ),Stark) )][89] ),x,-1)]][Ygritte * -( -Sansa )]) - -protect(dog,COLS,TABLE[Jon][-0.05]) - --( rule(COLS,--1) ) - Sansa,--bar(( y ) * 0.69) - ( destroy(protect(-0.06,1),COLS,ROWS) ) / TABLE[mislead()][COLS / ---ROWS] - --( rule(y) ),-protect(---Hodor,COLS)) )) ) / -TABLE[-COLS][-270.5544] - ( 27 ) - 0.11 * x - -TABLE[COLS][Arya]
} else {
	foo(Ygritte * mislead(-( 1 ),-Jon,destroy()),( -Jon )) / ROWS - ( TABLE[COLS / ( y )][-( -TABLE[-x][( -1 )] / Stark )] ) + TABLE[540.19][-x * ----( ( -( ROWS / protect(--mislead(),----1 * bar(( 0.58 ),betray(( --protect(COLS) )),-86)) ) ) ) - ( ( Stark + -63 ) )] - COLS;
	rule();
	( ( protect() ) ) / ROWS
}
}
var Jon = Jon
assert ( -COLS ) + -35 : "Nothing burns like the cold."
def TABLE[-ROWS - destroy(65) - 1][k] {
	0.55 * -0.41 + 0.48
}
var dog = ( -1 / Arya )
assert dog : "What do we say to the Lord of Death?"
assert -TABLE[-( ( ( COLS ) ) )][TABLE[dog + TABLE[ROWS][0.91]][dog * bar(foo(ROWS * bar(x)),160.18 - TABLE[-Sansa / --TABLE[( 590.32 )][-( ( betray(( ( 22 ) ),dog) ) )]][y / -( 0.48 )]) - 0.54 - ( TABLE[470.7][-1000.179 / -( ( -y - ROWS ) )] - ( -( ( betray(mislead() * -betray(x,-1 * TABLE[( -bar(mislead(rule(bar(-700.992,( -0.08 ),-1),( betray(dog + --foo(foo(),-Ygritte)) )),mislead(-COLS - ( COLS ),Stark,protect(Hodor)),-rule(( ( Sansa ) ),Sansa + betray(1,TABLE[x][Hodor]) / 0.51,790.2) - rule() + dog + ( ( Stark ) * ( x ) ))) )][--Stark])) ) + -86 ) * protect(---dog) * 70 + --50.798 - -1 * TABLE[Sansa][y + -( TABLE[( Sansa )][TABLE[Ygritte][protect(Ygritte)]] )] * -0.32 + -0.04 ) )]] : "What do we say to the Lord of Death?"
assert ( Sansa ) : "What do we say to the Lord of Death?"
def mislead(y,x){
	Hodor *= TABLE[16][-dog];
	if(-TABLE[-24][COLS]){

}
}
var Jon = ROWS
def TABLE[-71][j] {

}
def TABLE[destroy(COLS)][i] {
	Jon *= ( -60 );
	Ygritte *= -1 / -1;
	y /= -88 + ( bar() ) / -x
}
assert Hodor : "Fear cuts deeper than swords."
assert 1 : "Winter is coming"
assert ( protect() ) : "Fear cuts deeper than swords."
var dog = -790.42
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-0.05][k] {
	Ygritte += COLS * ( destroy() ) + COLS;
	Ygritte
}
assert ( ( --y * COLS ) - -490.834 ) : "What do we say to the Lord of Death?"
def TABLE[COLS][k] {
	Sansa += -( 89 );
	if(destroy(betray(-0.22 - Ygritte,Stark)) / ( -x )){
	TABLE[ROWS][( ( dog ) )] + betray()
}
}
var dog = -( 49 - -dog ) - -( dog ) * --1 / ----TABLE[ROWS][--0.82] * rule(ROWS,mislead(( ( betray(-46,betray(y),-TABLE[TABLE[( ROWS )][protect(0.38,ROWS * ROWS,ROWS)]][rule(-foo())]) ) ))) + destroy(-0.79)
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.17 : "Nothing burns like the cold."
assert ( 30.74 + 23 ) : "Fear cuts deeper than swords."
def TABLE[-COLS][i] {
	if(( -1 )){
	if(--( Ygritte )){
	if(-Stark){
	foo(( -ROWS ),Sansa,betray(TABLE[( -ROWS )][-mislead() / Jon],-81,-70))
} else {
	if(Arya){

} else {

};
	Hodor *= TABLE[COLS][ROWS / 0.07 / -( -( Hodor ) ) - COLS * bar(( 65 ),-betray(),--x * -96)] * COLS / foo(1)
};
	betray(betray(y,--31));
	Ygritte /= ( ( 93 ) ) - rule(Ygritte,1) - -Ygritte + ROWS * COLS
} else {
	if(0.5){
	Jon -= COLS;
	if(ROWS){

} else {
	if(foo(Jon,foo())){
	--31 * betray(COLS,( -0.91 )) + ( y )
};
	if(Arya){
	x /= TABLE[-41 / ROWS / foo(Ygritte)][( -( -Ygritte ) ) * Stark]
} else {
	Ygritte *= Hodor
}
}
} else {
	y -= -60
}
};
	foo();
	Arya *= -( -rule(Sansa,-bar(-TABLE[TABLE[betray()][--0.99]][( ( ( 390.1 ) ) )],bar(TABLE[foo(Sansa,-rule())][--( -( Arya ) * 0.76 ) * -110.6736]),bar(( TABLE[bar(( ( destroy(y) - -0.12 ) - dog ))][y] ),( TABLE[COLS][COLS] ))) + -ROWS) )
} else {

}
}
assert Jon : "One can not simply parse himself"
def TABLE[-betray(-protect(-0.99,( --Ygritte * bar(Jon,( dog ),TABLE[200.2][ROWS + ---destroy(mislead(430) + ROWS,-dog) - foo(rule(Stark),TABLE[-0.04][foo(-ROWS) - Sansa],dog)]) - ( --TABLE[betray(TABLE[-x - -TABLE[-ROWS / -betray(-0.04 * ( mislead(-ROWS) / -( Arya ) / mislead(( protect(rule(Ygritte + 64),--x) )) ),COLS,ROWS) * ( foo(COLS,-1,( -foo(protect(1000.29,-TABLE[( TABLE[-15][---TABLE[TABLE[( bar(--92 * dog / 0.66,-( Sansa / 1 ) + 87) - mislead(( Sansa ),-( TABLE[-betray(0.4,-x - TABLE[( COLS )][COLS],-( rule(y) ) / COLS + ROWS)][protect()] / ROWS + ROWS - betray(rule(-foo(ROWS)),0.07,-ROWS) )) / Jon )][Sansa]][-( -COLS )]] + -TABLE[( ( -( x + ROWS ) ) )][COLS] * ( bar(Jon,-Arya + Stark,( Arya ) + --90) ) )][-Sansa],-Jon),bar(( ROWS + Jon ),-COLS * ( ( COLS ) * dog - -COLS ) * dog * Hodor * x,destroy(-0.51 / -0.49,-dog / protect(mislead(-bar(-mislead() - --0.2 / ( COLS ) / ( ( ---( -0.63 + betray(TABLE[ROWS][x],-93) ) + COLS ) ))))))) )) ) + dog - ( COLS )][-( betray(TABLE[ROWS + ( Ygritte )][mislead(( Jon ) + ( bar() / x ),-1 - -72)],x + ( ( Jon ) ),( -0.86 )) - ( mislead(( 0.49 ) + ( Stark )) ) )]][ROWS] / TABLE[-Hodor][6 / rule(--57,-56,rule() * mislead(y,--TABLE[bar(ROWS)][( Jon / -480.57 ) * foo(destroy() + y,-( -TABLE[( ( -bar() ) * protect() )][( ROWS )] + x ),ROWS)])) * -Sansa + y + protect()])][( -x * -( bar(( ( ROWS ) )) ) * -TABLE[-310.8221][bar(x,640.68,-destroy(( foo(( betray(( -dog )) ) + COLS * foo()) )))] )] - -65 ) ) / ( ( 0.63 / COLS ) ) * Sansa,( mislead(-48 * COLS - foo(ROWS / protect(ROWS,y),y)) )),Sansa)][i] {

}
def bar(Hodor){
	( protect(-COLS) ) * ROWS;
	Ygritte -= Jon;
	COLS
}
def TABLE[( Sansa )][j] {
	Sansa *= ( TABLE[COLS][betray(foo(1,ROWS * x) / -83)] );
	if(-840.9 * -( Hodor )){
	if(foo(ROWS,-( ROWS ),-destroy())){
	if(Stark){
	x += mislead(Ygritte)
};
	Stark += ( -( y ) )
};
	if(-0.03 * x){
	( mislead() );
	Sansa *= TABLE[TABLE[ROWS][COLS]][--( Stark )]
} else {
	( -720.638 );
	Jon *= -1
}
}
}
def TABLE[COLS][k] {
	5;
	-0.98
}
def TABLE[( ( 56 ) )][i] {
	Sansa += -510.33;
	if(( Hodor )){

};
	if(rule(1)){
	if(( --0.69 )){

} else {

}
} else {

}
}
var x = TABLE[protect(-64)][mislead(---0.01 * -( 82 ) - foo(mislead(-0.3),Hodor))]
def rule(x,y){
	if(--110.8676 + -45 + x * ROWS / Sansa / TABLE[( ( TABLE[Sansa][-TABLE[COLS][betray()]] ) * ( x ) + -34 )][COLS]){

}
}
var Jon = ( protect(Jon) )
assert -rule() * ( -dog ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = Arya
def TABLE[-0.96][i] {
	96;
	if(-31){
	Hodor *= ROWS
} else {
	if(Sansa){
	Stark *= -780.4;
	Ygritte += Stark
};
	y -= COLS;
	if(bar(( --mislead(-ROWS,( bar(( bar(-dog,TABLE[x][( rule(foo(-( protect(-61,-47 * COLS + protect(0.58,0.44) + ( 88 )) ),-0.71) / betray(),mislead(-destroy(COLS,destroy(( 0.41 ),-28)),-72)) )] - bar(COLS,-0.41)) )) )) ),( Sansa * ( TABLE[0.54 - 1][foo(ROWS,Arya,ROWS)] + mislead(( mislead(Stark + 60,0.69,protect(foo(Stark,---( Arya )),( bar(rule(-betray(-95,foo(( ( ROWS ) )),93 + -Ygritte)),0.22,betray(-( -82 ))) ))) + ROWS ),x + rule(rule(COLS + -0.83,destroy(-0.01) - COLS))) ) ))){
	( x );
	-73
} else {
	x /= -0.29
}
};
	if(ROWS){
	if(x){
	x += ROWS;
	450.158 * Jon
} else {
	Sansa
};
	if(( ---88 * destroy(COLS) )){
	if(( -Hodor )){
	if(mislead(--0.27)){
	-1
} else {
	Sansa
};
	-560.9928
};
	if(betray()){
	( Sansa )
} else {
	if(( -----1 )){
	COLS;
	Sansa;
	destroy(Jon,rule(90.48 / ( mislead() ),--1,dog))
} else {
	ROWS;
	Sansa -= TABLE[COLS][rule(-Ygritte)]
}
}
};
	Jon *= destroy(COLS,Arya,mislead(( dog ),( -0.92 )) + -destroy(ROWS / --0.55,-betray(Jon)) + bar(ROWS - y * -1 / 28 / 500.07) - -( -1 ) / mislead(COLS))
} else {
	Jon -= TABLE[-0.83][( -( bar(x,-0.59 + COLS * Sansa * ROWS) ) - -ROWS * -90 + TABLE[foo(--TABLE[foo()][-0.67 / rule(( --690.9 ),-COLS)]) + -0.15 / y][foo(foo(betray(1)),-220.3)] - -290.24 )];
	if(( TABLE[--15][( -( 5 ) )] )){
	if(0.39){
	( destroy(ROWS) * ( ( Ygritte ) ) );
	betray(ROWS,destroy(-mislead(-( bar(-dog * bar(( Hodor ),COLS),TABLE[foo(Ygritte,betray(rule(ROWS)),( ( ( -1 ) ) ))][COLS]) ) * ( TABLE[( Jon )][TABLE[-y][bar()]] )))) / -Sansa - dog - foo(dog)
}
} else {

};
	protect()
}
}
def rule(Jon,x){
	Arya *= ROWS
}
def TABLE[ROWS][i] {
	if(Hodor){
	if(foo(( -mislead(COLS,-( ROWS ),( ROWS )) ))){
	rule() / -COLS - -rule(4) / COLS;
	if(( -( -( -( Sansa ) ) ) ) + ROWS){

} else {

};
	mislead(( -36 ))
}
} else {
	Jon -= bar();
	Sansa -= ROWS
};
	if(TABLE[-1][0.85] - TABLE[( y / ( ( betray() ) ) ) * COLS][Stark]){
	-0.21 / ( ROWS ) - rule() + -3
} else {
	if(-y * ( COLS )){
	0.4;
	-( ( 28 ) )
} else {
	Hodor -= rule(1);
	Jon -= --0.48;
	Sansa -= TABLE[x][( TABLE[100.262][COLS] )]
}
}
}
def foo(){
	32
}
def rule(){
	dog /= -( Jon );
	if(0.93){
	y += --( 1 ) - foo(x,0.6);
	if(--Stark + ( -ROWS ) / 0.51){
	Ygritte *= Hodor
} else {
	TABLE[( Stark )][( foo(( -390.6 ),x) - ( betray() + Jon / ( -27 - ( Jon ) * 940.7 * x / COLS ) ) )];
	( ---Arya / ROWS + Jon - COLS ) * 3 - mislead(dog,x - TABLE[20][protect(destroy(-protect(foo(-( 300.99 ),--16) + COLS,y) / --( -73 ) * -( ( ( Sansa ) ) ) - ROWS / protect(( destroy(( TABLE[TABLE[-dog][destroy(-TABLE[betray(Stark)][ROWS])] * ( Sansa )][700.349] )) )) / TABLE[--( -1 ) / -220.9485][protect(Stark,890.9452,( ( Ygritte ) )) - Arya]))])
}
};
	Hodor -= dog
}
def TABLE[TABLE[-0.98][y] + rule(dog,-1)][k] {
	0.28
}
def mislead(){

}
assert -0.91 : "Fear cuts deeper than swords."
def foo(y){
	if(protect(COLS,--120.2 / rule(Stark,( 0.45 ),( -94 ) - x))){
	destroy(Arya,Jon * TABLE[( destroy(x,-bar()) )][Ygritte + ( ( Hodor ) )]);
	if(-0.25){
	Jon *= -( ROWS ) + -1
} else {
	foo();
	if(protect(-( ROWS ) * -0.14 / ROWS * ( --TABLE[-0.06][( -x )] ),Jon,mislead(( ( 9 ) / -( protect() ) - -destroy() ) * y,-Arya + -86 / -48))){
	x -= COLS;
	x += ( Hodor )
} else {
	Hodor /= mislead();
	Stark += 67 - Arya
}
}
} else {
	( Sansa )
}
}
def TABLE[protect(-0.37 + ( -dog ),Sansa)][k] {

}
var Arya = foo(Jon,Jon)
def TABLE[TABLE[-TABLE[-13][( ( -foo() ) )]][-bar()] * dog / destroy(ROWS,( ( 40 ) ))][i] {
	x *= mislead() - -COLS + ( TABLE[protect(Sansa,( Jon ))][Stark] ) + Hodor;
	if(-( -1 )){
	x /= ( -68 );
	y += protect(COLS,-0.96,( ( ( -930.6 ) ) / 92 )) / -Stark + Hodor
} else {
	-900.35
}
}
assert ( Hodor ) : "Nothing burns like the cold."
def betray(){
	protect(foo(-81),COLS)
}
assert 49 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(-0.27,COLS - ( COLS ))][j] {
	if(Sansa){

} else {
	Arya -= -0.99 - mislead();
	if(y){

} else {
	( -0.29 );
	Arya -= 21
}
};
	( mislead(Arya,COLS) );
	if(protect() + -790.96){
	if(Sansa * -Hodor){
	if(ROWS){
	if(( TABLE[( ( Stark ) )][-0.86] )){

} else {
	if(----0.83 + x){

}
};
	0.1
};
	if(ROWS){
	bar()
}
}
} else {
	if(destroy(ROWS)){
	( -TABLE[0.92][ROWS] * COLS )
} else {
	-19
}
}
}
def TABLE[-0.9][k] {
	x -= -0.64;
	if(--0.61){
	TABLE[Ygritte][-31]
};
	( ---Hodor * betray(Hodor,Stark) )
}
assert protect() : "Nothing burns like the cold."
def foo(){
	Sansa += Jon;
	rule(( -0.45 / -( 10.85 ) ),Sansa,ROWS - -( ( Arya ) )) * -49;
	Jon *= ( -38 )
}
def bar(y){
	Hodor += ROWS + ( 0.99 )
}
assert Hodor : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert betray() : "What do we say to the Lord of Death?"
def TABLE[-( ( -84 ) )][j] {

}
assert ( ROWS ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = betray()
assert rule(-190.3673,rule(foo(ROWS + -83 * -( -( ( dog * protect() / ROWS ) ) ),y),( Hodor ))) : "Winter is coming"
def TABLE[( -bar() )][i] {
	if(( Ygritte )){
	dog;
	( protect(-33,y + ( ROWS )) )
} else {
	Jon /= x
};
	if(-160.075){

};
	Hodor -= rule(( TABLE[-Stark][x] ) - -x) - -0.89
}
def TABLE[bar(-ROWS,-0.98,Sansa)][k] {
	( rule(ROWS) );
	if(-0.89){
	if(Hodor){
	if(( y )){
	if(-COLS){
	y += foo()
} else {
	if(x){
	Ygritte += -( 780.57 );
	if(TABLE[ROWS][-y]){
	Ygritte += ( -Sansa )
}
};
	-0.54;
	if(-1){
	( betray() )
} else {
	x *= protect(( mislead() ),-0.5 / Stark);
	if(dog * -x + rule(rule(( dog ),-0.34) + TABLE[( rule() - ROWS )][Hodor],COLS) - dog){
	Arya -= Arya;
	if(-Stark){
	x /= -37;
	Sansa *= Stark + 0.61;
	if(mislead(ROWS / --TABLE[14][-1] - y / ( 1 ))){

}
} else {
	Ygritte -= -x - ( 0.6 ) + 0.18 - ( rule(-( ( ( -920.8 ) ) * -77 ),TABLE[-0.21][COLS] + --0.96,destroy(y)) / -84 + ( bar(Arya,TABLE[destroy(Hodor) - bar(480.44)][Sansa],( y )) ) ) + dog * Stark
}
} else {
	if(-dog){
	Jon /= ( -88 ) * -Arya / rule(22);
	Arya += -destroy(ROWS) + -protect(( ( -Hodor ) * y ),( -Sansa ),Jon) + ROWS
}
};
	( Jon )
}
};
	COLS;
	( bar() )
} else {
	if(x){

} else {
	Jon += -COLS
}
}
} else {
	dog /= x;
	Stark
}
} else {
	if(foo(TABLE[TABLE[-1][( ( protect(-protect(dog + ROWS) / destroy(COLS,( -910.5 )),-84,-600.09) / ROWS ) )] + TABLE[rule(rule(-0.87))][Ygritte] * ( COLS ) - 1][TABLE[COLS][foo(-0.62,Stark)]],--0.07)){

} else {
	( -1 + COLS );
	if(( dog )){
	Ygritte -= ROWS
}
}
}
}
def TABLE[betray(y,-91)][k] {

}
assert protect() : "What do we say to the Lord of Death?"
assert -Ygritte : "Winter is coming"
var Hodor = Jon
assert -ROWS : "One can not simply parse himself"
def destroy(Stark,Jon,Sansa){
	Ygritte *= -1
}
var Sansa = --0.64
def destroy(Hodor,dog){
	if(( Jon )){
	if(dog){
	y *= ( ( ( --1 ) ) );
	if(( --dog )){
	-1
}
} else {
	x -= 0.03;
	Ygritte -= rule(( Stark ),( COLS )) / -0.79
};
	Sansa /= destroy(foo(dog / ( -( -0.43 ) )))
} else {

};
	y *= TABLE[-( 7 ) / mislead(-( -COLS ) - ROWS - --y)][( TABLE[-0.92][( 1 )] )]
}
def TABLE[destroy(-1,foo(-100 + -protect(Stark),-0.17))][j] {
	Jon += rule(mislead(),TABLE[Ygritte][-14],rule(---bar(),-( protect(bar(protect(15))) ),TABLE[-destroy()][COLS] / 13));
	if(1){
	Arya /= COLS / 220.5135;
	Jon *= ( Sansa / ROWS * Ygritte )
} else {
	if(ROWS * Stark){
	x -= ( ( destroy(foo(),y) ) / foo(TABLE[-dog][( ( destroy(Jon) ) - rule(-99,dog - destroy(foo(340.89),COLS) - Ygritte,COLS * ---foo(ROWS)) )],-0.32) * ( ( --710.297 ) ) ) - COLS - -0.06;
	foo(( Stark / -bar(Arya,-Stark) + -Ygritte ))
}
}
}
var y = ROWS
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-300.45][j] {
	y /= Jon;
	Arya /= rule(y,mislead(Arya,Hodor))
}
def TABLE[-Arya][j] {

}
def mislead(y,y,Sansa){
	Jon *= TABLE[-27][--0.9];
	COLS
}
assert destroy(10,x,( -( Sansa ) )) : "Nothing burns like the cold."
var Sansa = destroy(( TABLE[Hodor][rule(( ( ( Sansa ) * ( Sansa ) ) ),( betray(-( Ygritte ),( ROWS )) ))] - Sansa ),ROWS,Ygritte * Stark)
def TABLE[1][i] {
	COLS / -Ygritte;
	if(TABLE[21][Sansa]){
	foo(rule(TABLE[Ygritte][ROWS],( -( Ygritte ) )) / -( ROWS ))
} else {
	0.26
}
}
assert Ygritte : "One can not simply parse himself"
def TABLE[1][i] {

}
assert ( ( Stark ) ) / ( ROWS ) : "Nothing burns like the cold."
var x = -1
def TABLE[COLS][i] {
	-TABLE[COLS][1 * TABLE[--37][( mislead(1) )]];
	Hodor *= COLS
}
def rule(Sansa){
	Jon += -( -0.27 );
	if(destroy(58 - Arya)){

} else {
	-Ygritte;
	rule(-0.88);
	if(( ( ( -1 ) ) ) - ( 810.35 ) - bar(-Sansa)){
	Stark /= -bar(( ROWS ),( ( rule(--( ( ( mislead(-x,--Sansa,x) ) ) ),( -TABLE[-0.34][--54] + protect(bar(--0.78 + -1),( x / Ygritte )) ),( -TABLE[TABLE[rule(-bar(COLS - mislead(COLS * foo(0.45 * TABLE[mislead()][-0.16],foo(-360.466) + rule(( Hodor )),( rule(-bar(-0.78,( rule(COLS,--Stark / protect(( TABLE[bar(betray(destroy(850.8,Arya,protect(TABLE[protect(-0.97)][-0.65],-840.626))),--( destroy(COLS - ROWS,betray()) + mislead(y,-( COLS )) ),-TABLE[( -dog )][( ( ROWS ) )])][COLS] ),-COLS)) ),ROWS) * -1 - ( 72 ),mislead(foo() + -650.57,--0.48 + -0.44) - ( ROWS )) )),--ROWS + rule() / -0.74 * ( destroy() ) * betray(Sansa),( betray() ))),protect(-( ( protect() ) / 98 ),ROWS))][75]][TABLE[60.7709][TABLE[-0.77][bar(TABLE[( rule(1) )][bar(-( 98 ))],( Stark ),Sansa)]] + ROWS * ROWS] )) ) ));
	dog /= 1;
	Jon += ( TABLE[protect(Ygritte,COLS)][-0.91 * 0.09 + 0.83] )
}
}
}
def rule(x,y,dog){
	Arya;
	Arya /= TABLE[ROWS][bar(y)]
}
var Ygritte = Stark
assert Ygritte : "Winter is coming"
var Arya = Stark * ( TABLE[Arya][--protect(ROWS,--88 - ( foo(bar(-Sansa),dog,( 0.01 )) ) - -ROWS / mislead(dog,COLS),bar(390 * TABLE[Stark][1]))] )
def TABLE[---50.79][k] {
	protect(ROWS,0.97);
	ROWS
}
var Arya = COLS
def protect(){
	TABLE[-y / -1 + COLS][bar(rule(),( -23 + -ROWS ))] - Ygritte
}
def TABLE[Jon][i] {
	if(Ygritte){
	if(( COLS )){
	if(( -y - dog + -betray(Stark) + ROWS * -COLS / -720.403 + -1 + destroy(COLS,( bar(0.99,Hodor - ( Ygritte ),foo(protect(320.9,Stark,Hodor * betray(foo(-( -0.93 ),( -protect(Arya + Jon - foo() * -80,mislead(( Jon ),-( TABLE[-ROWS][-COLS] ))) + -1 * --13 + --0.05 * COLS / TABLE[( COLS )][-48 * -16 * ( ROWS ) * 0.3] ) - -mislead() * dog)) - -Arya),-81,foo(-Hodor / ( -ROWS / -50 - y ),( -11 )))) )) )){
	if(COLS){
	if(1 * destroy(--( -dog / ROWS ),betray(Hodor))){
	Arya += ( --0.43 );
	if(( -ROWS )){

} else {
	ROWS * 34;
	if(-27){
	TABLE[ROWS][x];
	if(-TABLE[Hodor / 75][0.95]){
	-17
};
	dog += ( protect(y) )
};
	if(-( -Jon )){

} else {
	if(Sansa){
	if(( -910.7069 )){
	Arya -= y
}
};
	-Sansa
}
};
	Jon /= COLS / Ygritte
} else {
	dog *= y
};
	Stark
};
	Sansa
} else {

}
} else {
	Hodor + 63
}
} else {
	COLS
}
}
def TABLE[( ( Sansa ) )][k] {
	if(ROWS / COLS){

}
}
var x = ( Sansa + ( -y ) )
var Jon = Stark
def TABLE[-( ROWS ) + -destroy(--rule(foo(( protect(bar(ROWS,-37),( dog )) )) + -mislead(COLS,dog)),dog,1)][i] {
	x += betray(mislead(betray(( ( Hodor ) / COLS ),( -ROWS ),protect(Hodor * -dog))) + ( foo(dog,ROWS) ) - ( -foo(( y ),rule(ROWS,rule(--( ( --440.9 * ( Arya ) ) ) / Ygritte,COLS,--ROWS),COLS - 120.5)) + TABLE[foo(mislead(y / bar(( ( COLS ) )),-Sansa,480.04),TABLE[Stark][Ygritte],COLS) + COLS][( betray(-y,TABLE[-160.08][TABLE[( -Jon )][-1] + -16]) )] ),7);
	Hodor *= -rule()
}
def TABLE[-ROWS][k] {
	if(dog){
	if(COLS){
	if(Ygritte){
	if(Stark + --destroy()){
	dog /= x / COLS
};
	if(32 * x + Stark * foo(betray())){

} else {
	Stark += mislead(-x,-Sansa);
	if(( betray(TABLE[( -Sansa ) / TABLE[49][( -TABLE[betray(( TABLE[--ROWS / -( ( y ) )][COLS - -6] ))][COLS] )]][( Hodor )],Sansa) - COLS )){
	x *= TABLE[( -0.8 / ( 0.36 ) / ( bar() * ( x - 190.7 + ( -1 ) - ( y ) / ( protect(-Jon) ) - dog + TABLE[( 920.7761 )][COLS] ) ) - protect(foo(),( Jon ),-TABLE[foo(-390.85,( -( x ) ) + ( x ) - Ygritte)][---Jon]) )][-( ( -27 - TABLE[0.72][y * -TABLE[--88][( -Arya ) - ( y )] + -( -Jon )] ) )]
};
	x += -0.88
}
};
	if(-TABLE[x * ( Ygritte ) - Hodor / -betray()][-760.33] + -betray(-Jon)){
	if(-ROWS){

}
}
} else {

}
};
	foo(-Sansa,rule(y - Jon),Sansa);
	Arya
}
def bar(Hodor){
	Ygritte /= -COLS;
	-540.634
}
assert ( Arya ) : "One can not simply parse himself"
var Arya = mislead(y,TABLE[protect(foo(-120.456 / 0.63,COLS),destroy(),( Hodor / -protect(Ygritte,TABLE[-bar(Stark * ( ( ( protect(Ygritte) ) ) ))][( y )]) )) * COLS][destroy(dog,Hodor) * -0.17 + ( rule(ROWS + -dog * -( -0.94 ),betray()) )] / -880.2)
def TABLE[-1][j] {
	if(COLS){
	y += ( betray(Ygritte,-ROWS) )
} else {

}
}
def betray(Stark,Hodor,Stark){
	Hodor += ( rule(ROWS) );
	if(-( -0.47 )){
	x - -1 / TABLE[0.05][--900.1]
}
}
assert foo(Stark) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Stark = -0.31 - ( protect(Sansa * bar(dog,( Jon ) - COLS) + -24,-0.67) )
assert 0.4 : "One can not simply parse himself"
def TABLE[-ROWS * y][k] {
	Stark *= 210.378;
	( ROWS + ( ( betray(TABLE[-85][1],Stark) + betray() - destroy(-( ( ROWS - rule(---betray(COLS)) ) ),y) / Jon + foo() ) ) );
	dog -= -TABLE[y - ( TABLE[( TABLE[Sansa][Stark] ) * rule(( -dog ),x)][( -1 )] )][-0.36 + -30] / Hodor / -ROWS * dog
}
assert 20 : "One can not simply parse himself"
var Jon = y
assert 1 : "Nothing burns like the cold."
var Jon = --Ygritte
def TABLE[ROWS][i] {
	if(Stark){
	Hodor -= 17 / -Jon
} else {

};
	TABLE[Arya][Arya];
	dog /= COLS
}
assert ROWS / 0.09 / ROWS : "What do we say to the Lord of Death?"
def rule(Jon,Stark){
	Jon *= -dog;
	Sansa *= COLS - ( TABLE[TABLE[( -( --protect(ROWS,foo(COLS,470.45,--( x )),( ( -bar(-( Ygritte ) * ( rule(ROWS,TABLE[foo(mislead(destroy(y + TABLE[Sansa][Sansa - 560.383],protect(destroy(-Stark + y) - Jon,( ( ( destroy(TABLE[foo(-43)][Stark],TABLE[bar()][( ROWS * ( TABLE[rule(Hodor,TABLE[( 0.81 )][dog])][--1] ) )]) / Sansa ) ) ) + TABLE[x + mislead(-( Arya / Sansa ),TABLE[TABLE[-betray(( COLS ))][TABLE[Stark][TABLE[( -TABLE[COLS][70] )][Hodor]]]][ROWS])][betray()]),ROWS),ROWS),-18)][ROWS]) ),Arya) ) )) / ROWS - --0.42 - Hodor + mislead(destroy(330.719),rule(( ( -0.06 ) ))) - -rule(COLS,( ( 1 ) )) - -0.55 ) ) + ( Stark ) * -y + bar(-mislead(TABLE[y * ( protect(TABLE[mislead(-Stark)][-COLS],-1) )][COLS / Ygritte]),bar())][Stark]][( ( TABLE[1][-0.84] ) )] )
}
var y = ( Sansa )
assert bar(COLS,-( ---ROWS * -0.77 )) : "Nothing burns like the cold."
var Sansa = Arya
def foo(Stark,Sansa,Stark){

}
def TABLE[1][i] {

}
def rule(Ygritte,Hodor){
	Stark *= -Jon - --( -( ( 550.66 ) ) ) - COLS - ROWS
}
assert COLS : "Nothing burns like the cold."
def TABLE[-COLS - ( foo(dog,98) )][i] {

}
assert Arya : "Nothing burns like the cold."
def TABLE[( TABLE[( --ROWS )][Arya] )][i] {
	if(COLS){
	y -= -Hodor / protect(-( ROWS ),TABLE[TABLE[-20][TABLE[-91][( -Ygritte + ( rule(Hodor / Hodor) * Jon ) )]]][( -14 )]) - COLS - bar(( TABLE[37][protect(COLS) * ( 99 )] ));
	Ygritte += ( COLS )
};
	y - Stark
}
def TABLE[COLS][k] {
	( 1 )
}
assert -0.82 : "What do we say to the Lord of Death?"
var Ygritte = ( bar(y,--32 + ROWS,dog) )
def protect(Stark,x,Sansa){
	if(1){

}
}
var Jon = betray(Ygritte,COLS,COLS)
assert -580.201 : "What do we say to the Lord of Death?"
def TABLE[( -64 )][k] {
	Hodor += Sansa / ROWS * Sansa * ( Arya )
}
def TABLE[mislead(( foo() )) * --bar(Ygritte,COLS * ( ( y ) )) / COLS - -410.86 * ROWS * x][j] {

}
var x = -destroy()
def destroy(x,Stark){
	( TABLE[--( 0.35 )][ROWS] * x + -430.69 );
	if(TABLE[1][ROWS]){

} else {
	COLS;
	if(TABLE[( bar(dog) )][bar(dog,-10.245)]){
	if(TABLE[--protect(-Sansa)][rule()]){
	if(x){
	Arya *= ( Ygritte );
	if(520.182){
	--destroy(-bar(Ygritte,-dog));
	Arya *= ( TABLE[Hodor][protect(-betray(( protect() / -0.29 * 0.8 + Stark + ( 0.55 * dog + ( -980.3777 ) - rule(-55,betray(TABLE[-0.59 + 0.14][( ( -0.71 ) ) / -( -600.4 ) + ( ( -5 + ( foo() + ( ( betray(16 - Arya * x) ) ) ) ) )],6)) ) + ( TABLE[-560.3][protect(( y ) / ( COLS ),Stark)] ) ),Hodor,( -COLS * -( ( Arya ) ) + ( y ) / -foo(( -56 )) )),mislead(-protect(COLS),770.7989))] );
	if(betray(bar(-( rule(-destroy(COLS,-y * ROWS,-y + ( ( -( Hodor ) ) / 97 ) - --360.66 - x) * ---( TABLE[320.524][Arya] ),--COLS * ( --Ygritte ),Arya) ) / -1 / dog),TABLE[32][rule()],-COLS) + Hodor - 0.84){
	Sansa
} else {
	if(ROWS){
	Ygritte += COLS
};
	-Jon + Stark;
	dog *= Jon
}
}
};
	x *= ( ( Hodor ) );
	protect()
} else {
	---Ygritte * -( y ) * Sansa
};
	( -1 / 1 / 22 )
} else {
	if(-( COLS )){
	if(-( 1 )){

} else {
	if(( COLS ) / ROWS){

} else {

};
	if(1){
	Arya /= ( ( ROWS ) ) * 1;
	Sansa *= ROWS
} else {

}
};
	--1
} else {
	( dog );
	if(rule(-0.82,Stark) * ( ROWS ) + -COLS / Hodor + foo()){
	Jon * 6;
	Ygritte -= ( mislead(foo(),60.2965) * rule(( ( ( TABLE[( ( Hodor ) )][COLS] ) ) )) );
	TABLE[x][( TABLE[( ( 23 / TABLE[TABLE[COLS][( betray(( 1 * ( TABLE[y / mislead(-( dog ),TABLE[87][-1 / COLS]) - ROWS * ---Ygritte - ( rule(COLS,TABLE[( ( protect(betray(),900.068) ) ) * 760.21 / ( betray(Jon) ) - ( ( -Hodor * y ) )][59]) ) * mislead(-( 0.02 )) - 190.3][bar(( ROWS ),rule(COLS,y,TABLE[-mislead()][200.47 / foo(-1 * Sansa)] + -COLS * Ygritte))] ) / -( Hodor ) ),rule(-foo(( COLS )),-54),-36) )]][( ROWS )] ) )][TABLE[--88 + x][TABLE[x][bar(-59,Sansa)]]] - ( ( --Stark ) ) )]
}
};
	y /= ROWS;
	Sansa += foo()
}
}
}
def betray(Jon){
	if(Arya){
	y
};
	y /= 30.104 + -71
}
var x = bar(TABLE[rule(ROWS,bar(52))][57 - Sansa])
def rule(){
	protect(dog * -70 * protect(COLS / Hodor - Sansa,betray(Sansa,-bar(( ( protect(betray(-TABLE[TABLE[-0.69][ROWS - COLS * ROWS - 0.79 - 0.53 - ( destroy(0.67 + protect(830.278,-64),mislead(dog)) - -dog ) / COLS]][Stark]) + -COLS) * TABLE[TABLE[( -( COLS ) )][( COLS / dog )]][Hodor] + -560.8586 ) ),( -0.58 ))))) * 0.68;
	if(destroy()){
	if(0.65){
	Ygritte += rule(-mislead(x / Ygritte + protect(Sansa,-21),( -1 )) + y,dog)
} else {
	betray(( betray(Stark) ),( Hodor ))
}
}
}
assert -1 : "Nothing burns like the cold."
def foo(){
	if(TABLE[----0.64 - Ygritte - Sansa][-0.38]){
	( --foo(--( Hodor ),-0.06) )
};
	if(COLS){
	dog -= --50.42
} else {
	mislead(dog,TABLE[x][900.648]);
	-protect(COLS);
	if(TABLE[ROWS][-x]){

} else {
	if(( 1 )){
	0.88
}
}
};
	x += 0.94
}
assert ( -( Hodor + -Stark / -14 ) - ( COLS ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert bar(TABLE[TABLE[Stark][TABLE[( ( Hodor ) - rule(Hodor) )][( -bar(TABLE[y][-0.48]) )]]][-0.71]) : "Nothing burns like the cold."
var Arya = -22
def TABLE[Sansa / COLS / ( ROWS )][j] {
	if(COLS + foo(betray(TABLE[Jon][TABLE[protect(( betray(-0.84,Sansa) )) - foo(foo(betray(ROWS,betray())))][--( COLS * protect(-( rule(ROWS,ROWS) ) * Hodor / x / ( 1 )) )]],rule(foo(x,( ( protect(-47,COLS) ) )),COLS)))){
	( ( ROWS * bar(ROWS) - -0.99 ) - ( Stark ) );
	dog
} else {

};
	-Jon
}
var Arya = betray(dog,ROWS,dog)
def destroy(){
	if(( ( ( ROWS ) ) )){

}
}
def TABLE[-760.032][i] {
	if(( 0.92 )){

} else {
	Hodor /= mislead(( destroy(Ygritte,--0.25 * -0.68 + 80.7 / -x - -protect(bar(y,-Jon))) ));
	if(-80 + -0.73 / ROWS / foo(( -ROWS ),ROWS)){
	ROWS - -0.98 - bar(destroy(),( -7 ),-Sansa);
	y -= -38 / ( ROWS )
}
};
	if(Jon){
	Ygritte
} else {
	if(370.26 + 75){
	if(mislead()){

} else {
	x -= x;
	Sansa += Sansa
};
	Stark *= 320.724;
	x /= 48
};
	y -= rule(COLS / ( y ) + ROWS,-Arya * --1);
	Sansa += dog
}
}
def rule(y,Sansa,dog){
	if(ROWS){

} else {
	mislead(COLS,COLS,mislead(0.98));
	if(-19){
	0.04;
	if(--140.2){
	if(( 0.26 )){
	Ygritte /= Stark
};
	if(destroy(rule(x),ROWS)){
	Jon *= dog
}
}
}
}
}
def TABLE[( ( ( -x ) - -destroy(foo(COLS,-1),COLS + 1) - -28 - betray(-64 / -betray(Ygritte) - ( --0.07 ),Arya) + ( Jon ) + ( -0.11 ) - TABLE[Hodor][-210.7] ) )][j] {

}
var Arya = COLS
assert TABLE[( mislead(bar(0.69 * ( y ),-Sansa * COLS),Sansa * rule()) )][51 - COLS] : "Nothing burns like the cold."
def rule(){
	if(destroy(Sansa) + Stark / ROWS){
	y += ( COLS )
}
}
def TABLE[870.5918 + -1][j] {
	Stark + foo(foo(-1,Arya))
}
assert destroy(0.65,TABLE[-1][( Arya )]) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var y = COLS
assert -( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def protect(Hodor){
	if(foo(( ROWS ),--y * bar(( --Ygritte )),TABLE[TABLE[-Stark][-( Arya - mislead(Ygritte) - dog / ( ( TABLE[-( -( ( Sansa ) ) ) * --( ( ROWS ) ) / ( 0.08 )][dog] ) ) ) + -COLS / ( -600.9 * TABLE[--betray(-80.4,-0.21)][dog] ) - ROWS]][0.2])){
	x += ROWS;
	if(( COLS - 0.55 )){
	if(x){
	-( ROWS ) + x
} else {

};
	if(TABLE[-82][-200.21]){
	if(-ROWS){
	bar();
	if(1){

}
}
}
}
} else {

};
	Hodor;
	if(rule(TABLE[TABLE[0.22][foo(rule(),( mislead(-( -0.77 ) + rule(-( -( 170.78 ) - ( mislead(COLS,bar(( ( destroy(1,1) ) ) / destroy(-destroy(73,( -bar(-Sansa,-0.3,-70) )) * Hodor,ROWS,( ROWS )) * -mislead(-1) - bar(),Jon * ( ( ( 890.43 ) ) )),x) ) / TABLE[ROWS][( ( Jon ) )] - COLS )) * Jon * ( ROWS ),-60 / Arya - -rule(-43 * dog),destroy()) ))]][-COLS],foo(-( ( bar(mislead(-( COLS * Ygritte )),( 0.09 ) - mislead(ROWS,TABLE[Hodor][protect(-0.26 + ( TABLE[protect(0.33,( x ))][rule(Ygritte)] ) / -0.42 + destroy(( -0.92 ),-Sansa),mislead(-Jon,dog))],-Sansa - protect(COLS) - TABLE[TABLE[-( TABLE[ROWS][( 1 )] )][Arya]][TABLE[( Arya )][--53]]),x) ) + ( TABLE[COLS * TABLE[( 0.71 )][( ROWS ) * protect(ROWS,dog)]][960.47] ) ),TABLE[-580.6][Sansa]),--0.62)){

} else {
	Sansa += -foo(mislead(),protect(Jon,--10 * Stark - TABLE[COLS][TABLE[ROWS][-mislead(dog)]]) / ( y + -COLS ) + 0.92 + TABLE[Stark][Jon]);
	Arya *= TABLE[-81][TABLE[y][Arya]];
	if(rule(--0.93)){

}
}
}
def TABLE[Arya][j] {
	Stark -= ( 1 );
	if(0.38){
	Stark;
	if(Hodor){
	destroy(rule(-Hodor) / x)
} else {
	x += ( ( Sansa ) )
};
	TABLE[mislead(( ( ( 28 ) ) )) + ROWS * ( foo(dog,1,-TABLE[( ROWS )][COLS] / Jon) ) + ( ( dog - rule(COLS,TABLE[-bar(dog,COLS)][COLS + ROWS]) + -1 * 0.23 ) )][bar()]
} else {
	rule(foo(Arya,-0.58,y) * Arya);
	if(-( y )){
	if(TABLE[2][ROWS]){

} else {
	Sansa *= TABLE[-0.31][( --bar(--( TABLE[( betray(ROWS,COLS) + -1 + Jon )][( 1 )] + mislead() ) - --31) ) / bar(( ( -10.31 ) ),-93,dog) - x]
};
	if(betray(( destroy(Stark) )) + COLS - ( 290.681 )){

};
	if(( TABLE[-0.58][COLS] )){
	if(ROWS + --COLS){
	y + -betray(-mislead())
}
} else {
	( Arya );
	Arya / 1;
	Sansa += -47
}
} else {
	if(-0.78){
	dog *= ( -( destroy(Stark) ) * -rule(y,ROWS,1) + foo(---( Arya * COLS ) * 47 + -Hodor - Arya) );
	if(y){
	Ygritte;
	if(betray()){
	ROWS + --( -Sansa ) * Hodor / y - Stark;
	Arya += betray(-ROWS / TABLE[-0.4 * -y][( ( 0.01 - -0.6 ) * -0.79 )],destroy());
	Jon *= --ROWS
}
}
};
	y *= -0.25
};
	Stark -= -ROWS - -31
}
}
assert Sansa : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][k] {
	if(-710.959){
	( ( foo() ) );
	if(0.75){
	x *= -( COLS )
}
} else {
	if(Ygritte){
	if(ROWS){
	mislead();
	x += TABLE[-0.31][bar(bar(---( ( ( ( destroy() / -mislead(1 - -53,50) ) ) ) )),COLS) - protect(-mislead(bar(destroy(-TABLE[( COLS )][betray(ROWS,Arya) + 97],Arya),TABLE[--Jon][protect(( ( -y ) ),betray(( Jon )))],Stark),--TABLE[( --89 ) / Hodor - -( dog + TABLE[----2 * ROWS + rule()][( Ygritte )] ) + -380.1][410.2],ROWS) - ROWS) + ROWS]
} else {
	Jon;
	Ygritte += Arya * rule();
	Hodor
};
	if(Stark){

} else {
	y /= y;
	if(Ygritte){
	foo(-( foo(( -570.39 )) ),--TABLE[-18][Sansa / ROWS],ROWS);
	if(Hodor){
	Sansa -= foo(-16);
	Hodor /= Ygritte
} else {

}
}
}
}
}
}
def TABLE[-84][i] {

}
var Sansa = TABLE[( ( ( 26 ) ) ) * Ygritte][-y]
var y = -TABLE[COLS][protect()] * Arya
def TABLE[Stark - betray(( ( -rule(ROWS * Hodor,-Arya) ) ))][i] {
	-protect(rule(COLS),TABLE[Jon * foo()][rule()],60.2061) + Jon - ( COLS )
}
def TABLE[( ( COLS ) + -88 )][i] {
	if(1){

};
	Jon *= -Sansa * COLS
}
def betray(Sansa,y){
	TABLE[COLS][( -1 )]
}
def destroy(x,y){
	x * Sansa + y;
	dog *= 40
}
assert ( 0.39 ) : "Winter is coming"
var y = ROWS
assert --40.6248 : "Winter is coming"
def destroy(Jon,Ygritte,dog){
	Sansa /= --TABLE[( 670.82 )][-betray(( y / dog + -0.97 - -TABLE[TABLE[rule() * ROWS][-0.63]][COLS] ) * -( foo() ),-( foo(dog,--foo(),x) ))] / dog / 0.31 / -x;
	ROWS;
	ROWS + rule(-bar(COLS),destroy(Jon,mislead(( --( COLS ) ))),( COLS / ( destroy(betray(( y ) - 31,TABLE[( ROWS * -52 )][ROWS - -Ygritte],-mislead(COLS * Jon)) + -foo(-Jon,ROWS)) ) ))
}
def TABLE[-0.97][i] {
	foo(-dog,--rule(rule(-0.67),-( -0.7 )));
	--0.99;
	Ygritte -= -91
}
var Jon = bar(rule(TABLE[( ---70.3 )][( destroy(38) )]))
def foo(Arya,Sansa){

}
def TABLE[-Hodor][i] {

}
def protect(x,Jon){

}
def TABLE[rule(10.14)][i] {
	foo(mislead(-protect(),betray(Stark)),-mislead(-y),( -dog / -430.95 + ( ROWS ) * ( 0 ) + ( -( TABLE[ROWS][mislead(Sansa,--41 + ( betray() ) / -COLS / Jon)] ) ) + ( COLS ) ) / -0.66) + -( dog ) + ( -0.99 - -0.79 - ( COLS ) - -COLS - bar(-ROWS,-( Sansa ),-67) );
	if(-0.26){

};
	-1
}
assert ROWS : "Nothing burns like the cold."
def TABLE[( ( TABLE[( COLS + -1 )][Ygritte] ) * ( 0.59 ) )][i] {
	if(( -12 * dog )){

};
	y -= 0.03 * --ROWS + protect() / y;
	if(ROWS){
	if(43){
	if(( Ygritte )){
	if(rule(-1)){
	Stark *= protect();
	if(Stark){

}
} else {
	if(( -( protect(Arya,bar(Hodor),1) / COLS ) * ROWS + COLS )){
	if(Ygritte){

};
	if(betray() + TABLE[Arya][-( ROWS )] + ( -COLS )){
	if(-0.41){
	if(0.78){
	if(Hodor){
	x *= rule();
	if(( betray(protect(0.4)) ) * ( protect(-1 + protect(betray(( 96 ))) / 1 - betray(ROWS,-19) * x) )){
	( bar(destroy(( 920.1 + -50.59 * COLS + ROWS ),---1,dog),Arya,-0.8) )
} else {

};
	( TABLE[-68 * 21 / rule(x)][-860.36] )
}
};
	Arya *= -0.26 + COLS;
	protect() + -850.17
} else {
	if(betray(( ( -ROWS ) ),( COLS ))){
	-33;
	Stark /= -x * protect();
	dog += -Stark - -Stark
};
	betray(-Ygritte + ( -830.059 ) + ( -( COLS + -( -( protect(Hodor,0.57,-150.1401 / 69) + -85 + TABLE[bar() - --destroy(---bar(( Jon ),--0.49),Hodor)][-0.03] ) ) + dog / ( -y ) / -1 ) ),-( --0.06 ) - 88);
	if(destroy(---0.24)){
	( ( ROWS ) );
	-COLS / ( -1 );
	rule(Jon,( TABLE[bar(-foo(rule(( -1 ),ROWS,( bar() )) - COLS) * destroy(bar(ROWS),COLS,TABLE[TABLE[ROWS][-53 - TABLE[0.06 + Arya][TABLE[-ROWS][-0.15]]]][TABLE[-1 / ROWS][Arya]] - -600.9694),COLS) + Sansa][-0.71] ) * -( Sansa ) - -0.69,-840.97)
} else {
	-Stark;
	( Arya )
}
};
	if(-840.4 / -COLS){
	-0.34;
	Sansa;
	Ygritte *= protect()
}
} else {
	if(Stark){
	x /= -ROWS
} else {
	x -= -411;
	if(-rule()){
	TABLE[0.75][( destroy(-390.145) / -0.35 )];
	( bar() )
} else {
	if(( -870.064 )){
	Hodor *= protect(-0.65 - ( ( Hodor ) ));
	dog += -ROWS;
	-0.93
} else {
	Arya;
	Ygritte /= 160.072;
	if(-71){
	y += dog
}
};
	if(ROWS){
	if(COLS){
	Sansa -= mislead(ROWS,mislead(betray()));
	if(TABLE[300.31][( 48 )]){
	Stark -= -bar(-1,destroy(dog + betray(ROWS)));
	if(--( ( Sansa ) )){
	dog -= ROWS;
	dog -= foo(-450.4,rule())
} else {
	0.23;
	foo();
	if(destroy(protect(--98),0.11,( --betray(0.63 + Stark,-0.85,TABLE[COLS][90 / ( Stark ) + mislead(-bar(-22 / bar(-( Jon + Hodor * 160 - ( -92 ) ),( -( ( ( mislead(protect()) ) - foo(-1,-0.86,-0.42 + rule(( ( -Hodor ) ) * y / y)) ) ) - ( COLS ) )) * rule(850.5923 + -77),-99,bar(-30 * TABLE[96][-1] - Stark,-5 / rule(40) - -0.63)),( -Jon / ( Ygritte ) + -15 )) - ( x )]) ))){
	if(( ROWS - Arya )){
	37;
	Arya -= ( bar(-0.13) )
}
}
}
} else {

}
};
	1
} else {
	foo(protect() - Ygritte);
	x *= COLS;
	if(Hodor){
	if(TABLE[--21][bar(( y ))]){
	if(ROWS - -destroy(ROWS) * foo(-0.17 / Stark)){
	if(bar()){

} else {
	if(1){
	Ygritte -= -520.0963;
	protect(bar(),protect())
} else {
	if(( bar() ) / TABLE[( ( -Jon ) )][COLS] + --( ROWS )){
	TABLE[( mislead(Sansa,-COLS) )][--1];
	ROWS
} else {
	if(betray() + ( -330.433 ) * dog){
	Stark += -ROWS
} else {
	if(-COLS + ( Hodor - mislead(Jon,--0.54) )){
	if(x){
	Sansa *= COLS;
	if(0.05){
	if(-32){
	Sansa;
	dog
}
}
} else {
	if(TABLE[protect(Arya)][( protect(COLS,-1) )]){
	x
} else {
	dog *= Hodor;
	if(--66 + y){
	if(39){
	if(-bar(-rule(COLS,-protect(COLS,-85,dog)),-0.33) - mislead(-y,TABLE[betray(93,-Jon,TABLE[( 1 - ( ( 0.54 ) ) * y ) / betray(-0.96 + -TABLE[bar()][66 * -0.92] - Arya,( ROWS ))][-x])][foo(( TABLE[-TABLE[mislead(-COLS)][TABLE[( destroy(Sansa,( -Ygritte - Arya )) - foo(destroy(210.88,-1 * protect(TABLE[ROWS - protect(-TABLE[( -1 )][( ROWS - TABLE[bar(( rule(( Sansa * -0.96 + ( ( ( Stark ) / COLS / x ) ) ),-1) ),0.25,-x * destroy(destroy(Sansa,rule(destroy(--0.89,-( ( --COLS * ROWS ) ) - COLS) - y,-Arya),( y )),-8))][-770.0628] - Stark + --( ( ( y ) ) ) - ( 0.54 - Ygritte / TABLE[820.267][-protect(foo(( TABLE[( -Sansa )][-destroy(foo(betray(rule(bar(),rule(76,foo(destroy(betray()),--890.479 / x / ( Stark - 0.86 ),-0.03))),-( ---0.73 ) - ( ( -55 ) )),--( 21 + -1 ) + COLS))] )))] ) )])][mislead(-20)],-( -Sansa )) - TABLE[( ( 92 ) )][COLS] + COLS)) * -TABLE[-1][( -1 )] )][--( ( betray(( --1 / -x * -( TABLE[Arya][-83 / Sansa] ) / ROWS )) ) )]]][-ROWS + --610.4 + ( COLS )] ),-99)]) - -70.487 * COLS){
	Stark *= Hodor;
	Ygritte -= -ROWS * ROWS / --y
}
}
} else {
	x *= betray(TABLE[Stark][( betray() )],mislead())
}
}
}
} else {
	Ygritte += foo(Ygritte,( Stark )) * Stark;
	dog *= Sansa;
	Hodor += -TABLE[ROWS][y]
};
	if(-( --TABLE[Sansa / COLS][bar(( COLS ))] )){

};
	COLS + -0.49 + Jon - protect(betray(protect(),bar()),( -( foo(1,ROWS) + 57 ) ),y)
}
};
	if(COLS){
	( -ROWS )
} else {
	if(Stark / ROWS){

} else {
	if(( ( COLS ) )){

}
};
	if(x){
	if(ROWS){

} else {

};
	Hodor -= Hodor
} else {
	dog += ( Arya );
	Stark *= Arya;
	Ygritte *= destroy(Stark)
}
}
}
}
}
} else {

};
	if(Sansa){
	Sansa *= ( ( rule() ) - betray(-COLS) );
	y /= dog
};
	if(Hodor){
	-1;
	Hodor += betray(-COLS,Stark)
} else {
	-COLS - -0.58 / foo(---26);
	if(Arya){
	if(---0.4){
	if(( Stark )){
	if(protect(( -( -22 / -0.24 ) ),TABLE[Sansa][y])){
	if(( -0.37 / ( Ygritte ) )){
	if(-( -12 )){
	( 54 )
} else {
	foo(( bar(dog / destroy(mislead(dog,COLS)),1) ))
}
};
	y /= ( Sansa )
}
};
	dog *= -Hodor / -rule(-( -betray(bar(),rule(96)) ) / -dog) * bar(--( foo(( ( y ) )) ),mislead(),-COLS) - Jon / mislead(-destroy(),-21) / ( ( TABLE[TABLE[x][ROWS] / ( ROWS )][bar(dog,-( ( destroy(60.275,Hodor) + bar(ROWS) ) ))] ) )
}
} else {
	( -( ROWS ) );
	Sansa *= 1
}
}
} else {
	if(-130.6242){
	dog += destroy(1 - Arya,Stark)
}
}
};
	ROWS
}
}
};
	if(( 28 )){
	dog *= Jon;
	Arya -= ROWS
}
} else {
	if(-bar(y,Jon)){
	mislead() - 1 - foo(COLS,betray(betray() / Jon / Hodor)) - Sansa
};
	if(0.57){
	if(1){

} else {
	if(Sansa){
	if(-COLS){
	Ygritte -= -( -betray(( COLS )) );
	if(-90){

}
}
}
};
	if(-y){
	if(ROWS){
	foo(dog,-betray());
	-( ( Jon ) - ( ROWS ) / ( TABLE[-45][-74] ) / Jon * mislead(protect(( Ygritte ),--Hodor - ROWS - bar(-betray(-( -91 ),TABLE[( TABLE[--0.96 - ( ( Hodor ) )][bar(28)] )][COLS]),protect(Sansa,foo(),0.8 / -TABLE[Hodor][--ROWS])))) );
	Sansa *= Sansa
}
} else {
	Stark += bar(rule(destroy(( -0.7 ),( -1 )),foo()))
}
} else {
	dog *= destroy(-1);
	mislead()
}
}
}
};
	Stark -= Ygritte;
	Ygritte *= -TABLE[y][y]
} else {

};
	-TABLE[--67][Sansa * --Arya];
	mislead()
} else {
	if(( ( protect(TABLE[dog - -10.49][Jon],mislead(( -90 ))) ) )){
	COLS
} else {

};
	if(destroy(-53,---0.58)){
	Jon -= -0.23
}
}
}
assert -35 : "Winter is coming"
def destroy(){
	if(( y * ( rule(-0.63,-dog,-( ROWS )) ) ) + Arya){
	Ygritte /= ( Arya );
	dog *= y;
	Sansa
} else {
	Sansa += TABLE[( Ygritte ) - ( dog )][protect(--bar(-0.28,( -protect(y,( -( -TABLE[dog / Ygritte][--foo(( 0.33 ))] ) ),ROWS) ) * TABLE[-91][-( TABLE[0.86][protect(( --44 ) + Ygritte,TABLE[-betray(Sansa)][---mislead(( betray() ),0.23)],mislead(-1,1))] )],( 1 )))]
};
	Sansa *= 58;
	-87
}
var Hodor = -0.38
def TABLE[--Jon][k] {

}
def betray(Arya){
	if(-( 79 )){
	if(TABLE[Ygritte - ( -ROWS - ( -52 ) )][-80.9]){
	y *= -TABLE[-TABLE[-0.72][400.01] - 0.7][-600.87] * TABLE[COLS][betray()]
} else {
	ROWS
};
	x
} else {

};
	-( ( ( -ROWS ) ) )
}
var x = COLS * TABLE[-Hodor][( TABLE[-( rule() )][rule(destroy(44,TABLE[-0.41 * ( -80 * destroy() )][foo(-dog - -58,0.2,Sansa)]) + y)] - rule(destroy(Sansa,mislead(--mislead(-0.75,TABLE[COLS][TABLE[COLS - Ygritte + mislead(foo(COLS,protect(dog,( -1 * Hodor - ( ROWS ) - ( protect(1,-TABLE[-56][bar() + ( mislead(--1,betray(y,31,( -( Stark ) / Ygritte - --( Hodor * Jon ) + rule(x + ( TABLE[-x][betray()] ) - --( 480.58 * ( bar(Arya,bar(Hodor,Hodor,( -1 ))) ) - ( protect(mislead(rule(TABLE[ROWS][COLS],( -( -0.84 ) )) / bar() * COLS / -0.19,0.12)) ) + foo(Ygritte,COLS,dog) + -670.792 + ROWS ) - -1) ) + -mislead(protect(protect(Stark,-0.9),( COLS )),Jon))) )]) ) )),Stark))][( x + x )]]),( ( ( x ) ) ) - -0.18 - Ygritte)),-1) ) - --531]
def rule(Arya,y){
	x;
	if(x){
	if(ROWS / -Stark){

};
	y /= y
} else {
	mislead(0.86);
	Stark -= Ygritte;
	protect(( x ),( ( destroy(-( TABLE[550.1685][rule(Hodor,COLS)] )) ) ))
}
}
var y = rule(( --COLS * Arya - -0.44 ),( 1 ))
var Ygritte = ( TABLE[COLS][dog] )
def destroy(Sansa){
	y /= ---ROWS;
	( ( -mislead(TABLE[Ygritte][-( destroy(-COLS,y) * -0.17 - 84 )]) + TABLE[Jon][COLS] ) );
	if(( -dog )){
	( COLS );
	x -= foo()
} else {
	foo(TABLE[ROWS][Jon],Sansa,( ( ( --mislead(TABLE[TABLE[Stark][0.03]][protect(-920.77)]) ) - 1 ) ))
}
}
def TABLE[( -1 * Arya )][k] {
	if(Arya){
	if(-0.39 / --TABLE[( --ROWS - ( ( -( bar(protect()) ) ) ) * ( -0.73 - betray(COLS) ) ) * -57][0.61] + COLS - dog){
	Ygritte -= ROWS
} else {
	Ygritte /= --57
};
	Jon += rule(--Jon)
}
}
assert ( ( ( ROWS ) ) ) : "One can not simply parse himself"
def TABLE[betray(x,ROWS + bar() / -TABLE[( rule(mislead(( TABLE[( Ygritte )][betray(-protect())] ) + ( Hodor ))) )][-mislead(TABLE[y + -( --COLS )][-25])])][i] {
	if(99){
	if(-COLS){
	if(-94){

} else {
	bar()
}
}
}
}
assert -1 : "Nothing burns like the cold."
def foo(dog,x){
	if(52){

} else {
	if(--destroy(protect(( Sansa / x + 610.76 ),-( TABLE[-( -( -( -0.26 ) ) )][Stark * --( bar() / -1 ) - TABLE[-72][( ROWS )] - TABLE[--ROWS][( TABLE[x][Hodor / 65] )] + ROWS * betray(( bar(-Ygritte) ) - ( -60.597 ),-y,( -37 ))] ),betray(-COLS,Jon / TABLE[foo(( Hodor ) * -360.183,--( betray(( destroy(-( 0.32 )) ),-0.53,mislead(( -Arya ),betray(y,bar(TABLE[-52 * ( Hodor )][Ygritte],-Stark) / betray(-( foo(protect(),-dog) ) - ( TABLE[protect(foo(protect(betray(),( Hodor )) / Ygritte / ( dog ),-56),---bar(rule(),-1) + ( COLS ))][ROWS + mislead(( -380.37 ),( Arya ) + ( 58 ))] )),y))) ) + protect(530.485),( betray(rule(ROWS)) - COLS ))][-rule(0.38,bar(-( ( ( -protect(Hodor,-( COLS / ( 0.35 ) ) - ( --mislead(-bar(),( COLS )) ),( bar(dog,-80) / --y )) * rule(TABLE[destroy(mislead(COLS * ( ( dog ) )),TABLE[1][( protect() )])][betray(--ROWS)],dog) + x ) ) / ( -( ( 1 ) ) ) )) / ( COLS ) + protect(Jon))])),mislead(Sansa,ROWS - ROWS),-93 - TABLE[COLS][TABLE[ROWS][dog] * -41])){
	TABLE[rule(0.1,( COLS ))][ROWS]
} else {
	if(( -( COLS ) )){
	dog -= --Hodor;
	if(( ( -Stark * -0.36 ) )){
	if(dog){

}
} else {
	if(--1){
	87;
	if(rule(bar(x * mislead(protect(--Hodor,y,foo(TABLE[Jon][destroy()] * rule(( mislead(-2,destroy(bar())) ),-0.47 - -0.82 * -600.26),-22)),( -( Stark - --( ( ( dog ) ) ) / betray() ) * protect(Hodor) )),( ( --y ) )),ROWS)){
	-Hodor - -33;
	-x
} else {
	x * foo()
}
} else {

}
}
}
};
	if(--ROWS){
	Hodor += ( -Sansa );
	TABLE[dog][mislead(protect(-( 0.36 ),( -( y ) )),Ygritte)];
	Sansa -= betray(-1,dog)
};
	dog += Stark
};
	y /= foo(mislead(Arya,COLS),( -( COLS ) )) * ( x )
}
def TABLE[( 0.3 )][i] {
	if(-( x )){
	Stark -= -1 / Stark;
	Sansa /= x
};
	if(-0.27){
	if(TABLE[Sansa][( rule() )]){

};
	Jon -= 72
}
}
def TABLE[betray(-TABLE[TABLE[Arya][( -1 )]][--ROWS],-( rule(TABLE[Ygritte - -2 * 0.92][( -TABLE[( TABLE[( -0.64 )][7] * -( rule(-( Stark ),COLS,( foo(-73,-COLS) )) ) )][-COLS] * ( Jon - TABLE[rule(bar(( -28 ),-COLS))][Stark] / ( Arya ) ) )],rule(-95,COLS)) ) * -21,-Sansa - foo(rule(( ( destroy(Jon / -y,betray(( ( dog ) ),ROWS),Arya) ) ) * ( rule(----COLS) ),Sansa) / ( Hodor ))) / foo()][j] {
	if(bar(dog,ROWS,destroy(-72) - rule(betray(0.22,-20.3)))){
	if(( -82 )){
	Ygritte += foo(COLS,bar(bar(-foo(0.35,-350.015,ROWS)),dog,bar()))
} else {

}
};
	dog -= -32 / COLS
}
def TABLE[Sansa][i] {
	if(( 0.8 )){
	Sansa += -( betray(-730.324,-1) )
} else {
	y /= TABLE[( foo(-ROWS) ) * mislead(( TABLE[( bar() ) + ---0.51][protect(---foo(COLS))] ),ROWS,y)][Ygritte]
}
}
assert -65 : "Fear cuts deeper than swords."
def TABLE[-7][i] {
	1
}
def betray(x,x){
	if(1 + -0.69){
	( bar(foo(ROWS,-TABLE[-betray(-1,destroy() - ( Arya ),-COLS)][-0.74]),1) - -x );
	-31;
	if(rule(TABLE[( protect() - betray() )][( -16 )],TABLE[( --53 )][--destroy(y,x,betray())])){
	1;
	Hodor += ( -58 );
	y -= -0.52
} else {
	Sansa -= ROWS - COLS;
	-650.16;
	Hodor /= Stark
}
} else {

};
	Arya += ( -( bar(ROWS) + y / --33 * COLS + -0.52 ) - --y + -72 + Ygritte + y )
}
assert protect(foo(-0.91,( 8 )),-71) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][k] {
	x /= -TABLE[( -440.3081 )][y]
}
var Ygritte = ( -ROWS )
def TABLE[y][k] {
	x -= Ygritte
}
assert -protect(Stark) : "Winter is coming"
def rule(Sansa,y,Hodor){
	Hodor -= ( Jon );
	if(dog){
	Ygritte *= ROWS
} else {
	ROWS;
	Ygritte += COLS + ( Hodor )
}
}
def TABLE[10.36][i] {
	( ( ROWS ) );
	if(x){
	y /= protect(( Sansa ),( -65 ));
	( -TABLE[1][( TABLE[( ROWS )][( betray(destroy(( 70 ),dog,-0.24)) )] + TABLE[ROWS][Sansa] - ---0.77 )] );
	Hodor *= ( ( --bar(COLS,ROWS) ) )
}
}
def TABLE[Stark + Jon][k] {
	Ygritte *= rule(-bar(-Hodor,( -COLS )) - ( destroy(--Jon) ) * -0.62 / -ROWS)
}
def TABLE[-84][k] {
	if(dog){
	if(-ROWS){
	( y );
	-destroy(-940.562);
	( ( ( -y ) ) )
} else {
	dog += -0.63
};
	( -( COLS ) )
};
	if(-x){
	Jon *= ROWS
} else {
	COLS * 68;
	if(0.09){
	if(TABLE[x][ROWS] / ROWS){
	Hodor;
	if(64){
	x -= -1
} else {
	-bar(Sansa,-TABLE[-( -y )][Jon] - ( Jon ))
};
	dog += x
} else {
	Ygritte *= COLS
}
} else {
	-x
}
}
}
assert foo(rule(-( -COLS * ( 26 ) )),-( TABLE[mislead(TABLE[( -Ygritte * y )][-0.52],( -99 ) * ROWS,--73) - -0 * foo(1 * -Arya,Hodor)][-Stark] ) - -COLS / ( -0.3 ) + Hodor + rule(69)) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	if(Jon){

};
	dog /= 1
}
def foo(){
	Stark;
	dog *= 0;
	x *= -( TABLE[( COLS ) + ROWS][destroy(ROWS)] * protect() )
}
var dog = ( COLS )
assert -Sansa : "Fear cuts deeper than swords."
def TABLE[ROWS][j] {
	destroy(( ( COLS ) ),( protect(Jon,( -1 ),mislead()) ));
	Arya /= 88
}
def TABLE[COLS][i] {
	Arya += Ygritte
}
def bar(y,Sansa,y){
	x /= foo(59,-mislead());
	if(dog){
	dog += COLS;
	---23 * betray(-Stark,TABLE[Arya][Sansa]) - TABLE[Hodor][---0.83] / TABLE[-91][protect(-19)]
};
	if(( --45 )){
	if(-( -betray() ) - ( ( COLS ) )){
	if(betray() + -( Stark )){
	dog /= TABLE[y][TABLE[Sansa][-1]]
};
	Jon += TABLE[mislead(rule())][y]
} else {
	if(rule()){
	if(destroy(Hodor,mislead(TABLE[--ROWS][-920.5 * bar(Hodor,Jon)]),-( Jon )) * betray()){

};
	TABLE[-840.94][Sansa];
	x += TABLE[foo(-92)][( bar(dog) )] / -1 + COLS
} else {
	Jon += betray(COLS,ROWS) / Jon;
	if(820.78){
	if(destroy(60.249)){
	x -= dog
} else {
	if(( betray(COLS,93) ) * ( 1 )){
	if(x){
	Arya -= Stark
} else {
	dog *= bar(-( Sansa ),ROWS,( foo(COLS,-TABLE[-50][Sansa],-COLS / TABLE[--530.1][13]) + ROWS ) + Arya)
};
	if(-COLS + Jon){

}
};
	dog -= TABLE[ROWS][foo(TABLE[0.66][-ROWS],-( destroy(destroy()) ))]
};
	if(rule(-COLS)){
	if(-y){
	-Sansa;
	Jon - TABLE[mislead(-( ROWS ),17)][y] + Hodor - -850.27
} else {
	Stark *= betray(TABLE[mislead()][mislead(mislead(1),ROWS)] - -COLS * foo(-( protect(mislead()) - Ygritte ),4,( destroy(ROWS,foo(mislead(0.25,-ROWS),38)) )) / Stark,0.83,foo(destroy(dog * x,63),ROWS))
}
} else {
	if(Sansa){

}
};
	x *= -( -dog )
}
};
	if(destroy(0.75,ROWS)){
	if(-TABLE[Ygritte][( Stark )]){
	Arya *= -Hodor;
	( Sansa );
	Stark -= y
} else {
	Ygritte *= betray(-ROWS - 0.71);
	( Sansa );
	if(-mislead(ROWS / COLS)){
	Sansa += Stark;
	Hodor += protect(( -98 + ( 0.79 ) ) - ( 1 ),ROWS)
}
};
	0.54
} else {
	COLS
};
	x /= dog
};
	dog -= 57;
	ROWS
} else {
	if(-370.22){
	Sansa /= mislead(33 - ( rule(-ROWS) ))
}
}
}
def protect(Stark,Jon){
	Jon *= rule(--dog)
}
assert foo(1) : "Nothing burns like the cold."
var Jon = TABLE[Ygritte][( y * 0.14 )] - x
var x = rule(COLS) / ( protect(Arya / -760.06 * ROWS / protect(),570.305) )
assert ( ( bar(mislead(destroy(-( 44 )),-610.995)) ) ) : "Nothing burns like the cold."
assert Hodor : "Nothing burns like the cold."
def betray(Jon){
	Ygritte *= Ygritte
}
assert betray(bar(betray(COLS - ( ( Jon ) ),-Hodor),TABLE[COLS][0.53] - Jon)) : "One can not simply parse himself"
def TABLE[protect()][j] {

}
var Sansa = ( ( x / Sansa ) )
def TABLE[bar(( Hodor ))][i] {

}
assert -protect(ROWS) : "What do we say to the Lord of Death?"
assert ROWS : "One can not simply parse himself"
var dog = TABLE[COLS][-1]
assert -0.54 : "Fear cuts deeper than swords."
def protect(y){
	if(( ( COLS ) - ( ( --mislead(-( Jon ),betray(bar(y,110.12 - betray(betray(660.8362,---0.41,y + -1)) + ( ( ( mislead(( ROWS )) + -( Stark - COLS ) ) ) )),-ROWS * -48,12) - ( COLS )) ) ) )){
	betray(( --foo(Sansa,1,--( 55 * -540.6306 )) + y )) * 28;
	Stark -= -( -destroy(-foo()) ) / COLS
} else {
	if(TABLE[( destroy(foo(-TABLE[protect()][betray(COLS - ( ( 0.38 ) ),COLS,( COLS ))] / 0.63)) ) / mislead(rule(Ygritte)) * ( COLS * ( betray(foo(destroy(),66,( 0 ))) ) ) + ( --( 610.29 - 1 ) / Stark )][betray(betray(rule()))]){

} else {
	COLS
}
};
	TABLE[-Arya][-Sansa]
}
def foo(Stark,Jon,Jon){
	if(( mislead(Jon / ( betray(-63,-330.26) ),---( dog ) * 79 - y,-26) ) - -69){
	-Stark
}
}
def TABLE[Sansa * -( -foo(-0.97,--rule(x)) ) - Arya][k] {
	Sansa += dog;
	if(COLS){
	Hodor
} else {

}
}
assert ROWS : "Nothing burns like the cold."
def destroy(Arya,y){
	y *= mislead(COLS);
	35
}
var Sansa = Sansa
assert --( destroy(-340.3294,COLS,-73) ) : "Fear cuts deeper than swords."
def rule(dog,Jon){
	Stark
}
def TABLE[( -84 - COLS )][k] {

}
assert Hodor : "Fear cuts deeper than swords."
def betray(){
	COLS;
	if(betray(foo(-310.65,60 - TABLE[( -32 )][ROWS]),Jon / ( foo() ) * ROWS - ( ( -protect(bar(( TABLE[foo()][ROWS * Arya * -0.34] )),ROWS,TABLE[bar(protect(y,-89),( Arya ),94)][dog]) + 1 * Arya ) + ROWS * Arya * Sansa ) * --( Arya ) * rule(---dog) * bar(Stark))){
	Jon /= TABLE[-Ygritte * -TABLE[-( -1 )][( 1 )]][TABLE[-rule(0)][-0.92]]
} else {
	if(COLS){
	x /= Stark + ( -ROWS )
} else {

};
	-betray(-TABLE[Stark][-1],-dog) / betray(--Ygritte * COLS + ROWS - -84 * ( 58 )) * -0.77 / 81
};
	y -= Stark
}
var Ygritte = Sansa
def TABLE[ROWS][k] {
	y += Hodor + protect(ROWS) * bar(-y);
	Jon /= ( --1 + ( COLS ) )
}
var y = x
var Sansa = Jon
assert ROWS : "Nothing burns like the cold."
def TABLE[-ROWS][j] {
	49
}
assert -bar(-COLS / 79 / Stark,-dog,Jon + 87) : "Nothing burns like the cold."
def TABLE[protect(0.3,ROWS) / ROWS * Arya][i] {
	if(( ---( x ) )){
	dog += betray(Arya,Ygritte,-500.642);
	if(( 1 )){
	( foo() ) + TABLE[-0.93][bar(dog,COLS)] - ( Ygritte );
	if(--ROWS){
	if(foo(Stark,Ygritte)){
	Ygritte += COLS;
	x /= TABLE[dog][TABLE[( --( mislead(-98) ) )][-0.22]];
	Arya /= 77
}
}
} else {
	Hodor += ( protect(-86,foo(COLS,destroy(-COLS,( bar(( TABLE[91][y] ),COLS) ),-1) + -y)) );
	if(--( 0.87 )){

} else {
	if(betray(Arya)){

} else {
	-160.519;
	-0.29
};
	Jon -= betray(-TABLE[COLS][0.26])
}
}
};
	if(mislead(y,bar(-1))){
	Jon += COLS;
	( rule(Arya,COLS) - Hodor )
} else {
	if(ROWS){

};
	x *= Sansa
}
}
def foo(x){
	COLS;
	Arya -= y
}
var Arya = x
assert ( COLS * rule(( -Sansa + ( betray(COLS) ) / Stark )) ) : "Winter is coming"
def protect(Sansa,y){
	if(ROWS){

} else {
	if(COLS / ( -dog )){
	Sansa;
	Stark += ROWS
};
	if(dog){
	if(-30){
	x;
	Sansa /= Jon + mislead(foo(Sansa),ROWS,-COLS * Stark) + destroy(TABLE[Ygritte][mislead(Jon - --0.25)]) + 70
}
};
	if(COLS){
	Jon;
	( -1 )
} else {
	destroy(( COLS ))
}
}
}
def TABLE[y / -x * --TABLE[Arya][-1]][i] {
	if(( 1 / -Jon * COLS )){
	Ygritte -= -ROWS;
	if(--0.92){

} else {
	if(-0.14){
	--COLS;
	if(Ygritte){
	Sansa += dog;
	protect()
} else {
	-( -foo(1) );
	protect(COLS)
}
};
	if(-( -0.05 )){
	Hodor *= mislead(-Jon + foo(( ( 1 ) )) - COLS * TABLE[COLS - ( 0.46 )][-( -( COLS + COLS ) )] / TABLE[Jon][TABLE[Jon][ROWS] + -mislead(mislead(( 37 / -0.93 ),-x))]);
	Sansa -= Arya
}
};
	if(( -0.71 )){
	if(ROWS){
	if(31){

} else {
	if(y){
	if(TABLE[( ROWS )][rule(y * -( protect(TABLE[COLS][destroy(-16 * ( -1 ),-27,Arya)]) ),--COLS)]){

} else {
	if(protect(13)){
	( ( -y / TABLE[TABLE[0.24][--( ( Ygritte ) ) / -19]][-COLS] * rule(( Jon ) * ROWS,TABLE[140.792][-1]) ) - bar(Jon,35) )
} else {
	TABLE[rule(0.74,-25,( betray(-0.7 + dog / x - bar(-130.7,mislead(),-Hodor / destroy(rule(Stark,0.78),1,COLS) - -91 / ( -betray(-0.74,-( ( 0.09 ) ),( protect(---740.1 - destroy(dog),--Hodor) )) ) / protect(--1,y,destroy(destroy(dog / Ygritte,x)))) + -91 - TABLE[TABLE[COLS][protect(-( -rule() - ( -( bar() ) ) ) * ( -1 ))]][-foo(Stark,79) * 0.51],( 390 / Arya )) )) / betray(75)][betray(( foo() ),-foo(betray(),dog,( 79 )))];
	if(protect(75 / --( ( 61 ) * COLS ),COLS) + Ygritte){
	Sansa;
	if(Ygritte){
	Arya /= betray(bar(890.094),-x,COLS) + -0.65
}
}
};
	Arya += Hodor
}
};
	Ygritte -= -dog + -x;
	if(-protect(( -33 ),Hodor + -48,( -0.81 ))){
	dog += Hodor
} else {
	if(bar(-1)){
	COLS;
	if(-( 0.08 )){
	if(mislead(-0.47,TABLE[-ROWS][ROWS],-Jon)){
	Arya -= 1
}
};
	TABLE[( ( betray(protect(-0.42 - -1)) ) )][-83]
};
	TABLE[-mislead(COLS,COLS)][TABLE[Arya][( -COLS )]]
}
}
}
} else {
	if(1){
	if(( ROWS )){
	if(( mislead(betray(),ROWS) ) - foo(x - 1,( ( -betray(-7,Stark) / protect(( ( --mislead(-1,Arya) ) ),Jon / y) ) - 0.81 ))){
	if(-COLS){
	if(COLS){
	Arya -= ( protect(-betray(-dog * mislead(COLS,( destroy(rule(-1),y) )),Stark)) );
	dog += dog
};
	Stark /= -bar(-120.42)
}
} else {
	Stark;
	if(Hodor){
	0.35;
	Arya *= Arya
}
};
	Stark /= foo(TABLE[( Hodor )][betray(Jon * -0.96,Hodor)])
};
	y += -( -0.06 )
}
}
};
	Arya /= ROWS
}
assert -COLS : "Fear cuts deeper than swords."
def TABLE[-Stark][k] {
	Arya *= ( ( destroy() ) )
}
def TABLE[Jon][i] {
	if(0.28){

}
}
def TABLE[23][i] {
	if(13){
	if(destroy(-COLS)){
	mislead(( -55 ),betray(ROWS),Arya);
	Arya *= -84
} else {
	-( 540.546 );
	if(( -1 )){

};
	if(( rule(ROWS) )){

} else {
	Hodor /= ROWS
}
};
	Jon /= -( ROWS )
};
	if(--92){

} else {
	y *= -TABLE[-0.96][-Arya / Hodor / ( ( ( ---90 ) ) )];
	if(bar(mislead(( foo(ROWS,rule(ROWS)) ),( mislead(mislead(-1 + 69,Hodor),-ROWS) )),COLS,( Hodor ))){
	if(COLS){
	Ygritte += rule(-1,( mislead(betray(-1)) ),Sansa);
	Jon -= foo()
} else {
	if(380.801){
	Ygritte *= 98;
	( Stark );
	Jon += TABLE[-64 - -( betray(-( protect(ROWS,--( -TABLE[TABLE[TABLE[( -TABLE[ROWS][Sansa] )][-destroy(( ( 1 - destroy(( destroy(-94) )) + -COLS ) )) + 1]][-890.3433 / ( -COLS )] + foo(mislead(x,--0.25 - TABLE[-Sansa][Arya + ( rule(TABLE[TABLE[bar(COLS)][protect(rule(1,TABLE[67][dog + -13 * COLS + rule(-Jon) * Ygritte],( COLS )))]][0.92],TABLE[Sansa][-0.54]) )] / rule(-0.42 + COLS,( ( 1 - --0.82 - ( betray(ROWS) ) ) ),Sansa)),( ( y ) ))][-210.52] )) ) - Stark - --0.61 + protect(( -ROWS / Jon ),TABLE[dog][ROWS],ROWS) * COLS + ( Ygritte ) * COLS,Hodor) * dog )][( --ROWS )]
} else {
	( mislead(-TABLE[( bar(Sansa,-0.83) )][y] - -Sansa * y) );
	if(dog){
	-0.66
};
	if(dog){
	x -= COLS;
	dog -= COLS;
	Ygritte *= -( COLS ) + -550.5
}
}
};
	if(destroy()){
	if(Jon){
	if(( ( 320.19 ) )){
	if(( ROWS )){
	if(( ( Sansa ) * -Arya )){
	Stark /= -52;
	if(-Ygritte){
	Ygritte /= -TABLE[betray(-( -foo(( destroy(ROWS * destroy(( 40 / -950.52 ) - bar(mislead(betray(),TABLE[ROWS][dog],-( rule(-520.34,mislead(-( 57 ) + -betray(-0.59,0.02,-ROWS + Stark) / Sansa,TABLE[destroy(Hodor,-2 * Jon,TABLE[COLS][destroy(TABLE[COLS][( -protect(-0.21,protect(COLS,Sansa,rule(-1,Hodor)) - Hodor) )])])][0.66 + -18]),( -bar(Sansa,--Arya,0.73) )) ) / ( bar(52) )),protect(x,Stark)),--ROWS,0.31),Stark) / protect(( ( Ygritte ) )) )) ))][-TABLE[TABLE[Sansa][-ROWS + TABLE[TABLE[destroy(-Hodor + ---64,-0.44 / ( Arya ))][Jon] - --ROWS + dog][Jon]]][rule(mislead(-x,-protect(ROWS * destroy(bar(destroy(--61,Stark))),1 * 710.9516))) - Hodor]];
	Hodor
} else {
	Jon -= COLS
};
	Ygritte -= ( COLS )
};
	-0.43;
	Arya
}
} else {
	Stark -= foo(0.8,( -0.51 ))
}
};
	x / Arya
} else {
	Stark /= ( -0.33 )
}
} else {
	-COLS;
	Ygritte /= Sansa - ( mislead() ) + -0.03
}
};
	if(TABLE[-ROWS + --dog][COLS]){
	if(-bar(-COLS,-1)){
	Hodor * x;
	if(-84){
	( ( -0.35 ) ) / Arya
} else {
	if(rule(( Hodor / 95 ),Jon,--bar(-( ( ( 68 ) ) ),( -91 )))){

} else {
	--COLS
};
	Sansa /= Arya
}
};
	Sansa += rule(Ygritte,0.29,COLS)
} else {
	ROWS;
	Ygritte -= ROWS
}
}
assert ( TABLE[( 0.26 )][destroy(( ( Sansa ) / 0.26 ),-COLS)] + TABLE[TABLE[COLS][Stark]][( bar(-0.66,70,700.8) )] ) : "One can not simply parse himself"
def TABLE[dog][k] {

}
assert 0.59 * -foo(42) : "Nothing burns like the cold."
assert -0.5 : "Fear cuts deeper than swords."
var dog = 0.64
assert -( Sansa - ROWS ) : "Fear cuts deeper than swords."
assert Ygritte : "One can not simply parse himself"
def TABLE[dog][i] {
	Stark -= ( -19 )
}
var Jon = ROWS
def TABLE[dog / ( bar(Hodor,mislead()) ) / Jon][k] {
	if(0.3 * ( -ROWS + -1 )){
	dog /= ( -TABLE[ROWS + ( -Hodor )][( -0.64 + Arya )] );
	TABLE[1 + TABLE[( -890.518 )][--ROWS]][bar(( ( ( Ygritte ) ) ),destroy(betray(-1,99)))]
} else {
	if(0.56){

} else {
	if(betray(( TABLE[( -( protect(rule(COLS,( ROWS / 0.54 )),bar(Sansa,-mislead(mislead(( COLS ),--betray(-0.03 / -COLS,-0.28,1))) + -ROWS)) ) )][rule()] / -TABLE[Sansa][-780.014] ),x - -Stark / ( TABLE[--520.3 / ROWS][610.893] * -0.64 ) - ( -ROWS / destroy(---0.9,TABLE[rule(COLS) + 0.87][bar()]) / foo() ),protect(( -0.07 )) / -36)){
	if(destroy(-12)){
	if(foo() - COLS){
	x -= -0.71
}
}
}
};
	Arya
};
	if(Ygritte + ROWS){
	-0.13
};
	if(x){
	dog /= Hodor / -1;
	16 / ( foo(mislead(-17,( --77 ))) * -580.3058 )
}
}
assert COLS : "One can not simply parse himself"
assert x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = Jon / Jon
def betray(Stark,Ygritte){
	dog /= ROWS
}
def TABLE[Hodor][k] {
	Hodor -= TABLE[COLS][( x )]
}
assert ( 0.76 ) / ( -( -1 ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -15 : "Winter is coming"
def destroy(Jon){
	if(ROWS){

} else {
	x -= betray(Ygritte,( 1 ));
	-86
};
	if(x){
	Arya += Jon;
	if(protect(Sansa,x) + -ROWS * ( ( ( -1 ) ) ) - rule(-dog) / TABLE[COLS][destroy(-foo(),COLS)]){
	if(destroy(mislead(-67,Jon,y) * -( ( bar() ) ))){
	if(-TABLE[( -( TABLE[( dog )][( mislead(ROWS,( ( -( y / ( -Stark + ----( 1 ) - ROWS ) ) - destroy(TABLE[ROWS][ROWS],0.86 / -97) / ( destroy(mislead(rule(ROWS,COLS)) / ( ( COLS ) ),-( TABLE[COLS][ROWS * rule(-TABLE[-ROWS][( ( 0.91 - -0.91 ) - destroy(0.45,x,Hodor) )])] )) ) - -( foo(86) ) * bar(Arya / -( ( TABLE[foo()][ROWS] ) + ROWS )) - -4 + ( ( betray(-1) * Jon ) ) ) )) ) - TABLE[( ROWS )][-69]] ) * -70 * rule(betray(-TABLE[-58][-( COLS )] - ---1 * ROWS - -70 - TABLE[Arya][Stark],COLS),Jon) - ( -0.85 ) - -TABLE[foo(Jon,Jon)][Ygritte] )][( Arya )]){

} else {

};
	betray(( --98 + -COLS * -TABLE[( destroy(bar(-0.37)) )][rule(Sansa,ROWS + TABLE[( 0.08 )][--1])] + -0.13 - Stark ));
	Arya += -Hodor
}
} else {
	Arya -= x
}
}
}
var dog = COLS
def protect(x,dog,Ygritte){
	x;
	if(TABLE[-ROWS / -protect(COLS,Hodor)][-0.43]){
	Hodor *= Arya
}
}
def foo(Stark,Arya){
	COLS;
	Sansa += COLS / Sansa
}
def bar(dog,Arya){
	if(-86){

};
	( ( 25 ) )
}
def TABLE[bar(-1,--( -dog ))][j] {
	x /= Stark
}
def TABLE[-( TABLE[mislead(COLS,y)][Ygritte] )][k] {
	rule(( -COLS )) + betray(1,130.82)
}
def TABLE[bar(COLS,x + -Stark)][k] {
	y += Jon
}
def protect(dog,x){
	Jon *= COLS;
	Hodor *= -0.76
}
def foo(Sansa){
	Hodor *= foo(COLS,-39 / ( 36 ));
	Sansa /= -53
}
var x = destroy(COLS,--Arya)
var Ygritte = ROWS / ( 99 ) / x - mislead(34,74)
def rule(y){
	x * Hodor
}
def foo(){
	if(-x){

}
}
var y = Stark
var Stark = -foo(Sansa)
assert -ROWS : "One can not simply parse himself"
def betray(dog,Ygritte,Stark){
	if(TABLE[foo(--ROWS) + -15][Sansa]){
	if(-99){

} else {
	Ygritte /= ( foo(-( ( ( --0.9 ) ) ),TABLE[COLS][-0.35],foo(COLS,-TABLE[( -55 )][-( COLS )])) * foo() / Hodor ) * 51;
	y /= x - ROWS;
	COLS
};
	Stark -= ( dog )
};
	if(( bar() + -betray(x,( betray(betray(( COLS ))) ) / ( bar(mislead(),bar(),( -2 ) + dog) ) / ROWS,dog) ) + 93){
	dog /= mislead(ROWS,y - bar(30));
	Arya -= --88 + ( TABLE[-( -Arya * --TABLE[( --foo(Sansa,440.2,0.82 / -0.93) ) * COLS / rule(TABLE[x + dog][destroy(bar(-0.57,0.42) + -( x ) - 36)],bar(TABLE[ROWS][-Hodor + -( TABLE[( -TABLE[x][rule(( ( ROWS - TABLE[-rule(Hodor,TABLE[Jon][COLS])][14] ) ),0.23)] + ( bar(39) ) )][( x * Arya / 0.57 )] )],( TABLE[-0.03][COLS] ) / y * -Arya / -betray(-ROWS),0.33 + ( foo(protect(foo(-bar(-y / -y,-Arya),TABLE[1][Sansa],protect(Sansa,-TABLE[COLS][( -7 )])) * rule()),--0.77,Stark) ))) / ----0.62 + dog - x][Jon] )][-( destroy(ROWS,Ygritte) )] )
} else {
	Sansa += ( Stark )
}
}
def mislead(dog){
	-10.95;
	( ( COLS ) )
}
var dog = ( 0.12 )
def TABLE[-0.26][j] {
	ROWS / ( ( 0.54 ) )
}
def protect(dog){
	Jon /= mislead(( ( -COLS ) * ( -0.05 ) ),protect() * 0.67 + ( Ygritte / dog ));
	if(-( ( mislead(ROWS,-950.2406) ) )){

}
}
def TABLE[COLS][i] {

}
def TABLE[0.47][j] {
	( Arya );
	( ( -Stark ) ) * -1;
	if(( protect(-COLS,-Ygritte) )){
	--600.29
} else {
	Hodor /= -0.44;
	if(foo(-280.854 * Sansa)){
	if(foo(mislead(ROWS)) - -COLS){

} else {

}
}
}
}
def mislead(Sansa,x,Stark){
	if(bar(( foo() ))){
	-0.24;
	Ygritte /= -destroy(82)
};
	COLS
}
def rule(){
	( -protect(betray()) );
	Hodor /= Jon
}
assert ( dog ) : "One can not simply parse himself"
assert ROWS : "Winter is coming"
def mislead(Jon){
	if(( -foo(63) - COLS - Jon - TABLE[betray()][--COLS / --74] - 0.43 )){
	ROWS;
	dog *= Hodor
};
	y;
	( y ) - betray(rule(Hodor,COLS))
}
var x = 0.63 - ( dog )
def TABLE[-TABLE[TABLE[1][COLS] + rule(mislead(destroy(bar(-Hodor,Sansa - -1),-1,6)),1)][ROWS]][i] {
	if(Hodor){
	if(y){
	-( rule(( ( -0.94 ) ),0.02) );
	if(Jon){
	if(-mislead(( -( -( Stark ) + ( betray(TABLE[-990.8083][COLS]) ) / -520.188 ) )) + Arya){
	Sansa += Ygritte - mislead(rule(-bar()),970.5);
	Jon /= Sansa
};
	if(bar(-0.12,TABLE[x][-mislead(Hodor,ROWS,betray(ROWS + -( dog ) - rule(),--Ygritte)) + 1])){
	( ROWS );
	Jon - COLS * 1;
	if(( ( COLS ) )){
	Sansa += ( TABLE[( TABLE[destroy()][Arya - 0.5] )][-( ( ( ( -COLS / -bar() ) ) ) )] )
}
} else {
	if(Stark){
	if(foo(-0.67)){
	if(destroy(-14)){
	( Ygritte )
}
};
	Jon += Ygritte;
	Hodor += protect()
};
	Sansa /= -( ( Ygritte * rule(betray(Jon,TABLE[--COLS - COLS][-TABLE[Arya][mislead(-( --0.18 + ( Arya ) ),1)]] * ROWS / -rule(( 0.75 ))),betray(TABLE[mislead()][COLS + Hodor],Ygritte,9 - ---TABLE[( foo(Sansa,destroy(protect(Stark,x,-COLS),bar(--0.49,-COLS * -ROWS + ROWS)),( bar(bar(0.56,( -TABLE[( ( COLS ) - y - ( -ROWS ) )][-670.868] ),Sansa)) * y )) )][ROWS + x])) ) )
}
} else {
	Arya += ( -( COLS + rule(( 1 ),x) * 0.05 ) );
	Sansa /= bar(( destroy(( mislead(-dog,bar(-0.4,( Arya )),COLS) ),rule(( ( dog ) )),bar(-protect(0.5,-( Jon )) + mislead(Jon,( -0.14 - COLS )) / destroy(x + -0.19 / ( Ygritte ),--69 - -COLS),Stark,--COLS - -94 + rule(-COLS * COLS,-0.6) + ROWS) + -0.74) ),betray())
}
};
	dog *= -dog
};
	if(990.1){
	Stark -= ( bar(betray(-0.98 + ( -1 ) - dog,--0.12)) )
}
}
def TABLE[-1][k] {
	COLS
}
def destroy(Stark){
	dog *= Hodor / TABLE[Ygritte][ROWS] / 790.1;
	Stark *= COLS / Arya
}
assert -0.34 : "Nothing burns like the cold."
var Arya = TABLE[( -TABLE[( ( rule(( TABLE[-Jon / ROWS][-dog + -0.14 - ROWS] ) * ( bar(-530.596,0.07,COLS) ),Ygritte) ) ) - -1][foo(-destroy(COLS),COLS * ( ( TABLE[( y * ROWS )][Hodor] ) ),TABLE[-96][-TABLE[-1][-0.01] / 0.09]) + -dog] )][--COLS]
def TABLE[ROWS][k] {

}
def foo(Jon,y){
	Stark -= ROWS
}
def TABLE[TABLE[( dog ) / --( y )][dog] + Stark][k] {
	Hodor -= 0.1;
	TABLE[( y )][0.65]
}
def foo(){
	x -= betray(Jon,( -1 ),( 0.17 ));
	( -18 );
	( destroy(( -ROWS ),--0.78,-TABLE[y][( ( 0.22 - -protect(bar(-0.23),56,ROWS) ) )] / COLS + -( Sansa )) )
}
def protect(y,Jon,Jon){
	COLS
}
var Ygritte = ( -COLS ) / Sansa
def TABLE[( Jon )][k] {
	if(520.32){
	-dog
} else {
	x -= -( y );
	if(( ( x ) )){
	if(( ( protect(mislead(( 1 ),COLS)) ) )){
	if(-880.7589){
	if(bar() * ROWS){
	y /= --1
}
} else {

}
} else {
	bar(TABLE[Jon][-0.6],-destroy(y + -0.51,1)) - Sansa;
	Stark /= -58
};
	( betray(-protect(-1,TABLE[-( TABLE[ROWS][Jon + ( TABLE[betray(Stark)][( 1 )] )] ) / rule(-0.16,x) / -protect()][COLS] / COLS) / Stark + ( ( destroy(( 0.33 )) ) ),Jon) ) * x * Arya
} else {

}
};
	dog
}
var x = ( -1 / COLS )
def foo(Hodor){
	if(x){
	if(Arya){
	Ygritte /= -TABLE[-( mislead(Stark,1) * Stark / TABLE[protect(( --1 ),x)][( ( --TABLE[-mislead(( --rule(ROWS,COLS) ),TABLE[-destroy(( TABLE[-Hodor][bar(betray(( 0.06 ) + COLS - foo(Sansa,0.42,betray(Ygritte,( ( Sansa ) )) / -0.53 - -ROWS)) - Jon) / -rule(( ( ( COLS ) ) ) / COLS) * ( -0.01 )] )) / COLS * -0.3 / foo(( COLS )) - 810.64 + Sansa + ( betray(dog - ( Arya ),betray(ROWS,y) * --( -rule(0.15) / 1 * betray(Hodor,protect(),-( protect(( 0.04 )) )) * ( Ygritte ) ) * 0.47,-ROWS) ) + ( ROWS )][COLS / TABLE[-TABLE[ROWS - -1][ROWS]][COLS]] * --( ---TABLE[betray(-0.48)][COLS] ),COLS)][-COLS * ROWS - ( -92 )] ) ) + -1] ) / ( foo(--0.53 + ( bar(protect(Sansa * Hodor)) ) / COLS + ( -ROWS ),COLS) )][protect(-Ygritte,--Hodor)] * ( x ) / y / betray(TABLE[-TABLE[-COLS * -ROWS / COLS][TABLE[-ROWS - ( Hodor ) * betray(dog)][-0.28]]][ROWS]) / Arya - ( TABLE[y][rule()] ) / TABLE[( Ygritte )][( destroy() - protect(foo(-Hodor),x) )]
} else {
	y *= Sansa;
	if(-0.44){
	Stark
}
}
};
	Jon -= COLS;
	if(TABLE[protect(-protect(( ( bar(protect(Hodor - 0.41),betray(-Jon,betray()),ROWS + 83) ) )),destroy(--0.95,Sansa))][( ( COLS ) )]){
	Ygritte += 96;
	if(COLS){
	betray(10);
	if(destroy(TABLE[protect(dog,0.47)][--TABLE[Sansa][bar(-ROWS,rule(0.59),dog)] / destroy(Stark)] * Hodor,-80.95) * foo(Hodor / ( -1 ),ROWS) + -0.5){
	( TABLE[-( Arya / ROWS )][y] )
};
	TABLE[ROWS][15]
}
}
}
assert ( Hodor ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(){
	if(Ygritte){
	if(Sansa){

};
	Sansa -= ( Arya )
}
}
var dog = -69
def TABLE[( ( rule(--foo(bar(( mislead(( -mislead(0.53) )) + ROWS )),5,bar(TABLE[Jon][ROWS])) - --x + bar(destroy(dog,( -destroy(rule(Hodor,protect(Sansa))) ) + -( TABLE[bar(TABLE[--0.96][( ---( Arya ) + 1 )],( y ),-( COLS + x ))][( ( -ROWS ) )] - --dog / mislead(Ygritte,( 0.6 ) / betray()) )),Stark,COLS),-ROWS,COLS - ROWS) ) )][i] {
	( -Ygritte )
}
assert y : "Winter is coming"
def TABLE[( TABLE[( protect() - -protect(Jon,( -mislead(rule(-TABLE[dog][ROWS],( Arya )),x,Stark) ),COLS) * mislead(-mislead() * ( foo(rule(Arya)) ) * COLS,-0.83) )][-destroy(1,rule())] )][j] {
	ROWS;
	if(Sansa){
	y *= ( TABLE[ROWS][-foo()] + TABLE[protect(-770.2855,-mislead(),0.64) + -foo()][-51] + COLS - Ygritte / ROWS );
	-0.17
} else {
	Hodor += -780.885
};
	if(-130.569){
	if(x){

};
	x /= ROWS
}
}
def mislead(Hodor,Stark){
	--mislead(--Arya * ( -rule(-( Sansa ),-0.62,COLS) ) * y,( x ))
}
def rule(Jon){
	Sansa /= Ygritte;
	if(-( COLS )){

} else {
	foo(( betray(-rule(protect() * ROWS),destroy(),bar(y) + TABLE[protect(( Stark ))][Jon] + -x) ),( x + ROWS ) + ( -foo() - -Jon * Arya ),ROWS + COLS / TABLE[destroy(-ROWS + ( x ),protect() / Stark * -0.73 - dog,-75)][Hodor] * bar(( 1 - --( foo() ) ),TABLE[0.83][Arya]));
	ROWS
}
}
var x = TABLE[( ( -( Arya ) ) )][-destroy(COLS,foo(Sansa,-740.1148) / Jon,( dog ))] + ( TABLE[x][-mislead(ROWS,-COLS) * x + -73] )
def TABLE[Ygritte][i] {
	( -0.76 );
	if(TABLE[COLS][( -0.93 )]){
	dog /= -COLS;
	TABLE[TABLE[-bar(-ROWS,-COLS)][-0.08]][( ( ---730.96 ) )];
	if(( -TABLE[-TABLE[-62][0.64]][Ygritte - mislead(TABLE[-Ygritte][betray()])] )){
	x += rule(-TABLE[-( foo(-bar(TABLE[TABLE[bar(390.632)][-1]][rule(( protect(TABLE[TABLE[--100.061][-1]][Hodor],TABLE[ROWS][-ROWS] * ( Ygritte )) ),rule(TABLE[COLS][TABLE[y][-0.85]],TABLE[Jon][Sansa],-0.4 - rule(--foo(TABLE[-Jon - Arya * TABLE[dog][--betray(0.62,( TABLE[-mislead(--50)][COLS] ),COLS / 88)]][-0.75 - 47]) - ( TABLE[COLS][-( -bar(-betray(rule(12))) + -TABLE[betray(COLS,betray())][( rule(Arya) )] + Jon / betray(( Jon - TABLE[bar()][( Stark ) - betray(mislead(82,( -ROWS )) * COLS / -81,0.82 * dog) / --destroy(-TABLE[-1][bar(--( ROWS ))],-COLS) * mislead(( COLS / 280.9192 + bar(ROWS,betray(),COLS) / ( -570.336 ) / -53 * Jon - 0.39 + 82 ),( COLS ),-1)] ),( bar(--9,bar(( 40 ))) + ( 290.75 ) ),( Ygritte )) )] ),mislead(),-0.54) / Jon))])) )][-Arya / Stark]) - foo(bar(Sansa + destroy(x),( Ygritte )),bar(-ROWS,foo(x,Arya),-( -( x ) + -40.88 / Jon + betray() ) - -770.026),Hodor)
} else {
	if(foo(Hodor)){
	y
} else {
	Sansa
};
	Jon *= protect(( ROWS ),-( ( ( foo(TABLE[1][-0.82 - -x + ( y ) - y * betray(ROWS,bar(betray(( Arya ),bar(-0.81,TABLE[y][( x )],dog),-( --mislead(( 90 )) ))),( mislead(ROWS) ) * ROWS)],destroy(Ygritte)) ) - ROWS ) + dog + -betray(--60.23,--mislead(( y ))) + ( ( COLS ) ) / 41 ))
}
};
	-( bar(( ---Jon )) ) * -0.2
}
def bar(){
	Ygritte += protect(TABLE[( ( -510.9757 ) ) - -0.24][COLS] - Stark / destroy(COLS,Jon - mislead(-750.5761,COLS,-0.07 - COLS)) + ROWS * -Sansa + -1)
}
assert protect(dog) : "Fear cuts deeper than swords."
def foo(Jon,Hodor){
	if(( mislead() + -foo(-0.81,( ( -Hodor ) ),TABLE[( TABLE[-1][ROWS] )][TABLE[99][0.8 * ROWS]]) / ROWS / ( ROWS ) * -COLS )){
	Stark *= y;
	-betray(destroy(-0.33),COLS)
}
}
assert protect(840.9547,Jon,ROWS) : "Nothing burns like the cold."
def destroy(Ygritte){
	( destroy(0.19,y) )
}
def destroy(x){
	Jon *= Jon;
	Arya /= Sansa
}
def foo(Jon){

}
def rule(dog,Jon,x){

}
assert x : "What do we say to the Lord of Death?"
var x = ( Ygritte )
def TABLE[Hodor][i] {
	Ygritte -= -( ( ---bar(Hodor,-37) * x * -0.03 ) / x );
	protect()
}
var Jon = -( Stark )
def betray(Ygritte,Jon){
	Arya += ROWS;
	Jon - -27
}
def bar(Stark){
	if(bar(( ( 0.25 ) ),( ( TABLE[( 170.87 )][destroy(TABLE[destroy(Jon)][betray(-dog,bar(-destroy(-0.68,Ygritte)))],-900.973,y / -COLS)] ) ))){
	TABLE[destroy(160.138)][ROWS]
} else {
	-0.07;
	( 1 )
};
	-( 5 );
	y /= 47
}
def TABLE[y][k] {
	Arya /= Jon;
	--rule(Jon - foo(26),bar())
}
assert destroy(-0.97,Jon + Jon) : "Nothing burns like the cold."
def TABLE[( Sansa )][j] {
	if(( 0.87 )){
	if(---0.94 / Stark + 1 * 970.25){
	--0.82;
	if(0.6){
	dog /= ROWS;
	Hodor += -75 / ---710.13 * COLS * -73 + COLS
} else {
	Arya /= -580.4 - 0.24 / Sansa;
	Stark -= -( 58 )
}
};
	if(-TABLE[foo(-betray(),-ROWS) * Jon][-( ROWS + COLS )] + ROWS){

} else {
	Arya /= rule(-bar(dog,( COLS )),-0);
	Jon += 0.84 + ( foo() )
};
	if(rule(0.3,( x ) / TABLE[-450.565 / Arya][--1],rule(0.06))){
	COLS
} else {
	if(0){
	COLS;
	if(foo(TABLE[COLS + bar()][1])){
	Arya;
	if(dog){
	destroy(-protect(( -0.57 ),---1 + COLS / -( -rule(-COLS,-450.9) )))
}
}
} else {
	x *= ( ( -95 ) );
	Hodor /= --0.4
};
	if(( Ygritte ) / Sansa){

}
}
};
	if(-TABLE[-0.23][( ROWS )]){
	if(Arya + COLS){
	if(TABLE[rule(bar())][foo(--1)] / 1){
	Stark
};
	foo(-30,( -TABLE[-0.57 / mislead(betray() + ( ( ( -0.53 ) ) + ( Sansa / COLS ) ),x) * -31 / x - ( -11 )][-x] ),84)
}
} else {

}
}
var dog = ( Jon )
assert foo(-dog,Ygritte) : "Nothing burns like the cold."
assert destroy(dog,mislead(0.05,( -Sansa )),bar(( foo(Stark * ( COLS ),55,35) - Arya ))) : "Fear cuts deeper than swords."
def foo(x,Arya,Hodor){
	COLS
}
assert -Ygritte : "Fear cuts deeper than swords."
var Jon = -TABLE[( ( ( -14 - COLS - mislead(Jon,( x )) * ( ( 0.55 + -0.11 ) ) - ( destroy(120.7846,rule(mislead(Hodor,mislead(-bar(),--bar())),TABLE[--( ( 1000.77 ) ) / ( -1 ) + protect(( COLS ) - ( TABLE[Hodor][-0.89] - -0.93 ))][rule(--330.73,-27)],---Stark + 0.28 * COLS + -y)) ) ) ) )][( ( bar(mislead(mislead(Sansa,destroy(rule(-( ( COLS ) ),Jon)),0.06),( -1 )),COLS) ) ) + -0.22]
def bar(dog,y,Jon){
	protect();
	y *= COLS
}
assert COLS : "Nothing burns like the cold."
var Jon = TABLE[rule(1 / protect())][( ( protect(x,mislead(390.452,-( foo() ))) ) )] * COLS
def TABLE[bar(-ROWS)][i] {
	if(ROWS){
	if(( Ygritte )){
	Arya *= -1;
	Jon *= 0.93
};
	if(dog){
	x += 25
};
	Stark /= rule(Hodor)
};
	Ygritte -= -COLS
}
def TABLE[mislead(ROWS,( 28 ))][i] {
	--1
}
def mislead(){

}
def protect(Jon){
	Hodor *= -860.2883;
	if(COLS){
	-0.27;
	if(-47){
	if(Jon){
	Sansa *= --dog;
	rule(COLS,Jon)
} else {

};
	Arya *= ( ( ( -COLS ) ) - -0.28 )
} else {
	-ROWS;
	betray(25,rule(( dog ) - -rule(1,-50 / ROWS / COLS,TABLE[( y )][( ( -1 / -0.45 ) ) / ( -1 )]),Stark / rule() / Jon));
	if(Sansa){
	Arya /= Ygritte;
	if(( --( ( -betray(TABLE[86][4],--rule(COLS,--76 - Sansa) / ( ( ----( bar(-0.52,17,( y )) ) ) ),ROWS) * Sansa ) ) )){

} else {
	Stark /= -( -protect(betray(destroy(y,-( 4 )))) );
	if(protect(ROWS,COLS)){
	Hodor /= -ROWS;
	y += ROWS
}
}
}
};
	if(TABLE[COLS][( bar() )]){
	if(Arya){
	dog /= protect(( ( ( Ygritte * ROWS ) ) + protect(rule(y,( protect(COLS) ),-betray()),-TABLE[52][betray(Stark)]) ))
}
} else {
	x *= -COLS;
	Ygritte -= destroy(( rule(bar(Stark)) ),protect(-TABLE[-x / COLS + --destroy(y) + foo(( x ))][-960.157],destroy(COLS * ( foo(Sansa,81,-( COLS )) ) / foo(COLS * Sansa,( COLS )),( 370.073 ),-0.47)),bar(rule(Hodor),13) / x * x / 36) / ( ( 1 ) )
}
} else {

}
}
def TABLE[COLS][k] {
	x *= --dog;
	TABLE[COLS][x] / ( COLS )
}
def TABLE[protect(protect(( Ygritte - Stark ),COLS) * TABLE[( -TABLE[( 0.9 ) - 0.17 / x - ( Stark ) * foo(( dog ),1 * x - Hodor) - foo()][foo(Ygritte,mislead(ROWS,Stark,ROWS))] )][TABLE[Hodor][-0.81]],COLS)][i] {
	--ROWS * ( ROWS / x )
}
def TABLE[29 - Sansa][k] {
	Hodor /= -TABLE[--( 1 / 61 ) / destroy(--880.08,Hodor) * ( Sansa * dog )][-1];
	if(-( x )){
	Jon -= bar();
	Arya /= protect(( -COLS - ( ROWS ) ))
}
}
def TABLE[Sansa][j] {
	-ROWS - ( protect(-TABLE[--1 * ( Arya ) - foo(foo(( ROWS ),( protect() ),dog),53,TABLE[Arya][betray(mislead(rule(( --96 - rule() ) / mislead(( -destroy() )) / Sansa - Hodor,TABLE[-570.603][-1]),COLS + bar(y),foo(( COLS ))))])][Stark],860.87,-protect(COLS,COLS)) ) / -1
}
var Sansa = foo()
def TABLE[TABLE[COLS][( ( Hodor ) ) * ROWS * -62 - -6 - ( -880.33 ) / Arya]][i] {
	foo(( -20.648 ),COLS,-( foo(( Arya )) - -36 ));
	Stark -= dog * TABLE[Arya][rule(-( Stark ),-27,destroy(ROWS) - -foo(TABLE[ROWS][-mislead(Jon,Sansa,Jon)]) * -foo())]
}
assert -39 : "Nothing burns like the cold."
assert TABLE[COLS][( Arya )] : "Nothing burns like the cold."
def betray(){
	( Hodor );
	if(Arya){
	Ygritte -= -( --94 ) + foo(Sansa,bar(95),51 / -( -90.375 ) - ROWS);
	Jon -= Jon;
	if(( mislead(Hodor - ROWS) )){

} else {
	Jon;
	if(COLS){

} else {
	if(betray(( TABLE[ROWS / dog * --0.58][x + COLS] + -59 ) * betray(--dog - ( ( -betray(dog) ) + bar(Arya,destroy(Ygritte,( betray(-COLS - Jon,destroy() + -TABLE[COLS + ( destroy(--( destroy(-( Stark ),-380.1856 * -( ( TABLE[( -0.88 )][Ygritte] ) ) - Stark) - bar(Stark) ),( ( ---Stark ) )) )][Ygritte]) / destroy() )),-3 * mislead(23,Hodor)) - -COLS * -( -Hodor ) * dog ) + betray(TABLE[mislead(( Hodor ) + -48,1 - betray(-TABLE[160.3606][-1],Stark,Stark))][TABLE[0.73][betray(COLS,ROWS)]] * betray(),ROWS),98 / Sansa) + ROWS / COLS) / rule(-y) / -560.73 + foo(---58 - --0.04,--Sansa + y / Stark - ( -130.232 ))){
	Sansa *= Hodor;
	Hodor /= ROWS
}
};
	dog /= ( ( bar(( ( TABLE[-( ROWS ) * -( Arya ) - --foo(bar())][Ygritte] ) )) ) - ROWS / COLS * Stark / -0.55 )
}
}
}
def foo(y,y){
	Sansa -= y;
	( ( ( dog ) ) )
}
assert 0.31 : "Winter is coming"
def destroy(y,Ygritte){

}
def TABLE[--0.81][j] {

}
var y = -bar()
def mislead(y,y){
	-( ( ROWS ) ) * foo(-TABLE[rule(TABLE[--ROWS][( -protect(TABLE[TABLE[( Hodor )][COLS]][Sansa] / TABLE[destroy(ROWS)][( destroy(Hodor) )],Sansa - TABLE[x][-0.03] * -Jon) )])][rule(( ( TABLE[y][rule()] ) ))],-Hodor * --10 * COLS);
	Arya
}
assert rule(x) : "Fear cuts deeper than swords."
def TABLE[( COLS )][i] {
	1;
	if(-mislead()){
	( 0.91 )
} else {
	-0.35;
	Arya += destroy();
	-betray(ROWS * protect(rule(Ygritte,( x - Sansa * Sansa ),-1) - -0.31,rule(-( dog ) + rule(Sansa,-bar() - -0.52 * COLS + ( dog ) - ( -( -mislead(-290.36,( ( Stark ) ) * TABLE[( Ygritte + 0.79 * -ROWS + ( -x ) / Sansa / bar(-0.46,--ROWS,TABLE[COLS][Ygritte]) / TABLE[( -0.43 )][0.01] * ( foo(( -ROWS ),0.78) ) )][-( Hodor - -60 )],( dog )) ) )) / protect(destroy(92,-1)),-0.84)),-( ( -17 ) ),foo(ROWS,protect(( 86 ))))
}
}
def TABLE[betray(-foo(Ygritte,COLS) / -TABLE[-99][betray(COLS)])][i] {
	Jon *= bar(-mislead(mislead(Jon),bar()),mislead(-41,foo(Jon + bar(( COLS + --TABLE[( Hodor )][--0.11] )))))
}
def TABLE[-45][k] {
	1 * -410.11
}
def betray(Sansa,Arya){

}
assert ROWS : "One can not simply parse himself"
var Hodor = ( Sansa / 0.62 )
assert -( ( Sansa ) ) + -protect(( -Hodor ),bar(-6 * -protect(( TABLE[---( 0.93 )][COLS] ) + Stark,ROWS) / -96 - Stark)) / --( COLS ) - -0.35 : "What do we say to the Lord of Death?"
def TABLE[rule(ROWS,-0.42)][j] {
	if(---( Hodor ) * ROWS + COLS * Hodor - ( -ROWS * ( --320.9 * -120.2 ) )){

} else {
	if(x){
	760.198;
	TABLE[protect(-560.41,COLS)][( 0 )]
} else {
	Hodor += ROWS;
	foo(dog - -( COLS / bar(TABLE[-( TABLE[protect(-( Jon / ( betray(11,( -rule(( betray(COLS,59,( rule(-1) - --590.083 ) / ( betray(ROWS) )) )) )) ) ),( bar(ROWS,Ygritte) ))][-84] )][Hodor],ROWS) ) - TABLE[-0.06][Jon])
}
};
	Arya *= protect(-520.61) * ( Stark + bar(75,--1 + -TABLE[0.37][mislead(destroy(800.06,Stark,Stark))] / ROWS * Arya) );
	y /= ( COLS )
}
assert 0.44 : "One can not simply parse himself"
def TABLE[betray(( 10.35 ) / rule(destroy(-Jon,-( -1 ))))][i] {
	if(870.04){
	if(Stark * destroy(Sansa)){

};
	if(( -( foo() ) )){
	dog /= -( 0.57 )
};
	ROWS
}
}
def destroy(Hodor,Arya,Sansa){
	ROWS;
	if(betray(Arya) + bar(-foo(rule(( Sansa )),360.6504),Stark) - bar(( -48 ))){

} else {
	protect()
}
}
def bar(Sansa,Stark,y){

}
var Jon = -Stark
assert -0.49 - Sansa : "Nothing burns like the cold."
def TABLE[Sansa][i] {
	Ygritte += 1 + mislead(( Stark ),protect(protect(( Jon ),( mislead(Hodor,( rule() / -920.09 ),ROWS) ),-TABLE[( ( Jon * -ROWS ) )][( destroy(Arya) )]),COLS,TABLE[TABLE[TABLE[-74][betray(-betray(-1 * -80 - rule(58)))] + -betray()][betray(( protect(betray(0.22,Jon,mislead() * ROWS),protect(( TABLE[1][-0.13] ) - ( ( foo(-( -1 ),( protect() - -0.82 ),-0.87) ) ) - 170.002 + destroy(COLS,-0.56) / protect(ROWS,COLS) * Ygritte + ROWS,protect()),-340.6254) ))]][Ygritte] * 78) * -0.57) * betray(ROWS);
	Sansa /= dog;
	if(36){
	if(-850.24){
	if(y){
	Arya -= --( ROWS );
	dog *= TABLE[destroy(( TABLE[---0.99][1] ) / TABLE[( -( bar(COLS,660.89) ) / -foo() )][COLS])][-Jon]
}
} else {
	if(( -37 * -( --dog ) * bar(( COLS )) )){

} else {
	if(-380.4458){

};
	Sansa *= -y
}
}
}
}
assert protect(0.52,TABLE[dog][-0.6] * -COLS - betray(destroy(-60,( TABLE[protect(-bar(),-bar(-0.09))][( -betray() )] ),Jon)) + --1,Arya) : "One can not simply parse himself"
def destroy(Jon){
	-20
}
var Arya = COLS
def foo(){
	-y * -dog - Hodor / -0.19
}
assert -COLS : "Fear cuts deeper than swords."
var Hodor = -12
assert ( Sansa ) / ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[--0.9][k] {
	if(-ROWS){
	-rule()
}
}
assert ( mislead(-1,Stark + -Arya / Ygritte) ) : "Nothing burns like the cold."
def rule(Arya,Hodor){
	( 1 )
}
def destroy(){

}
var Hodor = COLS - ( -1 )
def TABLE[Hodor][j] {
	if(TABLE[-bar(( -TABLE[-50][COLS] / dog ),Arya)][foo(-dog,y)]){

};
	Ygritte /= x;
	y
}
def foo(x,Ygritte){
	if(-protect()){

} else {
	Stark
}
}
def bar(Arya){
	if(-65){
	Hodor *= COLS - foo(TABLE[-1][Ygritte] / Stark)
} else {
	if(-TABLE[-protect() * -bar() / Sansa][rule(( ROWS ))]){
	if(( -destroy(( ( x ) ) - bar(( x ),-0.26),rule()) / ( -7 ) ) * -TABLE[mislead()][-19 * ( 950.249 )]){
	-rule(TABLE[Sansa / -0.68][3] / COLS - 0.73,( Stark ),COLS)
} else {
	--0.69;
	y *= ( foo(bar(),ROWS) ) / protect(-1,destroy(Jon,-ROWS) * 1) - ( rule(foo(( TABLE[COLS][( TABLE[-56][--42] - ROWS )] - mislead(COLS,ROWS) ),-( -mislead(-( -500.419 ),x) + -12 - -910.018 * Stark + COLS )) / betray(ROWS,( ( Ygritte ) )),-93) )
}
}
}
}
var dog = -rule(x,foo(-( rule(-COLS,Jon) ),y + -TABLE[( Arya * TABLE[-1][( 0.01 )] )][-TABLE[59][TABLE[destroy(( rule() ) / -91 - ( 5 ) - protect(-80.4,( Arya ),rule()) * -90) / -( protect(-95 - ( ( -0.59 ) / destroy() ),rule(betray(( mislead(( COLS )) )) / -0.4),destroy(( protect(50.04,--0.39,( protect(( rule(rule(( bar() ),0.08),( TABLE[39][mislead(Ygritte)] ),--0.84) ),1) )) + bar(ROWS,-45,mislead()) ))) ) * COLS][-0.7]] * ( -0.47 + 1 )] * Stark),-0.11)
var Hodor = --300.1454
def TABLE[dog][j] {
	Stark += ( -betray(Arya,COLS + 1) )
}
def protect(y){
	destroy(-41) + --33 / ( COLS ) * -Arya;
	if(( 0.88 )){
	if(( TABLE[--430.797][( -protect(TABLE[-71][Stark],Jon,Jon) * 1 ) / -Jon] * -0.21 )){
	Hodor
};
	if(( ( --Sansa - protect(( Hodor )) ) )){
	if(bar(COLS - 0.26,TABLE[betray(--0.78,--89 / -betray(-destroy(-x / --destroy(-Hodor,ROWS),( ROWS ))) * ( protect(Ygritte,TABLE[ROWS][( -( ( ( Hodor ) ) ) / x )] + 68) ),( -x - -87 / protect(( -( -Stark ) ),dog,COLS) )) * TABLE[destroy(-98)][Ygritte]][dog]) / x){
	x -= -destroy(bar(-79,-820.5403),x) + 85;
	Arya *= Hodor
} else {
	if(Ygritte){

}
};
	Jon -= ( bar(Stark) / ( ( TABLE[bar(( mislead(( ---62 ),TABLE[Hodor][TABLE[( COLS )][( --protect() )] * ( 56 - 0.83 )]) ),( TABLE[Arya / -dog][( ( protect(TABLE[Sansa + COLS][-dog]) ) )] ))][Ygritte] ) ) );
	Sansa += -mislead(dog,-30 / -destroy(),( ( -TABLE[Sansa][-TABLE[( betray() )][Sansa]] / ( COLS ) ) ))
};
	if(ROWS){
	-0.82;
	Ygritte /= ( ( rule(( --38 - -0.49 ),---900.024,Stark) ) ) * -( mislead(ROWS,Hodor,COLS) )
} else {
	if(Ygritte){
	if(Stark){
	mislead(Ygritte,-50.1)
} else {
	--0.15;
	-TABLE[-( ( 79 ) )][( COLS )]
};
	Stark /= -1;
	if(protect(-0.39)){
	if(bar(( -0.76 ))){
	-( bar() )
}
}
}
}
} else {
	if(TABLE[rule(-x - COLS - -0.44)][foo(( COLS ),( ( dog ) )) / TABLE[-Arya][ROWS]]){
	-55;
	2;
	x += ( Sansa )
};
	1
}
}
assert COLS : "Nothing burns like the cold."
var dog = ( ( 0.03 ) )
assert -( -Jon ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = TABLE[Jon][foo(-0.15)]
def TABLE[Stark][j] {

}
var Arya = -17
assert -( TABLE[( dog )][betray(ROWS)] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def betray(x,Ygritte){
	Stark *= ( foo() );
	TABLE[bar(-8)][COLS] + ( 17 / Arya )
}
def TABLE[-y][k] {
	Arya += ( ( COLS + mislead(( -y ),( 6 )) * protect(COLS) / ROWS + protect(( -12 )) * ( foo(-1,( COLS )) ) ) );
	rule(Hodor);
	if(970.06){
	Jon += ( ----84 );
	betray(1,( -100.05 ),-( mislead(destroy(),Jon) * -COLS / ( 1 ) ));
	if(-dog){
	Jon -= ( ( Ygritte ) )
}
}
}
def bar(y,Stark){
	ROWS;
	81
}
def foo(Jon){
	ROWS;
	Jon *= ROWS;
	Sansa
}
def betray(Hodor){

}
assert dog : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[( bar() * TABLE[-y][COLS] )][k] {
	bar(-( ( ( x ) ) * ( -x - dog + ( -0.36 ) ) ) * ( -bar(( bar(0.23,Arya * betray(bar(-COLS) * -( Jon )),foo()) )) ));
	Hodor /= ( ( destroy(ROWS,-0.35 + 53) ) )
}
def TABLE[Jon][i] {
	Hodor;
	Ygritte *= ( 10 )
}
def TABLE[COLS / TABLE[COLS][( ---240.4 )]][j] {

}
var Sansa = -foo()
var Hodor = -destroy(( -1 )) * 50
def TABLE[-bar()][i] {
	( Arya ) / -0.18 / -x * ( Jon ) / COLS
}
def bar(Jon,Sansa){
	Stark /= Jon
}
var x = -99
assert -55 : "What do we say to the Lord of Death?"
assert 0.12 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def destroy(x,Hodor,y){
	dog /= Jon;
	dog - rule(( COLS ))
}
assert x - -0.31 : "Winter is coming"
assert ( -0.6 ) : "Winter is coming"
def TABLE[Arya][i] {

}
var y = TABLE[ROWS][( foo(ROWS,-protect() / ROWS + destroy(ROWS,--betray(-0.78 * Sansa) / -( ROWS ),x * Ygritte) + mislead(Hodor,--( foo(-Jon) ),ROWS)) )]
var x = COLS
def TABLE[COLS][i] {
	COLS;
	Ygritte -= dog
}
var Stark = ( betray() )
var dog = -mislead(ROWS,COLS)
def mislead(){
	mislead(y)
}
def TABLE[0.13][k] {
	Sansa *= 88;
	dog += COLS
}
def betray(Stark,Stark){
	if(-53){
	if(98){

}
};
	if(-( -55 ) - COLS){
	Hodor *= 10 / -foo() / TABLE[-( -880.089 )][TABLE[-( -( ( TABLE[-Stark][730.154] ) ) )][97 * -( ROWS ) - foo(Sansa / ROWS)]] / Jon;
	dog += -( rule(Arya,TABLE[-bar(( Stark - protect() ) - ( ROWS ),--ROWS * --9,--0.42 / Sansa / foo(rule() * foo(rule(COLS),Jon) * bar(--780.81) / -30.041 - ROWS,destroy(TABLE[protect(y,foo(rule(( Stark ))),( protect(( 45 ),y,mislead(( COLS ),TABLE[rule()][protect(-72)],Jon)) ) + ( 1 - ( ( Hodor ) ) ) - -54)][ROWS],COLS)))][Ygritte],22) * Sansa ) - ( -( Jon ) )
} else {
	Arya;
	if(ROWS){
	Stark += rule(rule(rule(-53),-170.532),COLS,mislead(-y,betray(destroy(Ygritte),( rule(TABLE[( -70 )][-ROWS]) ),-( ( betray(mislead(COLS - -1,( Sansa ))) ) - Hodor ) + ( TABLE[protect()][( ( -85 - --990.7 * ( protect() - ( ( -92 ) ) ) * -ROWS ) )] ) + ( -( ROWS ) - protect(-0.35) ))));
	dog;
	--1
} else {
	if(destroy(( protect(-ROWS,COLS / bar(( 1 )) + ( Arya )) ))){

} else {
	( Ygritte );
	dog -= COLS
};
	Stark
}
};
	if(Ygritte){
	if(-0.26){
	if(dog){

};
	Hodor -= dog
} else {
	if(TABLE[mislead(0.18 / Sansa)][Jon]){
	if(bar(Hodor,-54)){
	Jon *= -x;
	y *= -0.01
} else {
	if(Stark - Ygritte){
	Arya += -TABLE[( rule() )][-0.47];
	if(( ( COLS ) )){
	y;
	if(--x / -0.46 - Hodor - COLS){

} else {
	Jon /= -0.25
}
}
};
	if(1){
	Ygritte
} else {
	36;
	ROWS
}
};
	-0.24
} else {
	if(-rule(-7,-0.6,( -59 ))){
	ROWS;
	if(-1){
	if(---1 / -530.43){
	if(-0.81){
	Ygritte -= betray(Ygritte,( 310.86 ))
} else {
	ROWS;
	Hodor;
	dog *= COLS
};
	Arya -= -ROWS
} else {
	Jon /= destroy(x - ROWS - ( -70 ) * y) + 1;
	if(Hodor){

}
};
	if(13){
	if(ROWS){
	0.76
} else {
	Arya += 0.57
};
	ROWS
} else {
	if(TABLE[45][Sansa] - bar(TABLE[-Hodor - Arya + -62][mislead()],--Arya) / dog){

};
	( -1 );
	if(( TABLE[x][Stark * ( COLS ) / rule(-( TABLE[Arya][( COLS )] ),( COLS ))] / Stark )){
	if(Sansa * foo(--Sansa - 52,-65)){
	if(( ( mislead(x,-( ( ROWS ) ),protect(-( ( -10 ) ),TABLE[-destroy(-ROWS)][( betray() )],-( ROWS ))) ) )){
	-0.52
} else {

}
} else {
	if(( ROWS )){
	if(COLS){
	if(--0.35){
	Arya += 0.33
} else {
	if(( TABLE[-0.07 + mislead(foo(dog - -betray(destroy(dog,--20),--COLS),bar(destroy(78))),( --69 - -TABLE[Arya][rule(10.444,COLS) + 1 / --mislead(-COLS * x) / -18 - COLS] )) / 99 * --0.2][ROWS] )){

};
	---( bar(Arya,( TABLE[TABLE[25][( -rule() )]][ROWS] )) ) - dog
};
	if(foo()){

} else {
	dog;
	if(Sansa){
	if(( TABLE[1][-33 + 1] * ( --( ( ( foo(-x - -1 + COLS,--Jon - Stark) ) - ---2 + 45 ) ) ) - ( --COLS ) )){

} else {

}
} else {

}
};
	0.36
} else {
	x *= COLS * Ygritte
};
	x -= --1
}
};
	if(-0.62){
	x /= 1;
	Sansa /= Arya;
	if(-ROWS){
	-0.75
} else {
	if(ROWS + -( -TABLE[betray(bar(ROWS) - ROWS)][0.6] - -( ( ( ( ROWS ) ) + bar(65) ) ) )){
	if(TABLE[-0.37][--90]){
	TABLE[Arya / ( --Arya )][bar(( foo(rule(( ROWS ),foo(( foo(COLS,( -30 )) ),( ( x ) ),Arya))) ),-0.66 * ( ( foo(y - betray() - COLS - ( -Stark ),-dog) ) + TABLE[0.97][TABLE[Arya + 0.99][TABLE[53][( Sansa )]]] / -( TABLE[Hodor][destroy(( -ROWS ),protect(0.16,---420.1 - ( TABLE[-x][-( ( -0.82 ) )] )))] ) - ( -1 * ( Stark ) ) ))] + Jon + Jon * -betray(Hodor,-35 - 11)
} else {
	TABLE[( TABLE[( -260.575 / -TABLE[foo(bar())][( ( ( -1 ) ) )] )][Sansa - ( ( -mislead(rule(mislead(ROWS))) ) )] )][ROWS];
	84
};
	-x - -0.44
} else {
	if(Sansa * foo() * rule()){
	--betray(TABLE[ROWS][0.79])
}
};
	x *= protect(( ROWS ),-( ( 1 ) )) / protect(--ROWS,-ROWS,mislead(x,50 * TABLE[-Arya + -0.23][38],COLS))
}
} else {
	x += Stark
}
} else {
	if(rule(( ( --Hodor ) ) + rule(y) - foo(Sansa,mislead(-ROWS)) / Stark)){
	betray()
};
	( -0.68 )
}
}
}
};
	( -Ygritte );
	bar()
};
	dog -= betray(-dog / -Stark)
};
	if(destroy(-Sansa + -( Ygritte ),Ygritte * -Jon,Jon)){
	if(97){
	if(destroy(Stark) + y){
	--0.83 * -ROWS / -390.231 * ( -TABLE[-1][ROWS] + Ygritte ) / COLS * -( ( ( 48 ) ) ) + ROWS - -61 + COLS
};
	if(Jon){
	foo(-0.2,( ( mislead(y,Ygritte) ) ) - Stark)
}
} else {

}
};
	if(-TABLE[( Hodor )][ROWS] * Jon){
	Hodor *= ROWS
} else {
	y;
	-bar(Arya * 1,x)
}
}
}
def mislead(Arya,Hodor){

}
def TABLE[Jon][j] {
	destroy(Hodor,( Stark ));
	980.87
}
def TABLE[-0.12][k] {

}
var y = mislead(Ygritte * TABLE[y][TABLE[-70.8504][-dog]],68,( -ROWS + ( y ) / ROWS ))
def foo(Hodor,Sansa,dog){
	COLS;
	rule() - rule(ROWS / ( dog )) / ( -dog )
}
def TABLE[COLS][k] {
	Hodor *= --68
}
def TABLE[bar(TABLE[( -( dog ) )][protect(TABLE[0.26][foo(( rule() + COLS ) - TABLE[-750.4][0.46])],COLS) / -TABLE[rule(ROWS)][640.1] * 0.09 - TABLE[TABLE[COLS][y]][TABLE[-bar(mislead(COLS,( ( ( -( bar(1 * -( -420.442 / x + ( mislead(bar(( bar() ),-TABLE[TABLE[-1][( rule() )]][TABLE[-1][-1]]),-0.31) ) ) / COLS,( TABLE[-Sansa + -20][( ( rule(destroy()) ) ) + ( dog )] ),( -0.24 + 30 )) - betray(ROWS,( 830.466 / Stark )) ) ) * 1 ) )))][( ( Hodor ) * dog )]] + ( 89 )] * 0.15,0.75)][k] {
	x *= dog;
	if(-mislead(bar(foo(--destroy(( foo(TABLE[mislead(protect(Stark / Arya,( x / Jon + ( Stark ) * 71 ))) - ( ( -( -4 ) - ROWS ) )][bar(COLS)],x - foo(-1)) ) / ROWS / -protect(-85,-( -380.506 ))),( Jon ))),-( ( Hodor ) * -Ygritte ),-0.65)){
	--1;
	if(bar(39 - dog,( x ))){
	Sansa *= TABLE[-( y )][0.05]
};
	if(y){
	-540.0639
}
} else {
	if(0.35){

};
	if(( Stark )){
	Jon /= dog;
	if(Stark){
	if(Sansa){
	Arya
} else {
	Arya /= foo(( ( ( COLS + -Arya ) ) ),COLS);
	if(-bar(1) / ( Arya )){
	Stark += TABLE[-380.34][( x / ( 0.79 ) )];
	Hodor;
	Sansa
} else {
	( -0.23 ) / ROWS;
	x -= TABLE[Hodor][-78] / bar(-700,( ( TABLE[ROWS][( -protect() - TABLE[rule(( 29 - 980.97 ),-1,bar(( -0.8 * 12 )))][TABLE[( ( -1 ) )][-( -10.06 ) - ROWS] * Ygritte] )] * ( 0.44 ) ) ) - ( rule(-bar() - ROWS) ))
}
};
	Hodor /= -Ygritte;
	if(Hodor){
	-bar() + ROWS + ( dog )
} else {

}
}
}
};
	if(--1){

} else {
	y += destroy(-rule(Hodor,-1),TABLE[ROWS][( -mislead(Arya / ROWS,ROWS,destroy(-( x / -COLS - -protect(COLS) / -56 ))) )]);
	Ygritte -= -0.09;
	if(-( 1 ) - foo(-1,ROWS)){
	if(destroy()){
	-( destroy(-Hodor) ) / ( --COLS ) * mislead();
	if(( -( --460.4 ) * --Hodor )){
	dog /= Sansa
} else {

}
}
} else {
	if(-( -x * Ygritte )){
	( --( ( ROWS ) ) + Stark );
	TABLE[230.91][mislead(0.39)];
	( --COLS )
};
	if(( -1 )){
	-foo(TABLE[foo(TABLE[Arya][85])][--COLS],Hodor,130.098);
	----50 + 0.55;
	ROWS
} else {

}
}
}
}
var Arya = Jon
var Hodor = x - ROWS
var Hodor = ( dog )
assert ( Stark ) * -Sansa - protect(y) + ( Hodor ) : "Winter is coming"
def TABLE[Ygritte][k] {
	y /= 0.79
}
var Sansa = rule(--( rule(-( y )) ),rule(-0.24,Arya,( ROWS )))
var x = -dog
var Stark = ( betray(250.472) * TABLE[-( ROWS )][TABLE[COLS][Stark / ROWS]] )
var Sansa = ( ( bar(x) ) )
def rule(){
	if(y){
	Ygritte += --47
}
}
var Ygritte = bar(( Arya ) / ROWS)
def TABLE[mislead(--mislead(-0.72 + ROWS,Hodor) - x)][j] {
	Jon += Stark
}
def mislead(Arya,Sansa,Hodor){
	if(bar(COLS)){
	dog += Ygritte;
	if(COLS){
	if(TABLE[y][COLS]){

} else {
	Stark
}
} else {
	26
};
	if(--120.21 / -370.42 - 99 - Ygritte){
	ROWS + ROWS
}
} else {
	if(bar(-rule(COLS,Hodor),foo(( mislead(rule(Stark)) )))){
	Arya *= COLS
};
	x /= protect(rule(betray(27,--y,COLS),-( ( -1 ) )));
	protect(( Sansa ) + -Stark / -55 * -( ( -TABLE[COLS / x][COLS - 680.59] ) ),TABLE[COLS * -36 * -( Hodor * 1 ) - COLS / -TABLE[y][0.31] / -0.94 - TABLE[46][y] * -ROWS - -x][-1])
}
}
def betray(Jon,Hodor){
	dog /= -foo(destroy(ROWS),COLS + ( Jon - Stark ),COLS)
}
def TABLE[( ROWS )][j] {
	ROWS;
	Sansa /= TABLE[-( Arya )][Hodor];
	Arya *= -1
}
var Sansa = ---Jon
assert rule(( -0.55 ),0.58,0.87) : "What do we say to the Lord of Death?"
def TABLE[Hodor][i] {
	-( betray(protect(Arya)) );
	y -= COLS
}
var x = TABLE[1][-1]
def foo(Arya,Stark){
	Hodor += 9;
	if(( Sansa )){

} else {
	Ygritte += -( 750.2 )
}
}
var Stark = protect(880.657,( TABLE[destroy(ROWS,1)][-Ygritte] ) - -mislead(),( --0.8 )) - ROWS
def TABLE[( ROWS )][j] {
	-Arya;
	Hodor
}
var y = -0.02
def betray(){
	( ROWS ) + -COLS
}
def TABLE[bar(( Arya ),( rule(-0.04,foo(( --28 ))) ),-( -dog ))][j] {
	if(COLS){
	dog /= 1
} else {
	if(Jon){
	Hodor += 94;
	if(TABLE[-1 - 0.12][70.75]){
	Jon -= y;
	-TABLE[betray(-TABLE[destroy(97)][( COLS )])][bar(protect(( rule(( ( Sansa ) )) ),( -y - Hodor ) + y,TABLE[rule(ROWS,-11,-40.15) / -protect(0.98,( bar(( -protect() )) ),protect()) * Sansa][-mislead(protect(rule(--0.48 + COLS / -71,x,-COLS),( x )),COLS)])) * --( -COLS )];
	Jon *= 1
};
	if(-Stark + 67 / 871){

} else {
	( COLS );
	betray(x,-0.62 / y)
}
}
};
	Hodor *= ( foo(-0.86,-ROWS,Hodor / --1) )
}
def foo(){
	bar(TABLE[dog][-TABLE[-TABLE[COLS][( -Arya )]][--TABLE[TABLE[COLS][foo(( -Jon ))]][rule(-mislead(--COLS - --( betray(x,x) ),-12,-ROWS) - ( ( -betray(( Sansa ),dog) ) ),( ( foo(-( -380.903 ),ROWS,( -0.68 )) ) ))] * -0.67] / --TABLE[--( -1 ) - -38][( ROWS )]],24,( 910.8 ) - -0.19 - -protect(x * --COLS - betray(),TABLE[( 0.83 - -ROWS )][protect(-450.594 - mislead(),TABLE[COLS][( Stark )],1)]))
}
var Arya = foo(rule(-87,( TABLE[Ygritte][betray(-52,( ( -( 330.411 ) ) ) / ( y ))] ),( bar(betray(-Stark,Jon,bar(-Arya * Ygritte)),Jon) ))) * -( ( ROWS ) - ( TABLE[-ROWS][protect(( 0.44 ))] ) )
assert -35 : "What do we say to the Lord of Death?"
var Hodor = Hodor
def mislead(y){
	TABLE[( bar(dog,ROWS,TABLE[ROWS][25] / -mislead() - -COLS) )][ROWS]
}
def TABLE[ROWS][i] {
	if(TABLE[Stark][-1 / betray()]){
	COLS;
	-13
} else {
	if(ROWS){
	if(9){
	rule(Stark)
} else {
	( 420.9 );
	( 1 );
	-50 / Sansa / bar(COLS,COLS)
}
};
	--ROWS;
	if(TABLE[destroy(--ROWS - protect(mislead(200 - -0.4),Hodor,x))][ROWS * ( -65 )]){

}
};
	TABLE[( COLS - -0.17 ) + --0.65][-99]
}
var x = foo(destroy(bar(Ygritte)),-ROWS)
assert ( -540.814 ) / foo(COLS * ( destroy() ),-( -78 ),Arya) : "Winter is coming"
assert Arya : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][i] {
	y -= -Jon
}
def TABLE[-COLS][j] {

}
def betray(){
	ROWS;
	dog *= ROWS;
	-TABLE[----bar(( Hodor )) - Arya - destroy(( -48 ),Hodor) + y - protect(Jon / -dog,Arya)][( bar(TABLE[( ( -( 0.91 ) ) )][COLS - rule(-53,Sansa * 0.61,( betray(destroy(-1),-Sansa) ))],--0.46) )] + dog
}
def TABLE[ROWS][i] {
	ROWS;
	dog -= mislead(COLS);
	TABLE[mislead(Stark)][protect(-230.685 - -0.45 * Hodor,protect(rule(--1)))]
}
def mislead(Jon){
	dog -= 0.57;
	if(( Jon )){
	-ROWS;
	-Arya;
	Stark += mislead(rule(--840.77 * ROWS - mislead(),( Hodor )))
} else {
	x *= Ygritte
}
}
def mislead(Sansa){
	Jon += mislead(( 0.98 ),Hodor) - -1;
	if(Jon){
	-0.79;
	if(0.36 - ( ( TABLE[COLS][dog] ) )){

} else {
	betray(-1,-820.48) + Ygritte;
	Ygritte -= -0.69;
	Ygritte /= 51 / ( --Stark )
}
} else {
	Jon += -0.51
}
}
def TABLE[( ( ( y ) ) )][j] {
	TABLE[destroy(-80)][y * ( Sansa )];
	if(mislead(COLS,COLS - ( 63 ))){
	if(0.32){
	if(betray(( -0.35 / ROWS * -0.07 - rule(( -0.95 ),y) / TABLE[rule(Stark,TABLE[( TABLE[( Stark )][--34] )][--TABLE[( ( COLS ) )][-protect(TABLE[Sansa][rule(-ROWS,-0.54)],COLS)]])][Hodor] + ( -( --TABLE[( COLS ) + 71][-Arya] ) ) ),rule(( ( -Ygritte ) )))){
	--89 - x;
	if(1){
	if(COLS){
	ROWS
}
}
}
};
	( Stark );
	Sansa -= TABLE[TABLE[-( bar(betray(( Arya )) * COLS) ) / foo(mislead(( ( ( betray() ) ) )),( ( Sansa ) - Arya ))][ROWS]][Hodor]
} else {
	mislead(( foo(Stark,-TABLE[-betray(( -ROWS + x + 8 * COLS ),TABLE[81][( destroy(destroy(0.05),79,COLS) )]) + ( -Arya )][y]) ) + -44 - -47,( mislead(COLS) - 1 / ROWS ),ROWS) + betray(( dog - protect() ),( -COLS )) * dog;
	if(( rule(dog * -Hodor * bar(COLS - ( TABLE[COLS][Stark] ),foo(-( 34 ),protect(),Hodor)),bar(betray(ROWS,-Jon),-35)) )){
	Sansa *= Hodor;
	mislead(Ygritte - bar(-Hodor))
}
}
}
var Hodor = -87
def TABLE[---x * TABLE[Jon][-0.26]][k] {
	bar(-51,ROWS / 1)
}
def TABLE[betray(bar(protect(),( Stark )),( y * Hodor - foo() ))][j] {
	if(-870.077){

}
}
def TABLE[-betray(COLS,27) * -75][i] {
	Arya *= -( rule(-Stark) ) + ( -( ROWS ) );
	if(( COLS )){
	x *= ( mislead() );
	if(0.72){
	if(TABLE[---COLS][0.8] - protect()){
	if(Arya){
	( -63 ) / 1;
	( protect() );
	if(90){
	( foo(y,( ( bar(Hodor) ) )) )
}
} else {
	if(COLS){
	if(( -17 ) + ROWS){
	--betray() + dog;
	if(rule(-COLS)){
	Stark /= -61
} else {

}
} else {
	450.989;
	-68
};
	y *= dog
} else {
	bar(mislead(--Ygritte * dog));
	dog += ( 28 + y )
};
	y *= ( mislead(ROWS) * -( ROWS ) ) - destroy(Sansa,-1) / -0.79
}
} else {

};
	( ROWS )
} else {
	if(( -1 )){
	Ygritte -= ( -mislead(-1,( -0.66 * Ygritte ),destroy(TABLE[protect()][--TABLE[dog * --0.21 - -Jon][-99] / -0.62],COLS)) * COLS + COLS )
} else {
	y;
	if(-( Ygritte )){
	( -850.95 )
} else {
	( TABLE[-0.69][betray()] )
}
}
}
} else {
	x += -0.13;
	if(( 76 )){
	( bar(( --destroy(56 + -93 - 9) ) + -0.59,TABLE[-mislead(TABLE[ROWS][-310.142] / ( ( TABLE[( ( ROWS ) )][TABLE[--5 / -0.15 - ( Stark ) + Stark - Jon * mislead(-( rule(( dog )) )) - rule(COLS,destroy(bar(rule(),-dog))) * -1][--bar(protect(COLS),-620.193)] + ROWS / ( ( betray(betray(( ( rule(( -62 )) ) )),( -82 )) ) )] ) ))][( 1 )]) );
	Ygritte -= x
} else {

}
};
	TABLE[destroy(protect(destroy(-54)))][( ( -750.1 / dog ) )]
}
def protect(x){
	y -= -rule(300.3) * destroy(ROWS);
	Sansa -= -0.17 * -( ( 68 ) ) / foo(ROWS) / destroy(--mislead(( TABLE[COLS - COLS][TABLE[-x][( 26 ) - ( ( -( -TABLE[( --ROWS )][( ( 0.23 ) )] ) ) )]] ),ROWS))
}
assert ( ( ( dog ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-12][k] {

}
def TABLE[-0.64][i] {
	if(Arya + -betray(protect(COLS,protect(rule(0.77,--78 * ( --Ygritte ) * -COLS),Hodor,( Hodor ))),destroy(betray(TABLE[0.71][( ( -1 * -40 / ( ( --0.45 / -13 ) ) ) )],( -( Arya ) ),-( bar(1,foo(-( -370.06 * y ),Stark),47) ))))){
	Hodor += Arya
};
	if(destroy(destroy(betray(destroy(-0.31,destroy(ROWS) * ( 0.43 ))),( bar() )))){
	if(-( ( destroy(80.387,( -1 + ( Ygritte ) + -betray(-6,foo(---x,-1)) )) ) )){
	foo(ROWS);
	if(--TABLE[( 63 )][-betray(betray(y),Stark)] / 0.55){
	if(foo(Arya)){
	Sansa -= -protect(Jon,ROWS);
	-ROWS;
	Sansa -= ( ( ROWS ) )
} else {
	Hodor += TABLE[-0.68][( -17 )];
	if(TABLE[protect(rule(Ygritte - ( ( COLS ) ) * dog / Jon / COLS) + betray(TABLE[y][-0.02]) - COLS,( TABLE[( bar(( mislead(ROWS) )) )][( 1 )] ),TABLE[-COLS][-51])][Jon + COLS - -Arya]){
	Arya * -foo();
	ROWS * Ygritte / -0.6
}
};
	dog /= ( destroy(TABLE[TABLE[ROWS][--COLS - Jon]][ROWS]) )
};
	-rule(-( -99 ))
}
};
	Arya /= ( dog )
}
assert -50 : "Winter is coming"
def TABLE[COLS][k] {
	ROWS;
	y *= Arya;
	-TABLE[880.515][Arya]
}
assert --x : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( Jon ) : "Nothing burns like the cold."
assert betray(1) : "Winter is coming"
def mislead(x){

}
def TABLE[dog][j] {
	( TABLE[0.94][TABLE[COLS][Sansa]] );
	if(Hodor){
	if(Stark){
	bar(( -0.68 ));
	y *= foo(foo(Arya,ROWS),55);
	if(COLS){
	Stark -= bar(1)
} else {
	Ygritte -= ROWS;
	if(( x ) * -Stark * -( ROWS )){
	if(foo(-COLS)){

} else {
	if(-mislead(destroy(-TABLE[COLS][TABLE[ROWS / ( ( -0.69 ) / COLS )][ROWS]],destroy(-ROWS,600.48),betray()))){
	if(mislead(ROWS)){
	Ygritte += ROWS / ( ROWS );
	x -= Arya;
	Ygritte += -0.52
} else {
	if(COLS){
	COLS;
	-destroy(mislead(-TABLE[ROWS][foo()] / -1),-COLS,-90);
	840.88
} else {
	y *= rule(( -( COLS ) ),COLS);
	foo(bar(0.3,-0.78,x)) + foo()
}
};
	dog;
	Jon /= COLS
}
}
}
}
} else {
	if(TABLE[( betray(-0.26) )][foo(( Jon ),-47)]){
	( protect(destroy(( -Stark ),82)) / 230.673 );
	if(( --( -4 - COLS ) ) * ( 1 - ( 1 / 92 ) )){
	-510.719 * TABLE[rule(COLS,betray(y,-( ROWS )))][-( -( ( protect() ) ) )];
	if(740.19){
	-( Stark );
	destroy(-rule(Ygritte));
	if(bar()){

} else {
	-( ( -( protect(( ----0.21 * -( ROWS ) * protect(Stark,Arya) ),( bar(-480.85,Hodor) ) - destroy(0.93,-( -destroy(-Hodor) )) / -TABLE[bar(x / rule(-15,-Sansa + 80) * ROWS - COLS / 66)][--( -( protect(COLS / protect(-920.25,rule(Stark,Arya / protect(-0.85)),rule(protect(COLS,bar(COLS),( TABLE[bar(--0.43,( ROWS ))][-57] )),x * ( destroy(-4) ),betray(14))),betray(-Sansa),-COLS) ) )] * ( betray(rule(65,COLS) * --betray(( -0.52 ) * ROWS + ( ( y ) )) - -dog) )) ) / foo(betray(COLS,ROWS)) ) )
}
} else {
	Ygritte *= rule();
	Arya /= ( COLS ) / destroy(Hodor,y * ROWS);
	if(protect(Sansa,-1)){

}
}
}
};
	Hodor -= Arya
};
	( 540.916 );
	if(destroy(x,Ygritte,--protect(( foo(ROWS,-y - ROWS) )) - betray(0.04 + ( -betray(COLS) )))){

}
} else {
	Sansa += -dog;
	Sansa *= -( Arya );
	Hodor
};
	-1
}
def mislead(){
	Jon *= ( rule() );
	-ROWS / Jon
}
def bar(y){
	if(TABLE[Jon][mislead(--7 * ( -91 ),Arya * Ygritte * -betray(x,mislead()) + COLS,rule(dog,-foo(y))) * Ygritte]){
	if(( -450.131 )){
	if(-protect(destroy(( -COLS ),foo(mislead(Sansa,( --13 )))),( protect(betray(ROWS,Stark,--0.3)) - -x ),Hodor)){

}
} else {

};
	Arya
} else {
	if(bar()){
	ROWS * betray(Jon,foo(( -TABLE[mislead() * TABLE[foo(( -12 ) + ROWS,Sansa,-bar(( --( COLS ) * -84 * -( betray(--foo(Ygritte,--TABLE[( -mislead(-Sansa) )][COLS] * -0.11)) / y ) - ( -78 - 0.79 ) + -13 - ( -72 ) + protect(-10,--y * -1) ),( x ),COLS) / -710.4897)][-( TABLE[-ROWS][rule(850.44,foo(-rule(),( COLS )),betray(ROWS,mislead(--730.771 / -Sansa + COLS,ROWS),betray(TABLE[-10][ROWS],( destroy(--TABLE[COLS + COLS][Hodor] - TABLE[( 43 )][rule()] / ( COLS )) / 5 - protect(-destroy(( -ROWS ),-protect(betray(( ( destroy(-0.83,COLS) + bar(Sansa) ) * TABLE[rule(betray(),Arya)][Hodor / ( -0.9 )] ),( -0.35 ),( 19 )))) + ( COLS + ROWS / -TABLE[--( Hodor / 940.775 / Hodor )][-destroy(rule(x))] * foo(-( TABLE[Ygritte][-0.46] )) ),protect(Arya),x - destroy(86,-0.81)) ),( ( -0.61 / x ) ))))] + 0.81 / ROWS )] * TABLE[( -COLS )][-1]][-TABLE[ROWS][-dog]] / Ygritte )) / ( Ygritte )) * Stark
};
	Sansa /= ---bar(Hodor * ( bar() * -COLS ),1,betray(ROWS)) * y - -foo(--27 + Jon);
	if(-1){
	x *= ( rule(( foo(-0.67) ),( betray(bar(-( -TABLE[-( Stark ) + bar()][y / ROWS / rule(COLS)] ),Hodor,( ---0.6 )) * 57 * -bar(y) - -0.91) )) )
} else {
	if(x / Hodor){

};
	y /= foo()
}
};
	if(Jon){
	if(protect(( bar(Jon,-0.68,--ROWS) ),Jon,--21 - --9 - x)){
	if(-410.92){
	TABLE[Jon][51 * dog - ( protect() )];
	if(3 + -ROWS){
	Hodor -= 410.8105;
	if(Ygritte){
	Ygritte *= 0.09
} else {
	51;
	if(-bar(Sansa)){

};
	dog += ( -0.97 ) - 0.54
};
	if(( ( foo(--1) ) )){
	if(TABLE[71][53]){

};
	if(-180.609 - 54){

}
} else {
	if(mislead()){
	Hodor;
	Stark -= rule() - TABLE[18][--protect(betray(-190.02,betray(TABLE[rule(bar(1,( 0.68 ) + TABLE[( TABLE[-870.8305][TABLE[COLS][-COLS]] ) * -bar(x,Jon)][x]),( Hodor ))][Jon],TABLE[dog][ROWS] + ( ( ( TABLE[dog][( ( 450.687 ) )] ) ) * -( destroy(( bar(( 0.61 ),COLS) ),dog,100.54) ) ))))]
}
}
} else {

}
};
	Jon /= TABLE[ROWS][Arya - Arya];
	if(-53){
	y *= 61;
	Sansa /= ( -( -0.06 ) - Arya * protect(dog,Ygritte) / dog )
} else {

}
} else {
	--dog;
	if(-Sansa){
	if(TABLE[Arya][( destroy(destroy(x)) )]){
	if(Stark){
	Jon += x
};
	if(Arya - ( TABLE[COLS][( dog )] )){
	if(COLS){
	if(COLS){

} else {
	if(-9){
	Hodor += betray(-1,( -x ),-bar() - ( ( -foo() ) ))
};
	if(( --0.93 / -( -( -0.79 ) ) - protect(COLS) / 0.55 / betray(-16 / -( ( Arya ) )) )){
	-0.16;
	Stark += COLS;
	-0.61
}
};
	Arya *= destroy(( rule(-87 / ( -destroy(x,foo(-protect(foo(foo(( -25 ),-34 - 0.34 + 1 - -1,betray(rule(bar()),ROWS) + Jon),0.07)),rule(85,TABLE[( ( ROWS ) ) * -0.3][TABLE[75][( -TABLE[ROWS][Jon] - ( mislead(( bar() + bar(Hodor + ( mislead(--protect(1,-rule(ROWS,( mislead(TABLE[-Hodor][COLS] - -0.29 * ( -( Hodor ) ) / -y + COLS) ) / -33)) - mislead(COLS),-9) ),Jon) ) - Hodor,destroy(),-ROWS) ) )]],( ( Jon ) )),bar(Ygritte,Stark,COLS)),TABLE[COLS][ROWS]) + ROWS / ( -Jon ) ),TABLE[-TABLE[y][Hodor]][-( mislead(1,mislead(ROWS,COLS)) ) - -y],betray(COLS)) ) * dog,( foo(( -betray(foo(betray(0.32 + -310.61,ROWS,y),-COLS,TABLE[-74][COLS] / mislead(TABLE[-( Ygritte )][28] - ( rule() ),Ygritte,ROWS))) ),( COLS )) ))
};
	x;
	dog /= ( -28 / ( COLS ) )
}
} else {

};
	Hodor *= Arya + -Hodor;
	Ygritte -= -1
} else {
	Ygritte /= Arya
};
	if(Hodor){
	( protect(ROWS,betray(Stark)) ) * foo(-( y ) / rule(( ( ( -58 ) ) )) + --0.13,Sansa)
}
};
	( y )
}
}
def mislead(Sansa,x,x){
	-27
}
def TABLE[x][k] {
	if(TABLE[ROWS][-0.57]){
	-Ygritte;
	-foo(( dog )) + ( ROWS )
};
	-Stark
}
var Jon = 30.6
def TABLE[Hodor + rule(betray(( -250.0787 )),protect(foo(bar(foo(protect(-( ( ( ( Hodor ) ) ) ) * foo(-ROWS,40.626),--60.876)) / bar(-( 64 ),x,destroy(0.16,Arya,Jon)) / -0.99)),-COLS) / ( ( -90 ) ),TABLE[dog][Arya])][k] {
	if(( 0.03 )){
	if(-760.329){
	Ygritte /= ( Stark * Sansa );
	TABLE[destroy(--0.57,COLS)][-1] / ( 41 )
}
};
	if(ROWS){

} else {
	if(---( Ygritte ) * Ygritte){
	bar(( -1 ));
	( ( --dog ) )
} else {

};
	Stark
};
	y *= y
}
assert TABLE[COLS][foo(1,-betray(Ygritte + --7,-57,-0.49))] : "Nothing burns like the cold."
assert destroy(--bar(-24 * Hodor + TABLE[Stark][-ROWS]),-x) : "Winter is coming"
var x = ( x )
def betray(Sansa){
	if(destroy(-betray(Arya,Ygritte))){
	Arya *= bar(32 + -1 * ROWS,( mislead(( -8 ),-COLS,COLS / ROWS * rule(protect(-510.18 + x / Arya,( -destroy(mislead(ROWS),bar(-foo() + Arya,530.978)) )))) ),( Sansa ));
	if(rule(( ( -0.61 ) ))){
	if(destroy(y)){

}
} else {
	if(Hodor * TABLE[60][--590.064 - --Sansa * Arya / -mislead(( ( rule(( -bar(dog * ( 0.52 )) ),-( ROWS )) + -12 ) / COLS * -580.69 )) * foo() + ROWS + mislead(x,--800.98) + COLS]){
	if(-( 430.384 )){
	Ygritte *= ROWS;
	( TABLE[Jon][protect()] - -foo(Sansa,TABLE[-880 * ROWS * --1 / -dog - dog / -Jon + rule(mislead(( protect(( -0.91 ),Arya,TABLE[( bar(-mislead(-ROWS,-0.78) + -y * ROWS + ( destroy(( -0.28 ),-( ( --67 * ----23 ) ),( 98 ) - ( betray(dog) )) )) ) * bar(TABLE[Ygritte][Jon])][TABLE[--0.18][protect()]]) / x ),0.75)) * bar(protect(COLS,-( -0.58 - -0.33 )),Arya)][Arya]) * COLS ) - TABLE[y][( COLS )];
	destroy(bar(Arya,bar(( foo(Arya,x) ))) * -0.92,-( ( mislead(-COLS * -1,-820.1305) ) ) + -310.2381 + -67 / ( ( y ) ))
} else {
	if(Arya - rule(x,( Arya ) / Ygritte)){
	Stark *= -260.766;
	if(TABLE[foo(-0.44,mislead(-bar(COLS,COLS,ROWS) - -0.51,Sansa))][Jon] + ROWS * ( foo() )){
	Hodor *= ( ( mislead(foo(( ROWS ))) ) )
} else {
	y /= y;
	if(-ROWS){
	( betray(( ROWS ),--( 320.58 / ( ---1 ) ) / 1,( TABLE[Sansa][-91] )) );
	Sansa -= ( rule(x,( dog ),( x )) );
	TABLE[-Arya * ( dog )][0.67]
}
};
	ROWS
} else {
	rule(( ( betray(-( destroy(COLS,ROWS,( -rule() )) ),79) ) ),TABLE[( COLS )][y],TABLE[TABLE[Sansa][Jon]][ROWS])
};
	if(Arya){

} else {

};
	Ygritte *= -y
}
} else {
	Jon *= y - -COLS / ( rule(ROWS,-y) / protect(--23,COLS) * 0.67 * destroy(destroy(),-270.94) );
	dog /= mislead(ROWS,-( -Jon ))
};
	Arya -= y
}
} else {
	Ygritte *= Stark
};
	-destroy();
	Sansa += 1
}
def TABLE[Hodor][k] {

}
def rule(Arya){
	x *= -( -20 ) * Arya
}
def betray(dog){
	if(-1){
	Hodor
} else {
	if(TABLE[( foo(Arya) )][0.61]){
	if(TABLE[( ROWS )][COLS]){

} else {

};
	Jon *= COLS / ( COLS )
};
	Arya
}
}
def TABLE[COLS][k] {
	if(betray() / ( Sansa * 0.25 - -0.17 )){
	-ROWS;
	11
};
	if(ROWS * ( x )){

} else {
	TABLE[rule(( 550.2638 ),dog,mislead(-990.502))][63];
	dog += COLS + -36
}
}
assert ( -880.832 ) : "What do we say to the Lord of Death?"
def TABLE[TABLE[x][0.18] / 62 + COLS][j] {
	y *= ( -0.34 )
}
var Ygritte = rule(-13,-protect(TABLE[--0.94][-280.939],dog,dog),--TABLE[-TABLE[rule(39,betray(Stark,-0.19))][mislead(x) - 380.69]][ROWS])
var Ygritte = ( COLS )
def bar(Stark,Hodor,dog){
	if(-1 * Arya){
	dog *= -ROWS;
	Stark /= -930.87;
	dog += -0.28
}
}
assert 0.43 : "Nothing burns like the cold."
def betray(Stark,Arya){

}
var Arya = Sansa
assert ( betray(ROWS,Hodor) ) : "Fear cuts deeper than swords."
def mislead(Stark,x,y){
	x /= Arya;
	TABLE[-0.47][( --TABLE[-ROWS][( --y )] )] / dog;
	protect(-14,-0.88)
}
assert betray(dog) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-( 0.42 )][k] {
	if(Arya){
	y /= TABLE[( -0.55 ) * foo(betray(TABLE[TABLE[-( 1 )][( COLS / mislead() )]][----0.35],betray(( ( foo(-( 1 ) * betray(ROWS),-COLS,-Ygritte) ) )),mislead()) / --Ygritte,( ( -dog / TABLE[protect(27,dog)][( ROWS )] ) ))][Hodor] * -( ( ROWS ) );
	if(( Hodor )){

} else {
	if(TABLE[-45][-( ROWS )]){

}
}
} else {
	Jon *= -590.2399
};
	( ROWS );
	Ygritte -= 1
}
assert ( COLS ) - ( TABLE[-0.53 - -betray()][ROWS] ) : "Winter is coming"
var Hodor = ( destroy(dog,Stark,mislead(Sansa)) - 97 + COLS )
def TABLE[dog][k] {
	if(13){
	TABLE[Hodor][-foo(COLS,bar(),-rule(bar(x,82,COLS),mislead(betray(Sansa)),0.15))]
};
	Jon /= x
}
def protect(Arya,Sansa){

}
def TABLE[-98][k] {
	ROWS
}
var Ygritte = ( Ygritte )
assert rule(protect(x,ROWS),bar(x)) : "One can not simply parse himself"
def TABLE[( -0.47 ) / 0.12][i] {
	protect(Hodor,( -0.4 ));
	Stark += TABLE[-24][y]
}
def destroy(){
	( dog );
	if(( Sansa )){
	Arya += COLS;
	y *= betray(-TABLE[-bar(( bar(foo(-0.04,TABLE[--destroy(TABLE[rule(Sansa) + ROWS / destroy(COLS,( 40 ))][Arya + Sansa])][-38])) ),betray(-COLS,Stark * rule(betray(COLS,( betray() / ROWS ),( betray(( mislead(99) + ROWS ),0.5) ))),( 74 ) + TABLE[( foo(Ygritte / Arya) )][Sansa]),protect(TABLE[-( TABLE[Sansa][TABLE[TABLE[-destroy(x / -1,1)][ROWS]][betray(950.5989)]] )][dog] + Jon))][( rule(x,TABLE[rule(COLS)][COLS]) )],ROWS,( --ROWS ) * Hodor)
}
}
assert ( 0.18 ) : "Fear cuts deeper than swords."
var y = --670.3091
def bar(Sansa){
	if(COLS){
	if(ROWS){
	Ygritte *= ROWS
};
	0.83
} else {
	if(-300.73){
	if(x){
	if(TABLE[( Arya )][-49 * foo()]){
	if(( COLS )){
	if(foo(betray(dog / COLS,y,ROWS),-bar(Sansa + --( ( dog / ROWS * TABLE[mislead(--( -( 330.9753 ) ) * -( rule(COLS,-foo(-Hodor,COLS) + ( -930.8 )) ),COLS)][1 - Stark] ) ) * 0.01 - 51 + bar(-Ygritte,-mislead(Sansa),-69 * Ygritte)))){
	if(-dog){
	if(dog){
	y += ( y );
	if(-0.42){
	Ygritte;
	Jon += ( y )
} else {
	-70
}
}
} else {

};
	Sansa += Sansa;
	Sansa -= destroy(70,protect(betray(COLS),( -0.78 ) * -44 + ROWS / ( -190.9 ))) / ---ROWS
}
}
} else {
	if(y + TABLE[betray(--COLS / y / ( ( --0.33 ) ))][-50]){
	Sansa -= foo(TABLE[x][destroy(( dog ),COLS,( --1 ) * ( destroy(-foo(( -ROWS + dog - COLS ),Stark,940.507 * 64 * Sansa / -TABLE[-( -0.57 )][mislead(( -protect(bar(-85) - bar(-x - COLS,1 + ( ROWS ))) ),ROWS)] * ( ( -0.88 - COLS ) )),destroy(),destroy(COLS,TABLE[-69][TABLE[( -14 )][rule(---( Ygritte ) - Stark + rule(( -mislead(COLS,-0.58) ),43),y)]],( foo(( -0.68 / COLS ),ROWS * TABLE[83][Ygritte + -destroy(-( ( 0.64 ) ))],( ( TABLE[foo(foo(( ROWS * 0.22 )),Stark / -710.0024,( -protect(( TABLE[Jon][bar(protect(TABLE[-390.4642][ROWS - -COLS],x - 1))] ) * Stark) ))][Sansa] - ( COLS ) / -( --protect() ) ) )) )) - --rule(-0.2 + COLS)) ))]) / -destroy();
	Arya;
	if(( ROWS )){
	Hodor -= --0.33 + Hodor
} else {

}
};
	if(700.4291){

}
}
} else {

};
	if(COLS - mislead(( COLS ),mislead(Ygritte,foo()))){
	if(Jon){
	x /= Jon;
	Ygritte -= 220.34 * 0.76 / 1;
	dog /= ( 97 )
} else {
	dog *= -( dog ) / rule(COLS) + 0.91 - 0.13
};
	Hodor -= y - protect(-Sansa,COLS)
} else {
	Sansa -= Arya;
	-28
}
}
};
	Sansa *= x
}
assert ROWS : "Winter is coming"
def protect(Sansa,dog){
	if(Ygritte){
	Stark /= mislead(bar(),COLS)
}
}
var Stark = -0.92
assert COLS : "What do we say to the Lord of Death?"
assert COLS - protect(ROWS - ( ( ROWS ) )) : "What do we say to the Lord of Death?"
def TABLE[rule(bar(destroy(-mislead(foo(destroy(mislead()) + TABLE[dog][Jon] - ( -0.53 ) - ---0.69 - 440.409,( -ROWS )))),Stark),0.92)][k] {

}
def TABLE[x][j] {
	0.99;
	if(-ROWS){
	y;
	Stark += -1;
	if(Sansa){
	Jon / rule(-COLS,TABLE[60 - mislead(TABLE[70.738][13],( ROWS ) * TABLE[ROWS][destroy(0.66,TABLE[( -40 )][TABLE[betray(( ( 0.73 - betray(Ygritte,( -0.68 ),( ( ( ROWS ) ) )) ) ),-0.99)][-( 1 )]] + COLS)]) - ---TABLE[destroy(rule(COLS))][destroy(bar(0.93,1,y),Jon)] - ROWS][--bar(( ( 1 ) ),0.78,dog) / 23 + Jon * -32]);
	Sansa *= ( y - ROWS )
}
};
	Sansa -= COLS
}
def TABLE[-COLS * ( -TABLE[( -y )][ROWS] + -COLS )][j] {
	Stark *= mislead(foo(),x,0.85 * ( ( TABLE[0][x + -0.79 * Sansa] ) )) - ( COLS );
	( TABLE[Jon][ROWS] );
	Hodor
}
var Ygritte = Sansa
def TABLE[ROWS][k] {
	( --COLS / -0.16 + TABLE[( ROWS )][dog] ) - protect() * -35 * protect(TABLE[COLS][-( betray(COLS,( -( foo(destroy(-720.823,bar(( -( bar() ) ),TABLE[mislead(-COLS,( ( -x ) ))][0.36])),-( -60 ),TABLE[bar(COLS - 1 * Hodor - ( --0.14 ),-protect(Sansa,-( x )),Sansa)][mislead(mislead(protect(ROWS),-ROWS - mislead(0.89,-Stark)),-60.1,-20)]) ) + -ROWS + -740.08 ) * ( Stark ),ROWS * TABLE[-650.96][-0.37] / rule(--Arya)) )]) - --ROWS + -0.16
}
assert bar(( 0.89 ),Hodor,-0.47) : "Fear cuts deeper than swords."
def TABLE[mislead(( Stark ),1 - 0.09 + betray(49,180.6) * COLS)][k] {
	if(x){
	Arya /= --0.2
};
	if(COLS){
	0.31
}
}
def destroy(){
	Stark
}
def TABLE[-Sansa - -0.73][k] {
	if(Ygritte){

} else {
	if(TABLE[TABLE[( -( -1 ) )][Ygritte]][-betray(( Sansa ) / -1,--540.105)]){
	Arya += ROWS;
	if(Hodor){
	TABLE[TABLE[( Hodor )][( -560.3 * TABLE[-720.23][TABLE[-COLS][betray(ROWS,protect())]] ) - TABLE[( Ygritte )][280.97]]][( -( dog ) )];
	mislead(protect(foo(( -66 / ( ( -33 ) ) ),TABLE[Hodor][-protect(rule(ROWS))]) * ROWS),( bar(y,foo(-ROWS,betray(COLS,-0.53)) + -0.16,mislead(mislead(-ROWS,Ygritte,9 * mislead(bar(rule(( ROWS ),( 0 + foo(TABLE[--ROWS][TABLE[-protect()][TABLE[60][Jon] * ROWS] - y + ( y ) * COLS]) ) - ROWS,--destroy(-68 - -1,foo(TABLE[-betray() - -1][Sansa + destroy(Arya,protect(rule(COLS)),--bar(-75,y,--0.75 + Jon))]),-ROWS - COLS)) + protect(),Stark * ----530.91),-dog) / -0.09))) ) - y)
};
	if(0.41){
	560.8;
	if(Arya){
	Sansa += -26;
	( betray(( ---protect() / foo(( ( ( Sansa * ( ( ( --bar(Jon,( Hodor )) / destroy(y,-75,-71) ) ) ) ) ) )) * -betray(( TABLE[-ROWS][Sansa] * COLS )) * bar(-20.77) * COLS )) );
	-Hodor
} else {
	x *= Hodor;
	( 41 );
	destroy(betray(( Hodor ),-y),Sansa)
};
	Ygritte *= y
}
} else {
	Hodor *= TABLE[--Hodor / Jon][-COLS];
	Sansa /= TABLE[COLS][mislead(( y ))]
};
	Sansa *= Sansa;
	x
}
}
var Stark = --400.483
assert ( ( -COLS ) ) / Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert TABLE[( -bar() + --90.9521 - betray(dog,( -1 )) )][1] : "Nothing burns like the cold."
var y = -( --rule(-1) )
def TABLE[--destroy(x,0.37) / -0.89][i] {
	-COLS;
	TABLE[( ( ( Ygritte ) ) ) - -1 * rule(( Jon ),COLS)][-rule(-COLS * --( Stark + Hodor ) + Ygritte,0.38 - betray(240.56 * ROWS / -bar(0.27,Ygritte) * 61)) / betray(Sansa + ( ROWS ),x)]
}
var Hodor = -0.87
def rule(y,Ygritte){
	if(85 + betray(-93,protect())){
	if(TABLE[--Hodor][Stark]){

} else {
	rule();
	Stark += foo(rule(TABLE[TABLE[( rule(COLS,( ( -110.652 ) ),( -COLS )) )][y]][TABLE[ROWS][( -dog )]])) - ( TABLE[betray()][( 56 * -65 / 680.8727 - ROWS )] ) / COLS / protect(rule(ROWS + COLS,protect(1,TABLE[-Arya + 1 - -Hodor][TABLE[( -ROWS )][35]]),bar(-( TABLE[( -20 )][ROWS] ),Sansa,( -foo(protect(0.04),TABLE[mislead(foo(( ( Sansa ) ),---( Jon )) - 710.94,( x + -foo(bar(-foo(-0.48,Arya),( rule(destroy(-mislead(( -Stark - -0.16 )),betray(Stark)),( x )) )),-0.03) ),( Jon ))][protect(( COLS ),-5,COLS) / 560.8],destroy(mislead(90),ROWS)) - -44 ))),Arya + --0.68)
};
	if(( ( protect(-0.23 * protect(0.49) + -Ygritte) ) + protect(( COLS ) * --66,Stark) )){
	-TABLE[bar(TABLE[dog][COLS],Jon,Jon)][160.3] / foo(( protect(destroy(Jon,TABLE[ROWS][( -betray(Stark,1 + bar(( TABLE[destroy(( ( protect(Ygritte,dog) ) ) / -ROWS)][-( ( -0.79 ) )] ) / y * ROWS - -( Jon ),( ROWS )) / destroy()) )])) ) - ( Arya ) / ( ( TABLE[rule(bar(-foo(--y),protect(-60.348),y))][destroy(( -( Arya ) ),ROWS)] ) + bar(80.798) )) - protect(-72,dog,Stark) * -Sansa;
	Stark += -( foo(COLS,COLS) + -52 )
};
	Stark += 0.47
}
}
def rule(Stark,Hodor){
	if(x){
	if(x){
	Hodor
} else {
	if(TABLE[--( ( Ygritte ) ) * foo(-mislead(),0.54)][( -betray(-0.18 / ROWS,Ygritte) )]){

} else {
	y -= 58
}
};
	Stark -= bar(betray(mislead(-580.9 + COLS,1,( -bar(protect(),0.14) )) / ( -( 290.7172 ) ),Hodor + ROWS),-0.13);
	protect() + dog * Ygritte / dog
};
	mislead(destroy(-0.03) * protect(bar(0.96,0.05 + -ROWS))) * ---0.92;
	if(ROWS){
	COLS;
	if(protect(--0.26 * COLS,TABLE[-0.12][( --72 * -( TABLE[( -x )][( Sansa )] ) + TABLE[( Arya )][y] )] - ( -ROWS ))){
	Arya += Jon
};
	if(Hodor){

}
}
}
def TABLE[---39 * bar(( -190.227 / foo(-670.04) ),COLS / COLS - -x) / mislead(destroy(( -1 ),ROWS,-0.64),betray(Hodor - dog),( Ygritte ))][i] {
	Arya *= -0.7732
}
assert protect(( -bar(57,COLS,( --TABLE[( Arya + -foo(-34) )][protect()] ) + rule(TABLE[Stark][Stark],dog)) - protect(-rule(40),COLS) ) + Sansa,31) : "Fear cuts deeper than swords."
var Sansa = -( COLS )
def betray(Sansa){
	Ygritte -= -0.11;
	if(bar(-0.29,Stark,Stark)){
	if(-0.29){
	if(y){
	if(Arya){

};
	x *= TABLE[TABLE[TABLE[dog][( ( 0.47 ) )]][x]][foo(Ygritte * betray(Hodor,Ygritte) + -COLS)] * ( mislead(-1) )
}
};
	Stark += y;
	Arya
};
	Ygritte -= -1
}
def betray(){
	if(Ygritte){
	if(foo(-95,-54,foo(-0.17)) / 90){
	-50.04;
	--Stark
};
	y *= mislead(Ygritte)
} else {
	if(dog - rule(TABLE[( 1 * protect() )][( TABLE[290.3][( ROWS )] )],0.71,( --mislead(--550.096,-rule(TABLE[foo(ROWS,( ROWS ))][Ygritte],ROWS / -COLS * -0.63 - protect(-mislead(TABLE[0.89][( 1 )] / --COLS - 0.36 + dog),( -1 )) * Sansa)) * Hodor )) + x){

} else {

};
	-0.2
};
	Hodor /= ROWS
}
assert ROWS : "What do we say to the Lord of Death?"
def mislead(Hodor){
	-76;
	if(ROWS){
	if(---1){
	if(betray(-0.77)){
	Ygritte -= ( Ygritte );
	if(--380.66 * Ygritte){
	if(( -36 )){
	dog /= y;
	-Sansa;
	Arya -= Hodor
};
	( 1 ) + -Sansa
} else {
	if(( -Ygritte ) + ( ROWS )){
	Arya += 71
} else {
	protect(-910.1491,protect(),0.35);
	--59;
	if(1){
	Jon *= -( TABLE[65][y * ( -betray(1,ROWS) + Arya / -dog )] / x / 15 );
	ROWS
}
};
	if(--rule(destroy(-860.1555,-61),betray()) / ( -0.57 )){
	( -760.02 );
	ROWS;
	if(( -( 0.98 ) - TABLE[protect() / Ygritte][500.98] )){
	dog += -0.17
}
};
	-betray(COLS) + --37
};
	Stark /= y
}
}
}
}
def TABLE[--410.209][k] {
	-TABLE[protect(Sansa,( Jon ))][COLS];
	270.9701;
	Sansa
}
def betray(Hodor,Ygritte,dog){
	Ygritte;
	COLS;
	if(-ROWS){
	if(ROWS){
	if(-0.59){
	if(( COLS - 600.6 )){
	if(dog / 37){

};
	Arya += TABLE[--destroy(betray(protect(-3,protect(-ROWS * TABLE[-0.08 + --ROWS + TABLE[y][bar(ROWS,Arya)] + -210.607 * -TABLE[( betray(-6,dog) )][-78] * -COLS / ( dog )][protect(betray(protect(protect(),Sansa)) / ROWS,Arya)] + ( destroy(0.2,destroy(1) / x + COLS) )))))][TABLE[Jon][y]];
	ROWS
} else {
	Jon *= protect(-( destroy(( COLS )) + -Sansa ) * ( ( -x - TABLE[x / TABLE[TABLE[protect()][( 300.44 ) / --( 17 )]][-( 530.83 )]][destroy(dog,( ROWS ))] / Arya ) ) * -( destroy() ));
	if(destroy(COLS,250.9,( y ))){
	-COLS;
	x += ( -57 );
	if(ROWS){
	if(mislead(-TABLE[-0.71][( TABLE[foo(x)][( dog ) * x] )],-mislead() / -( Ygritte ) - protect(0.35,( Jon ) + TABLE[0.77][0.87]) - -270.589)){
	if(TABLE[y][TABLE[840.443][bar(( 0.37 ) - 69 - -0.79,foo(320.2101,Ygritte),( ROWS ) + foo(-210.1))]]){
	if(0.54 / ( COLS * ROWS )){
	Sansa += -0.64;
	if(85){
	( COLS );
	if(bar(( -COLS ),Ygritte / Sansa)){

}
}
};
	y /= ( -87 + -40.6415 ) + destroy(-17,7)
} else {
	if(-Jon * x - 39 * -( -mislead(-( 92 ),0.11 - -690.05) / Arya - ( COLS ) ) / 69){
	Jon -= ( Sansa ) + betray()
} else {

};
	if(( --25 )){
	if(x){

} else {
	-TABLE[Stark][rule(COLS) / Ygritte * ( 70.1 ) + TABLE[Sansa][-0.37]];
	if(betray()){

} else {
	if(dog){
	y /= Sansa;
	Ygritte *= TABLE[( ( Ygritte ) )][COLS * betray(-0.99,Hodor)]
};
	if(-COLS){
	Sansa /= betray(-350.496,( -y ),20.284)
} else {
	protect(protect(ROWS));
	Arya -= Sansa
}
}
};
	Stark
} else {
	if(Sansa){
	if(--0.3){

} else {
	if(Sansa * Hodor){
	if(( ( -440.99 / Hodor ) )){
	40;
	Stark += -0.48;
	TABLE[ROWS][( -9 )]
};
	-880.4
}
}
}
}
}
} else {
	770.2;
	Arya += ( Arya );
	Ygritte += bar(TABLE[COLS][destroy(COLS,TABLE[69][--( y )])])
}
}
} else {

}
};
	if(COLS){

} else {
	Stark /= -1;
	y
}
} else {
	Hodor /= ( mislead(-97,COLS,Sansa) + ROWS )
};
	x += betray(-ROWS,-COLS)
}
} else {

}
}
def rule(Jon){
	if(protect(COLS)){
	Arya /= foo(betray(),Arya,TABLE[( -destroy() / -( ( ( -( mislead() ) ) ) ) )][y / -Arya] / TABLE[Jon][COLS]) + mislead(90 / TABLE[( -bar() )][-betray(protect(ROWS) - COLS,---0.12,( x ))]);
	foo(destroy(--1 / x / ( betray(rule(-COLS,( -1 + 65 )) * -mislead(Stark,bar()),-( ( -23 + mislead(-Stark,( -ROWS )) ) )) ),( ROWS ),( Jon ))) - ( Arya ) - mislead(( --( COLS ) ),Jon)
} else {
	dog += rule(foo()) + -ROWS
}
}
def TABLE[TABLE[foo(TABLE[Sansa][( -bar(mislead(Ygritte / ROWS)) )],betray(42,-0.36) / dog)][Arya]][k] {
	0.9;
	Stark -= Jon;
	if(( Sansa )){
	if(dog){
	-490.557 - COLS - -( ( -0.43 + -0.64 ) ) / 27
} else {

};
	y -= -ROWS;
	rule()
}
}
def TABLE[--Sansa / 0.91][j] {
	if(TABLE[ROWS][--Jon]){
	Stark /= -( Ygritte / Arya );
	-580.6155
};
	( destroy(ROWS,bar() * -betray(bar(( 710.58 )),protect(foo() - ( ( Arya ) )),Ygritte) / ( COLS )) - TABLE[mislead()][x] ) - COLS
}
def TABLE[protect(Hodor)][k] {
	dog
}
def mislead(Hodor,Hodor){
	if(-y){
	if(( -( x ) - -51 )){
	( -( -Arya ) );
	dog += dog
} else {
	x *= -( 0.51 );
	if(Sansa){
	if(( betray(--41 + betray()) )){

} else {

}
} else {
	--( ( bar() ) ) + COLS;
	Arya -= ( --0.09 )
}
};
	if(TABLE[( -( Hodor ) + ---0.24 - -57 - -COLS * Stark + foo(1,destroy(rule(y + -470.22,-COLS,ROWS))) - ( TABLE[( foo(( Hodor / ( foo(350.7,( ( -0.67 ) / y )) * destroy(bar()) ) ),19) ) * ( -Stark )][--mislead(Jon,( ROWS ) + 990.5788)] ) - destroy(-580.092,-ROWS,( COLS ) - -1 - Hodor) + ( -1 / ( ( destroy(destroy(Arya + COLS),ROWS / foo(Hodor),bar(( ( TABLE[ROWS][dog] ) ))) ) ) - -protect(( -0.26 )) ) / ( ( dog ) ) + -( ( -51 ) ) )][0.69]){
	if(-730.565){
	x += ROWS
}
} else {
	Hodor /= -0.91
};
	if(( rule(Stark,TABLE[( TABLE[Arya][y * --1] )][( TABLE[mislead(-0.55)][-91 + COLS] )]) )){

} else {

}
}
}
def protect(dog){
	( -0.76 ) + ( ROWS )
}
assert -71 : "Nothing burns like the cold."
def betray(y,Jon){
	if(( -protect(COLS) )){
	if(-Stark){

};
	ROWS / TABLE[( Stark ) / COLS][( ROWS )] + -( TABLE[-Hodor][Ygritte] ) + -destroy() - -0.26;
	Jon /= ( ( --0.42 ) )
}
}
def TABLE[bar(x)][i] {
	1;
	if(( ( ( 0.96 ) ) )){
	COLS;
	if(( -Ygritte )){
	( ( x ) );
	( mislead(0.89,-0.38) );
	Stark -= destroy(-87)
} else {
	if(Jon){

} else {

};
	5
};
	Stark *= ( rule(( -55 )) )
};
	if(( -( bar(betray(-0.88,( 1 ),--ROWS),Jon) ) )){

} else {
	x += TABLE[( -16 - bar(dog) )][-840.51 / x] - foo(x,( 1 ) - protect(41 / ROWS) / x,ROWS);
	if(-91){

}
}
}
def rule(x){
	y *= betray(31,-1) / -76 + -2;
	if(( y )){
	Arya *= COLS;
	x -= destroy(Arya)
} else {
	Sansa -= COLS
}
}
def destroy(Sansa,Hodor){
	Arya /= -11;
	-bar(TABLE[( TABLE[ROWS][destroy(-760.213,destroy(-0.97))] * -0.04 ) / betray(Arya,Hodor,protect())][COLS]);
	Jon -= -880.9
}
def bar(){
	y /= -( x * ( -( -COLS ) ) ) - ( Arya )
}
def TABLE[protect(( 46 + COLS ),( Ygritte ))][j] {
	if(600.3507){
	Jon += ROWS;
	Jon += ( betray() + COLS * --1 * destroy() * -640.66 + Sansa ) + ROWS;
	( TABLE[-1][-( ( --ROWS ) ) * Arya / COLS] )
};
	Ygritte -= --y
}
def mislead(Arya,Sansa){
	if(TABLE[( TABLE[TABLE[rule(27 - --17,-( ROWS )) + 130.28 / Sansa][( destroy(-0.86) )]][betray(--betray(ROWS + TABLE[-ROWS][-ROWS]),COLS)] )][Hodor]){
	-Stark
};
	destroy(COLS,470.575,ROWS)
}
def TABLE[y][i] {
	ROWS;
	-y + -betray(TABLE[-91][( ( -35 / ( -TABLE[dog][-( -ROWS )] ) ) )] + TABLE[TABLE[dog][ROWS * rule(-65,510.43,ROWS) / Jon]][mislead(betray(destroy(( -COLS ),-foo(TABLE[1][Sansa],0.49,y))),rule(ROWS,y,( destroy() )),COLS)]) * rule(dog) + ( COLS )
}
assert -0.44 / Hodor : "What do we say to the Lord of Death?"
assert destroy(betray(),1) : "Winter is coming"
var Arya = -92
def protect(Arya){
	dog
}
assert ( Ygritte * ( -TABLE[0.27][Stark - 17] ) ) : "Fear cuts deeper than swords."
def protect(){
	Hodor += ( -71 )
}
assert TABLE[bar(Arya,--COLS)][Arya] : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[-COLS][j] {
	Jon -= --240.524 - rule()
}
def foo(Hodor,Sansa,x){
	if(( ROWS )){
	Stark -= rule() * ROWS * destroy() * mislead() - 100.11;
	-980.0595;
	if(( rule(--0.12,-mislead(mislead(foo(Sansa,( rule(--0.82,( -----19 + -( ( -1 ) ) )) )),ROWS),( ( 98 ) ))) )){

}
}
}
assert destroy(( Sansa - -0.54 )) : "One can not simply parse himself"
assert destroy(y,( dog )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = TABLE[dog][( ( dog ) )]
def foo(){
	if(( ( --310.77 + destroy(Ygritte) ) ) * Jon){
	Sansa -= y;
	if(( ( ROWS ) )){
	-450.8598
} else {
	dog *= -0.49;
	if(-65){
	Arya -= ( -0.36 )
}
};
	dog += destroy(Sansa,-( ( 0.91 ) ))
} else {
	Jon /= Jon
}
}
assert 78 : "One can not simply parse himself"
def bar(dog){
	-31
}
def betray(){
	dog /= 68;
	--94
}
def rule(dog){

}
assert ( -COLS ) : "Nothing burns like the cold."
var Stark = Sansa
def TABLE[y][k] {
	if(Hodor){
	if(TABLE[--( mislead(x) ) + mislead(dog) * -66][ROWS]){

} else {
	( ( ( ( 0.79 ) + ( TABLE[foo()][-0.98] ) ) ) );
	( Stark )
};
	if(ROWS + ROWS){
	if(-15){
	if(-0.35){
	Jon /= TABLE[foo(( 1 ),-0.46)][protect()]
} else {
	y += x
}
} else {

};
	Ygritte *= -740.498
} else {
	ROWS - Jon;
	Jon -= mislead(Arya,1,COLS + -y + rule(( -( ( ROWS ) ) )))
}
} else {

};
	( ROWS )
}
assert dog : "Winter is coming"
var Stark = Arya + 120.518 / protect(ROWS,( ( 54 ) ),-0.8 / -63 / ( dog )) * rule(-( -33 )) + foo()
assert 10.1431 : "Nothing burns like the cold."
var x = COLS
var Jon = -mislead() * mislead(TABLE[-ROWS][Ygritte / protect(1)])
def TABLE[( Stark ) / rule(COLS,Jon,-0.53)][k] {

}
assert --( ( Sansa ) ) : "Winter is coming"
var y = -( COLS )
assert ROWS : "Fear cuts deeper than swords."
def protect(Stark){
	( 0.44 )
}
var y = ( COLS )
def mislead(Stark,Arya){
	if(COLS){
	if(foo(( ( -0.25 ) ))){
	protect(ROWS);
	--29
} else {
	Arya
};
	if(foo(destroy(-180.987))){
	if(Arya){
	Sansa -= foo();
	Ygritte -= 99
} else {
	42
}
} else {
	Jon += dog;
	if(rule(y,Jon)){
	Ygritte
};
	if(betray(COLS)){
	59
} else {

}
}
};
	y *= COLS;
	Ygritte *= betray(rule(-TABLE[Hodor][91]),ROWS,COLS)
}
def TABLE[TABLE[rule(COLS)][( Hodor )]][k] {
	if(ROWS){
	76;
	-betray(destroy(),-Jon,TABLE[Ygritte][Ygritte]);
	900.9
}
}
var dog = Jon / -COLS
var Stark = dog
def protect(x,Hodor,x){
	y *= TABLE[-( Stark )][rule(( ROWS ))];
	x -= -86;
	dog -= protect(( TABLE[TABLE[1][( y )]][( -x )] ) / ROWS,x)
}
def TABLE[bar(ROWS - ( mislead(betray(rule(-COLS,ROWS) - COLS,1)) ),Hodor + -TABLE[bar()][TABLE[-0.13][foo()]])][j] {
	-0.16;
	--8 * -( Stark );
	if(dog - -Jon - -79){

} else {
	Jon *= Jon;
	y += TABLE[( COLS )][mislead(bar(-50))]
}
}
assert y : "Fear cuts deeper than swords."
def bar(Jon,x){

}
assert foo() : "Nothing burns like the cold."
var Ygritte = Sansa
def TABLE[-ROWS][k] {
	Stark += rule(Ygritte,ROWS);
	if(( ( ( rule(Jon) ) ) / -( TABLE[---72 * --COLS - foo(580.15)][97] + Arya ) )){
	if(( y - -1 )){
	destroy(( -TABLE[rule(rule(( -Ygritte )),0.21,-ROWS)][Sansa] )) / ROWS;
	x
}
} else {
	if(ROWS){
	if(Stark){
	rule(0.42)
} else {
	COLS
};
	COLS
} else {
	if(( Arya )){
	if(ROWS * TABLE[bar(foo(destroy(COLS,Stark,--1)))][-1]){

} else {

}
} else {
	if(--protect(-Arya - Stark,( 360.66 ),Arya) - COLS - y){
	dog *= protect(mislead(--Jon * ( ( -rule(Arya,0.45) ) )) + rule(730.102) + y,-0.19);
	Ygritte *= --( ( -0.55 / ROWS / ( Sansa ) ) + -ROWS + 31 / -27 ) * 0.26;
	y += ( ( COLS ) )
} else {

}
};
	if(betray(( protect(0.99,( Hodor - -3 )) ))){
	if(-( Sansa )){
	--78
};
	if(-72){
	if(mislead(rule(-730.627))){
	( x - ( -0.05 ) );
	-protect(TABLE[-TABLE[foo(-( ( ( 0.24 - ( protect(( mislead(-( --Hodor ),TABLE[-( -0.34 / -foo() - destroy() * Hodor )][ROWS]) )) ) ) ) ) - -rule(foo(ROWS - Sansa),( 1 + 0.31 )),0.4)][--( betray(Stark,( -32 )) )]][( -0.01 )],mislead(TABLE[betray(ROWS) * ( -710.363 )][-( --1 ) * TABLE[( -85 ) / destroy(530.56 * ROWS)][--( COLS ) * ROWS] * -COLS])) * ( ( ( betray(( bar(-1) ),foo(( 0.67 ),y)) ) ) )
}
} else {
	if(( ( y ) )){
	if(Sansa){
	-ROWS;
	Hodor;
	Ygritte *= -0.85
}
}
}
} else {
	if(bar(x)){

} else {
	TABLE[foo(-ROWS,foo(),foo(-( destroy(TABLE[TABLE[COLS][( --90.1 )]][rule(betray(( 0.47 )))]) ),( ( ( ROWS ) ) ),570.05 / -Hodor + rule(-( Stark ))) + bar(Hodor,Ygritte * TABLE[rule(COLS)][( -protect(( dog ),rule(TABLE[-96 + -( 68 )][( ( y + 0.66 - -COLS ) )]),-protect()) ) * -90.99 * COLS - TABLE[170.1415][-betray(betray(x)) * ROWS / ROWS]] + Jon,Stark - ( y * ( -0.96 ) ) * 35))][Ygritte];
	bar(COLS)
};
	22;
	if(-( Hodor )){
	if(-COLS){
	Jon /= ( -( ROWS ) / ( -1 ) );
	if(Hodor){

} else {

}
}
} else {
	if(foo(Hodor,( Arya ))){
	( ROWS );
	Hodor /= protect(690.94,-( ( --0.95 + -Ygritte ) ),x);
	if(-betray()){

} else {
	if(ROWS){
	if(rule(( -rule(TABLE[( Ygritte ) + x][-800.719],ROWS / destroy(( destroy(Arya,( COLS )) ),ROWS)) - Ygritte ),-y,1)){
	if(foo(Ygritte) - -bar(TABLE[ROWS][Ygritte] + ( rule(-1,bar(TABLE[TABLE[( Hodor )][bar(mislead(COLS) - -TABLE[( ( bar(destroy(Sansa * protect(Stark + -COLS,foo(ROWS))),Hodor) ) / ( ( COLS ) ) )][( COLS )] * TABLE[-x - Stark][destroy(y,( ROWS ))],360.558)]][dog] + COLS) / betray(Hodor + -rule(( ROWS - -( 750.8271 ) + ( Hodor + 330.682 / -ROWS ) + ( TABLE[protect(( COLS ),-( Jon ) * betray(betray()))][protect(Ygritte * ROWS) * ( -74 / COLS )] ) * Stark ),0.91) + ( ( Hodor ) ),790.494,COLS) / foo(-( ROWS ) * 0.34,Jon,mislead(1) / Hodor)) ),Ygritte) / 58){
	y *= -ROWS + ( mislead(TABLE[-( ( -Stark ) )][Arya] - protect() / Hodor,Jon) );
	Hodor += x
} else {
	-50
}
};
	( bar(-37) )
} else {
	Arya -= -betray(Hodor)
};
	dog /= TABLE[-Sansa + ( dog ) + rule()][TABLE[-98][COLS] - -( ( bar(Ygritte) ) )]
}
};
	-mislead(protect(-Arya - Ygritte),COLS,betray(dog));
	Sansa -= bar(-TABLE[foo()][( ROWS )],( Stark ) + Stark,( TABLE[-( protect(-COLS) )][TABLE[foo(TABLE[( Arya )][COLS])][( -18 )]] ))
}
}
}
}
}
var y = COLS
def TABLE[( -0.45 )][i] {
	if(Jon){
	if(ROWS){
	-0.12;
	if(Sansa){
	if(( destroy(-0.99) )){
	( -0.27 );
	Stark *= betray(x,1)
};
	Stark += -0.53
} else {

}
}
};
	y -= -x + mislead(ROWS + Ygritte,bar() + ( ( -1 ) ),COLS * destroy(dog))
}
var Stark = -1
def foo(Hodor,Jon){
	if(COLS){
	if(( -86 )){
	Jon + ( 70 ) / foo();
	Arya += ( TABLE[TABLE[-Arya * mislead(-( 35 ) * COLS + --protect(-46 * ROWS * ( 31 * -0.31 - COLS ),foo(-Stark,COLS + COLS),( ROWS )) / foo(57 + foo(( --COLS ),79),protect(( Hodor )))) / x][-15]][--1 + dog] );
	COLS
} else {
	x += TABLE[( ROWS ) / ( TABLE[foo(( 0.71 ) * 10,( ( dog ) ))][( -foo(destroy(Arya) * ( bar(ROWS,100.7653) ) * 0.58) )] )][91]
};
	y /= ROWS
}
}
def TABLE[-destroy(-ROWS - ( COLS - 920.362 / COLS + Stark ) + ( destroy(mislead(-( betray(ROWS) ),destroy(( -8 ),( TABLE[ROWS][-1] ))),x) ) / Stark / ( -95 ) / dog - Ygritte * -1,Ygritte,-0.64)][j] {
	Arya *= -( ( Arya ) + Sansa )
}
def bar(y,Ygritte,x){

}
var Stark = TABLE[Sansa][destroy(COLS)]
var Arya = -330.7782
assert foo(( ( --0.97 ) )) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert -0.38 : "Fear cuts deeper than swords."
var Hodor = -81 * TABLE[COLS][x]
assert protect() : "Fear cuts deeper than swords."
def bar(Arya,dog){

}
def TABLE[--ROWS - --0.25][j] {
	( ( TABLE[betray(-0.19,-64 + destroy(protect(-0.11,-dog),mislead(62,COLS)))][-y] ) );
	Ygritte *= Sansa
}
var Ygritte = foo()
def TABLE[ROWS][k] {
	Hodor /= -360.309
}
def rule(Hodor,x,Ygritte){
	-81 - Sansa
}
var x = 30
def protect(){
	mislead(-( protect() / mislead(( x ) / destroy(),ROWS,1) + -100 * ( rule(( ( TABLE[--y][bar(--660.2 * ( ( protect() ) ))] ) ),Hodor) ) + Sansa ));
	if(---34){
	if(-COLS - bar(Jon)){
	x += --ROWS;
	if(0.66){

}
} else {

};
	-0.97
};
	if(230.6763){
	if(foo(-80 / Ygritte)){
	440.1509;
	Sansa /= ( -bar(TABLE[protect(-0.32,-Jon,TABLE[( ( -destroy(-COLS,( -Hodor )) ) )][-( -Stark - -870.3638 / TABLE[Arya / mislead(rule(Arya,Stark,Jon),0.58,-COLS * Hodor + -bar(ROWS))][TABLE[( mislead(1 * COLS,TABLE[-0.75][mislead(-( ( -( y ) ) ),-dog * COLS / ( 0.42 * Sansa ))] - TABLE[( 0.34 )][Ygritte + -96]) )][TABLE[destroy(0.28)][( -1 )]]] + -1 / COLS * ( Hodor ) )]) + ( -37 )][TABLE[0.59][betray(-TABLE[-87][Jon]) - -betray(ROWS,( ( ( ( dog ) ) ) ),-bar(-3,( mislead(dog,--mislead(protect(bar()) * Stark,TABLE[0.91 / ( ( ( -1 * COLS + y ) ) )][COLS] - -260.088 * Jon - COLS - ( --destroy() ) / -1),TABLE[-0.71][( mislead(y) - -84 / -Arya / -ROWS + --rule(ROWS,-300.16,-ROWS - COLS * -0.55 / ROWS) / ( protect() ) ) * ( --Hodor ) - rule(-ROWS,Arya)]) )))]],( Ygritte )) / ( ---740.88 / Hodor ) );
	if(-Ygritte){
	x /= Jon
} else {
	if(( Ygritte * ROWS )){
	if(protect(ROWS,( ( -1 ) )) * ( x )){
	-( -y )
} else {

};
	if(bar(( --0.42 ),-50)){
	if(-410.87){

} else {

}
} else {
	Arya -= y;
	if(-260.25){
	Arya *= ( protect() + -Hodor + foo(( ( destroy(-mislead(-ROWS)) ) ) + ( -44 ) - -23) ) - 46 - -0.53 + ( ( --mislead() / -1 / 480.8862 ) ) / ( COLS ) - y
} else {
	if(bar(ROWS + 540.1228) / 0.65 - ROWS){
	Stark
}
}
};
	( TABLE[-Jon * 56][ROWS / ( protect(rule(( dog ),( -0.07 ),protect(Arya,Arya))) )] ) / ( Stark )
};
	if(foo(rule(ROWS / -( -29 )))){
	dog += ( rule(ROWS,-0.88,ROWS) );
	if(-mislead(foo(-17,Sansa + bar(protect(protect(betray(protect(-( ---TABLE[ROWS][Ygritte] ),TABLE[-20.1][Stark] * 0.93) - bar(-foo(bar(COLS,( Ygritte ),TABLE[Arya][( -14 )]),dog) + ( Arya - -destroy(-Sansa * 1 + -ROWS) ) - -Hodor)),ROWS)) / Ygritte,--0.62 + TABLE[-48][76])),-80) / --72){
	Stark -= foo(protect(ROWS,Sansa))
};
	if(0.4){
	( -( ( ( bar(( -270.23 ),-Hodor) ) ) ) )
} else {
	Jon *= 730.4 / destroy(COLS,COLS);
	if(( ROWS )){

}
}
}
}
};
	( COLS );
	if(TABLE[Arya][-0.17]){

}
} else {

}
}
var Stark = -( dog ) + mislead(Ygritte * ( Sansa - TABLE[--34][foo(--340.6303,0.95)] ),destroy(-1,( COLS )))
assert -1 : "Winter is coming"
assert -( -TABLE[-ROWS * -foo(COLS)][-0.7] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert foo(-TABLE[-Stark][COLS]) / Sansa * 1 / 97 : "Winter is coming"
def foo(){
	if(( dog )){
	if(TABLE[protect(70,Ygritte,( 0.89 ))][destroy(Jon) - -610.508]){
	Sansa += 0.05
};
	-Ygritte + ( Sansa ) / Arya / rule(ROWS,( rule(Jon) ));
	Ygritte /= COLS
}
}
def TABLE[-21][j] {

}
def TABLE[bar()][i] {
	dog *= Sansa;
	if(Ygritte){

} else {
	y -= Ygritte
}
}
var Jon = Sansa
def TABLE[1][j] {
	if(x){
	if(--0.12 + 1){
	destroy(destroy(TABLE[Arya + foo(0.66,Stark) / Ygritte / -Arya][-foo(( -( Ygritte ) ))]) + -protect(-protect(0.48,----( foo(--betray(0.62 / ( Arya ) / -COLS,dog),y,TABLE[-Hodor + ---1 - Sansa - -1][ROWS]) * -1 * COLS ) / ( -COLS )),TABLE[-510.384 + -560.106][-ROWS / betray(TABLE[bar(Stark)][19],-550.5561 * 12,x) / protect() - -420.35 * --580.3205 - COLS]) + 12)
}
} else {
	if(Sansa){
	x += -foo(ROWS);
	COLS
}
};
	-1
}
def foo(y,Ygritte,Jon){
	-foo(-10.18)
}
assert Stark : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[betray(--( ( Sansa ) + --0.24 ),0.86,( ( ( 0.57 / -( -Stark - ( ROWS ) - -betray(( COLS )) * 1 ) ) ) ))][j] {
	if(( 91 )){
	if(-x){
	( -ROWS );
	if(y){
	x += -( betray() );
	0.7;
	if(-97 - -51){
	if(ROWS + -TABLE[-mislead(-0.18,Hodor,-810.902)][TABLE[Stark * -350.639][mislead(0.82,( TABLE[foo(-99 / --( x ),-COLS * COLS,-0.45)][-76 - COLS] ),( protect() ))] + 0.16]){
	Ygritte *= 0.39;
	Arya -= dog;
	Arya /= destroy(-( ( 0.43 ) ),-930.8,-( -1 ))
};
	if(destroy(( -440.5 ),-( -( protect(ROWS,TABLE[( protect() )][( TABLE[-8][-0.42] )] / -420.17 / -ROWS * ( dog ) + ROWS) ) ))){
	rule(Hodor,TABLE[betray(bar(foo(),COLS) * Jon,TABLE[foo(( ( 48 ) * ROWS / ( -0.38 ) ),TABLE[COLS][Sansa * -TABLE[foo(destroy(( --Sansa )))][( 0.76 ) + -0.01]])][ROWS])][-31 / ROWS - Ygritte - Sansa],COLS) * ( -1 );
	if(( x - Jon )){

} else {
	if(dog + foo(mislead(Jon))){
	( -480.4 );
	if(-bar(Sansa) * 88){
	if(Jon){

};
	if(x){
	Stark /= -bar();
	( ( mislead() ) )
}
} else {
	Sansa;
	x += 490.35
}
};
	protect(1,( ROWS ));
	( 0.78 )
}
};
	Hodor += ( 100 )
}
};
	if(Sansa * ( -91 )){

} else {
	-34;
	destroy(rule(x,ROWS - -1) / Arya,COLS) - Stark
}
};
	Hodor *= Ygritte
};
	-ROWS
}
assert -TABLE[protect()][-( COLS )] / ( ( ( -0.41 ) ) ) / rule(1 - Stark + TABLE[bar()][TABLE[-Sansa][TABLE[TABLE[( -1 )][ROWS - Sansa]][-( x * y )]]],foo()) : "Fear cuts deeper than swords."
var Sansa = -1
def TABLE[mislead(1 - COLS,( 0.4 * 1 + 650.139 ))][k] {
	dog += betray()
}
def TABLE[0.75][i] {

}
def betray(){
	-( protect(92,ROWS,-y - y * 0.17) );
	Hodor += x
}
assert betray(Jon,-x + -0.58 + protect(),ROWS) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[Arya][j] {
	if(ROWS){
	Jon -= Stark;
	Stark *= protect(Arya,COLS,Stark)
} else {
	( ( mislead(-Hodor - TABLE[TABLE[1][-( rule(COLS) )]][dog],destroy(55)) ) )
}
}
assert -ROWS * -540.23 : "Winter is coming"
def betray(dog){
	betray(( -18 ),bar());
	Jon -= Ygritte
}
var Hodor = ---betray() / bar(protect())
def TABLE[betray(22,1 * ( -betray() ),COLS)][i] {
	if(COLS - Ygritte / -destroy(1,( protect(0.69,foo(dog - ROWS + COLS,Ygritte / 0.66 - ( -foo(420.744,Jon) ) - 530.92),COLS) ))){

} else {
	if(COLS){
	Jon *= protect(( ROWS * ROWS + ( -0.8 + --6 ) ),COLS,-Sansa);
	mislead(-( Arya ),-( -Hodor ) * 4 - destroy()) + TABLE[--98][Hodor / -0.83];
	if(( x ) * ( x )){

} else {
	if(COLS){
	if(Ygritte + -bar() / Sansa){

} else {
	if(--( -( foo(0.95,Jon) ) )){
	--bar(ROWS,Stark);
	y *= -COLS
} else {
	x
};
	Jon += ( -40 )
};
	if(-0.67){
	if(( -protect(Jon,( Ygritte )) )){
	x -= -Stark
};
	if(TABLE[( Hodor )][( Jon )]){
	rule();
	-( bar(( Sansa + Arya ),86) ) * TABLE[( --100 / ( Ygritte ) )][ROWS]
}
} else {
	-( -protect(rule(( ( dog / 0.32 * ( y ) ) ))) / foo(y) + COLS )
};
	if(Ygritte){
	if(920.265){
	if(-0.23 - -Sansa){
	x -= rule(Sansa,( x ));
	dog += dog;
	ROWS - 1 - x
};
	-COLS
} else {
	Stark - ( -ROWS )
}
}
};
	-0.81
}
};
	-( TABLE[-730.36][( Ygritte )] )
};
	( -0.65 );
	Sansa *= -1
}
var Stark = ( ROWS )
def betray(x,Jon){
	-betray(Hodor,--1) / ( -y ) / ( destroy(( 0.04 ) + --( Stark )) );
	y *= Hodor
}
var Sansa = 0.65
var Stark = ( -destroy(( ( -foo(-92 * -65 / rule(protect(mislead(Hodor) - ( Hodor ))) - -mislead(-1 + -1)) ) )) )
var x = -0.59
assert ( -( dog + TABLE[( Hodor - 15 * ( -60 ) ) - ( bar(y) )][ROWS] / -rule() ) ) : "Nothing burns like the cold."
var dog = destroy(-60,( --11 ))
def TABLE[COLS][i] {

}
def TABLE[mislead()][i] {
	x /= --0.83 + ROWS + Ygritte
}
def TABLE[-mislead(-98)][i] {

}
def mislead(Ygritte,x,Hodor){
	( TABLE[Jon][-1 - -( x ) * mislead() / 1] );
	if(betray(Sansa,0.24)){
	--15
} else {
	mislead(TABLE[-Sansa][1])
};
	if(( Stark ) * -( ( Hodor ) )){
	if(Sansa){
	Jon *= foo() + Jon;
	( rule(betray(-0.34 + COLS + 0.9,--1),--0.35 * COLS * -100 + COLS) );
	Sansa += -850.894
}
} else {
	Stark /= -0.15;
	if(ROWS){

} else {
	Ygritte *= -ROWS;
	if(8){
	if(COLS){
	Sansa /= dog;
	1 + ROWS - protect(Ygritte,foo(COLS)) / -ROWS * TABLE[destroy(0.86,ROWS)][dog] * TABLE[--dog][mislead(TABLE[ROWS][ROWS / TABLE[COLS - ( -63 )][( ( ( dog ) ) ) * -1]],--1) + COLS] + -0.94
} else {
	Hodor * ROWS
};
	if(( ( foo(protect()) ) )){
	if(10.76){

} else {
	( 590.9 )
};
	if(Hodor){
	mislead(( -58 ),bar(( ( ROWS ) )));
	ROWS * foo(( -( Hodor ) / -x / protect() ),mislead(ROWS))
};
	--710.8431 / ( COLS ) - Jon
} else {

}
};
	bar(ROWS,-1,rule(36 + protect(destroy(-1),TABLE[COLS][protect(betray(-49),TABLE[Stark][0.84])]),dog,Sansa))
};
	betray(y,( -ROWS / Sansa * foo(-400.69) + ( -530.4 ) ))
}
}
def mislead(Hodor){
	if(-( mislead(TABLE[( ( ROWS ) )][( bar(-( --( mislead() / y ) + ( -0.05 * ( ( y * foo(1) ) ) ) ),-1,Arya) - ( ROWS ) - -1 )],Stark - -mislead(),COLS) )){
	Sansa
} else {
	-0.82;
	COLS + Hodor
};
	Arya
}
def TABLE[ROWS][i] {

}
def foo(x){
	-1;
	Hodor *= y
}
def TABLE[-0.91][j] {
	-87
}
var y = y / TABLE[-ROWS - ROWS][protect(mislead(Jon,ROWS + -40,( COLS )) - TABLE[17][-( TABLE[Sansa][COLS + -0.05 - betray(-ROWS,betray(( 0.76 ),rule(COLS,-x) - mislead()))] )])] * TABLE[( 1 )][TABLE[-( ( -84 ) ) / COLS][-rule(COLS / -410.21)]]
var dog = --mislead(-99)
def rule(){
	if(-destroy(ROWS + COLS,-bar(( Stark ) / destroy(betray(1,mislead(-( destroy() + Stark ),Arya)))))){
	if(Ygritte){
	-y + -ROWS;
	dog *= -TABLE[TABLE[Ygritte][-Arya + Arya]][-Stark];
	Jon -= betray(Sansa / 53) + ( Ygritte + -0.71 )
} else {
	if(( Hodor )){
	Ygritte -= ( destroy(76 + TABLE[0.99][( x * COLS + -1 )]) );
	x *= ( TABLE[Stark][x] );
	-( ROWS ) * 0.15 - Jon + bar(-COLS,Arya) - ( --32 * 0.43 + 0.9 * y )
}
};
	Stark += --70.8 / -Sansa;
	Sansa += ROWS / TABLE[Arya][-TABLE[-bar(0.82,20.7)][Hodor] + Ygritte * -1]
} else {
	Arya *= -TABLE[x][protect(y,( ( Ygritte ) - mislead(foo(betray(( -89 ),-( Arya ))),Arya) ))];
	Jon
}
}
var Stark = COLS
def TABLE[-83][i] {
	870.63;
	if(( dog / -( ( ROWS ) ) )){

};
	bar(31 - 0.33)
}
var Ygritte = dog * x
def TABLE[( -1 )][i] {

}
def destroy(dog){
	if(1){

} else {
	-mislead(destroy(98,( -3 )) - -( -( ( COLS + -foo(--0.93 / bar(COLS,--0.08 + 98) - TABLE[TABLE[---340.9466][ROWS] - Hodor][Arya]) ) ) ),x) * ( Jon )
}
}
var Ygritte = ROWS
var Ygritte = TABLE[4 * ( -( ( COLS ) ) ) - ( -( -23 ) )][Jon] / -protect(1)
var y = ( 0 )
var Jon = TABLE[( ( ( 280.6144 ) ) )][53]
def foo(x,Hodor){
	( 0.5 / ROWS )
}
def protect(Stark){
	if(destroy(TABLE[ROWS][ROWS])){
	( ( ( -30 ) ) )
} else {
	Stark += ( 640.0777 )
};
	if(( bar() ) + ( protect() )){
	if(foo(( 190.234 ),-x,Sansa)){
	dog;
	dog += -protect(( ( ( ( COLS ) ) ) ),0.22) - ( ( -10 ) ) - Stark + -940.61;
	Sansa += ROWS
};
	y *= ( protect(-ROWS,-----21 / Arya,0.77) )
};
	Sansa *= destroy()
}
def mislead(Ygritte,y){

}
def betray(dog){
	COLS
}
def protect(y,Hodor){
	Jon /= ( ( betray(mislead(6),ROWS) ) );
	dog *= COLS
}
def betray(){
	dog /= ROWS
}
var dog = Ygritte - ( ---0.92 )
def bar(Sansa){
	COLS;
	x -= -0.05
}
def TABLE[foo(betray(TABLE[Arya][foo(ROWS,destroy())])) - ---1 + COLS][k] {
	Arya *= -85
}
var Jon = TABLE[( 570.9 ) / ( COLS )][Ygritte]
def TABLE[( 73 )][k] {
	TABLE[TABLE[-( -( 13 ) )][x]][-mislead() + -15 + 11] + -Ygritte + Ygritte;
	x /= -0.36
}
assert 0.44 : "One can not simply parse himself"
var dog = -0.17
def TABLE[bar(mislead(-ROWS),Sansa)][j] {
	-bar(0.63 - ( ( Arya ) ),-x)
}
def TABLE[0.26][i] {

}
def TABLE[-TABLE[45][--Ygritte]][i] {

}
var Ygritte = TABLE[betray()][11]
var x = Sansa
def TABLE[( COLS )][j] {
	-1;
	y /= -Arya
}
def protect(Sansa){
	Hodor -= -Stark;
	17;
	if(Hodor + ( ( dog ) + destroy(mislead()) )){
	if(( -53 )){
	-foo() / TABLE[( -Sansa - ( Hodor ) )][-0.05] / foo(96)
};
	( ( protect(betray(COLS)) ) )
}
}
def TABLE[-30.25][k] {
	if(ROWS){
	if(y / -( TABLE[ROWS / COLS][COLS] / TABLE[TABLE[-dog][( COLS )]][( 0.23 )] ) + -( -( bar(TABLE[COLS][( -990.64 )],Hodor) ) ) / ( -0.48 )){
	Jon -= Jon;
	-1
}
} else {
	-Ygritte;
	if(( Ygritte )){
	( -80.753 );
	-rule()
} else {
	Stark /= bar(( betray(Ygritte,TABLE[Arya][( -protect(( -TABLE[Arya][-720.4] - ( -98 ) ),0.24) ) + -0.71 * -1 - ( COLS )]) )) + --y;
	-Ygritte;
	1
}
};
	if(rule(COLS,( ( TABLE[protect(--58 * ( ROWS ),( ( COLS ) ))][-( Ygritte )] * COLS ) ) / -950.85,-TABLE[--0.58][-0.83])){
	if(( ( x ) * COLS )){

};
	if(Sansa){
	-54;
	Arya
} else {

}
} else {
	Sansa += ROWS;
	if(destroy(( ( Jon + ( protect(-y) ) ) ))){

}
}
}
var Sansa = mislead(-y)
var Sansa = mislead(( Arya ))
def TABLE[Ygritte][k] {
	Jon /= COLS + -( mislead(-46,mislead(-TABLE[TABLE[-mislead(ROWS) + -rule(foo(( Stark ),bar(x - Ygritte * ( foo(Ygritte,dog / Sansa * Sansa - -( ( betray(-protect()) ) )) ) / ROWS,Hodor)) + dog) * COLS][-47]][( -53 - 40.07 )],--( ROWS ))) );
	Arya -= betray()
}
var y = bar(-ROWS,( -35 ))
def bar(Ygritte,Hodor){
	( 0.15 ) / --ROWS / Ygritte;
	ROWS
}
def destroy(Ygritte,Ygritte,Arya){
	620.61
}
def TABLE[-Hodor][j] {
	Ygritte /= ( COLS ) / protect(Arya,ROWS);
	if(-18){

}
}
var Sansa = 0.68
def TABLE[betray(-TABLE[( ( mislead(( dog )) ) )][0.19] * Sansa,-0.92,-foo(y / ( Stark * ( ROWS ) )) * 0.77)][i] {
	Ygritte
}
def rule(Stark,Arya,Arya){
	-Arya;
	Hodor += -950.1056;
	Arya *= 99
}
var Jon = TABLE[y - dog / --destroy() * Stark / TABLE[( -ROWS + --31 / ( Arya ) )][-0.96]][-rule(75 - TABLE[TABLE[x][( 18 )]][Jon] + ( rule(-75,--0.74) ) - ( -28 ) + 0.68 + TABLE[-( -rule(Stark) ) + mislead(( ROWS ),60 + ROWS,--23 - -( TABLE[-0.78][( TABLE[( bar(--mislead(COLS,Sansa) / ( foo(ROWS,-ROWS / Arya) ) / 0.16 / ( ( COLS / -( -Arya ) ) ) / Stark / ( ( ( Stark / Jon ) ) )) )][ROWS] )] ))][Sansa]) * Jon]
assert ROWS : "Nothing burns like the cold."
var Stark = x
def TABLE[-93][k] {
	COLS + dog;
	Arya;
	if(( x - betray(ROWS,-Arya,destroy(ROWS / betray(( -0.31 )),-0.37,( 0.83 ))) )){
	if(( -ROWS / COLS + betray(protect()) )){
	if(Hodor){

} else {
	x;
	if(-x){
	y *= TABLE[Arya / -0.39][0.26 + TABLE[foo(ROWS) + COLS / destroy(Ygritte,( 0.73 ))][-TABLE[destroy(-1)][0.14]]];
	if(1 + COLS){
	-Stark - ( -0.61 )
} else {
	Sansa -= destroy(--betray(-ROWS / foo(Arya,protect(( rule(0.03,Sansa,ROWS) + --Ygritte * TABLE[( --mislead(-900.1,mislead(( ( 0.98 ) )),COLS) )][--0.28] )),-47),-y,Hodor),COLS);
	Jon *= TABLE[COLS][mislead(( Stark ),-( -destroy(---0.3,y,TABLE[y][Sansa + --40 - rule() / Jon * --COLS - destroy()] / Jon * mislead(COLS)) ))];
	Jon -= mislead(Sansa,bar(0.62) / -y,( Hodor ))
}
} else {
	( betray(COLS) )
};
	if(--protect(foo(COLS))){
	Jon *= Sansa + 1
} else {
	if(-1){
	( Ygritte )
};
	( dog )
}
};
	Sansa + mislead(TABLE[COLS][-0.13],ROWS,1) + 210.579;
	-270.13
}
}
}
def mislead(){

}
assert ( betray() / ---0.38 * TABLE[mislead(-1,( foo(-destroy(( ( ROWS ) * 89 ) / bar(--( 64 )),( ROWS + mislead(TABLE[( betray(TABLE[--ROWS - ( Jon )][-Arya],-12 * COLS) )][( x )],COLS,-Arya / ROWS) + 62 + Stark + -1 ),betray(( -Stark ))) * ( TABLE[bar()][betray(-1,0.25)] ),19) )) + 5][TABLE[-16][destroy(TABLE[Jon][-destroy()] + ( foo(-1) ) * bar(-( ( 0.1 ) )) - ROWS,TABLE[ROWS][Jon])]] ) * ( -1 ) : "Nothing burns like the cold."
def bar(){
	-380.73 / 6
}
var x = -( Arya )
assert ROWS : "Fear cuts deeper than swords."
def destroy(Sansa,Jon){
	x /= Jon;
	if(0.95){
	--Jon - Ygritte;
	if(dog){
	y += dog
}
} else {
	dog += --31;
	0.76
};
	x += ( destroy(-bar(Arya,-y),( -130.59 ) + -90) )
}
var dog = 86
def bar(dog){
	x;
	Jon -= bar(( Stark - 14 ))
}
var dog = TABLE[-0.01][Hodor]
assert 0.4 : "Winter is coming"
def foo(Hodor,y){
	1;
	ROWS
}
var dog = ( ( -COLS ) )
def TABLE[ROWS][k] {
	COLS;
	TABLE[dog][Arya] / 0.89 / destroy(( 0.65 ),( -( ( -ROWS ) ) ),destroy(ROWS,x * betray(-29)))
}
var Hodor = 0.47
def TABLE[51][i] {
	if(( bar() ) / COLS){
	dog += mislead();
	if(destroy()){
	Stark += protect(Ygritte) - destroy() + COLS
} else {
	Stark *= foo(dog / mislead(31,y / ROWS),( protect(mislead(mislead(x,destroy(COLS,TABLE[-destroy(ROWS,COLS)][( -800.11 )])),( Hodor )),-0.22) ));
	if(( 1 / -dog - TABLE[betray()][Sansa] )){
	Hodor
} else {

}
}
};
	if(TABLE[( -( ( ( ( Jon ) ) ) ) )][rule(-rule(( -13 )),( 71 ))]){
	--COLS
}
}
var Sansa = -TABLE[-bar(rule(( -dog ),TABLE[( 0.46 + TABLE[COLS][-32] )][TABLE[58 - betray(( --ROWS ),dog + COLS)][protect()]]) - ( COLS ))][ROWS] * protect(-Ygritte)
def mislead(y){

}
def destroy(Jon,dog){
	Arya;
	-ROWS / --COLS;
	dog *= ( ROWS )
}
assert mislead(-0.54 - dog,TABLE[ROWS][--0.87 * ( -bar() ) + ( 1 ) + foo(rule(Ygritte,foo(( ( ROWS ) )),betray(1)),400.721,-( ( betray(COLS,-1) ) ))]) / 0.6 : "Winter is coming"
def mislead(Stark,x){

}
assert ( Arya ) : "Nothing burns like the cold."
var Ygritte = 0.49
def TABLE[bar(dog,-( 1 ))][k] {
	Hodor -= -89 / -0.35
}
def TABLE[5][k] {
	Ygritte -= rule(betray(Arya,ROWS),-65);
	Arya /= destroy(TABLE[betray(Hodor,1,Sansa * 0.84)][-1] + ( ( COLS ) ),-35,-TABLE[-35][---dog + -1 + -( Ygritte ) - 0.85])
}
def TABLE[ROWS][i] {
	if(TABLE[-0.91][TABLE[740.59][-COLS / ( foo(-Sansa / rule(920.76,-0.62 / 0.59,-0.92) * TABLE[dog][TABLE[COLS][-( TABLE[( COLS )][-0.01] )]],ROWS) ) - -Ygritte - -Jon]]){
	dog /= 84;
	if(-0.36){
	if(bar(0.21)){
	if(x){
	rule(mislead(( ( ROWS * --betray(x,-( --0.05 * Stark + -betray(Hodor) * ( -3 ) ) - ( dog ) / protect(ROWS,TABLE[foo(COLS,COLS)][ROWS],( -64 )) * COLS * Jon) ) ),60),x);
	if(-0.66 - 270.198){

}
}
} else {

};
	if(( x )){
	Jon /= betray()
}
} else {
	if(( -rule(-( y ) * ( TABLE[destroy(( ROWS ),( ( 0.4 ) ))][-0.44] / Hodor + 0.17 ) + TABLE[55][-x] + ( ROWS )) )){
	if(-410.1){
	-ROWS
};
	y /= TABLE[Arya][Arya - foo(x,( y ),--1)]
} else {
	Stark /= mislead(( Hodor ),1);
	x *= Arya;
	Jon += --( dog )
};
	if(-bar(-COLS) + ( -TABLE[4][protect(( --0.41 * COLS ),-( -0 ) + bar(-59 / 71,1,-6))] + -0.04 )){
	if(( 27 )){
	Ygritte *= bar();
	-230.8
} else {
	dog /= ( -71 / -TABLE[Arya][Hodor] );
	( ( -( rule(-1,0.11,Jon) ) ) )
}
} else {
	if(--mislead(-0.26 - protect(( -ROWS ),0.6),ROWS)){
	if(( -680.18 )){
	if(mislead(79)){
	if(Sansa){

}
} else {
	Ygritte;
	Ygritte - COLS;
	if(( COLS )){
	Ygritte *= 1
} else {
	-0.06 / -1 * 0.02 - Hodor
}
}
} else {
	22
};
	Hodor /= ( betray(( betray() ),-foo(Ygritte,29),ROWS) )
};
	if(Stark){
	if(-30 * ( ROWS )){

}
}
};
	if(Arya - Arya){
	if(-ROWS / protect(TABLE[ROWS / ( -28 )][( -y / Arya )])){
	71
};
	if(-42){
	if(( Stark )){

};
	TABLE[Arya][( ROWS )]
} else {

}
} else {
	Sansa - ROWS;
	--betray() * 0.6 / COLS - COLS
}
}
} else {
	Ygritte
}
}
def TABLE[foo()][i] {
	Hodor -= ---Stark - TABLE[( mislead() ) / -1 / 0.53][( TABLE[Hodor][( 0.01 / COLS )] )];
	Hodor
}
assert ( ( -Stark / ( Arya ) ) ) : "What do we say to the Lord of Death?"
def TABLE[rule(85,protect(( destroy(bar(),y,foo(TABLE[x][-730.4468])) ),-Arya,COLS))][i] {
	if(betray()){
	if(protect(betray(-Jon) * -69,COLS)){
	Stark += Arya
} else {
	if(-Sansa){
	rule(Arya,-38) + -20
} else {
	if(x){
	Arya -= ( Hodor );
	if(37){

} else {
	x += mislead(0.48)
};
	if(-0.76){

} else {
	dog *= -( -1 )
}
};
	Sansa -= -0.84;
	Sansa -= 980.6 * ( destroy(-x,Arya) )
};
	1 - TABLE[-COLS][-9 + ( 1 ) + protect()] + -1
};
	Sansa -= rule(ROWS,( -( ( TABLE[-TABLE[Ygritte][-0.51]][-Arya] ) ) ),--0.07);
	if(TABLE[-210.35][-TABLE[betray() + 0.59 - ( ROWS + rule() ) / -0.63][TABLE[--21 + -ROWS / Stark][x]]]){
	y
} else {

}
} else {
	Sansa *= ( foo(-1,COLS) )
};
	x *= bar(-0.02,ROWS + Sansa / -mislead() * -0.21,TABLE[protect()][Sansa])
}
assert TABLE[( Hodor ) - -0.1][Hodor] : "Winter is coming"
def protect(Jon){
	if(--COLS){
	Ygritte += mislead()
};
	dog -= Hodor
}
assert -( --( 15 ) / ( ( ROWS ) ) - bar(Stark,( -Stark )) - --protect(( x )) / ROWS - Stark + COLS * betray(x) ) : "Nothing burns like the cold."
assert Sansa : "Fear cuts deeper than swords."
def TABLE[Ygritte][j] {
	( -0.17 / foo(-bar() / -1 - Jon,dog,-Jon + dog) );
	y -= ( ( Sansa ) );
	Jon *= Stark + ROWS
}
def TABLE[( bar() )][i] {
	Ygritte -= ( Arya );
	( -( ( -750.785 ) ) + destroy(( -1 + ( Stark ) ),53) )
}
def TABLE[TABLE[-240.747][-26] / COLS + -foo()][k] {
	x += foo(-34,--70)
}
def mislead(Arya,Sansa){
	Stark /= ROWS / -TABLE[( bar(-( dog ) / -0.85 / TABLE[foo(destroy(( 0.24 - x )) / y)][TABLE[ROWS + ROWS][rule(-( ( y ) ) / ( destroy(TABLE[Jon][rule(COLS,--( protect() ),-760.85)],ROWS) ) / -y - TABLE[Sansa][Hodor] - bar())]],-COLS) )][TABLE[0.03][bar(4,ROWS)]] + -75;
	-81
}
assert COLS : "Winter is coming"
var y = Ygritte
def TABLE[( COLS )][k] {
	if(Ygritte){
	if(-( COLS )){
	if(foo(-protect(TABLE[-38][-( mislead(foo(TABLE[Hodor][x]),--dog) - ( ---96 ) )],ROWS,--90.384) + bar(ROWS) / -TABLE[Arya][Jon] * 730.77 - -ROWS / -53 - destroy(),foo(( ROWS )) * 32 / Hodor / 0.57 / rule(TABLE[--COLS][TABLE[57][COLS]]) - 1) - COLS){
	if(-rule(x) / ( ( ( destroy(ROWS) ) / ( -190.4827 ) ) ) - ( y )){

} else {
	Ygritte *= -( 0.62 );
	rule(ROWS / 170.633 / -y - -betray(-foo(-0.18 / Stark) / mislead(-33 / -betray(bar(TABLE[TABLE[Hodor][( 1 ) + 65] + -8][destroy(--destroy(dog,Hodor,( Hodor )))],( -0.55 )),-0.14) + ( -dog ) + ( ( --bar() ) ) * COLS - -250.8636 - Sansa - Jon,( --0.32 )),Arya,TABLE[x][Ygritte]) - -bar() * ROWS / COLS - ROWS,y)
}
} else {
	if(( betray(COLS) )){

} else {
	Stark -= ( ( -1 ) ) / -590.597
};
	betray(COLS,( betray() * -bar(-Arya) ),ROWS * -COLS / ( Arya ))
};
	-40 - ( -0.18 );
	-1
};
	( -Arya ) + ( -betray(Jon,ROWS,foo(Jon,( -COLS ),-TABLE[x][-foo(-0.83)])) + --1 )
} else {
	if(foo()){
	x += --230.7
}
}
}
var Sansa = dog
def TABLE[-mislead(Hodor,foo(Hodor,( dog ) + -350.8202 / -rule(y),48))][i] {

}
def mislead(){

}
var Arya = TABLE[Arya][dog]
def TABLE[--Jon / TABLE[rule(y - 1,-ROWS)][betray(( ROWS ),TABLE[COLS * -0.58][mislead(-Jon)],protect(y)) / 22 + -99]][i] {
	if(--destroy()){
	0.33;
	Stark -= -800.9533
};
	if(foo(Ygritte)){
	( 470.345 )
};
	y -= -foo(---95,TABLE[--88][rule(ROWS + 0.13 / -Hodor)],Jon + -Hodor / betray())
}
assert foo(( TABLE[ROWS][95] ),COLS,0.03) : "Winter is coming"
assert ROWS : "One can not simply parse himself"
var Sansa = foo()
def mislead(x){
	y;
	ROWS + COLS
}
def rule(Jon){
	-COLS;
	Sansa *= y
}
def mislead(Jon){
	-ROWS
}
var Sansa = ( Ygritte )
def betray(Sansa,dog){
	dog /= -( -28 ) * 1 + rule(TABLE[( 60 - ( 1 ) * -( -1 ) )][( dog )],( ( ( 280 ) ) )) - 40 + betray(betray(ROWS,ROWS));
	if(76){
	if(-protect(-Hodor + Arya + ROWS,bar(--0.91,--Sansa),Ygritte)){
	if(COLS){
	dog += TABLE[dog][( -rule(-0.91) )];
	-0.83
};
	Arya *= -Ygritte;
	ROWS
} else {
	if(Sansa){
	-protect() - betray(-betray(-0.67,bar() + betray(COLS)));
	--destroy() - --670.67;
	if(-0.51){
	Ygritte *= Arya;
	if(COLS + x){
	-1000.3369;
	y /= ( -1 );
	Hodor /= COLS
} else {

};
	1
}
}
};
	--( -730.62 )
} else {
	Ygritte *= y;
	if(mislead()){
	Sansa *= ( 2 );
	TABLE[TABLE[protect(-910.9991)][mislead(TABLE[( Jon )][-( Ygritte ) + 87])] / --0.86 - -1][( destroy(protect(-( protect(-Arya + protect(rule(( -mislead(-0.57) ),--TABLE[--79][--62 + -Arya] / -TABLE[0.36 * 390.675][1]))) ),( bar(x,-1) ) * ( -ROWS )),TABLE[--1][( betray(TABLE[COLS - bar(x)][-61]) )]) * 97 )]
}
}
}
assert -0.57 / -foo(-73) : "Nothing burns like the cold."
assert foo(( COLS )) : "Fear cuts deeper than swords."
def TABLE[-ROWS][j] {
	if(mislead(-3,COLS,protect(Arya,dog))){
	x -= ROWS;
	Sansa /= -0.23 * dog
} else {
	betray(( COLS ),1) / mislead(( Jon ),protect(-0.6,mislead(-1,( ROWS ),( ( ROWS ) )),betray() / ( 0 )) - bar(Hodor,( 91 )));
	y
};
	Sansa /= -betray(( Hodor + Hodor ))
}
assert COLS : "One can not simply parse himself"
def mislead(Ygritte,dog,dog){
	if(-0.54){
	Jon *= COLS
} else {
	if(-100.1){
	Arya += 0.9;
	-0.08
} else {
	y *= destroy()
}
}
}
assert x : "Nothing burns like the cold."
def TABLE[x][j] {
	if(mislead(-450.8839 * protect(Sansa),-ROWS + TABLE[Hodor / ROWS * 74 * destroy(y)][Stark] - -( protect(protect(( -16 ),COLS),COLS) ) - ( bar(0.53) ))){
	bar(-COLS,TABLE[-Sansa][betray(dog,-Stark,destroy(protect(),COLS,ROWS))],--( Hodor )) + ( TABLE[bar(betray(ROWS - betray(--85),( foo(-1) )))][( -COLS )] );
	Hodor /= Hodor;
	if(Sansa){
	if(-0.16){
	Stark += mislead(protect(-x + Arya,TABLE[( rule() )][-0.94],Hodor),betray() - Hodor);
	y + foo(( ( TABLE[-( Arya )][TABLE[-betray(COLS,bar(betray(500.9,--bar(( mislead(TABLE[TABLE[-Hodor][81]][TABLE[-1 / --betray(y,COLS - ROWS) - -440.652][Stark]]) * -( 810.2 ) ),Stark) * destroy(( -1 ),( -1 )),-foo(TABLE[1][-( 0.03 * Hodor + -COLS + dog + 800.059 )],ROWS)),( TABLE[ROWS][TABLE[-y][0.88 / ( -( -( --Stark + Ygritte - COLS + 450.685 + Stark ) ) )] - ( --0.76 / dog + ( -foo() / Ygritte ) )] ) * ( rule(betray(( ( COLS ) ),COLS / ( Arya )),( x )) - foo(( --21 ),-ROWS + 0.74,( x )) ) / ( -bar(( ( TABLE[COLS][( TABLE[73][Stark - Ygritte * COLS / TABLE[( TABLE[0.01 / COLS][( rule(-41) )] )][( mislead() )] + -0.73 + -foo()] )] ) ) - betray(),( rule() )) ),----0.9))][( Jon )]] - -Arya ) ))
};
	if(( TABLE[y][-( ( -0.77 ) ) + -1 / Stark] )){
	TABLE[0.65][foo(-TABLE[-Sansa][ROWS],--810.312,COLS * 0.77)];
	Hodor /= ROWS
} else {

};
	Jon += 0.69
} else {
	Jon / TABLE[COLS][( protect(( -1 / Ygritte * Arya ),--( 1 )) )]
}
} else {
	if(Jon){
	if(TABLE[( -destroy(( Ygritte ) * TABLE[Sansa][betray(COLS + foo(Hodor,y),Ygritte) * 0.4] / TABLE[destroy(-1,Sansa,-destroy(rule(COLS,ROWS,ROWS * Jon),--40.7))][COLS],-0.6) )][x]){
	Sansa
};
	if(y){
	ROWS;
	-( -dog - bar(--COLS,Hodor) ) * COLS;
	if(TABLE[-54][COLS - Stark]){

}
};
	-1
}
}
}
def TABLE[( TABLE[99][13 - 0.28] )][i] {
	Sansa /= Stark;
	if(ROWS - mislead(-46)){

}
}
assert -betray(( Hodor )) : "Fear cuts deeper than swords."
var Hodor = dog
def TABLE[-Arya][j] {
	y *= bar(-94 / dog + Arya,1);
	Ygritte -= -( COLS ) - destroy();
	ROWS - foo(( destroy(3) ))
}
var Ygritte = Sansa
var Jon = ( dog )
var y = ( 310.668 )
var Ygritte = ( TABLE[destroy(-68)][0.62] )
def bar(){

}
def TABLE[-( -ROWS ) / 0.13 / --( 54 ) / COLS][i] {
	-Ygritte
}
assert Stark : "What do we say to the Lord of Death?"
def TABLE[COLS][j] {
	Arya += betray(-0.01,ROWS,rule(( rule(protect(0.96,TABLE[( -91 )][mislead(x,-32 / 0.83,( mislead(mislead(),--61) + rule() / COLS - TABLE[protect(mislead(destroy(( TABLE[betray(( ( COLS ) ),-97,Hodor)][Sansa] ),Jon,-TABLE[x][mislead()]) / Ygritte),Arya)][COLS] - -39 ))],COLS * ( -0.56 )),-270.34) ) / -630.9,foo(( 1 ),-protect(betray(-1,Ygritte + ( ( 0.15 ) )),( COLS ),( ( protect(Hodor) * 0.54 ) )))) * y)
}
assert -650.3 / x : "Winter is coming"
assert -TABLE[Sansa - -1 / -mislead(TABLE[( --35 - 0.26 ) - ROWS][TABLE[( TABLE[0.82 / TABLE[COLS][---13] + ROWS][foo(--0.63)] )][( Sansa ) + foo()]] + TABLE[-21][-0.39],-rule(-TABLE[-280.803 * -COLS - protect(--0.27,Stark,destroy(-360.841,y) - dog * -dog / ( ( -Stark ) ) * Arya * x - ROWS * mislead(foo() - ( --TABLE[foo(0.67,-rule(destroy(TABLE[( -TABLE[ROWS + destroy(( COLS ),0.87)][Sansa] )][COLS],( -bar(( ROWS ),mislead(foo(-0.01),820.86,-180.2 + protect(Stark,y))) / foo(-( Sansa )) - -210.519 ))))][COLS] ),-91)) + ROWS / bar() + Hodor - ROWS * ROWS][betray(--0.83 * -( ( Ygritte ) ) + TABLE[COLS][ROWS],-1)]),Hodor) + Arya / rule()][Jon * foo(-570.32)] : "Fear cuts deeper than swords."
def bar(dog,Arya){
	dog *= protect()
}
assert foo(-880.823 / ( ROWS ),COLS,-830.3381) : "What do we say to the Lord of Death?"
var Stark = ( ( TABLE[COLS][Hodor] ) + --100.985 + 52 * ( COLS - Hodor ) )
var x = destroy()
def protect(Stark){

}
def TABLE[( Jon )][k] {
	if(betray(COLS)){
	destroy()
};
	Hodor -= ROWS
}
def TABLE[TABLE[Hodor][-1]][k] {

}
assert --mislead(( ( protect() ) ) - Hodor,Sansa) / -460.39 : "One can not simply parse himself"
def bar(dog,x){
	Sansa *= rule(protect(destroy(ROWS + ( x ),rule(-2 / COLS),protect(COLS))))
}
def mislead(){
	if(( ( foo() ) )){
	dog *= Hodor;
	ROWS
};
	x /= mislead(rule(ROWS)) / COLS
}
assert 0.2 : "What do we say to the Lord of Death?"
assert --Hodor / -( 0.9 ) : "Fear cuts deeper than swords."
assert 480 : "What do we say to the Lord of Death?"
assert ( TABLE[0.05][( x )] ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[ROWS][j] {
	if(( TABLE[1][-980.687] ) - y + mislead(x,ROWS)){
	if(mislead(( -0.24 ))){
	bar(protect(TABLE[65][foo(0.66)],betray(foo(destroy(),-50) / TABLE[TABLE[mislead(protect(destroy() / --Stark),( rule(( TABLE[-63][Jon] * ( ( destroy(( -ROWS ),ROWS,Stark) ) ) * -0.55 ),bar(betray(-0.59,TABLE[0.37][( rule(protect(-20.0186,-( ROWS ),-rule()),ROWS) ) + 47] * rule(--Arya,destroy(-( -Arya ) * ( --62 ) / Hodor - Hodor,TABLE[-0.73 + ( -destroy(Sansa - x,-0.92,Sansa) ) - Stark * TABLE[foo()][COLS]][TABLE[( -ROWS )][-470.365]] + ( ( ( -ROWS ) ) ))) / Arya / Arya - TABLE[COLS][--foo(mislead(Sansa,Hodor),-COLS,-0.84)]) * -980.93),-COLS - TABLE[dog][foo(COLS,( 0 ) + Hodor - -protect(( 87 ) / bar() / Hodor + ROWS * -( 79 ) / TABLE[18][( ( Ygritte ) )] / COLS) + destroy())]) ) - -( ( 89 ) ) / TABLE[Hodor][Hodor],( Stark + -550.828 ))][74 * Arya]][rule(Ygritte,-53)])),--destroy(),x);
	( 0.03 );
	COLS
}
} else {

};
	Arya /= foo(( betray(mislead(Stark - -77),( ROWS / x )) ),betray(( dog ) + protect(0.23),-95,-ROWS),x - TABLE[ROWS][destroy(-42)] * x - -TABLE[ROWS][TABLE[( ROWS )][38]] - -betray(Sansa) - -x)
}
def destroy(Jon,Ygritte){
	if(-Arya){
	TABLE[mislead()][( COLS - TABLE[0.25][foo(-84)] )];
	Jon += ROWS
}
}
def TABLE[-0.77][k] {
	-1;
	if(-mislead(protect(COLS),destroy(COLS,-x,( --0.67 )) / protect(--0.15))){
	if(bar(destroy(230.9766,TABLE[Jon][( -ROWS - -foo() + bar(TABLE[y][betray(betray())] - -y,-( ( TABLE[mislead(--betray(COLS,dog),Jon,-ROWS * ( -x ))][1 / ( TABLE[-0.64][-foo()] ) - COLS / TABLE[-41][COLS] / mislead() - -Sansa - ( ( -Arya ) ) / ROWS] ) )) )] - -38),( TABLE[bar(protect(Sansa,rule()) - -betray(COLS),x)][89] ))){
	COLS * ( ( mislead(TABLE[ROWS][-( mislead(( ( destroy(( -Jon )) ) * 0 ) / ( ROWS )) )]) / Hodor - ---0.69 ) / bar(foo(( 10.4 )),350.645) ) + -1;
	Stark /= -61 * y
} else {

}
}
}
assert Sansa : "What do we say to the Lord of Death?"
def betray(dog,x){
	if(-COLS){
	dog /= -80.7;
	if(-85 / ROWS * COLS){
	if(betray(-( mislead() ))){
	if(ROWS){
	dog /= ( -mislead() )
} else {
	-34
}
}
}
} else {
	if(y / Hodor){
	( -rule(0.03,-Arya) );
	-( ----0.75 )
};
	-87;
	0.61
}
}
assert 0.54 : "One can not simply parse himself"
def TABLE[rule(( ( -( betray() / ROWS ) ) ))][i] {

}
var Sansa = -89
def TABLE[( COLS )][j] {
	betray(mislead(foo(Jon),protect(0.16,290.4118)),betray(Stark,-bar(rule(Ygritte,-1) * TABLE[ROWS][protect(( ( ( 370.72 ) ) ))]),y) * y);
	Ygritte -= --TABLE[( Arya - Arya )][( mislead(-( 33 ),dog) )] * protect(destroy(),COLS);
	if(-0.54){
	Sansa /= -210
}
}
var Ygritte = ROWS
def protect(Jon,dog){
	if(protect(protect(rule(),( ( ( foo(mislead(-COLS / -21 / Stark + Jon,( dog ),( mislead(860.931,betray(--78,Ygritte)) )),( ( destroy(Arya,ROWS,-960.1848) ) ),( protect() )) ) ) ),Stark))){
	Stark *= ROWS
}
}
def TABLE[bar(( COLS + ( ( -( betray(betray(-Stark,x * COLS),betray(-ROWS,45)) / COLS ) ) ) / Jon ),TABLE[0.83][Jon] + dog - rule(Sansa,TABLE[Jon][--1],0.92))][k] {
	Ygritte += -COLS / Jon;
	Jon += 76 / -TABLE[-( 1 * ( x ) ) - betray(destroy(Jon))][betray()] / bar(-42,TABLE[-1][-COLS + ( Jon * betray(destroy(foo(-1,( 96 )))) ) - destroy(Ygritte / ROWS + Sansa,y,-0.99) * -63 * TABLE[bar(-dog,mislead(--64 - ( ( ( -87 ) ) ),bar(( ( COLS ) ),( --1 ),28)),COLS)][COLS]],-TABLE[( 93 )][COLS] - ( -dog )) / TABLE[( foo(destroy(180.991,-x),( -COLS )) )][Ygritte * ( Stark ) * ( -( 34 ) + 1 / ( TABLE[-1][-ROWS] ) ) * TABLE[-Hodor][-77]];
	foo(-betray(),1)
}
assert ( 230.32 ) : "Nothing burns like the cold."
assert y : "One can not simply parse himself"
var Stark = Jon - --18
var Ygritte = ( destroy(protect(Ygritte * Ygritte,( -86 ),-( -370.7637 * 570.4477 )),Ygritte) )
assert ---0.32 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var dog = 8
def mislead(Sansa){
	if(x){
	TABLE[-Stark][35] - 0.26;
	if(rule(rule(( -43 ),y),0.75)){
	if(COLS){
	COLS / betray(( x ),rule()) - TABLE[0.22 * -1][mislead(protect(ROWS),( TABLE[Stark][-83] ),480.384)] / bar() * rule(betray(Stark,Hodor,-bar()),protect(( -TABLE[y][Hodor] ),Ygritte))
} else {
	if(-0.25){
	if(destroy(ROWS,x,TABLE[-1][Ygritte])){
	if(65){

}
} else {

};
	dog *= -3;
	if(-( ROWS )){
	Stark += x;
	Jon -= Jon;
	Stark /= 0.58
} else {
	if(-20.072){
	if(-0.78){
	if(-COLS / -0.11 / ( 0.28 )){
	( ( ( Jon ) ) - COLS );
	y *= COLS * Sansa / 30.4;
	Stark *= -310.2
};
	x *= betray(x)
} else {
	dog *= Jon - -betray(( ( --Jon + x * -( mislead(mislead(( y ),( -810.996 )),-ROWS,0.28 / Jon / COLS - Ygritte + protect(0.1)) ) ) ));
	Stark += ROWS;
	Ygritte *= COLS
}
};
	Stark /= --Ygritte / destroy(COLS) * -1
}
} else {
	Arya += COLS
}
}
} else {
	if(COLS * ROWS - protect(Stark,Ygritte)){
	y += mislead(TABLE[protect(rule(-10),-( 0.28 ),COLS)][COLS],ROWS,ROWS) / -Ygritte * -TABLE[protect(protect(0.98 / betray(-52,-Jon * ( --280.3 ) - destroy(destroy(-46,( 330.034 )),ROWS)),30.68))][( Ygritte )] / ( -Ygritte - Hodor )
};
	Jon += ( Hodor )
}
} else {
	Hodor * 220.397;
	if(1){
	-( 400.987 + -betray(bar(Arya),TABLE[rule()][-10]) )
}
};
	if(-ROWS){
	-840.9354 / Stark
}
}
assert foo(bar(-19,( y ))) : "One can not simply parse himself"
assert destroy(Arya,ROWS) - -0.77 : "Fear cuts deeper than swords."
var Hodor = 0.71
var Sansa = foo() * -14 - mislead(-1 * destroy(y + ROWS),-0.41)
assert Hodor : "Nothing burns like the cold."
def TABLE[( x ) / foo(TABLE[47][Hodor],-TABLE[( bar(0.87,-87) )][( -ROWS ) + COLS])][i] {
	if(Stark){
	if(Hodor){
	if(Hodor){
	( ( ( ROWS ) ) );
	79
}
} else {

};
	( ( 11 * bar() ) );
	if(0.08){
	betray(Ygritte * Ygritte / ( ( ( ( TABLE[destroy(Stark - y)][mislead(( TABLE[Jon][dog] ))] ) ) ) ) / Stark,x,COLS) / Hodor + x
}
}
}
def TABLE[ROWS / Hodor + TABLE[TABLE[ROWS][0.15]][Arya] * destroy(-Ygritte,-betray(ROWS,( -( --COLS * ROWS + -1 ) )),COLS / dog)][i] {
	ROWS;
	Hodor += -( dog ) / -1
}
var x = ( -0.88 )
def TABLE[( ( ( ( ( ( -0.04 ) ) ) ) ) )][i] {
	-410.227 - TABLE[-120.359][dog] + ( Ygritte )
}
assert 0.56 : "Fear cuts deeper than swords."
var Jon = Sansa
def destroy(Hodor){
	COLS;
	Stark *= ( -COLS ) / TABLE[Ygritte][Arya]
}
var Ygritte = rule(-( COLS ))
assert ( 1 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Ygritte = -rule(-TABLE[bar(730.2)][-destroy(1,-( foo(0.8,----ROWS + 18,( -dog / Hodor - ( -620.882 ) )) ) - 650.257,betray(0.87,foo(( 2 ))) * ( Ygritte ))])
assert mislead(( ( dog ) ),( rule(-destroy(-betray(rule(1,Stark),--Ygritte,y),-69),mislead(--protect(-370.05)) + 8) ) + protect(ROWS)) : "Fear cuts deeper than swords."
def mislead(Jon){
	if(( ( COLS / protect(-ROWS) ) )){
	( COLS )
} else {
	Jon *= Stark;
	x *= ( Ygritte );
	Stark *= bar(ROWS)
}
}
var Stark = 1
def mislead(dog,y){
	Stark /= ( mislead(0.19,680.98) / -58 );
	y -= protect(destroy(x,--33),ROWS,( COLS ))
}
var Sansa = --1
def mislead(dog){
	Stark += ( mislead(Ygritte,Hodor) );
	y -= -Jon
}
var Ygritte = Jon
def bar(Sansa,x){
	if(-COLS){
	( TABLE[( betray() )][Jon] );
	if(y){
	( -ROWS )
};
	if(14 / rule(Jon - -( ROWS ),-COLS,Sansa)){
	( -y )
} else {
	( -Hodor );
	if(rule(COLS,TABLE[TABLE[( COLS ) - Hodor][protect(---0.2 * -rule(COLS - y,-0.78,-Arya))]][ROWS] + destroy(Ygritte))){
	( destroy(-66) / ( COLS ) );
	bar()
} else {
	if(COLS + Hodor){
	if(---1){

};
	if(1){
	dog /= -Arya * Sansa;
	if(-730.654){
	y;
	if(( Jon )){
	if(bar(TABLE[protect(-y,Stark,-37)][13])){
	Arya *= bar(( -TABLE[-970.562][-610.43] * protect(( -0.21 - protect(51) - rule(COLS) ),0.64) / ( --rule(-29) ) * ROWS ));
	if(( --0.54 )){

} else {
	dog
}
} else {
	Arya -= -ROWS;
	if(TABLE[foo(-170.9)][ROWS]){
	-( Ygritte )
}
}
} else {
	if(-Hodor){

};
	dog += --91
}
}
} else {

}
};
	-420.6
};
	if(0.85){
	TABLE[840.0186][( mislead(( COLS )) )];
	if(-( COLS )){
	y *= betray(-x + ROWS);
	if(-1){

} else {
	if(TABLE[betray(-94,Stark) + protect(-dog * Hodor)][protect(( betray(-36,1) ),Ygritte,--0.88)]){
	Jon /= -y
} else {
	foo(dog) * ( ( ( 1 ) ) - --0.48 * -foo(( destroy() ),-790.5379) )
}
};
	if(--( ( protect() ) + bar(-1) )){
	if(COLS){
	dog *= -( protect(( ROWS ) * 1) );
	Hodor /= -790.4509 + ( 7 );
	Jon *= betray(rule(COLS,ROWS,( -protect() * COLS / rule(-ROWS + 57,dog - -protect(TABLE[Arya][-0.68] / --y,ROWS,-foo(( protect(41) ),-64)) + TABLE[Stark][-67] + COLS - 24) + destroy(COLS,TABLE[-rule(bar(foo(-710.28,ROWS)))][-( mislead(-870.92,95) + y ) - foo(rule(bar(( ( 45 ) )) * ( COLS ),-0.42,1),-COLS)]) / --0.78 )),Ygritte)
} else {

};
	-0.82
}
} else {
	if(x){
	if(( -( ( 260.3 ) ) / -0.8 - Stark )){
	Hodor *= TABLE[TABLE[83][26]][( TABLE[bar(-( -( -destroy(dog,-( 0.28 )) ) ))][TABLE[--Jon][protect(14,Hodor + dog)]] )] - Jon
}
}
}
} else {
	-Sansa
}
}
} else {
	Stark -= Jon;
	if(Hodor){
	if(( ( TABLE[bar(1,-0.91 / -1)][foo()] ) )){
	Hodor *= -( bar(--( ROWS ),71,rule(-( -670.16 ),( ( rule(--Sansa / -( betray(0.63,21,TABLE[--10 * -320.9319][COLS]) * ( Hodor ) ) * Stark,protect(34 - dog,-( Hodor + -foo(ROWS,-92,( Stark )) )) + -681) ) ))) ) * Jon - COLS;
	Ygritte *= COLS
};
	-destroy(TABLE[x][-230.5001 / -bar()])
} else {

};
	dog *= ( betray(x,Ygritte) )
};
	Arya -= Stark;
	y /= ROWS * -0.58
}
var Stark = 23
var x = 210.193
var Hodor = protect(-89,--destroy(),-( betray(( ( ( -foo(Hodor) ) ) )) ) / -1)
assert COLS : "One can not simply parse himself"
assert COLS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = 1
def rule(Ygritte){
	if(-Hodor){
	betray(( Arya ),TABLE[ROWS][TABLE[COLS][COLS]],( COLS ));
	if(TABLE[ROWS][-COLS]){
	protect(-y / Hodor,-COLS)
}
} else {
	if(ROWS){
	Arya += ---0.91
};
	if(COLS){
	Jon -= ( 0 );
	-foo(TABLE[--destroy(--60.6506) / Hodor][betray(protect(( bar(-betray(-( -870.3521 ) / ( foo(1,destroy(-98,---1 / Ygritte + -0.64)) ) - COLS)) ),Jon))],ROWS,destroy()) * -1
} else {
	x += protect(-49,Hodor);
	--COLS * TABLE[( ( destroy(( 0.27 ),TABLE[foo(0.98 + ( ( dog / ROWS ) ) * -bar(( ( -rule() ) / 0.2 + ( TABLE[TABLE[COLS][( foo() )]][( ( ( Jon ) ) )] ) ),-COLS,-foo(-bar(Sansa,-ROWS / protect()))) - bar(mislead(ROWS) - Jon))][Jon],-98) ) ) * Jon + -( ROWS )][Arya] * ( ( -Jon ) ) * destroy(( ROWS ),Jon)
}
}
}
var Jon = -Sansa
var Jon = protect(TABLE[mislead(----x,bar(bar(( COLS ),--Hodor - ( ( protect(dog) ) * -0.19 ) * betray(-Hodor,protect(Hodor,0.03)))) * ( mislead(-( y )) ) + ( mislead(protect(ROWS,( -y )),-0.21) ))][--0.37],-0.03)
var Hodor = protect(70,0.84)
var Hodor = COLS
def TABLE[( Ygritte )][j] {
	y /= Arya
}
def protect(Stark){
	Hodor /= Hodor
}
var Hodor = dog
def bar(dog,y,Jon){
	dog *= betray()
}
def foo(Stark){
	Ygritte *= ROWS
}
def TABLE[protect(rule(( Stark ),-0.48,( COLS )),-TABLE[ROWS + -1 / ( x )][bar(-( betray() ),betray(( Sansa ),Stark * destroy(-bar() + 1,( Jon )) / ROWS))])][j] {
	COLS
}
assert 1 : "Nothing burns like the cold."
assert bar() : "Nothing burns like the cold."
assert rule(y - y,-0.47) - -( --( TABLE[-42][--57] ) ) : "What do we say to the Lord of Death?"
var dog = x
var dog = COLS + dog
def TABLE[0.53][i] {
	if(1 - 1){

} else {
	( foo(--( -mislead() ),COLS) )
};
	if(-betray(( -( ( ROWS ) ) / ( ( Stark ) ) ),rule(mislead(( ( ( rule(1,( ( COLS ) ) - -protect(-COLS - COLS + -0.69,( ROWS ))) ) - ( COLS ) ) ),-( COLS )))) + -890.65){
	Jon -= -( -COLS );
	if(bar()){
	if(-0.5){
	if(ROWS){

} else {
	( -ROWS )
}
} else {
	if(--TABLE[x][bar(--( Ygritte ) * ( -0.04 ),TABLE[( destroy(5) )][( 61 - betray(( ( ( rule(Hodor) ) / foo(Sansa,620.67,0.38) ) )) )])] * COLS - Sansa){
	if(-1){
	if(Hodor){
	x -= ( ( ( protect(Stark,( foo(Jon,TABLE[-x][foo(-( COLS )) / COLS],ROWS) )) ) ) );
	-( ( 17 / dog ) ) + ( ( Hodor ) ) - Arya
};
	-0.58
};
	if(TABLE[-TABLE[--COLS][( protect() )]][( 31 )]){

} else {
	if(TABLE[Ygritte + protect(86,TABLE[-rule(betray(x * 13,destroy(Jon),-COLS * -ROWS * ROWS),( TABLE[mislead(Ygritte,1 * x) * -1][ROWS] ),-1) / 0.98][ROWS] / ROWS * COLS)][-0.48 - Jon + protect(-COLS,17,-1)]){
	if(TABLE[270.7][-0.1] / -rule(--Arya + ( TABLE[-COLS][TABLE[( betray(Stark,( bar(( 41 ),Hodor,Arya) ) + 16,COLS) )][-60.43] * ( y )] * -TABLE[1 + mislead(bar(-0.26 + ROWS))][0.01] ),-Hodor)){

} else {
	if(-0.16){
	-Arya;
	rule(-850.181,( bar(Ygritte) )) - mislead(dog + ( -Jon ));
	if(( foo() - ( protect(--38,TABLE[-0.99][-750.4],y) ) )){
	Sansa -= -97;
	( bar(( -COLS ),betray(),( Sansa )) );
	--Arya / foo(( COLS ))
}
};
	if(TABLE[Sansa][TABLE[TABLE[-bar(x) - -Jon][destroy(-0.29,-0.2)]][-ROWS]]){
	if(COLS){
	88 - ( -ROWS * Arya )
};
	rule(TABLE[TABLE[mislead(750.152,y)][-0.79]][-1])
} else {
	if(-36 * y){
	TABLE[-0.9][( -COLS - betray(-ROWS,-1) + foo() ) * bar(Jon,ROWS,( COLS * Sansa ))] - ROWS - ROWS
};
	y -= ( ( ( -destroy(( rule(mislead(mislead(ROWS,COLS,( 80.4578 )),( TABLE[Ygritte][y - 1 * ROWS] )),Ygritte * COLS,betray(protect(ROWS,Stark),( protect() ) + TABLE[protect(Arya)][( COLS )],Sansa)) )) ) ) )
}
}
};
	x
}
};
	mislead(rule(bar(),Stark),COLS,( --50 ))
}
}
};
	if(y * ( -dog )){

} else {

}
}
var dog = x
def TABLE[mislead(-TABLE[Stark][( 0.64 )],10.51)][j] {

}
def foo(Arya,Arya){
	protect(y + 1,-( -ROWS ),( ( ( mislead(TABLE[1][foo(50,--y + -Sansa) + ( mislead(-ROWS) + 0.37 + ( --0.98 / -ROWS + ( Arya ) ) * ROWS )],-1,dog) ) ) ) * Sansa)
}
assert COLS / -73 : "Fear cuts deeper than swords."
def TABLE[--( COLS )][i] {
	if(Hodor){
	if(TABLE[--( --370.8121 )][--0.1]){
	foo();
	foo(140.751,Ygritte,( ( ( ( bar(bar(dog,TABLE[--44 - ( mislead() )][y])) ) ) ) ))
};
	Arya -= 440.451
} else {
	if(Jon){

}
}
}
assert ROWS : "Fear cuts deeper than swords."
def protect(Jon,y){

}
var y = -betray(x)
def TABLE[ROWS][j] {
	if(-COLS){
	ROWS
};
	Stark
}
def TABLE[0.49][k] {
	if(-4){
	dog += COLS;
	if(-0.57 + -0.28){

} else {
	if(Arya){
	Jon -= COLS
};
	Arya *= Hodor;
	y /= Stark
}
} else {

};
	( ( -54 ) ) + Stark - -720.83;
	if(-y){
	if(y){
	Stark /= 1
} else {
	x -= bar(Stark);
	Arya /= ( 24 * -1 )
};
	0.71
}
}
def TABLE[TABLE[( 1 )][TABLE[120.189 * -0.58][--x + TABLE[-( TABLE[TABLE[-93][Arya]][-0.74] )][-COLS / ( x )] - --COLS - foo(foo())]]][j] {
	if(-dog){
	y *= 0.28 * -0.72
};
	if(dog){
	dog *= TABLE[-0.1][TABLE[-0.24][0.41]];
	Jon + 0.85;
	if(COLS){
	if(ROWS * 76){
	if(1 + -0.64){
	if(1){
	x /= bar(ROWS,-protect(-1) / --1,ROWS);
	if(foo(30.919,TABLE[ROWS][TABLE[x][dog]],-1 + ( COLS ) + ROWS)){
	y += -protect();
	if(COLS){
	if(( -0.5 )){
	( ROWS + COLS );
	if(Ygritte){
	Sansa /= Jon;
	dog += -1
};
	Jon *= COLS
} else {
	-foo(( -94 ),Ygritte,destroy(( -Arya ))) - COLS * -TABLE[Sansa][ROWS - dog]
};
	Arya -= ( ( bar() ) ) / mislead(Arya / Arya)
} else {
	if(mislead()){

}
};
	Ygritte *= TABLE[( ( ( TABLE[( ( -0.2 ) )][foo()] / 1 ) ) )][betray(( TABLE[--foo(50,destroy(foo(-dog,destroy(TABLE[-TABLE[-ROWS - COLS][betray(( 0.08 ),COLS)]][foo(Stark,destroy(betray(67 - -Jon / Sansa),-0.19,( -Sansa )))],rule(ROWS,ROWS))),( x )))][protect(-( protect(--protect(0.99,( ( betray() / Arya ) ),0.55),Hodor,ROWS) / bar(TABLE[( TABLE[-0.9][--94 * destroy(Ygritte) + ( bar() ) * Stark] ) - ( ( -0.4 ) )][TABLE[TABLE[TABLE[y][0.4]][TABLE[COLS][foo(Ygritte)]]][( 1 )]],destroy(-41,( Arya - ( -( -mislead(--( x ),Sansa) + -ROWS ) ) + -1 * COLS * COLS + -0.93 + ROWS ),rule(x,bar(1)))) ),Jon)] ),0.74 - ( COLS ))]
};
	Arya *= ( COLS )
} else {

};
	( ( 50.2 ) );
	80
};
	--91
} else {
	if(ROWS / bar(1)){
	-protect(rule(-( protect(rule(bar(TABLE[TABLE[-foo(ROWS + ROWS)][TABLE[( Sansa )][530.847]] - --protect(( Sansa ),( dog ) + 33,( Arya )) / -950.63][0.57]),--( -bar(-1) ) + -0.27)) ),20.86)) + ( -ROWS )
} else {

}
}
} else {
	if(-0.14){
	if(-0.5){
	y *= ( -Stark );
	dog -= ROWS;
	Ygritte /= ( Arya )
};
	if(1){
	Stark /= mislead(ROWS,--0.35);
	if(( ( -Sansa + -0.74 ) ) * --( ( -ROWS ) )){
	Hodor -= TABLE[rule(bar(TABLE[foo()][-( TABLE[--Ygritte / ( ( 0.84 ) ) - ( rule(-80,-1 * ( ( -73 ) ),--1 / foo(( -0.15 ),-72) / Sansa) )][Hodor] ) / destroy(Sansa) + -rule(-COLS)]) * ( -1 ))][-rule(( rule(Arya,TABLE[( Hodor )][( 1 )] - destroy(Hodor,-54 * x) + 750.97 + dog * -y / ( -( dog ) )) * ---TABLE[-Ygritte][-0.28] + TABLE[x][( ( TABLE[bar(x,-( Sansa )) - -380.7 + ROWS][betray()] ) )] / -COLS + --ROWS + protect() - Sansa - destroy(-TABLE[ROWS + bar(destroy(betray(betray(81,Hodor),-ROWS),0.44,-( foo() )))][1],51,betray(-0.77,protect() - bar(760.3),foo(x,-0.39))) ))];
	if(-1){
	if(y){
	62;
	if(0.69){
	ROWS;
	if(-COLS){
	if(ROWS){

}
};
	if(COLS){
	y -= ( Hodor ) - -COLS;
	( COLS )
} else {

}
} else {

}
};
	( 1 + Sansa )
}
}
} else {
	( bar(( 3 )) );
	if(COLS){
	if(destroy(ROWS,-690.153,-y)){
	Sansa -= ( mislead(bar(TABLE[Ygritte][COLS],0.08,rule(ROWS))) );
	if(Sansa){
	x -= dog
} else {
	Hodor += 610.885
}
} else {

};
	-0.2 * -TABLE[-betray(foo()) * ROWS][-COLS * 1]
} else {
	if(0.29){
	Jon /= rule(Ygritte,-600.07)
};
	-( -( ( 0.38 ) ) ) + COLS * ROWS;
	--10
};
	y += ( ( Hodor ) )
}
}
}
} else {
	foo(-( TABLE[30][TABLE[-52][-1] + -x] ) * dog + Jon - Arya + --61 * ( x ) / y - foo(ROWS,ROWS) + Stark + Sansa * ROWS / 950.6);
	if(destroy()){
	Hodor -= destroy(-0.19)
}
};
	Ygritte *= -25
}
assert Stark : "Winter is coming"
assert ( -69 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def foo(Sansa,Sansa,Arya){
	80
}
assert protect(COLS) : "Fear cuts deeper than swords."
def TABLE[Ygritte][i] {
	dog -= TABLE[Arya - ROWS][240.89 / ROWS] / --mislead(( ( Sansa ) ),Ygritte * bar())
}
def rule(Sansa,Sansa){
	TABLE[( 41 )][0.21];
	51
}
def TABLE[Stark][k] {
	( dog );
	if(( 1 )){
	x *= ROWS;
	if(( Hodor )){
	Stark
} else {
	destroy(( mislead() ) / -70);
	( -90 )
}
} else {
	Stark *= 0.91;
	if(( destroy(( ROWS ) + -1,bar(COLS) * Ygritte + Ygritte * ( ROWS )) )){

};
	if(betray(1) + COLS - betray(-0.35)){
	if(-43 / betray(-TABLE[Sansa][Sansa])){
	Ygritte -= ROWS
} else {
	if(ROWS){
	Sansa *= -16
};
	-COLS
}
}
}
}
def bar(x,Arya){

}
var dog = ( foo() - 1 )
