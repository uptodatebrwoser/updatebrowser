def bar(Arya,y,Stark){
	Arya;
	if(( COLS ) - -0.31){
	Ygritte -= ROWS;
	TABLE[( ( bar(( 1 )) ) ) + 1][50] * Stark
} else {
	Stark -= 1;
	( -940.9058 )
};
	if(ROWS){
	if(20){

}
}
}
var Ygritte = ( --( -bar() ) / mislead(Jon,destroy(1,--TABLE[ROWS][dog / dog] / -0.69 / protect(-COLS - foo()))) )
assert mislead(ROWS,-0.69,y) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var x = ( ROWS ) + bar(( -( -55 ) ))
var Stark = dog
def destroy(){
	TABLE[foo()][-( COLS ) + -COLS];
	-1;
	mislead(77)
}
var Arya = -95 * betray(-100.6,foo(( -41 ) * 180.62,-120.05))
assert TABLE[TABLE[y][ROWS]][destroy(TABLE[ROWS][x],ROWS,-Ygritte) / --1 * ( ( ( Jon ) * -( Stark ) - TABLE[Hodor][-( ( -mislead(ROWS + ---( bar() ) + ( 88 ) * TABLE[Arya][-20]) ) ) / -0.83] ) * Jon )] : "Fear cuts deeper than swords."
def TABLE[mislead(0.93,( ROWS ))][j] {
	Arya *= Hodor;
	( 46 );
	if(COLS){
	x /= protect(dog);
	if(0.21){
	if(Hodor / ( Sansa )){
	-0.74
} else {
	Arya /= -( ( ( ( ROWS ) ) ) );
	if(( Sansa ) / betray(( -0.18 ))){
	Ygritte -= betray(-y * TABLE[rule(93,Hodor,--0.23)][Ygritte]);
	Arya -= ROWS
} else {
	x *= ( Arya / ( 0.52 ) + foo(-TABLE[--mislead(-bar(Sansa,1)) - COLS * foo()][20.15 + rule(( foo(-1) ),--71)] / foo(( TABLE[COLS][Hodor] ),( ( 120.66 ) ))) / x - ( --1 ) );
	if(( rule(( x ) * ( TABLE[-foo(TABLE[TABLE[( COLS )][destroy(Sansa)]][ROWS - -TABLE[0.66][Hodor * Arya]],destroy(TABLE[( rule(dog * TABLE[0.59][Arya]) )][destroy(Sansa)],protect(--550.964))) / betray(ROWS,ROWS,rule(-ROWS + -1 * ROWS) + -protect(( --Ygritte + Arya ),Jon + 0.88) / betray(( Ygritte ),Arya) * -destroy(-27) * protect() * ( -TABLE[( x * ( -rule(-88,COLS - Jon,-0.51) ) * foo() + -0.48 )][-y] ))][( --0.27 )] ),-Sansa - -48 * mislead(1,COLS,COLS) / ( ROWS ) - bar(Hodor)) ) - 1){

} else {
	Arya *= foo(TABLE[( -( Stark ) )][Jon],Jon);
	TABLE[-1][Jon]
}
}
};
	if(490.89){

};
	if(-0.72){
	x += Jon;
	destroy()
} else {
	Arya *= -1;
	if(( dog ) + -ROWS){
	Ygritte += Sansa + ( bar(protect(-720.9)) - x / ROWS / -1 ) / Sansa
}
}
} else {
	Hodor += COLS
};
	Hodor -= bar(TABLE[--protect(y,COLS,-Ygritte) - Arya][-12],-0.77,45)
} else {
	Jon;
	dog *= COLS
}
}
var Sansa = ( -Jon + ( mislead(dog + -0.63) ) )
def foo(x){
	COLS;
	( ( 240.681 / -67 ) );
	-y
}
def TABLE[COLS][j] {

}
var Arya = protect(COLS,( betray() ))
assert -650.7 : "Fear cuts deeper than swords."
var Sansa = --COLS
assert 430.37 : "Winter is coming"
var Ygritte = ( x )
var Stark = ( -0.88 )
var Arya = ( -53 )
def rule(Jon,y,Jon){
	Arya += ( TABLE[--ROWS][Jon / TABLE[-protect(-( --58 - COLS ) - ROWS + -28,dog,1)][( -Stark )]] );
	if(foo(820.9,Jon,foo(x,ROWS) - 28)){
	x += -( -55 );
	ROWS
}
}
def betray(Arya,x){
	Jon /= bar(-( -COLS ) * COLS,( Hodor * 0.47 ) * ( ( -protect(rule(dog,x),Stark) ) ),ROWS);
	dog += ( 740.4 ) * -rule(bar(-( protect() ),( -1 * dog ) - -foo(( ( -bar(Hodor / -( foo(TABLE[( ( 280.978 - ROWS * -Arya ) )][-( TABLE[dog + COLS][Sansa] )],mislead(25 - destroy(protect(dog,ROWS)))) * destroy(ROWS,Jon / COLS) ),ROWS) ) ),( COLS ))))
}
def TABLE[rule(Sansa)][i] {
	TABLE[foo(-( 41 ))][0.97]
}
def rule(Jon,Stark){

}
def TABLE[Hodor][i] {
	Ygritte *= Arya;
	Arya -= x
}
assert ( Sansa ) : "What do we say to the Lord of Death?"
def protect(dog,y){
	Jon += mislead()
}
assert protect() : "Fear cuts deeper than swords."
assert mislead(foo()) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert Hodor : "What do we say to the Lord of Death?"
def TABLE[Hodor][i] {

}
def TABLE[-( -600.6 ) * ROWS][i] {
	if(dog){
	Stark *= 0.23
};
	dog /= destroy(ROWS)
}
def betray(Stark,Sansa){
	if(( COLS - -36 )){
	if(451){
	if(-( Ygritte ) + -( ( -0.36 ) ) + ( 0.07 )){
	-40;
	if(( ( 0.86 ) / -58 )){

} else {
	-TABLE[( foo(Ygritte) / ( rule(26 / -0.58,TABLE[-( -620.2226 ) / 0.85 + 70.6965 + -80.89 - 0.63][TABLE[--120.12][betray(( --Stark + -1 ) - -500.7124 - foo(( x )),-TABLE[ROWS][-TABLE[( -29 )][Sansa]])]]) ) ) / ( Stark )][betray(Stark + Ygritte,-ROWS)];
	if(( destroy(-bar(( -y ),-8) / protect(Stark,Arya) + -1 + TABLE[450.8][mislead(--0.48,( -0.7 ) * -betray(TABLE[( ROWS * Jon )][54],ROWS / -Sansa + COLS - -8 * 1)) + ( dog )] - ( Arya ) - foo(-69,0.23)) )){

}
}
}
} else {
	if(-0.98){

}
};
	Stark /= -0.59;
	if(destroy(( bar() ),Sansa) + ( -ROWS )){

} else {
	66;
	dog += rule(-0.12,TABLE[-( ( x ) ) * COLS - ( -0.97 ) / rule() - TABLE[( ( protect(foo(( Arya * ROWS ),dog)) ) )][COLS]][foo(TABLE[( TABLE[dog][-0.73] )][-Ygritte] * x,( rule(-0.4,-betray(--6)) ))])
}
} else {
	( -0.79 );
	-0.67;
	if(COLS){

}
}
}
assert -( ( destroy(( ( ( -Jon + ( ( ROWS ) ) ) ) )) ) ) : "One can not simply parse himself"
def betray(Ygritte,Ygritte){
	if(( ( -Ygritte * mislead(( bar(0.76,( x )) )) ) )){
	67
} else {
	Jon *= ( -730.4 );
	-98
};
	if(TABLE[protect()][--( bar(betray(dog,Sansa),--0.5) * 0.09 ) + 140.1]){
	Stark -= ( rule(COLS,COLS,( protect(ROWS) + destroy(destroy(foo(rule(( -( ROWS - protect(-0.8) ) ),COLS),destroy(y - ( ( 35 ) ),COLS,-( Sansa ) / COLS)),( ( Hodor ) )) + ( -96 )) )) )
}
}
def bar(){
	x *= -0.32;
	Hodor
}
assert 26 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert y : "Nothing burns like the cold."
assert -betray(betray(Arya / ( --COLS ) * -1),-650.54,( -rule(-bar(Jon,( ( Jon ) ))) - ( y ) )) : "Fear cuts deeper than swords."
def TABLE[( Arya )][k] {
	if(COLS + 26){

};
	if(-betray(betray(( Stark )),( Jon ),ROWS)){
	if(Stark){
	if(-( 0.63 )){
	dog += -0.76
}
};
	mislead(-0.63 + destroy() * bar(ROWS + betray(Arya),-x,TABLE[foo(dog / destroy(rule(820.18,-6),-Hodor) * ROWS)][betray(betray(-66,0.33,Stark),TABLE[rule(-1,protect(( ( COLS ) ),-dog))][bar(destroy(Arya) / ---1 - TABLE[( -( TABLE[dog][-bar()] ) )][-mislead(y - TABLE[foo(mislead(-16 * -1,COLS),-73,0.3 / Jon)][--Jon / Jon]) + -1],-( -COLS ))],TABLE[destroy(-mislead(TABLE[-( Arya )][-COLS + -92],0.55,-Jon) - dog,( ( foo(y) ) ))][COLS])])) + dog - y * 0.46 + ( Jon );
	Arya -= betray(-protect(-93,COLS,40) + -( rule(( TABLE[-dog][ROWS] )) ),( ( ( ( -ROWS ) ) ) ) - -bar(foo(-( destroy(mislead(-Arya,betray(0.91,Sansa) * -ROWS)) )),63 * x,Ygritte) + ( -0.8 ))
} else {

}
}
assert ( 0.63 ) : "One can not simply parse himself"
assert 1 : "One can not simply parse himself"
assert mislead(Stark) : "Fear cuts deeper than swords."
var Hodor = -( COLS )
assert -COLS : "One can not simply parse himself"
def foo(Sansa){
	if(( rule() )){
	Stark /= -Jon - -ROWS;
	x += Jon
} else {
	if(--( COLS ) / ( 350.58 ) / -570.399){
	Ygritte += Sansa;
	84
} else {
	( -18 );
	if(( -510.1376 )){
	-( dog )
} else {
	y -= destroy(-Stark);
	COLS
}
};
	Stark /= TABLE[y][protect(--Arya,TABLE[mislead(-ROWS,destroy(destroy(( -50 ),( dog )),( TABLE[destroy(COLS)][foo(rule(-( Hodor ),-( Stark )),-69)] ) / ( -COLS / -0.21 )))][foo(-900.523,-foo(COLS / foo(),Jon))])]
}
}
assert ROWS : "What do we say to the Lord of Death?"
def TABLE[140.52][k] {

}
var dog = -Ygritte + ( -0.83 ) - -6
def betray(Stark,dog){
	Ygritte /= mislead(-27);
	if(ROWS){
	y
} else {
	if(TABLE[rule(ROWS)][( Arya )]){
	TABLE[-0.47][ROWS];
	Ygritte += -Sansa - -Hodor + Stark
} else {
	Hodor += ( TABLE[dog][TABLE[rule()][Arya * -76 - -Stark]] )
}
}
}
assert Hodor / ( Stark ) : "Fear cuts deeper than swords."
def TABLE[betray()][k] {
	if(Arya){
	protect();
	if(( COLS )){
	dog *= -Ygritte + ( ( rule(-bar(-0.23),Sansa,0.42) ) ) / TABLE[-y][x];
	( -( -( 0.41 ) ) * y )
} else {
	mislead(Sansa,x,ROWS);
	if(Jon){
	if(ROWS + ( --0.04 - mislead(( ROWS / 0.07 )) ) / 87){
	( -COLS * mislead() );
	Sansa += betray()
};
	Hodor;
	if(rule(-ROWS - -490.22,( 0.79 ))){
	Ygritte -= ( ( -COLS ) )
}
}
};
	Stark /= bar(Ygritte,mislead(y))
}
}
def TABLE[bar(destroy(( -0.65 )) + betray(--dog,COLS,-( -COLS )),foo(),COLS)][j] {

}
assert ( Ygritte ) : "Winter is coming"
var Hodor = destroy()
var Hodor = COLS
def foo(){
	( 740.338 );
	if(protect(Arya * x,0.62,Ygritte) / COLS){
	dog;
	rule(-ROWS,foo(),foo(0.75))
}
}
assert -74 : "What do we say to the Lord of Death?"
def destroy(){

}
var dog = ( -0.17 * --1 )
assert ( rule(-dog,-x,--Arya) ) : "What do we say to the Lord of Death?"
def TABLE[--Arya][j] {
	Arya -= ( Ygritte ) * COLS;
	x
}
assert -TABLE[destroy(--69)][Jon] : "One can not simply parse himself"
var Hodor = TABLE[( TABLE[-mislead(-540.731,0.54) * TABLE[( Sansa )][protect(x / ( ROWS ),ROWS,--bar(-1))]][-54 + rule(( --TABLE[COLS][8] + Ygritte ))] ) - Sansa][bar(( -96 ),COLS,( ROWS ))] + x / -mislead(-80,-1)
assert Stark : "Nothing burns like the cold."
def mislead(Stark,dog,Stark){

}
def TABLE[-1][i] {
	if(( betray(-( COLS ),ROWS,mislead(Hodor,destroy(destroy(( ( -( -mislead(( COLS * ( foo(Stark) ) ),( TABLE[( 0.78 ) + betray(ROWS) / -94 + -0.23][-TABLE[Jon][( -( ( -0.68 ) ) )]] ),-0.15 - protect(TABLE[-TABLE[1][-COLS]][( dog ) / ( x ) - protect(rule(( COLS )),( TABLE[Stark][-( 41 )] ) / ( ROWS ),COLS / ROWS) + foo(( -x ),( foo(ROWS) ),( -1 ))],0.26)) - ( -1 ) ) ) ),--0.01,( -( ( -COLS ) ) + bar() - -destroy(13,COLS - rule(ROWS,TABLE[-rule(( -( ( -10 ) ) ),( protect(-38,betray(( -dog )),y / foo(COLS,rule(mislead(destroy(Ygritte,bar(-0.88)),-bar(-dog + -19,( ( 600.5693 ) ) + -Arya)),ROWS) / -( -0.63 + -protect() + TABLE[destroy(--( -66 ) / rule(protect(mislead(),destroy(ROWS,betray(Sansa,COLS,destroy(betray())),Arya)),Hodor,82),( -TABLE[mislead()][foo(-betray(protect(),protect(COLS * destroy()),-mislead(-1)),-Jon)] ))][destroy(dog) + x] * foo() - 0.83 + ROWS - -foo(( -x ),ROWS) + bar(-( Sansa ) / ( ROWS ),1) ))) ),490.6)][( -Stark ) * Sansa],Sansa),-( rule() ) / -68 / 740.55) / -0.74 / Ygritte )),-rule(-dog,( -COLS )) * ( y )))) / Sansa )){
	if(mislead(rule(y),( ( dog ) ),-690.552)){
	if(( 0.95 )){
	x += x;
	( ROWS );
	if(ROWS){

}
};
	( -89 )
} else {
	if(protect(Hodor)){
	COLS
}
};
	Jon += -640.822;
	Stark -= rule()
} else {
	Stark *= 0.61 * ( ROWS );
	34 - --ROWS
}
}
assert destroy(-61,bar(-1)) : "Fear cuts deeper than swords."
def protect(x,Hodor,Arya){
	Sansa /= Stark - protect(destroy(-TABLE[destroy()][--91] + 0.51 / 96)) - rule(destroy(( ( protect(COLS) ) / -68 ),bar(( COLS ),bar()),Ygritte),-( ( mislead(TABLE[x][98],-23) ) ));
	dog *= -ROWS
}
def foo(x,Arya,Ygritte){
	dog *= ( -870.76 - Ygritte )
}
var Hodor = Ygritte * ( mislead(Hodor,TABLE[-dog][protect(---1)] / bar()) * Stark )
var Stark = -1
def TABLE[COLS][i] {
	if(x){
	if(-61){

} else {
	Stark /= Stark
}
}
}
assert betray(Sansa,( x ),-protect(COLS - Hodor,-( Jon ))) : "Winter is coming"
var Sansa = -( foo(-1,-Ygritte) ) - ( ( foo(protect(betray(1,-( ---70.6933 - TABLE[( -ROWS - ( mislead(( ( -Stark ) ) * ROWS) ) )][COLS] ),-64)),-Arya,rule(TABLE[ROWS][1])) ) )
assert ROWS : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[foo(( 76 * ( ( Sansa ) ) ))][i] {
	Ygritte /= -420.064;
	Sansa += COLS
}
def TABLE[( protect(betray(-1 - destroy() + -1 / -Jon - COLS)) )][i] {

}
var y = foo(protect(-ROWS,Jon,x))
def protect(Stark,Sansa,Stark){
	-COLS;
	if(-50.64 + y * Ygritte){

} else {
	dog /= Hodor;
	if(Arya * TABLE[-Ygritte * -390.258 + --( -COLS )][destroy()]){
	if(COLS / ( -1 )){
	if(ROWS){
	if(-41){
	Ygritte *= rule(Jon,Ygritte);
	dog *= -rule(protect(-COLS + dog * Arya,TABLE[-89 + ROWS][rule(-y,-foo(COLS),( y ) + ( ROWS ))] / x) - TABLE[ROWS / Sansa][( Hodor )],-TABLE[( -0.81 ) - ( ( Arya ) - ( dog ) )][-64 - ( betray(ROWS) )]) - --TABLE[( -96 )][( -0.59 )]
} else {

}
}
}
}
}
}
def betray(Sansa){
	dog -= Ygritte;
	if(( -850.438 )){
	Ygritte += Hodor;
	if(( -0.88 )){
	Sansa *= ( 1 );
	TABLE[( -mislead(betray(betray(-73,rule(TABLE[1][betray(TABLE[-( -0.31 )][44],-( bar(mislead(-COLS - bar(),dog)) ))],Ygritte * TABLE[ROWS][protect(Sansa,( -COLS * --45 / Ygritte * Arya ) * betray(( ( 0.96 ) ),( ( TABLE[-TABLE[90.935][( Stark )] * -x][-Stark] ) ) + betray(--1)) * COLS)] - -Sansa,TABLE[protect(Stark,COLS,Jon)][( TABLE[Arya][TABLE[( TABLE[COLS][y] )][betray()]] + betray(( --COLS / protect(( betray() ),1,destroy(-40)) ),-betray(-78,protect(( -( ( rule() - ROWS ) ) ),-COLS),( betray(( -Sansa )) ) / -destroy(mislead(TABLE[mislead(y,-0.56 / dog)][0.52],ROWS)) - ---0.16)) )])),y,Stark),y) + 870.1 * -Jon + bar(--1) + foo(-y,( COLS )) / ( ( Jon ) ) * ( -rule(-( destroy() ) * rule(protect(mislead(COLS)))) / protect(( -0.8 )) ) / COLS )][y]
};
	dog
} else {

}
}
var Arya = mislead(( -1 ),foo(0.08,TABLE[x][( protect() )] - Jon - TABLE[Sansa][( ( Hodor ) )]))
assert -0.83 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[x][j] {
	Sansa += ROWS;
	0.84
}
def TABLE[COLS][k] {
	if(( 0.8 )){

};
	-78
}
assert protect(TABLE[Ygritte][TABLE[--protect()][( ( Hodor ) )]]) + y - 420.27 * -foo(Hodor) : "One can not simply parse himself"
def destroy(y,Jon){
	Ygritte;
	( mislead(bar(ROWS - Arya,destroy(0.92,( ---85 / 5 / Ygritte ),TABLE[( mislead(bar(TABLE[--TABLE[ROWS][Arya]][-x],COLS,dog),ROWS) )][-1])),-Jon - ( --0.65 - Jon + dog / -dog - 90.48 * mislead(-bar(-( 1 ),--58,Jon),bar(Arya + COLS,Ygritte,foo(61,( -COLS )))) ) + ( ( 34 ) ),( Ygritte - -78 )) );
	Arya -= 57
}
var Ygritte = Stark
assert ( ROWS ) : "Fear cuts deeper than swords."
def TABLE[rule(6 * -95,ROWS,foo())][j] {
	if(Stark){
	if(18){

} else {
	dog -= dog;
	if(0.49){
	mislead();
	Jon += ROWS
} else {
	Arya -= -COLS + -1 + -4;
	if(98){
	ROWS;
	if(-foo()){
	if(-0.79){
	Ygritte;
	if(( --0.56 )){
	( y ) - betray(Jon,protect())
} else {
	Hodor /= 1
}
}
}
}
}
};
	TABLE[Arya][( 0.75 )] / TABLE[-ROWS / -280.5][( rule(-Ygritte * Arya,-Stark) ) / COLS - -( ( foo() ) )]
}
}
var Sansa = COLS
def rule(y){
	Hodor /= ( COLS )
}
def mislead(Jon){
	Stark += Hodor
}
def TABLE[-Stark][i] {
	Arya += ( x )
}
var x = protect(foo(),betray(( bar(COLS,72) ),-COLS))
def rule(dog,dog){
	( 150.2 ) - -1 + --destroy() - -Stark - 78 - x
}
var Stark = ( y )
var x = 51 + mislead() * destroy(Arya,( -0.65 ))
assert TABLE[mislead(-( betray(TABLE[TABLE[rule(TABLE[destroy(-foo(( -TABLE[Ygritte + ( Stark )][-y] * COLS ) / foo(COLS,betray(-COLS * bar(--0.54),protect(0.44,TABLE[dog][Ygritte]),-38))),( -Jon ),destroy(Jon))][COLS],ROWS)][56]][TABLE[( y )][rule(( --44 ),foo(dog * foo(-( 4 ) * TABLE[destroy(---ROWS,COLS,x)][ROWS],ROWS)))]],1) ),TABLE[TABLE[Arya][Hodor] * Hodor / COLS][( ( -( --510.671 ) ) )])][ROWS] - -Ygritte : "What do we say to the Lord of Death?"
var Stark = -160.628 / foo() / bar(x)
var Arya = ---( TABLE[ROWS][Jon + -destroy(( -betray(1 / -69,( rule() )) / --destroy() / -( ( ROWS ) ) / ( betray() ) * -54 / -mislead(Ygritte,betray(dog,( COLS )),ROWS + ( -bar(TABLE[-3][---0.52 - Jon + --730.133 / Jon],1) - rule(( foo(x,-( betray(ROWS - destroy() + TABLE[y][-16 - Arya],-0.31) )) ),TABLE[( 61 )][Stark]) )) / -48 ))] )
def TABLE[TABLE[foo(COLS,( ROWS + -Stark ),Jon)][0.66]][i] {
	protect();
	if(-0.16 / -0.05){
	Sansa += -( Sansa );
	-COLS;
	if(( Hodor ) + ( ( bar(---1) ) )){
	if(-Stark){
	foo(630.19,Stark) * ( COLS );
	y *= -36
}
} else {
	if(mislead(protect(),TABLE[--30.642][-600.21])){
	x *= Stark
}
}
} else {
	betray();
	0.13
}
}
def destroy(Jon,Arya){

}
def TABLE[x][i] {
	ROWS;
	Arya *= COLS
}
var Sansa = -71
def rule(){
	if(-ROWS){
	x *= 73
} else {
	y *= foo(50.15,dog)
}
}
assert betray(COLS,-x) : "One can not simply parse himself"
assert foo(ROWS) : "Fear cuts deeper than swords."
def TABLE[-protect(destroy(TABLE[mislead(---0.13 + -TABLE[foo(( ( -( 37 ) ) ),-1)][TABLE[TABLE[-bar(-bar(-0.2),TABLE[y][bar(-Sansa)])][TABLE[( TABLE[( COLS )][( ( protect(Hodor,dog) ) )] ) / mislead()][TABLE[( ( TABLE[-1][20.793] ) )][bar(-34,( TABLE[Ygritte][( 52 )] ))]]]][( ROWS + -57 )]] / rule(1,protect()),Hodor,Ygritte) * 0.28][( rule(rule(protect(y + ROWS,Arya) / protect(( ( ( mislead(-rule(-20),-( Stark ) / 820.3932 * ROWS) ) * -1 ) )),foo(COLS,Ygritte,-310.9909),-( mislead(-270.854) / --260.79 + ( -0.03 ) )),-0.18,TABLE[-Hodor - 8][TABLE[y][( Ygritte ) / 93]]) )] / betray(ROWS) * ( --rule(foo(protect(Ygritte,-40),-60,COLS)) ),-71,rule(-17,( foo(( Ygritte )) ),Jon)),TABLE[TABLE[x][-51]][---TABLE[-11][370.5] * ( ( COLS ) ) + TABLE[TABLE[Sansa][-85] / Hodor][COLS] / --34])][k] {
	( COLS );
	Ygritte /= -1
}
assert Ygritte : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert destroy() : "Fear cuts deeper than swords."
assert Jon - TABLE[foo(85,dog)][96] : "Winter is coming"
var Jon = mislead(-dog - ROWS + ROWS)
def protect(){
	( 950.7 );
	if(Arya){
	if(mislead(rule(-0.62,( -y )))){
	Arya /= --0.46;
	protect(--65);
	Jon /= 0.69
} else {

};
	1
}
}
assert -ROWS : "Winter is coming"
def TABLE[dog][i] {
	-Arya;
	if(-81){

} else {
	Ygritte += dog;
	if(Arya){

}
}
}
var Ygritte = COLS
def protect(Sansa,x,Arya){
	if(-COLS){

} else {
	Hodor /= ROWS
}
}
var y = COLS
def TABLE[Hodor][i] {
	( 540.35 );
	if(destroy(( ROWS ),Jon,( 160.377 ))){
	if(0.25){

} else {
	foo(--protect(destroy(--foo(TABLE[Arya][-1] * Sansa,( COLS )) * mislead(protect(-0.82) + -0.39 - betray(61,Ygritte)) + TABLE[( mislead(Hodor) )][-ROWS * 15],-mislead(Sansa,( bar(rule(-70),destroy(0.83,83 - COLS)) ))) - -10.7,destroy(-( 29 ),-COLS)) / ROWS);
	Arya += --ROWS;
	protect(-42,Stark * ( x ))
}
} else {
	Stark += ( -rule(-( -600.4703 ) + TABLE[bar(bar(COLS))][COLS],mislead()) )
}
}
assert COLS : "One can not simply parse himself"
var Stark = bar(-0.94) * ( foo() )
var Jon = --bar() - --75 / Jon
def TABLE[TABLE[--34][( --62 )]][i] {
	x *= COLS;
	( 52 ) + 0.18
}
assert TABLE[-( Sansa )][( -Ygritte )] : "What do we say to the Lord of Death?"
def TABLE[bar(x,Hodor,-0.99) * destroy(-betray(Jon - protect(mislead(),-( COLS )),( 0.39 - ( -750.2 ) * mislead(-0.45) ),--foo(-63 + rule())),-30)][j] {

}
assert -0.85 : "Nothing burns like the cold."
var Sansa = -Ygritte
def TABLE[Jon][k] {
	Jon -= TABLE[-( ROWS )][( 100.182 )];
	---( betray(mislead(dog)) ) * ROWS * bar(10) / 1 - 1
}
def TABLE[Jon][i] {
	if(( COLS / ( bar(0.93 - ( 1 + ROWS )) ) )){
	Arya /= bar(TABLE[-COLS / 0.61][protect(x)]);
	rule(betray(-0.68,Stark) / -0.71 * TABLE[-( -COLS )][COLS] * bar(dog),-1,bar(ROWS,bar(( -( ( 97 ) ) ),TABLE[x][( -1 )],--0.95),-54 * COLS - Hodor));
	if(bar(mislead(( Ygritte * ( --60.7214 ) ),y,-( TABLE[y][( ROWS ) + -( TABLE[( rule() )][protect(-COLS,-12,TABLE[TABLE[-TABLE[COLS][-rule(dog)] + destroy()][( destroy(ROWS,-Arya - -COLS + ( y + ROWS - 83 ) * ( -( COLS ) )) )]][TABLE[Jon][--1000.02]])] )] * Ygritte )),Jon,( -80 )) / -Hodor / ( -69 )){

} else {
	--TABLE[-mislead(-protect(rule(Hodor,ROWS / Ygritte),-( TABLE[COLS][TABLE[-0.04][--ROWS - bar(( -0.04 )) + ( destroy(dog,( ROWS )) )]] ))) * ROWS][Sansa]
}
} else {
	if(--0.26){
	0.94;
	Stark *= ( x )
}
}
}
def rule(Stark,y){

}
def TABLE[--20.157 / Stark][j] {
	y *= y * ROWS;
	ROWS
}
var Hodor = -0.85
def TABLE[-ROWS - -66][k] {
	if(( ROWS )){
	-COLS * -28;
	betray(-0.82);
	x
}
}
def bar(Ygritte){
	Arya *= destroy();
	if(x){
	y += COLS
} else {
	if(90){

} else {
	betray(30.75 / --86 + -rule(Hodor));
	dog += TABLE[foo()][Ygritte - 68]
};
	Jon += COLS
};
	TABLE[Ygritte][( ( ROWS ) )]
}
var dog = ROWS
def TABLE[TABLE[0.68][-foo(-1,mislead(Sansa * Arya)) * -13 + -foo(ROWS,destroy(Jon,-0.96 + --COLS),Jon)]][k] {
	--0.71;
	if(COLS){
	Jon += TABLE[betray(y * -ROWS - -240.05 + -Sansa / 4 - 0.71 - ( --840.951 ) * bar(0.62))][dog];
	Sansa -= ( COLS )
}
}
def betray(Arya,Ygritte){
	if(-0.7){
	Sansa += mislead(Arya);
	if(( --1 )){
	Ygritte
} else {
	if(( bar(destroy(( ( -Stark ) ) / Sansa),( -750.0649 )) )){
	if(-0.86){
	x;
	if(-45){

} else {
	Stark;
	Jon *= destroy(TABLE[Sansa][COLS],TABLE[-0.35][-x + ( dog + ( ROWS ) )],Jon)
}
}
};
	( Stark )
};
	Hodor /= dog
} else {
	if(Hodor){

}
};
	Stark / destroy(Arya)
}
def betray(){
	y -= 0.96;
	Hodor *= TABLE[foo()][-x];
	if(0.41 + TABLE[( -mislead(--0.05,TABLE[Arya][destroy(( ROWS ),y,( 88 + -TABLE[52][foo(protect(-1))] + -0.17 - -bar(COLS) * Hodor * TABLE[( TABLE[( 50.761 )][ROWS] )][Sansa] ))]) )][( 0.71 )] - -betray(Hodor,betray(-20,-690.02)) / ( ( -0.43 ) )){
	( ( 1 ) )
} else {
	Ygritte += 660.65 * x + ( rule(TABLE[TABLE[-----54][-660.01]][540.66],ROWS) )
}
}
def protect(Jon,Jon){
	Ygritte -= ( TABLE[( Ygritte )][Sansa] )
}
def TABLE[-( --32 )][i] {
	COLS;
	if(-Ygritte){
	if(dog){
	y *= ( -31 / --destroy(-0.14) );
	TABLE[-( ( -0.84 ) ) / mislead(( -destroy(---foo(COLS) + Arya / bar(betray(bar(Sansa,rule(Hodor,bar(-72,Sansa),( bar(-Arya,-0.16) ))),( foo(( -1 ),mislead(51,( -44 )) * ---Sansa - ( Hodor ) * ( COLS )) * ( -bar() ) / bar(( bar(-TABLE[Stark][-Sansa / Hodor] * foo(-TABLE[( ( protect(Stark,0.48) ) )][-( Sansa ) * -Hodor + ROWS],( --0.22 )),( ( destroy(-28) ) )) ) / TABLE[Sansa][COLS] - ( rule(-1,Arya) )) ),rule(-1,betray(COLS,destroy(Ygritte,-rule(-TABLE[rule(-70.69)][( COLS )] / 260.9937) - -COLS) * Arya,( -COLS / Hodor * -( Stark - ----( -0.02 ) * bar() + -destroy() ) * -rule(y,-0.78) + Jon ) * ROWS)))) * 0.3) ),( dog ),ROWS / -( ( ROWS ) ) + Sansa / -1 + ( -( -660.224 * Sansa ) ))][( COLS )];
	if(-( COLS ) - y){
	foo(( -330.18 ),rule(-0.87));
	x += 1;
	Ygritte -= -TABLE[( Jon ) / ROWS][betray(-( --0.36 ))] - ROWS + ROWS
} else {
	dog /= --Sansa;
	if(ROWS){
	COLS - -( -COLS ) + Stark * mislead() * ( ROWS - bar(-x - ROWS + 0.85 / Arya) )
} else {
	Stark -= TABLE[--840.42][x] / -TABLE[0.43 + ( -53 )][betray(-ROWS / mislead()) * Jon] - bar()
}
}
} else {
	if(COLS){
	if(COLS + ( Stark * x )){
	-4
} else {
	Jon *= -( 0.48 )
};
	Jon;
	if(rule(ROWS,x)){
	x /= dog;
	x *= ( TABLE[( ( --ROWS ) )][( -( 810.751 ) )] )
} else {
	y *= TABLE[( TABLE[( TABLE[ROWS][Hodor] )][destroy(destroy(Arya * COLS,Stark / ROWS + --Stark - Sansa / Stark * ( ( -Stark ) )))] )][Ygritte];
	if(--betray(COLS) - mislead(-80,( 0.86 ))){
	Stark *= protect(-170.46);
	-bar(0.67) - -( 12 );
	---0.49 - -destroy(rule(15,( -900.97 ),1))
} else {
	if(x){

};
	Hodor *= -0.15;
	if(-bar(x,( Ygritte ),-Sansa)){
	rule(protect(),dog - TABLE[( dog )][Hodor],( ( COLS ) ));
	COLS
}
}
}
};
	if(COLS){
	COLS;
	rule(betray(48,Jon)) * 0.8 - destroy(ROWS);
	y *= ( --99 )
}
}
};
	-ROWS - ROWS / -1
}
def TABLE[bar(-Jon)][i] {
	if(( -77 - ( -bar(-0.8) * Stark ) )){
	if(-0.6){
	COLS;
	foo(-COLS,( ROWS ))
} else {

};
	x *= rule(TABLE[mislead(ROWS,-0.75)][Jon] * -rule(-bar() / protect(Ygritte,ROWS)) - ( -rule(bar(0.02,-76,( -73 )),( 95 )) / COLS ));
	Arya += ( ( 1 ) - x )
} else {
	Arya /= COLS;
	ROWS * COLS
};
	Sansa -= -( ROWS )
}
def TABLE[-bar()][i] {
	if(COLS){
	if(1){
	Arya;
	Arya *= COLS;
	foo(betray())
} else {
	Ygritte -= -( Hodor );
	-9
};
	y /= -Arya + ROWS;
	-0.26
}
}
var Hodor = ROWS
var Stark = ROWS
var x = -520.68
var y = Ygritte - COLS - y
def protect(){
	if(y / rule(0.44)){
	Stark -= -28;
	x -= Jon
}
}
def TABLE[( -0.46 )][j] {
	if(rule()){

} else {
	TABLE[Hodor][-COLS]
};
	if(TABLE[Arya][-0.58]){
	y *= ROWS
}
}
var Jon = TABLE[foo(-0.58,-500.8015) / ( ( -Ygritte ) / ( x ) ) * ( ( rule(( --490.78 )) ) )][bar()]
var Arya = -2
def TABLE[-1][i] {

}
def TABLE[bar(370.76)][i] {
	bar(-destroy(bar(),( 0.16 ),( COLS )),COLS,mislead(( -44 / Ygritte * ROWS ),( TABLE[TABLE[rule(( -dog ),destroy(Arya)) - ( --TABLE[Jon][( 340.23 )] ) - ROWS / x][ROWS]][Jon] )) + ( x + ( ---COLS ) ) - -0.08);
	Arya /= ( -mislead(Sansa,( x ) / Arya) )
}
assert -betray(ROWS,TABLE[foo(ROWS)][-97 - -Stark],foo(ROWS,COLS,( -0.59 ))) : "Nothing burns like the cold."
def rule(x,dog,x){

}
def foo(y,Ygritte){
	ROWS
}
assert ( -0.26 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert ( -1 ) : "Winter is coming"
assert ( ( Stark - ( ROWS ) ) - ( COLS ) ) : "Fear cuts deeper than swords."
assert 480.08 : "Fear cuts deeper than swords."
def foo(x,x){

}
var Ygritte = -0.6
var x = Hodor
assert Stark : "Fear cuts deeper than swords."
assert ( ( -810.939 ) ) + ( betray(ROWS,410.571,-1) ) : "Winter is coming"
assert x : "One can not simply parse himself"
assert 29 : "Fear cuts deeper than swords."
def protect(y){

}
var dog = COLS
def TABLE[( destroy(COLS,dog) * ( -( dog ) ) )][j] {

}
def TABLE[61][i] {
	-Sansa;
	Hodor *= ROWS;
	Hodor += betray(COLS,( mislead(-( -( mislead(-dog,-Stark - -ROWS) ) ) - COLS) - ( ( -protect() * Ygritte ) ) ))
}
assert --( -( ( 10 ) ) ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
assert mislead(-650.9,betray(-1),bar()) - COLS : "One can not simply parse himself"
assert COLS / ( ROWS ) : "Nothing burns like the cold."
def TABLE[-1][k] {
	if(--Arya){
	if(COLS){
	if(y){
	COLS * -TABLE[dog][0.55] / COLS;
	y += x
}
};
	Arya -= -TABLE[57][-Arya];
	destroy(betray(),80.178,Hodor * TABLE[Hodor][dog] - TABLE[( -protect(Sansa,( -ROWS - 1 ),TABLE[protect()][--ROWS / Jon - -1]) / -( mislead(( betray(-( -bar(protect(8) + Sansa,18) )) / ( ( ( ( x * rule() ) ) ) ) ),( -Sansa )) ) )][dog])
} else {
	Ygritte /= Stark
}
}
def bar(Ygritte){
	bar(bar(),rule(destroy(-COLS - ( 0.34 ),TABLE[-0.46 + rule(0.22) - -TABLE[-( Arya )][-ROWS]][x]),mislead(dog)))
}
def TABLE[-3][i] {
	--1;
	Ygritte -= foo(Stark,Jon) * -50;
	if(( -destroy() ) + -Arya / Ygritte * ( Hodor ) - COLS){
	if(-Ygritte){

}
}
}
def TABLE[50][i] {
	-Arya
}
assert ( 47 ) : "Fear cuts deeper than swords."
def destroy(Sansa){

}
var dog = ( -1 )
var Jon = Stark
def rule(Ygritte,Jon,y){
	if(x){
	Sansa *= mislead(Stark,Jon) - ( Ygritte ) * ( ( -77 ) ) - 1 * COLS;
	if(-( -( ( ( 1 ) ) ) + mislead(0.78,-( ( 88 ) ) - 0.87 / bar(Ygritte,foo(TABLE[foo(( y ))][-Sansa])) * rule(( -39 ),( foo(--Ygritte / destroy(-Arya / Ygritte,23),0.42) * protect(rule(-62),x) / ROWS - 220.87 - x * -TABLE[13][-0.68 * ( rule() )] ))) )){

} else {
	if(-dog){
	if(ROWS - ROWS){
	x *= 350.72;
	x *= protect(( TABLE[( -Jon ) + TABLE[( -0.58 )][x]][( -1 )] ),Hodor * rule(dog))
};
	if(x){
	Hodor += -( 40.864 )
};
	( ( Stark ) )
} else {
	Arya /= dog;
	if(0.89){
	-0.81 - protect(x,dog,--0.78);
	if(TABLE[( Jon ) / 43][Hodor]){
	Sansa -= -( 99 )
}
}
};
	Stark *= -betray(ROWS - --( -430.24 ) / ( -1 ) - -destroy(( ( ROWS ) )) - COLS,-y,--Hodor - -96) - Stark
}
};
	if(dog + ( TABLE[1][-21] / -1 )){

};
	if(-mislead(COLS)){
	Arya;
	if(-( betray(foo(80)) )){
	Hodor /= Hodor;
	-0.65;
	if(( 840.1873 )){

} else {
	betray()
}
}
}
}
var Ygritte = -Sansa
assert mislead() : "Winter is coming"
def TABLE[0.28][i] {
	TABLE[betray(bar(rule(),-0.24 * COLS))][mislead(COLS,Sansa / Ygritte)];
	y -= y;
	if(-12){
	Hodor *= dog
} else {
	y *= Hodor;
	rule(( -780.4 ));
	mislead(bar(1))
}
}
def foo(y){
	COLS
}
def foo(Jon,Stark){
	77;
	if(ROWS){
	y *= protect(( -600.1 ))
} else {

}
}
def TABLE[-( Arya )][j] {
	if(Ygritte){

};
	Ygritte /= Arya;
	Sansa
}
def TABLE[0.98][j] {
	Stark;
	-860.16;
	-TABLE[1][-0.37] / -mislead() - dog
}
def TABLE[destroy(x + Jon)][j] {

}
def TABLE[x][j] {

}
assert 1 : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
def TABLE[0.28][k] {
	( foo(foo(),-580.3436,bar(( TABLE[( --TABLE[Sansa][mislead(-0.41,-y / --Stark * COLS - Jon,-betray(x) * ROWS) + -770.58] )][-840.2] ),( COLS ))) );
	-0.82
}
assert 210.736 * mislead(-rule(-betray(bar(destroy(--0.71))) / COLS,COLS) - COLS / bar(COLS) / -0.05,ROWS,( -TABLE[Arya][( ROWS )] ) - mislead(TABLE[-0.41][ROWS],ROWS)) - --protect(1,( mislead(( 540.8945 / TABLE[Ygritte][destroy(-13,ROWS,ROWS) * bar(-1,TABLE[( foo(( -180.315 ) + ( bar() ),2) )][COLS] / --1) + protect(( 630.5 ),( destroy() ))] ) * ( ( Jon ) ),-TABLE[( TABLE[( ( 0.57 ) )][TABLE[--0.93 - ROWS][TABLE[ROWS][-0.35]]] )][0.51 / -COLS]) )) + x * Hodor : "Nothing burns like the cold."
var x = ROWS
assert --( TABLE[destroy(( ----dog ))][-x] / -destroy(( Stark ),58,( -62 )) ) : "Fear cuts deeper than swords."
def TABLE[-betray(( ROWS ))][k] {
	Sansa / --22
}
def TABLE[Jon][j] {
	if(Ygritte){
	Ygritte -= bar(( -( foo(ROWS,foo(-1,( foo(Sansa * betray(-ROWS) * ( destroy() ) * dog) )) / ( COLS ) * ROWS,y) ) ) + 93);
	if(-12){
	Ygritte /= -x;
	Arya /= -51
}
};
	y += --0.32
}
assert Stark : "What do we say to the Lord of Death?"
var y = -470.113 - 1 * protect(COLS + 80) * mislead()
assert mislead(-ROWS,( COLS - TABLE[-Arya][protect(mislead(dog))] )) : "Fear cuts deeper than swords."
assert Jon : "Winter is coming"
assert -0.56 : "Nothing burns like the cold."
def TABLE[mislead(( -1 ),( ( 0.63 / foo() ) + -93 ))][j] {
	( ( TABLE[--protect(Stark,foo(( -0.06 )))][-( 0.06 )] / dog ) );
	Sansa /= Stark + Jon
}
var Sansa = COLS
assert ( ( ( Arya - Hodor ) + Ygritte ) ) * ( 7 ) : "A mind needs books as a sword needs a whetstone, if it is to keep its edge."
var Arya = TABLE[dog][destroy(TABLE[Stark][x],-COLS,ROWS) - -Ygritte]
var Sansa = ROWS
var Stark = -0.81 * TABLE[y][-780.76]
assert 31 * COLS : "What do we say to the Lord of Death?"
var Stark = TABLE[TABLE[destroy(( Jon ),Hodor)][TABLE[ROWS][COLS] + destroy(COLS + bar(foo(COLS)) / ( -430.3 ),--TABLE[( ( TABLE[mislead(Sansa)][Ygritte] ) )][foo(--41,foo(protect(75),-43))] - dog,( -( ( ( Arya ) ) ) ))]][Sansa]
assert -COLS : "Nothing burns like the cold."
assert y : "Winter is coming"
def TABLE[ROWS][k] {
	if(( Sansa )){
	if(COLS / ( ( Sansa ) )){
	if(Hodor){

} else {
	( ROWS )
}
};
	if(( rule(75,( ( ( Stark ) ) )) )){
	Hodor += Stark;
	Hodor += -0.45 * ( -1 ) * rule(ROWS,Stark,ROWS)
} else {

}
};
	Stark *= ROWS
}
def protect(){
	Sansa += Arya;
	Stark *= mislead(( Arya ))
}
def bar(Sansa,y){
	if(( bar(Stark) )){
	if(--( foo(( mislead(( ROWS )) ) / ( ( ( -( -COLS ) / ( ROWS ) * Jon / TABLE[y * ( ( destroy(( TABLE[--destroy(--y,( Arya ) / Ygritte + Jon,( ( Arya ) ))][( --0.84 )] ),TABLE[TABLE[( -6 )][Sansa]][500.982]) ) )][Sansa] ) ) ),-700.8554) ) - Jon / Stark / TABLE[mislead(( ( ( ( dog ) * ( -1 ) ) ) ),-64)][TABLE[Stark][-46]]){
	if(rule(-940.47,( -570.91 ))){
	if(Ygritte){
	Ygritte;
	if(( Arya )){
	-foo();
	if(( --bar(ROWS,0.23) * betray(-( ROWS )) / COLS )){
	y -= Sansa;
	rule(dog,dog) + ( COLS )
}
} else {

};
	Sansa *= x
};
	Ygritte += mislead(ROWS,--destroy())
}
} else {
	y -= y;
	Stark += ( ( dog ) )
};
	Ygritte /= destroy()
} else {
	Hodor /= y
};
	if(-TABLE[( ROWS )][-TABLE[-mislead(Arya / 1,570.4858,COLS) / COLS][mislead()]]){
	mislead(bar(COLS),( betray(Hodor,Hodor) ) - 0.09,Stark)
}
}
def TABLE[rule(-0.91 - ( -0.06 ))][j] {
	Ygritte /= protect()
}
var x = -1
def TABLE[--48][j] {
	if(y){
	if(( -0.14 - ( ( -0.8 ) ) )){
	if(Stark){
	if(COLS){
	1
} else {
	( -COLS ) * Sansa / Stark;
	mislead()
};
	Stark -= -94
};
	if(protect(betray(-72,TABLE[rule(dog,-93,mislead(( ( 100.878 + ( -Stark ) / TABLE[COLS][rule()] ) )))][foo(-48,foo(bar(--Stark,( Jon )) * -0.65,ROWS,Hodor))]),rule(COLS,protect(protect(--Stark))),TABLE[( bar() * 56 ) / destroy()][Ygritte / ( foo(--1,Arya) )])){

};
	if(COLS){
	if(( Arya + Sansa )){
	-460.01 + 750.533 + -( betray(-27) );
	if(TABLE[-( ( -( -foo(ROWS) - Ygritte ) - Hodor + COLS ) )][rule(( Ygritte ))]){
	Hodor -= ( COLS ) - -41
}
} else {

};
	if(( x ) * ( Ygritte )){
	-COLS;
	ROWS;
	Arya += destroy(destroy(( ( Ygritte ) )))
} else {

};
	Jon /= -0.85
} else {
	Stark -= ROWS;
	Sansa -= rule()
}
};
	if(1 - Arya - COLS){
	if(-0.82){
	8;
	--1 + rule(foo(-24,Sansa))
};
	if(Ygritte){
	if(( -( ( Stark ) ) )){
	ROWS
} else {
	Stark *= destroy(Hodor,0.3);
	y -= Sansa
};
	( foo(--19 / Arya,15 - rule() * Jon) )
} else {
	1
}
} else {
	0.26
}
}
}
assert dog : "What do we say to the Lord of Death?"
var Jon = ( 690.213 )
var dog = mislead(( Jon + destroy(mislead(-COLS,Arya,Ygritte),( ( -690.3 ) )) ),foo(),-( --0.48 )) - -COLS
